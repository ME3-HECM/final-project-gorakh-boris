

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 10:30:07 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 18/08/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F67K40 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataBANK0
    80   001670                     __pidataBANK0:
    81                           	callstack 0
    82                           
    83                           ;initializer for _squareDelay
    84   001670  012C               	dw	300
    85                           
    86                           ;initializer for _headbuttDelay
    87   001672  0046               	dw	70
    88                           
    89                           ;initializer for _turn180Delay
    90   001674  01FE               	dw	510
    91                           
    92                           ;initializer for _turnRight135Delay
    93   001676  012C               	dw	300
    94                           
    95                           ;initializer for _turnLeft135Delay
    96   001678  012C               	dw	300
    97                           
    98                           ;initializer for _turnRight90Delay
    99   00167A  00AF               	dw	175
   100                           
   101                           ;initializer for _turnLeft90Delay
   102   00167C  00AF               	dw	175
   103                           
   104                           ;initializer for _manoeuvre_pointer
   105   00167E  DA                 	db	low _trail_manoeuvre
   106                           
   107                           ;initializer for _turningGear
   108   00167F  2A                 	db	42
   109                           
   110                           ;initializer for _topGearRight
   111   001680  20                 	db	32
   112                           
   113                           ;initializer for _topGearLeft
   114   001681  1E                 	db	30
   115                           
   116                           ;initializer for _rampDelay
   117   001682  08                 	db	8
   118                           
   119                           ;initializer for _trail_manoeuvre
   120   001683  01                 	db	1
   121   001684  02                 	db	2
   122   001685  03                 	db	3
   123   001686  04                 	db	4
   124   001687  05                 	db	5
   125   001688  06                 	db	6
   126   001689  07                 	db	7
   127   00168A  08                 	db	8
   128   00168B  09                 	db	9
   129   00168C  00                 	db	0
   130   00168D  01                 	db	1
   131   00168E  02                 	db	2
   132   00168F  03                 	db	3
   133   001690  04                 	db	4
   134   001691  05                 	db	5
   135   001692  06                 	db	6
   136   001693  07                 	db	7
   137   001694  08                 	db	8
   138   001695  09                 	db	9
   139   001696  00                 	db	0
   140   000000                     _TX4REG	set	3812
   141   000000                     _RC4STAbits	set	3815
   142   000000                     _SP4BRGH	set	3814
   143   000000                     _LATEbits	set	3965
   144   000000                     _TRISEbits	set	3973
   145   000000                     _LATGbits	set	3967
   146   000000                     _TRISGbits	set	3975
   147   000000                     _LATFbits	set	3966
   148   000000                     _LATHbits	set	3968
   149   000000                     _TRISFbits	set	3974
   150   000000                     _TRISHbits	set	3976
   151   000000                     _SSP2CON2bits	set	3802
   152   000000                     _RX4PPS	set	3605
   153   000000                     _SSP2CLKPPS	set	3612
   154   000000                     _SSP2DATPPS	set	3613
   155   000000                     _RC7PPS	set	3689
   156   000000                     _RE2PPS	set	3700
   157   000000                     _LATAbits	set	3961
   158   000000                     _LATDbits	set	3964
   159   000000                     _TRISDbits	set	3972
   160   000000                     _PORTFbits	set	3982
   161   000000                     _T2PR	set	4028
   162   000000                     _T2CONbits	set	4029
   163   000000                     _CCPR2H	set	4006
   164   000000                     _CCPR1H	set	4010
   165   000000                     _TRISCbits	set	3971
   166   000000                     _TRISAbits	set	3969
   167   000000                     _LATCbits	set	3963
   168   000000                     _RE4PPS	set	3702
   169   000000                     _RG6PPS	set	3720
   170   000000                     _RD5PPS	set	3695
   171   000000                     _ANSELDbits	set	3751
   172   000000                     _SSP2ADD	set	3798
   173   000000                     _SSP2CON1bits	set	3801
   174   000000                     _CCPR4H	set	3873
   175   000000                     _CCPR3H	set	3877
   176   000000                     _TMR0L	set	4051
   177   000000                     _TMR0H	set	4052
   178   000000                     _T0CON0bits	set	4053
   179   000000                     _T0CON1bits	set	4054
   180   000000                     _T2CLKCONbits	set	4031
   181   000000                     _T2HLTbits	set	4030
   182   000000                     _CCP1CONbits	set	4011
   183   000000                     _CCPTMRS0bits	set	4013
   184   000000                     _CCP2CONbits	set	4007
   185   000000                     _CCP3CONbits	set	3878
   186   000000                     _CCP4CONbits	set	3874
   187   000000                     _RC4REG	set	3811
   188   000000                     _SP4BRGL	set	3813
   189   000000                     _TX4STAbits	set	3816
   190   000000                     _BAUD4CONbits	set	3817
   191   000000                     _SSP2CON2	set	3802
   192   000000                     _SSP2STAT	set	3800
   193   000000                     _ANSELFbits	set	3764
   194   000000                     _SSP2BUF	set	3797
   195   000000                     _PIE0bits	set	3625
   196   000000                     _PIE4bits	set	3629
   197   000000                     _PIR4bits	set	3639
   198   000000                     _RC0PPS	set	3682
   199   000000                     _RD6PPS	set	3696
   200   000000                     _PIR0bits	set	3635
   201   000000                     _INTCONbits	set	4082
   202                           
   203                           	psect	smallconst
   204   000E00                     __psmallconst:
   205                           	callstack 0
   206   000E00  00                 	db	0
   207   000E01                     STR_1:
   208                           
   209                           ; BSR set to: 14
   210   000E01  25                 	db	37
   211   000E02  64                 	db	100	;'d'
   212   000E03  20                 	db	32
   213   000E04  0D                 	db	13
   214   000E05  00                 	db	0
   215   000E06                     STR_2:
   216                           
   217                           ; BSR set to: 14
   218   000E06  25                 	db	37
   219   000E07  64                 	db	100	;'d'
   220   000E08  00                 	db	0
   221   000E09  00                 	db	0	; dummy byte at the end
   222   000000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226   001506                     __pcinit:
   227                           	callstack 0
   228   001506                     start_initialization:
   229                           	callstack 0
   230   001506                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Initialize objects allocated to BANK0 (39 bytes)
   234                           ; load TBLPTR registers with __pidataBANK0
   235   001506  0E70               	movlw	low __pidataBANK0
   236   001508  6EF6               	movwf	tblptrl,c
   237   00150A  0E16               	movlw	high __pidataBANK0
   238   00150C  6EF7               	movwf	tblptrh,c
   239   00150E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   240   001510  6EF8               	movwf	tblptru,c
   241   001512  EE00  F0C7         	lfsr	0,__pdataBANK0
   242   001516  EE10 F027          	lfsr	1,39
   243   00151A                     copy_data0:
   244   00151A  0009               	tblrd		*+
   245   00151C  CFF5 FFEE          	movff	tablat,postinc0
   246   001520  50E5               	movf	postdec1,w,c
   247   001522  50E1               	movf	fsr1l,w,c
   248   001524  E1FA               	bnz	copy_data0
   249                           
   250                           ; Clear objects allocated to BANK1 (60 bytes)
   251   001526  EE01  F000         	lfsr	0,__pbssBANK1
   252   00152A  0E3C               	movlw	60
   253   00152C                     clear_0:
   254   00152C  6AEE               	clrf	postinc0,c
   255   00152E  06E8               	decf	wreg,f,c
   256   001530  E1FD               	bnz	clear_0
   257                           
   258                           ; Clear objects allocated to BANK0 (103 bytes)
   259   001532  EE00  F060         	lfsr	0,__pbssBANK0
   260   001536  0E67               	movlw	103
   261   001538                     clear_1:
   262   001538  6AEE               	clrf	postinc0,c
   263   00153A  06E8               	decf	wreg,f,c
   264   00153C  E1FD               	bnz	clear_1
   265                           
   266                           ; Clear objects allocated to COMRAM (1 bytes)
   267   00153E  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   268   001540                     end_of_initialization:
   269                           	callstack 0
   270   001540                     __end_of__initialization:
   271                           	callstack 0
   272   001540  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273   001542  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274   001544  0100               	movlb	0
   275   001546  EF00  F008         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	bssCOMRAM
   278   00004C                     __pbssCOMRAM:
   279                           	callstack 0
   280   00004C                     _TxBufWriteCnt:
   281                           	callstack 0
   282   00004C                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285   000060                     __pbssBANK0:
   286                           	callstack 0
   287   000060                     _dbuf:
   288                           	callstack 0
   289   000060                     	ds	32
   290   000080                     _trail_timer_low:
   291                           	callstack 0
   292   000080                     	ds	20
   293   000094                     _trail_timer_high:
   294                           	callstack 0
   295   000094                     	ds	20
   296   0000A8                     _EUSART4RXbuf:
   297                           	callstack 0
   298   0000A8                     	ds	20
   299   0000BC                     _nout:
   300                           	callstack 0
   301   0000BC                     	ds	2
   302   0000BE                     _width:
   303                           	callstack 0
   304   0000BE                     	ds	2
   305   0000C0                     _prec:
   306                           	callstack 0
   307   0000C0                     	ds	2
   308   0000C2                     _flags:
   309                           	callstack 0
   310   0000C2                     	ds	1
   311   0000C3                     _backtrack:
   312                           	callstack 0
   313   0000C3                     	ds	1
   314   0000C4                     _TxBufReadCnt:
   315                           	callstack 0
   316   0000C4                     	ds	1
   317   0000C5                     _RxBufReadCnt:
   318                           	callstack 0
   319   0000C5                     	ds	1
   320   0000C6                     _RxBufWriteCnt:
   321                           	callstack 0
   322   0000C6                     	ds	1
   323                           
   324                           	psect	dataBANK0
   325   0000C7                     __pdataBANK0:
   326                           	callstack 0
   327   0000C7                     _squareDelay:
   328                           	callstack 0
   329   0000C7                     	ds	2
   330   0000C9                     _headbuttDelay:
   331                           	callstack 0
   332   0000C9                     	ds	2
   333   0000CB                     _turn180Delay:
   334                           	callstack 0
   335   0000CB                     	ds	2
   336   0000CD                     _turnRight135Delay:
   337                           	callstack 0
   338   0000CD                     	ds	2
   339   0000CF                     _turnLeft135Delay:
   340                           	callstack 0
   341   0000CF                     	ds	2
   342   0000D1                     _turnRight90Delay:
   343                           	callstack 0
   344   0000D1                     	ds	2
   345   0000D3                     _turnLeft90Delay:
   346                           	callstack 0
   347   0000D3                     	ds	2
   348   0000D5                     _manoeuvre_pointer:
   349                           	callstack 0
   350   0000D5                     	ds	1
   351   0000D6                     _turningGear:
   352                           	callstack 0
   353   0000D6                     	ds	1
   354   0000D7                     _topGearRight:
   355                           	callstack 0
   356   0000D7                     	ds	1
   357   0000D8                     _topGearLeft:
   358                           	callstack 0
   359   0000D8                     	ds	1
   360   0000D9                     _rampDelay:
   361                           	callstack 0
   362   0000D9                     	ds	1
   363   0000DA                     _trail_manoeuvre:
   364                           	callstack 0
   365   0000DA                     	ds	20
   366                           
   367                           	psect	bssBANK1
   368   000100                     __pbssBANK1:
   369                           	callstack 0
   370   000100                     _EUSART4TXbuf:
   371                           	callstack 0
   372   000100                     	ds	60
   373                           
   374                           	psect	cstackBANK0
   375   0000EE                     __pcstackBANK0:
   376                           	callstack 0
   377   0000EE                     main@motorL:
   378                           	callstack 0
   379                           
   380                           ; 9 bytes @ 0x0
   381   0000EE                     	ds	9
   382   0000F7                     main@motorR:
   383                           	callstack 0
   384                           
   385                           ; 9 bytes @ 0x9
   386   0000F7                     	ds	9
   387                           
   388                           	psect	cstackCOMRAM
   389   000001                     __pcstackCOMRAM:
   390                           	callstack 0
   391   000001                     ??_ISR:
   392   000001                     
   393                           ; 1 bytes @ 0x0
   394   000001                     	ds	1
   395   000002                     ??_I2C_2_Master_Idle:
   396   000002                     ?___awdiv:
   397                           	callstack 0
   398   000002                     ?___awmod:
   399                           	callstack 0
   400   000002                     sendCharSerial4@charToSend:
   401                           	callstack 0
   402   000002                     initDCmotorsPWM@PWMperiod:
   403                           	callstack 0
   404   000002                     ___awdiv@dividend:
   405                           	callstack 0
   406   000002                     ___awmod@dividend:
   407                           	callstack 0
   408   000002                     fputc@c:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x1
   412   000002                     	ds	1
   413   000003                     I2C_2_Master_Write@data_byte:
   414                           	callstack 0
   415   000003                     sendStringSerial4@string:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419   000003                     	ds	1
   420   000004                     color_writetoaddr@value:
   421                           	callstack 0
   422   000004                     fputc@fp:
   423                           	callstack 0
   424   000004                     ___awdiv@divisor:
   425                           	callstack 0
   426   000004                     ___awmod@divisor:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x3
   430   000004                     	ds	1
   431   000005                     ??_fputc:
   432   000005                     color_writetoaddr@address:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x4
   436   000005                     	ds	1
   437   000006                     ??_color_click_init:
   438   000006                     ___awdiv@counter:
   439                           	callstack 0
   440   000006                     ___awmod@counter:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x5
   444   000006                     	ds	1
   445   000007                     ___awdiv@sign:
   446                           	callstack 0
   447   000007                     ___awmod@sign:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451   000007                     	ds	1
   452   000008                     ?_abs:
   453                           	callstack 0
   454   000008                     ___awdiv@quotient:
   455                           	callstack 0
   456   000008                     abs@a:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x7
   460   000008                     	ds	2
   461   00000A                     ??_abs:
   462                           
   463                           ; 1 bytes @ 0x9
   464   00000A                     	ds	2
   465   00000C                     ?_vfpfcnvrt:
   466                           	callstack 0
   467   00000C                     vfpfcnvrt@fp:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xB
   471   00000C                     	ds	1
   472   00000D                     vfpfcnvrt@fmt:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0xC
   476   00000D                     	ds	1
   477   00000E                     vfpfcnvrt@ap:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xD
   481   00000E                     	ds	1
   482   00000F                     ??_vfpfcnvrt:
   483                           
   484                           ; 1 bytes @ 0xE
   485   00000F                     	ds	1
   486   000010                     vfpfcnvrt@done:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xF
   490   000010                     	ds	1
   491   000011                     vfpfcnvrt@cnt:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x10
   495   000011                     	ds	2
   496   000013                     vfpfcnvrt@cp:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x12
   500   000013                     	ds	1
   501   000014                     vfpfcnvrt@convarg:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x13
   505   000014                     	ds	4
   506   000018                     vfpfcnvrt@c:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x17
   510   000018                     	ds	1
   511   000019                     ?_vfprintf:
   512                           	callstack 0
   513   000019                     vfprintf@fp:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x18
   517   000019                     	ds	1
   518   00001A                     vfprintf@fmt:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x19
   522   00001A                     	ds	1
   523   00001B                     vfprintf@ap:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x1A
   527   00001B                     	ds	1
   528   00001C                     vfprintf@cfmt:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x1B
   532   00001C                     	ds	1
   533   00001D                     ?_sprintf:
   534                           	callstack 0
   535   00001D                     sprintf@s:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x1C
   539   00001D                     	ds	1
   540   00001E                     sprintf@fmt:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x1D
   544   00001E                     	ds	3
   545   000021                     sprintf@ret:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x20
   549   000021                     	ds	2
   550   000023                     sprintf@ap:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x22
   554   000023                     	ds	1
   555   000024                     sprintf@f:
   556                           	callstack 0
   557                           
   558                           ; 12 bytes @ 0x23
   559   000024                     	ds	12
   560   000030                     sendArraySerial4@arr:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x2F
   564   000030                     	ds	1
   565   000031                     ??_sendArraySerial4:
   566                           
   567                           ; 1 bytes @ 0x30
   568   000031                     	ds	1
   569   000032                     sendArraySerial4@tempStr:
   570                           	callstack 0
   571                           
   572                           ; 21 bytes @ 0x31
   573   000032                     	ds	21
   574   000047                     sendArraySerial4@index:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x46
   578   000047                     	ds	1
   579   000048                     sendArraySerial4@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x47
   583   000048                     	ds	2
   584   00004A                     ??_main:
   585                           
   586                           ; 1 bytes @ 0x49
   587   00004A                     	ds	2
   588                           
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 26 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  motorR          9    9[BANK0 ] struct DC_motor
   599 ;;  motorL          9    0[BANK0 ] struct DC_motor
   600 ;;  PWMcycle        2    0        unsigned int 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   611 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   613 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   614 ;;Total ram usage:       20 bytes
   615 ;; Hardware stack levels required when called: 7
   616 ;; This function calls:
   617 ;;		_Timer0_init
   618 ;;		_buggy_lights_init
   619 ;;		_color_click_init
   620 ;;		_initDCmotorsPWM
   621 ;;		_initUSART4
   622 ;;		_sendArraySerial4
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text0
   629   001000                     __ptext0:
   630                           	callstack 0
   631   001000                     _main:
   632                           	callstack 24
   633   001000                     
   634                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   635   001000  0E52               	movlw	82
   636   001002  6E4B               	movwf	(??_main+1)^0,c
   637   001004  0E2B               	movlw	43
   638   001006  6E4A               	movwf	??_main^0,c
   639   001008  0E00               	movlw	0
   640   00100A                     u2357:
   641   00100A  2EE8               	decfsz	wreg,f,c
   642   00100C  D7FE               	bra	u2357
   643   00100E  2E4A               	decfsz	??_main^0,f,c
   644   001010  D7FC               	bra	u2357
   645   001012  2E4B               	decfsz	(??_main+1)^0,f,c
   646   001014  D7FA               	bra	u2357
   647   001016  D000               	nop2	
   648   001018                     
   649                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   650   001018  0E00               	movlw	0
   651   00101A  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   652   00101C  0E63               	movlw	99
   653   00101E  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
   654   001020  EC85  F009         	call	_initDCmotorsPWM	;wreg free
   655   001024                     
   656                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   657   001024  0E00               	movlw	0
   658   001026  0100               	movlb	0	; () banked
   659   001028  6FEE               	movwf	main@motorL& (0+255),b
   660   00102A                     
   661                           ; BSR set to: 0
   662                           ;main.c: 35:     motorL.direction = 1;
   663   00102A  0E01               	movlw	1
   664   00102C  6FEF               	movwf	(main@motorL+1)& (0+255),b
   665   00102E                     
   666                           ; BSR set to: 0
   667                           ;main.c: 36:     motorL.brakemode = 1;
   668   00102E  0E01               	movlw	1
   669   001030  6FF0               	movwf	(main@motorL+2)& (0+255),b
   670   001032                     
   671                           ; BSR set to: 0
   672                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   673   001032  0E00               	movlw	0
   674   001034  6FF2               	movwf	(main@motorL+4)& (0+255),b
   675   001036  0E63               	movlw	99
   676   001038  6FF1               	movwf	(main@motorL+3)& (0+255),b
   677   00103A                     
   678                           ; BSR set to: 0
   679                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   680   00103A  0EAA               	movlw	170
   681   00103C  6FF3               	movwf	(main@motorL+5)& (0+255),b
   682   00103E  0E0F               	movlw	15
   683   001040  6FF4               	movwf	(main@motorL+6)& (0+255),b
   684   001042                     
   685                           ; BSR set to: 0
   686                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   687   001042  0EA6               	movlw	166
   688   001044  6FF5               	movwf	(main@motorL+7)& (0+255),b
   689   001046  0E0F               	movlw	15
   690   001048  6FF6               	movwf	(main@motorL+8)& (0+255),b
   691   00104A                     
   692                           ; BSR set to: 0
   693                           ;main.c: 41:     motorR.power = 0;
   694   00104A  0E00               	movlw	0
   695   00104C  6FF7               	movwf	main@motorR& (0+255),b
   696   00104E                     
   697                           ; BSR set to: 0
   698                           ;main.c: 42:     motorR.direction = 1;
   699   00104E  0E01               	movlw	1
   700   001050  6FF8               	movwf	(main@motorR+1)& (0+255),b
   701   001052                     
   702                           ; BSR set to: 0
   703                           ;main.c: 43:     motorR.brakemode = 1;
   704   001052  0E01               	movlw	1
   705   001054  6FF9               	movwf	(main@motorR+2)& (0+255),b
   706   001056                     
   707                           ; BSR set to: 0
   708                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   709   001056  0E00               	movlw	0
   710   001058  6FFB               	movwf	(main@motorR+4)& (0+255),b
   711   00105A  0E63               	movlw	99
   712   00105C  6FFA               	movwf	(main@motorR+3)& (0+255),b
   713   00105E                     
   714                           ; BSR set to: 0
   715                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   716   00105E  0E25               	movlw	37
   717   001060  6FFC               	movwf	(main@motorR+5)& (0+255),b
   718   001062  0E0F               	movlw	15
   719   001064  6FFD               	movwf	(main@motorR+6)& (0+255),b
   720   001066                     
   721                           ; BSR set to: 0
   722                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   723   001066  0E21               	movlw	33
   724   001068  6FFE               	movwf	(main@motorR+7)& (0+255),b
   725   00106A  0E0F               	movlw	15
   726   00106C  6FFF               	movwf	(main@motorR+8)& (0+255),b
   727   00106E                     
   728                           ; BSR set to: 0
   729                           ;main.c: 48:     buggy_lights_init();
   730   00106E  EC5C  F00A         	call	_buggy_lights_init	;wreg free
   731   001072                     
   732                           ;main.c: 49:     color_click_init();
   733   001072  ECE1  F00A         	call	_color_click_init	;wreg free
   734   001076                     
   735                           ;main.c: 50:     initUSART4();
   736   001076  EC5C  F00B         	call	_initUSART4	;wreg free
   737   00107A                     
   738                           ;main.c: 51:     Timer0_init();
   739   00107A  EC24  F00B         	call	_Timer0_init	;wreg free
   740   00107E                     
   741                           ;main.c: 55:     TRISFbits.TRISF2 = 1;
   742   00107E  8486               	bsf	134,2,c	;volatile
   743   001080                     
   744                           ;main.c: 56:     TRISFbits.TRISF3 = 1;
   745   001080  8686               	bsf	134,3,c	;volatile
   746   001082                     
   747                           ;main.c: 58:     ANSELFbits.ANSELF2 = 0;
   748   001082  010E               	movlb	14	; () banked
   749   001084  95B4               	bcf	180,2,b	;volatile
   750   001086                     
   751                           ; BSR set to: 14
   752                           ;main.c: 59:     ANSELFbits.ANSELF3 = 0;
   753   001086  97B4               	bcf	180,3,b	;volatile
   754   001088                     l3466:
   755                           
   756                           ;main.c: 75:         if (!PORTFbits.RF2) {
   757   001088  B48E               	btfsc	142,2,c	;volatile
   758   00108A  EF49  F008         	goto	u2321
   759   00108E  EF4B  F008         	goto	u2320
   760   001092                     u2321:
   761   001092  EF62  F008         	goto	l3474
   762   001096                     u2320:
   763   001096                     
   764                           ;main.c: 76:             *manoeuvre_pointer = 0;
   765   001096  0100               	movlb	0	; () banked
   766   001098  51D5               	movf	_manoeuvre_pointer& (0+255),w,b
   767   00109A  6ED9               	movwf	fsr2l,c
   768   00109C  6ADA               	clrf	fsr2h,c
   769   00109E  6ADF               	clrf	indf2,c
   770   0010A0                     
   771                           ; BSR set to: 0
   772                           ;main.c: 77:             manoeuvre_pointer ++;
   773   0010A0  2BD5               	incf	_manoeuvre_pointer& (0+255),f,b
   774   0010A2                     
   775                           ; BSR set to: 0
   776                           ;main.c: 78:             LATDbits.LATD7 = !LATDbits.LATD7;
   777   0010A2  AE7C               	btfss	124,7,c	;volatile
   778   0010A4  EF56  F008         	goto	u2331
   779   0010A8  EF5A  F008         	goto	u2330
   780   0010AC                     u2331:
   781   0010AC  6A4A               	clrf	??_main^0,c
   782   0010AE  2A4A               	incf	??_main^0,f,c
   783   0010B0  EF5B  F008         	goto	u2348
   784   0010B4                     u2330:
   785   0010B4  6A4A               	clrf	??_main^0,c
   786   0010B6                     u2348:
   787   0010B6  324A               	rrcf	??_main^0,f,c
   788   0010B8  324A               	rrcf	??_main^0,f,c
   789   0010BA  507C               	movf	124,w,c	;volatile
   790   0010BC  184A               	xorwf	??_main^0,w,c
   791   0010BE  0B7F               	andlw	-129
   792   0010C0  184A               	xorwf	??_main^0,w,c
   793   0010C2  6E7C               	movwf	124,c	;volatile
   794   0010C4                     l3474:
   795                           
   796                           ;main.c: 80:         sendArraySerial4(trail_manoeuvre);
   797   0010C4  0EDA               	movlw	low _trail_manoeuvre
   798   0010C6  6E30               	movwf	sendArraySerial4@arr^0,c
   799   0010C8  ECCD  F009         	call	_sendArraySerial4	;wreg free
   800   0010CC                     
   801                           ;main.c: 81:         _delay((unsigned long)((500)*(64000000/4000.0)));
   802   0010CC  0E29               	movlw	41
   803   0010CE  6E4B               	movwf	(??_main+1)^0,c
   804   0010D0  0E96               	movlw	150
   805   0010D2  6E4A               	movwf	??_main^0,c
   806   0010D4  0E7F               	movlw	127
   807   0010D6                     u2367:
   808   0010D6  2EE8               	decfsz	wreg,f,c
   809   0010D8  D7FE               	bra	u2367
   810   0010DA  2E4A               	decfsz	??_main^0,f,c
   811   0010DC  D7FC               	bra	u2367
   812   0010DE  2E4B               	decfsz	(??_main+1)^0,f,c
   813   0010E0  D7FA               	bra	u2367
   814   0010E2  0000               	nop	
   815   0010E4  EF44  F008         	goto	l3466
   816   0010E8  EF23  F000         	goto	start
   817   0010EC                     __end_of_main:
   818                           	callstack 0
   819                           
   820 ;; *************** function _sendArraySerial4 *****************
   821 ;; Defined at:
   822 ;;		line 50 in file "serial.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  arr             1   47[COMRAM] PTR unsigned char 
   825 ;;		 -> trail_manoeuvre(20), 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  i               2   71[COMRAM] unsigned int 
   828 ;;  tempStr        21   49[COMRAM] unsigned char [21]
   829 ;;  index           1   70[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   839 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   840 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   843 ;;Total ram usage:       26 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; Hardware stack levels required when called: 6
   846 ;; This function calls:
   847 ;;		_sendStringSerial4
   848 ;;		_sprintf
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text1
   855   00139A                     __ptext1:
   856                           	callstack 0
   857   00139A                     _sendArraySerial4:
   858                           	callstack 24
   859   00139A                     
   860                           ;serial.c: 51:     unsigned char index = 0;
   861   00139A  0E00               	movlw	0
   862   00139C  6E47               	movwf	sendArraySerial4@index^0,c
   863                           
   864                           ;serial.c: 54:     char tempStr[20 + 1];;serial.c: 55:     for (unsigned int i = 0; i < 
      +                          20; i++) {
   865   00139E  0E00               	movlw	0
   866   0013A0  6E49               	movwf	(sendArraySerial4@i+1)^0,c
   867   0013A2  0E00               	movlw	0
   868   0013A4  6E48               	movwf	sendArraySerial4@i^0,c
   869   0013A6                     l3392:
   870                           
   871                           ;serial.c: 56:         index += sprintf(&tempStr[index], "%d", arr[i]);
   872   0013A6  5047               	movf	sendArraySerial4@index^0,w,c
   873   0013A8  0F32               	addlw	low sendArraySerial4@tempStr
   874   0013AA  6E1D               	movwf	sprintf@s^0,c
   875   0013AC  0E06               	movlw	low STR_2
   876   0013AE  6E1E               	movwf	sprintf@fmt^0,c
   877   0013B0  5030               	movf	sendArraySerial4@arr^0,w,c
   878   0013B2  2448               	addwf	sendArraySerial4@i^0,w,c
   879   0013B4  6ED9               	movwf	fsr2l,c
   880   0013B6  6ADA               	clrf	fsr2h,c
   881   0013B8  50DF               	movf	indf2,w,c
   882   0013BA  6E31               	movwf	??_sendArraySerial4^0,c
   883   0013BC  5031               	movf	??_sendArraySerial4^0,w,c
   884   0013BE  6E1F               	movwf	(?_sprintf+2)^0,c
   885   0013C0  6A20               	clrf	(?_sprintf+3)^0,c
   886   0013C2  ECA5  F00A         	call	_sprintf	;wreg free
   887   0013C6  501D               	movf	?_sprintf^0,w,c
   888   0013C8  2647               	addwf	sendArraySerial4@index^0,f,c
   889   0013CA                     
   890                           ;serial.c: 57:     }
   891   0013CA  4A48               	infsnz	sendArraySerial4@i^0,f,c
   892   0013CC  2A49               	incf	(sendArraySerial4@i+1)^0,f,c
   893   0013CE  5049               	movf	(sendArraySerial4@i+1)^0,w,c
   894   0013D0  E109               	bnz	u2290
   895   0013D2  0E14               	movlw	20
   896   0013D4  5C48               	subwf	sendArraySerial4@i^0,w,c
   897   0013D6  A0D8               	btfss	status,0,c
   898   0013D8  EFF0  F009         	goto	u2291
   899   0013DC  EFF2  F009         	goto	u2290
   900   0013E0                     u2291:
   901   0013E0  EFD3  F009         	goto	l3392
   902   0013E4                     u2290:
   903   0013E4                     
   904                           ;serial.c: 58:     sendStringSerial4(tempStr);
   905   0013E4  0E32               	movlw	low sendArraySerial4@tempStr
   906   0013E6  6E03               	movwf	sendStringSerial4@string^0,c
   907   0013E8  6A04               	clrf	(sendStringSerial4@string+1)^0,c
   908   0013EA  EC00  F00A         	call	_sendStringSerial4	;wreg free
   909                           
   910                           ;serial.c: 59:     sendStringSerial4(" \r");
   911   0013EE  0E03               	movlw	low (STR_1+2)
   912   0013F0  6E03               	movwf	sendStringSerial4@string^0,c
   913   0013F2  5003               	movf	sendStringSerial4@string^0,w,c
   914   0013F4  A4D8               	btfss	status,2,c
   915   0013F6  0E0E               	movlw	high __smallconst
   916   0013F8  6E04               	movwf	(sendStringSerial4@string+1)^0,c
   917   0013FA  EC00  F00A         	call	_sendStringSerial4	;wreg free
   918   0013FE  0012               	return		;funcret
   919   001400                     __end_of_sendArraySerial4:
   920                           	callstack 0
   921                           
   922 ;; *************** function _sprintf *****************
   923 ;; Defined at:
   924 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  s               1   28[COMRAM] PTR unsigned char 
   927 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
   928 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   929 ;;		 -> STR_3(3), STR_1(5), 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  f              12   35[COMRAM] struct _IO_FILE
   932 ;;  ret             2   32[COMRAM] int 
   933 ;;  ap              1   34[COMRAM] PTR void [1]
   934 ;;		 -> ?_sprintf(2), 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  2   28[COMRAM] int 
   937 ;; Registers used:
   938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;Total ram usage:       19 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 5
   951 ;; This function calls:
   952 ;;		_vfprintf
   953 ;; This function is called by:
   954 ;;		_sendArraySerial4
   955 ;;		_sendIntSerial4
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text2
   960   00154A                     __ptext2:
   961                           	callstack 0
   962   00154A                     _sprintf:
   963                           	callstack 24
   964   00154A  0E1F               	movlw	low (?_sprintf+2)
   965   00154C  6E23               	movwf	sprintf@ap^0,c
   966   00154E  C01D  F024         	movff	sprintf@s,sprintf@f
   967   001552  0E00               	movlw	0
   968   001554  6E28               	movwf	(sprintf@f+4)^0,c
   969   001556  0E00               	movlw	0
   970   001558  6E27               	movwf	(sprintf@f+3)^0,c
   971   00155A  0E00               	movlw	0
   972   00155C  6E2F               	movwf	(sprintf@f+11)^0,c
   973   00155E  0E00               	movlw	0
   974   001560  6E2E               	movwf	(sprintf@f+10)^0,c
   975   001562  0E24               	movlw	low sprintf@f
   976   001564  6E19               	movwf	vfprintf@fp^0,c
   977   001566  C01E  F01A         	movff	sprintf@fmt,vfprintf@fmt
   978   00156A  0E23               	movlw	low sprintf@ap
   979   00156C  6E1B               	movwf	vfprintf@ap^0,c
   980   00156E  EC31  F00A         	call	_vfprintf	;wreg free
   981   001572  C019  F021         	movff	?_vfprintf,sprintf@ret
   982   001576  C01A  F022         	movff	?_vfprintf+1,sprintf@ret+1
   983   00157A  501D               	movf	sprintf@s^0,w,c
   984   00157C  2427               	addwf	(sprintf@f+3)^0,w,c
   985   00157E  6ED9               	movwf	fsr2l,c
   986   001580  6ADA               	clrf	fsr2h,c
   987   001582  6ADF               	clrf	indf2,c
   988   001584  C021  F01D         	movff	sprintf@ret,?_sprintf
   989   001588  C022  F01E         	movff	sprintf@ret+1,?_sprintf+1
   990   00158C  0012               	return		;funcret
   991   00158E                     __end_of_sprintf:
   992                           	callstack 0
   993                           
   994 ;; *************** function _vfprintf *****************
   995 ;; Defined at:
   996 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
   999 ;;		 -> sprintf@f(12), 
  1000 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1001 ;;		 -> STR_3(3), STR_1(5), 
  1002 ;;  ap              1   26[COMRAM] PTR PTR void 
  1003 ;;		 -> sprintf@ap(1), 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1006 ;;		 -> STR_3(3), STR_1(5), 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  2   24[COMRAM] int 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1016 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;Total ram usage:        4 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 4
  1023 ;; This function calls:
  1024 ;;		_vfpfcnvrt
  1025 ;; This function is called by:
  1026 ;;		_sprintf
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text3
  1031   001462                     __ptext3:
  1032                           	callstack 0
  1033   001462                     _vfprintf:
  1034                           	callstack 24
  1035   001462                     
  1036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1037   001462  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1038   001466                     
  1039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1040   001466  0E00               	movlw	0
  1041   001468  0100               	movlb	0	; () banked
  1042   00146A  6FBD               	movwf	(_nout+1)& (0+255),b
  1043   00146C  0E00               	movlw	0
  1044   00146E  6FBC               	movwf	_nout& (0+255),b
  1045                           
  1046                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1047   001470  EF47  F00A         	goto	l3262
  1048   001474                     l3260:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1052   001474  C019  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1053   001478  0E1C               	movlw	low vfprintf@cfmt
  1054   00147A  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  1055   00147C  C01B  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1056   001480  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1057   001484  500C               	movf	?_vfpfcnvrt^0,w,c
  1058   001486  0100               	movlb	0	; () banked
  1059   001488  27BC               	addwf	_nout& (0+255),f,b
  1060   00148A  500D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1061   00148C  23BD               	addwfc	(_nout+1)& (0+255),f,b
  1062   00148E                     l3262:
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1066   00148E  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1067   001492                     	if	1	;There is more than 1 active tblptr byte
  1068   001492  0E0E               	movlw	high __smallconst
  1069   001494  6EF7               	movwf	tblptrh,c
  1070   001496                     	endif
  1071   001496                     	if	0	;tblptru may be non-zero
  1072   001496                     	endif
  1073   001496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1074   001496  0E00               	movlw	low (__smallconst shr (0+16))
  1075   001498  6EF8               	movwf	tblptru,c
  1076   00149A                     	endif
  1077   00149A  0008               	tblrd		*
  1078   00149C  50F5               	movf	tablat,w,c
  1079   00149E  0900               	iorlw	0
  1080   0014A0  A4D8               	btfss	status,2,c
  1081   0014A2  EF55  F00A         	goto	u2251
  1082   0014A6  EF57  F00A         	goto	u2250
  1083   0014AA                     u2251:
  1084   0014AA  EF3A  F00A         	goto	l3260
  1085   0014AE                     u2250:
  1086   0014AE                     
  1087                           ; BSR set to: 0
  1088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1089   0014AE  C0BC  F019         	movff	_nout,?_vfprintf
  1090   0014B2  C0BD  F01A         	movff	_nout+1,?_vfprintf+1
  1091   0014B6                     
  1092                           ; BSR set to: 0
  1093   0014B6  0012               	return		;funcret
  1094   0014B8                     __end_of_vfprintf:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _vfpfcnvrt *****************
  1098 ;; Defined at:
  1099 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  1102 ;;		 -> sprintf@f(12), 
  1103 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  1104 ;;		 -> vfprintf@cfmt(1), 
  1105 ;;  ap              1   13[COMRAM] PTR PTR void 
  1106 ;;		 -> sprintf@ap(1), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  convarg         4   19[COMRAM] struct .
  1109 ;;  cnt             2   16[COMRAM] int 
  1110 ;;  c               1   23[COMRAM] unsigned char 
  1111 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1112 ;;		 -> STR_3(3), STR_1(5), 
  1113 ;;  done            1   15[COMRAM] _Bool 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  2   11[COMRAM] int 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1123 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;Total ram usage:       13 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 3
  1130 ;; This function calls:
  1131 ;;		___awdiv
  1132 ;;		___awmod
  1133 ;;		_abs
  1134 ;;		_fputc
  1135 ;; This function is called by:
  1136 ;;		_vfprintf
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text4
  1141   000E0A                     __ptext4:
  1142                           	callstack 0
  1143   000E0A                     _vfpfcnvrt:
  1144                           	callstack 24
  1145   000E0A                     
  1146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1147   000E0A  0E00               	movlw	0
  1148   000E0C  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1149   000E0E  0E00               	movlw	0
  1150   000E10  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1151   000E12                     
  1152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1153   000E12  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1154   000E14  6ED9               	movwf	fsr2l,c
  1155   000E16  6ADA               	clrf	fsr2h,c
  1156   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1157   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1158   000E1C  0E0E               	movlw	high __smallconst
  1159   000E1E  6EF7               	movwf	tblptrh,c
  1160   000E20                     	endif
  1161   000E20                     	if	0	;tblptru may be non-zero
  1162   000E20                     	endif
  1163   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1164   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1165   000E22  6EF8               	movwf	tblptru,c
  1166   000E24                     	endif
  1167   000E24  0008               	tblrd		*
  1168   000E26  50F5               	movf	tablat,w,c
  1169   000E28  0A25               	xorlw	37
  1170   000E2A  A4D8               	btfss	status,2,c
  1171   000E2C  EF1A  F007         	goto	u2141
  1172   000E30  EF1C  F007         	goto	u2140
  1173   000E34                     u2141:
  1174   000E34  EFE6  F007         	goto	l3232
  1175   000E38                     u2140:
  1176   000E38                     
  1177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1178   000E38  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1179   000E3A  6ED9               	movwf	fsr2l,c
  1180   000E3C  6ADA               	clrf	fsr2h,c
  1181   000E3E  2ADF               	incf	indf2,f,c
  1182   000E40                     
  1183                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1184   000E40  0E00               	movlw	0
  1185   000E42  0100               	movlb	0	; () banked
  1186   000E44  6FBF               	movwf	(_width+1)& (0+255),b
  1187   000E46  0E00               	movlw	0
  1188   000E48  6FBE               	movwf	_width& (0+255),b
  1189   000E4A  C0BE  F0C2         	movff	_width,_flags
  1190   000E4E                     
  1191                           ; BSR set to: 0
  1192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1193   000E4E  69C0               	setf	_prec& (0+255),b
  1194   000E50  69C1               	setf	(_prec+1)& (0+255),b
  1195   000E52                     
  1196                           ; BSR set to: 0
  1197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1198   000E52  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1199   000E54  6ED9               	movwf	fsr2l,c
  1200   000E56  6ADA               	clrf	fsr2h,c
  1201   000E58  50DF               	movf	indf2,w,c
  1202   000E5A  6E13               	movwf	vfpfcnvrt@cp^0,c
  1203   000E5C                     
  1204                           ; BSR set to: 0
  1205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1206   000E5C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1207   000E60                     	if	1	;There is more than 1 active tblptr byte
  1208   000E60  0E0E               	movlw	high __smallconst
  1209   000E62  6EF7               	movwf	tblptrh,c
  1210   000E64                     	endif
  1211   000E64                     	if	0	;tblptru may be non-zero
  1212   000E64                     	endif
  1213   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1214   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1215   000E66  6EF8               	movwf	tblptru,c
  1216   000E68                     	endif
  1217   000E68  0008               	tblrd		*
  1218   000E6A  50F5               	movf	tablat,w,c
  1219   000E6C  0A64               	xorlw	100
  1220   000E6E  B4D8               	btfsc	status,2,c
  1221   000E70  EF3C  F007         	goto	u2151
  1222   000E74  EF3E  F007         	goto	u2150
  1223   000E78                     u2151:
  1224   000E78  EF4E  F007         	goto	l3196
  1225   000E7C                     u2150:
  1226   000E7C                     
  1227                           ; BSR set to: 0
  1228   000E7C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1229   000E80                     	if	1	;There is more than 1 active tblptr byte
  1230   000E80  0E0E               	movlw	high __smallconst
  1231   000E82  6EF7               	movwf	tblptrh,c
  1232   000E84                     	endif
  1233   000E84                     	if	0	;tblptru may be non-zero
  1234   000E84                     	endif
  1235   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1236   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1237   000E86  6EF8               	movwf	tblptru,c
  1238   000E88                     	endif
  1239   000E88  0008               	tblrd		*
  1240   000E8A  50F5               	movf	tablat,w,c
  1241   000E8C  0A69               	xorlw	105
  1242   000E8E  A4D8               	btfss	status,2,c
  1243   000E90  EF4C  F007         	goto	u2161
  1244   000E94  EF4E  F007         	goto	u2160
  1245   000E98                     u2161:
  1246   000E98  EFDC  F007         	goto	l3226
  1247   000E9C                     u2160:
  1248   000E9C                     l3196:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1252   000E9C  500E               	movf	vfpfcnvrt@ap^0,w,c
  1253   000E9E  6ED9               	movwf	fsr2l,c
  1254   000EA0  6ADA               	clrf	fsr2h,c
  1255   000EA2  0E02               	movlw	2
  1256   000EA4  26DF               	addwf	indf2,f,c
  1257   000EA6  5CDF               	subwf	indf2,w,c
  1258   000EA8  6ED9               	movwf	fsr2l,c
  1259   000EAA  6ADA               	clrf	fsr2h,c
  1260   000EAC  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1261   000EB0  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1262   000EB4                     
  1263                           ; BSR set to: 0
  1264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1265   000EB4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1266   000EB6  6ED9               	movwf	fsr2l,c
  1267   000EB8  6ADA               	clrf	fsr2h,c
  1268   000EBA  2813               	incf	vfpfcnvrt@cp^0,w,c
  1269   000EBC  6EDF               	movwf	indf2,c
  1270   000EBE                     
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1273   000EBE  0E20               	movlw	32
  1274   000EC0  6E18               	movwf	vfpfcnvrt@c^0,c
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1277   000EC2  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1278   000EC4  EF66  F007         	goto	u2171
  1279   000EC8  EF69  F007         	goto	u2170
  1280   000ECC                     u2171:
  1281   000ECC  0E01               	movlw	1
  1282   000ECE  EF6A  F007         	goto	u2180
  1283   000ED2                     u2170:
  1284   000ED2  0E00               	movlw	0
  1285   000ED4                     u2180:
  1286   000ED4  6E10               	movwf	vfpfcnvrt@done^0,c
  1287   000ED6                     l3202:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1290   000ED6  0618               	decf	vfpfcnvrt@c^0,f,c
  1291   000ED8  5018               	movf	vfpfcnvrt@c^0,w,c
  1292   000EDA  0F60               	addlw	low _dbuf
  1293   000EDC  6ED9               	movwf	fsr2l,c
  1294   000EDE  6ADA               	clrf	fsr2h,c
  1295   000EE0  C014  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1296   000EE4  C015  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1297   000EE8  0E00               	movlw	0
  1298   000EEA  6E05               	movwf	(___awmod@divisor+1)^0,c
  1299   000EEC  0E0A               	movlw	10
  1300   000EEE  6E04               	movwf	___awmod@divisor^0,c
  1301   000EF0  ECD8  F008         	call	___awmod	;wreg free
  1302   000EF4  C002  F008         	movff	?___awmod,abs@a
  1303   000EF8  C003  F009         	movff	?___awmod+1,abs@a+1
  1304   000EFC  ECC7  F00A         	call	_abs	;wreg free
  1305   000F00  5008               	movf	?_abs^0,w,c
  1306   000F02  0F30               	addlw	48
  1307   000F04  6EDF               	movwf	indf2,c
  1308   000F06                     
  1309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1310   000F06  C014  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1311   000F0A  C015  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1312   000F0E  0E00               	movlw	0
  1313   000F10  6E05               	movwf	(___awdiv@divisor+1)^0,c
  1314   000F12  0E0A               	movlw	10
  1315   000F14  6E04               	movwf	___awdiv@divisor^0,c
  1316   000F16  EC76  F008         	call	___awdiv	;wreg free
  1317   000F1A  C002  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1318   000F1E  C003  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1319   000F22                     
  1320                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1321   000F22  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1322   000F24  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1323   000F26                     
  1324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1325   000F26  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1326   000F28  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1327   000F2A  B4D8               	btfsc	status,2,c
  1328   000F2C  EF9A  F007         	goto	u2191
  1329   000F30  EF9C  F007         	goto	u2190
  1330   000F34                     u2191:
  1331   000F34  EFA4  F007         	goto	l3212
  1332   000F38                     u2190:
  1333   000F38  5018               	movf	vfpfcnvrt@c^0,w,c
  1334   000F3A  A4D8               	btfss	status,2,c
  1335   000F3C  EFA2  F007         	goto	u2201
  1336   000F40  EFA4  F007         	goto	u2200
  1337   000F44                     u2201:
  1338   000F44  EF6B  F007         	goto	l3202
  1339   000F48                     u2200:
  1340   000F48                     l3212:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1343   000F48  5018               	movf	vfpfcnvrt@c^0,w,c
  1344   000F4A  B4D8               	btfsc	status,2,c
  1345   000F4C  EFAA  F007         	goto	u2211
  1346   000F50  EFAC  F007         	goto	u2210
  1347   000F54                     u2211:
  1348   000F54  EFCD  F007         	goto	l3224
  1349   000F58                     u2210:
  1350   000F58  5010               	movf	vfpfcnvrt@done^0,w,c
  1351   000F5A  B4D8               	btfsc	status,2,c
  1352   000F5C  EFB2  F007         	goto	u2221
  1353   000F60  EFB4  F007         	goto	u2220
  1354   000F64                     u2221:
  1355   000F64  EFCD  F007         	goto	l3224
  1356   000F68                     u2220:
  1357   000F68                     
  1358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1359   000F68  0618               	decf	vfpfcnvrt@c^0,f,c
  1360   000F6A  5018               	movf	vfpfcnvrt@c^0,w,c
  1361   000F6C  0F60               	addlw	low _dbuf
  1362   000F6E  6ED9               	movwf	fsr2l,c
  1363   000F70  6ADA               	clrf	fsr2h,c
  1364   000F72  0E2D               	movlw	45
  1365   000F74  6EDF               	movwf	indf2,c
  1366   000F76                     
  1367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1368   000F76  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1369   000F78  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1370   000F7A  EFCD  F007         	goto	l3224
  1371   000F7E                     l3220:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1374   000F7E  5018               	movf	vfpfcnvrt@c^0,w,c
  1375   000F80  0F60               	addlw	low _dbuf
  1376   000F82  6ED9               	movwf	fsr2l,c
  1377   000F84  6ADA               	clrf	fsr2h,c
  1378   000F86  50DF               	movf	indf2,w,c
  1379   000F88  6E0F               	movwf	??_vfpfcnvrt^0,c
  1380   000F8A  500F               	movf	??_vfpfcnvrt^0,w,c
  1381   000F8C  6E02               	movwf	fputc@c^0,c
  1382   000F8E  6A03               	clrf	(fputc@c+1)^0,c
  1383   000F90  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1384   000F94  EC30  F009         	call	_fputc	;wreg free
  1385   000F98  2A18               	incf	vfpfcnvrt@c^0,f,c
  1386   000F9A                     l3224:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1389   000F9A  0E20               	movlw	32
  1390   000F9C  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1391   000F9E  A4D8               	btfss	status,2,c
  1392   000FA0  EFD4  F007         	goto	u2231
  1393   000FA4  EFD6  F007         	goto	u2230
  1394   000FA8                     u2231:
  1395   000FA8  EFBF  F007         	goto	l3220
  1396   000FAC                     u2230:
  1397   000FAC                     
  1398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1399   000FAC  C011  F00C         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1400   000FB0  C012  F00D         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1401   000FB4  EFFF  F007         	goto	l1288
  1402   000FB8                     l3226:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1406   000FB8  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1407   000FBA  6ED9               	movwf	fsr2l,c
  1408   000FBC  6ADA               	clrf	fsr2h,c
  1409   000FBE  2ADF               	incf	indf2,f,c
  1410   000FC0                     
  1411                           ; BSR set to: 0
  1412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1413   000FC0  0E00               	movlw	0
  1414   000FC2  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  1415   000FC4  0E00               	movlw	0
  1416   000FC6  6E0C               	movwf	?_vfpfcnvrt^0,c
  1417   000FC8  EFFF  F007         	goto	l1288
  1418   000FCC                     l3232:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1421   000FCC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1422   000FCE  6ED9               	movwf	fsr2l,c
  1423   000FD0  6ADA               	clrf	fsr2h,c
  1424   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1425   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1426   000FD6  0E0E               	movlw	high __smallconst
  1427   000FD8  6EF7               	movwf	tblptrh,c
  1428   000FDA                     	endif
  1429   000FDA                     	if	0	;tblptru may be non-zero
  1430   000FDA                     	endif
  1431   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1432   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1433   000FDC  6EF8               	movwf	tblptru,c
  1434   000FDE                     	endif
  1435   000FDE  0008               	tblrd		*
  1436   000FE0  50F5               	movf	tablat,w,c
  1437   000FE2  6E02               	movwf	fputc@c^0,c
  1438   000FE4  6A03               	clrf	(fputc@c+1)^0,c
  1439   000FE6  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1440   000FEA  EC30  F009         	call	_fputc	;wreg free
  1441   000FEE                     
  1442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1443   000FEE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1444   000FF0  6ED9               	movwf	fsr2l,c
  1445   000FF2  6ADA               	clrf	fsr2h,c
  1446   000FF4  2ADF               	incf	indf2,f,c
  1447   000FF6                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1449   000FF6  0E00               	movlw	0
  1450   000FF8  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  1451   000FFA  0E01               	movlw	1
  1452   000FFC  6E0C               	movwf	?_vfpfcnvrt^0,c
  1453   000FFE                     l1288:
  1454   000FFE  0012               	return		;funcret
  1455   001000                     __end_of_vfpfcnvrt:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _fputc *****************
  1459 ;; Defined at:
  1460 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  c               2    1[COMRAM] int 
  1463 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  1464 ;;		 -> sprintf@f(12), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2    1[COMRAM] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;Total ram usage:        8 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 2
  1483 ;; This function calls:
  1484 ;;		_putch
  1485 ;; This function is called by:
  1486 ;;		_vfpfcnvrt
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text5
  1491   001260                     __ptext5:
  1492                           	callstack 0
  1493   001260                     _fputc:
  1494                           	callstack 24
  1495   001260  5004               	movf	fputc@fp^0,w,c
  1496   001262  B4D8               	btfsc	status,2,c
  1497   001264  EF36  F009         	goto	u2071
  1498   001268  EF38  F009         	goto	u2070
  1499   00126C                     u2071:
  1500   00126C  EF40  F009         	goto	l3162
  1501   001270                     u2070:
  1502   001270  5004               	movf	fputc@fp^0,w,c
  1503   001272  A4D8               	btfss	status,2,c
  1504   001274  EF3E  F009         	goto	u2081
  1505   001278  EF40  F009         	goto	u2080
  1506   00127C                     u2081:
  1507   00127C  EF45  F009         	goto	l3164
  1508   001280                     u2080:
  1509   001280                     l3162:
  1510   001280  5002               	movf	fputc@c^0,w,c
  1511   001282  EC87  F00B         	call	_putch
  1512   001286  EF84  F009         	goto	l1313
  1513   00128A                     l3164:
  1514   00128A  5004               	movf	fputc@fp^0,w,c
  1515   00128C  6ED9               	movwf	fsr2l,c
  1516   00128E  6ADA               	clrf	fsr2h,c
  1517   001290  0E0A               	movlw	10
  1518   001292  26D9               	addwf	fsr2l,f,c
  1519   001294  50DE               	movf	postinc2,w,c
  1520   001296  10DE               	iorwf	postinc2,w,c
  1521   001298  B4D8               	btfsc	status,2,c
  1522   00129A  EF51  F009         	goto	u2091
  1523   00129E  EF53  F009         	goto	u2090
  1524   0012A2                     u2091:
  1525   0012A2  EF6C  F009         	goto	l3168
  1526   0012A6                     u2090:
  1527   0012A6  5004               	movf	fputc@fp^0,w,c
  1528   0012A8  6ED9               	movwf	fsr2l,c
  1529   0012AA  6ADA               	clrf	fsr2h,c
  1530   0012AC  0E0A               	movlw	10
  1531   0012AE  26D9               	addwf	fsr2l,f,c
  1532   0012B0  5004               	movf	fputc@fp^0,w,c
  1533   0012B2  6EE1               	movwf	fsr1l,c
  1534   0012B4  6AE2               	clrf	fsr1h,c
  1535   0012B6  0E03               	movlw	3
  1536   0012B8  26E1               	addwf	fsr1l,f,c
  1537   0012BA  50DE               	movf	postinc2,w,c
  1538   0012BC  5CE6               	subwf	postinc1,w,c
  1539   0012BE  50E6               	movf	postinc1,w,c
  1540   0012C0  0A80               	xorlw	128
  1541   0012C2  6E09               	movwf	(??_fputc+4)^0,c
  1542   0012C4  50DE               	movf	postinc2,w,c
  1543   0012C6  0A80               	xorlw	128
  1544   0012C8  5809               	subwfb	(??_fputc+4)^0,w,c
  1545   0012CA  B0D8               	btfsc	status,0,c
  1546   0012CC  EF6A  F009         	goto	u2101
  1547   0012D0  EF6C  F009         	goto	u2100
  1548   0012D4                     u2101:
  1549   0012D4  EF84  F009         	goto	l1313
  1550   0012D8                     u2100:
  1551   0012D8                     l3168:
  1552   0012D8  5004               	movf	fputc@fp^0,w,c
  1553   0012DA  6ED9               	movwf	fsr2l,c
  1554   0012DC  6ADA               	clrf	fsr2h,c
  1555   0012DE  0E03               	movlw	3
  1556   0012E0  26D9               	addwf	fsr2l,f,c
  1557   0012E2  50DF               	movf	indf2,w,c
  1558   0012E4  6E05               	movwf	??_fputc^0,c
  1559   0012E6  5004               	movf	fputc@fp^0,w,c
  1560   0012E8  6ED9               	movwf	fsr2l,c
  1561   0012EA  6ADA               	clrf	fsr2h,c
  1562   0012EC  50DF               	movf	indf2,w,c
  1563   0012EE  2405               	addwf	??_fputc^0,w,c
  1564   0012F0  6ED9               	movwf	fsr2l,c
  1565   0012F2  6ADA               	clrf	fsr2h,c
  1566   0012F4  C002  FFDF         	movff	fputc@c,indf2
  1567   0012F8  5004               	movf	fputc@fp^0,w,c
  1568   0012FA  6ED9               	movwf	fsr2l,c
  1569   0012FC  6ADA               	clrf	fsr2h,c
  1570   0012FE  0E03               	movlw	3
  1571   001300  26D9               	addwf	fsr2l,f,c
  1572   001302  2ADE               	incf	postinc2,f,c
  1573   001304  0E00               	movlw	0
  1574   001306  22DD               	addwfc	postdec2,f,c
  1575   001308                     l1313:
  1576   001308  0012               	return		;funcret
  1577   00130A                     __end_of_fputc:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _putch *****************
  1581 ;; Defined at:
  1582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  c               1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  c               1    0[COMRAM] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_fputc
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text6
  1611   00170E                     __ptext6:
  1612                           	callstack 0
  1613   00170E                     _putch:
  1614                           	callstack 24
  1615   00170E  0012               	return		;funcret
  1616   001710                     __end_of_putch:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _abs *****************
  1620 ;; Defined at:
  1621 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  a               2    7[COMRAM] int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    7[COMRAM] int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;Total ram usage:        4 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_vfpfcnvrt
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text7
  1650   00158E                     __ptext7:
  1651                           	callstack 0
  1652   00158E                     _abs:
  1653                           	callstack 25
  1654   00158E  BE09               	btfsc	(abs@a+1)^0,7,c
  1655   001590  EFCC  F00A         	goto	u2111
  1656   001594  EFCE  F00A         	goto	u2110
  1657   001598                     u2111:
  1658   001598  EFD4  F00A         	goto	l1298
  1659   00159C                     u2110:
  1660   00159C  C008  F008         	movff	abs@a,?_abs
  1661   0015A0  C009  F009         	movff	abs@a+1,?_abs+1
  1662   0015A4  EFE0  F00A         	goto	l1301
  1663   0015A8                     l1298:
  1664   0015A8  C008  F00A         	movff	abs@a,??_abs
  1665   0015AC  C009  F00B         	movff	abs@a+1,??_abs+1
  1666   0015B0  1E0A               	comf	??_abs^0,f,c
  1667   0015B2  1E0B               	comf	(??_abs+1)^0,f,c
  1668   0015B4  4A0A               	infsnz	??_abs^0,f,c
  1669   0015B6  2A0B               	incf	(??_abs+1)^0,f,c
  1670   0015B8  C00A  F008         	movff	??_abs,?_abs
  1671   0015BC  C00B  F009         	movff	??_abs+1,?_abs+1
  1672   0015C0                     l1301:
  1673   0015C0  0012               	return		;funcret
  1674   0015C2                     __end_of_abs:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function ___awmod *****************
  1678 ;; Defined at:
  1679 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  dividend        2    1[COMRAM] int 
  1682 ;;  divisor         2    3[COMRAM] int 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  sign            1    6[COMRAM] unsigned char 
  1685 ;;  counter         1    5[COMRAM] unsigned char 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    1[COMRAM] int 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;Total ram usage:        6 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_vfpfcnvrt
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text8
  1710   0011B0                     __ptext8:
  1711                           	callstack 0
  1712   0011B0                     ___awmod:
  1713                           	callstack 25
  1714   0011B0  0E00               	movlw	0
  1715   0011B2  6E07               	movwf	___awmod@sign^0,c
  1716   0011B4  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  1717   0011B6  EFE1  F008         	goto	u2010
  1718   0011BA  EFDF  F008         	goto	u2011
  1719   0011BE                     u2011:
  1720   0011BE  EFE7  F008         	goto	l3130
  1721   0011C2                     u2010:
  1722   0011C2  6C02               	negf	___awmod@dividend^0,c
  1723   0011C4  1E03               	comf	(___awmod@dividend+1)^0,f,c
  1724   0011C6  B0D8               	btfsc	status,0,c
  1725   0011C8  2A03               	incf	(___awmod@dividend+1)^0,f,c
  1726   0011CA  0E01               	movlw	1
  1727   0011CC  6E07               	movwf	___awmod@sign^0,c
  1728   0011CE                     l3130:
  1729   0011CE  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  1730   0011D0  EFEE  F008         	goto	u2020
  1731   0011D4  EFEC  F008         	goto	u2021
  1732   0011D8                     u2021:
  1733   0011D8  EFF2  F008         	goto	l3134
  1734   0011DC                     u2020:
  1735   0011DC  6C04               	negf	___awmod@divisor^0,c
  1736   0011DE  1E05               	comf	(___awmod@divisor+1)^0,f,c
  1737   0011E0  B0D8               	btfsc	status,0,c
  1738   0011E2  2A05               	incf	(___awmod@divisor+1)^0,f,c
  1739   0011E4                     l3134:
  1740   0011E4  5004               	movf	___awmod@divisor^0,w,c
  1741   0011E6  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  1742   0011E8  B4D8               	btfsc	status,2,c
  1743   0011EA  EFF9  F008         	goto	u2031
  1744   0011EE  EFFB  F008         	goto	u2030
  1745   0011F2                     u2031:
  1746   0011F2  EF1F  F009         	goto	l3150
  1747   0011F6                     u2030:
  1748   0011F6  0E01               	movlw	1
  1749   0011F8  6E06               	movwf	___awmod@counter^0,c
  1750   0011FA  EF03  F009         	goto	l3140
  1751   0011FE                     l3138:
  1752   0011FE  90D8               	bcf	status,0,c
  1753   001200  3604               	rlcf	___awmod@divisor^0,f,c
  1754   001202  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  1755   001204  2A06               	incf	___awmod@counter^0,f,c
  1756   001206                     l3140:
  1757   001206  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  1758   001208  EF08  F009         	goto	u2041
  1759   00120C  EF0A  F009         	goto	u2040
  1760   001210                     u2041:
  1761   001210  EFFF  F008         	goto	l3138
  1762   001214                     u2040:
  1763   001214                     l3142:
  1764   001214  5004               	movf	___awmod@divisor^0,w,c
  1765   001216  5C02               	subwf	___awmod@dividend^0,w,c
  1766   001218  5005               	movf	(___awmod@divisor+1)^0,w,c
  1767   00121A  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  1768   00121C  A0D8               	btfss	status,0,c
  1769   00121E  EF13  F009         	goto	u2051
  1770   001222  EF15  F009         	goto	u2050
  1771   001226                     u2051:
  1772   001226  EF19  F009         	goto	l3146
  1773   00122A                     u2050:
  1774   00122A  5004               	movf	___awmod@divisor^0,w,c
  1775   00122C  5E02               	subwf	___awmod@dividend^0,f,c
  1776   00122E  5005               	movf	(___awmod@divisor+1)^0,w,c
  1777   001230  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  1778   001232                     l3146:
  1779   001232  90D8               	bcf	status,0,c
  1780   001234  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  1781   001236  3204               	rrcf	___awmod@divisor^0,f,c
  1782   001238  2E06               	decfsz	___awmod@counter^0,f,c
  1783   00123A  EF0A  F009         	goto	l3142
  1784   00123E                     l3150:
  1785   00123E  5007               	movf	___awmod@sign^0,w,c
  1786   001240  B4D8               	btfsc	status,2,c
  1787   001242  EF25  F009         	goto	u2061
  1788   001246  EF27  F009         	goto	u2060
  1789   00124A                     u2061:
  1790   00124A  EF2B  F009         	goto	l3154
  1791   00124E                     u2060:
  1792   00124E  6C02               	negf	___awmod@dividend^0,c
  1793   001250  1E03               	comf	(___awmod@dividend+1)^0,f,c
  1794   001252  B0D8               	btfsc	status,0,c
  1795   001254  2A03               	incf	(___awmod@dividend+1)^0,f,c
  1796   001256                     l3154:
  1797   001256  C002  F002         	movff	___awmod@dividend,?___awmod
  1798   00125A  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  1799   00125E  0012               	return		;funcret
  1800   001260                     __end_of___awmod:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function ___awdiv *****************
  1804 ;; Defined at:
  1805 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  dividend        2    1[COMRAM] int 
  1808 ;;  divisor         2    3[COMRAM] int 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  quotient        2    7[COMRAM] int 
  1811 ;;  sign            1    6[COMRAM] unsigned char 
  1812 ;;  counter         1    5[COMRAM] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2    1[COMRAM] int 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;Total ram usage:        8 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_vfpfcnvrt
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text9
  1837   0010EC                     __ptext9:
  1838                           	callstack 0
  1839   0010EC                     ___awdiv:
  1840                           	callstack 25
  1841   0010EC  0E00               	movlw	0
  1842   0010EE  6E07               	movwf	___awdiv@sign^0,c
  1843   0010F0  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  1844   0010F2  EF7F  F008         	goto	u1950
  1845   0010F6  EF7D  F008         	goto	u1951
  1846   0010FA                     u1951:
  1847   0010FA  EF85  F008         	goto	l3086
  1848   0010FE                     u1950:
  1849   0010FE  6C04               	negf	___awdiv@divisor^0,c
  1850   001100  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  1851   001102  B0D8               	btfsc	status,0,c
  1852   001104  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  1853   001106  0E01               	movlw	1
  1854   001108  6E07               	movwf	___awdiv@sign^0,c
  1855   00110A                     l3086:
  1856   00110A  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  1857   00110C  EF8C  F008         	goto	u1960
  1858   001110  EF8A  F008         	goto	u1961
  1859   001114                     u1961:
  1860   001114  EF92  F008         	goto	l3092
  1861   001118                     u1960:
  1862   001118  6C02               	negf	___awdiv@dividend^0,c
  1863   00111A  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  1864   00111C  B0D8               	btfsc	status,0,c
  1865   00111E  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  1866   001120  0E01               	movlw	1
  1867   001122  1A07               	xorwf	___awdiv@sign^0,f,c
  1868   001124                     l3092:
  1869   001124  0E00               	movlw	0
  1870   001126  6E09               	movwf	(___awdiv@quotient+1)^0,c
  1871   001128  0E00               	movlw	0
  1872   00112A  6E08               	movwf	___awdiv@quotient^0,c
  1873   00112C  5004               	movf	___awdiv@divisor^0,w,c
  1874   00112E  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  1875   001130  B4D8               	btfsc	status,2,c
  1876   001132  EF9D  F008         	goto	u1971
  1877   001136  EF9F  F008         	goto	u1970
  1878   00113A                     u1971:
  1879   00113A  EFC7  F008         	goto	l3114
  1880   00113E                     u1970:
  1881   00113E  0E01               	movlw	1
  1882   001140  6E06               	movwf	___awdiv@counter^0,c
  1883   001142  EFA7  F008         	goto	l3100
  1884   001146                     l3098:
  1885   001146  90D8               	bcf	status,0,c
  1886   001148  3604               	rlcf	___awdiv@divisor^0,f,c
  1887   00114A  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  1888   00114C  2A06               	incf	___awdiv@counter^0,f,c
  1889   00114E                     l3100:
  1890   00114E  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  1891   001150  EFAC  F008         	goto	u1981
  1892   001154  EFAE  F008         	goto	u1980
  1893   001158                     u1981:
  1894   001158  EFA3  F008         	goto	l3098
  1895   00115C                     u1980:
  1896   00115C                     l3102:
  1897   00115C  90D8               	bcf	status,0,c
  1898   00115E  3608               	rlcf	___awdiv@quotient^0,f,c
  1899   001160  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  1900   001162  5004               	movf	___awdiv@divisor^0,w,c
  1901   001164  5C02               	subwf	___awdiv@dividend^0,w,c
  1902   001166  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1903   001168  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  1904   00116A  A0D8               	btfss	status,0,c
  1905   00116C  EFBA  F008         	goto	u1991
  1906   001170  EFBC  F008         	goto	u1990
  1907   001174                     u1991:
  1908   001174  EFC1  F008         	goto	l3110
  1909   001178                     u1990:
  1910   001178  5004               	movf	___awdiv@divisor^0,w,c
  1911   00117A  5E02               	subwf	___awdiv@dividend^0,f,c
  1912   00117C  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1913   00117E  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  1914   001180  8008               	bsf	___awdiv@quotient^0,0,c
  1915   001182                     l3110:
  1916   001182  90D8               	bcf	status,0,c
  1917   001184  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  1918   001186  3204               	rrcf	___awdiv@divisor^0,f,c
  1919   001188  2E06               	decfsz	___awdiv@counter^0,f,c
  1920   00118A  EFAE  F008         	goto	l3102
  1921   00118E                     l3114:
  1922   00118E  5007               	movf	___awdiv@sign^0,w,c
  1923   001190  B4D8               	btfsc	status,2,c
  1924   001192  EFCD  F008         	goto	u2001
  1925   001196  EFCF  F008         	goto	u2000
  1926   00119A                     u2001:
  1927   00119A  EFD3  F008         	goto	l3118
  1928   00119E                     u2000:
  1929   00119E  6C08               	negf	___awdiv@quotient^0,c
  1930   0011A0  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  1931   0011A2  B0D8               	btfsc	status,0,c
  1932   0011A4  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  1933   0011A6                     l3118:
  1934   0011A6  C008  F002         	movff	___awdiv@quotient,?___awdiv
  1935   0011AA  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  1936   0011AE  0012               	return		;funcret
  1937   0011B0                     __end_of___awdiv:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _sendStringSerial4 *****************
  1941 ;; Defined at:
  1942 ;;		line 35 in file "serial.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  string          2    2[COMRAM] PTR unsigned char 
  1945 ;;		 -> STR_4(3), sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 2
  1964 ;; This function calls:
  1965 ;;		_sendCharSerial4
  1966 ;; This function is called by:
  1967 ;;		_sendArraySerial4
  1968 ;;		_sendIntSerial4
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text10
  1973   001400                     __ptext10:
  1974                           	callstack 0
  1975   001400                     _sendStringSerial4:
  1976                           	callstack 27
  1977   001400                     
  1978                           ;serial.c: 37:     while(*string != 0){
  1979   001400  EF17  F00A         	goto	l3284
  1980   001404                     l3280:
  1981                           
  1982                           ;serial.c: 38:   sendCharSerial4(*string++);
  1983   001404  C003  FFF6         	movff	sendStringSerial4@string,tblptrl
  1984   001408  C004  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1985   00140C  0E00               	movlw	low (__smallconst shr (0+16))
  1986   00140E  6EF8               	movwf	tblptru,c
  1987   001410  0E0D               	movlw	(high __ramtop+-1)
  1988   001412  64F7               	cpfsgt	tblptrh,c
  1989   001414  D003               	bra	u2267
  1990   001416  0008               	tblrd		*
  1991   001418  50F5               	movf	tablat,w,c
  1992   00141A  D005               	bra	u2260
  1993   00141C                     u2267:
  1994   00141C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1995   001420  CFF7 FFEA          	movff	tblptrh,fsr0h
  1996   001424  50EF               	movf	indf0,w,c
  1997   001426                     u2260:
  1998   001426  EC6B  F00B         	call	_sendCharSerial4
  1999   00142A  4A03               	infsnz	sendStringSerial4@string^0,f,c
  2000   00142C  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  2001   00142E                     l3284:
  2002                           
  2003                           ;serial.c: 37:     while(*string != 0){
  2004   00142E  C003  FFF6         	movff	sendStringSerial4@string,tblptrl
  2005   001432  C004  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2006   001436  0E00               	movlw	low (__smallconst shr (0+16))
  2007   001438  6EF8               	movwf	tblptru,c
  2008   00143A  0E0D               	movlw	(high __ramtop+-1)
  2009   00143C  64F7               	cpfsgt	tblptrh,c
  2010   00143E  D003               	bra	u2277
  2011   001440  0008               	tblrd		*
  2012   001442  50F5               	movf	tablat,w,c
  2013   001444  D005               	bra	u2270
  2014   001446                     u2277:
  2015   001446  CFF6 FFE9          	movff	tblptrl,fsr0l
  2016   00144A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2017   00144E  50EF               	movf	indf0,w,c
  2018   001450                     u2270:
  2019   001450  0900               	iorlw	0
  2020   001452  A4D8               	btfss	status,2,c
  2021   001454  EF2E  F00A         	goto	u2281
  2022   001458  EF30  F00A         	goto	u2280
  2023   00145C                     u2281:
  2024   00145C  EF02  F00A         	goto	l3280
  2025   001460                     u2280:
  2026   001460  0012               	return		;funcret
  2027   001462                     __end_of_sendStringSerial4:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _sendCharSerial4 *****************
  2031 ;; Defined at:
  2032 ;;		line 29 in file "serial.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  charToSend      1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  charToSend      1    1[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_sendStringSerial4
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text11
  2061   0016D6                     __ptext11:
  2062                           	callstack 0
  2063   0016D6                     _sendCharSerial4:
  2064                           	callstack 27
  2065                           
  2066                           ;incstack = 0
  2067                           ;sendCharSerial4@charToSend stored from wreg
  2068   0016D6  6E02               	movwf	sendCharSerial4@charToSend^0,c
  2069   0016D8                     l391:
  2070   0016D8  010E               	movlb	14	; () banked
  2071   0016DA  A537               	btfss	55,2,b	;volatile
  2072   0016DC  EF72  F00B         	goto	u2241
  2073   0016E0  EF74  F00B         	goto	u2240
  2074   0016E4                     u2241:
  2075   0016E4  EF6C  F00B         	goto	l391
  2076   0016E8                     u2240:
  2077   0016E8                     
  2078                           ; BSR set to: 14
  2079                           ;serial.c: 31:     TX4REG = charToSend;
  2080   0016E8  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2081   0016EC                     
  2082                           ; BSR set to: 14
  2083   0016EC  0012               	return		;funcret
  2084   0016EE                     __end_of_sendCharSerial4:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _initUSART4 *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "serial.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text12
  2118   0016B8                     __ptext12:
  2119                           	callstack 0
  2120   0016B8                     _initUSART4:
  2121                           	callstack 29
  2122   0016B8                     
  2123                           ;serial.c: 9:     RC0PPS = 0x12;
  2124   0016B8  0E12               	movlw	18
  2125   0016BA  010E               	movlb	14	; () banked
  2126   0016BC  6F62               	movwf	98,b	;volatile
  2127                           
  2128                           ;serial.c: 10:     RX4PPS = 0x11;
  2129   0016BE  0E11               	movlw	17
  2130   0016C0  6F15               	movwf	21,b	;volatile
  2131   0016C2                     
  2132                           ; BSR set to: 14
  2133                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2134   0016C2  97E9               	bcf	233,3,b	;volatile
  2135   0016C4                     
  2136                           ; BSR set to: 14
  2137                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2138   0016C4  95E8               	bcf	232,2,b	;volatile
  2139                           
  2140                           ;serial.c: 14:     SP4BRGL = 51;
  2141   0016C6  0E33               	movlw	51
  2142   0016C8  6FE5               	movwf	229,b	;volatile
  2143                           
  2144                           ;serial.c: 15:     SP4BRGH = 0;
  2145   0016CA  0E00               	movlw	0
  2146   0016CC  6FE6               	movwf	230,b	;volatile
  2147   0016CE                     
  2148                           ; BSR set to: 14
  2149                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2150   0016CE  89E7               	bsf	231,4,b	;volatile
  2151   0016D0                     
  2152                           ; BSR set to: 14
  2153                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2154   0016D0  8BE8               	bsf	232,5,b	;volatile
  2155   0016D2                     
  2156                           ; BSR set to: 14
  2157                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2158   0016D2  8FE7               	bsf	231,7,b	;volatile
  2159   0016D4                     
  2160                           ; BSR set to: 14
  2161   0016D4  0012               	return		;funcret
  2162   0016D6                     __end_of_initUSART4:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _initDCmotorsPWM *****************
  2166 ;; Defined at:
  2167 ;;		line 5 in file "dc_motor.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  PWMperiod       2    1[COMRAM] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;Total ram usage:        2 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text13
  2196   00130A                     __ptext13:
  2197                           	callstack 0
  2198   00130A                     _initDCmotorsPWM:
  2199                           	callstack 29
  2200   00130A                     
  2201                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2202   00130A  9485               	bcf	133,2,c	;volatile
  2203                           
  2204                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2205   00130C  9885               	bcf	133,4,c	;volatile
  2206                           
  2207                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2208   00130E  9E83               	bcf	131,7,c	;volatile
  2209                           
  2210                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2211   001310  9C87               	bcf	135,6,c	;volatile
  2212                           
  2213                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2214   001312  947D               	bcf	125,2,c	;volatile
  2215                           
  2216                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2217   001314  987D               	bcf	125,4,c	;volatile
  2218                           
  2219                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2220   001316  9E7B               	bcf	123,7,c	;volatile
  2221                           
  2222                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2223   001318  9C7F               	bcf	127,6,c	;volatile
  2224   00131A                     
  2225                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2226   00131A  0E05               	movlw	5
  2227   00131C  010E               	movlb	14	; () banked
  2228   00131E  6F74               	movwf	116,b	;volatile
  2229                           
  2230                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2231   001320  0E06               	movlw	6
  2232   001322  6F76               	movwf	118,b	;volatile
  2233                           
  2234                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2235   001324  0E07               	movlw	7
  2236   001326  6F69               	movwf	105,b	;volatile
  2237                           
  2238                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2239   001328  0E08               	movlw	8
  2240   00132A  6F88               	movwf	136,b	;volatile
  2241                           
  2242                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2243   00132C  50BD               	movf	189,w,c	;volatile
  2244   00132E  0B8F               	andlw	-113
  2245   001330  0940               	iorlw	64
  2246   001332  6EBD               	movwf	189,c	;volatile
  2247                           
  2248                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2249   001334  0EE0               	movlw	-32
  2250   001336  16BE               	andwf	190,f,c	;volatile
  2251                           
  2252                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2253   001338  50BF               	movf	191,w,c	;volatile
  2254   00133A  0BF0               	andlw	-16
  2255   00133C  0901               	iorlw	1
  2256   00133E  6EBF               	movwf	191,c	;volatile
  2257   001340                     
  2258                           ; BSR set to: 14
  2259                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2260   001340  C002  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2261   001344                     
  2262                           ; BSR set to: 14
  2263                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2264   001344  8EBD               	bsf	189,7,c	;volatile
  2265                           
  2266                           ;dc_motor.c: 35:     CCPR1H=0;
  2267   001346  0E00               	movlw	0
  2268   001348  6EAA               	movwf	170,c	;volatile
  2269                           
  2270                           ;dc_motor.c: 36:     CCPR2H=0;
  2271   00134A  0E00               	movlw	0
  2272   00134C  6EA6               	movwf	166,c	;volatile
  2273                           
  2274                           ;dc_motor.c: 37:     CCPR3H=0;
  2275   00134E  0E00               	movlw	0
  2276   001350  010F               	movlb	15	; () banked
  2277   001352  6F25               	movwf	37,b	;volatile
  2278                           
  2279                           ;dc_motor.c: 38:     CCPR4H=0;
  2280   001354  0E00               	movlw	0
  2281   001356  6F21               	movwf	33,b	;volatile
  2282                           
  2283                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2284   001358  0EFC               	movlw	-4
  2285   00135A  16AD               	andwf	173,f,c	;volatile
  2286                           
  2287                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2288   00135C  0EF3               	movlw	-13
  2289   00135E  16AD               	andwf	173,f,c	;volatile
  2290                           
  2291                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2292   001360  0ECF               	movlw	-49
  2293   001362  16AD               	andwf	173,f,c	;volatile
  2294                           
  2295                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2296   001364  0E3F               	movlw	-193
  2297   001366  16AD               	andwf	173,f,c	;volatile
  2298   001368                     
  2299                           ; BSR set to: 15
  2300                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2301   001368  88AB               	bsf	171,4,c	;volatile
  2302                           
  2303                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2304   00136A  50AB               	movf	171,w,c	;volatile
  2305   00136C  0BF0               	andlw	-16
  2306   00136E  090C               	iorlw	12
  2307   001370  6EAB               	movwf	171,c	;volatile
  2308   001372                     
  2309                           ; BSR set to: 15
  2310                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2311   001372  8EAB               	bsf	171,7,c	;volatile
  2312   001374                     
  2313                           ; BSR set to: 15
  2314                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2315   001374  88A7               	bsf	167,4,c	;volatile
  2316                           
  2317                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2318   001376  50A7               	movf	167,w,c	;volatile
  2319   001378  0BF0               	andlw	-16
  2320   00137A  090C               	iorlw	12
  2321   00137C  6EA7               	movwf	167,c	;volatile
  2322   00137E                     
  2323                           ; BSR set to: 15
  2324                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2325   00137E  8EA7               	bsf	167,7,c	;volatile
  2326   001380                     
  2327                           ; BSR set to: 15
  2328                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2329   001380  8926               	bsf	38,4,b	;volatile
  2330                           
  2331                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2332   001382  5126               	movf	38,w,b	;volatile
  2333   001384  0BF0               	andlw	-16
  2334   001386  090C               	iorlw	12
  2335   001388  6F26               	movwf	38,b	;volatile
  2336   00138A                     
  2337                           ; BSR set to: 15
  2338                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2339   00138A  8F26               	bsf	38,7,b	;volatile
  2340   00138C                     
  2341                           ; BSR set to: 15
  2342                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2343   00138C  8922               	bsf	34,4,b	;volatile
  2344                           
  2345                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2346   00138E  5122               	movf	34,w,b	;volatile
  2347   001390  0BF0               	andlw	-16
  2348   001392  090C               	iorlw	12
  2349   001394  6F22               	movwf	34,b	;volatile
  2350   001396                     
  2351                           ; BSR set to: 15
  2352                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2353   001396  8F22               	bsf	34,7,b	;volatile
  2354   001398                     
  2355                           ; BSR set to: 15
  2356   001398  0012               	return		;funcret
  2357   00139A                     __end_of_initDCmotorsPWM:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _color_click_init *****************
  2361 ;; Defined at:
  2362 ;;		line 5 in file "color.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;Total ram usage:        1 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 4
  2383 ;; This function calls:
  2384 ;;		_I2C_2_Master_Init
  2385 ;;		_color_writetoaddr
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text14
  2392   0015C2                     __ptext14:
  2393                           	callstack 0
  2394   0015C2                     _color_click_init:
  2395                           	callstack 26
  2396   0015C2                     
  2397                           ;color.c: 8:     I2C_2_Master_Init();
  2398   0015C2  ECFB  F00A         	call	_I2C_2_Master_Init	;wreg free
  2399   0015C6                     
  2400                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2401   0015C6  0E01               	movlw	1
  2402   0015C8  6E04               	movwf	color_writetoaddr@value^0,c
  2403   0015CA  0E00               	movlw	0
  2404   0015CC  EC4C  F00B         	call	_color_writetoaddr
  2405   0015D0                     
  2406                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2407   0015D0  0E3F               	movlw	63
  2408   0015D2  6E06               	movwf	??_color_click_init^0,c
  2409   0015D4  0E55               	movlw	85
  2410   0015D6                     u2377:
  2411   0015D6  2EE8               	decfsz	wreg,f,c
  2412   0015D8  D7FE               	bra	u2377
  2413   0015DA  2E06               	decfsz	??_color_click_init^0,f,c
  2414   0015DC  D7FC               	bra	u2377
  2415   0015DE  0000               	nop	
  2416   0015E0                     
  2417                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2418   0015E0  0E03               	movlw	3
  2419   0015E2  6E04               	movwf	color_writetoaddr@value^0,c
  2420   0015E4  0E00               	movlw	0
  2421   0015E6  EC4C  F00B         	call	_color_writetoaddr
  2422   0015EA                     
  2423                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2424   0015EA  0ED5               	movlw	213
  2425   0015EC  6E04               	movwf	color_writetoaddr@value^0,c
  2426   0015EE  0E01               	movlw	1
  2427   0015F0  EC4C  F00B         	call	_color_writetoaddr
  2428   0015F4  0012               	return		;funcret
  2429   0015F6                     __end_of_color_click_init:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _color_writetoaddr *****************
  2433 ;; Defined at:
  2434 ;;		line 21 in file "color.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  address         1    wreg     unsigned char 
  2437 ;;  value           1    3[COMRAM] unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  address         1    4[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2449 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;Total ram usage:        2 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 3
  2456 ;; This function calls:
  2457 ;;		_I2C_2_Master_Start
  2458 ;;		_I2C_2_Master_Stop
  2459 ;;		_I2C_2_Master_Write
  2460 ;; This function is called by:
  2461 ;;		_color_click_init
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text15
  2466   001698                     __ptext15:
  2467                           	callstack 0
  2468   001698                     _color_writetoaddr:
  2469                           	callstack 26
  2470                           
  2471                           ;incstack = 0
  2472                           ;color_writetoaddr@address stored from wreg
  2473   001698  6E05               	movwf	color_writetoaddr@address^0,c
  2474   00169A                     
  2475                           ;color.c: 22:     I2C_2_Master_Start();
  2476   00169A  EC82  F00B         	call	_I2C_2_Master_Start	;wreg free
  2477                           
  2478                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2479   00169E  0E52               	movlw	82
  2480   0016A0  EC77  F00B         	call	_I2C_2_Master_Write
  2481                           
  2482                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2483   0016A4  5005               	movf	color_writetoaddr@address^0,w,c
  2484   0016A6  0980               	iorlw	128
  2485   0016A8  EC77  F00B         	call	_I2C_2_Master_Write
  2486                           
  2487                           ;color.c: 25:     I2C_2_Master_Write(value);
  2488   0016AC  5004               	movf	color_writetoaddr@value^0,w,c
  2489   0016AE  EC77  F00B         	call	_I2C_2_Master_Write
  2490                           
  2491                           ;color.c: 26:     I2C_2_Master_Stop();
  2492   0016B2  EC7D  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2493   0016B6  0012               	return		;funcret
  2494   0016B8                     __end_of_color_writetoaddr:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _I2C_2_Master_Write *****************
  2498 ;; Defined at:
  2499 ;;		line 45 in file "i2c.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  data_byte       1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  data_byte       1    2[COMRAM] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;Total ram usage:        1 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 2
  2520 ;; This function calls:
  2521 ;;		_I2C_2_Master_Idle
  2522 ;; This function is called by:
  2523 ;;		_color_writetoaddr
  2524 ;;		_color_read_Red
  2525 ;;		_color_read_Blue
  2526 ;;		_color_read_Green
  2527 ;;		_color_read_Clear
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text16
  2532   0016EE                     __ptext16:
  2533                           	callstack 0
  2534   0016EE                     _I2C_2_Master_Write:
  2535                           	callstack 26
  2536                           
  2537                           ;incstack = 0
  2538                           ;I2C_2_Master_Write@data_byte stored from wreg
  2539   0016EE  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  2540   0016F0                     
  2541                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2542   0016F0  EC10  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2543   0016F4                     
  2544                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2545   0016F4  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2546   0016F8  0012               	return		;funcret
  2547   0016FA                     __end_of_I2C_2_Master_Write:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _I2C_2_Master_Stop *****************
  2551 ;; Defined at:
  2552 ;;		line 39 in file "i2c.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 2
  2573 ;; This function calls:
  2574 ;;		_I2C_2_Master_Idle
  2575 ;; This function is called by:
  2576 ;;		_color_writetoaddr
  2577 ;;		_color_read_Red
  2578 ;;		_color_read_Blue
  2579 ;;		_color_read_Green
  2580 ;;		_color_read_Clear
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text17
  2585   0016FA                     __ptext17:
  2586                           	callstack 0
  2587   0016FA                     _I2C_2_Master_Stop:
  2588                           	callstack 26
  2589   0016FA                     
  2590                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2591   0016FA  EC10  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2592   0016FE                     
  2593                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2594   0016FE  010E               	movlb	14	; () banked
  2595   001700  85DA               	bsf	218,2,b	;volatile
  2596   001702                     
  2597                           ; BSR set to: 14
  2598   001702  0012               	return		;funcret
  2599   001704                     __end_of_I2C_2_Master_Stop:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _I2C_2_Master_Start *****************
  2603 ;; Defined at:
  2604 ;;		line 27 in file "i2c.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 2
  2625 ;; This function calls:
  2626 ;;		_I2C_2_Master_Idle
  2627 ;; This function is called by:
  2628 ;;		_color_writetoaddr
  2629 ;;		_color_read_Red
  2630 ;;		_color_read_Blue
  2631 ;;		_color_read_Green
  2632 ;;		_color_read_Clear
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text18
  2637   001704                     __ptext18:
  2638                           	callstack 0
  2639   001704                     _I2C_2_Master_Start:
  2640                           	callstack 26
  2641   001704                     
  2642                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2643   001704  EC10  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2644   001708                     
  2645                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2646   001708  010E               	movlb	14	; () banked
  2647   00170A  81DA               	bsf	218,0,b	;volatile
  2648   00170C                     
  2649                           ; BSR set to: 14
  2650   00170C  0012               	return		;funcret
  2651   00170E                     __end_of_I2C_2_Master_Start:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _I2C_2_Master_Idle *****************
  2655 ;; Defined at:
  2656 ;;		line 22 in file "i2c.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2674 ;;Total ram usage:        1 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 1
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_I2C_2_Master_Start
  2681 ;;		_I2C_2_Master_Stop
  2682 ;;		_I2C_2_Master_Write
  2683 ;;		_I2C_2_Master_RepStart
  2684 ;;		_I2C_2_Master_Read
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text19
  2689   001620                     __ptext19:
  2690                           	callstack 0
  2691   001620                     _I2C_2_Master_Idle:
  2692                           	callstack 26
  2693   001620                     l242:
  2694   001620  010E               	movlb	14	; () banked
  2695   001622  B5D8               	btfsc	216,2,b	;volatile
  2696   001624  EF16  F00B         	goto	u2121
  2697   001628  EF18  F00B         	goto	u2120
  2698   00162C                     u2121:
  2699   00162C  EF10  F00B         	goto	l242
  2700   001630                     u2120:
  2701   001630                     
  2702                           ; BSR set to: 14
  2703   001630  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2704   001634  0E1F               	movlw	31
  2705   001636  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  2706   001638  A4D8               	btfss	status,2,c
  2707   00163A  EF21  F00B         	goto	u2131
  2708   00163E  EF23  F00B         	goto	u2130
  2709   001642                     u2131:
  2710   001642  EF10  F00B         	goto	l242
  2711   001646                     u2130:
  2712   001646                     
  2713                           ; BSR set to: 14
  2714   001646  0012               	return		;funcret
  2715   001648                     __end_of_I2C_2_Master_Idle:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _I2C_2_Master_Init *****************
  2719 ;; Defined at:
  2720 ;;		line 4 in file "i2c.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_color_click_init
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text20
  2749   0015F6                     __ptext20:
  2750                           	callstack 0
  2751   0015F6                     _I2C_2_Master_Init:
  2752                           	callstack 28
  2753   0015F6                     
  2754                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2755   0015F6  010E               	movlb	14	; () banked
  2756   0015F8  51D9               	movf	217,w,b	;volatile
  2757   0015FA  0BF0               	andlw	-16
  2758   0015FC  0908               	iorlw	8
  2759   0015FE  6FD9               	movwf	217,b	;volatile
  2760   001600                     
  2761                           ; BSR set to: 14
  2762                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2763   001600  8BD9               	bsf	217,5,b	;volatile
  2764                           
  2765                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2766   001602  0E9F               	movlw	159
  2767   001604  6FD6               	movwf	214,b	;volatile
  2768   001606                     
  2769                           ; BSR set to: 14
  2770                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2771   001606  8A84               	bsf	132,5,c	;volatile
  2772   001608                     
  2773                           ; BSR set to: 14
  2774                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2775   001608  8C84               	bsf	132,6,c	;volatile
  2776   00160A                     
  2777                           ; BSR set to: 14
  2778                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2779   00160A  9BA7               	bcf	167,5,b	;volatile
  2780   00160C                     
  2781                           ; BSR set to: 14
  2782                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2783   00160C  9DA7               	bcf	167,6,b	;volatile
  2784                           
  2785                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2786   00160E  0E1D               	movlw	29
  2787   001610  6F1D               	movwf	29,b	;volatile
  2788                           
  2789                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2790   001612  0E1E               	movlw	30
  2791   001614  6F1C               	movwf	28,b	;volatile
  2792                           
  2793                           ;i2c.c: 18:   RD5PPS=0x1C;
  2794   001616  0E1C               	movlw	28
  2795   001618  6F6F               	movwf	111,b	;volatile
  2796                           
  2797                           ;i2c.c: 19:   RD6PPS=0x1B;
  2798   00161A  0E1B               	movlw	27
  2799   00161C  6F70               	movwf	112,b	;volatile
  2800   00161E                     
  2801                           ; BSR set to: 14
  2802   00161E  0012               	return		;funcret
  2803   001620                     __end_of_I2C_2_Master_Init:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _buggy_lights_init *****************
  2807 ;; Defined at:
  2808 ;;		line 4 in file "buggy_lights.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		None
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text21
  2837   0014B8                     __ptext21:
  2838                           	callstack 0
  2839   0014B8                     _buggy_lights_init:
  2840                           	callstack 29
  2841   0014B8                     
  2842                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2843   0014B8  9884               	bcf	132,4,c	;volatile
  2844                           
  2845                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2846   0014BA  9288               	bcf	136,1,c	;volatile
  2847                           
  2848                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2849   0014BC  9684               	bcf	132,3,c	;volatile
  2850                           
  2851                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2852   0014BE  9086               	bcf	134,0,c	;volatile
  2853                           
  2854                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2855   0014C0  9088               	bcf	136,0,c	;volatile
  2856                           
  2857                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  2858   0014C2  887C               	bsf	124,4,c	;volatile
  2859                           
  2860                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  2861   0014C4  8280               	bsf	128,1,c	;volatile
  2862                           
  2863                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  2864   0014C6  867C               	bsf	124,3,c	;volatile
  2865                           
  2866                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  2867   0014C8  807E               	bsf	126,0,c	;volatile
  2868                           
  2869                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  2870   0014CA  8080               	bsf	128,0,c	;volatile
  2871                           
  2872                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2873   0014CC  9E84               	bcf	132,7,c	;volatile
  2874                           
  2875                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2876   0014CE  9688               	bcf	136,3,c	;volatile
  2877                           
  2878                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2879   0014D0  8E7C               	bsf	124,7,c	;volatile
  2880                           
  2881                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2882   0014D2  8680               	bsf	128,3,c	;volatile
  2883                           
  2884                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  2885   0014D4  9081               	bcf	129,0,c	;volatile
  2886                           
  2887                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  2888   0014D6  9483               	bcf	131,2,c	;volatile
  2889                           
  2890                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  2891   0014D8  9084               	bcf	132,0,c	;volatile
  2892                           
  2893                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  2894   0014DA  8079               	bsf	121,0,c	;volatile
  2895                           
  2896                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  2897   0014DC  847B               	bsf	123,2,c	;volatile
  2898                           
  2899                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  2900   0014DE  807C               	bsf	124,0,c	;volatile
  2901                           
  2902                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  2903   0014E0  9281               	bcf	129,1,c	;volatile
  2904                           
  2905                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  2906   0014E2  9C83               	bcf	131,6,c	;volatile
  2907                           
  2908                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  2909   0014E4  9488               	bcf	136,2,c	;volatile
  2910                           
  2911                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  2912   0014E6  8279               	bsf	121,1,c	;volatile
  2913                           
  2914                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  2915   0014E8  8C7B               	bsf	123,6,c	;volatile
  2916                           
  2917                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  2918   0014EA  8480               	bsf	128,2,c	;volatile
  2919                           
  2920                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  2921   0014EC  9287               	bcf	135,1,c	;volatile
  2922                           
  2923                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  2924   0014EE  9881               	bcf	129,4,c	;volatile
  2925                           
  2926                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  2927   0014F0  9E86               	bcf	134,7,c	;volatile
  2928                           
  2929                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  2930   0014F2  827F               	bsf	127,1,c	;volatile
  2931                           
  2932                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  2933   0014F4  8879               	bsf	121,4,c	;volatile
  2934                           
  2935                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  2936   0014F6  8E7E               	bsf	126,7,c	;volatile
  2937                           
  2938                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  2939   0014F8  9087               	bcf	135,0,c	;volatile
  2940                           
  2941                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  2942   0014FA  9E85               	bcf	133,7,c	;volatile
  2943                           
  2944                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  2945   0014FC  9681               	bcf	129,3,c	;volatile
  2946                           
  2947                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  2948   0014FE  807F               	bsf	127,0,c	;volatile
  2949                           
  2950                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  2951   001500  8E7D               	bsf	125,7,c	;volatile
  2952                           
  2953                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  2954   001502  8679               	bsf	121,3,c	;volatile
  2955   001504  0012               	return		;funcret
  2956   001506                     __end_of_buggy_lights_init:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _Timer0_init *****************
  2960 ;; Defined at:
  2961 ;;		line 7 in file "timers.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text22
  2990   001648                     __ptext22:
  2991                           	callstack 0
  2992   001648                     _Timer0_init:
  2993                           	callstack 29
  2994   001648                     
  2995                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2996   001648  50D6               	movf	214,w,c	;volatile
  2997   00164A  0B1F               	andlw	-225
  2998   00164C  0940               	iorlw	64
  2999   00164E  6ED6               	movwf	214,c	;volatile
  3000   001650                     
  3001                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3002   001650  88D6               	bsf	214,4,c	;volatile
  3003   001652                     
  3004                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3005   001652  88D5               	bsf	213,4,c	;volatile
  3006                           
  3007                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3008   001654  50D6               	movf	214,w,c	;volatile
  3009   001656  0BF0               	andlw	-16
  3010   001658  090E               	iorlw	14
  3011   00165A  6ED6               	movwf	214,c	;volatile
  3012                           
  3013                           ;timers.c: 20:     TMR0H = 0;
  3014   00165C  0E00               	movlw	0
  3015   00165E  6ED4               	movwf	212,c	;volatile
  3016                           
  3017                           ;timers.c: 21:     TMR0L = 0;
  3018   001660  0E00               	movlw	0
  3019   001662  6ED3               	movwf	211,c	;volatile
  3020   001664                     
  3021                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3022   001664  8ED5               	bsf	213,7,c	;volatile
  3023   001666                     
  3024                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3025   001666  010E               	movlb	14	; () banked
  3026   001668  8B29               	bsf	41,5,b	;volatile
  3027   00166A                     
  3028                           ; BSR set to: 14
  3029                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3030   00166A  8CF2               	bsf	242,6,c	;volatile
  3031   00166C                     
  3032                           ; BSR set to: 14
  3033                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3034   00166C  8EF2               	bsf	242,7,c	;volatile
  3035   00166E                     
  3036                           ; BSR set to: 14
  3037   00166E  0012               	return		;funcret
  3038   001670                     __end_of_Timer0_init:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _ISR *****************
  3042 ;; Defined at:
  3043 ;;		line 29 in file "timers.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;Total ram usage:        1 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		Interrupt level 2
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	intcode
  3071   000008                     __pintcode:
  3072                           	callstack 0
  3073   000008                     _ISR:
  3074                           	callstack 24
  3075                           
  3076                           ; BSR set to: 14
  3077                           ;incstack = 0
  3078   000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3079   00000A                     
  3080                           ;timers.c: 32:     if (PIR0bits.TMR0IF) {
  3081   00000A  010E               	movlb	14	; () banked
  3082   00000C  AB33               	btfss	51,5,b	;volatile
  3083   00000E  EF0B  F000         	goto	i2u153_41
  3084   000012  EF0D  F000         	goto	i2u153_40
  3085   000016                     i2u153_41:
  3086   000016  EF21  F000         	goto	i2l565
  3087   00001A                     i2u153_40:
  3088   00001A                     
  3089                           ; BSR set to: 14
  3090                           ;timers.c: 39:         LATHbits.LATH3 = !LATHbits.LATH3;
  3091   00001A  A680               	btfss	128,3,c	;volatile
  3092   00001C  EF12  F000         	goto	i2u154_41
  3093   000020  EF16  F000         	goto	i2u154_40
  3094   000024                     i2u154_41:
  3095   000024  6A01               	clrf	??_ISR^0,c
  3096   000026  2A01               	incf	??_ISR^0,f,c
  3097   000028  EF17  F000         	goto	i2u155_48
  3098   00002C                     i2u154_40:
  3099   00002C  6A01               	clrf	??_ISR^0,c
  3100   00002E                     i2u155_48:
  3101   00002E  4601               	rlncf	??_ISR^0,f,c
  3102   000030  4601               	rlncf	??_ISR^0,f,c
  3103   000032  4601               	rlncf	??_ISR^0,f,c
  3104   000034  5080               	movf	128,w,c	;volatile
  3105   000036  1801               	xorwf	??_ISR^0,w,c
  3106   000038  0BF7               	andlw	-9
  3107   00003A  1801               	xorwf	??_ISR^0,w,c
  3108   00003C  6E80               	movwf	128,c	;volatile
  3109   00003E                     
  3110                           ;timers.c: 40:         PIR0bits.TMR0IF = 0;
  3111   00003E  010E               	movlb	14	; () banked
  3112   000040  9B33               	bcf	51,5,b	;volatile
  3113   000042                     i2l565:
  3114                           
  3115                           ; BSR set to: 14
  3116   000042  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3117   000044  0011               	retfie		f
  3118   000046                     __end_of_ISR:
  3119                           	callstack 0
  3120                           
  3121                           	psect	rparam
  3122   000000                     
  3123                           	psect	temp
  3124   00004D                     btemp:
  3125                           	callstack 0
  3126   00004D                     	ds	1
  3127   000000                     int$flags	set	btemp
  3128   000000                     wtemp8	set	btemp+1
  3129   000000                     ttemp5	set	btemp+1
  3130   000000                     ttemp6	set	btemp+4
  3131   000000                     ttemp7	set	btemp+8
  3132                           
  3133                           	psect	idloc
  3134                           
  3135                           ;Config register IDLOC0 @ 0x200000
  3136                           ;	unspecified, using default values
  3137   200000                     	org	2097152
  3138   200000  FFFF               	dw	65535
  3139                           
  3140                           ;Config register IDLOC1 @ 0x200002
  3141                           ;	unspecified, using default values
  3142   200002                     	org	2097154
  3143   200002  FFFF               	dw	65535
  3144                           
  3145                           ;Config register IDLOC2 @ 0x200004
  3146                           ;	unspecified, using default values
  3147   200004                     	org	2097156
  3148   200004  FFFF               	dw	65535
  3149                           
  3150                           ;Config register IDLOC3 @ 0x200006
  3151                           ;	unspecified, using default values
  3152   200006                     	org	2097158
  3153   200006  FFFF               	dw	65535
  3154                           
  3155                           ;Config register IDLOC4 @ 0x200008
  3156                           ;	unspecified, using default values
  3157   200008                     	org	2097160
  3158   200008  FFFF               	dw	65535
  3159                           
  3160                           ;Config register IDLOC5 @ 0x20000A
  3161                           ;	unspecified, using default values
  3162   20000A                     	org	2097162
  3163   20000A  FFFF               	dw	65535
  3164                           
  3165                           ;Config register IDLOC6 @ 0x20000C
  3166                           ;	unspecified, using default values
  3167   20000C                     	org	2097164
  3168   20000C  FFFF               	dw	65535
  3169                           
  3170                           ;Config register IDLOC7 @ 0x20000E
  3171                           ;	unspecified, using default values
  3172   20000E                     	org	2097166
  3173   20000E  FFFF               	dw	65535
  3174                           
  3175                           	psect	config
  3176                           
  3177                           ;Config register CONFIG1L @ 0x300000
  3178                           ;	External Oscillator mode Selection bits
  3179                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3180                           ;	Power-up default value for COSC bits
  3181                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3182   300000                     	org	3145728
  3183   300000  AA                 	db	170
  3184                           
  3185                           ;Config register CONFIG1H @ 0x300001
  3186                           ;	unspecified, using default values
  3187                           ;	Clock Out Enable bit
  3188                           ;	CLKOUTEN = 0x1, unprogrammed default
  3189                           ;	Clock Switch Enable bit
  3190                           ;	CSWEN = 0x1, unprogrammed default
  3191                           ;	Fail-Safe Clock Monitor Enable bit
  3192                           ;	FCMEN = 0x1, unprogrammed default
  3193   300001                     	org	3145729
  3194   300001  FF                 	db	255
  3195                           
  3196                           ;Config register CONFIG2L @ 0x300002
  3197                           ;	unspecified, using default values
  3198                           ;	Master Clear Enable bit
  3199                           ;	MCLRE = 0x1, unprogrammed default
  3200                           ;	Power-up Timer Enable bit
  3201                           ;	PWRTE = 0x1, unprogrammed default
  3202                           ;	Low-power BOR enable bit
  3203                           ;	LPBOREN = 0x1, unprogrammed default
  3204                           ;	Brown-out Reset Enable bits
  3205                           ;	BOREN = 0x3, unprogrammed default
  3206   300002                     	org	3145730
  3207   300002  FF                 	db	255
  3208                           
  3209                           ;Config register CONFIG2H @ 0x300003
  3210                           ;	unspecified, using default values
  3211                           ;	Brown Out Reset Voltage selection bits
  3212                           ;	BORV = 0x3, unprogrammed default
  3213                           ;	ZCD Disable bit
  3214                           ;	ZCD = 0x1, unprogrammed default
  3215                           ;	PPSLOCK bit One-Way Set Enable bit
  3216                           ;	PPS1WAY = 0x1, unprogrammed default
  3217                           ;	Stack Full/Underflow Reset Enable bit
  3218                           ;	STVREN = 0x1, unprogrammed default
  3219                           ;	Debugger Enable bit
  3220                           ;	DEBUG = 0x1, unprogrammed default
  3221                           ;	Extended Instruction Set Enable bit
  3222                           ;	XINST = 0x1, unprogrammed default
  3223   300003                     	org	3145731
  3224   300003  FF                 	db	255
  3225                           
  3226                           ;Config register CONFIG3L @ 0x300004
  3227                           ;	WDT Period Select bits
  3228                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3229                           ;	WDT operating mode
  3230                           ;	WDTE = OFF, WDT Disabled
  3231   300004                     	org	3145732
  3232   300004  9F                 	db	159
  3233                           
  3234                           ;Config register CONFIG3H @ 0x300005
  3235                           ;	unspecified, using default values
  3236                           ;	WDT Window Select bits
  3237                           ;	WDTCWS = 0x7, unprogrammed default
  3238                           ;	WDT input clock selector
  3239                           ;	WDTCCS = 0x7, unprogrammed default
  3240   300005                     	org	3145733
  3241   300005  FF                 	db	255
  3242                           
  3243                           ;Config register CONFIG4L @ 0x300006
  3244                           ;	unspecified, using default values
  3245                           ;	Write Protection Block 0
  3246                           ;	WRT0 = 0x1, unprogrammed default
  3247                           ;	Write Protection Block 1
  3248                           ;	WRT1 = 0x1, unprogrammed default
  3249                           ;	Write Protection Block 2
  3250                           ;	WRT2 = 0x1, unprogrammed default
  3251                           ;	Write Protection Block 3
  3252                           ;	WRT3 = 0x1, unprogrammed default
  3253                           ;	Write Protection Block 3
  3254                           ;	WRT4 = 0x1, unprogrammed default
  3255                           ;	Write Protection Block 3
  3256                           ;	WRT5 = 0x1, unprogrammed default
  3257                           ;	Write Protection Block 3
  3258                           ;	WRT6 = 0x1, unprogrammed default
  3259                           ;	Write Protection Block 3
  3260                           ;	WRT7 = 0x1, unprogrammed default
  3261   300006                     	org	3145734
  3262   300006  FF                 	db	255
  3263                           
  3264                           ;Config register CONFIG4H @ 0x300007
  3265                           ;	unspecified, using default values
  3266                           ;	Configuration Register Write Protection bit
  3267                           ;	WRTC = 0x1, unprogrammed default
  3268                           ;	Boot Block Write Protection bit
  3269                           ;	WRTB = 0x1, unprogrammed default
  3270                           ;	Data EEPROM Write Protection bit
  3271                           ;	WRTD = 0x1, unprogrammed default
  3272                           ;	Scanner Enable bit
  3273                           ;	SCANE = 0x1, unprogrammed default
  3274                           ;	Low Voltage Programming Enable bit
  3275                           ;	LVP = 0x1, unprogrammed default
  3276   300007                     	org	3145735
  3277   300007  FF                 	db	255
  3278                           
  3279                           ;Config register CONFIG5L @ 0x300008
  3280                           ;	unspecified, using default values
  3281                           ;	UserNVM Program Memory Code Protection bit
  3282                           ;	CP = 0x1, unprogrammed default
  3283                           ;	DataNVM Memory Code Protection bit
  3284                           ;	CPD = 0x1, unprogrammed default
  3285   300008                     	org	3145736
  3286   300008  FF                 	db	255
  3287                           
  3288                           ;Config register CONFIG5H @ 0x300009
  3289                           ;	unspecified, using default values
  3290   300009                     	org	3145737
  3291   300009  FF                 	db	255
  3292                           
  3293                           ;Config register CONFIG6L @ 0x30000A
  3294                           ;	unspecified, using default values
  3295                           ;	Table Read Protection Block 0
  3296                           ;	EBTR0 = 0x1, unprogrammed default
  3297                           ;	Table Read Protection Block 1
  3298                           ;	EBTR1 = 0x1, unprogrammed default
  3299                           ;	Table Read Protection Block 2
  3300                           ;	EBTR2 = 0x1, unprogrammed default
  3301                           ;	Table Read Protection Block 3
  3302                           ;	EBTR3 = 0x1, unprogrammed default
  3303                           ;	Table Read Protection Block 4
  3304                           ;	EBTR4 = 0x1, unprogrammed default
  3305                           ;	Table Read Protection Block 5
  3306                           ;	EBTR5 = 0x1, unprogrammed default
  3307                           ;	Table Read Protection Block 6
  3308                           ;	EBTR6 = 0x1, unprogrammed default
  3309                           ;	Table Read Protection Block 7
  3310                           ;	EBTR7 = 0x1, unprogrammed default
  3311   30000A                     	org	3145738
  3312   30000A  FF                 	db	255
  3313                           
  3314                           ;Config register CONFIG6H @ 0x30000B
  3315                           ;	unspecified, using default values
  3316                           ;	Boot Block Table Read Protection bit
  3317                           ;	EBTRB = 0x1, unprogrammed default
  3318   30000B                     	org	3145739
  3319   30000B  FF                 	db	255
  3320                           tosu	equ	0xFFF
  3321                           tosh	equ	0xFFE
  3322                           tosl	equ	0xFFD
  3323                           stkptr	equ	0xFFC
  3324                           pclatu	equ	0xFFB
  3325                           pclath	equ	0xFFA
  3326                           pcl	equ	0xFF9
  3327                           tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodh	equ	0xFF4
  3332                           prodl	equ	0xFF3
  3333                           indf0	equ	0xFEF
  3334                           postinc0	equ	0xFEE
  3335                           postdec0	equ	0xFED
  3336                           preinc0	equ	0xFEC
  3337                           plusw0	equ	0xFEB
  3338                           fsr0h	equ	0xFEA
  3339                           fsr0l	equ	0xFE9
  3340                           wreg	equ	0xFE8
  3341                           indf1	equ	0xFE7
  3342                           postinc1	equ	0xFE6
  3343                           postdec1	equ	0xFE5
  3344                           preinc1	equ	0xFE4
  3345                           plusw1	equ	0xFE3
  3346                           fsr1h	equ	0xFE2
  3347                           fsr1l	equ	0xFE1
  3348                           bsr	equ	0xFE0
  3349                           indf2	equ	0xFDF
  3350                           postinc2	equ	0xFDE
  3351                           postdec2	equ	0xFDD
  3352                           preinc2	equ	0xFDC
  3353                           plusw2	equ	0xFDB
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        39
    BSS         164
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      76
    BANK0           160     18     160
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2565$buffer	PTR unsigned char  size(2) Largest target is 0

    S2565$source	PTR const unsigned char  size(2) Largest target is 0

    sendArraySerial4@arr	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 21
		 -> sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 21
		 -> sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendArraySerial4
    _sendArraySerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6260
                                             73 COMRAM     2     2      0
                                              0 BANK0     18    18      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                   _sendArraySerial4
 ---------------------------------------------------------------------------------
 (1) _sendArraySerial4                                    26    25      1    5304
                                             47 COMRAM    26    25      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4601
                                             28 COMRAM    19    15      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3911
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3450
                                             11 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     366
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _sendArraySerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      4C       1       80.9%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     128      62        0.0%
DATA                 0      0     128       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 10:30:07 2024

               _turn180Delay 00CB              _trail_timer_low 0080                           l31 1504  
                         l53 15F4                           l56 16B6                 ___awdiv@sign 0007  
           _trail_timer_high 0094                          l144 1398                          l400 1460  
                        l242 1620                          l245 1646                          l254 1702  
                        l239 161E                          l248 170C                          l408 13FE  
                        l257 16F8                          l382 16D4                          l391 16D8  
                        l394 16EC                          l812 125E                          l557 166E  
                        l799 11AE                          _ISR 0008                          _abs 158E  
               ___awmod@sign 0007                          wreg 0FE8                  _squareDelay 00C7  
                       ?_ISR 0001                         ?_abs 0008                         l1301 15C0  
                       l1313 1308                         l3100 114E                         l1324 170E  
                       l3110 1182                         l3102 115C                         l1246 158C  
                       l3112 1188                         l3104 1162                         l3200 0EBE  
                       l3106 1178                         l3114 118E                         l3130 11CE  
                       l3122 11B0                         l3210 0F38                         l3202 0ED6  
                       l3300 14B8                         l3116 119E                         l3108 1180  
                       l3140 1206                         l3132 11DC                         l3124 11B4  
                       l3220 0F7E                         l3212 0F48                         l3204 0F06  
                       l1293 14AE                         l3310 15EA                         l3302 15C2  
                       l3118 11A6                         l3142 1214                         l3150 123E  
                       l3134 11E4                         l3126 11C2                         l3222 0F98  
                       l3214 0F58                         l3206 0F22                         l1294 14B6  
                       l1287 0FAC                         l3240 1704                         l3304 15C6  
                       l3080 10F0                         l3152 124E                         l3144 122A  
                       l3136 11F6                         l3128 11CA                         l3160 1270  
                       l1288 0FFE                         l3216 0F68                         l3224 0F9A  
                       l3208 0F26                         l3232 0FCC                         l3242 1708  
                       l3250 16FE                         l3306 15D0                         l3090 1120  
                       l3082 10FE                         l3154 1256                         l3146 1232  
                       l3138 11FE                         l1298 15A8                         l3162 1280  
                       l3234 0FEE                         l3218 0F76                         l3226 0FB8  
                       l3244 16F0                         l3308 15E0                         l3340 1340  
                       l3252 16D8                         l3092 1124                         l3084 1106  
                       l3148 1238                         l3172 158E                         l3164 128A  
                       l3236 0FF6                         l3228 0FC0                         l3180 0E0A  
                       l3260 1474                         l3420 1000                         l3270 1608  
                       l3246 16F4                         l3350 137E                         l3342 1344  
                       l3254 16E8                         l3094 112C                         l3086 110A  
                       l3078 10EC                         l3174 159C                         l3166 12A6  
                       l3158 1260                         l3190 0E52                         l3182 0E12  
                       l3262 148E                         l3430 102E                         l3422 1018  
                       l3272 160A                         l3264 15F6                         l3176 1620  
                       l3248 16FA                         l3352 1380                         l3344 1368  
                       l3336 130A                         l3360 16B8                         l3280 1404  
                       l3096 113E                         l3088 1118                         l3168 12D8  
                       l3192 0E5C                         l3184 0E38                         l3256 1462  
                       l3440 104E                         l3432 1032                         l3424 1018  
                       l3274 160C                         l3266 1600                         l3178 1630  
                       l3354 138A                         l3346 1372                         l3338 131A  
                       l3370 16D2                         l3362 16C2                         l3282 142A  
                       l3098 1146                         l3194 0E7C                         l3186 0E40  
                       l3258 1466                         l3290 155A                         l3450 106E  
                       l3442 1052                         l3434 103A                         l3426 1024  
                       l3380 1666                         l3372 1648                         l3268 1606  
                       l3276 169A                         l3356 138C                         l3348 1374  
                       l3364 16C4                         l3284 142E                         l3196 0E9C  
                       l3188 0E4E                         l3292 1562                         l3460 1080  
                       l3452 1072                         l3444 1056                         l3436 1042  
                       l3428 102A                         l3382 166A                         l3374 1650  
                       l3358 1396                         l3366 16CE                         l3278 1400  
                       l3198 0EB4                         l3294 157A                         l3286 154A  
                       l3470 10A0                         l3462 1082                         l3454 1076  
                       l3446 105E                         l3438 104A                         l3384 166C  
                       l3376 1652                         l3368 16D0                         l3296 1584  
                       l3288 1552                         l3392 13A6                         l3472 10A2  
                       l3464 1086                         l3456 107A                         l3448 1066  
                       l3378 1664                         l3394 13CA                         l3386 139A  
                       l3474 10C4                         l3466 1088                         l3458 107E  
                       l3396 13CE                         l3476 10CC                         l3468 1096  
                       l3398 13E4                         STR_1 0E01                         STR_2 0E06  
                       STR_3 0E06                         STR_4 0E03                         u2000 119E  
                       u2001 119A                         u2010 11C2                         u2011 11BE  
                       u2020 11DC                         u2100 12D8                         u2021 11D8  
                       u2101 12D4                         u2030 11F6                         u2110 159C  
                       u2031 11F2                         u2111 1598                         u2120 1630  
                       u2040 1214                         u2200 0F48                         u2121 162C  
                       u2041 1210                         u2201 0F44                         u2130 1646  
                       u2050 122A                         u2210 0F58                         u2131 1642  
                       u2051 1226                         u2211 0F54                         u2060 124E  
                       u2220 0F68                         u2140 0E38                         u2061 124A  
                       u2221 0F64                         u2141 0E34                         u2070 1270  
                       u2230 0FAC                         u2150 0E7C                         u2071 126C  
                       u2231 0FA8                         u2151 0E78                         u2240 16E8  
                       u2080 1280                         u2160 0E9C                         u2320 1096  
               _BAUD4CONbits 0EE9                         u2241 16E4                         u2081 127C  
                       u2161 0E98                         u2321 1092                         u2090 12A6  
                       u2170 0ED2                         u2250 14AE                         u2330 10B4  
                       u2091 12A2                         u2171 0ECC                         u2251 14AA  
                       u2331 10AC                         u2260 1426                         u2180 0ED4  
                       u2270 1450                         u2190 0F38                         u2191 0F34  
                       u2280 1460                         u2281 145C                         u2290 13E4  
                       _T2PR 0FBC                         u2267 141C                         u2291 13E0  
                       u2348 10B6                         u2277 1446                         u2357 100A  
                       u2367 10D6                         u2377 15D6                         u1950 10FE  
                       u1951 10FA                         u1960 1118                         u1961 1114  
                       u1970 113E                         u1971 113A                         u1980 115C  
                       u1981 1158                         u1990 1178                         u1991 1174  
                       abs@a 0008                         _dbuf 0060                         _main 1000  
                       _prec 00C0                         _nout 00BC                         fsr0h 0FEA  
                       fsr1h 0FE2                         indf0 0FEF                         fsr2h 0FDA  
                       fsr0l 0FE9                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 004D                         start 0046  
               ___param_bank 0000                        ??_ISR 0001                        ??_abs 000A  
                      ?_main 0001              __end_of___awdiv 11B0              __end_of___awmod 1260  
            ___awdiv@divisor 0004                        i2l565 0042              ___awdiv@counter 0006  
               vfpfcnvrt@cnt 0011                 vfpfcnvrt@fmt 000D                        _TMR0H 0FD4  
                      _TMR0L 0FD3      __end_of_sendCharSerial4 16EE            sendArraySerial4@i 0048  
 __end_of_I2C_2_Master_Start 170E   __end_of_I2C_2_Master_Write 16FA                  _turningGear 00D6  
                      _flags 00C2                        _fputc 1260                        _width 00BE  
                      _putch 170E            _turnRight135Delay 00CD                        tablat 0FF5  
            _turnLeft90Delay 00D3                        ttemp5 004E                        ttemp6 0051  
                      ttemp7 0055                        status 0FD8                        wtemp8 004E  
            __end_of_sprintf 158E              __initialization 1506                 __end_of_main 10EC  
                     ??_main 004A                __activetblptr 0003                       ?_fputc 0002  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0002                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2820 000A                       i2l2826 001A  
                     i2l2828 003E                       _RG6PPS 0E88                vfpfcnvrt@done 0010  
   __end_of_color_click_init 15F6                       _RX4PPS 0E15                       _TX4REG 0EE4  
           _sendArraySerial4 139A             _turnLeft135Delay 00CF                ??_Timer0_init 0002  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 001C                    ??___awdiv 0006  
                  ??___awmod 0006                       clear_0 152C                       clear_1 1538  
           ___awdiv@quotient 0008              ___awmod@divisor 0004                       isa$std 0001  
            ___awmod@counter 0006                       fputc@c 0002                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           ?_sendCharSerial4 0001                       putch@c 0001             __end_of_vfprintf 14B8  
          ??_initDCmotorsPWM 0004                    ??_sprintf 0021            _buggy_lights_init 14B8  
                 __accesstop 0060      __end_of__initialization 1540           ?_buggy_lights_init 0001  
              ___rparam_used 0001               __pcstackCOMRAM 0001                 __pidataBANK0 1670  
        ??_buggy_lights_init 0002                __end_of_fputc 130A                __end_of_putch 1710  
        __end_of_Timer0_init 1670                      ??_fputc 0005    __end_of_buggy_lights_init 1506  
                    ??_putch 0002                   __pbssBANK0 0060                   __pbssBANK1 0100  
          _color_writetoaddr 1698                 _T2CLKCONbits 0FBF           ?_color_writetoaddr 0004  
        ??_color_writetoaddr 0005                      _SP4BRGH 0EE6                      _SP4BRGL 0EE5  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 0004  
  __end_of_color_writetoaddr 16B8           _I2C_2_Master_Start 1704                   _initUSART4 16B8  
         _I2C_2_Master_Write 16EE                      __Hparam 0000                      __Lparam 0000  
        sendArraySerial4@arr 0030                  _Timer0_init 1648      sendStringSerial4@string 0003  
                    ___awdiv 10EC                      ___awmod 11B0          ?_I2C_2_Master_Start 0001  
    sendArraySerial4@tempStr 0032          ?_I2C_2_Master_Write 0001                    ?_vfprintf 0019  
               __psmallconst 0E00                      __pcinit 1506                      __ramtop 0E00  
                    __ptext0 1000                      __ptext1 139A                      __ptext2 154A  
                    __ptext3 1462                      __ptext4 0E0A                      __ptext5 1260  
                    __ptext6 170E                      __ptext7 158E                      __ptext8 11B0  
                    __ptext9 10EC                    _T2CONbits 0FBD             ___awmod@dividend 0002  
   __end_of_sendArraySerial4 1400                    _T2HLTbits 0FBE                _RxBufWriteCnt 00C6  
                    _sprintf 154A         ??_I2C_2_Master_Start 0003         ??_I2C_2_Master_Write 0003  
       end_of_initialization 1540                      fputc@fp 0004            ?_color_click_init 0001  
         ??_color_click_init 0006            __end_of_vfpfcnvrt 1000                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0014                   ??_vfprintf 001C  
            _initDCmotorsPWM 130A                    _PORTFbits 0F8E                    _TRISAbits 0F81  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
   color_writetoaddr@address 0005                  _CCP1CONbits 0FAB                 _EUSART4RXbuf 00A8  
               _EUSART4TXbuf 0100                  _CCP2CONbits 0FA7                  _CCP3CONbits 0F26  
                ?_initUSART4 0001                  _CCP4CONbits 0F22    sendCharSerial4@charToSend 0002  
                 main@motorL 00EE                   main@motorR 00F7                  vfpfcnvrt@ap 000E  
                vfpfcnvrt@cp 0013                  vfpfcnvrt@fp 000C          start_initialization 1506  
                __end_of_ISR 0046                  __end_of_abs 15C2                _TxBufWriteCnt 004C  
           _turnRight90Delay 00D1        sendArraySerial4@index 0047      __end_of_initDCmotorsPWM 139A  
                vfprintf@fmt 001A                  __pdataBANK0 00C7                  __pbssCOMRAM 004C  
              __pcstackBANK0 00EE                    _backtrack 00C3                 ?_Timer0_init 0001  
                  __pintcode 0008                     ?___awdiv 0002                     ?___awmod 0002  
                __smallconst 0E00            _I2C_2_Master_Idle 1620            _I2C_2_Master_Init 15F6  
          _I2C_2_Master_Stop 16FA            ?_sendArraySerial4 0030                 _RxBufReadCnt 00C5  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001  
              _headbuttDelay 00C9     initDCmotorsPWM@PWMperiod 0002           ??_sendArraySerial4 0031  
                   ?_sprintf 001D                    _rampDelay 00D9            _sendStringSerial4 1400  
        ??_I2C_2_Master_Idle 0002          ??_I2C_2_Master_Init 0002                     _LATAbits 0F79  
        ??_I2C_2_Master_Stop 0003                     _LATCbits 0F7B                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0003  
                   _PIE4bits 0E2D                     i2u153_40 001A                     i2u153_41 0016  
                   i2u154_40 002C                     i2u154_41 0024                     i2u155_48 002E  
                   _PIR0bits 0E33                     _PIR4bits 0E37             ?_initDCmotorsPWM 0002  
          ??_sendCharSerial4 0002                     _SSP2CON2 0EDA          ??_sendStringSerial4 0005  
                   _SSP2STAT 0ED8                    _vfpfcnvrt 0E0A    __end_of_I2C_2_Master_Idle 1648  
  __end_of_I2C_2_Master_Init 1620    __end_of_I2C_2_Master_Stop 1704  I2C_2_Master_Write@data_byte 0003  
               _TxBufReadCnt 00C4                   vfpfcnvrt@c 0018                    copy_data0 151A  
  __end_of_sendStringSerial4 1462                 ??_initUSART4 0002                     __Hrparam 0000  
                 vfprintf@ap 001B                     __Lrparam 0000                   vfprintf@fp 0019  
                 ?_vfpfcnvrt 000C                   _ANSELDbits 0EA7                   _ANSELFbits 0EB4  
                 sprintf@fmt 001E                   sprintf@ret 0021                   _T0CON0bits 0FD5  
                 _T0CON1bits 0FD6           __end_of_initUSART4 16D6                     __ptext10 1400  
                   __ptext11 16D6                     __ptext20 15F6                     __ptext12 16B8  
                   __ptext21 14B8                     __ptext13 130A                     __ptext22 1648  
                   __ptext14 15C2                     __ptext15 1698                     __ptext16 16EE  
                   __ptext17 16FA                     __ptext18 1704                     __ptext19 1620  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                     int$flags 004D                     _vfprintf 1462  
                 _INTCONbits 0FF2                     intlevel2 0000                    sprintf@ap 0023  
               _topGearRight 00D7            _manoeuvre_pointer 00D5                  ??_vfpfcnvrt 000F  
           _color_click_init 15C2                  _topGearLeft 00D8                     sprintf@f 0024  
                   sprintf@s 001D                   _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C  
            _trail_manoeuvre 00DA                   _TX4STAbits 0EE8              _sendCharSerial4 16D6  
