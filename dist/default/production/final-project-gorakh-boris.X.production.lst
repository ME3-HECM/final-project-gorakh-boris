

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 19:44:57 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 18/08/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F67K40 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataBANK0
    80   001634                     __pidataBANK0:
    81                           	callstack 0
    82                           
    83                           ;initializer for _squareDelay
    84   001634  012C               	dw	300
    85                           
    86                           ;initializer for _headbuttDelay
    87   001636  0046               	dw	70
    88                           
    89                           ;initializer for _turn180Delay
    90   001638  01FE               	dw	510
    91                           
    92                           ;initializer for _turnRight135Delay
    93   00163A  012C               	dw	300
    94                           
    95                           ;initializer for _turnLeft135Delay
    96   00163C  012C               	dw	300
    97                           
    98                           ;initializer for _turnRight90Delay
    99   00163E  00AF               	dw	175
   100                           
   101                           ;initializer for _turnLeft90Delay
   102   001640  00AF               	dw	175
   103                           
   104                           ;initializer for _manoeuvre_pointer
   105   001642  DA                 	db	low _trail_manoeuvre
   106                           
   107                           ;initializer for _turningGear
   108   001643  2A                 	db	42
   109                           
   110                           ;initializer for _topGearRight
   111   001644  20                 	db	32
   112                           
   113                           ;initializer for _topGearLeft
   114   001645  1E                 	db	30
   115                           
   116                           ;initializer for _rampDelay
   117   001646  08                 	db	8
   118                           
   119                           ;initializer for _trail_manoeuvre
   120   001647  01                 	db	1
   121   001648  02                 	db	2
   122   001649  03                 	db	3
   123   00164A  04                 	db	4
   124   00164B  05                 	db	5
   125   00164C  06                 	db	6
   126   00164D  07                 	db	7
   127   00164E  08                 	db	8
   128   00164F  09                 	db	9
   129   001650  00                 	db	0
   130   001651  01                 	db	1
   131   001652  02                 	db	2
   132   001653  03                 	db	3
   133   001654  04                 	db	4
   134   001655  05                 	db	5
   135   001656  06                 	db	6
   136   001657  07                 	db	7
   137   001658  08                 	db	8
   138   001659  09                 	db	9
   139   00165A  00                 	db	0
   140   000000                     _TX4REG	set	3812
   141   000000                     _RC4STAbits	set	3815
   142   000000                     _SP4BRGH	set	3814
   143   000000                     _LATEbits	set	3965
   144   000000                     _TRISEbits	set	3973
   145   000000                     _LATGbits	set	3967
   146   000000                     _TRISGbits	set	3975
   147   000000                     _LATFbits	set	3966
   148   000000                     _LATHbits	set	3968
   149   000000                     _TRISFbits	set	3974
   150   000000                     _TRISHbits	set	3976
   151   000000                     _SSP2CON2bits	set	3802
   152   000000                     _RX4PPS	set	3605
   153   000000                     _SSP2CLKPPS	set	3612
   154   000000                     _SSP2DATPPS	set	3613
   155   000000                     _RC7PPS	set	3689
   156   000000                     _RE2PPS	set	3700
   157   000000                     _LATAbits	set	3961
   158   000000                     _LATDbits	set	3964
   159   000000                     _TRISDbits	set	3972
   160   000000                     _T2PR	set	4028
   161   000000                     _T2CONbits	set	4029
   162   000000                     _CCPR2H	set	4006
   163   000000                     _CCPR1H	set	4010
   164   000000                     _TRISCbits	set	3971
   165   000000                     _TRISAbits	set	3969
   166   000000                     _LATCbits	set	3963
   167   000000                     _RE4PPS	set	3702
   168   000000                     _RG6PPS	set	3720
   169   000000                     _RD5PPS	set	3695
   170   000000                     _ANSELDbits	set	3751
   171   000000                     _SSP2ADD	set	3798
   172   000000                     _SSP2CON1bits	set	3801
   173   000000                     _CCPR4H	set	3873
   174   000000                     _CCPR3H	set	3877
   175   000000                     _TMR0L	set	4051
   176   000000                     _TMR0H	set	4052
   177   000000                     _T0CON0bits	set	4053
   178   000000                     _T0CON1bits	set	4054
   179   000000                     _T2CLKCONbits	set	4031
   180   000000                     _T2HLTbits	set	4030
   181   000000                     _CCP1CONbits	set	4011
   182   000000                     _CCPTMRS0bits	set	4013
   183   000000                     _CCP2CONbits	set	4007
   184   000000                     _CCP3CONbits	set	3878
   185   000000                     _CCP4CONbits	set	3874
   186   000000                     _RC4REG	set	3811
   187   000000                     _SP4BRGL	set	3813
   188   000000                     _TX4STAbits	set	3816
   189   000000                     _BAUD4CONbits	set	3817
   190   000000                     _SSP2CON2	set	3802
   191   000000                     _SSP2STAT	set	3800
   192   000000                     _ANSELFbits	set	3764
   193   000000                     _SSP2BUF	set	3797
   194   000000                     _PIE0bits	set	3625
   195   000000                     _PIE4bits	set	3629
   196   000000                     _PIR4bits	set	3639
   197   000000                     _RC0PPS	set	3682
   198   000000                     _RD6PPS	set	3696
   199   000000                     _PIR0bits	set	3635
   200   000000                     _INTCONbits	set	4082
   201                           
   202                           	psect	smallconst
   203   000E00                     __psmallconst:
   204                           	callstack 0
   205   000E00  00                 	db	0
   206   000E01                     STR_1:
   207                           
   208                           ; BSR set to: 14
   209   000E01  25                 	db	37
   210   000E02  64                 	db	100	;'d'
   211   000E03  20                 	db	32
   212   000E04  0D                 	db	13
   213   000E05  00                 	db	0
   214   000E06                     STR_2:
   215                           
   216                           ; BSR set to: 14
   217   000E06  25                 	db	37
   218   000E07  64                 	db	100	;'d'
   219   000E08  00                 	db	0
   220   000E09  00                 	db	0	; dummy byte at the end
   221   000000                     
   222                           ; #config settings
   223                           
   224                           	psect	cinit
   225   0014CA                     __pcinit:
   226                           	callstack 0
   227   0014CA                     start_initialization:
   228                           	callstack 0
   229   0014CA                     __initialization:
   230                           	callstack 0
   231                           
   232                           ; Initialize objects allocated to BANK0 (39 bytes)
   233                           ; load TBLPTR registers with __pidataBANK0
   234   0014CA  0E34               	movlw	low __pidataBANK0
   235   0014CC  6EF6               	movwf	tblptrl,c
   236   0014CE  0E16               	movlw	high __pidataBANK0
   237   0014D0  6EF7               	movwf	tblptrh,c
   238   0014D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   239   0014D4  6EF8               	movwf	tblptru,c
   240   0014D6  EE00  F0C7         	lfsr	0,__pdataBANK0
   241   0014DA  EE10 F027          	lfsr	1,39
   242   0014DE                     copy_data0:
   243   0014DE  0009               	tblrd		*+
   244   0014E0  CFF5 FFEE          	movff	tablat,postinc0
   245   0014E4  50E5               	movf	postdec1,w,c
   246   0014E6  50E1               	movf	fsr1l,w,c
   247   0014E8  E1FA               	bnz	copy_data0
   248                           
   249                           ; Clear objects allocated to BANK1 (60 bytes)
   250   0014EA  EE01  F000         	lfsr	0,__pbssBANK1
   251   0014EE  0E3C               	movlw	60
   252   0014F0                     clear_0:
   253   0014F0  6AEE               	clrf	postinc0,c
   254   0014F2  06E8               	decf	wreg,f,c
   255   0014F4  E1FD               	bnz	clear_0
   256                           
   257                           ; Clear objects allocated to BANK0 (103 bytes)
   258   0014F6  EE00  F060         	lfsr	0,__pbssBANK0
   259   0014FA  0E67               	movlw	103
   260   0014FC                     clear_1:
   261   0014FC  6AEE               	clrf	postinc0,c
   262   0014FE  06E8               	decf	wreg,f,c
   263   001500  E1FD               	bnz	clear_1
   264                           
   265                           ; Clear objects allocated to COMRAM (1 bytes)
   266   001502  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   267   001504                     end_of_initialization:
   268                           	callstack 0
   269   001504                     __end_of__initialization:
   270                           	callstack 0
   271   001504  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272   001506  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273   001508  0100               	movlb	0
   274   00150A  EF62  F008         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277   00004C                     __pbssCOMRAM:
   278                           	callstack 0
   279   00004C                     _TxBufWriteCnt:
   280                           	callstack 0
   281   00004C                     	ds	1
   282                           
   283                           	psect	bssBANK0
   284   000060                     __pbssBANK0:
   285                           	callstack 0
   286   000060                     _dbuf:
   287                           	callstack 0
   288   000060                     	ds	32
   289   000080                     _trail_timer_low:
   290                           	callstack 0
   291   000080                     	ds	20
   292   000094                     _trail_timer_high:
   293                           	callstack 0
   294   000094                     	ds	20
   295   0000A8                     _EUSART4RXbuf:
   296                           	callstack 0
   297   0000A8                     	ds	20
   298   0000BC                     _nout:
   299                           	callstack 0
   300   0000BC                     	ds	2
   301   0000BE                     _width:
   302                           	callstack 0
   303   0000BE                     	ds	2
   304   0000C0                     _prec:
   305                           	callstack 0
   306   0000C0                     	ds	2
   307   0000C2                     _flags:
   308                           	callstack 0
   309   0000C2                     	ds	1
   310   0000C3                     _backtrack:
   311                           	callstack 0
   312   0000C3                     	ds	1
   313   0000C4                     _TxBufReadCnt:
   314                           	callstack 0
   315   0000C4                     	ds	1
   316   0000C5                     _RxBufReadCnt:
   317                           	callstack 0
   318   0000C5                     	ds	1
   319   0000C6                     _RxBufWriteCnt:
   320                           	callstack 0
   321   0000C6                     	ds	1
   322                           
   323                           	psect	dataBANK0
   324   0000C7                     __pdataBANK0:
   325                           	callstack 0
   326   0000C7                     _squareDelay:
   327                           	callstack 0
   328   0000C7                     	ds	2
   329   0000C9                     _headbuttDelay:
   330                           	callstack 0
   331   0000C9                     	ds	2
   332   0000CB                     _turn180Delay:
   333                           	callstack 0
   334   0000CB                     	ds	2
   335   0000CD                     _turnRight135Delay:
   336                           	callstack 0
   337   0000CD                     	ds	2
   338   0000CF                     _turnLeft135Delay:
   339                           	callstack 0
   340   0000CF                     	ds	2
   341   0000D1                     _turnRight90Delay:
   342                           	callstack 0
   343   0000D1                     	ds	2
   344   0000D3                     _turnLeft90Delay:
   345                           	callstack 0
   346   0000D3                     	ds	2
   347   0000D5                     _manoeuvre_pointer:
   348                           	callstack 0
   349   0000D5                     	ds	1
   350   0000D6                     _turningGear:
   351                           	callstack 0
   352   0000D6                     	ds	1
   353   0000D7                     _topGearRight:
   354                           	callstack 0
   355   0000D7                     	ds	1
   356   0000D8                     _topGearLeft:
   357                           	callstack 0
   358   0000D8                     	ds	1
   359   0000D9                     _rampDelay:
   360                           	callstack 0
   361   0000D9                     	ds	1
   362   0000DA                     _trail_manoeuvre:
   363                           	callstack 0
   364   0000DA                     	ds	20
   365                           
   366                           	psect	bssBANK1
   367   000100                     __pbssBANK1:
   368                           	callstack 0
   369   000100                     _EUSART4TXbuf:
   370                           	callstack 0
   371   000100                     	ds	60
   372                           
   373                           	psect	cstackBANK0
   374   0000EE                     __pcstackBANK0:
   375                           	callstack 0
   376   0000EE                     main@motorL:
   377                           	callstack 0
   378                           
   379                           ; 9 bytes @ 0x0
   380   0000EE                     	ds	9
   381   0000F7                     main@motorR:
   382                           	callstack 0
   383                           
   384                           ; 9 bytes @ 0x9
   385   0000F7                     	ds	9
   386                           
   387                           	psect	cstackCOMRAM
   388   000001                     __pcstackCOMRAM:
   389                           	callstack 0
   390   000001                     ??_ISR:
   391   000001                     
   392                           ; 1 bytes @ 0x0
   393   000001                     	ds	1
   394   000002                     ??_I2C_2_Master_Idle:
   395   000002                     ?___awdiv:
   396                           	callstack 0
   397   000002                     ?___awmod:
   398                           	callstack 0
   399   000002                     sendCharSerial4@charToSend:
   400                           	callstack 0
   401   000002                     initDCmotorsPWM@PWMperiod:
   402                           	callstack 0
   403   000002                     ___awdiv@dividend:
   404                           	callstack 0
   405   000002                     ___awmod@dividend:
   406                           	callstack 0
   407   000002                     fputc@c:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x1
   411   000002                     	ds	1
   412   000003                     I2C_2_Master_Write@data_byte:
   413                           	callstack 0
   414   000003                     sendStringSerial4@string:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418   000003                     	ds	1
   419   000004                     color_writetoaddr@value:
   420                           	callstack 0
   421   000004                     fputc@fp:
   422                           	callstack 0
   423   000004                     ___awdiv@divisor:
   424                           	callstack 0
   425   000004                     ___awmod@divisor:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x3
   429   000004                     	ds	1
   430   000005                     ??_fputc:
   431   000005                     color_writetoaddr@address:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x4
   435   000005                     	ds	1
   436   000006                     ??_color_click_init:
   437   000006                     ___awdiv@counter:
   438                           	callstack 0
   439   000006                     ___awmod@counter:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x5
   443   000006                     	ds	1
   444   000007                     ___awdiv@sign:
   445                           	callstack 0
   446   000007                     ___awmod@sign:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x6
   450   000007                     	ds	1
   451   000008                     ?_abs:
   452                           	callstack 0
   453   000008                     ___awdiv@quotient:
   454                           	callstack 0
   455   000008                     abs@a:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x7
   459   000008                     	ds	2
   460   00000A                     ??_abs:
   461                           
   462                           ; 1 bytes @ 0x9
   463   00000A                     	ds	2
   464   00000C                     ?_vfpfcnvrt:
   465                           	callstack 0
   466   00000C                     vfpfcnvrt@fp:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xB
   470   00000C                     	ds	1
   471   00000D                     vfpfcnvrt@fmt:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xC
   475   00000D                     	ds	1
   476   00000E                     vfpfcnvrt@ap:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0xD
   480   00000E                     	ds	1
   481   00000F                     ??_vfpfcnvrt:
   482                           
   483                           ; 1 bytes @ 0xE
   484   00000F                     	ds	1
   485   000010                     vfpfcnvrt@done:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0xF
   489   000010                     	ds	1
   490   000011                     vfpfcnvrt@cnt:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x10
   494   000011                     	ds	2
   495   000013                     vfpfcnvrt@cp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x12
   499   000013                     	ds	1
   500   000014                     vfpfcnvrt@convarg:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x13
   504   000014                     	ds	4
   505   000018                     vfpfcnvrt@c:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x17
   509   000018                     	ds	1
   510   000019                     ?_vfprintf:
   511                           	callstack 0
   512   000019                     vfprintf@fp:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x18
   516   000019                     	ds	1
   517   00001A                     vfprintf@fmt:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x19
   521   00001A                     	ds	1
   522   00001B                     vfprintf@ap:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x1A
   526   00001B                     	ds	1
   527   00001C                     vfprintf@cfmt:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x1B
   531   00001C                     	ds	1
   532   00001D                     ?_sprintf:
   533                           	callstack 0
   534   00001D                     sprintf@s:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x1C
   538   00001D                     	ds	1
   539   00001E                     sprintf@fmt:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x1D
   543   00001E                     	ds	3
   544   000021                     sprintf@ret:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x20
   548   000021                     	ds	2
   549   000023                     sprintf@ap:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x22
   553   000023                     	ds	1
   554   000024                     sprintf@f:
   555                           	callstack 0
   556                           
   557                           ; 12 bytes @ 0x23
   558   000024                     	ds	12
   559   000030                     sendArraySerial4@arr:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x2F
   563   000030                     	ds	1
   564   000031                     ??_sendArraySerial4:
   565                           
   566                           ; 1 bytes @ 0x30
   567   000031                     	ds	1
   568   000032                     sendArraySerial4@tempStr:
   569                           	callstack 0
   570                           
   571                           ; 21 bytes @ 0x31
   572   000032                     	ds	21
   573   000047                     sendArraySerial4@index:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x46
   577   000047                     	ds	1
   578   000048                     sendArraySerial4@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x47
   582   000048                     	ds	2
   583   00004A                     ??_main:
   584                           
   585                           ; 1 bytes @ 0x49
   586   00004A                     	ds	2
   587                           
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 26 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  motorR          9    9[BANK0 ] struct DC_motor
   598 ;;  motorL          9    0[BANK0 ] struct DC_motor
   599 ;;  PWMcycle        2    0        unsigned int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   610 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   612 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   613 ;;Total ram usage:       20 bytes
   614 ;; Hardware stack levels required when called: 7
   615 ;; This function calls:
   616 ;;		_Timer0_init
   617 ;;		_buggy_lights_init
   618 ;;		_color_click_init
   619 ;;		_initDCmotorsPWM
   620 ;;		_initUSART4
   621 ;;		_sendArraySerial4
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628   0010C4                     __ptext0:
   629                           	callstack 0
   630   0010C4                     _main:
   631                           	callstack 24
   632   0010C4                     
   633                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   634   0010C4  0E52               	movlw	82
   635   0010C6  6E4B               	movwf	(??_main+1)^0,c
   636   0010C8  0E2B               	movlw	43
   637   0010CA  6E4A               	movwf	??_main^0,c
   638   0010CC  0E00               	movlw	0
   639   0010CE                     u2267:
   640   0010CE  2EE8               	decfsz	wreg,f,c
   641   0010D0  D7FE               	bra	u2267
   642   0010D2  2E4A               	decfsz	??_main^0,f,c
   643   0010D4  D7FC               	bra	u2267
   644   0010D6  2E4B               	decfsz	(??_main+1)^0,f,c
   645   0010D8  D7FA               	bra	u2267
   646   0010DA  D000               	nop2	
   647   0010DC                     
   648                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   649   0010DC  0E00               	movlw	0
   650   0010DE  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   651   0010E0  0E63               	movlw	99
   652   0010E2  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
   653   0010E4  EC67  F009         	call	_initDCmotorsPWM	;wreg free
   654   0010E8                     
   655                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   656   0010E8  0E00               	movlw	0
   657   0010EA  0100               	movlb	0	; () banked
   658   0010EC  6FEE               	movwf	main@motorL& (0+255),b
   659   0010EE                     
   660                           ; BSR set to: 0
   661                           ;main.c: 35:     motorL.direction = 1;
   662   0010EE  0E01               	movlw	1
   663   0010F0  6FEF               	movwf	(main@motorL+1)& (0+255),b
   664   0010F2                     
   665                           ; BSR set to: 0
   666                           ;main.c: 36:     motorL.brakemode = 1;
   667   0010F2  0E01               	movlw	1
   668   0010F4  6FF0               	movwf	(main@motorL+2)& (0+255),b
   669   0010F6                     
   670                           ; BSR set to: 0
   671                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   672   0010F6  0E00               	movlw	0
   673   0010F8  6FF2               	movwf	(main@motorL+4)& (0+255),b
   674   0010FA  0E63               	movlw	99
   675   0010FC  6FF1               	movwf	(main@motorL+3)& (0+255),b
   676   0010FE                     
   677                           ; BSR set to: 0
   678                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   679   0010FE  0EAA               	movlw	170
   680   001100  6FF3               	movwf	(main@motorL+5)& (0+255),b
   681   001102  0E0F               	movlw	15
   682   001104  6FF4               	movwf	(main@motorL+6)& (0+255),b
   683   001106                     
   684                           ; BSR set to: 0
   685                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   686   001106  0EA6               	movlw	166
   687   001108  6FF5               	movwf	(main@motorL+7)& (0+255),b
   688   00110A  0E0F               	movlw	15
   689   00110C  6FF6               	movwf	(main@motorL+8)& (0+255),b
   690   00110E                     
   691                           ; BSR set to: 0
   692                           ;main.c: 41:     motorR.power = 0;
   693   00110E  0E00               	movlw	0
   694   001110  6FF7               	movwf	main@motorR& (0+255),b
   695   001112                     
   696                           ; BSR set to: 0
   697                           ;main.c: 42:     motorR.direction = 1;
   698   001112  0E01               	movlw	1
   699   001114  6FF8               	movwf	(main@motorR+1)& (0+255),b
   700   001116                     
   701                           ; BSR set to: 0
   702                           ;main.c: 43:     motorR.brakemode = 1;
   703   001116  0E01               	movlw	1
   704   001118  6FF9               	movwf	(main@motorR+2)& (0+255),b
   705   00111A                     
   706                           ; BSR set to: 0
   707                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   708   00111A  0E00               	movlw	0
   709   00111C  6FFB               	movwf	(main@motorR+4)& (0+255),b
   710   00111E  0E63               	movlw	99
   711   001120  6FFA               	movwf	(main@motorR+3)& (0+255),b
   712   001122                     
   713                           ; BSR set to: 0
   714                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   715   001122  0E25               	movlw	37
   716   001124  6FFC               	movwf	(main@motorR+5)& (0+255),b
   717   001126  0E0F               	movlw	15
   718   001128  6FFD               	movwf	(main@motorR+6)& (0+255),b
   719   00112A                     
   720                           ; BSR set to: 0
   721                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   722   00112A  0E21               	movlw	33
   723   00112C  6FFE               	movwf	(main@motorR+7)& (0+255),b
   724   00112E  0E0F               	movlw	15
   725   001130  6FFF               	movwf	(main@motorR+8)& (0+255),b
   726   001132                     
   727                           ; BSR set to: 0
   728                           ;main.c: 48:     buggy_lights_init();
   729   001132  EC3E  F00A         	call	_buggy_lights_init	;wreg free
   730   001136                     
   731                           ;main.c: 49:     color_click_init();
   732   001136  ECC3  F00A         	call	_color_click_init	;wreg free
   733   00113A                     
   734                           ;main.c: 50:     initUSART4();
   735   00113A  EC3E  F00B         	call	_initUSART4	;wreg free
   736   00113E                     
   737                           ;main.c: 51:     Timer0_init();
   738   00113E  EC06  F00B         	call	_Timer0_init	;wreg free
   739   001142                     
   740                           ;main.c: 55:     TRISFbits.TRISF2 = 1;
   741   001142  8486               	bsf	134,2,c	;volatile
   742   001144                     
   743                           ;main.c: 56:     TRISFbits.TRISF3 = 1;
   744   001144  8686               	bsf	134,3,c	;volatile
   745   001146                     
   746                           ;main.c: 58:     ANSELFbits.ANSELF2 = 0;
   747   001146  010E               	movlb	14	; () banked
   748   001148  95B4               	bcf	180,2,b	;volatile
   749   00114A                     
   750                           ; BSR set to: 14
   751                           ;main.c: 59:     ANSELFbits.ANSELF3 = 0;
   752   00114A  97B4               	bcf	180,3,b	;volatile
   753   00114C                     l3453:
   754                           
   755                           ;main.c: 76:         sendArraySerial4(trail_manoeuvre);
   756   00114C  0EDA               	movlw	low _trail_manoeuvre
   757   00114E  6E30               	movwf	sendArraySerial4@arr^0,c
   758   001150  ECAF  F009         	call	_sendArraySerial4	;wreg free
   759   001154                     
   760                           ;main.c: 77:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   761   001154  0E52               	movlw	82
   762   001156  6E4B               	movwf	(??_main+1)^0,c
   763   001158  0E2B               	movlw	43
   764   00115A  6E4A               	movwf	??_main^0,c
   765   00115C  0E00               	movlw	0
   766   00115E                     u2277:
   767   00115E  2EE8               	decfsz	wreg,f,c
   768   001160  D7FE               	bra	u2277
   769   001162  2E4A               	decfsz	??_main^0,f,c
   770   001164  D7FC               	bra	u2277
   771   001166  2E4B               	decfsz	(??_main+1)^0,f,c
   772   001168  D7FA               	bra	u2277
   773   00116A  D000               	nop2	
   774   00116C  EFA6  F008         	goto	l3453
   775   001170  EF23  F000         	goto	start
   776   001174                     __end_of_main:
   777                           	callstack 0
   778                           
   779 ;; *************** function _sendArraySerial4 *****************
   780 ;; Defined at:
   781 ;;		line 50 in file "serial.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  arr             1   47[COMRAM] PTR unsigned char 
   784 ;;		 -> trail_manoeuvre(20), 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  i               2   71[COMRAM] unsigned int 
   787 ;;  tempStr        21   49[COMRAM] unsigned char [21]
   788 ;;  index           1   70[COMRAM] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   802 ;;Total ram usage:       26 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 6
   805 ;; This function calls:
   806 ;;		_sendStringSerial4
   807 ;;		_sprintf
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text1
   814   00135E                     __ptext1:
   815                           	callstack 0
   816   00135E                     _sendArraySerial4:
   817                           	callstack 24
   818   00135E                     
   819                           ;serial.c: 51:     unsigned char index = 0;
   820   00135E  0E00               	movlw	0
   821   001360  6E47               	movwf	sendArraySerial4@index^0,c
   822                           
   823                           ;serial.c: 54:     char tempStr[20 + 1];;serial.c: 55:     for (unsigned int i = 0; i < 
      +                          20; i++) {
   824   001362  0E00               	movlw	0
   825   001364  6E49               	movwf	(sendArraySerial4@i+1)^0,c
   826   001366  0E00               	movlw	0
   827   001368  6E48               	movwf	sendArraySerial4@i^0,c
   828   00136A                     l3379:
   829                           
   830                           ;serial.c: 56:         index += sprintf(&tempStr[index], "%d", arr[i]);
   831   00136A  5047               	movf	sendArraySerial4@index^0,w,c
   832   00136C  0F32               	addlw	low sendArraySerial4@tempStr
   833   00136E  6E1D               	movwf	sprintf@s^0,c
   834   001370  0E06               	movlw	low STR_2
   835   001372  6E1E               	movwf	sprintf@fmt^0,c
   836   001374  5030               	movf	sendArraySerial4@arr^0,w,c
   837   001376  2448               	addwf	sendArraySerial4@i^0,w,c
   838   001378  6ED9               	movwf	fsr2l,c
   839   00137A  6ADA               	clrf	fsr2h,c
   840   00137C  50DF               	movf	indf2,w,c
   841   00137E  6E31               	movwf	??_sendArraySerial4^0,c
   842   001380  5031               	movf	??_sendArraySerial4^0,w,c
   843   001382  6E1F               	movwf	(?_sprintf+2)^0,c
   844   001384  6A20               	clrf	(?_sprintf+3)^0,c
   845   001386  EC87  F00A         	call	_sprintf	;wreg free
   846   00138A  501D               	movf	?_sprintf^0,w,c
   847   00138C  2647               	addwf	sendArraySerial4@index^0,f,c
   848   00138E                     
   849                           ;serial.c: 57:     }
   850   00138E  4A48               	infsnz	sendArraySerial4@i^0,f,c
   851   001390  2A49               	incf	(sendArraySerial4@i+1)^0,f,c
   852   001392  5049               	movf	(sendArraySerial4@i+1)^0,w,c
   853   001394  E109               	bnz	u2230
   854   001396  0E14               	movlw	20
   855   001398  5C48               	subwf	sendArraySerial4@i^0,w,c
   856   00139A  A0D8               	btfss	status,0,c
   857   00139C  EFD2  F009         	goto	u2231
   858   0013A0  EFD4  F009         	goto	u2230
   859   0013A4                     u2231:
   860   0013A4  EFB5  F009         	goto	l3379
   861   0013A8                     u2230:
   862   0013A8                     
   863                           ;serial.c: 58:     sendStringSerial4(tempStr);
   864   0013A8  0E32               	movlw	low sendArraySerial4@tempStr
   865   0013AA  6E03               	movwf	sendStringSerial4@string^0,c
   866   0013AC  6A04               	clrf	(sendStringSerial4@string+1)^0,c
   867   0013AE  ECE2  F009         	call	_sendStringSerial4	;wreg free
   868                           
   869                           ;serial.c: 59:     sendStringSerial4(" \r");
   870   0013B2  0E03               	movlw	low (STR_1+2)
   871   0013B4  6E03               	movwf	sendStringSerial4@string^0,c
   872   0013B6  5003               	movf	sendStringSerial4@string^0,w,c
   873   0013B8  A4D8               	btfss	status,2,c
   874   0013BA  0E0E               	movlw	high __smallconst
   875   0013BC  6E04               	movwf	(sendStringSerial4@string+1)^0,c
   876   0013BE  ECE2  F009         	call	_sendStringSerial4	;wreg free
   877   0013C2  0012               	return		;funcret
   878   0013C4                     __end_of_sendArraySerial4:
   879                           	callstack 0
   880                           
   881 ;; *************** function _sprintf *****************
   882 ;; Defined at:
   883 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  s               1   28[COMRAM] PTR unsigned char 
   886 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
   887 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   888 ;;		 -> STR_3(3), STR_1(5), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  f              12   35[COMRAM] struct _IO_FILE
   891 ;;  ret             2   32[COMRAM] int 
   892 ;;  ap              1   34[COMRAM] PTR void [1]
   893 ;;		 -> ?_sprintf(2), 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2   28[COMRAM] int 
   896 ;; Registers used:
   897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;Total ram usage:       19 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 5
   910 ;; This function calls:
   911 ;;		_vfprintf
   912 ;; This function is called by:
   913 ;;		_sendArraySerial4
   914 ;;		_sendIntSerial4
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text2
   919   00150E                     __ptext2:
   920                           	callstack 0
   921   00150E                     _sprintf:
   922                           	callstack 24
   923   00150E  0E1F               	movlw	low (?_sprintf+2)
   924   001510  6E23               	movwf	sprintf@ap^0,c
   925   001512  C01D  F024         	movff	sprintf@s,sprintf@f
   926   001516  0E00               	movlw	0
   927   001518  6E28               	movwf	(sprintf@f+4)^0,c
   928   00151A  0E00               	movlw	0
   929   00151C  6E27               	movwf	(sprintf@f+3)^0,c
   930   00151E  0E00               	movlw	0
   931   001520  6E2F               	movwf	(sprintf@f+11)^0,c
   932   001522  0E00               	movlw	0
   933   001524  6E2E               	movwf	(sprintf@f+10)^0,c
   934   001526  0E24               	movlw	low sprintf@f
   935   001528  6E19               	movwf	vfprintf@fp^0,c
   936   00152A  C01E  F01A         	movff	sprintf@fmt,vfprintf@fmt
   937   00152E  0E23               	movlw	low sprintf@ap
   938   001530  6E1B               	movwf	vfprintf@ap^0,c
   939   001532  EC13  F00A         	call	_vfprintf	;wreg free
   940   001536  C019  F021         	movff	?_vfprintf,sprintf@ret
   941   00153A  C01A  F022         	movff	?_vfprintf+1,sprintf@ret+1
   942   00153E  501D               	movf	sprintf@s^0,w,c
   943   001540  2427               	addwf	(sprintf@f+3)^0,w,c
   944   001542  6ED9               	movwf	fsr2l,c
   945   001544  6ADA               	clrf	fsr2h,c
   946   001546  6ADF               	clrf	indf2,c
   947   001548  C021  F01D         	movff	sprintf@ret,?_sprintf
   948   00154C  C022  F01E         	movff	sprintf@ret+1,?_sprintf+1
   949   001550  0012               	return		;funcret
   950   001552                     __end_of_sprintf:
   951                           	callstack 0
   952                           
   953 ;; *************** function _vfprintf *****************
   954 ;; Defined at:
   955 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
   958 ;;		 -> sprintf@f(12), 
   959 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
   960 ;;		 -> STR_3(3), STR_1(5), 
   961 ;;  ap              1   26[COMRAM] PTR PTR void 
   962 ;;		 -> sprintf@ap(1), 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
   965 ;;		 -> STR_3(3), STR_1(5), 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2   24[COMRAM] int 
   968 ;; Registers used:
   969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   975 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   979 ;;Total ram usage:        4 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 4
   982 ;; This function calls:
   983 ;;		_vfpfcnvrt
   984 ;; This function is called by:
   985 ;;		_sprintf
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text3
   990   001426                     __ptext3:
   991                           	callstack 0
   992   001426                     _vfprintf:
   993                           	callstack 24
   994   001426                     
   995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   996   001426  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
   997   00142A                     
   998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
   999   00142A  0E00               	movlw	0
  1000   00142C  0100               	movlb	0	; () banked
  1001   00142E  6FBD               	movwf	(_nout+1)& (0+255),b
  1002   001430  0E00               	movlw	0
  1003   001432  6FBC               	movwf	_nout& (0+255),b
  1004                           
  1005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1006   001434  EF29  F00A         	goto	l3249
  1007   001438                     l3247:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1011   001438  C019  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1012   00143C  0E1C               	movlw	low vfprintf@cfmt
  1013   00143E  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  1014   001440  C01B  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1015   001444  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1016   001448  500C               	movf	?_vfpfcnvrt^0,w,c
  1017   00144A  0100               	movlb	0	; () banked
  1018   00144C  27BC               	addwf	_nout& (0+255),f,b
  1019   00144E  500D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1020   001450  23BD               	addwfc	(_nout+1)& (0+255),f,b
  1021   001452                     l3249:
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1025   001452  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1026   001456                     	if	1	;There is more than 1 active tblptr byte
  1027   001456  0E0E               	movlw	high __smallconst
  1028   001458  6EF7               	movwf	tblptrh,c
  1029   00145A                     	endif
  1030   00145A                     	if	0	;tblptru may be non-zero
  1031   00145A                     	endif
  1032   00145A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1033   00145A  0E00               	movlw	low (__smallconst shr (0+16))
  1034   00145C  6EF8               	movwf	tblptru,c
  1035   00145E                     	endif
  1036   00145E  0008               	tblrd		*
  1037   001460  50F5               	movf	tablat,w,c
  1038   001462  0900               	iorlw	0
  1039   001464  A4D8               	btfss	status,2,c
  1040   001466  EF37  F00A         	goto	u2191
  1041   00146A  EF39  F00A         	goto	u2190
  1042   00146E                     u2191:
  1043   00146E  EF1C  F00A         	goto	l3247
  1044   001472                     u2190:
  1045   001472                     
  1046                           ; BSR set to: 0
  1047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1048   001472  C0BC  F019         	movff	_nout,?_vfprintf
  1049   001476  C0BD  F01A         	movff	_nout+1,?_vfprintf+1
  1050   00147A                     
  1051                           ; BSR set to: 0
  1052   00147A  0012               	return		;funcret
  1053   00147C                     __end_of_vfprintf:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _vfpfcnvrt *****************
  1057 ;; Defined at:
  1058 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  1061 ;;		 -> sprintf@f(12), 
  1062 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  1063 ;;		 -> vfprintf@cfmt(1), 
  1064 ;;  ap              1   13[COMRAM] PTR PTR void 
  1065 ;;		 -> sprintf@ap(1), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  convarg         4   19[COMRAM] struct .
  1068 ;;  cnt             2   16[COMRAM] int 
  1069 ;;  c               1   23[COMRAM] unsigned char 
  1070 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1071 ;;		 -> STR_3(3), STR_1(5), 
  1072 ;;  done            1   15[COMRAM] _Bool 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  2   11[COMRAM] int 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1082 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;Total ram usage:       13 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 3
  1089 ;; This function calls:
  1090 ;;		___awdiv
  1091 ;;		___awmod
  1092 ;;		_abs
  1093 ;;		_fputc
  1094 ;; This function is called by:
  1095 ;;		_vfprintf
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text4
  1100   000E0A                     __ptext4:
  1101                           	callstack 0
  1102   000E0A                     _vfpfcnvrt:
  1103                           	callstack 24
  1104   000E0A                     
  1105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1106   000E0A  0E00               	movlw	0
  1107   000E0C  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1108   000E0E  0E00               	movlw	0
  1109   000E10  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1110   000E12                     
  1111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1112   000E12  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1113   000E14  6ED9               	movwf	fsr2l,c
  1114   000E16  6ADA               	clrf	fsr2h,c
  1115   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1116   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1117   000E1C  0E0E               	movlw	high __smallconst
  1118   000E1E  6EF7               	movwf	tblptrh,c
  1119   000E20                     	endif
  1120   000E20                     	if	0	;tblptru may be non-zero
  1121   000E20                     	endif
  1122   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1123   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1124   000E22  6EF8               	movwf	tblptru,c
  1125   000E24                     	endif
  1126   000E24  0008               	tblrd		*
  1127   000E26  50F5               	movf	tablat,w,c
  1128   000E28  0A25               	xorlw	37
  1129   000E2A  A4D8               	btfss	status,2,c
  1130   000E2C  EF1A  F007         	goto	u2081
  1131   000E30  EF1C  F007         	goto	u2080
  1132   000E34                     u2081:
  1133   000E34  EFE6  F007         	goto	l3219
  1134   000E38                     u2080:
  1135   000E38                     
  1136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1137   000E38  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1138   000E3A  6ED9               	movwf	fsr2l,c
  1139   000E3C  6ADA               	clrf	fsr2h,c
  1140   000E3E  2ADF               	incf	indf2,f,c
  1141   000E40                     
  1142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1143   000E40  0E00               	movlw	0
  1144   000E42  0100               	movlb	0	; () banked
  1145   000E44  6FBF               	movwf	(_width+1)& (0+255),b
  1146   000E46  0E00               	movlw	0
  1147   000E48  6FBE               	movwf	_width& (0+255),b
  1148   000E4A  C0BE  F0C2         	movff	_width,_flags
  1149   000E4E                     
  1150                           ; BSR set to: 0
  1151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1152   000E4E  69C0               	setf	_prec& (0+255),b
  1153   000E50  69C1               	setf	(_prec+1)& (0+255),b
  1154   000E52                     
  1155                           ; BSR set to: 0
  1156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1157   000E52  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1158   000E54  6ED9               	movwf	fsr2l,c
  1159   000E56  6ADA               	clrf	fsr2h,c
  1160   000E58  50DF               	movf	indf2,w,c
  1161   000E5A  6E13               	movwf	vfpfcnvrt@cp^0,c
  1162   000E5C                     
  1163                           ; BSR set to: 0
  1164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1165   000E5C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1166   000E60                     	if	1	;There is more than 1 active tblptr byte
  1167   000E60  0E0E               	movlw	high __smallconst
  1168   000E62  6EF7               	movwf	tblptrh,c
  1169   000E64                     	endif
  1170   000E64                     	if	0	;tblptru may be non-zero
  1171   000E64                     	endif
  1172   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1173   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1174   000E66  6EF8               	movwf	tblptru,c
  1175   000E68                     	endif
  1176   000E68  0008               	tblrd		*
  1177   000E6A  50F5               	movf	tablat,w,c
  1178   000E6C  0A64               	xorlw	100
  1179   000E6E  B4D8               	btfsc	status,2,c
  1180   000E70  EF3C  F007         	goto	u2091
  1181   000E74  EF3E  F007         	goto	u2090
  1182   000E78                     u2091:
  1183   000E78  EF4E  F007         	goto	l3183
  1184   000E7C                     u2090:
  1185   000E7C                     
  1186                           ; BSR set to: 0
  1187   000E7C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1188   000E80                     	if	1	;There is more than 1 active tblptr byte
  1189   000E80  0E0E               	movlw	high __smallconst
  1190   000E82  6EF7               	movwf	tblptrh,c
  1191   000E84                     	endif
  1192   000E84                     	if	0	;tblptru may be non-zero
  1193   000E84                     	endif
  1194   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1195   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1196   000E86  6EF8               	movwf	tblptru,c
  1197   000E88                     	endif
  1198   000E88  0008               	tblrd		*
  1199   000E8A  50F5               	movf	tablat,w,c
  1200   000E8C  0A69               	xorlw	105
  1201   000E8E  A4D8               	btfss	status,2,c
  1202   000E90  EF4C  F007         	goto	u2101
  1203   000E94  EF4E  F007         	goto	u2100
  1204   000E98                     u2101:
  1205   000E98  EFDC  F007         	goto	l3213
  1206   000E9C                     u2100:
  1207   000E9C                     l3183:
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1211   000E9C  500E               	movf	vfpfcnvrt@ap^0,w,c
  1212   000E9E  6ED9               	movwf	fsr2l,c
  1213   000EA0  6ADA               	clrf	fsr2h,c
  1214   000EA2  0E02               	movlw	2
  1215   000EA4  26DF               	addwf	indf2,f,c
  1216   000EA6  5CDF               	subwf	indf2,w,c
  1217   000EA8  6ED9               	movwf	fsr2l,c
  1218   000EAA  6ADA               	clrf	fsr2h,c
  1219   000EAC  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1220   000EB0  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1221   000EB4                     
  1222                           ; BSR set to: 0
  1223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1224   000EB4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1225   000EB6  6ED9               	movwf	fsr2l,c
  1226   000EB8  6ADA               	clrf	fsr2h,c
  1227   000EBA  2813               	incf	vfpfcnvrt@cp^0,w,c
  1228   000EBC  6EDF               	movwf	indf2,c
  1229   000EBE                     
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1232   000EBE  0E20               	movlw	32
  1233   000EC0  6E18               	movwf	vfpfcnvrt@c^0,c
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1236   000EC2  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1237   000EC4  EF66  F007         	goto	u2111
  1238   000EC8  EF69  F007         	goto	u2110
  1239   000ECC                     u2111:
  1240   000ECC  0E01               	movlw	1
  1241   000ECE  EF6A  F007         	goto	u2120
  1242   000ED2                     u2110:
  1243   000ED2  0E00               	movlw	0
  1244   000ED4                     u2120:
  1245   000ED4  6E10               	movwf	vfpfcnvrt@done^0,c
  1246   000ED6                     l3189:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1249   000ED6  0618               	decf	vfpfcnvrt@c^0,f,c
  1250   000ED8  5018               	movf	vfpfcnvrt@c^0,w,c
  1251   000EDA  0F60               	addlw	low _dbuf
  1252   000EDC  6ED9               	movwf	fsr2l,c
  1253   000EDE  6ADA               	clrf	fsr2h,c
  1254   000EE0  C014  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1255   000EE4  C015  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1256   000EE8  0E00               	movlw	0
  1257   000EEA  6E05               	movwf	(___awmod@divisor+1)^0,c
  1258   000EEC  0E0A               	movlw	10
  1259   000EEE  6E04               	movwf	___awmod@divisor^0,c
  1260   000EF0  ECBA  F008         	call	___awmod	;wreg free
  1261   000EF4  C002  F008         	movff	?___awmod,abs@a
  1262   000EF8  C003  F009         	movff	?___awmod+1,abs@a+1
  1263   000EFC  ECA9  F00A         	call	_abs	;wreg free
  1264   000F00  5008               	movf	?_abs^0,w,c
  1265   000F02  0F30               	addlw	48
  1266   000F04  6EDF               	movwf	indf2,c
  1267   000F06                     
  1268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1269   000F06  C014  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1270   000F0A  C015  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1271   000F0E  0E00               	movlw	0
  1272   000F10  6E05               	movwf	(___awdiv@divisor+1)^0,c
  1273   000F12  0E0A               	movlw	10
  1274   000F14  6E04               	movwf	___awdiv@divisor^0,c
  1275   000F16  EC00  F008         	call	___awdiv	;wreg free
  1276   000F1A  C002  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1277   000F1E  C003  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1278   000F22                     
  1279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1280   000F22  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1281   000F24  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1282   000F26                     
  1283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1284   000F26  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1285   000F28  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1286   000F2A  B4D8               	btfsc	status,2,c
  1287   000F2C  EF9A  F007         	goto	u2131
  1288   000F30  EF9C  F007         	goto	u2130
  1289   000F34                     u2131:
  1290   000F34  EFA4  F007         	goto	l3199
  1291   000F38                     u2130:
  1292   000F38  5018               	movf	vfpfcnvrt@c^0,w,c
  1293   000F3A  A4D8               	btfss	status,2,c
  1294   000F3C  EFA2  F007         	goto	u2141
  1295   000F40  EFA4  F007         	goto	u2140
  1296   000F44                     u2141:
  1297   000F44  EF6B  F007         	goto	l3189
  1298   000F48                     u2140:
  1299   000F48                     l3199:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1302   000F48  5018               	movf	vfpfcnvrt@c^0,w,c
  1303   000F4A  B4D8               	btfsc	status,2,c
  1304   000F4C  EFAA  F007         	goto	u2151
  1305   000F50  EFAC  F007         	goto	u2150
  1306   000F54                     u2151:
  1307   000F54  EFCD  F007         	goto	l3211
  1308   000F58                     u2150:
  1309   000F58  5010               	movf	vfpfcnvrt@done^0,w,c
  1310   000F5A  B4D8               	btfsc	status,2,c
  1311   000F5C  EFB2  F007         	goto	u2161
  1312   000F60  EFB4  F007         	goto	u2160
  1313   000F64                     u2161:
  1314   000F64  EFCD  F007         	goto	l3211
  1315   000F68                     u2160:
  1316   000F68                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1318   000F68  0618               	decf	vfpfcnvrt@c^0,f,c
  1319   000F6A  5018               	movf	vfpfcnvrt@c^0,w,c
  1320   000F6C  0F60               	addlw	low _dbuf
  1321   000F6E  6ED9               	movwf	fsr2l,c
  1322   000F70  6ADA               	clrf	fsr2h,c
  1323   000F72  0E2D               	movlw	45
  1324   000F74  6EDF               	movwf	indf2,c
  1325   000F76                     
  1326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1327   000F76  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1328   000F78  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1329   000F7A  EFCD  F007         	goto	l3211
  1330   000F7E                     l3207:
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1333   000F7E  5018               	movf	vfpfcnvrt@c^0,w,c
  1334   000F80  0F60               	addlw	low _dbuf
  1335   000F82  6ED9               	movwf	fsr2l,c
  1336   000F84  6ADA               	clrf	fsr2h,c
  1337   000F86  50DF               	movf	indf2,w,c
  1338   000F88  6E0F               	movwf	??_vfpfcnvrt^0,c
  1339   000F8A  500F               	movf	??_vfpfcnvrt^0,w,c
  1340   000F8C  6E02               	movwf	fputc@c^0,c
  1341   000F8E  6A03               	clrf	(fputc@c+1)^0,c
  1342   000F90  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1343   000F94  EC12  F009         	call	_fputc	;wreg free
  1344   000F98  2A18               	incf	vfpfcnvrt@c^0,f,c
  1345   000F9A                     l3211:
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1348   000F9A  0E20               	movlw	32
  1349   000F9C  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1350   000F9E  A4D8               	btfss	status,2,c
  1351   000FA0  EFD4  F007         	goto	u2171
  1352   000FA4  EFD6  F007         	goto	u2170
  1353   000FA8                     u2171:
  1354   000FA8  EFBF  F007         	goto	l3207
  1355   000FAC                     u2170:
  1356   000FAC                     
  1357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1358   000FAC  C011  F00C         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1359   000FB0  C012  F00D         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1360   000FB4  EFFF  F007         	goto	l1285
  1361   000FB8                     l3213:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1365   000FB8  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1366   000FBA  6ED9               	movwf	fsr2l,c
  1367   000FBC  6ADA               	clrf	fsr2h,c
  1368   000FBE  2ADF               	incf	indf2,f,c
  1369   000FC0                     
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1372   000FC0  0E00               	movlw	0
  1373   000FC2  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  1374   000FC4  0E00               	movlw	0
  1375   000FC6  6E0C               	movwf	?_vfpfcnvrt^0,c
  1376   000FC8  EFFF  F007         	goto	l1285
  1377   000FCC                     l3219:
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1380   000FCC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1381   000FCE  6ED9               	movwf	fsr2l,c
  1382   000FD0  6ADA               	clrf	fsr2h,c
  1383   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1384   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1385   000FD6  0E0E               	movlw	high __smallconst
  1386   000FD8  6EF7               	movwf	tblptrh,c
  1387   000FDA                     	endif
  1388   000FDA                     	if	0	;tblptru may be non-zero
  1389   000FDA                     	endif
  1390   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1391   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1392   000FDC  6EF8               	movwf	tblptru,c
  1393   000FDE                     	endif
  1394   000FDE  0008               	tblrd		*
  1395   000FE0  50F5               	movf	tablat,w,c
  1396   000FE2  6E02               	movwf	fputc@c^0,c
  1397   000FE4  6A03               	clrf	(fputc@c+1)^0,c
  1398   000FE6  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1399   000FEA  EC12  F009         	call	_fputc	;wreg free
  1400   000FEE                     
  1401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1402   000FEE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1403   000FF0  6ED9               	movwf	fsr2l,c
  1404   000FF2  6ADA               	clrf	fsr2h,c
  1405   000FF4  2ADF               	incf	indf2,f,c
  1406   000FF6                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1408   000FF6  0E00               	movlw	0
  1409   000FF8  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  1410   000FFA  0E01               	movlw	1
  1411   000FFC  6E0C               	movwf	?_vfpfcnvrt^0,c
  1412   000FFE                     l1285:
  1413   000FFE  0012               	return		;funcret
  1414   001000                     __end_of_vfpfcnvrt:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _fputc *****************
  1418 ;; Defined at:
  1419 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  c               2    1[COMRAM] int 
  1422 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  1423 ;;		 -> sprintf@f(12), 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    1[COMRAM] int 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;Total ram usage:        8 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 2
  1442 ;; This function calls:
  1443 ;;		_putch
  1444 ;; This function is called by:
  1445 ;;		_vfpfcnvrt
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text5
  1450   001224                     __ptext5:
  1451                           	callstack 0
  1452   001224                     _fputc:
  1453                           	callstack 24
  1454   001224  5004               	movf	fputc@fp^0,w,c
  1455   001226  B4D8               	btfsc	status,2,c
  1456   001228  EF18  F009         	goto	u2011
  1457   00122C  EF1A  F009         	goto	u2010
  1458   001230                     u2011:
  1459   001230  EF22  F009         	goto	l3149
  1460   001234                     u2010:
  1461   001234  5004               	movf	fputc@fp^0,w,c
  1462   001236  A4D8               	btfss	status,2,c
  1463   001238  EF20  F009         	goto	u2021
  1464   00123C  EF22  F009         	goto	u2020
  1465   001240                     u2021:
  1466   001240  EF27  F009         	goto	l3151
  1467   001244                     u2020:
  1468   001244                     l3149:
  1469   001244  5002               	movf	fputc@c^0,w,c
  1470   001246  EC69  F00B         	call	_putch
  1471   00124A  EF66  F009         	goto	l1310
  1472   00124E                     l3151:
  1473   00124E  5004               	movf	fputc@fp^0,w,c
  1474   001250  6ED9               	movwf	fsr2l,c
  1475   001252  6ADA               	clrf	fsr2h,c
  1476   001254  0E0A               	movlw	10
  1477   001256  26D9               	addwf	fsr2l,f,c
  1478   001258  50DE               	movf	postinc2,w,c
  1479   00125A  10DE               	iorwf	postinc2,w,c
  1480   00125C  B4D8               	btfsc	status,2,c
  1481   00125E  EF33  F009         	goto	u2031
  1482   001262  EF35  F009         	goto	u2030
  1483   001266                     u2031:
  1484   001266  EF4E  F009         	goto	l3155
  1485   00126A                     u2030:
  1486   00126A  5004               	movf	fputc@fp^0,w,c
  1487   00126C  6ED9               	movwf	fsr2l,c
  1488   00126E  6ADA               	clrf	fsr2h,c
  1489   001270  0E0A               	movlw	10
  1490   001272  26D9               	addwf	fsr2l,f,c
  1491   001274  5004               	movf	fputc@fp^0,w,c
  1492   001276  6EE1               	movwf	fsr1l,c
  1493   001278  6AE2               	clrf	fsr1h,c
  1494   00127A  0E03               	movlw	3
  1495   00127C  26E1               	addwf	fsr1l,f,c
  1496   00127E  50DE               	movf	postinc2,w,c
  1497   001280  5CE6               	subwf	postinc1,w,c
  1498   001282  50E6               	movf	postinc1,w,c
  1499   001284  0A80               	xorlw	128
  1500   001286  6E09               	movwf	(??_fputc+4)^0,c
  1501   001288  50DE               	movf	postinc2,w,c
  1502   00128A  0A80               	xorlw	128
  1503   00128C  5809               	subwfb	(??_fputc+4)^0,w,c
  1504   00128E  B0D8               	btfsc	status,0,c
  1505   001290  EF4C  F009         	goto	u2041
  1506   001294  EF4E  F009         	goto	u2040
  1507   001298                     u2041:
  1508   001298  EF66  F009         	goto	l1310
  1509   00129C                     u2040:
  1510   00129C                     l3155:
  1511   00129C  5004               	movf	fputc@fp^0,w,c
  1512   00129E  6ED9               	movwf	fsr2l,c
  1513   0012A0  6ADA               	clrf	fsr2h,c
  1514   0012A2  0E03               	movlw	3
  1515   0012A4  26D9               	addwf	fsr2l,f,c
  1516   0012A6  50DF               	movf	indf2,w,c
  1517   0012A8  6E05               	movwf	??_fputc^0,c
  1518   0012AA  5004               	movf	fputc@fp^0,w,c
  1519   0012AC  6ED9               	movwf	fsr2l,c
  1520   0012AE  6ADA               	clrf	fsr2h,c
  1521   0012B0  50DF               	movf	indf2,w,c
  1522   0012B2  2405               	addwf	??_fputc^0,w,c
  1523   0012B4  6ED9               	movwf	fsr2l,c
  1524   0012B6  6ADA               	clrf	fsr2h,c
  1525   0012B8  C002  FFDF         	movff	fputc@c,indf2
  1526   0012BC  5004               	movf	fputc@fp^0,w,c
  1527   0012BE  6ED9               	movwf	fsr2l,c
  1528   0012C0  6ADA               	clrf	fsr2h,c
  1529   0012C2  0E03               	movlw	3
  1530   0012C4  26D9               	addwf	fsr2l,f,c
  1531   0012C6  2ADE               	incf	postinc2,f,c
  1532   0012C8  0E00               	movlw	0
  1533   0012CA  22DD               	addwfc	postdec2,f,c
  1534   0012CC                     l1310:
  1535   0012CC  0012               	return		;funcret
  1536   0012CE                     __end_of_fputc:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _putch *****************
  1540 ;; Defined at:
  1541 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  c               1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  c               1    0[COMRAM] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_fputc
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text6
  1570   0016D2                     __ptext6:
  1571                           	callstack 0
  1572   0016D2                     _putch:
  1573                           	callstack 24
  1574   0016D2  0012               	return		;funcret
  1575   0016D4                     __end_of_putch:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _abs *****************
  1579 ;; Defined at:
  1580 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  a               2    7[COMRAM] int 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    7[COMRAM] int 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;Total ram usage:        4 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_vfpfcnvrt
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text7
  1609   001552                     __ptext7:
  1610                           	callstack 0
  1611   001552                     _abs:
  1612                           	callstack 25
  1613   001552  BE09               	btfsc	(abs@a+1)^0,7,c
  1614   001554  EFAE  F00A         	goto	u2051
  1615   001558  EFB0  F00A         	goto	u2050
  1616   00155C                     u2051:
  1617   00155C  EFB6  F00A         	goto	l1295
  1618   001560                     u2050:
  1619   001560  C008  F008         	movff	abs@a,?_abs
  1620   001564  C009  F009         	movff	abs@a+1,?_abs+1
  1621   001568  EFC2  F00A         	goto	l1298
  1622   00156C                     l1295:
  1623   00156C  C008  F00A         	movff	abs@a,??_abs
  1624   001570  C009  F00B         	movff	abs@a+1,??_abs+1
  1625   001574  1E0A               	comf	??_abs^0,f,c
  1626   001576  1E0B               	comf	(??_abs+1)^0,f,c
  1627   001578  4A0A               	infsnz	??_abs^0,f,c
  1628   00157A  2A0B               	incf	(??_abs+1)^0,f,c
  1629   00157C  C00A  F008         	movff	??_abs,?_abs
  1630   001580  C00B  F009         	movff	??_abs+1,?_abs+1
  1631   001584                     l1298:
  1632   001584  0012               	return		;funcret
  1633   001586                     __end_of_abs:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function ___awmod *****************
  1637 ;; Defined at:
  1638 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  dividend        2    1[COMRAM] int 
  1641 ;;  divisor         2    3[COMRAM] int 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  sign            1    6[COMRAM] unsigned char 
  1644 ;;  counter         1    5[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2    1[COMRAM] int 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;Total ram usage:        6 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_vfpfcnvrt
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text8
  1669   001174                     __ptext8:
  1670                           	callstack 0
  1671   001174                     ___awmod:
  1672                           	callstack 25
  1673   001174  0E00               	movlw	0
  1674   001176  6E07               	movwf	___awmod@sign^0,c
  1675   001178  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  1676   00117A  EFC3  F008         	goto	u1950
  1677   00117E  EFC1  F008         	goto	u1951
  1678   001182                     u1951:
  1679   001182  EFC9  F008         	goto	l3117
  1680   001186                     u1950:
  1681   001186  6C02               	negf	___awmod@dividend^0,c
  1682   001188  1E03               	comf	(___awmod@dividend+1)^0,f,c
  1683   00118A  B0D8               	btfsc	status,0,c
  1684   00118C  2A03               	incf	(___awmod@dividend+1)^0,f,c
  1685   00118E  0E01               	movlw	1
  1686   001190  6E07               	movwf	___awmod@sign^0,c
  1687   001192                     l3117:
  1688   001192  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  1689   001194  EFD0  F008         	goto	u1960
  1690   001198  EFCE  F008         	goto	u1961
  1691   00119C                     u1961:
  1692   00119C  EFD4  F008         	goto	l3121
  1693   0011A0                     u1960:
  1694   0011A0  6C04               	negf	___awmod@divisor^0,c
  1695   0011A2  1E05               	comf	(___awmod@divisor+1)^0,f,c
  1696   0011A4  B0D8               	btfsc	status,0,c
  1697   0011A6  2A05               	incf	(___awmod@divisor+1)^0,f,c
  1698   0011A8                     l3121:
  1699   0011A8  5004               	movf	___awmod@divisor^0,w,c
  1700   0011AA  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  1701   0011AC  B4D8               	btfsc	status,2,c
  1702   0011AE  EFDB  F008         	goto	u1971
  1703   0011B2  EFDD  F008         	goto	u1970
  1704   0011B6                     u1971:
  1705   0011B6  EF01  F009         	goto	l3137
  1706   0011BA                     u1970:
  1707   0011BA  0E01               	movlw	1
  1708   0011BC  6E06               	movwf	___awmod@counter^0,c
  1709   0011BE  EFE5  F008         	goto	l3127
  1710   0011C2                     l3125:
  1711   0011C2  90D8               	bcf	status,0,c
  1712   0011C4  3604               	rlcf	___awmod@divisor^0,f,c
  1713   0011C6  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  1714   0011C8  2A06               	incf	___awmod@counter^0,f,c
  1715   0011CA                     l3127:
  1716   0011CA  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  1717   0011CC  EFEA  F008         	goto	u1981
  1718   0011D0  EFEC  F008         	goto	u1980
  1719   0011D4                     u1981:
  1720   0011D4  EFE1  F008         	goto	l3125
  1721   0011D8                     u1980:
  1722   0011D8                     l3129:
  1723   0011D8  5004               	movf	___awmod@divisor^0,w,c
  1724   0011DA  5C02               	subwf	___awmod@dividend^0,w,c
  1725   0011DC  5005               	movf	(___awmod@divisor+1)^0,w,c
  1726   0011DE  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  1727   0011E0  A0D8               	btfss	status,0,c
  1728   0011E2  EFF5  F008         	goto	u1991
  1729   0011E6  EFF7  F008         	goto	u1990
  1730   0011EA                     u1991:
  1731   0011EA  EFFB  F008         	goto	l3133
  1732   0011EE                     u1990:
  1733   0011EE  5004               	movf	___awmod@divisor^0,w,c
  1734   0011F0  5E02               	subwf	___awmod@dividend^0,f,c
  1735   0011F2  5005               	movf	(___awmod@divisor+1)^0,w,c
  1736   0011F4  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  1737   0011F6                     l3133:
  1738   0011F6  90D8               	bcf	status,0,c
  1739   0011F8  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  1740   0011FA  3204               	rrcf	___awmod@divisor^0,f,c
  1741   0011FC  2E06               	decfsz	___awmod@counter^0,f,c
  1742   0011FE  EFEC  F008         	goto	l3129
  1743   001202                     l3137:
  1744   001202  5007               	movf	___awmod@sign^0,w,c
  1745   001204  B4D8               	btfsc	status,2,c
  1746   001206  EF07  F009         	goto	u2001
  1747   00120A  EF09  F009         	goto	u2000
  1748   00120E                     u2001:
  1749   00120E  EF0D  F009         	goto	l3141
  1750   001212                     u2000:
  1751   001212  6C02               	negf	___awmod@dividend^0,c
  1752   001214  1E03               	comf	(___awmod@dividend+1)^0,f,c
  1753   001216  B0D8               	btfsc	status,0,c
  1754   001218  2A03               	incf	(___awmod@dividend+1)^0,f,c
  1755   00121A                     l3141:
  1756   00121A  C002  F002         	movff	___awmod@dividend,?___awmod
  1757   00121E  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  1758   001222  0012               	return		;funcret
  1759   001224                     __end_of___awmod:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function ___awdiv *****************
  1763 ;; Defined at:
  1764 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  dividend        2    1[COMRAM] int 
  1767 ;;  divisor         2    3[COMRAM] int 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  quotient        2    7[COMRAM] int 
  1770 ;;  sign            1    6[COMRAM] unsigned char 
  1771 ;;  counter         1    5[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2    1[COMRAM] int 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;Total ram usage:        8 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_vfpfcnvrt
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text9
  1796   001000                     __ptext9:
  1797                           	callstack 0
  1798   001000                     ___awdiv:
  1799                           	callstack 25
  1800   001000  0E00               	movlw	0
  1801   001002  6E07               	movwf	___awdiv@sign^0,c
  1802   001004  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  1803   001006  EF09  F008         	goto	u1890
  1804   00100A  EF07  F008         	goto	u1891
  1805   00100E                     u1891:
  1806   00100E  EF0F  F008         	goto	l3073
  1807   001012                     u1890:
  1808   001012  6C04               	negf	___awdiv@divisor^0,c
  1809   001014  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  1810   001016  B0D8               	btfsc	status,0,c
  1811   001018  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  1812   00101A  0E01               	movlw	1
  1813   00101C  6E07               	movwf	___awdiv@sign^0,c
  1814   00101E                     l3073:
  1815   00101E  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  1816   001020  EF16  F008         	goto	u1900
  1817   001024  EF14  F008         	goto	u1901
  1818   001028                     u1901:
  1819   001028  EF1C  F008         	goto	l3079
  1820   00102C                     u1900:
  1821   00102C  6C02               	negf	___awdiv@dividend^0,c
  1822   00102E  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  1823   001030  B0D8               	btfsc	status,0,c
  1824   001032  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  1825   001034  0E01               	movlw	1
  1826   001036  1A07               	xorwf	___awdiv@sign^0,f,c
  1827   001038                     l3079:
  1828   001038  0E00               	movlw	0
  1829   00103A  6E09               	movwf	(___awdiv@quotient+1)^0,c
  1830   00103C  0E00               	movlw	0
  1831   00103E  6E08               	movwf	___awdiv@quotient^0,c
  1832   001040  5004               	movf	___awdiv@divisor^0,w,c
  1833   001042  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  1834   001044  B4D8               	btfsc	status,2,c
  1835   001046  EF27  F008         	goto	u1911
  1836   00104A  EF29  F008         	goto	u1910
  1837   00104E                     u1911:
  1838   00104E  EF51  F008         	goto	l3101
  1839   001052                     u1910:
  1840   001052  0E01               	movlw	1
  1841   001054  6E06               	movwf	___awdiv@counter^0,c
  1842   001056  EF31  F008         	goto	l3087
  1843   00105A                     l3085:
  1844   00105A  90D8               	bcf	status,0,c
  1845   00105C  3604               	rlcf	___awdiv@divisor^0,f,c
  1846   00105E  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  1847   001060  2A06               	incf	___awdiv@counter^0,f,c
  1848   001062                     l3087:
  1849   001062  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  1850   001064  EF36  F008         	goto	u1921
  1851   001068  EF38  F008         	goto	u1920
  1852   00106C                     u1921:
  1853   00106C  EF2D  F008         	goto	l3085
  1854   001070                     u1920:
  1855   001070                     l3089:
  1856   001070  90D8               	bcf	status,0,c
  1857   001072  3608               	rlcf	___awdiv@quotient^0,f,c
  1858   001074  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  1859   001076  5004               	movf	___awdiv@divisor^0,w,c
  1860   001078  5C02               	subwf	___awdiv@dividend^0,w,c
  1861   00107A  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1862   00107C  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  1863   00107E  A0D8               	btfss	status,0,c
  1864   001080  EF44  F008         	goto	u1931
  1865   001084  EF46  F008         	goto	u1930
  1866   001088                     u1931:
  1867   001088  EF4B  F008         	goto	l3097
  1868   00108C                     u1930:
  1869   00108C  5004               	movf	___awdiv@divisor^0,w,c
  1870   00108E  5E02               	subwf	___awdiv@dividend^0,f,c
  1871   001090  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1872   001092  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  1873   001094  8008               	bsf	___awdiv@quotient^0,0,c
  1874   001096                     l3097:
  1875   001096  90D8               	bcf	status,0,c
  1876   001098  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  1877   00109A  3204               	rrcf	___awdiv@divisor^0,f,c
  1878   00109C  2E06               	decfsz	___awdiv@counter^0,f,c
  1879   00109E  EF38  F008         	goto	l3089
  1880   0010A2                     l3101:
  1881   0010A2  5007               	movf	___awdiv@sign^0,w,c
  1882   0010A4  B4D8               	btfsc	status,2,c
  1883   0010A6  EF57  F008         	goto	u1941
  1884   0010AA  EF59  F008         	goto	u1940
  1885   0010AE                     u1941:
  1886   0010AE  EF5D  F008         	goto	l3105
  1887   0010B2                     u1940:
  1888   0010B2  6C08               	negf	___awdiv@quotient^0,c
  1889   0010B4  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  1890   0010B6  B0D8               	btfsc	status,0,c
  1891   0010B8  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  1892   0010BA                     l3105:
  1893   0010BA  C008  F002         	movff	___awdiv@quotient,?___awdiv
  1894   0010BE  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  1895   0010C2  0012               	return		;funcret
  1896   0010C4                     __end_of___awdiv:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _sendStringSerial4 *****************
  1900 ;; Defined at:
  1901 ;;		line 35 in file "serial.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  string          2    2[COMRAM] PTR unsigned char 
  1904 ;;		 -> STR_4(3), sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;Total ram usage:        2 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		_sendCharSerial4
  1925 ;; This function is called by:
  1926 ;;		_sendArraySerial4
  1927 ;;		_sendIntSerial4
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text10
  1932   0013C4                     __ptext10:
  1933                           	callstack 0
  1934   0013C4                     _sendStringSerial4:
  1935                           	callstack 27
  1936   0013C4                     
  1937                           ;serial.c: 37:     while(*string != 0){
  1938   0013C4  EFF9  F009         	goto	l3271
  1939   0013C8                     l3267:
  1940                           
  1941                           ;serial.c: 38:   sendCharSerial4(*string++);
  1942   0013C8  C003  FFF6         	movff	sendStringSerial4@string,tblptrl
  1943   0013CC  C004  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1944   0013D0  0E00               	movlw	low (__smallconst shr (0+16))
  1945   0013D2  6EF8               	movwf	tblptru,c
  1946   0013D4  0E0D               	movlw	(high __ramtop+-1)
  1947   0013D6  64F7               	cpfsgt	tblptrh,c
  1948   0013D8  D003               	bra	u2207
  1949   0013DA  0008               	tblrd		*
  1950   0013DC  50F5               	movf	tablat,w,c
  1951   0013DE  D005               	bra	u2200
  1952   0013E0                     u2207:
  1953   0013E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1954   0013E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1955   0013E8  50EF               	movf	indf0,w,c
  1956   0013EA                     u2200:
  1957   0013EA  EC4D  F00B         	call	_sendCharSerial4
  1958   0013EE  4A03               	infsnz	sendStringSerial4@string^0,f,c
  1959   0013F0  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  1960   0013F2                     l3271:
  1961                           
  1962                           ;serial.c: 37:     while(*string != 0){
  1963   0013F2  C003  FFF6         	movff	sendStringSerial4@string,tblptrl
  1964   0013F6  C004  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1965   0013FA  0E00               	movlw	low (__smallconst shr (0+16))
  1966   0013FC  6EF8               	movwf	tblptru,c
  1967   0013FE  0E0D               	movlw	(high __ramtop+-1)
  1968   001400  64F7               	cpfsgt	tblptrh,c
  1969   001402  D003               	bra	u2217
  1970   001404  0008               	tblrd		*
  1971   001406  50F5               	movf	tablat,w,c
  1972   001408  D005               	bra	u2210
  1973   00140A                     u2217:
  1974   00140A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1975   00140E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1976   001412  50EF               	movf	indf0,w,c
  1977   001414                     u2210:
  1978   001414  0900               	iorlw	0
  1979   001416  A4D8               	btfss	status,2,c
  1980   001418  EF10  F00A         	goto	u2221
  1981   00141C  EF12  F00A         	goto	u2220
  1982   001420                     u2221:
  1983   001420  EFE4  F009         	goto	l3267
  1984   001424                     u2220:
  1985   001424  0012               	return		;funcret
  1986   001426                     __end_of_sendStringSerial4:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _sendCharSerial4 *****************
  1990 ;; Defined at:
  1991 ;;		line 29 in file "serial.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  charToSend      1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  charToSend      1    1[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_sendStringSerial4
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text11
  2020   00169A                     __ptext11:
  2021                           	callstack 0
  2022   00169A                     _sendCharSerial4:
  2023                           	callstack 27
  2024                           
  2025                           ;incstack = 0
  2026                           ;sendCharSerial4@charToSend stored from wreg
  2027   00169A  6E02               	movwf	sendCharSerial4@charToSend^0,c
  2028   00169C                     l388:
  2029   00169C  010E               	movlb	14	; () banked
  2030   00169E  A537               	btfss	55,2,b	;volatile
  2031   0016A0  EF54  F00B         	goto	u2181
  2032   0016A4  EF56  F00B         	goto	u2180
  2033   0016A8                     u2181:
  2034   0016A8  EF4E  F00B         	goto	l388
  2035   0016AC                     u2180:
  2036   0016AC                     
  2037                           ; BSR set to: 14
  2038                           ;serial.c: 31:     TX4REG = charToSend;
  2039   0016AC  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2040   0016B0                     
  2041                           ; BSR set to: 14
  2042   0016B0  0012               	return		;funcret
  2043   0016B2                     __end_of_sendCharSerial4:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _initUSART4 *****************
  2047 ;; Defined at:
  2048 ;;		line 5 in file "serial.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text12
  2077   00167C                     __ptext12:
  2078                           	callstack 0
  2079   00167C                     _initUSART4:
  2080                           	callstack 29
  2081   00167C                     
  2082                           ;serial.c: 9:     RC0PPS = 0x12;
  2083   00167C  0E12               	movlw	18
  2084   00167E  010E               	movlb	14	; () banked
  2085   001680  6F62               	movwf	98,b	;volatile
  2086                           
  2087                           ;serial.c: 10:     RX4PPS = 0x11;
  2088   001682  0E11               	movlw	17
  2089   001684  6F15               	movwf	21,b	;volatile
  2090   001686                     
  2091                           ; BSR set to: 14
  2092                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2093   001686  97E9               	bcf	233,3,b	;volatile
  2094   001688                     
  2095                           ; BSR set to: 14
  2096                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2097   001688  95E8               	bcf	232,2,b	;volatile
  2098                           
  2099                           ;serial.c: 14:     SP4BRGL = 51;
  2100   00168A  0E33               	movlw	51
  2101   00168C  6FE5               	movwf	229,b	;volatile
  2102                           
  2103                           ;serial.c: 15:     SP4BRGH = 0;
  2104   00168E  0E00               	movlw	0
  2105   001690  6FE6               	movwf	230,b	;volatile
  2106   001692                     
  2107                           ; BSR set to: 14
  2108                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2109   001692  89E7               	bsf	231,4,b	;volatile
  2110   001694                     
  2111                           ; BSR set to: 14
  2112                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2113   001694  8BE8               	bsf	232,5,b	;volatile
  2114   001696                     
  2115                           ; BSR set to: 14
  2116                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2117   001696  8FE7               	bsf	231,7,b	;volatile
  2118   001698                     
  2119                           ; BSR set to: 14
  2120   001698  0012               	return		;funcret
  2121   00169A                     __end_of_initUSART4:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _initDCmotorsPWM *****************
  2125 ;; Defined at:
  2126 ;;		line 5 in file "dc_motor.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  PWMperiod       2    1[COMRAM] unsigned int 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text13
  2155   0012CE                     __ptext13:
  2156                           	callstack 0
  2157   0012CE                     _initDCmotorsPWM:
  2158                           	callstack 29
  2159   0012CE                     
  2160                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2161   0012CE  9485               	bcf	133,2,c	;volatile
  2162                           
  2163                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2164   0012D0  9885               	bcf	133,4,c	;volatile
  2165                           
  2166                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2167   0012D2  9E83               	bcf	131,7,c	;volatile
  2168                           
  2169                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2170   0012D4  9C87               	bcf	135,6,c	;volatile
  2171                           
  2172                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2173   0012D6  947D               	bcf	125,2,c	;volatile
  2174                           
  2175                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2176   0012D8  987D               	bcf	125,4,c	;volatile
  2177                           
  2178                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2179   0012DA  9E7B               	bcf	123,7,c	;volatile
  2180                           
  2181                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2182   0012DC  9C7F               	bcf	127,6,c	;volatile
  2183   0012DE                     
  2184                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2185   0012DE  0E05               	movlw	5
  2186   0012E0  010E               	movlb	14	; () banked
  2187   0012E2  6F74               	movwf	116,b	;volatile
  2188                           
  2189                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2190   0012E4  0E06               	movlw	6
  2191   0012E6  6F76               	movwf	118,b	;volatile
  2192                           
  2193                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2194   0012E8  0E07               	movlw	7
  2195   0012EA  6F69               	movwf	105,b	;volatile
  2196                           
  2197                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2198   0012EC  0E08               	movlw	8
  2199   0012EE  6F88               	movwf	136,b	;volatile
  2200                           
  2201                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2202   0012F0  50BD               	movf	189,w,c	;volatile
  2203   0012F2  0B8F               	andlw	-113
  2204   0012F4  0940               	iorlw	64
  2205   0012F6  6EBD               	movwf	189,c	;volatile
  2206                           
  2207                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2208   0012F8  0EE0               	movlw	-32
  2209   0012FA  16BE               	andwf	190,f,c	;volatile
  2210                           
  2211                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2212   0012FC  50BF               	movf	191,w,c	;volatile
  2213   0012FE  0BF0               	andlw	-16
  2214   001300  0901               	iorlw	1
  2215   001302  6EBF               	movwf	191,c	;volatile
  2216   001304                     
  2217                           ; BSR set to: 14
  2218                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2219   001304  C002  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2220   001308                     
  2221                           ; BSR set to: 14
  2222                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2223   001308  8EBD               	bsf	189,7,c	;volatile
  2224                           
  2225                           ;dc_motor.c: 35:     CCPR1H=0;
  2226   00130A  0E00               	movlw	0
  2227   00130C  6EAA               	movwf	170,c	;volatile
  2228                           
  2229                           ;dc_motor.c: 36:     CCPR2H=0;
  2230   00130E  0E00               	movlw	0
  2231   001310  6EA6               	movwf	166,c	;volatile
  2232                           
  2233                           ;dc_motor.c: 37:     CCPR3H=0;
  2234   001312  0E00               	movlw	0
  2235   001314  010F               	movlb	15	; () banked
  2236   001316  6F25               	movwf	37,b	;volatile
  2237                           
  2238                           ;dc_motor.c: 38:     CCPR4H=0;
  2239   001318  0E00               	movlw	0
  2240   00131A  6F21               	movwf	33,b	;volatile
  2241                           
  2242                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2243   00131C  0EFC               	movlw	-4
  2244   00131E  16AD               	andwf	173,f,c	;volatile
  2245                           
  2246                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2247   001320  0EF3               	movlw	-13
  2248   001322  16AD               	andwf	173,f,c	;volatile
  2249                           
  2250                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2251   001324  0ECF               	movlw	-49
  2252   001326  16AD               	andwf	173,f,c	;volatile
  2253                           
  2254                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2255   001328  0E3F               	movlw	-193
  2256   00132A  16AD               	andwf	173,f,c	;volatile
  2257   00132C                     
  2258                           ; BSR set to: 15
  2259                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2260   00132C  88AB               	bsf	171,4,c	;volatile
  2261                           
  2262                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2263   00132E  50AB               	movf	171,w,c	;volatile
  2264   001330  0BF0               	andlw	-16
  2265   001332  090C               	iorlw	12
  2266   001334  6EAB               	movwf	171,c	;volatile
  2267   001336                     
  2268                           ; BSR set to: 15
  2269                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2270   001336  8EAB               	bsf	171,7,c	;volatile
  2271   001338                     
  2272                           ; BSR set to: 15
  2273                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2274   001338  88A7               	bsf	167,4,c	;volatile
  2275                           
  2276                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2277   00133A  50A7               	movf	167,w,c	;volatile
  2278   00133C  0BF0               	andlw	-16
  2279   00133E  090C               	iorlw	12
  2280   001340  6EA7               	movwf	167,c	;volatile
  2281   001342                     
  2282                           ; BSR set to: 15
  2283                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2284   001342  8EA7               	bsf	167,7,c	;volatile
  2285   001344                     
  2286                           ; BSR set to: 15
  2287                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2288   001344  8926               	bsf	38,4,b	;volatile
  2289                           
  2290                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2291   001346  5126               	movf	38,w,b	;volatile
  2292   001348  0BF0               	andlw	-16
  2293   00134A  090C               	iorlw	12
  2294   00134C  6F26               	movwf	38,b	;volatile
  2295   00134E                     
  2296                           ; BSR set to: 15
  2297                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2298   00134E  8F26               	bsf	38,7,b	;volatile
  2299   001350                     
  2300                           ; BSR set to: 15
  2301                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2302   001350  8922               	bsf	34,4,b	;volatile
  2303                           
  2304                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2305   001352  5122               	movf	34,w,b	;volatile
  2306   001354  0BF0               	andlw	-16
  2307   001356  090C               	iorlw	12
  2308   001358  6F22               	movwf	34,b	;volatile
  2309   00135A                     
  2310                           ; BSR set to: 15
  2311                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2312   00135A  8F22               	bsf	34,7,b	;volatile
  2313   00135C                     
  2314                           ; BSR set to: 15
  2315   00135C  0012               	return		;funcret
  2316   00135E                     __end_of_initDCmotorsPWM:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _color_click_init *****************
  2320 ;; Defined at:
  2321 ;;		line 5 in file "color.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;Total ram usage:        1 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 4
  2342 ;; This function calls:
  2343 ;;		_I2C_2_Master_Init
  2344 ;;		_color_writetoaddr
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text14
  2351   001586                     __ptext14:
  2352                           	callstack 0
  2353   001586                     _color_click_init:
  2354                           	callstack 26
  2355   001586                     
  2356                           ;color.c: 8:     I2C_2_Master_Init();
  2357   001586  ECDD  F00A         	call	_I2C_2_Master_Init	;wreg free
  2358   00158A                     
  2359                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2360   00158A  0E01               	movlw	1
  2361   00158C  6E04               	movwf	color_writetoaddr@value^0,c
  2362   00158E  0E00               	movlw	0
  2363   001590  EC2E  F00B         	call	_color_writetoaddr
  2364   001594                     
  2365                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2366   001594  0E3F               	movlw	63
  2367   001596  6E06               	movwf	??_color_click_init^0,c
  2368   001598  0E55               	movlw	85
  2369   00159A                     u2287:
  2370   00159A  2EE8               	decfsz	wreg,f,c
  2371   00159C  D7FE               	bra	u2287
  2372   00159E  2E06               	decfsz	??_color_click_init^0,f,c
  2373   0015A0  D7FC               	bra	u2287
  2374   0015A2  0000               	nop	
  2375   0015A4                     
  2376                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2377   0015A4  0E03               	movlw	3
  2378   0015A6  6E04               	movwf	color_writetoaddr@value^0,c
  2379   0015A8  0E00               	movlw	0
  2380   0015AA  EC2E  F00B         	call	_color_writetoaddr
  2381   0015AE                     
  2382                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2383   0015AE  0ED5               	movlw	213
  2384   0015B0  6E04               	movwf	color_writetoaddr@value^0,c
  2385   0015B2  0E01               	movlw	1
  2386   0015B4  EC2E  F00B         	call	_color_writetoaddr
  2387   0015B8  0012               	return		;funcret
  2388   0015BA                     __end_of_color_click_init:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _color_writetoaddr *****************
  2392 ;; Defined at:
  2393 ;;		line 21 in file "color.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  address         1    wreg     unsigned char 
  2396 ;;  value           1    3[COMRAM] unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  address         1    4[COMRAM] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;Total ram usage:        2 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 3
  2415 ;; This function calls:
  2416 ;;		_I2C_2_Master_Start
  2417 ;;		_I2C_2_Master_Stop
  2418 ;;		_I2C_2_Master_Write
  2419 ;; This function is called by:
  2420 ;;		_color_click_init
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text15
  2425   00165C                     __ptext15:
  2426                           	callstack 0
  2427   00165C                     _color_writetoaddr:
  2428                           	callstack 26
  2429                           
  2430                           ;incstack = 0
  2431                           ;color_writetoaddr@address stored from wreg
  2432   00165C  6E05               	movwf	color_writetoaddr@address^0,c
  2433   00165E                     
  2434                           ;color.c: 22:     I2C_2_Master_Start();
  2435   00165E  EC64  F00B         	call	_I2C_2_Master_Start	;wreg free
  2436                           
  2437                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2438   001662  0E52               	movlw	82
  2439   001664  EC59  F00B         	call	_I2C_2_Master_Write
  2440                           
  2441                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2442   001668  5005               	movf	color_writetoaddr@address^0,w,c
  2443   00166A  0980               	iorlw	128
  2444   00166C  EC59  F00B         	call	_I2C_2_Master_Write
  2445                           
  2446                           ;color.c: 25:     I2C_2_Master_Write(value);
  2447   001670  5004               	movf	color_writetoaddr@value^0,w,c
  2448   001672  EC59  F00B         	call	_I2C_2_Master_Write
  2449                           
  2450                           ;color.c: 26:     I2C_2_Master_Stop();
  2451   001676  EC5F  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2452   00167A  0012               	return		;funcret
  2453   00167C                     __end_of_color_writetoaddr:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _I2C_2_Master_Write *****************
  2457 ;; Defined at:
  2458 ;;		line 45 in file "i2c.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  data_byte       1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  data_byte       1    2[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 2
  2479 ;; This function calls:
  2480 ;;		_I2C_2_Master_Idle
  2481 ;; This function is called by:
  2482 ;;		_color_writetoaddr
  2483 ;;		_color_read_Red
  2484 ;;		_color_read_Blue
  2485 ;;		_color_read_Green
  2486 ;;		_color_read_Clear
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text16
  2491   0016B2                     __ptext16:
  2492                           	callstack 0
  2493   0016B2                     _I2C_2_Master_Write:
  2494                           	callstack 26
  2495                           
  2496                           ;incstack = 0
  2497                           ;I2C_2_Master_Write@data_byte stored from wreg
  2498   0016B2  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  2499   0016B4                     
  2500                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2501   0016B4  ECF2  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2502   0016B8                     
  2503                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2504   0016B8  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2505   0016BC  0012               	return		;funcret
  2506   0016BE                     __end_of_I2C_2_Master_Write:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _I2C_2_Master_Stop *****************
  2510 ;; Defined at:
  2511 ;;		line 39 in file "i2c.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 2
  2532 ;; This function calls:
  2533 ;;		_I2C_2_Master_Idle
  2534 ;; This function is called by:
  2535 ;;		_color_writetoaddr
  2536 ;;		_color_read_Red
  2537 ;;		_color_read_Blue
  2538 ;;		_color_read_Green
  2539 ;;		_color_read_Clear
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text17
  2544   0016BE                     __ptext17:
  2545                           	callstack 0
  2546   0016BE                     _I2C_2_Master_Stop:
  2547                           	callstack 26
  2548   0016BE                     
  2549                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2550   0016BE  ECF2  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2551   0016C2                     
  2552                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2553   0016C2  010E               	movlb	14	; () banked
  2554   0016C4  85DA               	bsf	218,2,b	;volatile
  2555   0016C6                     
  2556                           ; BSR set to: 14
  2557   0016C6  0012               	return		;funcret
  2558   0016C8                     __end_of_I2C_2_Master_Stop:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _I2C_2_Master_Start *****************
  2562 ;; Defined at:
  2563 ;;		line 27 in file "i2c.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 2
  2584 ;; This function calls:
  2585 ;;		_I2C_2_Master_Idle
  2586 ;; This function is called by:
  2587 ;;		_color_writetoaddr
  2588 ;;		_color_read_Red
  2589 ;;		_color_read_Blue
  2590 ;;		_color_read_Green
  2591 ;;		_color_read_Clear
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text18
  2596   0016C8                     __ptext18:
  2597                           	callstack 0
  2598   0016C8                     _I2C_2_Master_Start:
  2599                           	callstack 26
  2600   0016C8                     
  2601                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2602   0016C8  ECF2  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2603   0016CC                     
  2604                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2605   0016CC  010E               	movlb	14	; () banked
  2606   0016CE  81DA               	bsf	218,0,b	;volatile
  2607   0016D0                     
  2608                           ; BSR set to: 14
  2609   0016D0  0012               	return		;funcret
  2610   0016D2                     __end_of_I2C_2_Master_Start:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _I2C_2_Master_Idle *****************
  2614 ;; Defined at:
  2615 ;;		line 22 in file "i2c.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_I2C_2_Master_Start
  2640 ;;		_I2C_2_Master_Stop
  2641 ;;		_I2C_2_Master_Write
  2642 ;;		_I2C_2_Master_RepStart
  2643 ;;		_I2C_2_Master_Read
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text19
  2648   0015E4                     __ptext19:
  2649                           	callstack 0
  2650   0015E4                     _I2C_2_Master_Idle:
  2651                           	callstack 26
  2652   0015E4                     l244:
  2653   0015E4  010E               	movlb	14	; () banked
  2654   0015E6  B5D8               	btfsc	216,2,b	;volatile
  2655   0015E8  EFF8  F00A         	goto	u2061
  2656   0015EC  EFFA  F00A         	goto	u2060
  2657   0015F0                     u2061:
  2658   0015F0  EFF2  F00A         	goto	l244
  2659   0015F4                     u2060:
  2660   0015F4                     
  2661                           ; BSR set to: 14
  2662   0015F4  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2663   0015F8  0E1F               	movlw	31
  2664   0015FA  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  2665   0015FC  A4D8               	btfss	status,2,c
  2666   0015FE  EF03  F00B         	goto	u2071
  2667   001602  EF05  F00B         	goto	u2070
  2668   001606                     u2071:
  2669   001606  EFF2  F00A         	goto	l244
  2670   00160A                     u2070:
  2671   00160A                     
  2672                           ; BSR set to: 14
  2673   00160A  0012               	return		;funcret
  2674   00160C                     __end_of_I2C_2_Master_Idle:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _I2C_2_Master_Init *****************
  2678 ;; Defined at:
  2679 ;;		line 4 in file "i2c.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_color_click_init
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text20
  2708   0015BA                     __ptext20:
  2709                           	callstack 0
  2710   0015BA                     _I2C_2_Master_Init:
  2711                           	callstack 28
  2712   0015BA                     
  2713                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2714   0015BA  010E               	movlb	14	; () banked
  2715   0015BC  51D9               	movf	217,w,b	;volatile
  2716   0015BE  0BF0               	andlw	-16
  2717   0015C0  0908               	iorlw	8
  2718   0015C2  6FD9               	movwf	217,b	;volatile
  2719   0015C4                     
  2720                           ; BSR set to: 14
  2721                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2722   0015C4  8BD9               	bsf	217,5,b	;volatile
  2723                           
  2724                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2725   0015C6  0E9F               	movlw	159
  2726   0015C8  6FD6               	movwf	214,b	;volatile
  2727   0015CA                     
  2728                           ; BSR set to: 14
  2729                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2730   0015CA  8A84               	bsf	132,5,c	;volatile
  2731   0015CC                     
  2732                           ; BSR set to: 14
  2733                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2734   0015CC  8C84               	bsf	132,6,c	;volatile
  2735   0015CE                     
  2736                           ; BSR set to: 14
  2737                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2738   0015CE  9BA7               	bcf	167,5,b	;volatile
  2739   0015D0                     
  2740                           ; BSR set to: 14
  2741                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2742   0015D0  9DA7               	bcf	167,6,b	;volatile
  2743                           
  2744                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2745   0015D2  0E1D               	movlw	29
  2746   0015D4  6F1D               	movwf	29,b	;volatile
  2747                           
  2748                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2749   0015D6  0E1E               	movlw	30
  2750   0015D8  6F1C               	movwf	28,b	;volatile
  2751                           
  2752                           ;i2c.c: 18:   RD5PPS=0x1C;
  2753   0015DA  0E1C               	movlw	28
  2754   0015DC  6F6F               	movwf	111,b	;volatile
  2755                           
  2756                           ;i2c.c: 19:   RD6PPS=0x1B;
  2757   0015DE  0E1B               	movlw	27
  2758   0015E0  6F70               	movwf	112,b	;volatile
  2759   0015E2                     
  2760                           ; BSR set to: 14
  2761   0015E2  0012               	return		;funcret
  2762   0015E4                     __end_of_I2C_2_Master_Init:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _buggy_lights_init *****************
  2766 ;; Defined at:
  2767 ;;		line 4 in file "buggy_lights.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		None
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; Hardware stack levels required when called: 1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text21
  2796   00147C                     __ptext21:
  2797                           	callstack 0
  2798   00147C                     _buggy_lights_init:
  2799                           	callstack 29
  2800   00147C                     
  2801                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2802   00147C  9884               	bcf	132,4,c	;volatile
  2803                           
  2804                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2805   00147E  9288               	bcf	136,1,c	;volatile
  2806                           
  2807                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2808   001480  9684               	bcf	132,3,c	;volatile
  2809                           
  2810                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2811   001482  9086               	bcf	134,0,c	;volatile
  2812                           
  2813                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2814   001484  9088               	bcf	136,0,c	;volatile
  2815                           
  2816                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 0;
  2817   001486  987C               	bcf	124,4,c	;volatile
  2818                           
  2819                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 0;
  2820   001488  9280               	bcf	128,1,c	;volatile
  2821                           
  2822                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 0;
  2823   00148A  967C               	bcf	124,3,c	;volatile
  2824                           
  2825                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 0;
  2826   00148C  907E               	bcf	126,0,c	;volatile
  2827                           
  2828                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 0;
  2829   00148E  9080               	bcf	128,0,c	;volatile
  2830                           
  2831                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2832   001490  9E84               	bcf	132,7,c	;volatile
  2833                           
  2834                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2835   001492  9688               	bcf	136,3,c	;volatile
  2836                           
  2837                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2838   001494  8E7C               	bsf	124,7,c	;volatile
  2839                           
  2840                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2841   001496  8680               	bsf	128,3,c	;volatile
  2842                           
  2843                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  2844   001498  9081               	bcf	129,0,c	;volatile
  2845                           
  2846                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  2847   00149A  9483               	bcf	131,2,c	;volatile
  2848                           
  2849                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  2850   00149C  9084               	bcf	132,0,c	;volatile
  2851                           
  2852                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 0;
  2853   00149E  9079               	bcf	121,0,c	;volatile
  2854                           
  2855                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 0;
  2856   0014A0  947B               	bcf	123,2,c	;volatile
  2857                           
  2858                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 0;
  2859   0014A2  907C               	bcf	124,0,c	;volatile
  2860                           
  2861                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  2862   0014A4  9281               	bcf	129,1,c	;volatile
  2863                           
  2864                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  2865   0014A6  9C83               	bcf	131,6,c	;volatile
  2866                           
  2867                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  2868   0014A8  9488               	bcf	136,2,c	;volatile
  2869                           
  2870                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 0;
  2871   0014AA  9279               	bcf	121,1,c	;volatile
  2872                           
  2873                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 0;
  2874   0014AC  9C7B               	bcf	123,6,c	;volatile
  2875                           
  2876                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 0;
  2877   0014AE  9480               	bcf	128,2,c	;volatile
  2878                           
  2879                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  2880   0014B0  9287               	bcf	135,1,c	;volatile
  2881                           
  2882                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  2883   0014B2  9881               	bcf	129,4,c	;volatile
  2884                           
  2885                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  2886   0014B4  9E86               	bcf	134,7,c	;volatile
  2887                           
  2888                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 0;
  2889   0014B6  927F               	bcf	127,1,c	;volatile
  2890                           
  2891                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 0;
  2892   0014B8  9879               	bcf	121,4,c	;volatile
  2893                           
  2894                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 0;
  2895   0014BA  9E7E               	bcf	126,7,c	;volatile
  2896                           
  2897                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  2898   0014BC  9087               	bcf	135,0,c	;volatile
  2899                           
  2900                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  2901   0014BE  9E85               	bcf	133,7,c	;volatile
  2902                           
  2903                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  2904   0014C0  9681               	bcf	129,3,c	;volatile
  2905                           
  2906                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 0;
  2907   0014C2  907F               	bcf	127,0,c	;volatile
  2908                           
  2909                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 0;
  2910   0014C4  9E7D               	bcf	125,7,c	;volatile
  2911                           
  2912                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 0;
  2913   0014C6  9679               	bcf	121,3,c	;volatile
  2914   0014C8  0012               	return		;funcret
  2915   0014CA                     __end_of_buggy_lights_init:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _Timer0_init *****************
  2919 ;; Defined at:
  2920 ;;		line 7 in file "timers.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text22
  2949   00160C                     __ptext22:
  2950                           	callstack 0
  2951   00160C                     _Timer0_init:
  2952                           	callstack 29
  2953   00160C                     
  2954                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2955   00160C  50D6               	movf	214,w,c	;volatile
  2956   00160E  0B1F               	andlw	-225
  2957   001610  0940               	iorlw	64
  2958   001612  6ED6               	movwf	214,c	;volatile
  2959   001614                     
  2960                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2961   001614  88D6               	bsf	214,4,c	;volatile
  2962   001616                     
  2963                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  2964   001616  88D5               	bsf	213,4,c	;volatile
  2965                           
  2966                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  2967   001618  50D6               	movf	214,w,c	;volatile
  2968   00161A  0BF0               	andlw	-16
  2969   00161C  090E               	iorlw	14
  2970   00161E  6ED6               	movwf	214,c	;volatile
  2971                           
  2972                           ;timers.c: 20:     TMR0H = 0;
  2973   001620  0E00               	movlw	0
  2974   001622  6ED4               	movwf	212,c	;volatile
  2975                           
  2976                           ;timers.c: 21:     TMR0L = 0;
  2977   001624  0E00               	movlw	0
  2978   001626  6ED3               	movwf	211,c	;volatile
  2979   001628                     
  2980                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  2981   001628  8ED5               	bsf	213,7,c	;volatile
  2982   00162A                     
  2983                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  2984   00162A  010E               	movlb	14	; () banked
  2985   00162C  8B29               	bsf	41,5,b	;volatile
  2986   00162E                     
  2987                           ; BSR set to: 14
  2988                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  2989   00162E  8CF2               	bsf	242,6,c	;volatile
  2990   001630                     
  2991                           ; BSR set to: 14
  2992                           ;timers.c: 26:     INTCONbits.GIE = 1;
  2993   001630  8EF2               	bsf	242,7,c	;volatile
  2994   001632                     
  2995                           ; BSR set to: 14
  2996   001632  0012               	return		;funcret
  2997   001634                     __end_of_Timer0_init:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _ISR *****************
  3001 ;; Defined at:
  3002 ;;		line 29 in file "timers.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;Total ram usage:        1 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		Interrupt level 2
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	intcode
  3030   000008                     __pintcode:
  3031                           	callstack 0
  3032   000008                     _ISR:
  3033                           	callstack 24
  3034                           
  3035                           ; BSR set to: 14
  3036                           ;incstack = 0
  3037   000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3038   00000A                     
  3039                           ;timers.c: 32:     if (PIR0bits.TMR0IF) {
  3040   00000A  010E               	movlb	14	; () banked
  3041   00000C  AB33               	btfss	51,5,b	;volatile
  3042   00000E  EF0B  F000         	goto	i2u147_41
  3043   000012  EF0D  F000         	goto	i2u147_40
  3044   000016                     i2u147_41:
  3045   000016  EF21  F000         	goto	i2l562
  3046   00001A                     i2u147_40:
  3047   00001A                     
  3048                           ; BSR set to: 14
  3049                           ;timers.c: 39:         LATHbits.LATH3 = !LATHbits.LATH3;
  3050   00001A  A680               	btfss	128,3,c	;volatile
  3051   00001C  EF12  F000         	goto	i2u148_41
  3052   000020  EF16  F000         	goto	i2u148_40
  3053   000024                     i2u148_41:
  3054   000024  6A01               	clrf	??_ISR^0,c
  3055   000026  2A01               	incf	??_ISR^0,f,c
  3056   000028  EF17  F000         	goto	i2u149_48
  3057   00002C                     i2u148_40:
  3058   00002C  6A01               	clrf	??_ISR^0,c
  3059   00002E                     i2u149_48:
  3060   00002E  4601               	rlncf	??_ISR^0,f,c
  3061   000030  4601               	rlncf	??_ISR^0,f,c
  3062   000032  4601               	rlncf	??_ISR^0,f,c
  3063   000034  5080               	movf	128,w,c	;volatile
  3064   000036  1801               	xorwf	??_ISR^0,w,c
  3065   000038  0BF7               	andlw	-9
  3066   00003A  1801               	xorwf	??_ISR^0,w,c
  3067   00003C  6E80               	movwf	128,c	;volatile
  3068   00003E                     
  3069                           ;timers.c: 40:         PIR0bits.TMR0IF = 0;
  3070   00003E  010E               	movlb	14	; () banked
  3071   000040  9B33               	bcf	51,5,b	;volatile
  3072   000042                     i2l562:
  3073                           
  3074                           ; BSR set to: 14
  3075   000042  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3076   000044  0011               	retfie		f
  3077   000046                     __end_of_ISR:
  3078                           	callstack 0
  3079                           
  3080                           	psect	rparam
  3081   000000                     
  3082                           	psect	temp
  3083   00004D                     btemp:
  3084                           	callstack 0
  3085   00004D                     	ds	1
  3086   000000                     int$flags	set	btemp
  3087   000000                     wtemp8	set	btemp+1
  3088   000000                     ttemp5	set	btemp+1
  3089   000000                     ttemp6	set	btemp+4
  3090   000000                     ttemp7	set	btemp+8
  3091                           
  3092                           	psect	idloc
  3093                           
  3094                           ;Config register IDLOC0 @ 0x200000
  3095                           ;	unspecified, using default values
  3096   200000                     	org	2097152
  3097   200000  FFFF               	dw	65535
  3098                           
  3099                           ;Config register IDLOC1 @ 0x200002
  3100                           ;	unspecified, using default values
  3101   200002                     	org	2097154
  3102   200002  FFFF               	dw	65535
  3103                           
  3104                           ;Config register IDLOC2 @ 0x200004
  3105                           ;	unspecified, using default values
  3106   200004                     	org	2097156
  3107   200004  FFFF               	dw	65535
  3108                           
  3109                           ;Config register IDLOC3 @ 0x200006
  3110                           ;	unspecified, using default values
  3111   200006                     	org	2097158
  3112   200006  FFFF               	dw	65535
  3113                           
  3114                           ;Config register IDLOC4 @ 0x200008
  3115                           ;	unspecified, using default values
  3116   200008                     	org	2097160
  3117   200008  FFFF               	dw	65535
  3118                           
  3119                           ;Config register IDLOC5 @ 0x20000A
  3120                           ;	unspecified, using default values
  3121   20000A                     	org	2097162
  3122   20000A  FFFF               	dw	65535
  3123                           
  3124                           ;Config register IDLOC6 @ 0x20000C
  3125                           ;	unspecified, using default values
  3126   20000C                     	org	2097164
  3127   20000C  FFFF               	dw	65535
  3128                           
  3129                           ;Config register IDLOC7 @ 0x20000E
  3130                           ;	unspecified, using default values
  3131   20000E                     	org	2097166
  3132   20000E  FFFF               	dw	65535
  3133                           
  3134                           	psect	config
  3135                           
  3136                           ;Config register CONFIG1L @ 0x300000
  3137                           ;	External Oscillator mode Selection bits
  3138                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3139                           ;	Power-up default value for COSC bits
  3140                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3141   300000                     	org	3145728
  3142   300000  AA                 	db	170
  3143                           
  3144                           ;Config register CONFIG1H @ 0x300001
  3145                           ;	unspecified, using default values
  3146                           ;	Clock Out Enable bit
  3147                           ;	CLKOUTEN = 0x1, unprogrammed default
  3148                           ;	Clock Switch Enable bit
  3149                           ;	CSWEN = 0x1, unprogrammed default
  3150                           ;	Fail-Safe Clock Monitor Enable bit
  3151                           ;	FCMEN = 0x1, unprogrammed default
  3152   300001                     	org	3145729
  3153   300001  FF                 	db	255
  3154                           
  3155                           ;Config register CONFIG2L @ 0x300002
  3156                           ;	unspecified, using default values
  3157                           ;	Master Clear Enable bit
  3158                           ;	MCLRE = 0x1, unprogrammed default
  3159                           ;	Power-up Timer Enable bit
  3160                           ;	PWRTE = 0x1, unprogrammed default
  3161                           ;	Low-power BOR enable bit
  3162                           ;	LPBOREN = 0x1, unprogrammed default
  3163                           ;	Brown-out Reset Enable bits
  3164                           ;	BOREN = 0x3, unprogrammed default
  3165   300002                     	org	3145730
  3166   300002  FF                 	db	255
  3167                           
  3168                           ;Config register CONFIG2H @ 0x300003
  3169                           ;	unspecified, using default values
  3170                           ;	Brown Out Reset Voltage selection bits
  3171                           ;	BORV = 0x3, unprogrammed default
  3172                           ;	ZCD Disable bit
  3173                           ;	ZCD = 0x1, unprogrammed default
  3174                           ;	PPSLOCK bit One-Way Set Enable bit
  3175                           ;	PPS1WAY = 0x1, unprogrammed default
  3176                           ;	Stack Full/Underflow Reset Enable bit
  3177                           ;	STVREN = 0x1, unprogrammed default
  3178                           ;	Debugger Enable bit
  3179                           ;	DEBUG = 0x1, unprogrammed default
  3180                           ;	Extended Instruction Set Enable bit
  3181                           ;	XINST = 0x1, unprogrammed default
  3182   300003                     	org	3145731
  3183   300003  FF                 	db	255
  3184                           
  3185                           ;Config register CONFIG3L @ 0x300004
  3186                           ;	WDT Period Select bits
  3187                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3188                           ;	WDT operating mode
  3189                           ;	WDTE = OFF, WDT Disabled
  3190   300004                     	org	3145732
  3191   300004  9F                 	db	159
  3192                           
  3193                           ;Config register CONFIG3H @ 0x300005
  3194                           ;	unspecified, using default values
  3195                           ;	WDT Window Select bits
  3196                           ;	WDTCWS = 0x7, unprogrammed default
  3197                           ;	WDT input clock selector
  3198                           ;	WDTCCS = 0x7, unprogrammed default
  3199   300005                     	org	3145733
  3200   300005  FF                 	db	255
  3201                           
  3202                           ;Config register CONFIG4L @ 0x300006
  3203                           ;	unspecified, using default values
  3204                           ;	Write Protection Block 0
  3205                           ;	WRT0 = 0x1, unprogrammed default
  3206                           ;	Write Protection Block 1
  3207                           ;	WRT1 = 0x1, unprogrammed default
  3208                           ;	Write Protection Block 2
  3209                           ;	WRT2 = 0x1, unprogrammed default
  3210                           ;	Write Protection Block 3
  3211                           ;	WRT3 = 0x1, unprogrammed default
  3212                           ;	Write Protection Block 3
  3213                           ;	WRT4 = 0x1, unprogrammed default
  3214                           ;	Write Protection Block 3
  3215                           ;	WRT5 = 0x1, unprogrammed default
  3216                           ;	Write Protection Block 3
  3217                           ;	WRT6 = 0x1, unprogrammed default
  3218                           ;	Write Protection Block 3
  3219                           ;	WRT7 = 0x1, unprogrammed default
  3220   300006                     	org	3145734
  3221   300006  FF                 	db	255
  3222                           
  3223                           ;Config register CONFIG4H @ 0x300007
  3224                           ;	unspecified, using default values
  3225                           ;	Configuration Register Write Protection bit
  3226                           ;	WRTC = 0x1, unprogrammed default
  3227                           ;	Boot Block Write Protection bit
  3228                           ;	WRTB = 0x1, unprogrammed default
  3229                           ;	Data EEPROM Write Protection bit
  3230                           ;	WRTD = 0x1, unprogrammed default
  3231                           ;	Scanner Enable bit
  3232                           ;	SCANE = 0x1, unprogrammed default
  3233                           ;	Low Voltage Programming Enable bit
  3234                           ;	LVP = 0x1, unprogrammed default
  3235   300007                     	org	3145735
  3236   300007  FF                 	db	255
  3237                           
  3238                           ;Config register CONFIG5L @ 0x300008
  3239                           ;	unspecified, using default values
  3240                           ;	UserNVM Program Memory Code Protection bit
  3241                           ;	CP = 0x1, unprogrammed default
  3242                           ;	DataNVM Memory Code Protection bit
  3243                           ;	CPD = 0x1, unprogrammed default
  3244   300008                     	org	3145736
  3245   300008  FF                 	db	255
  3246                           
  3247                           ;Config register CONFIG5H @ 0x300009
  3248                           ;	unspecified, using default values
  3249   300009                     	org	3145737
  3250   300009  FF                 	db	255
  3251                           
  3252                           ;Config register CONFIG6L @ 0x30000A
  3253                           ;	unspecified, using default values
  3254                           ;	Table Read Protection Block 0
  3255                           ;	EBTR0 = 0x1, unprogrammed default
  3256                           ;	Table Read Protection Block 1
  3257                           ;	EBTR1 = 0x1, unprogrammed default
  3258                           ;	Table Read Protection Block 2
  3259                           ;	EBTR2 = 0x1, unprogrammed default
  3260                           ;	Table Read Protection Block 3
  3261                           ;	EBTR3 = 0x1, unprogrammed default
  3262                           ;	Table Read Protection Block 4
  3263                           ;	EBTR4 = 0x1, unprogrammed default
  3264                           ;	Table Read Protection Block 5
  3265                           ;	EBTR5 = 0x1, unprogrammed default
  3266                           ;	Table Read Protection Block 6
  3267                           ;	EBTR6 = 0x1, unprogrammed default
  3268                           ;	Table Read Protection Block 7
  3269                           ;	EBTR7 = 0x1, unprogrammed default
  3270   30000A                     	org	3145738
  3271   30000A  FF                 	db	255
  3272                           
  3273                           ;Config register CONFIG6H @ 0x30000B
  3274                           ;	unspecified, using default values
  3275                           ;	Boot Block Table Read Protection bit
  3276                           ;	EBTRB = 0x1, unprogrammed default
  3277   30000B                     	org	3145739
  3278   30000B  FF                 	db	255
  3279                           tosu	equ	0xFFF
  3280                           tosh	equ	0xFFE
  3281                           tosl	equ	0xFFD
  3282                           stkptr	equ	0xFFC
  3283                           pclatu	equ	0xFFB
  3284                           pclath	equ	0xFFA
  3285                           pcl	equ	0xFF9
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           prodh	equ	0xFF4
  3291                           prodl	equ	0xFF3
  3292                           indf0	equ	0xFEF
  3293                           postinc0	equ	0xFEE
  3294                           postdec0	equ	0xFED
  3295                           preinc0	equ	0xFEC
  3296                           plusw0	equ	0xFEB
  3297                           fsr0h	equ	0xFEA
  3298                           fsr0l	equ	0xFE9
  3299                           wreg	equ	0xFE8
  3300                           indf1	equ	0xFE7
  3301                           postinc1	equ	0xFE6
  3302                           postdec1	equ	0xFE5
  3303                           preinc1	equ	0xFE4
  3304                           plusw1	equ	0xFE3
  3305                           fsr1h	equ	0xFE2
  3306                           fsr1l	equ	0xFE1
  3307                           bsr	equ	0xFE0
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           preinc2	equ	0xFDC
  3312                           plusw2	equ	0xFDB
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        39
    BSS         164
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      76
    BANK0           160     18     160
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2507$buffer	PTR unsigned char  size(2) Largest target is 0

    S2507$source	PTR const unsigned char  size(2) Largest target is 0

    sendArraySerial4@arr	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 21
		 -> sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 21
		 -> sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendArraySerial4
    _sendArraySerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6260
                                             73 COMRAM     2     2      0
                                              0 BANK0     18    18      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                   _sendArraySerial4
 ---------------------------------------------------------------------------------
 (1) _sendArraySerial4                                    26    25      1    5304
                                             47 COMRAM    26    25      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4601
                                             28 COMRAM    19    15      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3911
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3450
                                             11 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     366
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _sendArraySerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      4C       1       80.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     128      61        0.0%
DATA                 0      0     128       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 19:44:57 2024

               _turn180Delay 00CB              _trail_timer_low 0080                           l33 14C8  
                         l55 15B8                           l58 167A                 ___awdiv@sign 0007  
           _trail_timer_high 0094                          l241 15E2                          l250 16D0  
                        l146 135C                          l244 15E4                          l405 13C2  
                        l247 160A                          l256 16C6                          l259 16BC  
                        l391 16B0                          l554 1632                          l379 1698  
                        l388 169C                          l397 1424                          l809 1222  
                        l796 10C2                          _ISR 0008                          _abs 1552  
               ___awmod@sign 0007                          wreg 0FE8                  _squareDelay 00C7  
                       ?_ISR 0001                         ?_abs 0008                         l1310 12CC  
                       l1321 16D2                         l1243 1550                         l3101 10A2  
                       l3103 10B2                         l3111 1178                         l3105 10BA  
                       l3121 11A8                         l3113 1186                         l3201 0F58  
                       l1290 1472                         l3131 11EE                         l3123 11BA  
                       l3115 118E                         l3203 0F68                         l3211 0F9A  
                       l1291 147A                         l1284 0FAC                         l3141 121A  
                       l3133 11F6                         l3125 11C2                         l3117 1192  
                       l3109 1174                         l3221 0FEE                         l1285 0FFE  
                       l3205 0F76                         l3213 0FB8                         l3231 16B4  
                       l3071 101A                         l3135 11FC                         l3127 11CA  
                       l3119 11A0                         l1295 156C                         l3151 124E  
                       l3223 0FF6                         l3215 0FC0                         l3207 0F7E  
                       l3233 16B8                         l3241 16AC                         l3081 1040  
                       l3073 101E                         l3065 1000                         l3129 11D8  
                       l3137 1202                         l3161 1560                         l3153 126A  
                       l3145 1224                         l3209 0F98                         l1298 1584  
                       l3251 15BA                         l3163 15E4                         l3227 16C8  
                       l3235 16BE                         l3331 132C                         l3323 12CE  
                       l3091 1076                         l3083 1052                         l3075 102C  
                       l3067 1004                         l3139 1212                         l3155 129C  
                       l3147 1234                         l3171 0E38                         l3219 0FCC  
                       l3243 1426                         l3411 10DC                         l3261 15D0  
                       l3253 15C4                         l3165 15F4                         l3229 16CC  
                       l3237 16C2                         l3341 134E                         l3333 1336  
                       l3325 12DE                         l3093 108C                         l3085 105A  
                       l3077 1034                         l3069 1012                         l3149 1244  
                       l3181 0E7C                         l3173 0E40                         l3245 142A  
                       l3421 10FE                         l3413 10E8                         l3255 15CA  
                       l3263 165E                         l3343 1350                         l3335 1338  
                       l3327 1304                         l3351 1688                         l3239 169C  
                       l3271 13F2                         l3095 1094                         l3087 1062  
                       l3079 1038                         l3159 1552                         l3191 0F06  
                       l3183 0E9C                         l3175 0E4E                         l3167 0E0A  
                       l3247 1438                         l3431 111A                         l3423 1106  
                       l3415 10EE                         l3407 10C4                         l3361 1614  
                       l3257 15CC                         l3345 135A                         l3337 1342  
                       l3329 1308                         l3353 1692                         l3265 13C4  
                       l3097 1096                         l3089 1070                         l3193 0F22  
                       l3185 0EB4                         l3177 0E52                         l3169 0E12  
                       l3249 1452                         l3281 153E                         l3273 150E  
                       l3441 113A                         l3433 1122                         l3425 110E  
                       l3417 10F2                         l3409 10DC                         l3371 1630  
                       l3363 1616                         l3259 15CE                         l3291 158A  
                       l3339 1344                         l3355 1694                         l3347 167C  
                       l3267 13C8                         l3099 109C                         l3195 0F26  
                       l3187 0EBE                         l3179 0E5C                         l3283 1548  
                       l3275 1516                         l3451 114A                         l3443 113E  
                       l3435 112A                         l3427 1112                         l3419 10F6  
                       l3365 1628                         l3293 1594                         l3357 1696  
                       l3349 1686                         l3269 13EE                         l3197 0F38  
                       l3189 0ED6                         l3277 151E                         l3381 138E  
                       l3373 135E                         l3453 114C                         l3445 1142  
                       l3437 1132                         l3429 1116                         l3367 162A  
                       l3359 160C                         l3287 147C                         l3295 15A4  
                       l3199 0F48                         l3279 1526                         l3383 1392  
                       l3455 1154                         l3447 1144                         l3439 1136  
                       l3369 162E                         l3297 15AE                         l3289 1586  
                       l3385 13A8                         l3449 1146                         l3379 136A  
                       STR_1 0E01                         STR_2 0E06                         STR_3 0E06  
                       STR_4 0E03                         u2000 1212                         u2001 120E  
                       u2010 1234                         u2011 1230                         u2020 1244  
                       u2100 0E9C                         u2021 1240                         u2101 0E98  
                       u2030 126A                         u2110 0ED2                         u2031 1266  
                       u2111 0ECC                         u2200 13EA                         u2040 129C  
                       u2120 0ED4                         u2041 1298                         u2210 1414  
                       u2050 1560                         u2130 0F38                         u2051 155C  
                       u2131 0F34                         u2060 15F4                         u2220 1424  
                       u2140 0F48                         u2061 15F0                         u2221 1420  
                       u2141 0F44                         u2070 160A                         u2150 0F58  
                       u2230 13A8                         u2071 1606                         u2207 13E0  
                       u2151 0F54                         u2231 13A4                         u2160 0F68  
                       u2080 0E38                 _BAUD4CONbits 0EE9                         u2217 140A  
                       u2161 0F64                         u2081 0E34                         u2170 0FAC  
                       u2090 0E7C                         u2171 0FA8                         u2091 0E78  
                       u2180 16AC                         u2181 16A8                         u2190 1472  
                       u2191 146E                         _T2PR 0FBC                         u2267 10CE  
                       u1900 102C                         u1901 1028                         u2277 115E  
                       u1910 1052                         u2287 159A                         u1911 104E  
                       u1920 1070                         u1921 106C                         u1930 108C  
                       u1931 1088                         u1940 10B2                         u1941 10AE  
                       u1950 1186                         u1951 1182                         u1960 11A0  
                       u1961 119C                         u1890 1012                         u1970 11BA  
                       u1891 100E                         u1971 11B6                         u1980 11D8  
                       u1981 11D4                         u1990 11EE                         u1991 11EA  
                       abs@a 0008                         _dbuf 0060                         _main 10C4  
                       _prec 00C0                         _nout 00BC                         fsr0h 0FEA  
                       fsr1h 0FE2                         indf0 0FEF                         fsr2h 0FDA  
                       fsr0l 0FE9                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 004D                         start 0046  
               ___param_bank 0000                        ??_ISR 0001                        ??_abs 000A  
                      ?_main 0001              __end_of___awdiv 10C4              __end_of___awmod 1224  
            ___awdiv@divisor 0004                        i2l562 0042              ___awdiv@counter 0006  
               vfpfcnvrt@cnt 0011                 vfpfcnvrt@fmt 000D                        _TMR0H 0FD4  
                      _TMR0L 0FD3      __end_of_sendCharSerial4 16B2            sendArraySerial4@i 0048  
 __end_of_I2C_2_Master_Start 16D2   __end_of_I2C_2_Master_Write 16BE                  _turningGear 00D6  
                      _flags 00C2                        _fputc 1224                        _width 00BE  
                      _putch 16D2            _turnRight135Delay 00CD                        tablat 0FF5  
            _turnLeft90Delay 00D3                        ttemp5 004E                        ttemp6 0051  
                      ttemp7 0055                        status 0FD8                        wtemp8 004E  
            __end_of_sprintf 1552              __initialization 14CA                 __end_of_main 1174  
                     ??_main 004A                __activetblptr 0003                       ?_fputc 0002  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0002                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2813 001A                       i2l2815 003E  
                     i2l2807 000A                       _RG6PPS 0E88                vfpfcnvrt@done 0010  
   __end_of_color_click_init 15BA                       _RX4PPS 0E15                       _TX4REG 0EE4  
           _sendArraySerial4 135E             _turnLeft135Delay 00CF                ??_Timer0_init 0002  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 001C                    ??___awdiv 0006  
                  ??___awmod 0006                       clear_0 14F0                       clear_1 14FC  
           ___awdiv@quotient 0008              ___awmod@divisor 0004                       isa$std 0001  
            ___awmod@counter 0006                       fputc@c 0002                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           ?_sendCharSerial4 0001                       putch@c 0001             __end_of_vfprintf 147C  
          ??_initDCmotorsPWM 0004                    ??_sprintf 0021            _buggy_lights_init 147C  
                 __accesstop 0060      __end_of__initialization 1504           ?_buggy_lights_init 0001  
              ___rparam_used 0001               __pcstackCOMRAM 0001                 __pidataBANK0 1634  
        ??_buggy_lights_init 0002                __end_of_fputc 12CE                __end_of_putch 16D4  
        __end_of_Timer0_init 1634                      ??_fputc 0005    __end_of_buggy_lights_init 14CA  
                    ??_putch 0002                   __pbssBANK0 0060                   __pbssBANK1 0100  
          _color_writetoaddr 165C                 _T2CLKCONbits 0FBF           ?_color_writetoaddr 0004  
        ??_color_writetoaddr 0005                      _SP4BRGH 0EE6                      _SP4BRGL 0EE5  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 0004  
  __end_of_color_writetoaddr 167C           _I2C_2_Master_Start 16C8                   _initUSART4 167C  
         _I2C_2_Master_Write 16B2                      __Hparam 0000                      __Lparam 0000  
        sendArraySerial4@arr 0030                  _Timer0_init 160C      sendStringSerial4@string 0003  
                    ___awdiv 1000                      ___awmod 1174          ?_I2C_2_Master_Start 0001  
    sendArraySerial4@tempStr 0032          ?_I2C_2_Master_Write 0001                    ?_vfprintf 0019  
               __psmallconst 0E00                      __pcinit 14CA                      __ramtop 0E00  
                    __ptext0 10C4                      __ptext1 135E                      __ptext2 150E  
                    __ptext3 1426                      __ptext4 0E0A                      __ptext5 1224  
                    __ptext6 16D2                      __ptext7 1552                      __ptext8 1174  
                    __ptext9 1000                    _T2CONbits 0FBD             ___awmod@dividend 0002  
   __end_of_sendArraySerial4 13C4                    _T2HLTbits 0FBE                _RxBufWriteCnt 00C6  
                    _sprintf 150E         ??_I2C_2_Master_Start 0003         ??_I2C_2_Master_Write 0003  
       end_of_initialization 1504                      fputc@fp 0004            ?_color_click_init 0001  
         ??_color_click_init 0006            __end_of_vfpfcnvrt 1000                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0014                   ??_vfprintf 001C  
            _initDCmotorsPWM 12CE                    _TRISAbits 0F81                    _TRISCbits 0F83  
                  _TRISDbits 0F84                    _TRISEbits 0F85                    _TRISFbits 0F86  
                  _TRISGbits 0F87                    _TRISHbits 0F88     color_writetoaddr@address 0005  
                _CCP1CONbits 0FAB                 _EUSART4RXbuf 00A8                 _EUSART4TXbuf 0100  
                _CCP2CONbits 0FA7                  _CCP3CONbits 0F26                  ?_initUSART4 0001  
                _CCP4CONbits 0F22    sendCharSerial4@charToSend 0002                   main@motorL 00EE  
                 main@motorR 00F7                  vfpfcnvrt@ap 000E                  vfpfcnvrt@cp 0013  
                vfpfcnvrt@fp 000C          start_initialization 14CA                  __end_of_ISR 0046  
                __end_of_abs 1586                _TxBufWriteCnt 004C             _turnRight90Delay 00D1  
      sendArraySerial4@index 0047      __end_of_initDCmotorsPWM 135E                  vfprintf@fmt 001A  
                __pdataBANK0 00C7                  __pbssCOMRAM 004C                __pcstackBANK0 00EE  
                  _backtrack 00C3                 ?_Timer0_init 0001                    __pintcode 0008  
                   ?___awdiv 0002                     ?___awmod 0002                  __smallconst 0E00  
          _I2C_2_Master_Idle 15E4            _I2C_2_Master_Init 15BA            _I2C_2_Master_Stop 16BE  
          ?_sendArraySerial4 0030                 _RxBufReadCnt 00C5           ?_I2C_2_Master_Idle 0001  
         ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001                _headbuttDelay 00C9  
   initDCmotorsPWM@PWMperiod 0002           ??_sendArraySerial4 0031                     ?_sprintf 001D  
                  _rampDelay 00D9            _sendStringSerial4 13C4          ??_I2C_2_Master_Idle 0002  
        ??_I2C_2_Master_Init 0002                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0003  
                   _LATCbits 0F7B                     _LATDbits 0F7C                     _LATEbits 0F7D  
                   _LATFbits 0F7E                     _LATGbits 0F7F                     _LATHbits 0F80  
                   _PIE0bits 0E29           ?_sendStringSerial4 0003                     _PIE4bits 0E2D  
                   i2u147_40 001A                     i2u147_41 0016                     i2u148_40 002C  
                   i2u148_41 0024                     i2u149_48 002E                     _PIR0bits 0E33  
                   _PIR4bits 0E37             ?_initDCmotorsPWM 0002            ??_sendCharSerial4 0002  
                   _SSP2CON2 0EDA          ??_sendStringSerial4 0005                     _SSP2STAT 0ED8  
                  _vfpfcnvrt 0E0A    __end_of_I2C_2_Master_Idle 160C    __end_of_I2C_2_Master_Init 15E4  
  __end_of_I2C_2_Master_Stop 16C8  I2C_2_Master_Write@data_byte 0003                 _TxBufReadCnt 00C4  
                 vfpfcnvrt@c 0018                    copy_data0 14DE    __end_of_sendStringSerial4 1426  
               ??_initUSART4 0002                     __Hrparam 0000                   vfprintf@ap 001B  
                   __Lrparam 0000                   vfprintf@fp 0019                   ?_vfpfcnvrt 000C  
                 _ANSELDbits 0EA7                   _ANSELFbits 0EB4                   sprintf@fmt 001E  
                 sprintf@ret 0021                   _T0CON0bits 0FD5                   _T0CON1bits 0FD6  
         __end_of_initUSART4 169A                     __ptext10 13C4                     __ptext11 169A  
                   __ptext20 15BA                     __ptext12 167C                     __ptext21 147C  
                   __ptext13 12CE                     __ptext22 160C                     __ptext14 1586  
                   __ptext15 165C                     __ptext16 16B2                     __ptext17 16BE  
                   __ptext18 16C8                     __ptext19 15E4                 _SSP2CON1bits 0ED9  
               _SSP2CON2bits 0EDA                     isa$xinst 0000                   _RC4STAbits 0EE7  
                   int$flags 004D                     _vfprintf 1426                   _INTCONbits 0FF2  
                   intlevel2 0000                    sprintf@ap 0023                 _topGearRight 00D7  
          _manoeuvre_pointer 00D5                  ??_vfpfcnvrt 000F             _color_click_init 1586  
                _topGearLeft 00D8                     sprintf@f 0024                     sprintf@s 001D  
                 _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C              _trail_manoeuvre 00DA  
                 _TX4STAbits 0EE8              _sendCharSerial4 169A  
