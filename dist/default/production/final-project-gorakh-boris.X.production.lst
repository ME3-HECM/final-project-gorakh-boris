

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 11:33:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 18/08/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F67K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   0017DA                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _topGearLeft
    89   0017DA  14                 	db	20
    90                           
    91                           ;initializer for _rampDelay
    92   0017DB  08                 	db	8
    93                           
    94                           	psect	idataBANK0
    95   001610                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _manoeuvre_pointer
    99   001610  E0                 	db	low _trail_manoeuvre
   100   001611  01                 	db	high _trail_manoeuvre
   101                           
   102                           ;initializer for _squareDelay
   103   001612  012C               	dw	300
   104                           
   105                           ;initializer for _headbuttDelay
   106   001614  0046               	dw	70
   107                           
   108                           ;initializer for _turn180Delay
   109   001616  01FE               	dw	510
   110                           
   111                           ;initializer for _turnRight135Delay
   112   001618  012C               	dw	300
   113                           
   114                           ;initializer for _turnLeft135Delay
   115   00161A  012C               	dw	300
   116                           
   117                           ;initializer for _turnRight90Delay
   118   00161C  00AF               	dw	175
   119                           
   120                           ;initializer for _turnLeft90Delay
   121   00161E  00AF               	dw	175
   122                           
   123                           ;initializer for _timer_low_pointer
   124   001620  74                 	db	low _trail_timer_low
   125                           
   126                           ;initializer for _timer_high_pointer
   127   001621  88                 	db	low _trail_timer_high
   128                           
   129                           ;initializer for _turningGear
   130   001622  2A                 	db	42
   131                           
   132                           ;initializer for _topGearRight
   133   001623  14                 	db	20
   134                           
   135                           ;initializer for _trail_timer_low
   136   001624  01                 	db	1
   137   001625  02                 	db	2
   138   001626  03                 	db	3
   139   001627  04                 	db	4
   140   001628  05                 	db	5
   141   001629  06                 	db	6
   142   00162A  07                 	db	7
   143   00162B  08                 	db	8
   144   00162C  09                 	db	9
   145   00162D  00                 	db	0
   146   00162E  01                 	db	1
   147   00162F  02                 	db	2
   148   001630  03                 	db	3
   149   001631  04                 	db	4
   150   001632  05                 	db	5
   151   001633  06                 	db	6
   152   001634  07                 	db	7
   153   001635  08                 	db	8
   154   001636  09                 	db	9
   155   001637  00                 	db	0
   156                           
   157                           ;initializer for _trail_timer_high
   158   001638  01                 	db	1
   159   001639  02                 	db	2
   160   00163A  03                 	db	3
   161   00163B  04                 	db	4
   162   00163C  05                 	db	5
   163   00163D  06                 	db	6
   164   00163E  07                 	db	7
   165   00163F  08                 	db	8
   166   001640  09                 	db	9
   167   001641  00                 	db	0
   168   001642  01                 	db	1
   169   001643  02                 	db	2
   170   001644  03                 	db	3
   171   001645  04                 	db	4
   172   001646  05                 	db	5
   173   001647  06                 	db	6
   174   001648  07                 	db	7
   175   001649  08                 	db	8
   176   00164A  09                 	db	9
   177   00164B  00                 	db	0
   178                           
   179                           	psect	idataBANK1
   180   0017A6                     __pidataBANK1:
   181                           	callstack 0
   182                           
   183                           ;initializer for _trail_manoeuvre
   184   0017A6  65                 	db	101
   185   0017A7  66                 	db	102
   186   0017A8  67                 	db	103
   187   0017A9  68                 	db	104
   188   0017AA  69                 	db	105
   189   0017AB  6A                 	db	106
   190   0017AC  6B                 	db	107
   191   0017AD  6C                 	db	108
   192   0017AE  6D                 	db	109
   193   0017AF  64                 	db	100
   194   0017B0  65                 	db	101
   195   0017B1  66                 	db	102
   196   0017B2  67                 	db	103
   197   0017B3  68                 	db	104
   198   0017B4  69                 	db	105
   199   0017B5  6A                 	db	106
   200   0017B6  6B                 	db	107
   201   0017B7  6C                 	db	108
   202   0017B8  6D                 	db	109
   203   0017B9  64                 	db	100
   204   000000                     _T0CON0bits	set	4053
   205   000000                     _T0CON1bits	set	4054
   206   000000                     _TX4REG	set	3812
   207   000000                     _RC4STAbits	set	3815
   208   000000                     _SP4BRGH	set	3814
   209   000000                     _TMR0H	set	4052
   210   000000                     _LATEbits	set	3965
   211   000000                     _TRISEbits	set	3973
   212   000000                     _LATGbits	set	3967
   213   000000                     _TRISGbits	set	3975
   214   000000                     _LATFbits	set	3966
   215   000000                     _LATHbits	set	3968
   216   000000                     _TRISFbits	set	3974
   217   000000                     _TRISHbits	set	3976
   218   000000                     _SSP2CON2bits	set	3802
   219   000000                     _RX4PPS	set	3605
   220   000000                     _SSP2CLKPPS	set	3612
   221   000000                     _SSP2DATPPS	set	3613
   222   000000                     _RC7PPS	set	3689
   223   000000                     _RE2PPS	set	3700
   224   000000                     _LATAbits	set	3961
   225   000000                     _LATDbits	set	3964
   226   000000                     _TRISDbits	set	3972
   227   000000                     _PORTFbits	set	3982
   228   000000                     _T2PR	set	4028
   229   000000                     _T2CONbits	set	4029
   230   000000                     _CCPR2H	set	4006
   231   000000                     _CCPR1H	set	4010
   232   000000                     _TRISCbits	set	3971
   233   000000                     _TRISAbits	set	3969
   234   000000                     _LATCbits	set	3963
   235   000000                     _RE4PPS	set	3702
   236   000000                     _RG6PPS	set	3720
   237   000000                     _RD5PPS	set	3695
   238   000000                     _ANSELDbits	set	3751
   239   000000                     _SSP2ADD	set	3798
   240   000000                     _SSP2CON1bits	set	3801
   241   000000                     _CCPR4H	set	3873
   242   000000                     _CCPR3H	set	3877
   243   000000                     _TMR0L	set	4051
   244   000000                     _T2CLKCONbits	set	4031
   245   000000                     _T2HLTbits	set	4030
   246   000000                     _CCP1CONbits	set	4011
   247   000000                     _CCPTMRS0bits	set	4013
   248   000000                     _CCP2CONbits	set	4007
   249   000000                     _CCP3CONbits	set	3878
   250   000000                     _CCP4CONbits	set	3874
   251   000000                     _RC4REG	set	3811
   252   000000                     _SP4BRGL	set	3813
   253   000000                     _TX4STAbits	set	3816
   254   000000                     _BAUD4CONbits	set	3817
   255   000000                     _SSP2CON2	set	3802
   256   000000                     _SSP2STAT	set	3800
   257   000000                     _ANSELFbits	set	3764
   258   000000                     _SSP2BUF	set	3797
   259   000000                     _PIE0bits	set	3625
   260   000000                     _PIE4bits	set	3629
   261   000000                     _PIR4bits	set	3639
   262   000000                     _RC0PPS	set	3682
   263   000000                     _RD6PPS	set	3696
   264   000000                     _PIR0bits	set	3635
   265   000000                     _INTCONbits	set	4082
   266                           
   267                           	psect	smallconst
   268   000E00                     __psmallconst:
   269                           	callstack 0
   270   000E00  00                 	db	0
   271   000E01                     STR_1:
   272                           
   273                           ; BSR set to: 14
   274   000E01  25                 	db	37
   275   000E02  64                 	db	100	;'d'
   276   000E03  20                 	db	32
   277   000E04  0D                 	db	13
   278   000E05  00                 	db	0
   279   000E06                     STR_2:
   280                           
   281                           ; BSR set to: 14
   282   000E06  25                 	db	37
   283   000E07  64                 	db	100	;'d'
   284   000E08  00                 	db	0
   285   000E09  00                 	db	0	; dummy byte at the end
   286   000000                     
   287                           ; #config settings
   288                           
   289                           	psect	cinit
   290   0013C4                     __pcinit:
   291                           	callstack 0
   292   0013C4                     start_initialization:
   293                           	callstack 0
   294   0013C4                     __initialization:
   295                           	callstack 0
   296                           
   297                           ; Initialize objects allocated to BANK1 (20 bytes)
   298                           ; load TBLPTR registers with __pidataBANK1
   299   0013C4  0EA6               	movlw	low __pidataBANK1
   300   0013C6  6EF6               	movwf	tblptrl,c
   301   0013C8  0E17               	movlw	high __pidataBANK1
   302   0013CA  6EF7               	movwf	tblptrh,c
   303   0013CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   304   0013CE  6EF8               	movwf	tblptru,c
   305   0013D0  EE01  F0E0         	lfsr	0,__pdataBANK1
   306   0013D4  EE10 F014          	lfsr	1,20
   307   0013D8                     copy_data0:
   308   0013D8  0009               	tblrd		*+
   309   0013DA  CFF5 FFEE          	movff	tablat,postinc0
   310   0013DE  50E5               	movf	postdec1,w,c
   311   0013E0  50E1               	movf	fsr1l,w,c
   312   0013E2  E1FA               	bnz	copy_data0
   313                           
   314                           ; Initialize objects allocated to BANK0 (60 bytes)
   315                           ; load TBLPTR registers with __pidataBANK0
   316   0013E4  0E10               	movlw	low __pidataBANK0
   317   0013E6  6EF6               	movwf	tblptrl,c
   318   0013E8  0E16               	movlw	high __pidataBANK0
   319   0013EA  6EF7               	movwf	tblptrh,c
   320   0013EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   321   0013EE  6EF8               	movwf	tblptru,c
   322   0013F0  EE00  F060         	lfsr	0,__pdataBANK0
   323   0013F4  EE10 F03C          	lfsr	1,60
   324   0013F8                     copy_data1:
   325   0013F8  0009               	tblrd		*+
   326   0013FA  CFF5 FFEE          	movff	tablat,postinc0
   327   0013FE  50E5               	movf	postdec1,w,c
   328   001400  50E1               	movf	fsr1l,w,c
   329   001402  E1FA               	bnz	copy_data1
   330                           
   331                           ; Initialize objects allocated to COMRAM (2 bytes)
   332                           ; load TBLPTR registers with __pidataCOMRAM
   333   001404  0EDA               	movlw	low __pidataCOMRAM
   334   001406  6EF6               	movwf	tblptrl,c
   335   001408  0E17               	movlw	high __pidataCOMRAM
   336   00140A  6EF7               	movwf	tblptrh,c
   337   00140C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   338   00140E  6EF8               	movwf	tblptru,c
   339   001410  0009               	tblrd		*+	;fetch initializer
   340   001412  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   341   001416  0009               	tblrd		*+	;fetch initializer
   342   001418  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   343                           
   344                           ; Clear objects allocated to BANK1 (60 bytes)
   345   00141C  EE01  F0A4         	lfsr	0,__pbssBANK1
   346   001420  0E3C               	movlw	60
   347   001422                     clear_0:
   348   001422  6AEE               	clrf	postinc0,c
   349   001424  06E8               	decf	wreg,f,c
   350   001426  E1FD               	bnz	clear_0
   351                           
   352                           ; Clear objects allocated to BANK0 (59 bytes)
   353   001428  EE00  F09C         	lfsr	0,__pbssBANK0
   354   00142C  0E3B               	movlw	59
   355   00142E                     clear_1:
   356   00142E  6AEE               	clrf	postinc0,c
   357   001430  06E8               	decf	wreg,f,c
   358   001432  E1FD               	bnz	clear_1
   359                           
   360                           ; Clear objects allocated to COMRAM (5 bytes)
   361   001434  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   362   001436  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   363   001438  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   364   00143A  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   365   00143C  6A57               	clrf	__pbssCOMRAM& (0+255),c
   366   00143E                     end_of_initialization:
   367                           	callstack 0
   368   00143E                     __end_of__initialization:
   369                           	callstack 0
   370   00143E  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   371   001440  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   372   001442  0100               	movlb	0
   373   001444  EF00  F008         	goto	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMRAM
   376   000057                     __pbssCOMRAM:
   377                           	callstack 0
   378   000057                     _backtrack:
   379                           	callstack 0
   380   000057                     	ds	1
   381   000058                     _TxBufReadCnt:
   382                           	callstack 0
   383   000058                     	ds	1
   384   000059                     _TxBufWriteCnt:
   385                           	callstack 0
   386   000059                     	ds	1
   387   00005A                     _RxBufReadCnt:
   388                           	callstack 0
   389   00005A                     	ds	1
   390   00005B                     _RxBufWriteCnt:
   391                           	callstack 0
   392   00005B                     	ds	1
   393                           
   394                           	psect	dataCOMRAM
   395   00005C                     __pdataCOMRAM:
   396                           	callstack 0
   397   00005C                     _topGearLeft:
   398                           	callstack 0
   399   00005C                     	ds	1
   400   00005D                     _rampDelay:
   401                           	callstack 0
   402   00005D                     	ds	1
   403                           
   404                           	psect	bssBANK0
   405   00009C                     __pbssBANK0:
   406                           	callstack 0
   407   00009C                     _dbuf:
   408                           	callstack 0
   409   00009C                     	ds	32
   410   0000BC                     _EUSART4RXbuf:
   411                           	callstack 0
   412   0000BC                     	ds	20
   413   0000D0                     _nout:
   414                           	callstack 0
   415   0000D0                     	ds	2
   416   0000D2                     _width:
   417                           	callstack 0
   418   0000D2                     	ds	2
   419   0000D4                     _prec:
   420                           	callstack 0
   421   0000D4                     	ds	2
   422   0000D6                     _flags:
   423                           	callstack 0
   424   0000D6                     	ds	1
   425                           
   426                           	psect	dataBANK0
   427   000060                     __pdataBANK0:
   428                           	callstack 0
   429   000060                     _manoeuvre_pointer:
   430                           	callstack 0
   431   000060                     	ds	2
   432   000062                     _squareDelay:
   433                           	callstack 0
   434   000062                     	ds	2
   435   000064                     _headbuttDelay:
   436                           	callstack 0
   437   000064                     	ds	2
   438   000066                     _turn180Delay:
   439                           	callstack 0
   440   000066                     	ds	2
   441   000068                     _turnRight135Delay:
   442                           	callstack 0
   443   000068                     	ds	2
   444   00006A                     _turnLeft135Delay:
   445                           	callstack 0
   446   00006A                     	ds	2
   447   00006C                     _turnRight90Delay:
   448                           	callstack 0
   449   00006C                     	ds	2
   450   00006E                     _turnLeft90Delay:
   451                           	callstack 0
   452   00006E                     	ds	2
   453   000070                     _timer_low_pointer:
   454                           	callstack 0
   455   000070                     	ds	1
   456   000071                     _timer_high_pointer:
   457                           	callstack 0
   458   000071                     	ds	1
   459   000072                     _turningGear:
   460                           	callstack 0
   461   000072                     	ds	1
   462   000073                     _topGearRight:
   463                           	callstack 0
   464   000073                     	ds	1
   465   000074                     _trail_timer_low:
   466                           	callstack 0
   467   000074                     	ds	20
   468   000088                     _trail_timer_high:
   469                           	callstack 0
   470   000088                     	ds	20
   471                           
   472                           	psect	bssBANK1
   473   0001A4                     __pbssBANK1:
   474                           	callstack 0
   475   0001A4                     _EUSART4TXbuf:
   476                           	callstack 0
   477   0001A4                     	ds	60
   478                           
   479                           	psect	dataBANK1
   480   0001E0                     __pdataBANK1:
   481                           	callstack 0
   482   0001E0                     _trail_manoeuvre:
   483                           	callstack 0
   484   0001E0                     	ds	20
   485                           
   486                           	psect	cstackBANK1
   487   000100                     __pcstackBANK1:
   488                           	callstack 0
   489   000100                     sendArrayCharSerial4@tempStr:
   490                           	callstack 0
   491                           
   492                           ; 161 bytes @ 0x0
   493   000100                     	ds	161
   494   0001A1                     sendArrayCharSerial4@index:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xA1
   498   0001A1                     	ds	1
   499   0001A2                     sendArrayCharSerial4@i:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xA2
   503   0001A2                     	ds	2
   504                           
   505                           	psect	cstackCOMRAM
   506   000001                     __pcstackCOMRAM:
   507                           	callstack 0
   508   000001                     ??_I2C_2_Master_Idle:
   509   000001                     ?___awdiv:
   510                           	callstack 0
   511   000001                     ?___awmod:
   512                           	callstack 0
   513   000001                     sendCharSerial4@charToSend:
   514                           	callstack 0
   515   000001                     initDCmotorsPWM@PWMperiod:
   516                           	callstack 0
   517   000001                     ___awdiv@dividend:
   518                           	callstack 0
   519   000001                     ___awmod@dividend:
   520                           	callstack 0
   521   000001                     fputc@c:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x0
   525   000001                     	ds	1
   526   000002                     I2C_2_Master_Write@data_byte:
   527                           	callstack 0
   528   000002                     sendStringSerial4@string:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x1
   532   000002                     	ds	1
   533   000003                     color_writetoaddr@value:
   534                           	callstack 0
   535   000003                     fputc@fp:
   536                           	callstack 0
   537   000003                     ___awdiv@divisor:
   538                           	callstack 0
   539   000003                     ___awmod@divisor:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x2
   543   000003                     	ds	1
   544   000004                     ??_fputc:
   545   000004                     color_writetoaddr@address:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x3
   549   000004                     	ds	1
   550   000005                     ??_color_click_init:
   551   000005                     ___awdiv@counter:
   552                           	callstack 0
   553   000005                     ___awmod@counter:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x4
   557   000005                     	ds	1
   558   000006                     ___awdiv@sign:
   559                           	callstack 0
   560   000006                     ___awmod@sign:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x5
   564   000006                     	ds	1
   565   000007                     ?_abs:
   566                           	callstack 0
   567   000007                     ___awdiv@quotient:
   568                           	callstack 0
   569   000007                     abs@a:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573   000007                     	ds	2
   574   000009                     ??_abs:
   575                           
   576                           ; 1 bytes @ 0x8
   577   000009                     	ds	2
   578   00000B                     ?_vfpfcnvrt:
   579                           	callstack 0
   580   00000B                     vfpfcnvrt@fp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0xA
   584   00000B                     	ds	1
   585   00000C                     vfpfcnvrt@fmt:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xB
   589   00000C                     	ds	1
   590   00000D                     vfpfcnvrt@ap:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xC
   594   00000D                     	ds	1
   595   00000E                     ??_vfpfcnvrt:
   596                           
   597                           ; 1 bytes @ 0xD
   598   00000E                     	ds	1
   599   00000F                     vfpfcnvrt@done:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xE
   603   00000F                     	ds	1
   604   000010                     vfpfcnvrt@cnt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0xF
   608   000010                     	ds	2
   609   000012                     vfpfcnvrt@cp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x11
   613   000012                     	ds	1
   614   000013                     vfpfcnvrt@convarg:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x12
   618   000013                     	ds	4
   619   000017                     vfpfcnvrt@c:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x16
   623   000017                     	ds	1
   624   000018                     ?_vfprintf:
   625                           	callstack 0
   626   000018                     vfprintf@fp:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x17
   630   000018                     	ds	1
   631   000019                     vfprintf@fmt:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x18
   635   000019                     	ds	1
   636   00001A                     vfprintf@ap:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x19
   640   00001A                     	ds	1
   641   00001B                     vfprintf@cfmt:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x1A
   645   00001B                     	ds	1
   646   00001C                     ?_sprintf:
   647                           	callstack 0
   648   00001C                     sprintf@s:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x1B
   652   00001C                     	ds	2
   653   00001E                     sprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x1D
   657   00001E                     	ds	3
   658   000021                     sprintf@ret:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x20
   662   000021                     	ds	2
   663   000023                     sprintf@ap:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x22
   667   000023                     	ds	1
   668   000024                     sprintf@f:
   669                           	callstack 0
   670                           
   671                           ; 12 bytes @ 0x23
   672   000024                     	ds	12
   673   000030                     sendIntSerial4@integer:
   674                           	callstack 0
   675   000030                     sendArrayCharSerial4@arr:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x2F
   679   000030                     	ds	2
   680   000032                     ??_sendArrayCharSerial4:
   681   000032                     sendIntSerial4@string:
   682                           	callstack 0
   683                           
   684                           ; 17 bytes @ 0x31
   685   000032                     	ds	17
   686   000043                     ??_main:
   687                           
   688                           ; 1 bytes @ 0x42
   689   000043                     	ds	2
   690   000045                     main@motorL:
   691                           	callstack 0
   692                           
   693                           ; 9 bytes @ 0x44
   694   000045                     	ds	9
   695   00004E                     main@motorR:
   696                           	callstack 0
   697                           
   698                           ; 9 bytes @ 0x4D
   699   00004E                     	ds	9
   700                           
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 26 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  motorR          9   77[COMRAM] struct DC_motor
   711 ;;  motorL          9   68[COMRAM] struct DC_motor
   712 ;;  PWMcycle        2    0        unsigned int 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   723 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   725 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   726 ;;Total ram usage:       20 bytes
   727 ;; Hardware stack levels required when called: 7
   728 ;; This function calls:
   729 ;;		_Timer0_init
   730 ;;		_buggy_lights_init
   731 ;;		_color_click_init
   732 ;;		_initDCmotorsPWM
   733 ;;		_initUSART4
   734 ;;		_sendArrayCharSerial4
   735 ;;		_sendIntSerial4
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text0
   742   001000                     __ptext0:
   743                           	callstack 0
   744   001000                     _main:
   745                           	callstack 24
   746   001000                     
   747                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   748   001000  0E52               	movlw	82
   749   001002  6E44               	movwf	(??_main+1)^0,c
   750   001004  0E2B               	movlw	43
   751   001006  6E43               	movwf	??_main^0,c
   752   001008  0E00               	movlw	0
   753   00100A                     u2277:
   754   00100A  2EE8               	decfsz	wreg,f,c
   755   00100C  D7FE               	bra	u2277
   756   00100E  2E43               	decfsz	??_main^0,f,c
   757   001010  D7FC               	bra	u2277
   758   001012  2E44               	decfsz	(??_main+1)^0,f,c
   759   001014  D7FA               	bra	u2277
   760   001016  D000               	nop2	
   761   001018                     
   762                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   763   001018  0E00               	movlw	0
   764   00101A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   765   00101C  0E63               	movlw	99
   766   00101E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   767   001020  EC9A  F009         	call	_initDCmotorsPWM	;wreg free
   768   001024                     
   769                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   770   001024  0E00               	movlw	0
   771   001026  6E45               	movwf	main@motorL^0,c
   772   001028                     
   773                           ;main.c: 35:     motorL.direction = 1;
   774   001028  0E01               	movlw	1
   775   00102A  6E46               	movwf	(main@motorL+1)^0,c
   776   00102C                     
   777                           ;main.c: 36:     motorL.brakemode = 1;
   778   00102C  0E01               	movlw	1
   779   00102E  6E47               	movwf	(main@motorL+2)^0,c
   780   001030                     
   781                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   782   001030  0E00               	movlw	0
   783   001032  6E49               	movwf	(main@motorL+4)^0,c
   784   001034  0E63               	movlw	99
   785   001036  6E48               	movwf	(main@motorL+3)^0,c
   786   001038                     
   787                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   788   001038  0EAA               	movlw	170
   789   00103A  6E4A               	movwf	(main@motorL+5)^0,c
   790   00103C  0E0F               	movlw	15
   791   00103E  6E4B               	movwf	(main@motorL+6)^0,c
   792   001040                     
   793                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   794   001040  0EA6               	movlw	166
   795   001042  6E4C               	movwf	(main@motorL+7)^0,c
   796   001044  0E0F               	movlw	15
   797   001046  6E4D               	movwf	(main@motorL+8)^0,c
   798   001048                     
   799                           ;main.c: 41:     motorR.power = 0;
   800   001048  0E00               	movlw	0
   801   00104A  6E4E               	movwf	main@motorR^0,c
   802   00104C                     
   803                           ;main.c: 42:     motorR.direction = 1;
   804   00104C  0E01               	movlw	1
   805   00104E  6E4F               	movwf	(main@motorR+1)^0,c
   806   001050                     
   807                           ;main.c: 43:     motorR.brakemode = 1;
   808   001050  0E01               	movlw	1
   809   001052  6E50               	movwf	(main@motorR+2)^0,c
   810   001054                     
   811                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   812   001054  0E00               	movlw	0
   813   001056  6E52               	movwf	(main@motorR+4)^0,c
   814   001058  0E63               	movlw	99
   815   00105A  6E51               	movwf	(main@motorR+3)^0,c
   816   00105C                     
   817                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   818   00105C  0E25               	movlw	37
   819   00105E  6E53               	movwf	(main@motorR+5)^0,c
   820   001060  0E0F               	movlw	15
   821   001062  6E54               	movwf	(main@motorR+6)^0,c
   822   001064                     
   823                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   824   001064  0E21               	movlw	33
   825   001066  6E55               	movwf	(main@motorR+7)^0,c
   826   001068  0E0F               	movlw	15
   827   00106A  6E56               	movwf	(main@motorR+8)^0,c
   828   00106C                     
   829                           ;main.c: 48:     buggy_lights_init();
   830   00106C  ECBB  F00A         	call	_buggy_lights_init	;wreg free
   831   001070                     
   832                           ;main.c: 49:     color_click_init();
   833   001070  EC40  F00B         	call	_color_click_init	;wreg free
   834   001074                     
   835                           ;main.c: 50:     initUSART4();
   836   001074  ECB8  F00B         	call	_initUSART4	;wreg free
   837   001078                     
   838                           ;main.c: 51:     Timer0_init();
   839   001078  EC83  F00B         	call	_Timer0_init	;wreg free
   840   00107C                     
   841                           ;main.c: 55:         TRISFbits.TRISF2 = 1;
   842   00107C  8486               	bsf	134,2,c	;volatile
   843   00107E                     
   844                           ;main.c: 56:         TRISFbits.TRISF3 = 1;
   845   00107E  8686               	bsf	134,3,c	;volatile
   846   001080                     
   847                           ;main.c: 58:         ANSELFbits.ANSELF2 = 0;
   848   001080  010E               	movlb	14	; () banked
   849   001082  95B4               	bcf	180,2,b	;volatile
   850   001084                     
   851                           ; BSR set to: 14
   852                           ;main.c: 59:         ANSELFbits.ANSELF3 = 0;
   853   001084  97B4               	bcf	180,3,b	;volatile
   854   001086                     l3468:
   855                           
   856                           ;main.c: 72:         sendIntSerial4((int)TMR0L);
   857   001086  CFD3 F030          	movff	4051,sendIntSerial4@integer	;volatile
   858   00108A  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
   859   00108C  EC97  F00B         	call	_sendIntSerial4	;wreg free
   860   001090                     
   861                           ;main.c: 73:         sendIntSerial4((int)TMR0H);
   862   001090  CFD4 F030          	movff	4052,sendIntSerial4@integer	;volatile
   863   001094  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
   864   001096  EC97  F00B         	call	_sendIntSerial4	;wreg free
   865   00109A                     
   866                           ;main.c: 74:         if (!PORTFbits.RF2) {
   867   00109A  B48E               	btfsc	142,2,c	;volatile
   868   00109C  EF52  F008         	goto	u2241
   869   0010A0  EF54  F008         	goto	u2240
   870   0010A4                     u2241:
   871   0010A4  EF6D  F008         	goto	l3480
   872   0010A8                     u2240:
   873   0010A8                     
   874                           ;main.c: 75:             *manoeuvre_pointer = 0;
   875   0010A8  C060  FFD9         	movff	_manoeuvre_pointer,fsr2l
   876   0010AC  C061  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
   877   0010B0  6ADF               	clrf	indf2,c
   878   0010B2                     
   879                           ;main.c: 76:             manoeuvre_pointer ++;
   880   0010B2  0100               	movlb	0	; () banked
   881   0010B4  4B60               	infsnz	_manoeuvre_pointer& (0+255),f,b
   882   0010B6  2B61               	incf	(_manoeuvre_pointer+1)& (0+255),f,b
   883   0010B8                     
   884                           ; BSR set to: 0
   885                           ;main.c: 77:             LATDbits.LATD7 = !LATDbits.LATD7;
   886   0010B8  AE7C               	btfss	124,7,c	;volatile
   887   0010BA  EF61  F008         	goto	u2251
   888   0010BE  EF65  F008         	goto	u2250
   889   0010C2                     u2251:
   890   0010C2  6A43               	clrf	??_main^0,c
   891   0010C4  2A43               	incf	??_main^0,f,c
   892   0010C6  EF66  F008         	goto	u2268
   893   0010CA                     u2250:
   894   0010CA  6A43               	clrf	??_main^0,c
   895   0010CC                     u2268:
   896   0010CC  3243               	rrcf	??_main^0,f,c
   897   0010CE  3243               	rrcf	??_main^0,f,c
   898   0010D0  507C               	movf	124,w,c	;volatile
   899   0010D2  1843               	xorwf	??_main^0,w,c
   900   0010D4  0B7F               	andlw	-129
   901   0010D6  1843               	xorwf	??_main^0,w,c
   902   0010D8  6E7C               	movwf	124,c	;volatile
   903   0010DA                     l3480:
   904                           
   905                           ;main.c: 79:         sendArrayCharSerial4(trail_manoeuvre);
   906   0010DA  0EE0               	movlw	low _trail_manoeuvre
   907   0010DC  6E30               	movwf	sendArrayCharSerial4@arr^0,c
   908   0010DE  0E01               	movlw	high _trail_manoeuvre
   909   0010E0  6E31               	movwf	(sendArrayCharSerial4@arr+1)^0,c
   910   0010E2  EC24  F00A         	call	_sendArrayCharSerial4	;wreg free
   911   0010E6                     
   912                           ;main.c: 80:         _delay((unsigned long)((500)*(64000000/4000.0)));
   913   0010E6  0E29               	movlw	41
   914   0010E8  6E44               	movwf	(??_main+1)^0,c
   915   0010EA  0E96               	movlw	150
   916   0010EC  6E43               	movwf	??_main^0,c
   917   0010EE  0E7F               	movlw	127
   918   0010F0                     u2287:
   919   0010F0  2EE8               	decfsz	wreg,f,c
   920   0010F2  D7FE               	bra	u2287
   921   0010F4  2E43               	decfsz	??_main^0,f,c
   922   0010F6  D7FC               	bra	u2287
   923   0010F8  2E44               	decfsz	(??_main+1)^0,f,c
   924   0010FA  D7FA               	bra	u2287
   925   0010FC  0000               	nop	
   926   0010FE  EF43  F008         	goto	l3468
   927   001102  EF10  F000         	goto	start
   928   001106                     __end_of_main:
   929                           	callstack 0
   930                           
   931 ;; *************** function _sendIntSerial4 *****************
   932 ;; Defined at:
   933 ;;		line 43 in file "serial.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  integer         2   47[COMRAM] int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  string         17   49[COMRAM] unsigned char [17]
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;Total ram usage:       19 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 6
   954 ;; This function calls:
   955 ;;		_sendStringSerial4
   956 ;;		_sprintf
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text1
   963   00172E                     __ptext1:
   964                           	callstack 0
   965   00172E                     _sendIntSerial4:
   966                           	callstack 24
   967   00172E                     
   968                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   969   00172E  0E32               	movlw	low sendIntSerial4@string
   970   001730  6E1C               	movwf	sprintf@s^0,c
   971   001732  6A1D               	clrf	(sprintf@s+1)^0,c
   972   001734  0E01               	movlw	low STR_1
   973   001736  6E1E               	movwf	sprintf@fmt^0,c
   974   001738  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   975   00173C  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   976   001740  ECE2  F00A         	call	_sprintf	;wreg free
   977   001744                     
   978                           ;serial.c: 46:     sendStringSerial4(string);
   979   001744  0E32               	movlw	low sendIntSerial4@string
   980   001746  6E02               	movwf	sendStringSerial4@string^0,c
   981   001748  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   982   00174A  EC5F  F00A         	call	_sendStringSerial4	;wreg free
   983   00174E  0012               	return		;funcret
   984   001750                     __end_of_sendIntSerial4:
   985                           	callstack 0
   986                           
   987 ;; *************** function _sendArrayCharSerial4 *****************
   988 ;; Defined at:
   989 ;;		line 50 in file "serial.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  arr             2   47[COMRAM] PTR unsigned char 
   992 ;;		 -> trail_manoeuvre(20), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  i               2  162[BANK1 ] unsigned int 
   995 ;;  tempStr       161    0[BANK1 ] unsigned char [161]
   996 ;;  index           1  161[BANK1 ] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Locals:         0       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Totals:         3       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;Total ram usage:      167 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 6
  1013 ;; This function calls:
  1014 ;;		_sendStringSerial4
  1015 ;;		_sprintf
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text2
  1022   001448                     __ptext2:
  1023                           	callstack 0
  1024   001448                     _sendArrayCharSerial4:
  1025                           	callstack 24
  1026   001448                     
  1027                           ;serial.c: 51:     unsigned char index = 0;
  1028   001448  0E00               	movlw	0
  1029   00144A  0101               	movlb	1	; () banked
  1030   00144C  6FA1               	movwf	sendArrayCharSerial4@index& (0+255),b
  1031                           
  1032                           ;serial.c: 53:     char tempStr[20 * 8 + 1];;serial.c: 54:     for (unsigned int i = 0; 
      +                          i < 20; i++) {
  1033   00144E  0E00               	movlw	0
  1034   001450  6FA3               	movwf	(sendArrayCharSerial4@i+1)& (0+255),b
  1035   001452  0E00               	movlw	0
  1036   001454  6FA2               	movwf	sendArrayCharSerial4@i& (0+255),b
  1037   001456                     l3394:
  1038                           
  1039                           ; BSR set to: 1
  1040                           ;serial.c: 55:         index += sprintf(&tempStr[index], "%d", arr[i]);
  1041   001456  0E00               	movlw	low sendArrayCharSerial4@tempStr
  1042   001458  25A1               	addwf	sendArrayCharSerial4@index& (0+255),w,b
  1043   00145A  6E1C               	movwf	sprintf@s^0,c
  1044   00145C  6A1D               	clrf	(sprintf@s+1)^0,c
  1045   00145E  0E01               	movlw	high sendArrayCharSerial4@tempStr
  1046   001460  221D               	addwfc	(sprintf@s+1)^0,f,c
  1047   001462  0E06               	movlw	low STR_2
  1048   001464  6E1E               	movwf	sprintf@fmt^0,c
  1049   001466  51A2               	movf	sendArrayCharSerial4@i& (0+255),w,b
  1050   001468  2430               	addwf	sendArrayCharSerial4@arr^0,w,c
  1051   00146A  6ED9               	movwf	fsr2l,c
  1052   00146C  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  1053   00146E  2031               	addwfc	(sendArrayCharSerial4@arr+1)^0,w,c
  1054   001470  6EDA               	movwf	fsr2h,c
  1055   001472  50DF               	movf	indf2,w,c
  1056   001474  6E32               	movwf	??_sendArrayCharSerial4^0,c
  1057   001476  5032               	movf	??_sendArrayCharSerial4^0,w,c
  1058   001478  6E1F               	movwf	(?_sprintf+3)^0,c
  1059   00147A  6A20               	clrf	(?_sprintf+4)^0,c
  1060   00147C  ECE2  F00A         	call	_sprintf	;wreg free
  1061   001480  501C               	movf	?_sprintf^0,w,c
  1062   001482  0101               	movlb	1	; () banked
  1063   001484  27A1               	addwf	sendArrayCharSerial4@index& (0+255),f,b
  1064   001486                     
  1065                           ; BSR set to: 1
  1066                           ;serial.c: 56:     }
  1067   001486  4BA2               	infsnz	sendArrayCharSerial4@i& (0+255),f,b
  1068   001488  2BA3               	incf	(sendArrayCharSerial4@i+1)& (0+255),f,b
  1069   00148A                     
  1070                           ; BSR set to: 1
  1071   00148A  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  1072   00148C  E109               	bnz	u2210
  1073   00148E  0E14               	movlw	20
  1074   001490  5DA2               	subwf	sendArrayCharSerial4@i& (0+255),w,b
  1075   001492  A0D8               	btfss	status,0,c
  1076   001494  EF4E  F00A         	goto	u2211
  1077   001498  EF50  F00A         	goto	u2210
  1078   00149C                     u2211:
  1079   00149C  EF2B  F00A         	goto	l3394
  1080   0014A0                     u2210:
  1081   0014A0                     
  1082                           ; BSR set to: 1
  1083                           ;serial.c: 57:     sendStringSerial4(tempStr);
  1084   0014A0  0E00               	movlw	low sendArrayCharSerial4@tempStr
  1085   0014A2  6E02               	movwf	sendStringSerial4@string^0,c
  1086   0014A4  0E01               	movlw	high sendArrayCharSerial4@tempStr
  1087   0014A6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1088   0014A8  EC5F  F00A         	call	_sendStringSerial4	;wreg free
  1089                           
  1090                           ;serial.c: 58:     sendStringSerial4(" \r");
  1091   0014AC  0E03               	movlw	low (STR_1+2)
  1092   0014AE  6E02               	movwf	sendStringSerial4@string^0,c
  1093   0014B0  5002               	movf	sendStringSerial4@string^0,w,c
  1094   0014B2  A4D8               	btfss	status,2,c
  1095   0014B4  0E0E               	movlw	high __smallconst
  1096   0014B6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1097   0014B8  EC5F  F00A         	call	_sendStringSerial4	;wreg free
  1098   0014BC  0012               	return		;funcret
  1099   0014BE                     __end_of_sendArrayCharSerial4:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _sprintf *****************
  1103 ;; Defined at:
  1104 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  s               2   27[COMRAM] PTR unsigned char 
  1107 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1108 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
  1109 ;;		 -> STR_3(3), STR_1(5), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  f              12   35[COMRAM] struct _IO_FILE
  1112 ;;  ret             2   32[COMRAM] int 
  1113 ;;  ap              1   34[COMRAM] PTR void [1]
  1114 ;;		 -> ?_sprintf(2), 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  2   27[COMRAM] int 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1124 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:       20 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 5
  1131 ;; This function calls:
  1132 ;;		_vfprintf
  1133 ;; This function is called by:
  1134 ;;		_sendIntSerial4
  1135 ;;		_sendArrayCharSerial4
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text3
  1140   0015C4                     __ptext3:
  1141                           	callstack 0
  1142   0015C4                     _sprintf:
  1143                           	callstack 24
  1144   0015C4  0E1F               	movlw	low (?_sprintf+3)
  1145   0015C6  6E23               	movwf	sprintf@ap^0,c
  1146   0015C8  C01C  F024         	movff	sprintf@s,sprintf@f
  1147   0015CC  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
  1148   0015D0  0E00               	movlw	0
  1149   0015D2  6E28               	movwf	(sprintf@f+4)^0,c
  1150   0015D4  0E00               	movlw	0
  1151   0015D6  6E27               	movwf	(sprintf@f+3)^0,c
  1152   0015D8  0E00               	movlw	0
  1153   0015DA  6E2F               	movwf	(sprintf@f+11)^0,c
  1154   0015DC  0E00               	movlw	0
  1155   0015DE  6E2E               	movwf	(sprintf@f+10)^0,c
  1156   0015E0  0E24               	movlw	low sprintf@f
  1157   0015E2  6E18               	movwf	vfprintf@fp^0,c
  1158   0015E4  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  1159   0015E8  0E23               	movlw	low sprintf@ap
  1160   0015EA  6E1A               	movwf	vfprintf@ap^0,c
  1161   0015EC  EC90  F00A         	call	_vfprintf	;wreg free
  1162   0015F0  C018  F021         	movff	?_vfprintf,sprintf@ret
  1163   0015F4  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
  1164   0015F8  5027               	movf	(sprintf@f+3)^0,w,c
  1165   0015FA  241C               	addwf	sprintf@s^0,w,c
  1166   0015FC  6ED9               	movwf	fsr2l,c
  1167   0015FE  5028               	movf	(sprintf@f+4)^0,w,c
  1168   001600  201D               	addwfc	(sprintf@s+1)^0,w,c
  1169   001602  6EDA               	movwf	fsr2h,c
  1170   001604  6ADF               	clrf	indf2,c
  1171   001606  C021  F01C         	movff	sprintf@ret,?_sprintf
  1172   00160A  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1173   00160E  0012               	return		;funcret
  1174   001610                     __end_of_sprintf:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _vfprintf *****************
  1178 ;; Defined at:
  1179 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1182 ;;		 -> sprintf@f(12), 
  1183 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1184 ;;		 -> STR_3(3), STR_1(5), 
  1185 ;;  ap              1   25[COMRAM] PTR PTR void 
  1186 ;;		 -> sprintf@ap(1), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1189 ;;		 -> STR_3(3), STR_1(5), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2   23[COMRAM] int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;Total ram usage:        4 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 4
  1206 ;; This function calls:
  1207 ;;		_vfpfcnvrt
  1208 ;; This function is called by:
  1209 ;;		_sprintf
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text4
  1214   001520                     __ptext4:
  1215                           	callstack 0
  1216   001520                     _vfprintf:
  1217                           	callstack 24
  1218   001520                     
  1219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1220   001520  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1221   001524                     
  1222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1223   001524  0E00               	movlw	0
  1224   001526  0100               	movlb	0	; () banked
  1225   001528  6FD1               	movwf	(_nout+1)& (0+255),b
  1226   00152A  0E00               	movlw	0
  1227   00152C  6FD0               	movwf	_nout& (0+255),b
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1230   00152E  EFA6  F00A         	goto	l3260
  1231   001532                     l3258:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1235   001532  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1236   001536  0E1B               	movlw	low vfprintf@cfmt
  1237   001538  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1238   00153A  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1239   00153E  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1240   001542  500B               	movf	?_vfpfcnvrt^0,w,c
  1241   001544  0100               	movlb	0	; () banked
  1242   001546  27D0               	addwf	_nout& (0+255),f,b
  1243   001548  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1244   00154A  23D1               	addwfc	(_nout+1)& (0+255),f,b
  1245   00154C                     l3260:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1249   00154C  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1250   001550                     	if	1	;There is more than 1 active tblptr byte
  1251   001550  0E0E               	movlw	high __smallconst
  1252   001552  6EF7               	movwf	tblptrh,c
  1253   001554                     	endif
  1254   001554                     	if	0	;tblptru may be non-zero
  1255   001554                     	endif
  1256   001554                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1257   001554  0E00               	movlw	low (__smallconst shr (0+16))
  1258   001556  6EF8               	movwf	tblptru,c
  1259   001558                     	endif
  1260   001558  0008               	tblrd		*
  1261   00155A  50F5               	movf	tablat,w,c
  1262   00155C  0900               	iorlw	0
  1263   00155E  A4D8               	btfss	status,2,c
  1264   001560  EFB4  F00A         	goto	u2171
  1265   001564  EFB6  F00A         	goto	u2170
  1266   001568                     u2171:
  1267   001568  EF99  F00A         	goto	l3258
  1268   00156C                     u2170:
  1269   00156C                     
  1270                           ; BSR set to: 0
  1271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1272   00156C  C0D0  F018         	movff	_nout,?_vfprintf
  1273   001570  C0D1  F019         	movff	_nout+1,?_vfprintf+1
  1274   001574                     
  1275                           ; BSR set to: 0
  1276   001574  0012               	return		;funcret
  1277   001576                     __end_of_vfprintf:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _vfpfcnvrt *****************
  1281 ;; Defined at:
  1282 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1285 ;;		 -> sprintf@f(12), 
  1286 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1287 ;;		 -> vfprintf@cfmt(1), 
  1288 ;;  ap              1   12[COMRAM] PTR PTR void 
  1289 ;;		 -> sprintf@ap(1), 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  convarg         4   18[COMRAM] struct .
  1292 ;;  cnt             2   15[COMRAM] int 
  1293 ;;  c               1   22[COMRAM] unsigned char 
  1294 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1295 ;;		 -> STR_3(3), STR_1(5), 
  1296 ;;  done            1   14[COMRAM] _Bool 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2   10[COMRAM] int 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1306 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;Total ram usage:       13 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 3
  1313 ;; This function calls:
  1314 ;;		___awdiv
  1315 ;;		___awmod
  1316 ;;		_abs
  1317 ;;		_fputc
  1318 ;; This function is called by:
  1319 ;;		_vfprintf
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text5
  1324   000E0A                     __ptext5:
  1325                           	callstack 0
  1326   000E0A                     _vfpfcnvrt:
  1327                           	callstack 24
  1328   000E0A                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1330   000E0A  0E00               	movlw	0
  1331   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1332   000E0E  0E00               	movlw	0
  1333   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1334   000E12                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1336   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1337   000E14  6ED9               	movwf	fsr2l,c
  1338   000E16  6ADA               	clrf	fsr2h,c
  1339   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1340   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1341   000E1C  0E0E               	movlw	high __smallconst
  1342   000E1E  6EF7               	movwf	tblptrh,c
  1343   000E20                     	endif
  1344   000E20                     	if	0	;tblptru may be non-zero
  1345   000E20                     	endif
  1346   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1347   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1348   000E22  6EF8               	movwf	tblptru,c
  1349   000E24                     	endif
  1350   000E24  0008               	tblrd		*
  1351   000E26  50F5               	movf	tablat,w,c
  1352   000E28  0A25               	xorlw	37
  1353   000E2A  A4D8               	btfss	status,2,c
  1354   000E2C  EF1A  F007         	goto	u2061
  1355   000E30  EF1C  F007         	goto	u2060
  1356   000E34                     u2061:
  1357   000E34  EFE6  F007         	goto	l3230
  1358   000E38                     u2060:
  1359   000E38                     
  1360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1361   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1362   000E3A  6ED9               	movwf	fsr2l,c
  1363   000E3C  6ADA               	clrf	fsr2h,c
  1364   000E3E  2ADF               	incf	indf2,f,c
  1365   000E40                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1367   000E40  0E00               	movlw	0
  1368   000E42  0100               	movlb	0	; () banked
  1369   000E44  6FD3               	movwf	(_width+1)& (0+255),b
  1370   000E46  0E00               	movlw	0
  1371   000E48  6FD2               	movwf	_width& (0+255),b
  1372   000E4A  C0D2  F0D6         	movff	_width,_flags
  1373   000E4E                     
  1374                           ; BSR set to: 0
  1375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1376   000E4E  69D4               	setf	_prec& (0+255),b
  1377   000E50  69D5               	setf	(_prec+1)& (0+255),b
  1378   000E52                     
  1379                           ; BSR set to: 0
  1380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1381   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1382   000E54  6ED9               	movwf	fsr2l,c
  1383   000E56  6ADA               	clrf	fsr2h,c
  1384   000E58  50DF               	movf	indf2,w,c
  1385   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1386   000E5C                     
  1387                           ; BSR set to: 0
  1388                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1389   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1390   000E60                     	if	1	;There is more than 1 active tblptr byte
  1391   000E60  0E0E               	movlw	high __smallconst
  1392   000E62  6EF7               	movwf	tblptrh,c
  1393   000E64                     	endif
  1394   000E64                     	if	0	;tblptru may be non-zero
  1395   000E64                     	endif
  1396   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1397   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1398   000E66  6EF8               	movwf	tblptru,c
  1399   000E68                     	endif
  1400   000E68  0008               	tblrd		*
  1401   000E6A  50F5               	movf	tablat,w,c
  1402   000E6C  0A64               	xorlw	100
  1403   000E6E  B4D8               	btfsc	status,2,c
  1404   000E70  EF3C  F007         	goto	u2071
  1405   000E74  EF3E  F007         	goto	u2070
  1406   000E78                     u2071:
  1407   000E78  EF4E  F007         	goto	l3194
  1408   000E7C                     u2070:
  1409   000E7C                     
  1410                           ; BSR set to: 0
  1411   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1412   000E80                     	if	1	;There is more than 1 active tblptr byte
  1413   000E80  0E0E               	movlw	high __smallconst
  1414   000E82  6EF7               	movwf	tblptrh,c
  1415   000E84                     	endif
  1416   000E84                     	if	0	;tblptru may be non-zero
  1417   000E84                     	endif
  1418   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1419   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1420   000E86  6EF8               	movwf	tblptru,c
  1421   000E88                     	endif
  1422   000E88  0008               	tblrd		*
  1423   000E8A  50F5               	movf	tablat,w,c
  1424   000E8C  0A69               	xorlw	105
  1425   000E8E  A4D8               	btfss	status,2,c
  1426   000E90  EF4C  F007         	goto	u2081
  1427   000E94  EF4E  F007         	goto	u2080
  1428   000E98                     u2081:
  1429   000E98  EFDC  F007         	goto	l3224
  1430   000E9C                     u2080:
  1431   000E9C                     l3194:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1435   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1436   000E9E  6ED9               	movwf	fsr2l,c
  1437   000EA0  6ADA               	clrf	fsr2h,c
  1438   000EA2  0E02               	movlw	2
  1439   000EA4  26DF               	addwf	indf2,f,c
  1440   000EA6  5CDF               	subwf	indf2,w,c
  1441   000EA8  6ED9               	movwf	fsr2l,c
  1442   000EAA  6ADA               	clrf	fsr2h,c
  1443   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1444   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1445   000EB4                     
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1448   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1449   000EB6  6ED9               	movwf	fsr2l,c
  1450   000EB8  6ADA               	clrf	fsr2h,c
  1451   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1452   000EBC  6EDF               	movwf	indf2,c
  1453   000EBE                     
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1456   000EBE  0E20               	movlw	32
  1457   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1460   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1461   000EC4  EF66  F007         	goto	u2091
  1462   000EC8  EF69  F007         	goto	u2090
  1463   000ECC                     u2091:
  1464   000ECC  0E01               	movlw	1
  1465   000ECE  EF6A  F007         	goto	u2100
  1466   000ED2                     u2090:
  1467   000ED2  0E00               	movlw	0
  1468   000ED4                     u2100:
  1469   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1470   000ED6                     l3200:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1473   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1474   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1475   000EDA  0F9C               	addlw	low _dbuf
  1476   000EDC  6ED9               	movwf	fsr2l,c
  1477   000EDE  6ADA               	clrf	fsr2h,c
  1478   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1479   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1480   000EE8  0E00               	movlw	0
  1481   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1482   000EEC  0E0A               	movlw	10
  1483   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1484   000EF0  EC42  F009         	call	___awmod	;wreg free
  1485   000EF4  C001  F007         	movff	?___awmod,abs@a
  1486   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1487   000EFC  EC26  F00B         	call	_abs	;wreg free
  1488   000F00  5007               	movf	?_abs^0,w,c
  1489   000F02  0F30               	addlw	48
  1490   000F04  6EDF               	movwf	indf2,c
  1491   000F06                     
  1492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1493   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1494   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1495   000F0E  0E00               	movlw	0
  1496   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1497   000F12  0E0A               	movlw	10
  1498   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1499   000F16  EC83  F008         	call	___awdiv	;wreg free
  1500   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1501   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1502   000F22                     
  1503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1504   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1505   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1506   000F26                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1508   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1509   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1510   000F2A  B4D8               	btfsc	status,2,c
  1511   000F2C  EF9A  F007         	goto	u2111
  1512   000F30  EF9C  F007         	goto	u2110
  1513   000F34                     u2111:
  1514   000F34  EFA4  F007         	goto	l3210
  1515   000F38                     u2110:
  1516   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1517   000F3A  A4D8               	btfss	status,2,c
  1518   000F3C  EFA2  F007         	goto	u2121
  1519   000F40  EFA4  F007         	goto	u2120
  1520   000F44                     u2121:
  1521   000F44  EF6B  F007         	goto	l3200
  1522   000F48                     u2120:
  1523   000F48                     l3210:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1526   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1527   000F4A  B4D8               	btfsc	status,2,c
  1528   000F4C  EFAA  F007         	goto	u2131
  1529   000F50  EFAC  F007         	goto	u2130
  1530   000F54                     u2131:
  1531   000F54  EFCD  F007         	goto	l3222
  1532   000F58                     u2130:
  1533   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1534   000F5A  B4D8               	btfsc	status,2,c
  1535   000F5C  EFB2  F007         	goto	u2141
  1536   000F60  EFB4  F007         	goto	u2140
  1537   000F64                     u2141:
  1538   000F64  EFCD  F007         	goto	l3222
  1539   000F68                     u2140:
  1540   000F68                     
  1541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1542   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1543   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1544   000F6C  0F9C               	addlw	low _dbuf
  1545   000F6E  6ED9               	movwf	fsr2l,c
  1546   000F70  6ADA               	clrf	fsr2h,c
  1547   000F72  0E2D               	movlw	45
  1548   000F74  6EDF               	movwf	indf2,c
  1549   000F76                     
  1550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1551   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1552   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1553   000F7A  EFCD  F007         	goto	l3222
  1554   000F7E                     l3218:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1557   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1558   000F80  0F9C               	addlw	low _dbuf
  1559   000F82  6ED9               	movwf	fsr2l,c
  1560   000F84  6ADA               	clrf	fsr2h,c
  1561   000F86  50DF               	movf	indf2,w,c
  1562   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1563   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1564   000F8C  6E01               	movwf	fputc@c^0,c
  1565   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1566   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1567   000F94  ECE5  F008         	call	_fputc	;wreg free
  1568   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1569   000F9A                     l3222:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1572   000F9A  0E20               	movlw	32
  1573   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1574   000F9E  A4D8               	btfss	status,2,c
  1575   000FA0  EFD4  F007         	goto	u2151
  1576   000FA4  EFD6  F007         	goto	u2150
  1577   000FA8                     u2151:
  1578   000FA8  EFBF  F007         	goto	l3218
  1579   000FAC                     u2150:
  1580   000FAC                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1582   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1583   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1584   000FB4  EFFF  F007         	goto	l1300
  1585   000FB8                     l3224:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1589   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1590   000FBA  6ED9               	movwf	fsr2l,c
  1591   000FBC  6ADA               	clrf	fsr2h,c
  1592   000FBE  2ADF               	incf	indf2,f,c
  1593   000FC0                     
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1596   000FC0  0E00               	movlw	0
  1597   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1598   000FC4  0E00               	movlw	0
  1599   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1600   000FC8  EFFF  F007         	goto	l1300
  1601   000FCC                     l3230:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1604   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1605   000FCE  6ED9               	movwf	fsr2l,c
  1606   000FD0  6ADA               	clrf	fsr2h,c
  1607   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1608   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1609   000FD6  0E0E               	movlw	high __smallconst
  1610   000FD8  6EF7               	movwf	tblptrh,c
  1611   000FDA                     	endif
  1612   000FDA                     	if	0	;tblptru may be non-zero
  1613   000FDA                     	endif
  1614   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1615   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1616   000FDC  6EF8               	movwf	tblptru,c
  1617   000FDE                     	endif
  1618   000FDE  0008               	tblrd		*
  1619   000FE0  50F5               	movf	tablat,w,c
  1620   000FE2  6E01               	movwf	fputc@c^0,c
  1621   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1622   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1623   000FEA  ECE5  F008         	call	_fputc	;wreg free
  1624   000FEE                     
  1625                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1626   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1627   000FF0  6ED9               	movwf	fsr2l,c
  1628   000FF2  6ADA               	clrf	fsr2h,c
  1629   000FF4  2ADF               	incf	indf2,f,c
  1630   000FF6                     
  1631                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1632   000FF6  0E00               	movlw	0
  1633   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1634   000FFA  0E01               	movlw	1
  1635   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1636   000FFE                     l1300:
  1637   000FFE  0012               	return		;funcret
  1638   001000                     __end_of_vfpfcnvrt:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _fputc *****************
  1642 ;; Defined at:
  1643 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  c               2    0[COMRAM] int 
  1646 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1647 ;;		 -> sprintf@f(12), 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  2    0[COMRAM] int 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1659 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;Total ram usage:        8 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 2
  1666 ;; This function calls:
  1667 ;;		_putch
  1668 ;; This function is called by:
  1669 ;;		_vfpfcnvrt
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text6
  1674   0011CA                     __ptext6:
  1675                           	callstack 0
  1676   0011CA                     _fputc:
  1677                           	callstack 24
  1678   0011CA  5003               	movf	fputc@fp^0,w,c
  1679   0011CC  B4D8               	btfsc	status,2,c
  1680   0011CE  EFEB  F008         	goto	u1991
  1681   0011D2  EFED  F008         	goto	u1990
  1682   0011D6                     u1991:
  1683   0011D6  EFF5  F008         	goto	l3160
  1684   0011DA                     u1990:
  1685   0011DA  5003               	movf	fputc@fp^0,w,c
  1686   0011DC  A4D8               	btfss	status,2,c
  1687   0011DE  EFF3  F008         	goto	u2001
  1688   0011E2  EFF5  F008         	goto	u2000
  1689   0011E6                     u2001:
  1690   0011E6  EFFA  F008         	goto	l3162
  1691   0011EA                     u2000:
  1692   0011EA                     l3160:
  1693   0011EA  5001               	movf	fputc@c^0,w,c
  1694   0011EC  ECEE  F00B         	call	_putch
  1695   0011F0  EF41  F009         	goto	l1325
  1696   0011F4                     l3162:
  1697   0011F4  5003               	movf	fputc@fp^0,w,c
  1698   0011F6  6ED9               	movwf	fsr2l,c
  1699   0011F8  6ADA               	clrf	fsr2h,c
  1700   0011FA  0E0A               	movlw	10
  1701   0011FC  26D9               	addwf	fsr2l,f,c
  1702   0011FE  50DE               	movf	postinc2,w,c
  1703   001200  10DE               	iorwf	postinc2,w,c
  1704   001202  B4D8               	btfsc	status,2,c
  1705   001204  EF06  F009         	goto	u2011
  1706   001208  EF08  F009         	goto	u2010
  1707   00120C                     u2011:
  1708   00120C  EF21  F009         	goto	l3166
  1709   001210                     u2010:
  1710   001210  5003               	movf	fputc@fp^0,w,c
  1711   001212  6ED9               	movwf	fsr2l,c
  1712   001214  6ADA               	clrf	fsr2h,c
  1713   001216  0E0A               	movlw	10
  1714   001218  26D9               	addwf	fsr2l,f,c
  1715   00121A  5003               	movf	fputc@fp^0,w,c
  1716   00121C  6EE1               	movwf	fsr1l,c
  1717   00121E  6AE2               	clrf	fsr1h,c
  1718   001220  0E03               	movlw	3
  1719   001222  26E1               	addwf	fsr1l,f,c
  1720   001224  50DE               	movf	postinc2,w,c
  1721   001226  5CE6               	subwf	postinc1,w,c
  1722   001228  50E6               	movf	postinc1,w,c
  1723   00122A  0A80               	xorlw	128
  1724   00122C  6E08               	movwf	(??_fputc+4)^0,c
  1725   00122E  50DE               	movf	postinc2,w,c
  1726   001230  0A80               	xorlw	128
  1727   001232  5808               	subwfb	(??_fputc+4)^0,w,c
  1728   001234  B0D8               	btfsc	status,0,c
  1729   001236  EF1F  F009         	goto	u2021
  1730   00123A  EF21  F009         	goto	u2020
  1731   00123E                     u2021:
  1732   00123E  EF41  F009         	goto	l1325
  1733   001242                     u2020:
  1734   001242                     l3166:
  1735   001242  5003               	movf	fputc@fp^0,w,c
  1736   001244  6ED9               	movwf	fsr2l,c
  1737   001246  6ADA               	clrf	fsr2h,c
  1738   001248  0E03               	movlw	3
  1739   00124A  26D9               	addwf	fsr2l,f,c
  1740   00124C  CFDE F004          	movff	postinc2,??_fputc
  1741   001250  CFDD F005          	movff	postdec2,??_fputc+1
  1742   001254  5003               	movf	fputc@fp^0,w,c
  1743   001256  6ED9               	movwf	fsr2l,c
  1744   001258  6ADA               	clrf	fsr2h,c
  1745   00125A  CFDE F006          	movff	postinc2,??_fputc+2
  1746   00125E  CFDD F007          	movff	postdec2,??_fputc+3
  1747   001262  5004               	movf	??_fputc^0,w,c
  1748   001264  2406               	addwf	(??_fputc+2)^0,w,c
  1749   001266  6ED9               	movwf	fsr2l,c
  1750   001268  5005               	movf	(??_fputc+1)^0,w,c
  1751   00126A  2007               	addwfc	(??_fputc+3)^0,w,c
  1752   00126C  6EDA               	movwf	fsr2h,c
  1753   00126E  C001  FFDF         	movff	fputc@c,indf2
  1754   001272  5003               	movf	fputc@fp^0,w,c
  1755   001274  6ED9               	movwf	fsr2l,c
  1756   001276  6ADA               	clrf	fsr2h,c
  1757   001278  0E03               	movlw	3
  1758   00127A  26D9               	addwf	fsr2l,f,c
  1759   00127C  2ADE               	incf	postinc2,f,c
  1760   00127E  0E00               	movlw	0
  1761   001280  22DD               	addwfc	postdec2,f,c
  1762   001282                     l1325:
  1763   001282  0012               	return		;funcret
  1764   001284                     __end_of_fputc:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _putch *****************
  1768 ;; Defined at:
  1769 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  c               1    wreg     unsigned char 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  c               1    0[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_fputc
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text7
  1798   0017DC                     __ptext7:
  1799                           	callstack 0
  1800   0017DC                     _putch:
  1801                           	callstack 24
  1802   0017DC  0012               	return		;funcret
  1803   0017DE                     __end_of_putch:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _abs *****************
  1807 ;; Defined at:
  1808 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  a               2    6[COMRAM] int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2    6[COMRAM] int 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;Total ram usage:        4 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_vfpfcnvrt
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text8
  1837   00164C                     __ptext8:
  1838                           	callstack 0
  1839   00164C                     _abs:
  1840                           	callstack 25
  1841   00164C  BE08               	btfsc	(abs@a+1)^0,7,c
  1842   00164E  EF2B  F00B         	goto	u2031
  1843   001652  EF2D  F00B         	goto	u2030
  1844   001656                     u2031:
  1845   001656  EF33  F00B         	goto	l1310
  1846   00165A                     u2030:
  1847   00165A  C007  F007         	movff	abs@a,?_abs
  1848   00165E  C008  F008         	movff	abs@a+1,?_abs+1
  1849   001662  EF3F  F00B         	goto	l1313
  1850   001666                     l1310:
  1851   001666  C007  F009         	movff	abs@a,??_abs
  1852   00166A  C008  F00A         	movff	abs@a+1,??_abs+1
  1853   00166E  1E09               	comf	??_abs^0,f,c
  1854   001670  1E0A               	comf	(??_abs+1)^0,f,c
  1855   001672  4A09               	infsnz	??_abs^0,f,c
  1856   001674  2A0A               	incf	(??_abs+1)^0,f,c
  1857   001676  C009  F007         	movff	??_abs,?_abs
  1858   00167A  C00A  F008         	movff	??_abs+1,?_abs+1
  1859   00167E                     l1313:
  1860   00167E  0012               	return		;funcret
  1861   001680                     __end_of_abs:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function ___awmod *****************
  1865 ;; Defined at:
  1866 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  dividend        2    0[COMRAM] int 
  1869 ;;  divisor         2    2[COMRAM] int 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  sign            1    5[COMRAM] unsigned char 
  1872 ;;  counter         1    4[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    0[COMRAM] int 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;Total ram usage:        6 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_vfpfcnvrt
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text9
  1897   001284                     __ptext9:
  1898                           	callstack 0
  1899   001284                     ___awmod:
  1900                           	callstack 25
  1901   001284  0E00               	movlw	0
  1902   001286  6E06               	movwf	___awmod@sign^0,c
  1903   001288  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1904   00128A  EF4B  F009         	goto	u1930
  1905   00128E  EF49  F009         	goto	u1931
  1906   001292                     u1931:
  1907   001292  EF51  F009         	goto	l3128
  1908   001296                     u1930:
  1909   001296  6C01               	negf	___awmod@dividend^0,c
  1910   001298  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1911   00129A  B0D8               	btfsc	status,0,c
  1912   00129C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1913   00129E  0E01               	movlw	1
  1914   0012A0  6E06               	movwf	___awmod@sign^0,c
  1915   0012A2                     l3128:
  1916   0012A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1917   0012A4  EF58  F009         	goto	u1940
  1918   0012A8  EF56  F009         	goto	u1941
  1919   0012AC                     u1941:
  1920   0012AC  EF5C  F009         	goto	l3132
  1921   0012B0                     u1940:
  1922   0012B0  6C03               	negf	___awmod@divisor^0,c
  1923   0012B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1924   0012B4  B0D8               	btfsc	status,0,c
  1925   0012B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1926   0012B8                     l3132:
  1927   0012B8  5003               	movf	___awmod@divisor^0,w,c
  1928   0012BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1929   0012BC  B4D8               	btfsc	status,2,c
  1930   0012BE  EF63  F009         	goto	u1951
  1931   0012C2  EF65  F009         	goto	u1950
  1932   0012C6                     u1951:
  1933   0012C6  EF89  F009         	goto	l3148
  1934   0012CA                     u1950:
  1935   0012CA  0E01               	movlw	1
  1936   0012CC  6E05               	movwf	___awmod@counter^0,c
  1937   0012CE  EF6D  F009         	goto	l3138
  1938   0012D2                     l3136:
  1939   0012D2  90D8               	bcf	status,0,c
  1940   0012D4  3603               	rlcf	___awmod@divisor^0,f,c
  1941   0012D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1942   0012D8  2A05               	incf	___awmod@counter^0,f,c
  1943   0012DA                     l3138:
  1944   0012DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1945   0012DC  EF72  F009         	goto	u1961
  1946   0012E0  EF74  F009         	goto	u1960
  1947   0012E4                     u1961:
  1948   0012E4  EF69  F009         	goto	l3136
  1949   0012E8                     u1960:
  1950   0012E8                     l3140:
  1951   0012E8  5003               	movf	___awmod@divisor^0,w,c
  1952   0012EA  5C01               	subwf	___awmod@dividend^0,w,c
  1953   0012EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  1954   0012EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1955   0012F0  A0D8               	btfss	status,0,c
  1956   0012F2  EF7D  F009         	goto	u1971
  1957   0012F6  EF7F  F009         	goto	u1970
  1958   0012FA                     u1971:
  1959   0012FA  EF83  F009         	goto	l3144
  1960   0012FE                     u1970:
  1961   0012FE  5003               	movf	___awmod@divisor^0,w,c
  1962   001300  5E01               	subwf	___awmod@dividend^0,f,c
  1963   001302  5004               	movf	(___awmod@divisor+1)^0,w,c
  1964   001304  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1965   001306                     l3144:
  1966   001306  90D8               	bcf	status,0,c
  1967   001308  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1968   00130A  3203               	rrcf	___awmod@divisor^0,f,c
  1969   00130C  2E05               	decfsz	___awmod@counter^0,f,c
  1970   00130E  EF74  F009         	goto	l3140
  1971   001312                     l3148:
  1972   001312  5006               	movf	___awmod@sign^0,w,c
  1973   001314  B4D8               	btfsc	status,2,c
  1974   001316  EF8F  F009         	goto	u1981
  1975   00131A  EF91  F009         	goto	u1980
  1976   00131E                     u1981:
  1977   00131E  EF95  F009         	goto	l3152
  1978   001322                     u1980:
  1979   001322  6C01               	negf	___awmod@dividend^0,c
  1980   001324  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1981   001326  B0D8               	btfsc	status,0,c
  1982   001328  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1983   00132A                     l3152:
  1984   00132A  C001  F001         	movff	___awmod@dividend,?___awmod
  1985   00132E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1986   001332  0012               	return		;funcret
  1987   001334                     __end_of___awmod:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function ___awdiv *****************
  1991 ;; Defined at:
  1992 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  dividend        2    0[COMRAM] int 
  1995 ;;  divisor         2    2[COMRAM] int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  quotient        2    6[COMRAM] int 
  1998 ;;  sign            1    5[COMRAM] unsigned char 
  1999 ;;  counter         1    4[COMRAM] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  2    0[COMRAM] int 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;Total ram usage:        8 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_vfpfcnvrt
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text10
  2024   001106                     __ptext10:
  2025                           	callstack 0
  2026   001106                     ___awdiv:
  2027                           	callstack 25
  2028   001106  0E00               	movlw	0
  2029   001108  6E06               	movwf	___awdiv@sign^0,c
  2030   00110A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2031   00110C  EF8C  F008         	goto	u1870
  2032   001110  EF8A  F008         	goto	u1871
  2033   001114                     u1871:
  2034   001114  EF92  F008         	goto	l3084
  2035   001118                     u1870:
  2036   001118  6C03               	negf	___awdiv@divisor^0,c
  2037   00111A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2038   00111C  B0D8               	btfsc	status,0,c
  2039   00111E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2040   001120  0E01               	movlw	1
  2041   001122  6E06               	movwf	___awdiv@sign^0,c
  2042   001124                     l3084:
  2043   001124  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2044   001126  EF99  F008         	goto	u1880
  2045   00112A  EF97  F008         	goto	u1881
  2046   00112E                     u1881:
  2047   00112E  EF9F  F008         	goto	l3090
  2048   001132                     u1880:
  2049   001132  6C01               	negf	___awdiv@dividend^0,c
  2050   001134  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2051   001136  B0D8               	btfsc	status,0,c
  2052   001138  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2053   00113A  0E01               	movlw	1
  2054   00113C  1A06               	xorwf	___awdiv@sign^0,f,c
  2055   00113E                     l3090:
  2056   00113E  0E00               	movlw	0
  2057   001140  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2058   001142  0E00               	movlw	0
  2059   001144  6E07               	movwf	___awdiv@quotient^0,c
  2060   001146  5003               	movf	___awdiv@divisor^0,w,c
  2061   001148  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2062   00114A  B4D8               	btfsc	status,2,c
  2063   00114C  EFAA  F008         	goto	u1891
  2064   001150  EFAC  F008         	goto	u1890
  2065   001154                     u1891:
  2066   001154  EFD4  F008         	goto	l3112
  2067   001158                     u1890:
  2068   001158  0E01               	movlw	1
  2069   00115A  6E05               	movwf	___awdiv@counter^0,c
  2070   00115C  EFB4  F008         	goto	l3098
  2071   001160                     l3096:
  2072   001160  90D8               	bcf	status,0,c
  2073   001162  3603               	rlcf	___awdiv@divisor^0,f,c
  2074   001164  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2075   001166  2A05               	incf	___awdiv@counter^0,f,c
  2076   001168                     l3098:
  2077   001168  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2078   00116A  EFB9  F008         	goto	u1901
  2079   00116E  EFBB  F008         	goto	u1900
  2080   001172                     u1901:
  2081   001172  EFB0  F008         	goto	l3096
  2082   001176                     u1900:
  2083   001176                     l3100:
  2084   001176  90D8               	bcf	status,0,c
  2085   001178  3607               	rlcf	___awdiv@quotient^0,f,c
  2086   00117A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2087   00117C  5003               	movf	___awdiv@divisor^0,w,c
  2088   00117E  5C01               	subwf	___awdiv@dividend^0,w,c
  2089   001180  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2090   001182  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2091   001184  A0D8               	btfss	status,0,c
  2092   001186  EFC7  F008         	goto	u1911
  2093   00118A  EFC9  F008         	goto	u1910
  2094   00118E                     u1911:
  2095   00118E  EFCE  F008         	goto	l3108
  2096   001192                     u1910:
  2097   001192  5003               	movf	___awdiv@divisor^0,w,c
  2098   001194  5E01               	subwf	___awdiv@dividend^0,f,c
  2099   001196  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2100   001198  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2101   00119A  8007               	bsf	___awdiv@quotient^0,0,c
  2102   00119C                     l3108:
  2103   00119C  90D8               	bcf	status,0,c
  2104   00119E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2105   0011A0  3203               	rrcf	___awdiv@divisor^0,f,c
  2106   0011A2  2E05               	decfsz	___awdiv@counter^0,f,c
  2107   0011A4  EFBB  F008         	goto	l3100
  2108   0011A8                     l3112:
  2109   0011A8  5006               	movf	___awdiv@sign^0,w,c
  2110   0011AA  B4D8               	btfsc	status,2,c
  2111   0011AC  EFDA  F008         	goto	u1921
  2112   0011B0  EFDC  F008         	goto	u1920
  2113   0011B4                     u1921:
  2114   0011B4  EFE0  F008         	goto	l3116
  2115   0011B8                     u1920:
  2116   0011B8  6C07               	negf	___awdiv@quotient^0,c
  2117   0011BA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2118   0011BC  B0D8               	btfsc	status,0,c
  2119   0011BE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2120   0011C0                     l3116:
  2121   0011C0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2122   0011C4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2123   0011C8  0012               	return		;funcret
  2124   0011CA                     __end_of___awdiv:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _sendStringSerial4 *****************
  2128 ;; Defined at:
  2129 ;;		line 35 in file "serial.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  string          2    1[COMRAM] PTR unsigned char 
  2132 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 2
  2151 ;; This function calls:
  2152 ;;		_sendCharSerial4
  2153 ;; This function is called by:
  2154 ;;		_sendIntSerial4
  2155 ;;		_sendArrayCharSerial4
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text11
  2160   0014BE                     __ptext11:
  2161                           	callstack 0
  2162   0014BE                     _sendStringSerial4:
  2163                           	callstack 27
  2164   0014BE                     
  2165                           ;serial.c: 37:     while(*string != 0){
  2166   0014BE  EF76  F00A         	goto	l3282
  2167   0014C2                     l3278:
  2168                           
  2169                           ;serial.c: 38:   sendCharSerial4(*string++);
  2170   0014C2  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2171   0014C6  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2172   0014CA  0E00               	movlw	low (__smallconst shr (0+16))
  2173   0014CC  6EF8               	movwf	tblptru,c
  2174   0014CE  0E0D               	movlw	(high __ramtop+-1)
  2175   0014D0  64F7               	cpfsgt	tblptrh,c
  2176   0014D2  D003               	bra	u2187
  2177   0014D4  0008               	tblrd		*
  2178   0014D6  50F5               	movf	tablat,w,c
  2179   0014D8  D005               	bra	u2180
  2180   0014DA                     u2187:
  2181   0014DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2182   0014DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2183   0014E2  50EF               	movf	indf0,w,c
  2184   0014E4                     u2180:
  2185   0014E4  ECC7  F00B         	call	_sendCharSerial4
  2186   0014E8  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2187   0014EA  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2188   0014EC                     l3282:
  2189                           
  2190                           ;serial.c: 37:     while(*string != 0){
  2191   0014EC  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2192   0014F0  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2193   0014F4  0E00               	movlw	low (__smallconst shr (0+16))
  2194   0014F6  6EF8               	movwf	tblptru,c
  2195   0014F8  0E0D               	movlw	(high __ramtop+-1)
  2196   0014FA  64F7               	cpfsgt	tblptrh,c
  2197   0014FC  D003               	bra	u2197
  2198   0014FE  0008               	tblrd		*
  2199   001500  50F5               	movf	tablat,w,c
  2200   001502  D005               	bra	u2190
  2201   001504                     u2197:
  2202   001504  CFF6 FFE9          	movff	tblptrl,fsr0l
  2203   001508  CFF7 FFEA          	movff	tblptrh,fsr0h
  2204   00150C  50EF               	movf	indf0,w,c
  2205   00150E                     u2190:
  2206   00150E  0900               	iorlw	0
  2207   001510  A4D8               	btfss	status,2,c
  2208   001512  EF8D  F00A         	goto	u2201
  2209   001516  EF8F  F00A         	goto	u2200
  2210   00151A                     u2201:
  2211   00151A  EF61  F00A         	goto	l3278
  2212   00151E                     u2200:
  2213   00151E  0012               	return		;funcret
  2214   001520                     __end_of_sendStringSerial4:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _sendCharSerial4 *****************
  2218 ;; Defined at:
  2219 ;;		line 29 in file "serial.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  charToSend      1    wreg     unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  charToSend      1    0[COMRAM] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;Total ram usage:        1 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_sendStringSerial4
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text12
  2248   00178E                     __ptext12:
  2249                           	callstack 0
  2250   00178E                     _sendCharSerial4:
  2251                           	callstack 27
  2252                           
  2253                           ;incstack = 0
  2254                           ;sendCharSerial4@charToSend stored from wreg
  2255   00178E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2256   001790                     l401:
  2257   001790  010E               	movlb	14	; () banked
  2258   001792  A537               	btfss	55,2,b	;volatile
  2259   001794  EFCE  F00B         	goto	u2161
  2260   001798  EFD0  F00B         	goto	u2160
  2261   00179C                     u2161:
  2262   00179C  EFC8  F00B         	goto	l401
  2263   0017A0                     u2160:
  2264   0017A0                     
  2265                           ; BSR set to: 14
  2266                           ;serial.c: 31:     TX4REG = charToSend;
  2267   0017A0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2268   0017A4                     
  2269                           ; BSR set to: 14
  2270   0017A4  0012               	return		;funcret
  2271   0017A6                     __end_of_sendCharSerial4:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _initUSART4 *****************
  2275 ;; Defined at:
  2276 ;;		line 5 in file "serial.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text13
  2305   001770                     __ptext13:
  2306                           	callstack 0
  2307   001770                     _initUSART4:
  2308                           	callstack 29
  2309   001770                     
  2310                           ;serial.c: 9:     RC0PPS = 0x12;
  2311   001770  0E12               	movlw	18
  2312   001772  010E               	movlb	14	; () banked
  2313   001774  6F62               	movwf	98,b	;volatile
  2314                           
  2315                           ;serial.c: 10:     RX4PPS = 0x11;
  2316   001776  0E11               	movlw	17
  2317   001778  6F15               	movwf	21,b	;volatile
  2318   00177A                     
  2319                           ; BSR set to: 14
  2320                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2321   00177A  97E9               	bcf	233,3,b	;volatile
  2322   00177C                     
  2323                           ; BSR set to: 14
  2324                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2325   00177C  95E8               	bcf	232,2,b	;volatile
  2326                           
  2327                           ;serial.c: 14:     SP4BRGL = 51;
  2328   00177E  0E33               	movlw	51
  2329   001780  6FE5               	movwf	229,b	;volatile
  2330                           
  2331                           ;serial.c: 15:     SP4BRGH = 0;
  2332   001782  0E00               	movlw	0
  2333   001784  6FE6               	movwf	230,b	;volatile
  2334   001786                     
  2335                           ; BSR set to: 14
  2336                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2337   001786  89E7               	bsf	231,4,b	;volatile
  2338   001788                     
  2339                           ; BSR set to: 14
  2340                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2341   001788  8BE8               	bsf	232,5,b	;volatile
  2342   00178A                     
  2343                           ; BSR set to: 14
  2344                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2345   00178A  8FE7               	bsf	231,7,b	;volatile
  2346   00178C                     
  2347                           ; BSR set to: 14
  2348   00178C  0012               	return		;funcret
  2349   00178E                     __end_of_initUSART4:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _initDCmotorsPWM *****************
  2353 ;; Defined at:
  2354 ;;		line 5 in file "dc_motor.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text14
  2383   001334                     __ptext14:
  2384                           	callstack 0
  2385   001334                     _initDCmotorsPWM:
  2386                           	callstack 29
  2387   001334                     
  2388                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2389   001334  9485               	bcf	133,2,c	;volatile
  2390                           
  2391                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2392   001336  9885               	bcf	133,4,c	;volatile
  2393                           
  2394                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2395   001338  9E83               	bcf	131,7,c	;volatile
  2396                           
  2397                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2398   00133A  9C87               	bcf	135,6,c	;volatile
  2399                           
  2400                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2401   00133C  947D               	bcf	125,2,c	;volatile
  2402                           
  2403                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2404   00133E  987D               	bcf	125,4,c	;volatile
  2405                           
  2406                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2407   001340  9E7B               	bcf	123,7,c	;volatile
  2408                           
  2409                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2410   001342  9C7F               	bcf	127,6,c	;volatile
  2411   001344                     
  2412                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2413   001344  0E05               	movlw	5
  2414   001346  010E               	movlb	14	; () banked
  2415   001348  6F74               	movwf	116,b	;volatile
  2416                           
  2417                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2418   00134A  0E06               	movlw	6
  2419   00134C  6F76               	movwf	118,b	;volatile
  2420                           
  2421                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2422   00134E  0E07               	movlw	7
  2423   001350  6F69               	movwf	105,b	;volatile
  2424                           
  2425                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2426   001352  0E08               	movlw	8
  2427   001354  6F88               	movwf	136,b	;volatile
  2428                           
  2429                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2430   001356  50BD               	movf	189,w,c	;volatile
  2431   001358  0B8F               	andlw	-113
  2432   00135A  0940               	iorlw	64
  2433   00135C  6EBD               	movwf	189,c	;volatile
  2434                           
  2435                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2436   00135E  0EE0               	movlw	-32
  2437   001360  16BE               	andwf	190,f,c	;volatile
  2438                           
  2439                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2440   001362  50BF               	movf	191,w,c	;volatile
  2441   001364  0BF0               	andlw	-16
  2442   001366  0901               	iorlw	1
  2443   001368  6EBF               	movwf	191,c	;volatile
  2444   00136A                     
  2445                           ; BSR set to: 14
  2446                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2447   00136A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2448   00136E                     
  2449                           ; BSR set to: 14
  2450                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2451   00136E  8EBD               	bsf	189,7,c	;volatile
  2452                           
  2453                           ;dc_motor.c: 35:     CCPR1H=0;
  2454   001370  0E00               	movlw	0
  2455   001372  6EAA               	movwf	170,c	;volatile
  2456                           
  2457                           ;dc_motor.c: 36:     CCPR2H=0;
  2458   001374  0E00               	movlw	0
  2459   001376  6EA6               	movwf	166,c	;volatile
  2460                           
  2461                           ;dc_motor.c: 37:     CCPR3H=0;
  2462   001378  0E00               	movlw	0
  2463   00137A  010F               	movlb	15	; () banked
  2464   00137C  6F25               	movwf	37,b	;volatile
  2465                           
  2466                           ;dc_motor.c: 38:     CCPR4H=0;
  2467   00137E  0E00               	movlw	0
  2468   001380  6F21               	movwf	33,b	;volatile
  2469                           
  2470                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2471   001382  0EFC               	movlw	-4
  2472   001384  16AD               	andwf	173,f,c	;volatile
  2473                           
  2474                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2475   001386  0EF3               	movlw	-13
  2476   001388  16AD               	andwf	173,f,c	;volatile
  2477                           
  2478                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2479   00138A  0ECF               	movlw	-49
  2480   00138C  16AD               	andwf	173,f,c	;volatile
  2481                           
  2482                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2483   00138E  0E3F               	movlw	-193
  2484   001390  16AD               	andwf	173,f,c	;volatile
  2485   001392                     
  2486                           ; BSR set to: 15
  2487                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2488   001392  88AB               	bsf	171,4,c	;volatile
  2489                           
  2490                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2491   001394  50AB               	movf	171,w,c	;volatile
  2492   001396  0BF0               	andlw	-16
  2493   001398  090C               	iorlw	12
  2494   00139A  6EAB               	movwf	171,c	;volatile
  2495   00139C                     
  2496                           ; BSR set to: 15
  2497                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2498   00139C  8EAB               	bsf	171,7,c	;volatile
  2499   00139E                     
  2500                           ; BSR set to: 15
  2501                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2502   00139E  88A7               	bsf	167,4,c	;volatile
  2503                           
  2504                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2505   0013A0  50A7               	movf	167,w,c	;volatile
  2506   0013A2  0BF0               	andlw	-16
  2507   0013A4  090C               	iorlw	12
  2508   0013A6  6EA7               	movwf	167,c	;volatile
  2509   0013A8                     
  2510                           ; BSR set to: 15
  2511                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2512   0013A8  8EA7               	bsf	167,7,c	;volatile
  2513   0013AA                     
  2514                           ; BSR set to: 15
  2515                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2516   0013AA  8926               	bsf	38,4,b	;volatile
  2517                           
  2518                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2519   0013AC  5126               	movf	38,w,b	;volatile
  2520   0013AE  0BF0               	andlw	-16
  2521   0013B0  090C               	iorlw	12
  2522   0013B2  6F26               	movwf	38,b	;volatile
  2523   0013B4                     
  2524                           ; BSR set to: 15
  2525                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2526   0013B4  8F26               	bsf	38,7,b	;volatile
  2527   0013B6                     
  2528                           ; BSR set to: 15
  2529                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2530   0013B6  8922               	bsf	34,4,b	;volatile
  2531                           
  2532                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2533   0013B8  5122               	movf	34,w,b	;volatile
  2534   0013BA  0BF0               	andlw	-16
  2535   0013BC  090C               	iorlw	12
  2536   0013BE  6F22               	movwf	34,b	;volatile
  2537   0013C0                     
  2538                           ; BSR set to: 15
  2539                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2540   0013C0  8F22               	bsf	34,7,b	;volatile
  2541   0013C2                     
  2542                           ; BSR set to: 15
  2543   0013C2  0012               	return		;funcret
  2544   0013C4                     __end_of_initDCmotorsPWM:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _color_click_init *****************
  2548 ;; Defined at:
  2549 ;;		line 5 in file "color.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;Total ram usage:        1 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 4
  2570 ;; This function calls:
  2571 ;;		_I2C_2_Master_Init
  2572 ;;		_color_writetoaddr
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text15
  2579   001680                     __ptext15:
  2580                           	callstack 0
  2581   001680                     _color_click_init:
  2582                           	callstack 26
  2583   001680                     
  2584                           ;color.c: 8:     I2C_2_Master_Init();
  2585   001680  EC5A  F00B         	call	_I2C_2_Master_Init	;wreg free
  2586   001684                     
  2587                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2588   001684  0E01               	movlw	1
  2589   001686  6E03               	movwf	color_writetoaddr@value^0,c
  2590   001688  0E00               	movlw	0
  2591   00168A  ECA8  F00B         	call	_color_writetoaddr
  2592   00168E                     
  2593                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2594   00168E  0E3F               	movlw	63
  2595   001690  6E05               	movwf	??_color_click_init^0,c
  2596   001692  0E55               	movlw	85
  2597   001694                     u2297:
  2598   001694  2EE8               	decfsz	wreg,f,c
  2599   001696  D7FE               	bra	u2297
  2600   001698  2E05               	decfsz	??_color_click_init^0,f,c
  2601   00169A  D7FC               	bra	u2297
  2602   00169C  0000               	nop	
  2603   00169E                     
  2604                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2605   00169E  0E03               	movlw	3
  2606   0016A0  6E03               	movwf	color_writetoaddr@value^0,c
  2607   0016A2  0E00               	movlw	0
  2608   0016A4  ECA8  F00B         	call	_color_writetoaddr
  2609   0016A8                     
  2610                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2611   0016A8  0ED5               	movlw	213
  2612   0016AA  6E03               	movwf	color_writetoaddr@value^0,c
  2613   0016AC  0E01               	movlw	1
  2614   0016AE  ECA8  F00B         	call	_color_writetoaddr
  2615   0016B2  0012               	return		;funcret
  2616   0016B4                     __end_of_color_click_init:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _color_writetoaddr *****************
  2620 ;; Defined at:
  2621 ;;		line 21 in file "color.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  address         1    wreg     unsigned char 
  2624 ;;  value           1    2[COMRAM] unsigned char 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  address         1    3[COMRAM] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2636 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;Total ram usage:        2 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 3
  2643 ;; This function calls:
  2644 ;;		_I2C_2_Master_Start
  2645 ;;		_I2C_2_Master_Stop
  2646 ;;		_I2C_2_Master_Write
  2647 ;; This function is called by:
  2648 ;;		_color_click_init
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text16
  2653   001750                     __ptext16:
  2654                           	callstack 0
  2655   001750                     _color_writetoaddr:
  2656                           	callstack 26
  2657                           
  2658                           ;incstack = 0
  2659                           ;color_writetoaddr@address stored from wreg
  2660   001750  6E04               	movwf	color_writetoaddr@address^0,c
  2661   001752                     
  2662                           ;color.c: 22:     I2C_2_Master_Start();
  2663   001752  ECE8  F00B         	call	_I2C_2_Master_Start	;wreg free
  2664                           
  2665                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2666   001756  0E52               	movlw	82
  2667   001758  ECDD  F00B         	call	_I2C_2_Master_Write
  2668                           
  2669                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2670   00175C  5004               	movf	color_writetoaddr@address^0,w,c
  2671   00175E  0980               	iorlw	128
  2672   001760  ECDD  F00B         	call	_I2C_2_Master_Write
  2673                           
  2674                           ;color.c: 25:     I2C_2_Master_Write(value);
  2675   001764  5003               	movf	color_writetoaddr@value^0,w,c
  2676   001766  ECDD  F00B         	call	_I2C_2_Master_Write
  2677                           
  2678                           ;color.c: 26:     I2C_2_Master_Stop();
  2679   00176A  ECE3  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2680   00176E  0012               	return		;funcret
  2681   001770                     __end_of_color_writetoaddr:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _I2C_2_Master_Write *****************
  2685 ;; Defined at:
  2686 ;;		line 45 in file "i2c.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  data_byte       1    wreg     unsigned char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  data_byte       1    1[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 2
  2707 ;; This function calls:
  2708 ;;		_I2C_2_Master_Idle
  2709 ;; This function is called by:
  2710 ;;		_color_writetoaddr
  2711 ;;		_color_read_Red
  2712 ;;		_color_read_Blue
  2713 ;;		_color_read_Green
  2714 ;;		_color_read_Clear
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text17
  2719   0017BA                     __ptext17:
  2720                           	callstack 0
  2721   0017BA                     _I2C_2_Master_Write:
  2722                           	callstack 26
  2723                           
  2724                           ;incstack = 0
  2725                           ;I2C_2_Master_Write@data_byte stored from wreg
  2726   0017BA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2727   0017BC                     
  2728                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2729   0017BC  EC6F  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2730   0017C0                     
  2731                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2732   0017C0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2733   0017C4  0012               	return		;funcret
  2734   0017C6                     __end_of_I2C_2_Master_Write:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _I2C_2_Master_Stop *****************
  2738 ;; Defined at:
  2739 ;;		line 39 in file "i2c.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 2
  2760 ;; This function calls:
  2761 ;;		_I2C_2_Master_Idle
  2762 ;; This function is called by:
  2763 ;;		_color_writetoaddr
  2764 ;;		_color_read_Red
  2765 ;;		_color_read_Blue
  2766 ;;		_color_read_Green
  2767 ;;		_color_read_Clear
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text18
  2772   0017C6                     __ptext18:
  2773                           	callstack 0
  2774   0017C6                     _I2C_2_Master_Stop:
  2775                           	callstack 26
  2776   0017C6                     
  2777                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2778   0017C6  EC6F  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2779   0017CA                     
  2780                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2781   0017CA  010E               	movlb	14	; () banked
  2782   0017CC  85DA               	bsf	218,2,b	;volatile
  2783   0017CE                     
  2784                           ; BSR set to: 14
  2785   0017CE  0012               	return		;funcret
  2786   0017D0                     __end_of_I2C_2_Master_Stop:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _I2C_2_Master_Start *****************
  2790 ;; Defined at:
  2791 ;;		line 27 in file "i2c.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 2
  2812 ;; This function calls:
  2813 ;;		_I2C_2_Master_Idle
  2814 ;; This function is called by:
  2815 ;;		_color_writetoaddr
  2816 ;;		_color_read_Red
  2817 ;;		_color_read_Blue
  2818 ;;		_color_read_Green
  2819 ;;		_color_read_Clear
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text19
  2824   0017D0                     __ptext19:
  2825                           	callstack 0
  2826   0017D0                     _I2C_2_Master_Start:
  2827                           	callstack 26
  2828   0017D0                     
  2829                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2830   0017D0  EC6F  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2831   0017D4                     
  2832                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2833   0017D4  010E               	movlb	14	; () banked
  2834   0017D6  81DA               	bsf	218,0,b	;volatile
  2835   0017D8                     
  2836                           ; BSR set to: 14
  2837   0017D8  0012               	return		;funcret
  2838   0017DA                     __end_of_I2C_2_Master_Start:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _I2C_2_Master_Idle *****************
  2842 ;; Defined at:
  2843 ;;		line 22 in file "i2c.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;Total ram usage:        1 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 1
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_I2C_2_Master_Start
  2868 ;;		_I2C_2_Master_Stop
  2869 ;;		_I2C_2_Master_Write
  2870 ;;		_I2C_2_Master_RepStart
  2871 ;;		_I2C_2_Master_Read
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text20
  2876   0016DE                     __ptext20:
  2877                           	callstack 0
  2878   0016DE                     _I2C_2_Master_Idle:
  2879                           	callstack 26
  2880   0016DE                     l242:
  2881   0016DE  010E               	movlb	14	; () banked
  2882   0016E0  B5D8               	btfsc	216,2,b	;volatile
  2883   0016E2  EF75  F00B         	goto	u2041
  2884   0016E6  EF77  F00B         	goto	u2040
  2885   0016EA                     u2041:
  2886   0016EA  EF6F  F00B         	goto	l242
  2887   0016EE                     u2040:
  2888   0016EE                     
  2889                           ; BSR set to: 14
  2890   0016EE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2891   0016F2  0E1F               	movlw	31
  2892   0016F4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2893   0016F6  A4D8               	btfss	status,2,c
  2894   0016F8  EF80  F00B         	goto	u2051
  2895   0016FC  EF82  F00B         	goto	u2050
  2896   001700                     u2051:
  2897   001700  EF6F  F00B         	goto	l242
  2898   001704                     u2050:
  2899   001704                     
  2900                           ; BSR set to: 14
  2901   001704  0012               	return		;funcret
  2902   001706                     __end_of_I2C_2_Master_Idle:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _I2C_2_Master_Init *****************
  2906 ;; Defined at:
  2907 ;;		line 4 in file "i2c.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_color_click_init
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text21
  2936   0016B4                     __ptext21:
  2937                           	callstack 0
  2938   0016B4                     _I2C_2_Master_Init:
  2939                           	callstack 28
  2940   0016B4                     
  2941                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2942   0016B4  010E               	movlb	14	; () banked
  2943   0016B6  51D9               	movf	217,w,b	;volatile
  2944   0016B8  0BF0               	andlw	-16
  2945   0016BA  0908               	iorlw	8
  2946   0016BC  6FD9               	movwf	217,b	;volatile
  2947   0016BE                     
  2948                           ; BSR set to: 14
  2949                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2950   0016BE  8BD9               	bsf	217,5,b	;volatile
  2951                           
  2952                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2953   0016C0  0E9F               	movlw	159
  2954   0016C2  6FD6               	movwf	214,b	;volatile
  2955   0016C4                     
  2956                           ; BSR set to: 14
  2957                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2958   0016C4  8A84               	bsf	132,5,c	;volatile
  2959   0016C6                     
  2960                           ; BSR set to: 14
  2961                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2962   0016C6  8C84               	bsf	132,6,c	;volatile
  2963   0016C8                     
  2964                           ; BSR set to: 14
  2965                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2966   0016C8  9BA7               	bcf	167,5,b	;volatile
  2967   0016CA                     
  2968                           ; BSR set to: 14
  2969                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2970   0016CA  9DA7               	bcf	167,6,b	;volatile
  2971                           
  2972                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2973   0016CC  0E1D               	movlw	29
  2974   0016CE  6F1D               	movwf	29,b	;volatile
  2975                           
  2976                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2977   0016D0  0E1E               	movlw	30
  2978   0016D2  6F1C               	movwf	28,b	;volatile
  2979                           
  2980                           ;i2c.c: 18:   RD5PPS=0x1C;
  2981   0016D4  0E1C               	movlw	28
  2982   0016D6  6F6F               	movwf	111,b	;volatile
  2983                           
  2984                           ;i2c.c: 19:   RD6PPS=0x1B;
  2985   0016D8  0E1B               	movlw	27
  2986   0016DA  6F70               	movwf	112,b	;volatile
  2987   0016DC                     
  2988                           ; BSR set to: 14
  2989   0016DC  0012               	return		;funcret
  2990   0016DE                     __end_of_I2C_2_Master_Init:
  2991                           	callstack 0
  2992                           
  2993 ;; *************** function _buggy_lights_init *****************
  2994 ;; Defined at:
  2995 ;;		line 4 in file "buggy_lights.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		None
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 1
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text22
  3024   001576                     __ptext22:
  3025                           	callstack 0
  3026   001576                     _buggy_lights_init:
  3027                           	callstack 29
  3028   001576                     
  3029                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3030   001576  9884               	bcf	132,4,c	;volatile
  3031                           
  3032                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3033   001578  9288               	bcf	136,1,c	;volatile
  3034                           
  3035                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3036   00157A  9684               	bcf	132,3,c	;volatile
  3037                           
  3038                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3039   00157C  9086               	bcf	134,0,c	;volatile
  3040                           
  3041                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3042   00157E  9088               	bcf	136,0,c	;volatile
  3043                           
  3044                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  3045   001580  887C               	bsf	124,4,c	;volatile
  3046                           
  3047                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  3048   001582  8280               	bsf	128,1,c	;volatile
  3049                           
  3050                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  3051   001584  867C               	bsf	124,3,c	;volatile
  3052                           
  3053                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  3054   001586  807E               	bsf	126,0,c	;volatile
  3055                           
  3056                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  3057   001588  8080               	bsf	128,0,c	;volatile
  3058                           
  3059                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  3060   00158A  9E84               	bcf	132,7,c	;volatile
  3061                           
  3062                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  3063   00158C  9688               	bcf	136,3,c	;volatile
  3064                           
  3065                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  3066   00158E  8E7C               	bsf	124,7,c	;volatile
  3067                           
  3068                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  3069   001590  8680               	bsf	128,3,c	;volatile
  3070                           
  3071                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  3072   001592  9081               	bcf	129,0,c	;volatile
  3073                           
  3074                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  3075   001594  9483               	bcf	131,2,c	;volatile
  3076                           
  3077                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  3078   001596  9084               	bcf	132,0,c	;volatile
  3079                           
  3080                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  3081   001598  8079               	bsf	121,0,c	;volatile
  3082                           
  3083                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  3084   00159A  847B               	bsf	123,2,c	;volatile
  3085                           
  3086                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  3087   00159C  807C               	bsf	124,0,c	;volatile
  3088                           
  3089                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  3090   00159E  9281               	bcf	129,1,c	;volatile
  3091                           
  3092                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  3093   0015A0  9C83               	bcf	131,6,c	;volatile
  3094                           
  3095                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  3096   0015A2  9488               	bcf	136,2,c	;volatile
  3097                           
  3098                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  3099   0015A4  8279               	bsf	121,1,c	;volatile
  3100                           
  3101                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  3102   0015A6  8C7B               	bsf	123,6,c	;volatile
  3103                           
  3104                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  3105   0015A8  8480               	bsf	128,2,c	;volatile
  3106                           
  3107                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  3108   0015AA  9287               	bcf	135,1,c	;volatile
  3109                           
  3110                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  3111   0015AC  9881               	bcf	129,4,c	;volatile
  3112                           
  3113                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  3114   0015AE  9E86               	bcf	134,7,c	;volatile
  3115                           
  3116                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  3117   0015B0  827F               	bsf	127,1,c	;volatile
  3118                           
  3119                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  3120   0015B2  8879               	bsf	121,4,c	;volatile
  3121                           
  3122                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  3123   0015B4  8E7E               	bsf	126,7,c	;volatile
  3124                           
  3125                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  3126   0015B6  9087               	bcf	135,0,c	;volatile
  3127                           
  3128                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  3129   0015B8  9E85               	bcf	133,7,c	;volatile
  3130                           
  3131                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  3132   0015BA  9681               	bcf	129,3,c	;volatile
  3133                           
  3134                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  3135   0015BC  807F               	bsf	127,0,c	;volatile
  3136                           
  3137                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  3138   0015BE  8E7D               	bsf	125,7,c	;volatile
  3139                           
  3140                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  3141   0015C0  8679               	bsf	121,3,c	;volatile
  3142   0015C2  0012               	return		;funcret
  3143   0015C4                     __end_of_buggy_lights_init:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _Timer0_init *****************
  3147 ;; Defined at:
  3148 ;;		line 7 in file "timers.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text23
  3177   001706                     __ptext23:
  3178                           	callstack 0
  3179   001706                     _Timer0_init:
  3180                           	callstack 29
  3181   001706                     
  3182                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3183   001706  50D6               	movf	214,w,c	;volatile
  3184   001708  0B1F               	andlw	-225
  3185   00170A  0940               	iorlw	64
  3186   00170C  6ED6               	movwf	214,c	;volatile
  3187   00170E                     
  3188                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3189   00170E  88D6               	bsf	214,4,c	;volatile
  3190   001710                     
  3191                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3192   001710  88D5               	bsf	213,4,c	;volatile
  3193                           
  3194                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3195   001712  50D6               	movf	214,w,c	;volatile
  3196   001714  0BF0               	andlw	-16
  3197   001716  090E               	iorlw	14
  3198   001718  6ED6               	movwf	214,c	;volatile
  3199                           
  3200                           ;timers.c: 20:     TMR0H = 0;
  3201   00171A  0E00               	movlw	0
  3202   00171C  6ED4               	movwf	212,c	;volatile
  3203                           
  3204                           ;timers.c: 21:     TMR0L = 0;
  3205   00171E  0E00               	movlw	0
  3206   001720  6ED3               	movwf	211,c	;volatile
  3207   001722                     
  3208                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3209   001722  8ED5               	bsf	213,7,c	;volatile
  3210   001724                     
  3211                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3212   001724  010E               	movlb	14	; () banked
  3213   001726  8B29               	bsf	41,5,b	;volatile
  3214   001728                     
  3215                           ; BSR set to: 14
  3216                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3217   001728  8CF2               	bsf	242,6,c	;volatile
  3218   00172A                     
  3219                           ; BSR set to: 14
  3220                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3221   00172A  8EF2               	bsf	242,7,c	;volatile
  3222   00172C                     
  3223                           ; BSR set to: 14
  3224   00172C  0012               	return		;funcret
  3225   00172E                     __end_of_Timer0_init:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _ISR *****************
  3229 ;; Defined at:
  3230 ;;		line 29 in file "timers.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		None
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		Interrupt level 2
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	intcode
  3258   000008                     __pintcode:
  3259                           	callstack 0
  3260   000008                     _ISR:
  3261                           	callstack 24
  3262                           
  3263                           ; BSR set to: 14
  3264                           ;incstack = 0
  3265   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3266   00000A                     
  3267                           ;timers.c: 32:     if (PIR0bits.TMR0IF) {
  3268   00000A  010E               	movlb	14	; () banked
  3269   00000C  AB33               	btfss	51,5,b	;volatile
  3270   00000E  EF0B  F000         	goto	i2u80_41
  3271   000012  EF0D  F000         	goto	i2u80_40
  3272   000016                     i2u80_41:
  3273   000016  EF0E  F000         	goto	i2l577
  3274   00001A                     i2u80_40:
  3275   00001A                     
  3276                           ; BSR set to: 14
  3277                           ;timers.c: 40:         PIR0bits.TMR0IF = 0;
  3278   00001A  9B33               	bcf	51,5,b	;volatile
  3279   00001C                     i2l577:
  3280                           
  3281                           ; BSR set to: 14
  3282   00001C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3283   00001E  0011               	retfie		f
  3284   000020                     __end_of_ISR:
  3285                           	callstack 0
  3286                           
  3287                           	psect	rparam
  3288   000000                     
  3289                           	psect	temp
  3290   00005E                     btemp:
  3291                           	callstack 0
  3292   00005E                     	ds	1
  3293   000000                     int$flags	set	btemp
  3294   000000                     wtemp8	set	btemp+1
  3295   000000                     ttemp5	set	btemp+1
  3296   000000                     ttemp6	set	btemp+4
  3297   000000                     ttemp7	set	btemp+8
  3298                           
  3299                           	psect	idloc
  3300                           
  3301                           ;Config register IDLOC0 @ 0x200000
  3302                           ;	unspecified, using default values
  3303   200000                     	org	2097152
  3304   200000  FFFF               	dw	65535
  3305                           
  3306                           ;Config register IDLOC1 @ 0x200002
  3307                           ;	unspecified, using default values
  3308   200002                     	org	2097154
  3309   200002  FFFF               	dw	65535
  3310                           
  3311                           ;Config register IDLOC2 @ 0x200004
  3312                           ;	unspecified, using default values
  3313   200004                     	org	2097156
  3314   200004  FFFF               	dw	65535
  3315                           
  3316                           ;Config register IDLOC3 @ 0x200006
  3317                           ;	unspecified, using default values
  3318   200006                     	org	2097158
  3319   200006  FFFF               	dw	65535
  3320                           
  3321                           ;Config register IDLOC4 @ 0x200008
  3322                           ;	unspecified, using default values
  3323   200008                     	org	2097160
  3324   200008  FFFF               	dw	65535
  3325                           
  3326                           ;Config register IDLOC5 @ 0x20000A
  3327                           ;	unspecified, using default values
  3328   20000A                     	org	2097162
  3329   20000A  FFFF               	dw	65535
  3330                           
  3331                           ;Config register IDLOC6 @ 0x20000C
  3332                           ;	unspecified, using default values
  3333   20000C                     	org	2097164
  3334   20000C  FFFF               	dw	65535
  3335                           
  3336                           ;Config register IDLOC7 @ 0x20000E
  3337                           ;	unspecified, using default values
  3338   20000E                     	org	2097166
  3339   20000E  FFFF               	dw	65535
  3340                           
  3341                           	psect	config
  3342                           
  3343                           ;Config register CONFIG1L @ 0x300000
  3344                           ;	External Oscillator mode Selection bits
  3345                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3346                           ;	Power-up default value for COSC bits
  3347                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3348   300000                     	org	3145728
  3349   300000  AA                 	db	170
  3350                           
  3351                           ;Config register CONFIG1H @ 0x300001
  3352                           ;	unspecified, using default values
  3353                           ;	Clock Out Enable bit
  3354                           ;	CLKOUTEN = 0x1, unprogrammed default
  3355                           ;	Clock Switch Enable bit
  3356                           ;	CSWEN = 0x1, unprogrammed default
  3357                           ;	Fail-Safe Clock Monitor Enable bit
  3358                           ;	FCMEN = 0x1, unprogrammed default
  3359   300001                     	org	3145729
  3360   300001  FF                 	db	255
  3361                           
  3362                           ;Config register CONFIG2L @ 0x300002
  3363                           ;	unspecified, using default values
  3364                           ;	Master Clear Enable bit
  3365                           ;	MCLRE = 0x1, unprogrammed default
  3366                           ;	Power-up Timer Enable bit
  3367                           ;	PWRTE = 0x1, unprogrammed default
  3368                           ;	Low-power BOR enable bit
  3369                           ;	LPBOREN = 0x1, unprogrammed default
  3370                           ;	Brown-out Reset Enable bits
  3371                           ;	BOREN = 0x3, unprogrammed default
  3372   300002                     	org	3145730
  3373   300002  FF                 	db	255
  3374                           
  3375                           ;Config register CONFIG2H @ 0x300003
  3376                           ;	unspecified, using default values
  3377                           ;	Brown Out Reset Voltage selection bits
  3378                           ;	BORV = 0x3, unprogrammed default
  3379                           ;	ZCD Disable bit
  3380                           ;	ZCD = 0x1, unprogrammed default
  3381                           ;	PPSLOCK bit One-Way Set Enable bit
  3382                           ;	PPS1WAY = 0x1, unprogrammed default
  3383                           ;	Stack Full/Underflow Reset Enable bit
  3384                           ;	STVREN = 0x1, unprogrammed default
  3385                           ;	Debugger Enable bit
  3386                           ;	DEBUG = 0x1, unprogrammed default
  3387                           ;	Extended Instruction Set Enable bit
  3388                           ;	XINST = 0x1, unprogrammed default
  3389   300003                     	org	3145731
  3390   300003  FF                 	db	255
  3391                           
  3392                           ;Config register CONFIG3L @ 0x300004
  3393                           ;	WDT Period Select bits
  3394                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3395                           ;	WDT operating mode
  3396                           ;	WDTE = OFF, WDT Disabled
  3397   300004                     	org	3145732
  3398   300004  9F                 	db	159
  3399                           
  3400                           ;Config register CONFIG3H @ 0x300005
  3401                           ;	unspecified, using default values
  3402                           ;	WDT Window Select bits
  3403                           ;	WDTCWS = 0x7, unprogrammed default
  3404                           ;	WDT input clock selector
  3405                           ;	WDTCCS = 0x7, unprogrammed default
  3406   300005                     	org	3145733
  3407   300005  FF                 	db	255
  3408                           
  3409                           ;Config register CONFIG4L @ 0x300006
  3410                           ;	unspecified, using default values
  3411                           ;	Write Protection Block 0
  3412                           ;	WRT0 = 0x1, unprogrammed default
  3413                           ;	Write Protection Block 1
  3414                           ;	WRT1 = 0x1, unprogrammed default
  3415                           ;	Write Protection Block 2
  3416                           ;	WRT2 = 0x1, unprogrammed default
  3417                           ;	Write Protection Block 3
  3418                           ;	WRT3 = 0x1, unprogrammed default
  3419                           ;	Write Protection Block 3
  3420                           ;	WRT4 = 0x1, unprogrammed default
  3421                           ;	Write Protection Block 3
  3422                           ;	WRT5 = 0x1, unprogrammed default
  3423                           ;	Write Protection Block 3
  3424                           ;	WRT6 = 0x1, unprogrammed default
  3425                           ;	Write Protection Block 3
  3426                           ;	WRT7 = 0x1, unprogrammed default
  3427   300006                     	org	3145734
  3428   300006  FF                 	db	255
  3429                           
  3430                           ;Config register CONFIG4H @ 0x300007
  3431                           ;	unspecified, using default values
  3432                           ;	Configuration Register Write Protection bit
  3433                           ;	WRTC = 0x1, unprogrammed default
  3434                           ;	Boot Block Write Protection bit
  3435                           ;	WRTB = 0x1, unprogrammed default
  3436                           ;	Data EEPROM Write Protection bit
  3437                           ;	WRTD = 0x1, unprogrammed default
  3438                           ;	Scanner Enable bit
  3439                           ;	SCANE = 0x1, unprogrammed default
  3440                           ;	Low Voltage Programming Enable bit
  3441                           ;	LVP = 0x1, unprogrammed default
  3442   300007                     	org	3145735
  3443   300007  FF                 	db	255
  3444                           
  3445                           ;Config register CONFIG5L @ 0x300008
  3446                           ;	unspecified, using default values
  3447                           ;	UserNVM Program Memory Code Protection bit
  3448                           ;	CP = 0x1, unprogrammed default
  3449                           ;	DataNVM Memory Code Protection bit
  3450                           ;	CPD = 0x1, unprogrammed default
  3451   300008                     	org	3145736
  3452   300008  FF                 	db	255
  3453                           
  3454                           ;Config register CONFIG5H @ 0x300009
  3455                           ;	unspecified, using default values
  3456   300009                     	org	3145737
  3457   300009  FF                 	db	255
  3458                           
  3459                           ;Config register CONFIG6L @ 0x30000A
  3460                           ;	unspecified, using default values
  3461                           ;	Table Read Protection Block 0
  3462                           ;	EBTR0 = 0x1, unprogrammed default
  3463                           ;	Table Read Protection Block 1
  3464                           ;	EBTR1 = 0x1, unprogrammed default
  3465                           ;	Table Read Protection Block 2
  3466                           ;	EBTR2 = 0x1, unprogrammed default
  3467                           ;	Table Read Protection Block 3
  3468                           ;	EBTR3 = 0x1, unprogrammed default
  3469                           ;	Table Read Protection Block 4
  3470                           ;	EBTR4 = 0x1, unprogrammed default
  3471                           ;	Table Read Protection Block 5
  3472                           ;	EBTR5 = 0x1, unprogrammed default
  3473                           ;	Table Read Protection Block 6
  3474                           ;	EBTR6 = 0x1, unprogrammed default
  3475                           ;	Table Read Protection Block 7
  3476                           ;	EBTR7 = 0x1, unprogrammed default
  3477   30000A                     	org	3145738
  3478   30000A  FF                 	db	255
  3479                           
  3480                           ;Config register CONFIG6H @ 0x30000B
  3481                           ;	unspecified, using default values
  3482                           ;	Boot Block Table Read Protection bit
  3483                           ;	EBTRB = 0x1, unprogrammed default
  3484   30000B                     	org	3145739
  3485   30000B  FF                 	db	255
  3486                           tosu	equ	0xFFF
  3487                           tosh	equ	0xFFE
  3488                           tosl	equ	0xFFD
  3489                           stkptr	equ	0xFFC
  3490                           pclatu	equ	0xFFB
  3491                           pclath	equ	0xFFA
  3492                           pcl	equ	0xFF9
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           indf0	equ	0xFEF
  3500                           postinc0	equ	0xFEE
  3501                           postdec0	equ	0xFED
  3502                           preinc0	equ	0xFEC
  3503                           plusw0	equ	0xFEB
  3504                           fsr0h	equ	0xFEA
  3505                           fsr0l	equ	0xFE9
  3506                           wreg	equ	0xFE8
  3507                           indf1	equ	0xFE7
  3508                           postinc1	equ	0xFE6
  3509                           postdec1	equ	0xFE5
  3510                           preinc1	equ	0xFE4
  3511                           plusw1	equ	0xFE3
  3512                           fsr1h	equ	0xFE2
  3513                           fsr1l	equ	0xFE1
  3514                           bsr	equ	0xFE0
  3515                           indf2	equ	0xFDF
  3516                           postinc2	equ	0xFDE
  3517                           postdec2	equ	0xFDD
  3518                           preinc2	equ	0xFDC
  3519                           plusw2	equ	0xFDB
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        82
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      93
    BANK0           160      0     119
    BANK1           256    164     244
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2546$buffer	PTR unsigned char  size(2) Largest target is 0

    S2546$source	PTR const unsigned char  size(2) Largest target is 0

    sendArrayCharSerial4@arr	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sendArrayCharSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sendArrayCharSerial4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   11518
                                             66 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
               _sendArrayCharSerial4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    5258
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendArrayCharSerial4                               167   165      2    5304
                                             47 COMRAM     3     1      2
                                              0 BANK1    164   164      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    4601
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3911
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3450
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     366
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _sendArrayCharSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendIntSerial4
     _sendStringSerial4
     _sprintf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      F4       7       95.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C8      62        0.0%
DATA                 0      0     1C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 11:33:53 2024

                _turn180Delay 0066               _trail_timer_low 0074        ??_sendArrayCharSerial4 0032  
                          l31 15C2                            l53 16B2                            l56 176E  
                ___awdiv@sign 0006              _trail_timer_high 0088                           l144 13C2  
                         l401 1790                           l242 16DE                           l410 151E  
                         l404 17A4                           l245 1704                           l413 174E  
                         l254 17CE                           l239 16DC                           l248 17D8  
                         l257 17C4                           l418 14BC                           l392 178C  
                         l811 11C8                           l824 1332                           l569 172C  
                         _ISR 0008                           _abs 164C                  ___awmod@sign 0006  
                         wreg 0FE8                   _squareDelay 0062                          ?_ISR 0001  
                        ?_abs 0007                          l1300 0FFE                          l1310 1666  
                        l1313 167E                          l1305 156C                          l1306 1574  
                        l3100 1176                          l1325 1282                          l3110 11A2  
                        l3102 117C                          l3104 1192                          l3112 11A8  
                        l3120 1284                          l1336 17DC                          l3200 0ED6  
                        l3114 11B8                          l3106 119A                          l3130 12B0  
                        l3122 1288                          l3210 0F48                          l3202 0F06  
                        l1258 160E                          l3300 1680                          l3116 11C0  
                        l3108 119C                          l3140 12E8                          l3132 12B8  
                        l3124 1296                          l3220 0F98                          l3212 0F58  
                        l3204 0F22                          l3302 1684                          l3150 1322  
                        l3142 12FE                          l3134 12CA                          l3126 129E  
                        l3214 0F68                          l3222 0F9A                          l3206 0F26  
                        l3230 0FCC                          l3240 17D4                          l3304 168E  
                        l3080 1118                          l3152 132A                          l3144 1306  
                        l3136 12D2                          l3128 12A2                          l3160 11EA  
                        l3232 0FEE                          l3216 0F76                          l3208 0F38  
                        l3224 0FB8                          l3400 14A0                          l3242 17BC  
                        l3306 169E                          l3250 1790                          l3090 113E  
                        l3082 1120                          l3146 130C                          l3138 12DA  
                        l3170 164C                          l3162 11F4                          l3234 0FF6  
                        l3226 0FC0                          l3218 0F7E                          l1299 0FAC  
                        l3244 17C0                          l3308 16A8                          l3340 136E  
                        l3252 17A0                          l3092 1146                          l3084 1124  
                        l3076 1106                          l3148 1312                          l3172 165A  
                        l3164 1210                          l3156 11CA                          l3180 0E12  
                        l3260 154C                          l3270 16C8                          l3262 16B4  
                        l3174 16DE                          l3238 17D0                          l3246 17C6  
                        l3350 13AA                          l3342 1392                          l3334 1334  
                        l3094 1158                          l3086 1132                          l3078 110A  
                        l3166 1242                          l3158 11DA                          l3190 0E5C  
                        l3182 0E38                          l3254 1520                          l3430 1028  
                        l3422 1000                          l3272 16CA                          l3264 16BE  
                        l3176 16EE                          l3248 17CA                          l3352 13B4  
                        l3344 139C                          l3336 1344                          l3360 177A  
                        l3280 14E8                          l3096 1160                          l3088 113A  
                        l3192 0E7C                          l3184 0E40                          l3256 1524  
                        l3440 1048                          l3432 102C                          l3424 1018  
                        l3370 1706                          l3266 16C4                          l3274 1752  
                        l3354 13B6                          l3346 139E                          l3338 136A  
                        l3362 177C                          l3282 14EC                          l3098 1168  
                        l3194 0E9C                          l3186 0E4E                          l3178 0E0A  
                        l3258 1532                          l3290 15E0                          l3450 1064  
                        l3442 104C                          l3434 1030                          l3426 1018  
                        l3380 1728                          l3372 170E                          l3268 16C6  
                        l3356 13C0                          l3348 13A8                          l3364 1786  
                        l3276 14BE                          l3196 0EB4                          l3188 0E52  
                        l3292 15F8                          l3284 15C4                          l3460 107C  
                        l3452 106C                          l3444 1050                          l3436 1038  
                        l3428 1024                          l3382 172A                          l3374 1710  
                        l3366 1788                          l3358 1770                          l3278 14C2  
                        l3198 0EBE                          l3294 1606                          l3286 15D0  
                        l3470 1090                          l3462 107E                          l3454 1070  
                        l3446 1054                          l3438 1040                          l3376 1722  
                        l3368 178A                          l3288 15D8                          l3384 172E  
                        l3480 10DA                          l3472 109A                          l3464 1080  
                        l3456 1074                          l3448 105C                          l3378 1724  
                        l3298 1576                          l3394 1456                          l3386 1744  
                        l3482 10E6                          l3474 10A8                          l3466 1084  
                        l3458 1078                          l3396 1486                          l3388 1448  
                        l3476 10B2                          l3468 1086                          l3398 148A  
                        l3478 10B8                          STR_1 0E01                          STR_2 0E06  
                        STR_3 0E06                          STR_4 0E03                          u2000 11EA  
                        u2001 11E6                          u2010 1210                          u2011 120C  
                        u2020 1242                          u2100 0ED4                          u2021 123E  
                        u2030 165A                          u2110 0F38                          u2031 1656  
                        u2111 0F34                          u2040 16EE                          u2200 151E  
                        u2120 0F48                          u2041 16EA                          u2201 151A  
                        u2121 0F44                          u2050 1704                          u2130 0F58  
                        u2210 14A0                          u2051 1700                          u2131 0F54  
                        u2211 149C                          u2140 0F68                          u2060 0E38  
                        u2141 0F64                          u2061 0E34                          u2150 0FAC  
                        u2070 0E7C                          u2151 0FA8                          u2071 0E78  
                        u2160 17A0                          u2080 0E9C                          u2240 10A8  
                _BAUD4CONbits 0EE9                          u2161 179C                          u2081 0E98  
                        u2241 10A4                          u2090 0ED2                          u2170 156C  
                        u2250 10CA                          u2091 0ECC                          u2171 1568  
                        u2251 10C2                          u2180 14E4                          u2190 150E  
                        _T2PR 0FBC                          u2187 14DA                          u1900 1176  
                        u2268 10CC                          u2197 1504                          u1901 1172  
                        u2277 100A                          u1910 1192                          u1911 118E  
                        u2287 10F0                          u1920 11B8                          u2297 1694  
                        u1921 11B4                          u1930 1296                          u1931 1292  
                        u1940 12B0                          u1941 12AC                          u1870 1118  
                        u1950 12CA                          u1871 1114                          u1951 12C6  
                        u1880 1132                          u1960 12E8                          u1881 112E  
                        u1961 12E4                          u1890 1158                          u1970 12FE  
                        u1891 1154                          u1971 12FA                          u1980 1322  
                        u1981 131E                          u1990 11DA                          u1991 11D6  
                        abs@a 0007                          _dbuf 009C                          _main 1000  
                        _prec 00D4                          _nout 00D0                          fsr0h 0FEA  
                        fsr1h 0FE2                          indf0 0FEF                          fsr2h 0FDA  
                        fsr0l 0FE9                          indf2 0FDF                          fsr1l 0FE1  
                        fsr2l 0FD9                          btemp 005E                          start 0020  
                ___param_bank 0000                         ??_ISR 0001                         ??_abs 0009  
              _sendIntSerial4 172E                         ?_main 0001            _timer_high_pointer 0071  
             __end_of___awdiv 11CA               __end_of___awmod 1334               ___awdiv@divisor 0003  
                       i2l576 001A                         i2l577 001C               ___awdiv@counter 0005  
                vfpfcnvrt@cnt 0010                  vfpfcnvrt@fmt 000C                         _TMR0H 0FD4  
                       _TMR0L 0FD3       __end_of_sendCharSerial4 17A6    __end_of_I2C_2_Master_Start 17DA  
  __end_of_I2C_2_Master_Write 17C6                   _turningGear 0072                         _flags 00D6  
                       _fputc 11CA                         _width 00D2                         _putch 17DC  
           _turnRight135Delay 0068                         tablat 0FF5               _turnLeft90Delay 006E  
                       ttemp5 005F                         ttemp6 0062                         ttemp7 0066  
                       status 0FD8                         wtemp8 005F               __end_of_sprintf 1610  
             __initialization 13C4                  __end_of_main 1106        __end_of_sendIntSerial4 1750  
                      ??_main 0043                 __activetblptr 0003                        ?_fputc 0001  
                      _CCPR1H 0FAA                        _CCPR2H 0FA6                        _CCPR3H 0F25  
                      _CCPR4H 0F21              ___awdiv@dividend 0001                        ?_putch 0001  
                      _RC0PPS 0E62                        _RC4REG 0EE3                        _RE2PPS 0E74  
                      _RD5PPS 0E6F                        _RC7PPS 0E69                        _RD6PPS 0E70  
                      _RE4PPS 0E76                        i2l2104 000A                        _RG6PPS 0E88  
               vfpfcnvrt@done 000F      __end_of_color_click_init 16B4                        _RX4PPS 0E15  
                      _TX4REG 0EE4              _turnLeft135Delay 006A                 ??_Timer0_init 0001  
                _CCPTMRS0bits 0FAD     sendArrayCharSerial4@index 01A1                  vfprintf@cfmt 001B  
                   ??___awdiv 0005                     ??___awmod 0005               ?_sendIntSerial4 0030  
                      clear_0 1422                        clear_1 142E              ___awdiv@quotient 0007  
             ___awmod@divisor 0003                        isa$std 0001               ___awmod@counter 0005  
                      fputc@c 0001                  __pdataCOMRAM 005C             _timer_low_pointer 0070  
                __mediumconst 0000                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8              ?_sendCharSerial4 0001                        putch@c 0001  
            __end_of_vfprintf 1576             ??_initDCmotorsPWM 0003                     ??_sprintf 0021  
           _buggy_lights_init 1576                    __accesstop 0060       __end_of__initialization 143E  
          ?_buggy_lights_init 0001                 ___rparam_used 0001                __pcstackCOMRAM 0001  
                __pidataBANK0 1610                  __pidataBANK1 17A6           ??_buggy_lights_init 0001  
               __end_of_fputc 1284                 __end_of_putch 17DE           __end_of_Timer0_init 172E  
                     ??_fputc 0004     __end_of_buggy_lights_init 15C4                       ??_putch 0001  
                  __pbssBANK0 009C                    __pbssBANK1 01A4             _color_writetoaddr 1750  
                _T2CLKCONbits 0FBF            ?_color_writetoaddr 0003           ??_color_writetoaddr 0004  
                     _SP4BRGH 0EE6                       _SP4BRGL 0EE5                       i2u80_40 001A  
                     i2u80_41 0016                       _SSP2ADD 0ED6                       _SSP2BUF 0ED5  
      color_writetoaddr@value 0003     __end_of_color_writetoaddr 1770            _I2C_2_Master_Start 17D0  
                  _initUSART4 1770            _I2C_2_Master_Write 17BA                       __Hparam 0000  
                     __Lparam 0000                   _Timer0_init 1706       sendStringSerial4@string 0002  
                     ___awdiv 1106                       ___awmod 1284           ?_I2C_2_Master_Start 0001  
         ?_I2C_2_Master_Write 0001                     ?_vfprintf 0018                  __psmallconst 0E00  
       sendArrayCharSerial4@i 01A2                       __pcinit 13C4                       __ramtop 0E00  
                     __ptext0 1000                       __ptext1 172E                       __ptext2 1448  
                     __ptext3 15C4                       __ptext4 1520                       __ptext5 0E0A  
                     __ptext6 11CA                       __ptext7 17DC                       __ptext8 164C  
                     __ptext9 1284                     _T2CONbits 0FBD              ___awmod@dividend 0001  
                   _T2HLTbits 0FBE                 _RxBufWriteCnt 005B                       _sprintf 15C4  
        ??_I2C_2_Master_Start 0002          ??_I2C_2_Master_Write 0002          end_of_initialization 143E  
                     fputc@fp 0003             ?_color_click_init 0001            ??_color_click_init 0005  
            ??_sendIntSerial4 0032             __end_of_vfpfcnvrt 1000                       postdec1 0FE5  
                     postdec2 0FDD                       postinc0 0FEE                       postinc1 0FE6  
                     postinc2 0FDE              vfpfcnvrt@convarg 0013                    ??_vfprintf 001B  
             _initDCmotorsPWM 1334          sendIntSerial4@string 0032                     _PORTFbits 0F8E  
                   _TRISAbits 0F81                     _TRISCbits 0F83                     _TRISDbits 0F84  
                   _TRISEbits 0F85                     _TRISFbits 0F86                     _TRISGbits 0F87  
                   _TRISHbits 0F88      color_writetoaddr@address 0004                   _CCP1CONbits 0FAB  
                _EUSART4RXbuf 00BC                  _EUSART4TXbuf 01A4                   _CCP2CONbits 0FA7  
                 _CCP3CONbits 0F26                   ?_initUSART4 0001                   _CCP4CONbits 0F22  
   sendCharSerial4@charToSend 0001                    main@motorL 0045                    main@motorR 004E  
                 vfpfcnvrt@ap 000D                   vfpfcnvrt@cp 0012                   vfpfcnvrt@fp 000B  
               __pidataCOMRAM 17DA           start_initialization 13C4                   __end_of_ISR 0020  
                 __end_of_abs 1680                 _TxBufWriteCnt 0059              _turnRight90Delay 006C  
     __end_of_initDCmotorsPWM 13C4                   vfprintf@fmt 0019                   __pdataBANK0 0060  
                 __pdataBANK1 01E0                   __pbssCOMRAM 0057                 __pcstackBANK1 0100  
                   _backtrack 0057  __end_of_sendArrayCharSerial4 14BE       sendArrayCharSerial4@arr 0030  
                ?_Timer0_init 0001                     __pintcode 0008                      ?___awdiv 0001  
                    ?___awmod 0001                   __smallconst 0E00             _I2C_2_Master_Idle 16DE  
           _I2C_2_Master_Init 16B4             _I2C_2_Master_Stop 17C6                  _RxBufReadCnt 005A  
          ?_I2C_2_Master_Idle 0001            ?_I2C_2_Master_Init 0001            ?_I2C_2_Master_Stop 0001  
               _headbuttDelay 0064      initDCmotorsPWM@PWMperiod 0001                      ?_sprintf 001C  
                   _rampDelay 005D             _sendStringSerial4 14BE           ??_I2C_2_Master_Idle 0001  
         ??_I2C_2_Master_Init 0001                      _LATAbits 0F79           ??_I2C_2_Master_Stop 0002  
                    _LATCbits 0F7B                      _LATDbits 0F7C                      _LATEbits 0F7D  
                    _LATFbits 0F7E                      _LATGbits 0F7F                      _LATHbits 0F80  
                    _PIE0bits 0E29            ?_sendStringSerial4 0002                      _PIE4bits 0E2D  
                    _PIR0bits 0E33                      _PIR4bits 0E37              ?_initDCmotorsPWM 0001  
           ??_sendCharSerial4 0001                      _SSP2CON2 0EDA           ??_sendStringSerial4 0004  
                    _SSP2STAT 0ED8                     _vfpfcnvrt 0E0A     __end_of_I2C_2_Master_Idle 1706  
   __end_of_I2C_2_Master_Init 16DE     __end_of_I2C_2_Master_Stop 17D0   I2C_2_Master_Write@data_byte 0002  
                _TxBufReadCnt 0058                    vfpfcnvrt@c 0017                     copy_data0 13D8  
                   copy_data1 13F8     __end_of_sendStringSerial4 1520                  ??_initUSART4 0001  
                    __Hrparam 0000                    vfprintf@ap 001A                      __Lrparam 0000  
                  vfprintf@fp 0018                    ?_vfpfcnvrt 000B          _sendArrayCharSerial4 1448  
                  _ANSELDbits 0EA7                    _ANSELFbits 0EB4                    sprintf@fmt 001E  
                  sprintf@ret 0021                    _T0CON0bits 0FD5                    _T0CON1bits 0FD6  
          __end_of_initUSART4 178E                      __ptext10 1106                      __ptext11 14BE  
                    __ptext20 16DE                      __ptext12 178E                      __ptext21 16B4  
                    __ptext13 1770                      __ptext22 1576                      __ptext14 1334  
                    __ptext23 1706                      __ptext15 1680                      __ptext16 1750  
                    __ptext17 17BA                      __ptext18 17C6                      __ptext19 17D0  
                _SSP2CON1bits 0ED9                  _SSP2CON2bits 0EDA                      isa$xinst 0000  
                  _RC4STAbits 0EE7                      int$flags 005E                      _vfprintf 1520  
       ?_sendArrayCharSerial4 0030                    _INTCONbits 0FF2                      intlevel2 0000  
                   sprintf@ap 0023                  _topGearRight 0073             _manoeuvre_pointer 0060  
                 ??_vfpfcnvrt 000E              _color_click_init 1680         sendIntSerial4@integer 0030  
                 _topGearLeft 005C                      sprintf@f 0024                      sprintf@s 001C  
                  _SSP2DATPPS 0E1D                    _SSP2CLKPPS 0E1C               _trail_manoeuvre 01E0  
                  _TX4STAbits 0EE8               _sendCharSerial4 178E   sendArrayCharSerial4@tempStr 0100  
