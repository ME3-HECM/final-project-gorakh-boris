

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 12:01:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 18/08/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F67K40 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   00175A                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _manoeuvre_pointer
    87   00175A  A4                 	db	low _trail_manoeuvre
    88   00175B  01                 	db	high _trail_manoeuvre
    89                           
    90                           ;initializer for _timer_low_pointer
    91   00175C  B8                 	db	low _trail_timer_low
    92   00175D  01                 	db	high _trail_timer_low
    93                           
    94                           ;initializer for _timer_high_pointer
    95   00175E  CC                 	db	low _trail_timer_high
    96   00175F  01                 	db	high _trail_timer_high
    97                           
    98                           ;initializer for _turnRight90Delay
    99   001760  00AF               	dw	175
   100                           
   101                           ;initializer for _turnLeft90Delay
   102   001762  00AF               	dw	175
   103                           
   104                           ;initializer for _turningGear
   105   001764  2A                 	db	42
   106                           
   107                           ;initializer for _topGearRight
   108   001765  14                 	db	20
   109                           
   110                           ;initializer for _topGearLeft
   111   001766  14                 	db	20
   112                           
   113                           ;initializer for _rampDelay
   114   001767  08                 	db	8
   115                           
   116                           	psect	idataBANK0
   117   001774                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _squareDelay
   121   001774  012C               	dw	300
   122                           
   123                           ;initializer for _headbuttDelay
   124   001776  0046               	dw	70
   125                           
   126                           ;initializer for _turn180Delay
   127   001778  01FE               	dw	510
   128                           
   129                           ;initializer for _turnRight135Delay
   130   00177A  012C               	dw	300
   131                           
   132                           ;initializer for _turnLeft135Delay
   133   00177C  012C               	dw	300
   134   000000                     _TX4REG	set	3812
   135   000000                     _RC4STAbits	set	3815
   136   000000                     _SP4BRGH	set	3814
   137   000000                     _LATEbits	set	3965
   138   000000                     _TRISEbits	set	3973
   139   000000                     _LATGbits	set	3967
   140   000000                     _TRISGbits	set	3975
   141   000000                     _LATFbits	set	3966
   142   000000                     _LATHbits	set	3968
   143   000000                     _TRISFbits	set	3974
   144   000000                     _TRISHbits	set	3976
   145   000000                     _SSP2CON2bits	set	3802
   146   000000                     _RX4PPS	set	3605
   147   000000                     _SSP2CLKPPS	set	3612
   148   000000                     _SSP2DATPPS	set	3613
   149   000000                     _RC7PPS	set	3689
   150   000000                     _RE2PPS	set	3700
   151   000000                     _LATAbits	set	3961
   152   000000                     _LATDbits	set	3964
   153   000000                     _TRISDbits	set	3972
   154   000000                     _PORTFbits	set	3982
   155   000000                     _T2PR	set	4028
   156   000000                     _T2CONbits	set	4029
   157   000000                     _CCPR2H	set	4006
   158   000000                     _CCPR1H	set	4010
   159   000000                     _TRISCbits	set	3971
   160   000000                     _TRISAbits	set	3969
   161   000000                     _LATCbits	set	3963
   162   000000                     _RE4PPS	set	3702
   163   000000                     _RG6PPS	set	3720
   164   000000                     _RD5PPS	set	3695
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _CCPR4H	set	3873
   169   000000                     _CCPR3H	set	3877
   170   000000                     _TMR0L	set	4051
   171   000000                     _TMR0H	set	4052
   172   000000                     _T0CON0bits	set	4053
   173   000000                     _T0CON1bits	set	4054
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181   000000                     _RC4REG	set	3811
   182   000000                     _SP4BRGL	set	3813
   183   000000                     _TX4STAbits	set	3816
   184   000000                     _BAUD4CONbits	set	3817
   185   000000                     _SSP2CON2	set	3802
   186   000000                     _SSP2STAT	set	3800
   187   000000                     _ANSELFbits	set	3764
   188   000000                     _SSP2BUF	set	3797
   189   000000                     _PIE0bits	set	3625
   190   000000                     _PIE4bits	set	3629
   191   000000                     _PIR4bits	set	3639
   192   000000                     _RC0PPS	set	3682
   193   000000                     _RD6PPS	set	3696
   194   000000                     _PIR0bits	set	3635
   195   000000                     _INTCONbits	set	4082
   196                           
   197                           	psect	smallconst
   198   000E00                     __psmallconst:
   199                           	callstack 0
   200   000E00  00                 	db	0
   201   000E01                     STR_1:
   202                           
   203                           ; BSR set to: 14
   204   000E01  25                 	db	37
   205   000E02  64                 	db	100	;'d'
   206   000E03  20                 	db	32
   207   000E04  0D                 	db	13
   208   000E05  00                 	db	0
   209   000E06                     STR_2:
   210                           
   211                           ; BSR set to: 14
   212   000E06  25                 	db	37
   213   000E07  64                 	db	100	;'d'
   214   000E08  00                 	db	0
   215   000E09  00                 	db	0	; dummy byte at the end
   216   000000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   001432                     __pcinit:
   221                           	callstack 0
   222   001432                     start_initialization:
   223                           	callstack 0
   224   001432                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to BANK0 (10 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229   001432  0E74               	movlw	low __pidataBANK0
   230   001434  6EF6               	movwf	tblptrl,c
   231   001436  0E17               	movlw	high __pidataBANK0
   232   001438  6EF7               	movwf	tblptrh,c
   233   00143A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234   00143C  6EF8               	movwf	tblptru,c
   235   00143E  EE00  F0D4         	lfsr	0,__pdataBANK0
   236   001442  EE10 F00A          	lfsr	1,10
   237   001446                     copy_data0:
   238   001446  0009               	tblrd		*+
   239   001448  CFF5 FFEE          	movff	tablat,postinc0
   240   00144C  50E5               	movf	postdec1,w,c
   241   00144E  50E1               	movf	fsr1l,w,c
   242   001450  E1FA               	bnz	copy_data0
   243                           
   244                           ; Initialize objects allocated to COMRAM (14 bytes)
   245                           ; load TBLPTR registers with __pidataCOMRAM
   246   001452  0E5A               	movlw	low __pidataCOMRAM
   247   001454  6EF6               	movwf	tblptrl,c
   248   001456  0E17               	movlw	high __pidataCOMRAM
   249   001458  6EF7               	movwf	tblptrh,c
   250   00145A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   251   00145C  6EF8               	movwf	tblptru,c
   252   00145E  EE00  F047         	lfsr	0,__pdataCOMRAM
   253   001462  EE10 F00E          	lfsr	1,14
   254   001466                     copy_data1:
   255   001466  0009               	tblrd		*+
   256   001468  CFF5 FFEE          	movff	tablat,postinc0
   257   00146C  50E5               	movf	postdec1,w,c
   258   00146E  50E1               	movf	fsr1l,w,c
   259   001470  E1FA               	bnz	copy_data1
   260                           
   261                           ; Clear objects allocated to BANK1 (60 bytes)
   262   001472  EE01  F0A4         	lfsr	0,__pbssBANK1
   263   001476  0E3C               	movlw	60
   264   001478                     clear_0:
   265   001478  6AEE               	clrf	postinc0,c
   266   00147A  06E8               	decf	wreg,f,c
   267   00147C  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (116 bytes)
   270   00147E  EE00  F060         	lfsr	0,__pbssBANK0
   271   001482  0E74               	movlw	116
   272   001484                     clear_1:
   273   001484  6AEE               	clrf	postinc0,c
   274   001486  06E8               	decf	wreg,f,c
   275   001488  E1FD               	bnz	clear_1
   276                           
   277                           ; Clear objects allocated to COMRAM (9 bytes)
   278   00148A  EE00  F055         	lfsr	0,__pbssCOMRAM
   279   00148E  0E09               	movlw	9
   280   001490                     clear_2:
   281   001490  6AEE               	clrf	postinc0,c
   282   001492  06E8               	decf	wreg,f,c
   283   001494  E1FD               	bnz	clear_2
   284   001496                     end_of_initialization:
   285                           	callstack 0
   286   001496                     __end_of__initialization:
   287                           	callstack 0
   288   001496  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289   001498  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290   00149A  0100               	movlb	0
   291   00149C  EF00  F008         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294   000055                     __pbssCOMRAM:
   295                           	callstack 0
   296   000055                     _nout:
   297                           	callstack 0
   298   000055                     	ds	2
   299   000057                     _flags:
   300                           	callstack 0
   301   000057                     	ds	1
   302   000058                     _manoeuvre_count:
   303                           	callstack 0
   304   000058                     	ds	1
   305   000059                     _backtrack:
   306                           	callstack 0
   307   000059                     	ds	1
   308   00005A                     _TxBufReadCnt:
   309                           	callstack 0
   310   00005A                     	ds	1
   311   00005B                     _TxBufWriteCnt:
   312                           	callstack 0
   313   00005B                     	ds	1
   314   00005C                     _RxBufReadCnt:
   315                           	callstack 0
   316   00005C                     	ds	1
   317   00005D                     _RxBufWriteCnt:
   318                           	callstack 0
   319   00005D                     	ds	1
   320                           
   321                           	psect	dataCOMRAM
   322   000047                     __pdataCOMRAM:
   323                           	callstack 0
   324   000047                     _manoeuvre_pointer:
   325                           	callstack 0
   326   000047                     	ds	2
   327   000049                     _timer_low_pointer:
   328                           	callstack 0
   329   000049                     	ds	2
   330   00004B                     _timer_high_pointer:
   331                           	callstack 0
   332   00004B                     	ds	2
   333   00004D                     _turnRight90Delay:
   334                           	callstack 0
   335   00004D                     	ds	2
   336   00004F                     _turnLeft90Delay:
   337                           	callstack 0
   338   00004F                     	ds	2
   339   000051                     _turningGear:
   340                           	callstack 0
   341   000051                     	ds	1
   342   000052                     _topGearRight:
   343                           	callstack 0
   344   000052                     	ds	1
   345   000053                     _topGearLeft:
   346                           	callstack 0
   347   000053                     	ds	1
   348   000054                     _rampDelay:
   349                           	callstack 0
   350   000054                     	ds	1
   351                           
   352                           	psect	bssBANK0
   353   000060                     __pbssBANK0:
   354                           	callstack 0
   355   000060                     _EUSART4TXbuf:
   356                           	callstack 0
   357   000060                     	ds	60
   358   00009C                     _dbuf:
   359                           	callstack 0
   360   00009C                     	ds	32
   361   0000BC                     _EUSART4RXbuf:
   362                           	callstack 0
   363   0000BC                     	ds	20
   364   0000D0                     _width:
   365                           	callstack 0
   366   0000D0                     	ds	2
   367   0000D2                     _prec:
   368                           	callstack 0
   369   0000D2                     	ds	2
   370                           
   371                           	psect	dataBANK0
   372   0000D4                     __pdataBANK0:
   373                           	callstack 0
   374   0000D4                     _squareDelay:
   375                           	callstack 0
   376   0000D4                     	ds	2
   377   0000D6                     _headbuttDelay:
   378                           	callstack 0
   379   0000D6                     	ds	2
   380   0000D8                     _turn180Delay:
   381                           	callstack 0
   382   0000D8                     	ds	2
   383   0000DA                     _turnRight135Delay:
   384                           	callstack 0
   385   0000DA                     	ds	2
   386   0000DC                     _turnLeft135Delay:
   387                           	callstack 0
   388   0000DC                     	ds	2
   389                           
   390                           	psect	bssBANK1
   391   0001A4                     __pbssBANK1:
   392                           	callstack 0
   393   0001A4                     _trail_manoeuvre:
   394                           	callstack 0
   395   0001A4                     	ds	20
   396   0001B8                     _trail_timer_low:
   397                           	callstack 0
   398   0001B8                     	ds	20
   399   0001CC                     _trail_timer_high:
   400                           	callstack 0
   401   0001CC                     	ds	20
   402                           
   403                           	psect	cstackBANK1
   404   000100                     __pcstackBANK1:
   405                           	callstack 0
   406   000100                     sendArrayCharSerial4@tempStr:
   407                           	callstack 0
   408                           
   409                           ; 161 bytes @ 0x0
   410   000100                     	ds	161
   411   0001A1                     sendArrayCharSerial4@index:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xA1
   415   0001A1                     	ds	1
   416   0001A2                     sendArrayCharSerial4@i:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0xA2
   420   0001A2                     	ds	2
   421                           
   422                           	psect	cstackCOMRAM
   423   000001                     __pcstackCOMRAM:
   424                           	callstack 0
   425   000001                     ??_I2C_2_Master_Idle:
   426   000001                     ?___awdiv:
   427                           	callstack 0
   428   000001                     ?___awmod:
   429                           	callstack 0
   430   000001                     sendCharSerial4@charToSend:
   431                           	callstack 0
   432   000001                     initDCmotorsPWM@PWMperiod:
   433                           	callstack 0
   434   000001                     ___awdiv@dividend:
   435                           	callstack 0
   436   000001                     ___awmod@dividend:
   437                           	callstack 0
   438   000001                     fputc@c:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x0
   442   000001                     	ds	1
   443   000002                     I2C_2_Master_Write@data_byte:
   444                           	callstack 0
   445   000002                     sendStringSerial4@string:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1
   449   000002                     	ds	1
   450   000003                     color_writetoaddr@value:
   451                           	callstack 0
   452   000003                     fputc@fp:
   453                           	callstack 0
   454   000003                     ___awdiv@divisor:
   455                           	callstack 0
   456   000003                     ___awmod@divisor:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460   000003                     	ds	1
   461   000004                     ??_fputc:
   462   000004                     color_writetoaddr@address:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x3
   466   000004                     	ds	1
   467   000005                     ??_color_click_init:
   468   000005                     ___awdiv@counter:
   469                           	callstack 0
   470   000005                     ___awmod@counter:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x4
   474   000005                     	ds	1
   475   000006                     ___awdiv@sign:
   476                           	callstack 0
   477   000006                     ___awmod@sign:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x5
   481   000006                     	ds	1
   482   000007                     ?_abs:
   483                           	callstack 0
   484   000007                     ___awdiv@quotient:
   485                           	callstack 0
   486   000007                     abs@a:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x6
   490   000007                     	ds	2
   491   000009                     ??_abs:
   492                           
   493                           ; 1 bytes @ 0x8
   494   000009                     	ds	2
   495   00000B                     ?_vfpfcnvrt:
   496                           	callstack 0
   497   00000B                     vfpfcnvrt@fp:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0xA
   501   00000B                     	ds	1
   502   00000C                     vfpfcnvrt@fmt:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xB
   506   00000C                     	ds	1
   507   00000D                     vfpfcnvrt@ap:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0xC
   511   00000D                     	ds	1
   512   00000E                     ??_vfpfcnvrt:
   513                           
   514                           ; 1 bytes @ 0xD
   515   00000E                     	ds	1
   516   00000F                     vfpfcnvrt@done:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xE
   520   00000F                     	ds	1
   521   000010                     vfpfcnvrt@cnt:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xF
   525   000010                     	ds	2
   526   000012                     vfpfcnvrt@cp:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x11
   530   000012                     	ds	1
   531   000013                     vfpfcnvrt@convarg:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x12
   535   000013                     	ds	4
   536   000017                     vfpfcnvrt@c:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x16
   540   000017                     	ds	1
   541   000018                     ?_vfprintf:
   542                           	callstack 0
   543   000018                     vfprintf@fp:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x17
   547   000018                     	ds	1
   548   000019                     vfprintf@fmt:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x18
   552   000019                     	ds	1
   553   00001A                     vfprintf@ap:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x19
   557   00001A                     	ds	1
   558   00001B                     vfprintf@cfmt:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x1A
   562   00001B                     	ds	1
   563   00001C                     ?_sprintf:
   564                           	callstack 0
   565   00001C                     sprintf@s:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x1B
   569   00001C                     	ds	2
   570   00001E                     sprintf@fmt:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x1D
   574   00001E                     	ds	3
   575   000021                     sprintf@ret:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x20
   579   000021                     	ds	2
   580   000023                     sprintf@ap:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x22
   584   000023                     	ds	1
   585   000024                     sprintf@f:
   586                           	callstack 0
   587                           
   588                           ; 12 bytes @ 0x23
   589   000024                     	ds	12
   590   000030                     sendArrayCharSerial4@arr:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x2F
   594   000030                     	ds	2
   595   000032                     ??_sendArrayCharSerial4:
   596                           
   597                           ; 1 bytes @ 0x31
   598   000032                     	ds	1
   599   000033                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x32
   602   000033                     	ds	2
   603   000035                     main@motorL:
   604                           	callstack 0
   605                           
   606                           ; 9 bytes @ 0x34
   607   000035                     	ds	9
   608   00003E                     main@motorR:
   609                           	callstack 0
   610                           
   611                           ; 9 bytes @ 0x3D
   612   00003E                     	ds	9
   613                           
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 26 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  motorR          9   61[COMRAM] struct DC_motor
   624 ;;  motorL          9   52[COMRAM] struct DC_motor
   625 ;;  PWMcycle        2    0        unsigned int 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   638 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   639 ;;Total ram usage:       20 bytes
   640 ;; Hardware stack levels required when called: 7
   641 ;; This function calls:
   642 ;;		_Timer0_init
   643 ;;		_buggy_lights_init
   644 ;;		_color_click_init
   645 ;;		_initDCmotorsPWM
   646 ;;		_initUSART4
   647 ;;		_sendArrayCharSerial4
   648 ;;		_writeTrail
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text0
   655   001000                     __ptext0:
   656                           	callstack 0
   657   001000                     _main:
   658                           	callstack 24
   659   001000                     
   660                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   661   001000  0E52               	movlw	82
   662   001002  6E34               	movwf	(??_main+1)^0,c
   663   001004  0E2B               	movlw	43
   664   001006  6E33               	movwf	??_main^0,c
   665   001008  0E00               	movlw	0
   666   00100A                     u2527:
   667   00100A  2EE8               	decfsz	wreg,f,c
   668   00100C  D7FE               	bra	u2527
   669   00100E  2E33               	decfsz	??_main^0,f,c
   670   001010  D7FC               	bra	u2527
   671   001012  2E34               	decfsz	(??_main+1)^0,f,c
   672   001014  D7FA               	bra	u2527
   673   001016  D000               	nop2	
   674   001018                     
   675                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   676   001018  0E00               	movlw	0
   677   00101A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   678   00101C  0E63               	movlw	99
   679   00101E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   680   001020  EC96  F009         	call	_initDCmotorsPWM	;wreg free
   681   001024                     
   682                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   683   001024  0E00               	movlw	0
   684   001026  6E35               	movwf	main@motorL^0,c
   685   001028                     
   686                           ;main.c: 35:     motorL.direction = 1;
   687   001028  0E01               	movlw	1
   688   00102A  6E36               	movwf	(main@motorL+1)^0,c
   689   00102C                     
   690                           ;main.c: 36:     motorL.brakemode = 1;
   691   00102C  0E01               	movlw	1
   692   00102E  6E37               	movwf	(main@motorL+2)^0,c
   693   001030                     
   694                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   695   001030  0E00               	movlw	0
   696   001032  6E39               	movwf	(main@motorL+4)^0,c
   697   001034  0E63               	movlw	99
   698   001036  6E38               	movwf	(main@motorL+3)^0,c
   699   001038                     
   700                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   701   001038  0EAA               	movlw	170
   702   00103A  6E3A               	movwf	(main@motorL+5)^0,c
   703   00103C  0E0F               	movlw	15
   704   00103E  6E3B               	movwf	(main@motorL+6)^0,c
   705   001040                     
   706                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   707   001040  0EA6               	movlw	166
   708   001042  6E3C               	movwf	(main@motorL+7)^0,c
   709   001044  0E0F               	movlw	15
   710   001046  6E3D               	movwf	(main@motorL+8)^0,c
   711   001048                     
   712                           ;main.c: 41:     motorR.power = 0;
   713   001048  0E00               	movlw	0
   714   00104A  6E3E               	movwf	main@motorR^0,c
   715   00104C                     
   716                           ;main.c: 42:     motorR.direction = 1;
   717   00104C  0E01               	movlw	1
   718   00104E  6E3F               	movwf	(main@motorR+1)^0,c
   719   001050                     
   720                           ;main.c: 43:     motorR.brakemode = 1;
   721   001050  0E01               	movlw	1
   722   001052  6E40               	movwf	(main@motorR+2)^0,c
   723   001054                     
   724                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   725   001054  0E00               	movlw	0
   726   001056  6E42               	movwf	(main@motorR+4)^0,c
   727   001058  0E63               	movlw	99
   728   00105A  6E41               	movwf	(main@motorR+3)^0,c
   729   00105C                     
   730                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   731   00105C  0E25               	movlw	37
   732   00105E  6E43               	movwf	(main@motorR+5)^0,c
   733   001060  0E0F               	movlw	15
   734   001062  6E44               	movwf	(main@motorR+6)^0,c
   735   001064                     
   736                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   737   001064  0E21               	movlw	33
   738   001066  6E45               	movwf	(main@motorR+7)^0,c
   739   001068  0E0F               	movlw	15
   740   00106A  6E46               	movwf	(main@motorR+8)^0,c
   741   00106C                     
   742                           ;main.c: 48:     buggy_lights_init();
   743   00106C  ECAA  F00A         	call	_buggy_lights_init	;wreg free
   744   001070                     
   745                           ;main.c: 49:     color_click_init();
   746   001070  EC2B  F00B         	call	_color_click_init	;wreg free
   747   001074                     
   748                           ;main.c: 50:     initUSART4();
   749   001074  EC92  F00B         	call	_initUSART4	;wreg free
   750   001078                     
   751                           ;main.c: 51:     Timer0_init();
   752   001078  EC6E  F00B         	call	_Timer0_init	;wreg free
   753   00107C                     
   754                           ;main.c: 55:         TRISFbits.TRISF2 = 1;
   755   00107C  8486               	bsf	134,2,c	;volatile
   756   00107E                     
   757                           ;main.c: 56:         TRISFbits.TRISF3 = 1;
   758   00107E  8686               	bsf	134,3,c	;volatile
   759   001080                     
   760                           ;main.c: 58:         ANSELFbits.ANSELF2 = 0;
   761   001080  010E               	movlb	14	; () banked
   762   001082  95B4               	bcf	180,2,b	;volatile
   763   001084                     
   764                           ; BSR set to: 14
   765                           ;main.c: 59:         ANSELFbits.ANSELF3 = 0;
   766   001084  97B4               	bcf	180,3,b	;volatile
   767   001086                     l3350:
   768                           
   769                           ;main.c: 74:         if (!PORTFbits.RF2) {
   770   001086  B48E               	btfsc	142,2,c	;volatile
   771   001088  EF48  F008         	goto	u2101
   772   00108C  EF4A  F008         	goto	u2100
   773   001090                     u2101:
   774   001090  EF5D  F008         	goto	l3356
   775   001094                     u2100:
   776   001094                     
   777                           ;main.c: 75:             writeTrail();
   778   001094  ECF7  F00A         	call	_writeTrail	;wreg free
   779   001098                     
   780                           ;main.c: 76:             LATDbits.LATD7 = !LATDbits.LATD7;
   781   001098  AE7C               	btfss	124,7,c	;volatile
   782   00109A  EF51  F008         	goto	u2111
   783   00109E  EF55  F008         	goto	u2110
   784   0010A2                     u2111:
   785   0010A2  6A33               	clrf	??_main^0,c
   786   0010A4  2A33               	incf	??_main^0,f,c
   787   0010A6  EF56  F008         	goto	u2128
   788   0010AA                     u2110:
   789   0010AA  6A33               	clrf	??_main^0,c
   790   0010AC                     u2128:
   791   0010AC  3233               	rrcf	??_main^0,f,c
   792   0010AE  3233               	rrcf	??_main^0,f,c
   793   0010B0  507C               	movf	124,w,c	;volatile
   794   0010B2  1833               	xorwf	??_main^0,w,c
   795   0010B4  0B7F               	andlw	-129
   796   0010B6  1833               	xorwf	??_main^0,w,c
   797   0010B8  6E7C               	movwf	124,c	;volatile
   798   0010BA                     l3356:
   799                           
   800                           ;main.c: 78:         sendArrayCharSerial4(trail_timer_high);
   801   0010BA  0ECC               	movlw	low _trail_timer_high
   802   0010BC  6E30               	movwf	sendArrayCharSerial4@arr^0,c
   803   0010BE  0E01               	movlw	high _trail_timer_high
   804   0010C0  6E31               	movwf	(sendArrayCharSerial4@arr+1)^0,c
   805   0010C2  ECDE  F009         	call	_sendArrayCharSerial4	;wreg free
   806   0010C6                     
   807                           ;main.c: 79:         sendArrayCharSerial4(trail_timer_low);
   808   0010C6  0EB8               	movlw	low _trail_timer_low
   809   0010C8  6E30               	movwf	sendArrayCharSerial4@arr^0,c
   810   0010CA  0E01               	movlw	high _trail_timer_low
   811   0010CC  6E31               	movwf	(sendArrayCharSerial4@arr+1)^0,c
   812   0010CE  ECDE  F009         	call	_sendArrayCharSerial4	;wreg free
   813   0010D2                     
   814                           ;main.c: 80:         sendArrayCharSerial4(trail_manoeuvre);
   815   0010D2  0EA4               	movlw	low _trail_manoeuvre
   816   0010D4  6E30               	movwf	sendArrayCharSerial4@arr^0,c
   817   0010D6  0E01               	movlw	high _trail_manoeuvre
   818   0010D8  6E31               	movwf	(sendArrayCharSerial4@arr+1)^0,c
   819   0010DA  ECDE  F009         	call	_sendArrayCharSerial4	;wreg free
   820   0010DE                     
   821                           ;main.c: 81:         _delay((unsigned long)((500)*(64000000/4000.0)));
   822   0010DE  0E29               	movlw	41
   823   0010E0  6E34               	movwf	(??_main+1)^0,c
   824   0010E2  0E96               	movlw	150
   825   0010E4  6E33               	movwf	??_main^0,c
   826   0010E6  0E7F               	movlw	127
   827   0010E8                     u2537:
   828   0010E8  2EE8               	decfsz	wreg,f,c
   829   0010EA  D7FE               	bra	u2537
   830   0010EC  2E33               	decfsz	??_main^0,f,c
   831   0010EE  D7FC               	bra	u2537
   832   0010F0  2E34               	decfsz	(??_main+1)^0,f,c
   833   0010F2  D7FA               	bra	u2537
   834   0010F4  0000               	nop	
   835   0010F6  EF43  F008         	goto	l3350
   836   0010FA  EF10  F000         	goto	start
   837   0010FE                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _writeTrail *****************
   841 ;; Defined at:
   842 ;;		line 30 in file "timers.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		fsr2l, fsr2h, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text1
   871   0015EE                     __ptext1:
   872                           	callstack 0
   873   0015EE                     _writeTrail:
   874                           	callstack 29
   875   0015EE                     
   876                           ;timers.c: 31:     *timer_high_pointer = TMR0H;
   877   0015EE  C04B  FFD9         	movff	_timer_high_pointer,fsr2l
   878   0015F2  C04C  FFDA         	movff	_timer_high_pointer+1,fsr2h
   879   0015F6  CFD4 FFDF          	movff	4052,indf2	;volatile
   880                           
   881                           ;timers.c: 32:     *timer_low_pointer = TMR0L;
   882   0015FA  C049  FFD9         	movff	_timer_low_pointer,fsr2l
   883   0015FE  C04A  FFDA         	movff	_timer_low_pointer+1,fsr2h
   884   001602  CFD3 FFDF          	movff	4051,indf2	;volatile
   885                           
   886                           ;timers.c: 33:     *manoeuvre_pointer = manoeuvre_count;
   887   001606  C047  FFD9         	movff	_manoeuvre_pointer,fsr2l
   888   00160A  C048  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
   889   00160E  C058  FFDF         	movff	_manoeuvre_count,indf2
   890   001612                     
   891                           ;timers.c: 35:     timer_high_pointer ++;
   892   001612  4A4B               	infsnz	_timer_high_pointer^0,f,c
   893   001614  2A4C               	incf	(_timer_high_pointer+1)^0,f,c
   894   001616                     
   895                           ;timers.c: 36:     timer_low_pointer ++;
   896   001616  4A49               	infsnz	_timer_low_pointer^0,f,c
   897   001618  2A4A               	incf	(_timer_low_pointer+1)^0,f,c
   898   00161A                     
   899                           ;timers.c: 37:     manoeuvre_pointer ++;
   900   00161A  4A47               	infsnz	_manoeuvre_pointer^0,f,c
   901   00161C  2A48               	incf	(_manoeuvre_pointer+1)^0,f,c
   902   00161E                     
   903                           ;timers.c: 39:     manoeuvre_count ++;
   904   00161E  2A58               	incf	_manoeuvre_count^0,f,c
   905   001620  0012               	return		;funcret
   906   001622                     __end_of_writeTrail:
   907                           	callstack 0
   908                           
   909 ;; *************** function _sendArrayCharSerial4 *****************
   910 ;; Defined at:
   911 ;;		line 50 in file "serial.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  arr             2   47[COMRAM] PTR unsigned char 
   914 ;;		 -> trail_manoeuvre(20), trail_timer_low(20), trail_timer_high(20), 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  i               2  162[BANK1 ] unsigned int 
   917 ;;  tempStr       161    0[BANK1 ] unsigned char [161]
   918 ;;  index           1  161[BANK1 ] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;      Locals:         0       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
   930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   931 ;;      Totals:         3       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
   932 ;;Total ram usage:      167 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 6
   935 ;; This function calls:
   936 ;;		_sendStringSerial4
   937 ;;		_sprintf
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text2
   944   0013BC                     __ptext2:
   945                           	callstack 0
   946   0013BC                     _sendArrayCharSerial4:
   947                           	callstack 24
   948   0013BC                     
   949                           ;serial.c: 51:     unsigned char index = 0;
   950   0013BC  0E00               	movlw	0
   951   0013BE  0101               	movlb	1	; () banked
   952   0013C0  6FA1               	movwf	sendArrayCharSerial4@index& (0+255),b
   953                           
   954                           ;serial.c: 53:     char tempStr[20 * 8 + 1];;serial.c: 54:     for (unsigned int i = 0; 
      +                          i < 20; i++) {
   955   0013C2  0E00               	movlw	0
   956   0013C4  6FA3               	movwf	(sendArrayCharSerial4@i+1)& (0+255),b
   957   0013C6  0E00               	movlw	0
   958   0013C8  6FA2               	movwf	sendArrayCharSerial4@i& (0+255),b
   959   0013CA                     l3274:
   960                           
   961                           ; BSR set to: 1
   962                           ;serial.c: 55:         index += sprintf(&tempStr[index], "%d", arr[i]);
   963   0013CA  0E00               	movlw	low sendArrayCharSerial4@tempStr
   964   0013CC  25A1               	addwf	sendArrayCharSerial4@index& (0+255),w,b
   965   0013CE  6E1C               	movwf	sprintf@s^0,c
   966   0013D0  6A1D               	clrf	(sprintf@s+1)^0,c
   967   0013D2  0E01               	movlw	high sendArrayCharSerial4@tempStr
   968   0013D4  221D               	addwfc	(sprintf@s+1)^0,f,c
   969   0013D6  0E06               	movlw	low STR_2
   970   0013D8  6E1E               	movwf	sprintf@fmt^0,c
   971   0013DA  51A2               	movf	sendArrayCharSerial4@i& (0+255),w,b
   972   0013DC  2430               	addwf	sendArrayCharSerial4@arr^0,w,c
   973   0013DE  6ED9               	movwf	fsr2l,c
   974   0013E0  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
   975   0013E2  2031               	addwfc	(sendArrayCharSerial4@arr+1)^0,w,c
   976   0013E4  6EDA               	movwf	fsr2h,c
   977   0013E6  50DF               	movf	indf2,w,c
   978   0013E8  6E32               	movwf	??_sendArrayCharSerial4^0,c
   979   0013EA  5032               	movf	??_sendArrayCharSerial4^0,w,c
   980   0013EC  6E1F               	movwf	(?_sprintf+3)^0,c
   981   0013EE  6A20               	clrf	(?_sprintf+4)^0,c
   982   0013F0  ECD1  F00A         	call	_sprintf	;wreg free
   983   0013F4  501C               	movf	?_sprintf^0,w,c
   984   0013F6  0101               	movlb	1	; () banked
   985   0013F8  27A1               	addwf	sendArrayCharSerial4@index& (0+255),f,b
   986   0013FA                     
   987                           ; BSR set to: 1
   988                           ;serial.c: 56:     }
   989   0013FA  4BA2               	infsnz	sendArrayCharSerial4@i& (0+255),f,b
   990   0013FC  2BA3               	incf	(sendArrayCharSerial4@i+1)& (0+255),f,b
   991   0013FE                     
   992                           ; BSR set to: 1
   993   0013FE  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
   994   001400  E109               	bnz	u2050
   995   001402  0E14               	movlw	20
   996   001404  5DA2               	subwf	sendArrayCharSerial4@i& (0+255),w,b
   997   001406  A0D8               	btfss	status,0,c
   998   001408  EF08  F00A         	goto	u2051
   999   00140C  EF0A  F00A         	goto	u2050
  1000   001410                     u2051:
  1001   001410  EFE5  F009         	goto	l3274
  1002   001414                     u2050:
  1003   001414                     
  1004                           ; BSR set to: 1
  1005                           ;serial.c: 57:     sendStringSerial4(tempStr);
  1006   001414  0E00               	movlw	low sendArrayCharSerial4@tempStr
  1007   001416  6E02               	movwf	sendStringSerial4@string^0,c
  1008   001418  0E01               	movlw	high sendArrayCharSerial4@tempStr
  1009   00141A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1010   00141C  EC50  F00A         	call	_sendStringSerial4	;wreg free
  1011                           
  1012                           ;serial.c: 58:     sendStringSerial4(" \r");
  1013   001420  0E03               	movlw	low (STR_1+2)
  1014   001422  6E02               	movwf	sendStringSerial4@string^0,c
  1015   001424  5002               	movf	sendStringSerial4@string^0,w,c
  1016   001426  A4D8               	btfss	status,2,c
  1017   001428  0E0E               	movlw	high __smallconst
  1018   00142A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1019   00142C  EC50  F00A         	call	_sendStringSerial4	;wreg free
  1020   001430  0012               	return		;funcret
  1021   001432                     __end_of_sendArrayCharSerial4:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _sprintf *****************
  1025 ;; Defined at:
  1026 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  s               2   27[COMRAM] PTR unsigned char 
  1029 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1030 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
  1031 ;;		 -> STR_3(3), STR_1(5), 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  f              12   35[COMRAM] struct _IO_FILE
  1034 ;;  ret             2   32[COMRAM] int 
  1035 ;;  ap              1   34[COMRAM] PTR void [1]
  1036 ;;		 -> ?_sprintf(2), 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  2   27[COMRAM] int 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1046 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;Total ram usage:       20 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 5
  1053 ;; This function calls:
  1054 ;;		_vfprintf
  1055 ;; This function is called by:
  1056 ;;		_sendArrayCharSerial4
  1057 ;;		_sendIntSerial4
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text3
  1062   0015A2                     __ptext3:
  1063                           	callstack 0
  1064   0015A2                     _sprintf:
  1065                           	callstack 24
  1066   0015A2  0E1F               	movlw	low (?_sprintf+3)
  1067   0015A4  6E23               	movwf	sprintf@ap^0,c
  1068   0015A6  C01C  F024         	movff	sprintf@s,sprintf@f
  1069   0015AA  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
  1070   0015AE  0E00               	movlw	0
  1071   0015B0  6E28               	movwf	(sprintf@f+4)^0,c
  1072   0015B2  0E00               	movlw	0
  1073   0015B4  6E27               	movwf	(sprintf@f+3)^0,c
  1074   0015B6  0E00               	movlw	0
  1075   0015B8  6E2F               	movwf	(sprintf@f+11)^0,c
  1076   0015BA  0E00               	movlw	0
  1077   0015BC  6E2E               	movwf	(sprintf@f+10)^0,c
  1078   0015BE  0E24               	movlw	low sprintf@f
  1079   0015C0  6E18               	movwf	vfprintf@fp^0,c
  1080   0015C2  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  1081   0015C6  0E23               	movlw	low sprintf@ap
  1082   0015C8  6E1A               	movwf	vfprintf@ap^0,c
  1083   0015CA  EC81  F00A         	call	_vfprintf	;wreg free
  1084   0015CE  C018  F021         	movff	?_vfprintf,sprintf@ret
  1085   0015D2  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
  1086   0015D6  5027               	movf	(sprintf@f+3)^0,w,c
  1087   0015D8  241C               	addwf	sprintf@s^0,w,c
  1088   0015DA  6ED9               	movwf	fsr2l,c
  1089   0015DC  5028               	movf	(sprintf@f+4)^0,w,c
  1090   0015DE  201D               	addwfc	(sprintf@s+1)^0,w,c
  1091   0015E0  6EDA               	movwf	fsr2h,c
  1092   0015E2  6ADF               	clrf	indf2,c
  1093   0015E4  C021  F01C         	movff	sprintf@ret,?_sprintf
  1094   0015E8  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1095   0015EC  0012               	return		;funcret
  1096   0015EE                     __end_of_sprintf:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _vfprintf *****************
  1100 ;; Defined at:
  1101 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1104 ;;		 -> sprintf@f(12), 
  1105 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1106 ;;		 -> STR_3(3), STR_1(5), 
  1107 ;;  ap              1   25[COMRAM] PTR PTR void 
  1108 ;;		 -> sprintf@ap(1), 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1111 ;;		 -> STR_3(3), STR_1(5), 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2   23[COMRAM] int 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1121 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;Total ram usage:        4 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 4
  1128 ;; This function calls:
  1129 ;;		_vfpfcnvrt
  1130 ;; This function is called by:
  1131 ;;		_sprintf
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text4
  1136   001502                     __ptext4:
  1137                           	callstack 0
  1138   001502                     _vfprintf:
  1139                           	callstack 24
  1140   001502                     
  1141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1142   001502  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1143   001506                     
  1144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1145   001506  0E00               	movlw	0
  1146   001508  6E56               	movwf	(_nout+1)^0,c
  1147   00150A  0E00               	movlw	0
  1148   00150C  6E55               	movwf	_nout^0,c
  1149                           
  1150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1151   00150E  EF95  F00A         	goto	l2348
  1152   001512                     l2346:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1155   001512  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1156   001516  0E1B               	movlw	low vfprintf@cfmt
  1157   001518  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1158   00151A  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1159   00151E  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1160   001522  500B               	movf	?_vfpfcnvrt^0,w,c
  1161   001524  2655               	addwf	_nout^0,f,c
  1162   001526  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1163   001528  2256               	addwfc	(_nout+1)^0,f,c
  1164   00152A                     l2348:
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1167   00152A  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1168   00152E                     	if	1	;There is more than 1 active tblptr byte
  1169   00152E  0E0E               	movlw	high __smallconst
  1170   001530  6EF7               	movwf	tblptrh,c
  1171   001532                     	endif
  1172   001532                     	if	0	;tblptru may be non-zero
  1173   001532                     	endif
  1174   001532                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1175   001532  0E00               	movlw	low (__smallconst shr (0+16))
  1176   001534  6EF8               	movwf	tblptru,c
  1177   001536                     	endif
  1178   001536  0008               	tblrd		*
  1179   001538  50F5               	movf	tablat,w,c
  1180   00153A  0900               	iorlw	0
  1181   00153C  A4D8               	btfss	status,2,c
  1182   00153E  EFA3  F00A         	goto	u1131
  1183   001542  EFA5  F00A         	goto	u1130
  1184   001546                     u1131:
  1185   001546  EF89  F00A         	goto	l2346
  1186   00154A                     u1130:
  1187   00154A                     
  1188                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1189   00154A  C055  F018         	movff	_nout,?_vfprintf
  1190   00154E  C056  F019         	movff	_nout+1,?_vfprintf+1
  1191   001552  0012               	return		;funcret
  1192   001554                     __end_of_vfprintf:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _vfpfcnvrt *****************
  1196 ;; Defined at:
  1197 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1200 ;;		 -> sprintf@f(12), 
  1201 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1202 ;;		 -> vfprintf@cfmt(1), 
  1203 ;;  ap              1   12[COMRAM] PTR PTR void 
  1204 ;;		 -> sprintf@ap(1), 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  convarg         4   18[COMRAM] struct .
  1207 ;;  cnt             2   15[COMRAM] int 
  1208 ;;  c               1   22[COMRAM] unsigned char 
  1209 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1210 ;;		 -> STR_3(3), STR_1(5), 
  1211 ;;  done            1   14[COMRAM] _Bool 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2   10[COMRAM] int 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1221 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1222 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1224 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;Total ram usage:       13 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 3
  1228 ;; This function calls:
  1229 ;;		___awdiv
  1230 ;;		___awmod
  1231 ;;		_abs
  1232 ;;		_fputc
  1233 ;; This function is called by:
  1234 ;;		_vfprintf
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text5
  1239   000E0A                     __ptext5:
  1240                           	callstack 0
  1241   000E0A                     _vfpfcnvrt:
  1242                           	callstack 24
  1243   000E0A                     
  1244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1245   000E0A  0E00               	movlw	0
  1246   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1247   000E0E  0E00               	movlw	0
  1248   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1249   000E12                     
  1250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1251   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1252   000E14  6ED9               	movwf	fsr2l,c
  1253   000E16  6ADA               	clrf	fsr2h,c
  1254   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1255   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1256   000E1C  0E0E               	movlw	high __smallconst
  1257   000E1E  6EF7               	movwf	tblptrh,c
  1258   000E20                     	endif
  1259   000E20                     	if	0	;tblptru may be non-zero
  1260   000E20                     	endif
  1261   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1262   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1263   000E22  6EF8               	movwf	tblptru,c
  1264   000E24                     	endif
  1265   000E24  0008               	tblrd		*
  1266   000E26  50F5               	movf	tablat,w,c
  1267   000E28  0A25               	xorlw	37
  1268   000E2A  A4D8               	btfss	status,2,c
  1269   000E2C  EF1A  F007         	goto	u1001
  1270   000E30  EF1C  F007         	goto	u1000
  1271   000E34                     u1001:
  1272   000E34  EFE6  F007         	goto	l2302
  1273   000E38                     u1000:
  1274   000E38                     
  1275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1276   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1277   000E3A  6ED9               	movwf	fsr2l,c
  1278   000E3C  6ADA               	clrf	fsr2h,c
  1279   000E3E  2ADF               	incf	indf2,f,c
  1280   000E40                     
  1281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1282   000E40  0E00               	movlw	0
  1283   000E42  0100               	movlb	0	; () banked
  1284   000E44  6FD1               	movwf	(_width+1)& (0+255),b
  1285   000E46  0E00               	movlw	0
  1286   000E48  6FD0               	movwf	_width& (0+255),b
  1287   000E4A  C0D0  F057         	movff	_width,_flags
  1288   000E4E                     
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1291   000E4E  69D2               	setf	_prec& (0+255),b
  1292   000E50  69D3               	setf	(_prec+1)& (0+255),b
  1293   000E52                     
  1294                           ; BSR set to: 0
  1295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1296   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1297   000E54  6ED9               	movwf	fsr2l,c
  1298   000E56  6ADA               	clrf	fsr2h,c
  1299   000E58  50DF               	movf	indf2,w,c
  1300   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1301   000E5C                     
  1302                           ; BSR set to: 0
  1303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1304   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1305   000E60                     	if	1	;There is more than 1 active tblptr byte
  1306   000E60  0E0E               	movlw	high __smallconst
  1307   000E62  6EF7               	movwf	tblptrh,c
  1308   000E64                     	endif
  1309   000E64                     	if	0	;tblptru may be non-zero
  1310   000E64                     	endif
  1311   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1312   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1313   000E66  6EF8               	movwf	tblptru,c
  1314   000E68                     	endif
  1315   000E68  0008               	tblrd		*
  1316   000E6A  50F5               	movf	tablat,w,c
  1317   000E6C  0A64               	xorlw	100
  1318   000E6E  B4D8               	btfsc	status,2,c
  1319   000E70  EF3C  F007         	goto	u1011
  1320   000E74  EF3E  F007         	goto	u1010
  1321   000E78                     u1011:
  1322   000E78  EF4E  F007         	goto	l2266
  1323   000E7C                     u1010:
  1324   000E7C                     
  1325                           ; BSR set to: 0
  1326   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1327   000E80                     	if	1	;There is more than 1 active tblptr byte
  1328   000E80  0E0E               	movlw	high __smallconst
  1329   000E82  6EF7               	movwf	tblptrh,c
  1330   000E84                     	endif
  1331   000E84                     	if	0	;tblptru may be non-zero
  1332   000E84                     	endif
  1333   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1334   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1335   000E86  6EF8               	movwf	tblptru,c
  1336   000E88                     	endif
  1337   000E88  0008               	tblrd		*
  1338   000E8A  50F5               	movf	tablat,w,c
  1339   000E8C  0A69               	xorlw	105
  1340   000E8E  A4D8               	btfss	status,2,c
  1341   000E90  EF4C  F007         	goto	u1021
  1342   000E94  EF4E  F007         	goto	u1020
  1343   000E98                     u1021:
  1344   000E98  EFDC  F007         	goto	l2296
  1345   000E9C                     u1020:
  1346   000E9C                     l2266:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1350   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1351   000E9E  6ED9               	movwf	fsr2l,c
  1352   000EA0  6ADA               	clrf	fsr2h,c
  1353   000EA2  0E02               	movlw	2
  1354   000EA4  26DF               	addwf	indf2,f,c
  1355   000EA6  5CDF               	subwf	indf2,w,c
  1356   000EA8  6ED9               	movwf	fsr2l,c
  1357   000EAA  6ADA               	clrf	fsr2h,c
  1358   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1359   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1360   000EB4                     
  1361                           ; BSR set to: 0
  1362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1363   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1364   000EB6  6ED9               	movwf	fsr2l,c
  1365   000EB8  6ADA               	clrf	fsr2h,c
  1366   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1367   000EBC  6EDF               	movwf	indf2,c
  1368   000EBE                     
  1369                           ; BSR set to: 0
  1370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1371   000EBE  0E20               	movlw	32
  1372   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1375   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1376   000EC4  EF66  F007         	goto	u1031
  1377   000EC8  EF69  F007         	goto	u1030
  1378   000ECC                     u1031:
  1379   000ECC  0E01               	movlw	1
  1380   000ECE  EF6A  F007         	goto	u1040
  1381   000ED2                     u1030:
  1382   000ED2  0E00               	movlw	0
  1383   000ED4                     u1040:
  1384   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1385   000ED6                     l2272:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1388   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1389   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1390   000EDA  0F9C               	addlw	low _dbuf
  1391   000EDC  6ED9               	movwf	fsr2l,c
  1392   000EDE  6ADA               	clrf	fsr2h,c
  1393   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1394   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1395   000EE8  0E00               	movlw	0
  1396   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1397   000EEC  0E0A               	movlw	10
  1398   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1399   000EF0  EC3E  F009         	call	___awmod	;wreg free
  1400   000EF4  C001  F007         	movff	?___awmod,abs@a
  1401   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1402   000EFC  EC11  F00B         	call	_abs	;wreg free
  1403   000F00  5007               	movf	?_abs^0,w,c
  1404   000F02  0F30               	addlw	48
  1405   000F04  6EDF               	movwf	indf2,c
  1406   000F06                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1408   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1409   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1410   000F0E  0E00               	movlw	0
  1411   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1412   000F12  0E0A               	movlw	10
  1413   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1414   000F16  EC7F  F008         	call	___awdiv	;wreg free
  1415   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1416   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1417   000F22                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1419   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1420   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1421   000F26                     
  1422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1423   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1424   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1425   000F2A  B4D8               	btfsc	status,2,c
  1426   000F2C  EF9A  F007         	goto	u1051
  1427   000F30  EF9C  F007         	goto	u1050
  1428   000F34                     u1051:
  1429   000F34  EFA4  F007         	goto	l2282
  1430   000F38                     u1050:
  1431   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1432   000F3A  A4D8               	btfss	status,2,c
  1433   000F3C  EFA2  F007         	goto	u1061
  1434   000F40  EFA4  F007         	goto	u1060
  1435   000F44                     u1061:
  1436   000F44  EF6B  F007         	goto	l2272
  1437   000F48                     u1060:
  1438   000F48                     l2282:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1441   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1442   000F4A  B4D8               	btfsc	status,2,c
  1443   000F4C  EFAA  F007         	goto	u1071
  1444   000F50  EFAC  F007         	goto	u1070
  1445   000F54                     u1071:
  1446   000F54  EFCD  F007         	goto	l2294
  1447   000F58                     u1070:
  1448   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1449   000F5A  B4D8               	btfsc	status,2,c
  1450   000F5C  EFB2  F007         	goto	u1081
  1451   000F60  EFB4  F007         	goto	u1080
  1452   000F64                     u1081:
  1453   000F64  EFCD  F007         	goto	l2294
  1454   000F68                     u1080:
  1455   000F68                     
  1456                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1457   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1458   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1459   000F6C  0F9C               	addlw	low _dbuf
  1460   000F6E  6ED9               	movwf	fsr2l,c
  1461   000F70  6ADA               	clrf	fsr2h,c
  1462   000F72  0E2D               	movlw	45
  1463   000F74  6EDF               	movwf	indf2,c
  1464   000F76                     
  1465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1466   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1467   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1468   000F7A  EFCD  F007         	goto	l2294
  1469   000F7E                     l2290:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1472   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1473   000F80  0F9C               	addlw	low _dbuf
  1474   000F82  6ED9               	movwf	fsr2l,c
  1475   000F84  6ADA               	clrf	fsr2h,c
  1476   000F86  50DF               	movf	indf2,w,c
  1477   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1478   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1479   000F8C  6E01               	movwf	fputc@c^0,c
  1480   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1481   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1482   000F94  ECE1  F008         	call	_fputc	;wreg free
  1483   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1484   000F9A                     l2294:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1487   000F9A  0E20               	movlw	32
  1488   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1489   000F9E  A4D8               	btfss	status,2,c
  1490   000FA0  EFD4  F007         	goto	u1091
  1491   000FA4  EFD6  F007         	goto	u1090
  1492   000FA8                     u1091:
  1493   000FA8  EFBF  F007         	goto	l2290
  1494   000FAC                     u1090:
  1495   000FAC                     
  1496                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1497   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1498   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1499   000FB4  EFFF  F007         	goto	l1328
  1500   000FB8                     l2296:
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1504   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1505   000FBA  6ED9               	movwf	fsr2l,c
  1506   000FBC  6ADA               	clrf	fsr2h,c
  1507   000FBE  2ADF               	incf	indf2,f,c
  1508   000FC0                     
  1509                           ; BSR set to: 0
  1510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1511   000FC0  0E00               	movlw	0
  1512   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1513   000FC4  0E00               	movlw	0
  1514   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1515   000FC8  EFFF  F007         	goto	l1328
  1516   000FCC                     l2302:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1519   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1520   000FCE  6ED9               	movwf	fsr2l,c
  1521   000FD0  6ADA               	clrf	fsr2h,c
  1522   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1523   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1524   000FD6  0E0E               	movlw	high __smallconst
  1525   000FD8  6EF7               	movwf	tblptrh,c
  1526   000FDA                     	endif
  1527   000FDA                     	if	0	;tblptru may be non-zero
  1528   000FDA                     	endif
  1529   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1530   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1531   000FDC  6EF8               	movwf	tblptru,c
  1532   000FDE                     	endif
  1533   000FDE  0008               	tblrd		*
  1534   000FE0  50F5               	movf	tablat,w,c
  1535   000FE2  6E01               	movwf	fputc@c^0,c
  1536   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1537   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1538   000FEA  ECE1  F008         	call	_fputc	;wreg free
  1539   000FEE                     
  1540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1541   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1542   000FF0  6ED9               	movwf	fsr2l,c
  1543   000FF2  6ADA               	clrf	fsr2h,c
  1544   000FF4  2ADF               	incf	indf2,f,c
  1545   000FF6                     
  1546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1547   000FF6  0E00               	movlw	0
  1548   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1549   000FFA  0E01               	movlw	1
  1550   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1551   000FFE                     l1328:
  1552   000FFE  0012               	return		;funcret
  1553   001000                     __end_of_vfpfcnvrt:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function _fputc *****************
  1557 ;; Defined at:
  1558 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  c               2    0[COMRAM] int 
  1561 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1562 ;;		 -> sprintf@f(12), 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2    0[COMRAM] int 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1574 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;Total ram usage:        8 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 2
  1581 ;; This function calls:
  1582 ;;		_putch
  1583 ;; This function is called by:
  1584 ;;		_vfpfcnvrt
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text6
  1589   0011C2                     __ptext6:
  1590                           	callstack 0
  1591   0011C2                     _fputc:
  1592                           	callstack 24
  1593   0011C2  5003               	movf	fputc@fp^0,w,c
  1594   0011C4  B4D8               	btfsc	status,2,c
  1595   0011C6  EFE7  F008         	goto	u931
  1596   0011CA  EFE9  F008         	goto	u930
  1597   0011CE                     u931:
  1598   0011CE  EFF1  F008         	goto	l2232
  1599   0011D2                     u930:
  1600   0011D2  5003               	movf	fputc@fp^0,w,c
  1601   0011D4  A4D8               	btfss	status,2,c
  1602   0011D6  EFEF  F008         	goto	u941
  1603   0011DA  EFF1  F008         	goto	u940
  1604   0011DE                     u941:
  1605   0011DE  EFF6  F008         	goto	l2234
  1606   0011E2                     u940:
  1607   0011E2                     l2232:
  1608   0011E2  5001               	movf	fputc@c^0,w,c
  1609   0011E4  ECC9  F00B         	call	_putch
  1610   0011E8  EF3D  F009         	goto	l1353
  1611   0011EC                     l2234:
  1612   0011EC  5003               	movf	fputc@fp^0,w,c
  1613   0011EE  6ED9               	movwf	fsr2l,c
  1614   0011F0  6ADA               	clrf	fsr2h,c
  1615   0011F2  0E0A               	movlw	10
  1616   0011F4  26D9               	addwf	fsr2l,f,c
  1617   0011F6  50DE               	movf	postinc2,w,c
  1618   0011F8  10DE               	iorwf	postinc2,w,c
  1619   0011FA  B4D8               	btfsc	status,2,c
  1620   0011FC  EF02  F009         	goto	u951
  1621   001200  EF04  F009         	goto	u950
  1622   001204                     u951:
  1623   001204  EF1D  F009         	goto	l2238
  1624   001208                     u950:
  1625   001208  5003               	movf	fputc@fp^0,w,c
  1626   00120A  6ED9               	movwf	fsr2l,c
  1627   00120C  6ADA               	clrf	fsr2h,c
  1628   00120E  0E0A               	movlw	10
  1629   001210  26D9               	addwf	fsr2l,f,c
  1630   001212  5003               	movf	fputc@fp^0,w,c
  1631   001214  6EE1               	movwf	fsr1l,c
  1632   001216  6AE2               	clrf	fsr1h,c
  1633   001218  0E03               	movlw	3
  1634   00121A  26E1               	addwf	fsr1l,f,c
  1635   00121C  50DE               	movf	postinc2,w,c
  1636   00121E  5CE6               	subwf	postinc1,w,c
  1637   001220  50E6               	movf	postinc1,w,c
  1638   001222  0A80               	xorlw	128
  1639   001224  6E08               	movwf	(??_fputc+4)^0,c
  1640   001226  50DE               	movf	postinc2,w,c
  1641   001228  0A80               	xorlw	128
  1642   00122A  5808               	subwfb	(??_fputc+4)^0,w,c
  1643   00122C  B0D8               	btfsc	status,0,c
  1644   00122E  EF1B  F009         	goto	u961
  1645   001232  EF1D  F009         	goto	u960
  1646   001236                     u961:
  1647   001236  EF3D  F009         	goto	l1353
  1648   00123A                     u960:
  1649   00123A                     l2238:
  1650   00123A  5003               	movf	fputc@fp^0,w,c
  1651   00123C  6ED9               	movwf	fsr2l,c
  1652   00123E  6ADA               	clrf	fsr2h,c
  1653   001240  0E03               	movlw	3
  1654   001242  26D9               	addwf	fsr2l,f,c
  1655   001244  CFDE F004          	movff	postinc2,??_fputc
  1656   001248  CFDD F005          	movff	postdec2,??_fputc+1
  1657   00124C  5003               	movf	fputc@fp^0,w,c
  1658   00124E  6ED9               	movwf	fsr2l,c
  1659   001250  6ADA               	clrf	fsr2h,c
  1660   001252  CFDE F006          	movff	postinc2,??_fputc+2
  1661   001256  CFDD F007          	movff	postdec2,??_fputc+3
  1662   00125A  5004               	movf	??_fputc^0,w,c
  1663   00125C  2406               	addwf	(??_fputc+2)^0,w,c
  1664   00125E  6ED9               	movwf	fsr2l,c
  1665   001260  5005               	movf	(??_fputc+1)^0,w,c
  1666   001262  2007               	addwfc	(??_fputc+3)^0,w,c
  1667   001264  6EDA               	movwf	fsr2h,c
  1668   001266  C001  FFDF         	movff	fputc@c,indf2
  1669   00126A  5003               	movf	fputc@fp^0,w,c
  1670   00126C  6ED9               	movwf	fsr2l,c
  1671   00126E  6ADA               	clrf	fsr2h,c
  1672   001270  0E03               	movlw	3
  1673   001272  26D9               	addwf	fsr2l,f,c
  1674   001274  2ADE               	incf	postinc2,f,c
  1675   001276  0E00               	movlw	0
  1676   001278  22DD               	addwfc	postdec2,f,c
  1677   00127A                     l1353:
  1678   00127A  0012               	return		;funcret
  1679   00127C                     __end_of_fputc:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _putch *****************
  1683 ;; Defined at:
  1684 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  c               1    wreg     unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  c               1    0[COMRAM] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_fputc
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text7
  1713   001792                     __ptext7:
  1714                           	callstack 0
  1715   001792                     _putch:
  1716                           	callstack 24
  1717   001792  0012               	return		;funcret
  1718   001794                     __end_of_putch:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _abs *****************
  1722 ;; Defined at:
  1723 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               2    6[COMRAM] int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    6[COMRAM] int 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;Total ram usage:        4 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_vfpfcnvrt
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text8
  1752   001622                     __ptext8:
  1753                           	callstack 0
  1754   001622                     _abs:
  1755                           	callstack 25
  1756   001622  BE08               	btfsc	(abs@a+1)^0,7,c
  1757   001624  EF16  F00B         	goto	u971
  1758   001628  EF18  F00B         	goto	u970
  1759   00162C                     u971:
  1760   00162C  EF1E  F00B         	goto	l1338
  1761   001630                     u970:
  1762   001630  C007  F007         	movff	abs@a,?_abs
  1763   001634  C008  F008         	movff	abs@a+1,?_abs+1
  1764   001638  EF2A  F00B         	goto	l1341
  1765   00163C                     l1338:
  1766   00163C  C007  F009         	movff	abs@a,??_abs
  1767   001640  C008  F00A         	movff	abs@a+1,??_abs+1
  1768   001644  1E09               	comf	??_abs^0,f,c
  1769   001646  1E0A               	comf	(??_abs+1)^0,f,c
  1770   001648  4A09               	infsnz	??_abs^0,f,c
  1771   00164A  2A0A               	incf	(??_abs+1)^0,f,c
  1772   00164C  C009  F007         	movff	??_abs,?_abs
  1773   001650  C00A  F008         	movff	??_abs+1,?_abs+1
  1774   001654                     l1341:
  1775   001654  0012               	return		;funcret
  1776   001656                     __end_of_abs:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function ___awmod *****************
  1780 ;; Defined at:
  1781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  dividend        2    0[COMRAM] int 
  1784 ;;  divisor         2    2[COMRAM] int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  sign            1    5[COMRAM] unsigned char 
  1787 ;;  counter         1    4[COMRAM] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2    0[COMRAM] int 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;Total ram usage:        6 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_vfpfcnvrt
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text9
  1812   00127C                     __ptext9:
  1813                           	callstack 0
  1814   00127C                     ___awmod:
  1815                           	callstack 25
  1816   00127C  0E00               	movlw	0
  1817   00127E  6E06               	movwf	___awmod@sign^0,c
  1818   001280  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1819   001282  EF47  F009         	goto	u870
  1820   001286  EF45  F009         	goto	u871
  1821   00128A                     u871:
  1822   00128A  EF4D  F009         	goto	l2200
  1823   00128E                     u870:
  1824   00128E  6C01               	negf	___awmod@dividend^0,c
  1825   001290  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1826   001292  B0D8               	btfsc	status,0,c
  1827   001294  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1828   001296  0E01               	movlw	1
  1829   001298  6E06               	movwf	___awmod@sign^0,c
  1830   00129A                     l2200:
  1831   00129A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1832   00129C  EF54  F009         	goto	u880
  1833   0012A0  EF52  F009         	goto	u881
  1834   0012A4                     u881:
  1835   0012A4  EF58  F009         	goto	l2204
  1836   0012A8                     u880:
  1837   0012A8  6C03               	negf	___awmod@divisor^0,c
  1838   0012AA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1839   0012AC  B0D8               	btfsc	status,0,c
  1840   0012AE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1841   0012B0                     l2204:
  1842   0012B0  5003               	movf	___awmod@divisor^0,w,c
  1843   0012B2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1844   0012B4  B4D8               	btfsc	status,2,c
  1845   0012B6  EF5F  F009         	goto	u891
  1846   0012BA  EF61  F009         	goto	u890
  1847   0012BE                     u891:
  1848   0012BE  EF85  F009         	goto	l2220
  1849   0012C2                     u890:
  1850   0012C2  0E01               	movlw	1
  1851   0012C4  6E05               	movwf	___awmod@counter^0,c
  1852   0012C6  EF69  F009         	goto	l2210
  1853   0012CA                     l2208:
  1854   0012CA  90D8               	bcf	status,0,c
  1855   0012CC  3603               	rlcf	___awmod@divisor^0,f,c
  1856   0012CE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1857   0012D0  2A05               	incf	___awmod@counter^0,f,c
  1858   0012D2                     l2210:
  1859   0012D2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1860   0012D4  EF6E  F009         	goto	u901
  1861   0012D8  EF70  F009         	goto	u900
  1862   0012DC                     u901:
  1863   0012DC  EF65  F009         	goto	l2208
  1864   0012E0                     u900:
  1865   0012E0                     l2212:
  1866   0012E0  5003               	movf	___awmod@divisor^0,w,c
  1867   0012E2  5C01               	subwf	___awmod@dividend^0,w,c
  1868   0012E4  5004               	movf	(___awmod@divisor+1)^0,w,c
  1869   0012E6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1870   0012E8  A0D8               	btfss	status,0,c
  1871   0012EA  EF79  F009         	goto	u911
  1872   0012EE  EF7B  F009         	goto	u910
  1873   0012F2                     u911:
  1874   0012F2  EF7F  F009         	goto	l2216
  1875   0012F6                     u910:
  1876   0012F6  5003               	movf	___awmod@divisor^0,w,c
  1877   0012F8  5E01               	subwf	___awmod@dividend^0,f,c
  1878   0012FA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1879   0012FC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1880   0012FE                     l2216:
  1881   0012FE  90D8               	bcf	status,0,c
  1882   001300  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1883   001302  3203               	rrcf	___awmod@divisor^0,f,c
  1884   001304  2E05               	decfsz	___awmod@counter^0,f,c
  1885   001306  EF70  F009         	goto	l2212
  1886   00130A                     l2220:
  1887   00130A  5006               	movf	___awmod@sign^0,w,c
  1888   00130C  B4D8               	btfsc	status,2,c
  1889   00130E  EF8B  F009         	goto	u921
  1890   001312  EF8D  F009         	goto	u920
  1891   001316                     u921:
  1892   001316  EF91  F009         	goto	l2224
  1893   00131A                     u920:
  1894   00131A  6C01               	negf	___awmod@dividend^0,c
  1895   00131C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1896   00131E  B0D8               	btfsc	status,0,c
  1897   001320  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1898   001322                     l2224:
  1899   001322  C001  F001         	movff	___awmod@dividend,?___awmod
  1900   001326  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1901   00132A  0012               	return		;funcret
  1902   00132C                     __end_of___awmod:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function ___awdiv *****************
  1906 ;; Defined at:
  1907 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  dividend        2    0[COMRAM] int 
  1910 ;;  divisor         2    2[COMRAM] int 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  quotient        2    6[COMRAM] int 
  1913 ;;  sign            1    5[COMRAM] unsigned char 
  1914 ;;  counter         1    4[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2    0[COMRAM] int 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;Total ram usage:        8 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_vfpfcnvrt
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text10
  1939   0010FE                     __ptext10:
  1940                           	callstack 0
  1941   0010FE                     ___awdiv:
  1942                           	callstack 25
  1943   0010FE  0E00               	movlw	0
  1944   001100  6E06               	movwf	___awdiv@sign^0,c
  1945   001102  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1946   001104  EF88  F008         	goto	u810
  1947   001108  EF86  F008         	goto	u811
  1948   00110C                     u811:
  1949   00110C  EF8E  F008         	goto	l2156
  1950   001110                     u810:
  1951   001110  6C03               	negf	___awdiv@divisor^0,c
  1952   001112  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1953   001114  B0D8               	btfsc	status,0,c
  1954   001116  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1955   001118  0E01               	movlw	1
  1956   00111A  6E06               	movwf	___awdiv@sign^0,c
  1957   00111C                     l2156:
  1958   00111C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1959   00111E  EF95  F008         	goto	u820
  1960   001122  EF93  F008         	goto	u821
  1961   001126                     u821:
  1962   001126  EF9B  F008         	goto	l2162
  1963   00112A                     u820:
  1964   00112A  6C01               	negf	___awdiv@dividend^0,c
  1965   00112C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1966   00112E  B0D8               	btfsc	status,0,c
  1967   001130  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1968   001132  0E01               	movlw	1
  1969   001134  1A06               	xorwf	___awdiv@sign^0,f,c
  1970   001136                     l2162:
  1971   001136  0E00               	movlw	0
  1972   001138  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1973   00113A  0E00               	movlw	0
  1974   00113C  6E07               	movwf	___awdiv@quotient^0,c
  1975   00113E  5003               	movf	___awdiv@divisor^0,w,c
  1976   001140  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1977   001142  B4D8               	btfsc	status,2,c
  1978   001144  EFA6  F008         	goto	u831
  1979   001148  EFA8  F008         	goto	u830
  1980   00114C                     u831:
  1981   00114C  EFD0  F008         	goto	l2184
  1982   001150                     u830:
  1983   001150  0E01               	movlw	1
  1984   001152  6E05               	movwf	___awdiv@counter^0,c
  1985   001154  EFB0  F008         	goto	l2170
  1986   001158                     l2168:
  1987   001158  90D8               	bcf	status,0,c
  1988   00115A  3603               	rlcf	___awdiv@divisor^0,f,c
  1989   00115C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1990   00115E  2A05               	incf	___awdiv@counter^0,f,c
  1991   001160                     l2170:
  1992   001160  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1993   001162  EFB5  F008         	goto	u841
  1994   001166  EFB7  F008         	goto	u840
  1995   00116A                     u841:
  1996   00116A  EFAC  F008         	goto	l2168
  1997   00116E                     u840:
  1998   00116E                     l2172:
  1999   00116E  90D8               	bcf	status,0,c
  2000   001170  3607               	rlcf	___awdiv@quotient^0,f,c
  2001   001172  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2002   001174  5003               	movf	___awdiv@divisor^0,w,c
  2003   001176  5C01               	subwf	___awdiv@dividend^0,w,c
  2004   001178  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2005   00117A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2006   00117C  A0D8               	btfss	status,0,c
  2007   00117E  EFC3  F008         	goto	u851
  2008   001182  EFC5  F008         	goto	u850
  2009   001186                     u851:
  2010   001186  EFCA  F008         	goto	l2180
  2011   00118A                     u850:
  2012   00118A  5003               	movf	___awdiv@divisor^0,w,c
  2013   00118C  5E01               	subwf	___awdiv@dividend^0,f,c
  2014   00118E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2015   001190  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2016   001192  8007               	bsf	___awdiv@quotient^0,0,c
  2017   001194                     l2180:
  2018   001194  90D8               	bcf	status,0,c
  2019   001196  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2020   001198  3203               	rrcf	___awdiv@divisor^0,f,c
  2021   00119A  2E05               	decfsz	___awdiv@counter^0,f,c
  2022   00119C  EFB7  F008         	goto	l2172
  2023   0011A0                     l2184:
  2024   0011A0  5006               	movf	___awdiv@sign^0,w,c
  2025   0011A2  B4D8               	btfsc	status,2,c
  2026   0011A4  EFD6  F008         	goto	u861
  2027   0011A8  EFD8  F008         	goto	u860
  2028   0011AC                     u861:
  2029   0011AC  EFDC  F008         	goto	l2188
  2030   0011B0                     u860:
  2031   0011B0  6C07               	negf	___awdiv@quotient^0,c
  2032   0011B2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2033   0011B4  B0D8               	btfsc	status,0,c
  2034   0011B6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2035   0011B8                     l2188:
  2036   0011B8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2037   0011BC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2038   0011C0  0012               	return		;funcret
  2039   0011C2                     __end_of___awdiv:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _sendStringSerial4 *****************
  2043 ;; Defined at:
  2044 ;;		line 35 in file "serial.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  string          2    1[COMRAM] PTR unsigned char 
  2047 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;Total ram usage:        2 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 2
  2066 ;; This function calls:
  2067 ;;		_sendCharSerial4
  2068 ;; This function is called by:
  2069 ;;		_sendArrayCharSerial4
  2070 ;;		_sendIntSerial4
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text11
  2075   0014A0                     __ptext11:
  2076                           	callstack 0
  2077   0014A0                     _sendStringSerial4:
  2078                           	callstack 27
  2079   0014A0                     
  2080                           ;serial.c: 37:     while(*string != 0){
  2081   0014A0  EF67  F00A         	goto	l2456
  2082   0014A4                     l2452:
  2083                           
  2084                           ;serial.c: 38:   sendCharSerial4(*string++);
  2085   0014A4  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2086   0014A8  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2087   0014AC  0E00               	movlw	low (__smallconst shr (0+16))
  2088   0014AE  6EF8               	movwf	tblptru,c
  2089   0014B0  0E0D               	movlw	(high __ramtop+-1)
  2090   0014B2  64F7               	cpfsgt	tblptrh,c
  2091   0014B4  D003               	bra	u1307
  2092   0014B6  0008               	tblrd		*
  2093   0014B8  50F5               	movf	tablat,w,c
  2094   0014BA  D005               	bra	u1300
  2095   0014BC                     u1307:
  2096   0014BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2097   0014C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2098   0014C4  50EF               	movf	indf0,w,c
  2099   0014C6                     u1300:
  2100   0014C6  ECA1  F00B         	call	_sendCharSerial4
  2101   0014CA  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2102   0014CC  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2103   0014CE                     l2456:
  2104                           
  2105                           ;serial.c: 37:     while(*string != 0){
  2106   0014CE  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2107   0014D2  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2108   0014D6  0E00               	movlw	low (__smallconst shr (0+16))
  2109   0014D8  6EF8               	movwf	tblptru,c
  2110   0014DA  0E0D               	movlw	(high __ramtop+-1)
  2111   0014DC  64F7               	cpfsgt	tblptrh,c
  2112   0014DE  D003               	bra	u1317
  2113   0014E0  0008               	tblrd		*
  2114   0014E2  50F5               	movf	tablat,w,c
  2115   0014E4  D005               	bra	u1310
  2116   0014E6                     u1317:
  2117   0014E6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2118   0014EA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2119   0014EE  50EF               	movf	indf0,w,c
  2120   0014F0                     u1310:
  2121   0014F0  0900               	iorlw	0
  2122   0014F2  A4D8               	btfss	status,2,c
  2123   0014F4  EF7E  F00A         	goto	u1321
  2124   0014F8  EF80  F00A         	goto	u1320
  2125   0014FC                     u1321:
  2126   0014FC  EF52  F00A         	goto	l2452
  2127   001500                     u1320:
  2128   001500  0012               	return		;funcret
  2129   001502                     __end_of_sendStringSerial4:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _sendCharSerial4 *****************
  2133 ;; Defined at:
  2134 ;;		line 29 in file "serial.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  charToSend      1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  charToSend      1    0[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:        1 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_sendStringSerial4
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text12
  2163   001742                     __ptext12:
  2164                           	callstack 0
  2165   001742                     _sendCharSerial4:
  2166                           	callstack 27
  2167                           
  2168                           ;incstack = 0
  2169                           ;sendCharSerial4@charToSend stored from wreg
  2170   001742  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2171   001744                     l399:
  2172   001744  010E               	movlb	14	; () banked
  2173   001746  A537               	btfss	55,2,b	;volatile
  2174   001748  EFA8  F00B         	goto	u1121
  2175   00174C  EFAA  F00B         	goto	u1120
  2176   001750                     u1121:
  2177   001750  EFA2  F00B         	goto	l399
  2178   001754                     u1120:
  2179   001754                     
  2180                           ; BSR set to: 14
  2181                           ;serial.c: 31:     TX4REG = charToSend;
  2182   001754  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2183   001758                     
  2184                           ; BSR set to: 14
  2185   001758  0012               	return		;funcret
  2186   00175A                     __end_of_sendCharSerial4:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _initUSART4 *****************
  2190 ;; Defined at:
  2191 ;;		line 5 in file "serial.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text13
  2220   001724                     __ptext13:
  2221                           	callstack 0
  2222   001724                     _initUSART4:
  2223                           	callstack 29
  2224   001724                     
  2225                           ;serial.c: 9:     RC0PPS = 0x12;
  2226   001724  0E12               	movlw	18
  2227   001726  010E               	movlb	14	; () banked
  2228   001728  6F62               	movwf	98,b	;volatile
  2229                           
  2230                           ;serial.c: 10:     RX4PPS = 0x11;
  2231   00172A  0E11               	movlw	17
  2232   00172C  6F15               	movwf	21,b	;volatile
  2233   00172E                     
  2234                           ; BSR set to: 14
  2235                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2236   00172E  97E9               	bcf	233,3,b	;volatile
  2237   001730                     
  2238                           ; BSR set to: 14
  2239                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2240   001730  95E8               	bcf	232,2,b	;volatile
  2241                           
  2242                           ;serial.c: 14:     SP4BRGL = 51;
  2243   001732  0E33               	movlw	51
  2244   001734  6FE5               	movwf	229,b	;volatile
  2245                           
  2246                           ;serial.c: 15:     SP4BRGH = 0;
  2247   001736  0E00               	movlw	0
  2248   001738  6FE6               	movwf	230,b	;volatile
  2249   00173A                     
  2250                           ; BSR set to: 14
  2251                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2252   00173A  89E7               	bsf	231,4,b	;volatile
  2253   00173C                     
  2254                           ; BSR set to: 14
  2255                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2256   00173C  8BE8               	bsf	232,5,b	;volatile
  2257   00173E                     
  2258                           ; BSR set to: 14
  2259                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2260   00173E  8FE7               	bsf	231,7,b	;volatile
  2261   001740                     
  2262                           ; BSR set to: 14
  2263   001740  0012               	return		;funcret
  2264   001742                     __end_of_initUSART4:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _initDCmotorsPWM *****************
  2268 ;; Defined at:
  2269 ;;		line 5 in file "dc_motor.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text14
  2298   00132C                     __ptext14:
  2299                           	callstack 0
  2300   00132C                     _initDCmotorsPWM:
  2301                           	callstack 29
  2302   00132C                     
  2303                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2304   00132C  9485               	bcf	133,2,c	;volatile
  2305                           
  2306                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2307   00132E  9885               	bcf	133,4,c	;volatile
  2308                           
  2309                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2310   001330  9E83               	bcf	131,7,c	;volatile
  2311                           
  2312                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2313   001332  9C87               	bcf	135,6,c	;volatile
  2314                           
  2315                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2316   001334  947D               	bcf	125,2,c	;volatile
  2317                           
  2318                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2319   001336  987D               	bcf	125,4,c	;volatile
  2320                           
  2321                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2322   001338  9E7B               	bcf	123,7,c	;volatile
  2323                           
  2324                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2325   00133A  9C7F               	bcf	127,6,c	;volatile
  2326   00133C                     
  2327                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2328   00133C  0E05               	movlw	5
  2329   00133E  010E               	movlb	14	; () banked
  2330   001340  6F74               	movwf	116,b	;volatile
  2331                           
  2332                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2333   001342  0E06               	movlw	6
  2334   001344  6F76               	movwf	118,b	;volatile
  2335                           
  2336                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2337   001346  0E07               	movlw	7
  2338   001348  6F69               	movwf	105,b	;volatile
  2339                           
  2340                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2341   00134A  0E08               	movlw	8
  2342   00134C  6F88               	movwf	136,b	;volatile
  2343                           
  2344                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2345   00134E  50BD               	movf	189,w,c	;volatile
  2346   001350  0B8F               	andlw	-113
  2347   001352  0940               	iorlw	64
  2348   001354  6EBD               	movwf	189,c	;volatile
  2349                           
  2350                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2351   001356  0EE0               	movlw	-32
  2352   001358  16BE               	andwf	190,f,c	;volatile
  2353                           
  2354                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2355   00135A  50BF               	movf	191,w,c	;volatile
  2356   00135C  0BF0               	andlw	-16
  2357   00135E  0901               	iorlw	1
  2358   001360  6EBF               	movwf	191,c	;volatile
  2359   001362                     
  2360                           ; BSR set to: 14
  2361                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2362   001362  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2363   001366                     
  2364                           ; BSR set to: 14
  2365                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2366   001366  8EBD               	bsf	189,7,c	;volatile
  2367                           
  2368                           ;dc_motor.c: 35:     CCPR1H=0;
  2369   001368  0E00               	movlw	0
  2370   00136A  6EAA               	movwf	170,c	;volatile
  2371                           
  2372                           ;dc_motor.c: 36:     CCPR2H=0;
  2373   00136C  0E00               	movlw	0
  2374   00136E  6EA6               	movwf	166,c	;volatile
  2375                           
  2376                           ;dc_motor.c: 37:     CCPR3H=0;
  2377   001370  0E00               	movlw	0
  2378   001372  010F               	movlb	15	; () banked
  2379   001374  6F25               	movwf	37,b	;volatile
  2380                           
  2381                           ;dc_motor.c: 38:     CCPR4H=0;
  2382   001376  0E00               	movlw	0
  2383   001378  6F21               	movwf	33,b	;volatile
  2384                           
  2385                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2386   00137A  0EFC               	movlw	-4
  2387   00137C  16AD               	andwf	173,f,c	;volatile
  2388                           
  2389                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2390   00137E  0EF3               	movlw	-13
  2391   001380  16AD               	andwf	173,f,c	;volatile
  2392                           
  2393                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2394   001382  0ECF               	movlw	-49
  2395   001384  16AD               	andwf	173,f,c	;volatile
  2396                           
  2397                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2398   001386  0E3F               	movlw	-193
  2399   001388  16AD               	andwf	173,f,c	;volatile
  2400   00138A                     
  2401                           ; BSR set to: 15
  2402                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2403   00138A  88AB               	bsf	171,4,c	;volatile
  2404                           
  2405                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2406   00138C  50AB               	movf	171,w,c	;volatile
  2407   00138E  0BF0               	andlw	-16
  2408   001390  090C               	iorlw	12
  2409   001392  6EAB               	movwf	171,c	;volatile
  2410   001394                     
  2411                           ; BSR set to: 15
  2412                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2413   001394  8EAB               	bsf	171,7,c	;volatile
  2414   001396                     
  2415                           ; BSR set to: 15
  2416                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2417   001396  88A7               	bsf	167,4,c	;volatile
  2418                           
  2419                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2420   001398  50A7               	movf	167,w,c	;volatile
  2421   00139A  0BF0               	andlw	-16
  2422   00139C  090C               	iorlw	12
  2423   00139E  6EA7               	movwf	167,c	;volatile
  2424   0013A0                     
  2425                           ; BSR set to: 15
  2426                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2427   0013A0  8EA7               	bsf	167,7,c	;volatile
  2428   0013A2                     
  2429                           ; BSR set to: 15
  2430                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2431   0013A2  8926               	bsf	38,4,b	;volatile
  2432                           
  2433                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2434   0013A4  5126               	movf	38,w,b	;volatile
  2435   0013A6  0BF0               	andlw	-16
  2436   0013A8  090C               	iorlw	12
  2437   0013AA  6F26               	movwf	38,b	;volatile
  2438   0013AC                     
  2439                           ; BSR set to: 15
  2440                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2441   0013AC  8F26               	bsf	38,7,b	;volatile
  2442   0013AE                     
  2443                           ; BSR set to: 15
  2444                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2445   0013AE  8922               	bsf	34,4,b	;volatile
  2446                           
  2447                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2448   0013B0  5122               	movf	34,w,b	;volatile
  2449   0013B2  0BF0               	andlw	-16
  2450   0013B4  090C               	iorlw	12
  2451   0013B6  6F22               	movwf	34,b	;volatile
  2452   0013B8                     
  2453                           ; BSR set to: 15
  2454                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2455   0013B8  8F22               	bsf	34,7,b	;volatile
  2456   0013BA                     
  2457                           ; BSR set to: 15
  2458   0013BA  0012               	return		;funcret
  2459   0013BC                     __end_of_initDCmotorsPWM:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _color_click_init *****************
  2463 ;; Defined at:
  2464 ;;		line 5 in file "color.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;Total ram usage:        1 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 4
  2485 ;; This function calls:
  2486 ;;		_I2C_2_Master_Init
  2487 ;;		_color_writetoaddr
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text15
  2494   001656                     __ptext15:
  2495                           	callstack 0
  2496   001656                     _color_click_init:
  2497                           	callstack 26
  2498   001656                     
  2499                           ;color.c: 8:     I2C_2_Master_Init();
  2500   001656  EC45  F00B         	call	_I2C_2_Master_Init	;wreg free
  2501   00165A                     
  2502                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2503   00165A  0E01               	movlw	1
  2504   00165C  6E03               	movwf	color_writetoaddr@value^0,c
  2505   00165E  0E00               	movlw	0
  2506   001660  EC82  F00B         	call	_color_writetoaddr
  2507   001664                     
  2508                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2509   001664  0E3F               	movlw	63
  2510   001666  6E05               	movwf	??_color_click_init^0,c
  2511   001668  0E55               	movlw	85
  2512   00166A                     u2547:
  2513   00166A  2EE8               	decfsz	wreg,f,c
  2514   00166C  D7FE               	bra	u2547
  2515   00166E  2E05               	decfsz	??_color_click_init^0,f,c
  2516   001670  D7FC               	bra	u2547
  2517   001672  0000               	nop	
  2518   001674                     
  2519                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2520   001674  0E03               	movlw	3
  2521   001676  6E03               	movwf	color_writetoaddr@value^0,c
  2522   001678  0E00               	movlw	0
  2523   00167A  EC82  F00B         	call	_color_writetoaddr
  2524   00167E                     
  2525                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2526   00167E  0ED5               	movlw	213
  2527   001680  6E03               	movwf	color_writetoaddr@value^0,c
  2528   001682  0E01               	movlw	1
  2529   001684  EC82  F00B         	call	_color_writetoaddr
  2530   001688  0012               	return		;funcret
  2531   00168A                     __end_of_color_click_init:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _color_writetoaddr *****************
  2535 ;; Defined at:
  2536 ;;		line 21 in file "color.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  address         1    wreg     unsigned char 
  2539 ;;  value           1    2[COMRAM] unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  address         1    3[COMRAM] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2551 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2555 ;;Total ram usage:        2 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 3
  2558 ;; This function calls:
  2559 ;;		_I2C_2_Master_Start
  2560 ;;		_I2C_2_Master_Stop
  2561 ;;		_I2C_2_Master_Write
  2562 ;; This function is called by:
  2563 ;;		_color_click_init
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text16
  2568   001704                     __ptext16:
  2569                           	callstack 0
  2570   001704                     _color_writetoaddr:
  2571                           	callstack 26
  2572                           
  2573                           ;incstack = 0
  2574                           ;color_writetoaddr@address stored from wreg
  2575   001704  6E04               	movwf	color_writetoaddr@address^0,c
  2576   001706                     
  2577                           ;color.c: 22:     I2C_2_Master_Start();
  2578   001706  ECC4  F00B         	call	_I2C_2_Master_Start	;wreg free
  2579                           
  2580                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2581   00170A  0E52               	movlw	82
  2582   00170C  ECB4  F00B         	call	_I2C_2_Master_Write
  2583                           
  2584                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2585   001710  5004               	movf	color_writetoaddr@address^0,w,c
  2586   001712  0980               	iorlw	128
  2587   001714  ECB4  F00B         	call	_I2C_2_Master_Write
  2588                           
  2589                           ;color.c: 25:     I2C_2_Master_Write(value);
  2590   001718  5003               	movf	color_writetoaddr@value^0,w,c
  2591   00171A  ECB4  F00B         	call	_I2C_2_Master_Write
  2592                           
  2593                           ;color.c: 26:     I2C_2_Master_Stop();
  2594   00171E  ECBF  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2595   001722  0012               	return		;funcret
  2596   001724                     __end_of_color_writetoaddr:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _I2C_2_Master_Write *****************
  2600 ;; Defined at:
  2601 ;;		line 45 in file "i2c.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  data_byte       1    wreg     unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  data_byte       1    1[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 2
  2622 ;; This function calls:
  2623 ;;		_I2C_2_Master_Idle
  2624 ;; This function is called by:
  2625 ;;		_color_writetoaddr
  2626 ;;		_color_read_Red
  2627 ;;		_color_read_Blue
  2628 ;;		_color_read_Green
  2629 ;;		_color_read_Clear
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text17
  2634   001768                     __ptext17:
  2635                           	callstack 0
  2636   001768                     _I2C_2_Master_Write:
  2637                           	callstack 26
  2638                           
  2639                           ;incstack = 0
  2640                           ;I2C_2_Master_Write@data_byte stored from wreg
  2641   001768  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2642   00176A                     
  2643                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2644   00176A  EC5A  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2645   00176E                     
  2646                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2647   00176E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2648   001772  0012               	return		;funcret
  2649   001774                     __end_of_I2C_2_Master_Write:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _I2C_2_Master_Stop *****************
  2653 ;; Defined at:
  2654 ;;		line 39 in file "i2c.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 2
  2675 ;; This function calls:
  2676 ;;		_I2C_2_Master_Idle
  2677 ;; This function is called by:
  2678 ;;		_color_writetoaddr
  2679 ;;		_color_read_Red
  2680 ;;		_color_read_Blue
  2681 ;;		_color_read_Green
  2682 ;;		_color_read_Clear
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text18
  2687   00177E                     __ptext18:
  2688                           	callstack 0
  2689   00177E                     _I2C_2_Master_Stop:
  2690                           	callstack 26
  2691   00177E                     
  2692                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2693   00177E  EC5A  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2694   001782                     
  2695                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2696   001782  010E               	movlb	14	; () banked
  2697   001784  85DA               	bsf	218,2,b	;volatile
  2698   001786                     
  2699                           ; BSR set to: 14
  2700   001786  0012               	return		;funcret
  2701   001788                     __end_of_I2C_2_Master_Stop:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _I2C_2_Master_Start *****************
  2705 ;; Defined at:
  2706 ;;		line 27 in file "i2c.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 2
  2727 ;; This function calls:
  2728 ;;		_I2C_2_Master_Idle
  2729 ;; This function is called by:
  2730 ;;		_color_writetoaddr
  2731 ;;		_color_read_Red
  2732 ;;		_color_read_Blue
  2733 ;;		_color_read_Green
  2734 ;;		_color_read_Clear
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text19
  2739   001788                     __ptext19:
  2740                           	callstack 0
  2741   001788                     _I2C_2_Master_Start:
  2742                           	callstack 26
  2743   001788                     
  2744                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2745   001788  EC5A  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2746   00178C                     
  2747                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2748   00178C  010E               	movlb	14	; () banked
  2749   00178E  81DA               	bsf	218,0,b	;volatile
  2750   001790                     
  2751                           ; BSR set to: 14
  2752   001790  0012               	return		;funcret
  2753   001792                     __end_of_I2C_2_Master_Start:
  2754                           	callstack 0
  2755                           
  2756 ;; *************** function _I2C_2_Master_Idle *****************
  2757 ;; Defined at:
  2758 ;;		line 22 in file "i2c.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;Total ram usage:        1 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 1
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_I2C_2_Master_Start
  2783 ;;		_I2C_2_Master_Stop
  2784 ;;		_I2C_2_Master_Write
  2785 ;;		_I2C_2_Master_RepStart
  2786 ;;		_I2C_2_Master_Read
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text20
  2791   0016B4                     __ptext20:
  2792                           	callstack 0
  2793   0016B4                     _I2C_2_Master_Idle:
  2794                           	callstack 26
  2795   0016B4                     l242:
  2796   0016B4  010E               	movlb	14	; () banked
  2797   0016B6  B5D8               	btfsc	216,2,b	;volatile
  2798   0016B8  EF60  F00B         	goto	u981
  2799   0016BC  EF62  F00B         	goto	u980
  2800   0016C0                     u981:
  2801   0016C0  EF5A  F00B         	goto	l242
  2802   0016C4                     u980:
  2803   0016C4                     
  2804                           ; BSR set to: 14
  2805   0016C4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2806   0016C8  0E1F               	movlw	31
  2807   0016CA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2808   0016CC  A4D8               	btfss	status,2,c
  2809   0016CE  EF6B  F00B         	goto	u991
  2810   0016D2  EF6D  F00B         	goto	u990
  2811   0016D6                     u991:
  2812   0016D6  EF5A  F00B         	goto	l242
  2813   0016DA                     u990:
  2814   0016DA                     
  2815                           ; BSR set to: 14
  2816   0016DA  0012               	return		;funcret
  2817   0016DC                     __end_of_I2C_2_Master_Idle:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _I2C_2_Master_Init *****************
  2821 ;; Defined at:
  2822 ;;		line 4 in file "i2c.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_color_click_init
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text21
  2851   00168A                     __ptext21:
  2852                           	callstack 0
  2853   00168A                     _I2C_2_Master_Init:
  2854                           	callstack 28
  2855   00168A                     
  2856                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2857   00168A  010E               	movlb	14	; () banked
  2858   00168C  51D9               	movf	217,w,b	;volatile
  2859   00168E  0BF0               	andlw	-16
  2860   001690  0908               	iorlw	8
  2861   001692  6FD9               	movwf	217,b	;volatile
  2862   001694                     
  2863                           ; BSR set to: 14
  2864                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2865   001694  8BD9               	bsf	217,5,b	;volatile
  2866                           
  2867                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2868   001696  0E9F               	movlw	159
  2869   001698  6FD6               	movwf	214,b	;volatile
  2870   00169A                     
  2871                           ; BSR set to: 14
  2872                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2873   00169A  8A84               	bsf	132,5,c	;volatile
  2874   00169C                     
  2875                           ; BSR set to: 14
  2876                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2877   00169C  8C84               	bsf	132,6,c	;volatile
  2878   00169E                     
  2879                           ; BSR set to: 14
  2880                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2881   00169E  9BA7               	bcf	167,5,b	;volatile
  2882   0016A0                     
  2883                           ; BSR set to: 14
  2884                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2885   0016A0  9DA7               	bcf	167,6,b	;volatile
  2886                           
  2887                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2888   0016A2  0E1D               	movlw	29
  2889   0016A4  6F1D               	movwf	29,b	;volatile
  2890                           
  2891                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2892   0016A6  0E1E               	movlw	30
  2893   0016A8  6F1C               	movwf	28,b	;volatile
  2894                           
  2895                           ;i2c.c: 18:   RD5PPS=0x1C;
  2896   0016AA  0E1C               	movlw	28
  2897   0016AC  6F6F               	movwf	111,b	;volatile
  2898                           
  2899                           ;i2c.c: 19:   RD6PPS=0x1B;
  2900   0016AE  0E1B               	movlw	27
  2901   0016B0  6F70               	movwf	112,b	;volatile
  2902   0016B2                     
  2903                           ; BSR set to: 14
  2904   0016B2  0012               	return		;funcret
  2905   0016B4                     __end_of_I2C_2_Master_Init:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _buggy_lights_init *****************
  2909 ;; Defined at:
  2910 ;;		line 4 in file "buggy_lights.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		None
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text22
  2939   001554                     __ptext22:
  2940                           	callstack 0
  2941   001554                     _buggy_lights_init:
  2942                           	callstack 29
  2943   001554                     
  2944                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  2945   001554  9884               	bcf	132,4,c	;volatile
  2946                           
  2947                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  2948   001556  9288               	bcf	136,1,c	;volatile
  2949                           
  2950                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  2951   001558  9684               	bcf	132,3,c	;volatile
  2952                           
  2953                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  2954   00155A  9086               	bcf	134,0,c	;volatile
  2955                           
  2956                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  2957   00155C  9088               	bcf	136,0,c	;volatile
  2958                           
  2959                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  2960   00155E  887C               	bsf	124,4,c	;volatile
  2961                           
  2962                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  2963   001560  8280               	bsf	128,1,c	;volatile
  2964                           
  2965                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  2966   001562  867C               	bsf	124,3,c	;volatile
  2967                           
  2968                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  2969   001564  807E               	bsf	126,0,c	;volatile
  2970                           
  2971                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  2972   001566  8080               	bsf	128,0,c	;volatile
  2973                           
  2974                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  2975   001568  9E84               	bcf	132,7,c	;volatile
  2976                           
  2977                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  2978   00156A  9688               	bcf	136,3,c	;volatile
  2979                           
  2980                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  2981   00156C  8E7C               	bsf	124,7,c	;volatile
  2982                           
  2983                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  2984   00156E  8680               	bsf	128,3,c	;volatile
  2985                           
  2986                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  2987   001570  9081               	bcf	129,0,c	;volatile
  2988                           
  2989                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  2990   001572  9483               	bcf	131,2,c	;volatile
  2991                           
  2992                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  2993   001574  9084               	bcf	132,0,c	;volatile
  2994                           
  2995                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  2996   001576  8079               	bsf	121,0,c	;volatile
  2997                           
  2998                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  2999   001578  847B               	bsf	123,2,c	;volatile
  3000                           
  3001                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  3002   00157A  807C               	bsf	124,0,c	;volatile
  3003                           
  3004                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  3005   00157C  9281               	bcf	129,1,c	;volatile
  3006                           
  3007                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  3008   00157E  9C83               	bcf	131,6,c	;volatile
  3009                           
  3010                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  3011   001580  9488               	bcf	136,2,c	;volatile
  3012                           
  3013                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  3014   001582  8279               	bsf	121,1,c	;volatile
  3015                           
  3016                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  3017   001584  8C7B               	bsf	123,6,c	;volatile
  3018                           
  3019                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  3020   001586  8480               	bsf	128,2,c	;volatile
  3021                           
  3022                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  3023   001588  9287               	bcf	135,1,c	;volatile
  3024                           
  3025                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  3026   00158A  9881               	bcf	129,4,c	;volatile
  3027                           
  3028                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  3029   00158C  9E86               	bcf	134,7,c	;volatile
  3030                           
  3031                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  3032   00158E  827F               	bsf	127,1,c	;volatile
  3033                           
  3034                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  3035   001590  8879               	bsf	121,4,c	;volatile
  3036                           
  3037                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  3038   001592  8E7E               	bsf	126,7,c	;volatile
  3039                           
  3040                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  3041   001594  9087               	bcf	135,0,c	;volatile
  3042                           
  3043                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  3044   001596  9E85               	bcf	133,7,c	;volatile
  3045                           
  3046                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  3047   001598  9681               	bcf	129,3,c	;volatile
  3048                           
  3049                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  3050   00159A  807F               	bsf	127,0,c	;volatile
  3051                           
  3052                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  3053   00159C  8E7D               	bsf	125,7,c	;volatile
  3054                           
  3055                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  3056   00159E  8679               	bsf	121,3,c	;volatile
  3057   0015A0  0012               	return		;funcret
  3058   0015A2                     __end_of_buggy_lights_init:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _Timer0_init *****************
  3062 ;; Defined at:
  3063 ;;		line 8 in file "timers.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text23
  3092   0016DC                     __ptext23:
  3093                           	callstack 0
  3094   0016DC                     _Timer0_init:
  3095                           	callstack 29
  3096   0016DC                     
  3097                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  3098   0016DC  50D6               	movf	214,w,c	;volatile
  3099   0016DE  0B1F               	andlw	-225
  3100   0016E0  0940               	iorlw	64
  3101   0016E2  6ED6               	movwf	214,c	;volatile
  3102   0016E4                     
  3103                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  3104   0016E4  88D6               	bsf	214,4,c	;volatile
  3105   0016E6                     
  3106                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  3107   0016E6  88D5               	bsf	213,4,c	;volatile
  3108                           
  3109                           ;timers.c: 14:     T0CON1bits.T0CKPS=0b1110;
  3110   0016E8  50D6               	movf	214,w,c	;volatile
  3111   0016EA  0BF0               	andlw	-16
  3112   0016EC  090E               	iorlw	14
  3113   0016EE  6ED6               	movwf	214,c	;volatile
  3114                           
  3115                           ;timers.c: 21:     TMR0H = 0;
  3116   0016F0  0E00               	movlw	0
  3117   0016F2  6ED4               	movwf	212,c	;volatile
  3118                           
  3119                           ;timers.c: 22:     TMR0L = 0;
  3120   0016F4  0E00               	movlw	0
  3121   0016F6  6ED3               	movwf	211,c	;volatile
  3122   0016F8                     
  3123                           ;timers.c: 24:     T0CON0bits.T0EN=1;
  3124   0016F8  8ED5               	bsf	213,7,c	;volatile
  3125   0016FA                     
  3126                           ;timers.c: 25:     PIE0bits.TMR0IE = 1;
  3127   0016FA  010E               	movlb	14	; () banked
  3128   0016FC  8B29               	bsf	41,5,b	;volatile
  3129   0016FE                     
  3130                           ; BSR set to: 14
  3131                           ;timers.c: 26:     INTCONbits.PEIE = 1;
  3132   0016FE  8CF2               	bsf	242,6,c	;volatile
  3133   001700                     
  3134                           ; BSR set to: 14
  3135                           ;timers.c: 27:     INTCONbits.GIE = 1;
  3136   001700  8EF2               	bsf	242,7,c	;volatile
  3137   001702                     
  3138                           ; BSR set to: 14
  3139   001702  0012               	return		;funcret
  3140   001704                     __end_of_Timer0_init:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _ISR *****************
  3144 ;; Defined at:
  3145 ;;		line 49 in file "timers.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		None
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		Interrupt level 2
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	intcode
  3173   000008                     __pintcode:
  3174                           	callstack 0
  3175   000008                     _ISR:
  3176                           	callstack 24
  3177                           
  3178                           ; BSR set to: 14
  3179                           ;incstack = 0
  3180   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3181   00000A                     
  3182                           ;timers.c: 52:     if (PIR0bits.TMR0IF) {
  3183   00000A  010E               	movlb	14	; () banked
  3184   00000C  AB33               	btfss	51,5,b	;volatile
  3185   00000E  EF0B  F000         	goto	i2u80_41
  3186   000012  EF0D  F000         	goto	i2u80_40
  3187   000016                     i2u80_41:
  3188   000016  EF0E  F000         	goto	i2l605
  3189   00001A                     i2u80_40:
  3190   00001A                     
  3191                           ; BSR set to: 14
  3192                           ;timers.c: 60:         PIR0bits.TMR0IF = 0;
  3193   00001A  9B33               	bcf	51,5,b	;volatile
  3194   00001C                     i2l605:
  3195                           
  3196                           ; BSR set to: 14
  3197   00001C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3198   00001E  0011               	retfie		f
  3199   000020                     __end_of_ISR:
  3200                           	callstack 0
  3201                           
  3202                           	psect	rparam
  3203   000000                     
  3204                           	psect	temp
  3205   00005E                     btemp:
  3206                           	callstack 0
  3207   00005E                     	ds	1
  3208   000000                     int$flags	set	btemp
  3209   000000                     wtemp8	set	btemp+1
  3210   000000                     ttemp5	set	btemp+1
  3211   000000                     ttemp6	set	btemp+4
  3212   000000                     ttemp7	set	btemp+8
  3213                           
  3214                           	psect	idloc
  3215                           
  3216                           ;Config register IDLOC0 @ 0x200000
  3217                           ;	unspecified, using default values
  3218   200000                     	org	2097152
  3219   200000  FFFF               	dw	65535
  3220                           
  3221                           ;Config register IDLOC1 @ 0x200002
  3222                           ;	unspecified, using default values
  3223   200002                     	org	2097154
  3224   200002  FFFF               	dw	65535
  3225                           
  3226                           ;Config register IDLOC2 @ 0x200004
  3227                           ;	unspecified, using default values
  3228   200004                     	org	2097156
  3229   200004  FFFF               	dw	65535
  3230                           
  3231                           ;Config register IDLOC3 @ 0x200006
  3232                           ;	unspecified, using default values
  3233   200006                     	org	2097158
  3234   200006  FFFF               	dw	65535
  3235                           
  3236                           ;Config register IDLOC4 @ 0x200008
  3237                           ;	unspecified, using default values
  3238   200008                     	org	2097160
  3239   200008  FFFF               	dw	65535
  3240                           
  3241                           ;Config register IDLOC5 @ 0x20000A
  3242                           ;	unspecified, using default values
  3243   20000A                     	org	2097162
  3244   20000A  FFFF               	dw	65535
  3245                           
  3246                           ;Config register IDLOC6 @ 0x20000C
  3247                           ;	unspecified, using default values
  3248   20000C                     	org	2097164
  3249   20000C  FFFF               	dw	65535
  3250                           
  3251                           ;Config register IDLOC7 @ 0x20000E
  3252                           ;	unspecified, using default values
  3253   20000E                     	org	2097166
  3254   20000E  FFFF               	dw	65535
  3255                           
  3256                           	psect	config
  3257                           
  3258                           ;Config register CONFIG1L @ 0x300000
  3259                           ;	External Oscillator mode Selection bits
  3260                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3261                           ;	Power-up default value for COSC bits
  3262                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3263   300000                     	org	3145728
  3264   300000  AA                 	db	170
  3265                           
  3266                           ;Config register CONFIG1H @ 0x300001
  3267                           ;	unspecified, using default values
  3268                           ;	Clock Out Enable bit
  3269                           ;	CLKOUTEN = 0x1, unprogrammed default
  3270                           ;	Clock Switch Enable bit
  3271                           ;	CSWEN = 0x1, unprogrammed default
  3272                           ;	Fail-Safe Clock Monitor Enable bit
  3273                           ;	FCMEN = 0x1, unprogrammed default
  3274   300001                     	org	3145729
  3275   300001  FF                 	db	255
  3276                           
  3277                           ;Config register CONFIG2L @ 0x300002
  3278                           ;	unspecified, using default values
  3279                           ;	Master Clear Enable bit
  3280                           ;	MCLRE = 0x1, unprogrammed default
  3281                           ;	Power-up Timer Enable bit
  3282                           ;	PWRTE = 0x1, unprogrammed default
  3283                           ;	Low-power BOR enable bit
  3284                           ;	LPBOREN = 0x1, unprogrammed default
  3285                           ;	Brown-out Reset Enable bits
  3286                           ;	BOREN = 0x3, unprogrammed default
  3287   300002                     	org	3145730
  3288   300002  FF                 	db	255
  3289                           
  3290                           ;Config register CONFIG2H @ 0x300003
  3291                           ;	unspecified, using default values
  3292                           ;	Brown Out Reset Voltage selection bits
  3293                           ;	BORV = 0x3, unprogrammed default
  3294                           ;	ZCD Disable bit
  3295                           ;	ZCD = 0x1, unprogrammed default
  3296                           ;	PPSLOCK bit One-Way Set Enable bit
  3297                           ;	PPS1WAY = 0x1, unprogrammed default
  3298                           ;	Stack Full/Underflow Reset Enable bit
  3299                           ;	STVREN = 0x1, unprogrammed default
  3300                           ;	Debugger Enable bit
  3301                           ;	DEBUG = 0x1, unprogrammed default
  3302                           ;	Extended Instruction Set Enable bit
  3303                           ;	XINST = 0x1, unprogrammed default
  3304   300003                     	org	3145731
  3305   300003  FF                 	db	255
  3306                           
  3307                           ;Config register CONFIG3L @ 0x300004
  3308                           ;	WDT Period Select bits
  3309                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3310                           ;	WDT operating mode
  3311                           ;	WDTE = OFF, WDT Disabled
  3312   300004                     	org	3145732
  3313   300004  9F                 	db	159
  3314                           
  3315                           ;Config register CONFIG3H @ 0x300005
  3316                           ;	unspecified, using default values
  3317                           ;	WDT Window Select bits
  3318                           ;	WDTCWS = 0x7, unprogrammed default
  3319                           ;	WDT input clock selector
  3320                           ;	WDTCCS = 0x7, unprogrammed default
  3321   300005                     	org	3145733
  3322   300005  FF                 	db	255
  3323                           
  3324                           ;Config register CONFIG4L @ 0x300006
  3325                           ;	unspecified, using default values
  3326                           ;	Write Protection Block 0
  3327                           ;	WRT0 = 0x1, unprogrammed default
  3328                           ;	Write Protection Block 1
  3329                           ;	WRT1 = 0x1, unprogrammed default
  3330                           ;	Write Protection Block 2
  3331                           ;	WRT2 = 0x1, unprogrammed default
  3332                           ;	Write Protection Block 3
  3333                           ;	WRT3 = 0x1, unprogrammed default
  3334                           ;	Write Protection Block 3
  3335                           ;	WRT4 = 0x1, unprogrammed default
  3336                           ;	Write Protection Block 3
  3337                           ;	WRT5 = 0x1, unprogrammed default
  3338                           ;	Write Protection Block 3
  3339                           ;	WRT6 = 0x1, unprogrammed default
  3340                           ;	Write Protection Block 3
  3341                           ;	WRT7 = 0x1, unprogrammed default
  3342   300006                     	org	3145734
  3343   300006  FF                 	db	255
  3344                           
  3345                           ;Config register CONFIG4H @ 0x300007
  3346                           ;	unspecified, using default values
  3347                           ;	Configuration Register Write Protection bit
  3348                           ;	WRTC = 0x1, unprogrammed default
  3349                           ;	Boot Block Write Protection bit
  3350                           ;	WRTB = 0x1, unprogrammed default
  3351                           ;	Data EEPROM Write Protection bit
  3352                           ;	WRTD = 0x1, unprogrammed default
  3353                           ;	Scanner Enable bit
  3354                           ;	SCANE = 0x1, unprogrammed default
  3355                           ;	Low Voltage Programming Enable bit
  3356                           ;	LVP = 0x1, unprogrammed default
  3357   300007                     	org	3145735
  3358   300007  FF                 	db	255
  3359                           
  3360                           ;Config register CONFIG5L @ 0x300008
  3361                           ;	unspecified, using default values
  3362                           ;	UserNVM Program Memory Code Protection bit
  3363                           ;	CP = 0x1, unprogrammed default
  3364                           ;	DataNVM Memory Code Protection bit
  3365                           ;	CPD = 0x1, unprogrammed default
  3366   300008                     	org	3145736
  3367   300008  FF                 	db	255
  3368                           
  3369                           ;Config register CONFIG5H @ 0x300009
  3370                           ;	unspecified, using default values
  3371   300009                     	org	3145737
  3372   300009  FF                 	db	255
  3373                           
  3374                           ;Config register CONFIG6L @ 0x30000A
  3375                           ;	unspecified, using default values
  3376                           ;	Table Read Protection Block 0
  3377                           ;	EBTR0 = 0x1, unprogrammed default
  3378                           ;	Table Read Protection Block 1
  3379                           ;	EBTR1 = 0x1, unprogrammed default
  3380                           ;	Table Read Protection Block 2
  3381                           ;	EBTR2 = 0x1, unprogrammed default
  3382                           ;	Table Read Protection Block 3
  3383                           ;	EBTR3 = 0x1, unprogrammed default
  3384                           ;	Table Read Protection Block 4
  3385                           ;	EBTR4 = 0x1, unprogrammed default
  3386                           ;	Table Read Protection Block 5
  3387                           ;	EBTR5 = 0x1, unprogrammed default
  3388                           ;	Table Read Protection Block 6
  3389                           ;	EBTR6 = 0x1, unprogrammed default
  3390                           ;	Table Read Protection Block 7
  3391                           ;	EBTR7 = 0x1, unprogrammed default
  3392   30000A                     	org	3145738
  3393   30000A  FF                 	db	255
  3394                           
  3395                           ;Config register CONFIG6H @ 0x30000B
  3396                           ;	unspecified, using default values
  3397                           ;	Boot Block Table Read Protection bit
  3398                           ;	EBTRB = 0x1, unprogrammed default
  3399   30000B                     	org	3145739
  3400   30000B  FF                 	db	255
  3401                           tosu	equ	0xFFF
  3402                           tosh	equ	0xFFE
  3403                           tosl	equ	0xFFD
  3404                           stkptr	equ	0xFFC
  3405                           pclatu	equ	0xFFB
  3406                           pclath	equ	0xFFA
  3407                           pcl	equ	0xFF9
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           indf0	equ	0xFEF
  3415                           postinc0	equ	0xFEE
  3416                           postdec0	equ	0xFED
  3417                           preinc0	equ	0xFEC
  3418                           plusw0	equ	0xFEB
  3419                           fsr0h	equ	0xFEA
  3420                           fsr0l	equ	0xFE9
  3421                           wreg	equ	0xFE8
  3422                           indf1	equ	0xFE7
  3423                           postinc1	equ	0xFE6
  3424                           postdec1	equ	0xFE5
  3425                           preinc1	equ	0xFE4
  3426                           plusw1	equ	0xFE3
  3427                           fsr1h	equ	0xFE2
  3428                           fsr1l	equ	0xFE1
  3429                           bsr	equ	0xFE0
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           postdec2	equ	0xFDD
  3433                           preinc2	equ	0xFDC
  3434                           plusw2	equ	0xFDB
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        24
    BSS         185
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      93
    BANK0           160      0     126
    BANK1           256    164     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2558$buffer	PTR unsigned char  size(2) Largest target is 0

    S2558$source	PTR const unsigned char  size(2) Largest target is 0

    sendArrayCharSerial4@arr	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), trail_timer_high(BANK1[20]), trail_timer_low(BANK1[20]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendArrayCharSerial4
    _sendArrayCharSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sendArrayCharSerial4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5156
                                             50 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
               _sendArrayCharSerial4
                         _writeTrail
 ---------------------------------------------------------------------------------
 (1) _writeTrail                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendArrayCharSerial4                               167   165      2    4292
                                             47 COMRAM     3     1      2
                                              0 BANK1    164   164      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _sendArrayCharSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _writeTrail

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      E0       7       87.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7E       5       78.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BB      62        0.0%
DATA                 0      0     1BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 12:01:21 2024

                _turn180Delay 00D8               _trail_timer_low 01B8        ??_sendArrayCharSerial4 0032  
                          l31 15A0                            l53 1688                            l56 1722  
                ___awdiv@sign 0006              _trail_timer_high 01CC                           l144 13BA  
                         l242 16B4                           l402 1758                           l245 16DA  
                         l254 1786                           l239 16B2                           l248 1790  
                         l408 1500                           l416 1430                           l257 1772  
                         l390 1740                           l591 1702                           l399 1744  
                         l594 1620                           l852 132A                           l839 11C0  
                         _ISR 0008                           u810 1110                           u811 110C  
                         u820 112A                           u900 12E0                           u821 1126  
                         u901 12DC                           u830 1150                           u910 12F6  
                         u831 114C                           u911 12F2                           u840 116E  
                         u920 131A                           u841 116A                           u921 1316  
                         u850 118A                           u930 11D2                           u851 1186  
                         u931 11CE                           u860 11B0                           u940 11E2  
                         u861 11AC                           u941 11DE                           u870 128E  
                         u950 1208                           u871 128A                           u951 1204  
                         u880 12A8                           u960 123A                           u881 12A4  
                         u961 1236                           u890 12C2                           u970 1630  
                         u891 12BE                           u971 162C                           u980 16C4  
                         u981 16C0                           u990 16DA                           u991 16D6  
                         _abs 1622                  ___awmod@sign 0006                           wreg 0FE8  
                 _squareDelay 00D4                          ?_ISR 0001                          ?_abs 0007  
                        l2200 129A                          l2210 12D2                          l2202 12A8  
                        l2212 12E0                          l2220 130A                          l2204 12B0  
                        l1341 1654                          l1333 154A                          l2310 1788  
                        l2150 1102                          l2222 131A                          l2214 12F6  
                        l2206 12C2                          l2230 11D2                          l2302 0FCC  
                        l1334 1552                          l1327 0FAC                          l2312 178C  
                        l2320 1782                          l2160 1132                          l2152 1110  
                        l2224 1322                          l2216 12FE                          l2208 12CA  
                        l2232 11E2                          l2304 0FEE                          l1328 0FFE  
                        l1353 127A                          l2314 176A                          l2170 1160  
                        l2162 1136                          l2154 1118                          l2218 1304  
                        l1338 163C                          l2242 1622                          l2234 11EC  
                        l2306 0FF6                          l2250 0E0A                          l2316 176E  
                        l2340 1754                          l2180 1194                          l2172 116E  
                        l2164 113E                          l2156 111C                          l2148 10FE  
                        l2244 1630                          l1364 1792                          l2236 1208  
                        l2228 11C2                          l2260 0E52                          l2252 0E12  
                        l2350 168A                          l2246 16B4                          l2318 177E  
                        l2510 133C                          l2182 119A                          l2174 1174  
                        l2166 1150                          l2158 112A                          l2238 123A  
                        l2270 0EBE                          l2262 0E5C                          l2254 0E38  
                        l2342 1502                          l1286 15EC                          l3310 1024  
                        l2360 16A0                          l2352 1694                          l2248 16C4  
                        l2520 1396                          l2512 1362                          l2176 118A  
                        l2168 1158                          l2184 11A0                          l2192 127C  
                        l2280 0F38                          l2272 0ED6                          l2264 0E7C  
                        l2256 0E40                          l2344 1506                          l2600 15EE  
                        l3320 1040                          l3312 1028                          l3304 1000  
                        l2354 169A                          l2362 1706                          l2530 13B8  
                        l2522 13A0                          l2514 1366                          l2338 1744  
                        l2450 14A0                          l2186 11B0                          l2178 1192  
                        l2194 1280                          l2290 0F7E                          l2282 0F48  
                        l2274 0F06                          l2266 0E9C                          l2258 0E4E  
                        l2346 1512                          l2602 1612                          l3330 105C  
                        l3322 1048                          l3314 102C                          l3306 1018  
                        l2356 169C                          l2524 13A2                          l2516 138A  
                        l2508 132C                          l2452 14A4                          l2188 11B8  
                        l2196 128E                          l2292 0F98                          l2284 0F58  
                        l2276 0F22                          l2268 0EB4                          l2348 152A  
                        l2460 15AE                          l2604 1616                          l3340 1078  
                        l3332 1064                          l3324 104C                          l3316 1030  
                        l3308 1018                          l2358 169E                          l2526 13AC  
                        l2518 1394                          l2454 14CA                          l2198 1296  
                        l2286 0F68                          l2294 0F9A                          l2278 0F26  
                        l2462 15B6                          l2606 161A                          l3350 1086  
                        l3342 107C                          l3334 106C                          l3326 1050  
                        l3318 1038                          l2472 1554                          l2480 1674  
                        l2528 13AE                          l2456 14CE                          l2288 0F76  
                        l2296 0FB8                          l2464 15BE                          l3280 1414  
                        l2608 161E                          l3360 10D2                          l3352 1094  
                        l3344 107E                          l3336 1070                          l3328 1054  
                        l2482 167E                          l2474 1656                          l2298 0FC0  
                        l2466 15D6                          l2458 15A2                          l3274 13CA  
                        l3362 10DE                          l3354 1098                          l3346 1080  
                        l3338 1074                          l2476 165A                          l2580 173A  
                        l2468 15E4                          l3276 13FA                          l3268 13BC  
                        l3356 10BA                          l3348 1084                          l2590 16E6  
                        l2478 1664                          l2582 173C                          l2574 1724  
                        l3278 13FE                          l3358 10C6                          l2592 16F8  
                        l2584 173E                          l2576 172E                          l2594 16FA  
                        l2586 16DC                          l2578 1730                          l2596 16FE  
                        l2588 16E4                          l2598 1700                          STR_1 0E01  
                        STR_2 0E06                          STR_3 0E06                          STR_4 0E03  
                        u1000 0E38                          u1001 0E34                          u1010 0E7C  
                        u1011 0E78                          u1020 0E9C                          u1021 0E98  
                        u1030 0ED2                          u1031 0ECC                          u1120 1754  
                        u1040 0ED4                          u1121 1750                          u1050 0F38  
                        u1130 154A                          u1051 0F34                          u1131 1546  
                        u1300 14C6                          u1060 0F48                          u2100 1094  
                        u1061 0F44                          u2101 1090                          u1310 14F0  
                        u1070 0F58                          u2110 10AA                          u1071 0F54  
                        u2111 10A2                          u1320 1500                          u1080 0F68  
                        u1321 14FC                          u1081 0F64                          u1090 0FAC  
                        u2050 1414                          u1307 14BC                          u1091 0FA8  
                        u2051 1410                          u1317 14E6                          u2128 10AC  
                _BAUD4CONbits 0EE9                          _T2PR 0FBC                          u2527 100A  
                        u2537 10E8                          u2547 166A                          abs@a 0007  
                        _dbuf 009C                          _main 1000                          _prec 00D2  
                        _nout 0055                          fsr0h 0FEA                          fsr1h 0FE2  
                        indf0 0FEF                          fsr2h 0FDA                          fsr0l 0FE9  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 005E                          start 0020                  ___param_bank 0000  
                       ??_ISR 0001                         ??_abs 0009                         ?_main 0001  
          _timer_high_pointer 004B               __end_of___awdiv 11C2               __end_of___awmod 132C  
             ___awdiv@divisor 0003                         i2l604 001A                         i2l605 001C  
             ___awdiv@counter 0005                  vfpfcnvrt@cnt 0010                  vfpfcnvrt@fmt 000C  
                       _TMR0H 0FD4                         _TMR0L 0FD3       __end_of_sendCharSerial4 175A  
  __end_of_I2C_2_Master_Start 1792    __end_of_I2C_2_Master_Write 1774                   _turningGear 0051  
                       _flags 0057                         _fputc 11C2                         _width 00D0  
                       _putch 1792             _turnRight135Delay 00DA                         tablat 0FF5  
             _turnLeft90Delay 004F                         ttemp5 005F                         ttemp6 0062  
                       ttemp7 0066                         status 0FD8                         wtemp8 005F  
             __end_of_sprintf 15EE               __initialization 1432                  __end_of_main 10FE  
                      ??_main 0033                 __activetblptr 0003                        ?_fputc 0001  
                      _CCPR1H 0FAA                        _CCPR2H 0FA6                        _CCPR3H 0F25  
                      _CCPR4H 0F21              ___awdiv@dividend 0001                        ?_putch 0001  
                      _RC0PPS 0E62                        _RC4REG 0EE3                        _RE2PPS 0E74  
                      _RD5PPS 0E6F                        _RC7PPS 0E69                        _RD6PPS 0E70  
                      _RE4PPS 0E76                        i2l2142 000A                        _RG6PPS 0E88  
               vfpfcnvrt@done 000F      __end_of_color_click_init 168A                        _RX4PPS 0E15  
                      _TX4REG 0EE4              _turnLeft135Delay 00DC                 ??_Timer0_init 0001  
                _CCPTMRS0bits 0FAD     sendArrayCharSerial4@index 01A1                  vfprintf@cfmt 001B  
                   ??___awdiv 0005                     ??___awmod 0005                        clear_0 1478  
                      clear_1 1484                        clear_2 1490              ___awdiv@quotient 0007  
             ___awmod@divisor 0003                        isa$std 0001               ___awmod@counter 0005  
                      fputc@c 0001                  __pdataCOMRAM 0047             _timer_low_pointer 0049  
                __mediumconst 0000                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8              ?_sendCharSerial4 0001                        putch@c 0001  
            __end_of_vfprintf 1554             ??_initDCmotorsPWM 0003                     ??_sprintf 0021  
           _buggy_lights_init 1554                    __accesstop 0060       __end_of__initialization 1496  
          ?_buggy_lights_init 0001                 ___rparam_used 0001                __pcstackCOMRAM 0001  
                __pidataBANK0 1774           ??_buggy_lights_init 0001                 __end_of_fputc 127C  
               __end_of_putch 1794           __end_of_Timer0_init 1704                       ??_fputc 0004  
   __end_of_buggy_lights_init 15A2                       ??_putch 0001                    __pbssBANK0 0060  
                  __pbssBANK1 01A4             _color_writetoaddr 1704                  _T2CLKCONbits 0FBF  
          ?_color_writetoaddr 0003           ??_color_writetoaddr 0004                       _SP4BRGH 0EE6  
                     _SP4BRGL 0EE5                       i2u80_40 001A                       i2u80_41 0016  
                     _SSP2ADD 0ED6                       _SSP2BUF 0ED5        color_writetoaddr@value 0003  
   __end_of_color_writetoaddr 1724            _I2C_2_Master_Start 1788                    _initUSART4 1724  
          _I2C_2_Master_Write 1768                       __Hparam 0000                       __Lparam 0000  
                 _Timer0_init 16DC       sendStringSerial4@string 0002                       ___awdiv 10FE  
                     ___awmod 127C           ?_I2C_2_Master_Start 0001           ?_I2C_2_Master_Write 0001  
                   ?_vfprintf 0018                  __psmallconst 0E00         sendArrayCharSerial4@i 01A2  
                     __pcinit 1432                       __ramtop 0E00                       __ptext0 1000  
                     __ptext1 15EE                       __ptext2 13BC                       __ptext3 15A2  
                     __ptext4 1502                       __ptext5 0E0A                       __ptext6 11C2  
                     __ptext7 1792                       __ptext8 1622                       __ptext9 127C  
                   _T2CONbits 0FBD              ___awmod@dividend 0001                     _T2HLTbits 0FBE  
               _RxBufWriteCnt 005D                       _sprintf 15A2          ??_I2C_2_Master_Start 0002  
        ??_I2C_2_Master_Write 0002          end_of_initialization 1496                       fputc@fp 0003  
           ?_color_click_init 0001            ??_color_click_init 0005             __end_of_vfpfcnvrt 1000  
                     postdec1 0FE5                       postdec2 0FDD                       postinc0 0FEE  
                     postinc1 0FE6                       postinc2 0FDE              vfpfcnvrt@convarg 0013  
                  ??_vfprintf 001B               _initDCmotorsPWM 132C                     _PORTFbits 0F8E  
                   _TRISAbits 0F81                     _TRISCbits 0F83                     _TRISDbits 0F84  
                   _TRISEbits 0F85                     _TRISFbits 0F86                     _TRISGbits 0F87  
                   _TRISHbits 0F88      color_writetoaddr@address 0004                   _CCP1CONbits 0FAB  
                _EUSART4RXbuf 00BC                  _EUSART4TXbuf 0060                   _CCP2CONbits 0FA7  
                 _CCP3CONbits 0F26                   ?_initUSART4 0001                   _CCP4CONbits 0F22  
   sendCharSerial4@charToSend 0001                    main@motorL 0035                    main@motorR 003E  
                 vfpfcnvrt@ap 000D                   vfpfcnvrt@cp 0012                   vfpfcnvrt@fp 000B  
                  _writeTrail 15EE                 __pidataCOMRAM 175A           start_initialization 1432  
                 __end_of_ISR 0020                   __end_of_abs 1656                 _TxBufWriteCnt 005B  
            _turnRight90Delay 004D       __end_of_initDCmotorsPWM 13BC                   vfprintf@fmt 0019  
                 __pdataBANK0 00D4                   __pbssCOMRAM 0055                 __pcstackBANK1 0100  
                   _backtrack 0059  __end_of_sendArrayCharSerial4 1432       sendArrayCharSerial4@arr 0030  
                ?_Timer0_init 0001                     __pintcode 0008                      ?___awdiv 0001  
                    ?___awmod 0001                   ?_writeTrail 0001                   __smallconst 0E00  
           _I2C_2_Master_Idle 16B4             _I2C_2_Master_Init 168A             _I2C_2_Master_Stop 177E  
                _RxBufReadCnt 005C            ?_I2C_2_Master_Idle 0001            ?_I2C_2_Master_Init 0001  
          ?_I2C_2_Master_Stop 0001                 _headbuttDelay 00D6      initDCmotorsPWM@PWMperiod 0001  
                    ?_sprintf 001C                     _rampDelay 0054             _sendStringSerial4 14A0  
         ??_I2C_2_Master_Idle 0001           ??_I2C_2_Master_Init 0001                      _LATAbits 0F79  
         ??_I2C_2_Master_Stop 0002                      _LATCbits 0F7B                      _LATDbits 0F7C  
                    _LATEbits 0F7D                      _LATFbits 0F7E                      _LATGbits 0F7F  
                    _LATHbits 0F80                      _PIE0bits 0E29            ?_sendStringSerial4 0002  
                    _PIE4bits 0E2D                      _PIR0bits 0E33                      _PIR4bits 0E37  
            ?_initDCmotorsPWM 0001             ??_sendCharSerial4 0001                      _SSP2CON2 0EDA  
         ??_sendStringSerial4 0004                      _SSP2STAT 0ED8                     _vfpfcnvrt 0E0A  
   __end_of_I2C_2_Master_Idle 16DC     __end_of_I2C_2_Master_Init 16B4     __end_of_I2C_2_Master_Stop 1788  
 I2C_2_Master_Write@data_byte 0002                  _TxBufReadCnt 005A                    vfpfcnvrt@c 0017  
                   copy_data0 1446                     copy_data1 1466     __end_of_sendStringSerial4 1502  
                ??_initUSART4 0001                      __Hrparam 0000                    vfprintf@ap 001A  
                    __Lrparam 0000                    vfprintf@fp 0018                    ?_vfpfcnvrt 000B  
        _sendArrayCharSerial4 13BC                    _ANSELDbits 0EA7                    _ANSELFbits 0EB4  
                  sprintf@fmt 001E                    sprintf@ret 0021                    _T0CON0bits 0FD5  
                  _T0CON1bits 0FD6            __end_of_initUSART4 1742                      __ptext10 10FE  
                    __ptext11 14A0                      __ptext20 16B4                      __ptext12 1742  
                    __ptext21 168A                      __ptext13 1724                      __ptext22 1554  
                    __ptext14 132C                      __ptext23 16DC                      __ptext15 1656  
                    __ptext16 1704                      __ptext17 1768                      __ptext18 177E  
                    __ptext19 1788                  _SSP2CON1bits 0ED9                  _SSP2CON2bits 0EDA  
                    isa$xinst 0000                    _RC4STAbits 0EE7                      int$flags 005E  
                    _vfprintf 1502         ?_sendArrayCharSerial4 0030                    _INTCONbits 0FF2  
                    intlevel2 0000                     sprintf@ap 0023                  _topGearRight 0052  
           _manoeuvre_pointer 0047                  ??_writeTrail 0001                   ??_vfpfcnvrt 000E  
            _color_click_init 1656                   _topGearLeft 0053                      sprintf@f 0024  
                    sprintf@s 001C                    _SSP2DATPPS 0E1D                    _SSP2CLKPPS 0E1C  
             _trail_manoeuvre 01A4               _manoeuvre_count 0058                    _TX4STAbits 0EE8  
             _sendCharSerial4 1742            __end_of_writeTrail 1622   sendArrayCharSerial4@tempStr 0100  
