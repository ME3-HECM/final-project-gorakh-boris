

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 06 11:58:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 18/08/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataCOMRAM
    90   0018FE                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _manoeuvre_pointer
    94   0018FE  7B                 	db	low _trail_manoeuvre
    95                           
    96                           ;initializer for _timer_low_pointer
    97   0018FF  8F                 	db	low _trail_timer_low
    98                           
    99                           ;initializer for _timer_high_pointer
   100   001900  DC                 	db	low _trail_timer_high
   101                           
   102                           ;initializer for _topGearLeft
   103   001901  14                 	db	20
   104                           
   105                           ;initializer for _rampDelay
   106   001902  08                 	db	8
   107                           
   108                           	psect	idataBANK0
   109   00182C                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _squareDelay
   113   00182C  012C               	dw	300
   114                           
   115                           ;initializer for _headbuttDelay
   116   00182E  0046               	dw	70
   117                           
   118                           ;initializer for _turn180Delay
   119   001830  01FE               	dw	510
   120                           
   121                           ;initializer for _turnRight135Delay
   122   001832  012C               	dw	300
   123                           
   124                           ;initializer for _turnLeft135Delay
   125   001834  012C               	dw	300
   126                           
   127                           ;initializer for _turnRight90Delay
   128   001836  00AF               	dw	175
   129                           
   130                           ;initializer for _turnLeft90Delay
   131   001838  00AF               	dw	175
   132                           
   133                           ;initializer for _turningGear
   134   00183A  2A                 	db	42
   135                           
   136                           ;initializer for _topGearRight
   137   00183B  14                 	db	20
   138                           
   139                           ;initializer for _trail_timer_high
   140   00183C  03                 	db	3
   141   00183D  06                 	db	6
   142   00183E  03                 	db	3
   143   00183F  06                 	db	6
   144   001840  03                 	db	3
   145   001841  06                 	db	6
   146   001842  03                 	db	3
   147   001843  06                 	db	6
   148   001844  03                 	db	3
   149   001845  06                 	db	6
   150   001846  03                 	db	3
   151   001847  06                 	db	6
   152   001848  03                 	db	3
   153   001849  06                 	db	6
   154   00184A  03                 	db	3
   155   00184B  06                 	db	6
   156   00184C  03                 	db	3
   157   00184D  06                 	db	6
   158   00184E  03                 	db	3
   159   00184F  06                 	db	6
   160   000000                     _TX4REG	set	3812
   161   000000                     _RC4STAbits	set	3815
   162   000000                     _SP4BRGH	set	3814
   163   000000                     _LATEbits	set	3965
   164   000000                     _TRISEbits	set	3973
   165   000000                     _LATGbits	set	3967
   166   000000                     _TRISGbits	set	3975
   167   000000                     _LATFbits	set	3966
   168   000000                     _LATHbits	set	3968
   169   000000                     _TRISFbits	set	3974
   170   000000                     _TRISHbits	set	3976
   171   000000                     _SSP2CON2bits	set	3802
   172   000000                     _RX4PPS	set	3605
   173   000000                     _SSP2CLKPPS	set	3612
   174   000000                     _SSP2DATPPS	set	3613
   175   000000                     _RC7PPS	set	3689
   176   000000                     _RE2PPS	set	3700
   177   000000                     _LATAbits	set	3961
   178   000000                     _LATDbits	set	3964
   179   000000                     _TRISDbits	set	3972
   180   000000                     _T2PR	set	4028
   181   000000                     _T2CONbits	set	4029
   182   000000                     _CCPR2H	set	4006
   183   000000                     _CCPR1H	set	4010
   184   000000                     _TRISCbits	set	3971
   185   000000                     _TRISAbits	set	3969
   186   000000                     _LATCbits	set	3963
   187   000000                     _RE4PPS	set	3702
   188   000000                     _RG6PPS	set	3720
   189   000000                     _RD5PPS	set	3695
   190   000000                     _ANSELDbits	set	3751
   191   000000                     _SSP2ADD	set	3798
   192   000000                     _SSP2CON1bits	set	3801
   193   000000                     _CCPR4H	set	3873
   194   000000                     _CCPR3H	set	3877
   195   000000                     _TMR0L	set	4051
   196   000000                     _TMR0H	set	4052
   197   000000                     _T0CON0bits	set	4053
   198   000000                     _T0CON1bits	set	4054
   199   000000                     _T2CLKCONbits	set	4031
   200   000000                     _T2HLTbits	set	4030
   201   000000                     _CCP1CONbits	set	4011
   202   000000                     _CCPTMRS0bits	set	4013
   203   000000                     _CCP2CONbits	set	4007
   204   000000                     _CCP3CONbits	set	3878
   205   000000                     _CCP4CONbits	set	3874
   206   000000                     _RC4REG	set	3811
   207   000000                     _SP4BRGL	set	3813
   208   000000                     _TX4STAbits	set	3816
   209   000000                     _BAUD4CONbits	set	3817
   210   000000                     _SSP2CON2	set	3802
   211   000000                     _SSP2STAT	set	3800
   212   000000                     _ANSELFbits	set	3764
   213   000000                     _SSP2BUF	set	3797
   214   000000                     _PIE0bits	set	3625
   215   000000                     _PIE4bits	set	3629
   216   000000                     _PIR4bits	set	3639
   217   000000                     _RC0PPS	set	3682
   218   000000                     _RD6PPS	set	3696
   219   000000                     _PIR0bits	set	3635
   220   000000                     _INTCONbits	set	4082
   221                           
   222                           	psect	smallconst
   223   000E00                     __psmallconst:
   224                           	callstack 0
   225   000E00  00                 	db	0
   226   000E01                     STR_5:
   227                           
   228                           ; BSR set to: 14
   229   000E01  25                 	db	37
   230   000E02  64                 	db	100	;'d'
   231   000E03  20                 	db	32
   232   000E04  25                 	db	37
   233   000E05  64                 	db	100	;'d'
   234   000E06  20                 	db	32
   235   000E07  25                 	db	37
   236   000E08  64                 	db	100	;'d'
   237   000E09  20                 	db	32
   238   000E0A  25                 	db	37
   239   000E0B  64                 	db	100	;'d'
   240   000E0C  20                 	db	32
   241   000E0D  0D                 	db	13
   242   000E0E  00                 	db	0
   243   000E0F                     STR_2:
   244                           
   245                           ; BSR set to: 14
   246   000E0F  25                 	db	37
   247   000E10  64                 	db	100	;'d'
   248   000E11  20                 	db	32
   249   000E12  00                 	db	0
   250   000E13  00                 	db	0	; dummy byte at the end
   251   000000                     
   252                           ; #config settings
   253                           
   254                           	psect	cinit
   255   00139C                     __pcinit:
   256                           	callstack 0
   257   00139C                     start_initialization:
   258                           	callstack 0
   259   00139C                     __initialization:
   260                           	callstack 0
   261                           
   262                           ; Initialize objects allocated to BANK0 (36 bytes)
   263                           ; load TBLPTR registers with __pidataBANK0
   264   00139C  0E2C               	movlw	low __pidataBANK0
   265   00139E  6EF6               	movwf	tblptrl,c
   266   0013A0  0E18               	movlw	high __pidataBANK0
   267   0013A2  6EF7               	movwf	tblptrh,c
   268   0013A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   269   0013A6  6EF8               	movwf	tblptru,c
   270   0013A8  EE00  F0CC         	lfsr	0,__pdataBANK0
   271   0013AC  EE10 F024          	lfsr	1,36
   272   0013B0                     copy_data0:
   273   0013B0  0009               	tblrd		*+
   274   0013B2  CFF5 FFEE          	movff	tablat,postinc0
   275   0013B6  50E5               	movf	postdec1,w,c
   276   0013B8  50E1               	movf	fsr1l,w,c
   277   0013BA  E1FA               	bnz	copy_data0
   278                           
   279                           ; Initialize objects allocated to COMRAM (5 bytes)
   280                           ; load TBLPTR registers with __pidataCOMRAM
   281   0013BC  0EFE               	movlw	low __pidataCOMRAM
   282   0013BE  6EF6               	movwf	tblptrl,c
   283   0013C0  0E18               	movlw	high __pidataCOMRAM
   284   0013C2  6EF7               	movwf	tblptrh,c
   285   0013C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   286   0013C6  6EF8               	movwf	tblptru,c
   287   0013C8  EE00  F05A         	lfsr	0,__pdataCOMRAM
   288   0013CC  EE10 F005          	lfsr	1,5
   289   0013D0                     copy_data1:
   290   0013D0  0009               	tblrd		*+
   291   0013D2  CFF5 FFEE          	movff	tablat,postinc0
   292   0013D6  50E5               	movf	postdec1,w,c
   293   0013D8  50E1               	movf	fsr1l,w,c
   294   0013DA  E1FA               	bnz	copy_data1
   295                           
   296                           ; Clear objects allocated to BANK1 (92 bytes)
   297   0013DC  EE01  F000         	lfsr	0,__pbssBANK1
   298   0013E0  0E5C               	movlw	92
   299   0013E2                     clear_0:
   300   0013E2  6AEE               	clrf	postinc0,c
   301   0013E4  06E8               	decf	wreg,f,c
   302   0013E6  E1FD               	bnz	clear_0
   303                           
   304                           ; Clear objects allocated to BANK0 (67 bytes)
   305   0013E8  EE00  F060         	lfsr	0,__pbssBANK0
   306   0013EC  0E43               	movlw	67
   307   0013EE                     clear_1:
   308   0013EE  6AEE               	clrf	postinc0,c
   309   0013F0  06E8               	decf	wreg,f,c
   310   0013F2  E1FD               	bnz	clear_1
   311                           
   312                           ; Clear objects allocated to COMRAM (7 bytes)
   313   0013F4  EE00  F053         	lfsr	0,__pbssCOMRAM
   314   0013F8  0E07               	movlw	7
   315   0013FA                     clear_2:
   316   0013FA  6AEE               	clrf	postinc0,c
   317   0013FC  06E8               	decf	wreg,f,c
   318   0013FE  E1FD               	bnz	clear_2
   319   001400                     end_of_initialization:
   320                           	callstack 0
   321   001400                     __end_of__initialization:
   322                           	callstack 0
   323   001400  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324   001402  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325   001404  0100               	movlb	0
   326   001406  EF0B  F008         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMRAM
   329   000053                     __pbssCOMRAM:
   330                           	callstack 0
   331   000053                     _manoeuvre_count:
   332                           	callstack 0
   333   000053                     	ds	1
   334   000054                     _return_flag:
   335                           	callstack 0
   336   000054                     	ds	1
   337   000055                     _returning:
   338                           	callstack 0
   339   000055                     	ds	1
   340   000056                     _TxBufReadCnt:
   341                           	callstack 0
   342   000056                     	ds	1
   343   000057                     _TxBufWriteCnt:
   344                           	callstack 0
   345   000057                     	ds	1
   346   000058                     _RxBufReadCnt:
   347                           	callstack 0
   348   000058                     	ds	1
   349   000059                     _RxBufWriteCnt:
   350                           	callstack 0
   351   000059                     	ds	1
   352                           
   353                           	psect	dataCOMRAM
   354   00005A                     __pdataCOMRAM:
   355                           	callstack 0
   356   00005A                     _manoeuvre_pointer:
   357                           	callstack 0
   358   00005A                     	ds	1
   359   00005B                     _timer_low_pointer:
   360                           	callstack 0
   361   00005B                     	ds	1
   362   00005C                     _timer_high_pointer:
   363                           	callstack 0
   364   00005C                     	ds	1
   365   00005D                     _topGearLeft:
   366                           	callstack 0
   367   00005D                     	ds	1
   368   00005E                     _rampDelay:
   369                           	callstack 0
   370   00005E                     	ds	1
   371                           
   372                           	psect	bssBANK0
   373   000060                     __pbssBANK0:
   374                           	callstack 0
   375   000060                     _EUSART4RXbuf:
   376                           	callstack 0
   377   000060                     	ds	20
   378   000074                     _nout:
   379                           	callstack 0
   380   000074                     	ds	2
   381   000076                     _width:
   382                           	callstack 0
   383   000076                     	ds	2
   384   000078                     _prec:
   385                           	callstack 0
   386   000078                     	ds	2
   387   00007A                     _flags:
   388                           	callstack 0
   389   00007A                     	ds	1
   390   00007B                     _trail_manoeuvre:
   391                           	callstack 0
   392   00007B                     	ds	20
   393   00008F                     _trail_timer_low:
   394                           	callstack 0
   395   00008F                     	ds	20
   396                           
   397                           	psect	dataBANK0
   398   0000CC                     __pdataBANK0:
   399                           	callstack 0
   400   0000CC                     _squareDelay:
   401                           	callstack 0
   402   0000CC                     	ds	2
   403   0000CE                     _headbuttDelay:
   404                           	callstack 0
   405   0000CE                     	ds	2
   406   0000D0                     _turn180Delay:
   407                           	callstack 0
   408   0000D0                     	ds	2
   409   0000D2                     _turnRight135Delay:
   410                           	callstack 0
   411   0000D2                     	ds	2
   412   0000D4                     _turnLeft135Delay:
   413                           	callstack 0
   414   0000D4                     	ds	2
   415   0000D6                     _turnRight90Delay:
   416                           	callstack 0
   417   0000D6                     	ds	2
   418   0000D8                     _turnLeft90Delay:
   419                           	callstack 0
   420   0000D8                     	ds	2
   421   0000DA                     _turningGear:
   422                           	callstack 0
   423   0000DA                     	ds	1
   424   0000DB                     _topGearRight:
   425                           	callstack 0
   426   0000DB                     	ds	1
   427   0000DC                     _trail_timer_high:
   428                           	callstack 0
   429   0000DC                     	ds	20
   430                           
   431                           	psect	bssBANK1
   432   000100                     __pbssBANK1:
   433                           	callstack 0
   434   000100                     _EUSART4TXbuf:
   435                           	callstack 0
   436   000100                     	ds	60
   437   00013C                     _dbuf:
   438                           	callstack 0
   439   00013C                     	ds	32
   440                           
   441                           	psect	cstackBANK0
   442   0000A3                     __pcstackBANK0:
   443                           	callstack 0
   444   0000A3                     sendRGBCvalSerial4@tempStr:
   445                           	callstack 0
   446                           
   447                           ; 41 bytes @ 0x0
   448   0000A3                     	ds	41
   449                           
   450                           	psect	cstackCOMRAM
   451   000001                     __pcstackCOMRAM:
   452                           	callstack 0
   453   000001                     ??_I2C_2_Master_Idle:
   454   000001                     ?___awdiv:
   455                           	callstack 0
   456   000001                     ?___awmod:
   457                           	callstack 0
   458   000001                     sendCharSerial4@charToSend:
   459                           	callstack 0
   460   000001                     initDCmotorsPWM@PWMperiod:
   461                           	callstack 0
   462   000001                     ___awdiv@dividend:
   463                           	callstack 0
   464   000001                     ___awmod@dividend:
   465                           	callstack 0
   466   000001                     fputc@c:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x0
   470   000001                     	ds	1
   471   000002                     ??_I2C_2_Master_Read:
   472   000002                     I2C_2_Master_Write@data_byte:
   473                           	callstack 0
   474   000002                     sendStringSerial4@string:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x1
   478   000002                     	ds	1
   479   000003                     color_writetoaddr@value:
   480                           	callstack 0
   481   000003                     I2C_2_Master_Read@ack:
   482                           	callstack 0
   483   000003                     fputc@fp:
   484                           	callstack 0
   485   000003                     ___awdiv@divisor:
   486                           	callstack 0
   487   000003                     ___awmod@divisor:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491   000003                     	ds	1
   492   000004                     ??_fputc:
   493   000004                     color_writetoaddr@address:
   494                           	callstack 0
   495   000004                     I2C_2_Master_Read@tmp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x3
   499   000004                     	ds	1
   500   000005                     ??_color_click_init:
   501   000005                     ?_color_read_Red:
   502                           	callstack 0
   503   000005                     ?_color_read_Blue:
   504                           	callstack 0
   505   000005                     ?_color_read_Green:
   506                           	callstack 0
   507   000005                     ?_color_read_Clear:
   508                           	callstack 0
   509   000005                     ___awdiv@counter:
   510                           	callstack 0
   511   000005                     ___awmod@counter:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x4
   515   000005                     	ds	1
   516   000006                     ___awdiv@sign:
   517                           	callstack 0
   518   000006                     ___awmod@sign:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x5
   522   000006                     	ds	1
   523   000007                     ??_color_read_Red:
   524   000007                     ??_color_read_Blue:
   525   000007                     ??_color_read_Green:
   526   000007                     ??_color_read_Clear:
   527   000007                     ?_abs:
   528                           	callstack 0
   529   000007                     ___awdiv@quotient:
   530                           	callstack 0
   531   000007                     abs@a:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x6
   535   000007                     	ds	2
   536   000009                     ??_abs:
   537                           
   538                           ; 1 bytes @ 0x8
   539   000009                     	ds	1
   540   00000A                     color_read_Red@tmp:
   541                           	callstack 0
   542   00000A                     color_read_Blue@tmp:
   543                           	callstack 0
   544   00000A                     color_read_Green@tmp:
   545                           	callstack 0
   546   00000A                     color_read_Clear@tmp:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x9
   550   00000A                     	ds	1
   551   00000B                     ?_vfpfcnvrt:
   552                           	callstack 0
   553   00000B                     vfpfcnvrt@fp:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0xA
   557   00000B                     	ds	1
   558   00000C                     getRGBCval@p:
   559                           	callstack 0
   560   00000C                     vfpfcnvrt@fmt:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0xB
   564   00000C                     	ds	1
   565   00000D                     vfpfcnvrt@ap:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0xC
   569   00000D                     	ds	1
   570   00000E                     ??_vfpfcnvrt:
   571                           
   572                           ; 1 bytes @ 0xD
   573   00000E                     	ds	1
   574   00000F                     vfpfcnvrt@done:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xE
   578   00000F                     	ds	1
   579   000010                     vfpfcnvrt@cnt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xF
   583   000010                     	ds	2
   584   000012                     vfpfcnvrt@cp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x11
   588   000012                     	ds	1
   589   000013                     vfpfcnvrt@convarg:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x12
   593   000013                     	ds	4
   594   000017                     vfpfcnvrt@c:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x16
   598   000017                     	ds	1
   599   000018                     ?_vfprintf:
   600                           	callstack 0
   601   000018                     vfprintf@fp:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x17
   605   000018                     	ds	1
   606   000019                     vfprintf@fmt:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x18
   610   000019                     	ds	1
   611   00001A                     vfprintf@ap:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x19
   615   00001A                     	ds	1
   616   00001B                     vfprintf@cfmt:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x1A
   620   00001B                     	ds	1
   621   00001C                     ?_sprintf:
   622                           	callstack 0
   623   00001C                     sprintf@s:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x1B
   627   00001C                     	ds	2
   628   00001E                     sprintf@fmt:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x1D
   632   00001E                     	ds	9
   633   000027                     sprintf@ret:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x26
   637   000027                     	ds	2
   638   000029                     sprintf@ap:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x28
   642   000029                     	ds	1
   643   00002A                     sprintf@f:
   644                           	callstack 0
   645                           
   646                           ; 12 bytes @ 0x29
   647   00002A                     	ds	12
   648   000036                     sendRGBCvalSerial4@col_val:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x35
   652   000036                     	ds	1
   653   000037                     ??_main:
   654                           
   655                           ; 1 bytes @ 0x36
   656   000037                     	ds	2
   657   000039                     main@measured_colour:
   658                           	callstack 0
   659                           
   660                           ; 8 bytes @ 0x38
   661   000039                     	ds	8
   662   000041                     main@motorL:
   663                           	callstack 0
   664                           
   665                           ; 9 bytes @ 0x40
   666   000041                     	ds	9
   667   00004A                     main@motorR:
   668                           	callstack 0
   669                           
   670                           ; 9 bytes @ 0x49
   671   00004A                     	ds	9
   672                           
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 26 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  motorR          9   73[COMRAM] struct DC_motor
   683 ;;  motorL          9   64[COMRAM] struct DC_motor
   684 ;;  measured_col    8   56[COMRAM] struct RGBC_val
   685 ;;  PWMcycle        2    0        unsigned int 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;Total ram usage:       28 bytes
   700 ;; Hardware stack levels required when called: 7
   701 ;; This function calls:
   702 ;;		_Timer0_init
   703 ;;		_buggy_lights_init
   704 ;;		_color_click_init
   705 ;;		_getRGBCval
   706 ;;		_initDCmotorsPWM
   707 ;;		_initUSART4
   708 ;;		_sendRGBCvalSerial4
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715   001016                     __ptext0:
   716                           	callstack 0
   717   001016                     _main:
   718                           	callstack 24
   719   001016                     
   720                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   721   001016  0E00               	movlw	0
   722   001018  6E41               	movwf	main@motorL^0,c
   723                           
   724                           ;main.c: 33:     motorL.direction = 1;
   725   00101A  0E01               	movlw	1
   726   00101C  6E42               	movwf	(main@motorL+1)^0,c
   727                           
   728                           ;main.c: 34:     motorL.brakemode = 1;
   729   00101E  0E01               	movlw	1
   730   001020  6E43               	movwf	(main@motorL+2)^0,c
   731   001022                     
   732                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   733   001022  0E00               	movlw	0
   734   001024  6E45               	movwf	(main@motorL+4)^0,c
   735   001026  0E63               	movlw	99
   736   001028  6E44               	movwf	(main@motorL+3)^0,c
   737   00102A                     
   738                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   739   00102A  0EAA               	movlw	170
   740   00102C  6E46               	movwf	(main@motorL+5)^0,c
   741   00102E  0E0F               	movlw	15
   742   001030  6E47               	movwf	(main@motorL+6)^0,c
   743   001032                     
   744                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   745   001032  0EA6               	movlw	166
   746   001034  6E48               	movwf	(main@motorL+7)^0,c
   747   001036  0E0F               	movlw	15
   748   001038  6E49               	movwf	(main@motorL+8)^0,c
   749                           
   750                           ;main.c: 39:     motorR.power = 0;
   751   00103A  0E00               	movlw	0
   752   00103C  6E4A               	movwf	main@motorR^0,c
   753                           
   754                           ;main.c: 40:     motorR.direction = 1;
   755   00103E  0E01               	movlw	1
   756   001040  6E4B               	movwf	(main@motorR+1)^0,c
   757                           
   758                           ;main.c: 41:     motorR.brakemode = 1;
   759   001042  0E01               	movlw	1
   760   001044  6E4C               	movwf	(main@motorR+2)^0,c
   761   001046                     
   762                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   763   001046  0E00               	movlw	0
   764   001048  6E4E               	movwf	(main@motorR+4)^0,c
   765   00104A  0E63               	movlw	99
   766   00104C  6E4D               	movwf	(main@motorR+3)^0,c
   767   00104E                     
   768                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   769   00104E  0E25               	movlw	37
   770   001050  6E4F               	movwf	(main@motorR+5)^0,c
   771   001052  0E0F               	movlw	15
   772   001054  6E50               	movwf	(main@motorR+6)^0,c
   773   001056                     
   774                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   775   001056  0E21               	movlw	33
   776   001058  6E51               	movwf	(main@motorR+7)^0,c
   777   00105A  0E0F               	movlw	15
   778   00105C  6E52               	movwf	(main@motorR+8)^0,c
   779   00105E                     
   780                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   781   00105E  0E00               	movlw	0
   782   001060  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   783   001062  0E63               	movlw	99
   784   001064  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   785   001066  EC86  F009         	call	_initDCmotorsPWM	;wreg free
   786                           
   787                           ;main.c: 47:     buggy_lights_init();
   788   00106A  ECD6  F00B         	call	_buggy_lights_init	;wreg free
   789   00106E                     
   790                           ;main.c: 48:     color_click_init();
   791   00106E  ECBC  F00B         	call	_color_click_init	;wreg free
   792   001072                     
   793                           ;main.c: 49:     initUSART4();
   794   001072  EC4A  F00C         	call	_initUSART4	;wreg free
   795   001076                     
   796                           ;main.c: 50:     Timer0_init();
   797   001076  EC28  F00C         	call	_Timer0_init	;wreg free
   798   00107A                     
   799                           ;main.c: 54:         TRISDbits.TRISD7 = 0;
   800   00107A  9E84               	bcf	132,7,c	;volatile
   801   00107C                     
   802                           ;main.c: 55:         TRISHbits.TRISH3 = 0;
   803   00107C  9688               	bcf	136,3,c	;volatile
   804   00107E                     
   805                           ;main.c: 57:         LATDbits.LATD7 = 1;
   806   00107E  8E7C               	bsf	124,7,c	;volatile
   807   001080                     
   808                           ;main.c: 58:         LATHbits.LATH3 = 1;
   809   001080  8680               	bsf	128,3,c	;volatile
   810   001082                     
   811                           ;main.c: 62:         TRISFbits.TRISF2 = 1;
   812   001082  8486               	bsf	134,2,c	;volatile
   813   001084                     
   814                           ;main.c: 63:         TRISFbits.TRISF3 = 1;
   815   001084  8686               	bsf	134,3,c	;volatile
   816   001086                     
   817                           ;main.c: 65:         ANSELFbits.ANSELF2 = 0;
   818   001086  010E               	movlb	14	; () banked
   819   001088  95B4               	bcf	180,2,b	;volatile
   820   00108A                     
   821                           ; BSR set to: 14
   822                           ;main.c: 66:         ANSELFbits.ANSELF3 = 0;
   823   00108A  97B4               	bcf	180,3,b	;volatile
   824   00108C                     l2936:
   825                           
   826                           ;main.c: 81:         getRGBCval(&measured_colour);
   827   00108C  0E39               	movlw	low main@measured_colour
   828   00108E  6E0C               	movwf	getRGBCval@p^0,c
   829   001090  EC90  F00A         	call	_getRGBCval	;wreg free
   830   001094                     
   831                           ;main.c: 82:         sendRGBCvalSerial4(&measured_colour);
   832   001094  0E39               	movlw	low main@measured_colour
   833   001096  6E36               	movwf	sendRGBCvalSerial4@col_val^0,c
   834   001098  EC36  F00A         	call	_sendRGBCvalSerial4	;wreg free
   835   00109C                     
   836                           ;main.c: 83:         LATDbits.LATD7 = !LATDbits.LATD7;
   837   00109C  AE7C               	btfss	124,7,c	;volatile
   838   00109E  EF53  F008         	goto	u1571
   839   0010A2  EF57  F008         	goto	u1570
   840   0010A6                     u1571:
   841   0010A6  6A37               	clrf	??_main^0,c
   842   0010A8  2A37               	incf	??_main^0,f,c
   843   0010AA  EF58  F008         	goto	u1588
   844   0010AE                     u1570:
   845   0010AE  6A37               	clrf	??_main^0,c
   846   0010B0                     u1588:
   847   0010B0  3237               	rrcf	??_main^0,f,c
   848   0010B2  3237               	rrcf	??_main^0,f,c
   849   0010B4  507C               	movf	124,w,c	;volatile
   850   0010B6  1837               	xorwf	??_main^0,w,c
   851   0010B8  0B7F               	andlw	-129
   852   0010BA  1837               	xorwf	??_main^0,w,c
   853   0010BC  6E7C               	movwf	124,c	;volatile
   854   0010BE                     
   855                           ;main.c: 84:         _delay((unsigned long)((200)*(64000000/4000.0)));
   856   0010BE  0E11               	movlw	17
   857   0010C0  6E38               	movwf	(??_main+1)^0,c
   858   0010C2  0E3C               	movlw	60
   859   0010C4  6E37               	movwf	??_main^0,c
   860   0010C6  0ECB               	movlw	203
   861   0010C8                     u2087:
   862   0010C8  2EE8               	decfsz	wreg,f,c
   863   0010CA  D7FE               	bra	u2087
   864   0010CC  2E37               	decfsz	??_main^0,f,c
   865   0010CE  D7FC               	bra	u2087
   866   0010D0  2E38               	decfsz	(??_main+1)^0,f,c
   867   0010D2  D7FA               	bra	u2087
   868   0010D4  0000               	nop	
   869   0010D6  EF46  F008         	goto	l2936
   870   0010DA  EF1A  F000         	goto	start
   871   0010DE                     __end_of_main:
   872                           	callstack 0
   873                           
   874 ;; *************** function _sendRGBCvalSerial4 *****************
   875 ;; Defined at:
   876 ;;		line 62 in file "serial.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  col_val         1   53[COMRAM] PTR struct RGBC_val
   879 ;;		 -> main@measured_colour(8), 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  tempStr        41    0[BANK0 ] unsigned char [41]
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Totals:         1      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;Total ram usage:       42 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 6
   898 ;; This function calls:
   899 ;;		_sendStringSerial4
   900 ;;		_sprintf
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text1
   907   00146C                     __ptext1:
   908                           	callstack 0
   909   00146C                     _sendRGBCvalSerial4:
   910                           	callstack 24
   911   00146C                     
   912                           ;serial.c: 63:     char tempStr[41];;serial.c: 64:     sprintf(tempStr, "%d %d %d %d \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
   913   00146C  0EA3               	movlw	low sendRGBCvalSerial4@tempStr
   914   00146E  6E1C               	movwf	sprintf@s^0,c
   915   001470  6A1D               	clrf	(sprintf@s+1)^0,c
   916   001472  0E01               	movlw	low STR_5
   917   001474  6E1E               	movwf	sprintf@fmt^0,c
   918   001476  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   919   001478  6ED9               	movwf	fsr2l,c
   920   00147A  6ADA               	clrf	fsr2h,c
   921   00147C  CFDE F01F          	movff	postinc2,?_sprintf+3
   922   001480  CFDD F020          	movff	postdec2,?_sprintf+4
   923   001484  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   924   001486  6ED9               	movwf	fsr2l,c
   925   001488  6ADA               	clrf	fsr2h,c
   926   00148A  0E02               	movlw	2
   927   00148C  26D9               	addwf	fsr2l,f,c
   928   00148E  CFDE F021          	movff	postinc2,?_sprintf+5
   929   001492  CFDD F022          	movff	postdec2,?_sprintf+6
   930   001496  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   931   001498  6ED9               	movwf	fsr2l,c
   932   00149A  6ADA               	clrf	fsr2h,c
   933   00149C  0E04               	movlw	4
   934   00149E  26D9               	addwf	fsr2l,f,c
   935   0014A0  CFDE F023          	movff	postinc2,?_sprintf+7
   936   0014A4  CFDD F024          	movff	postdec2,?_sprintf+8
   937   0014A8  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   938   0014AA  6ED9               	movwf	fsr2l,c
   939   0014AC  6ADA               	clrf	fsr2h,c
   940   0014AE  0E06               	movlw	6
   941   0014B0  26D9               	addwf	fsr2l,f,c
   942   0014B2  CFDE F025          	movff	postinc2,?_sprintf+9
   943   0014B6  CFDD F026          	movff	postdec2,?_sprintf+10
   944   0014BA  EC5B  F00B         	call	_sprintf	;wreg free
   945   0014BE                     
   946                           ;serial.c: 65:     sendStringSerial4(tempStr);
   947   0014BE  0EA3               	movlw	low sendRGBCvalSerial4@tempStr
   948   0014C0  6E02               	movwf	sendStringSerial4@string^0,c
   949   0014C2  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   950   0014C4  EC05  F00A         	call	_sendStringSerial4	;wreg free
   951   0014C8  0012               	return		;funcret
   952   0014CA                     __end_of_sendRGBCvalSerial4:
   953                           	callstack 0
   954                           
   955 ;; *************** function _sprintf *****************
   956 ;; Defined at:
   957 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  s               2   27[COMRAM] PTR unsigned char 
   960 ;;		 -> sendRGBCvalSerial4@tempStr(41), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   961 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   962 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  f              12   41[COMRAM] struct _IO_FILE
   965 ;;  ret             2   38[COMRAM] int 
   966 ;;  ap              1   40[COMRAM] PTR void [1]
   967 ;;		 -> ?_sprintf(2), 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  2   27[COMRAM] int 
   970 ;; Registers used:
   971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   977 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   978 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   980 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   981 ;;Total ram usage:       26 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; Hardware stack levels required when called: 5
   984 ;; This function calls:
   985 ;;		_vfprintf
   986 ;; This function is called by:
   987 ;;		_sendRGBCvalSerial4
   988 ;;		_sendIntSerial4
   989 ;;		_sendArrayCharSerial4
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text2
   994   0016B6                     __ptext2:
   995                           	callstack 0
   996   0016B6                     _sprintf:
   997                           	callstack 24
   998   0016B6  0E1F               	movlw	low (?_sprintf+3)
   999   0016B8  6E29               	movwf	sprintf@ap^0,c
  1000   0016BA  C01C  F02A         	movff	sprintf@s,sprintf@f
  1001   0016BE  C01D  F02B         	movff	sprintf@s+1,sprintf@f+1
  1002   0016C2  0E00               	movlw	0
  1003   0016C4  6E2E               	movwf	(sprintf@f+4)^0,c
  1004   0016C6  0E00               	movlw	0
  1005   0016C8  6E2D               	movwf	(sprintf@f+3)^0,c
  1006   0016CA  0E00               	movlw	0
  1007   0016CC  6E35               	movwf	(sprintf@f+11)^0,c
  1008   0016CE  0E00               	movlw	0
  1009   0016D0  6E34               	movwf	(sprintf@f+10)^0,c
  1010   0016D2  0E2A               	movlw	low sprintf@f
  1011   0016D4  6E18               	movwf	vfprintf@fp^0,c
  1012   0016D6  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  1013   0016DA  0E29               	movlw	low sprintf@ap
  1014   0016DC  6E1A               	movwf	vfprintf@ap^0,c
  1015   0016DE  EC65  F00A         	call	_vfprintf	;wreg free
  1016   0016E2  C018  F027         	movff	?_vfprintf,sprintf@ret
  1017   0016E6  C019  F028         	movff	?_vfprintf+1,sprintf@ret+1
  1018   0016EA  502D               	movf	(sprintf@f+3)^0,w,c
  1019   0016EC  241C               	addwf	sprintf@s^0,w,c
  1020   0016EE  6ED9               	movwf	fsr2l,c
  1021   0016F0  502E               	movf	(sprintf@f+4)^0,w,c
  1022   0016F2  201D               	addwfc	(sprintf@s+1)^0,w,c
  1023   0016F4  6EDA               	movwf	fsr2h,c
  1024   0016F6  6ADF               	clrf	indf2,c
  1025   0016F8  C027  F01C         	movff	sprintf@ret,?_sprintf
  1026   0016FC  C028  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1027   001700  0012               	return		;funcret
  1028   001702                     __end_of_sprintf:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _vfprintf *****************
  1032 ;; Defined at:
  1033 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1036 ;;		 -> sprintf@f(12), 
  1037 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1038 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1039 ;;  ap              1   25[COMRAM] PTR PTR void 
  1040 ;;		 -> sprintf@ap(1), 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1043 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  2   23[COMRAM] int 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1053 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1057 ;;Total ram usage:        4 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 4
  1060 ;; This function calls:
  1061 ;;		_vfpfcnvrt
  1062 ;; This function is called by:
  1063 ;;		_sprintf
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text3
  1068   0014CA                     __ptext3:
  1069                           	callstack 0
  1070   0014CA                     _vfprintf:
  1071                           	callstack 24
  1072   0014CA                     
  1073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1074   0014CA  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1075   0014CE                     
  1076                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1077   0014CE  0E00               	movlw	0
  1078   0014D0  0100               	movlb	0	; () banked
  1079   0014D2  6F75               	movwf	(_nout+1)& (0+255),b
  1080   0014D4  0E00               	movlw	0
  1081   0014D6  6F74               	movwf	_nout& (0+255),b
  1082                           
  1083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1084   0014D8  EF7B  F00A         	goto	l2598
  1085   0014DC                     l2596:
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1089   0014DC  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1090   0014E0  0E1B               	movlw	low vfprintf@cfmt
  1091   0014E2  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1092   0014E4  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1093   0014E8  EC0A  F007         	call	_vfpfcnvrt	;wreg free
  1094   0014EC  500B               	movf	?_vfpfcnvrt^0,w,c
  1095   0014EE  0100               	movlb	0	; () banked
  1096   0014F0  2774               	addwf	_nout& (0+255),f,b
  1097   0014F2  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1098   0014F4  2375               	addwfc	(_nout+1)& (0+255),f,b
  1099   0014F6                     l2598:
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1103   0014F6  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1104   0014FA                     	if	1	;There is more than 1 active tblptr byte
  1105   0014FA  0E0E               	movlw	high __smallconst
  1106   0014FC  6EF7               	movwf	tblptrh,c
  1107   0014FE                     	endif
  1108   0014FE                     	if	0	;tblptru may be non-zero
  1109   0014FE                     	endif
  1110   0014FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1111   0014FE  0E00               	movlw	low (__smallconst shr (0+16))
  1112   001500  6EF8               	movwf	tblptru,c
  1113   001502                     	endif
  1114   001502  0008               	tblrd		*
  1115   001504  50F5               	movf	tablat,w,c
  1116   001506  0900               	iorlw	0
  1117   001508  A4D8               	btfss	status,2,c
  1118   00150A  EF89  F00A         	goto	u1481
  1119   00150E  EF8B  F00A         	goto	u1480
  1120   001512                     u1481:
  1121   001512  EF6E  F00A         	goto	l2596
  1122   001516                     u1480:
  1123   001516                     
  1124                           ; BSR set to: 0
  1125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1126   001516  C074  F018         	movff	_nout,?_vfprintf
  1127   00151A  C075  F019         	movff	_nout+1,?_vfprintf+1
  1128   00151E                     
  1129                           ; BSR set to: 0
  1130   00151E  0012               	return		;funcret
  1131   001520                     __end_of_vfprintf:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _vfpfcnvrt *****************
  1135 ;; Defined at:
  1136 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1139 ;;		 -> sprintf@f(12), 
  1140 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1141 ;;		 -> vfprintf@cfmt(1), 
  1142 ;;  ap              1   12[COMRAM] PTR PTR void 
  1143 ;;		 -> sprintf@ap(1), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  convarg         4   18[COMRAM] struct .
  1146 ;;  cnt             2   15[COMRAM] int 
  1147 ;;  c               1   22[COMRAM] unsigned char 
  1148 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1149 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1150 ;;  done            1   14[COMRAM] _Bool 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2   10[COMRAM] int 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1160 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1163 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;Total ram usage:       13 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 3
  1167 ;; This function calls:
  1168 ;;		___awdiv
  1169 ;;		___awmod
  1170 ;;		_abs
  1171 ;;		_fputc
  1172 ;; This function is called by:
  1173 ;;		_vfprintf
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text4
  1178   000E14                     __ptext4:
  1179                           	callstack 0
  1180   000E14                     _vfpfcnvrt:
  1181                           	callstack 24
  1182   000E14                     
  1183                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1184   000E14  0E00               	movlw	0
  1185   000E16  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1186   000E18  0E00               	movlw	0
  1187   000E1A  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1188   000E1C                     
  1189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1190   000E1C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1191   000E1E  6ED9               	movwf	fsr2l,c
  1192   000E20  6ADA               	clrf	fsr2h,c
  1193   000E22  CFDF FFF6          	movff	indf2,tblptrl
  1194   000E26                     	if	1	;There is more than 1 active tblptr byte
  1195   000E26  0E0E               	movlw	high __smallconst
  1196   000E28  6EF7               	movwf	tblptrh,c
  1197   000E2A                     	endif
  1198   000E2A                     	if	0	;tblptru may be non-zero
  1199   000E2A                     	endif
  1200   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1201   000E2A  0E00               	movlw	low (__smallconst shr (0+16))
  1202   000E2C  6EF8               	movwf	tblptru,c
  1203   000E2E                     	endif
  1204   000E2E  0008               	tblrd		*
  1205   000E30  50F5               	movf	tablat,w,c
  1206   000E32  0A25               	xorlw	37
  1207   000E34  A4D8               	btfss	status,2,c
  1208   000E36  EF1F  F007         	goto	u1351
  1209   000E3A  EF21  F007         	goto	u1350
  1210   000E3E                     u1351:
  1211   000E3E  EFF1  F007         	goto	l2508
  1212   000E42                     u1350:
  1213   000E42                     
  1214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1215   000E42  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1216   000E44  6ED9               	movwf	fsr2l,c
  1217   000E46  6ADA               	clrf	fsr2h,c
  1218   000E48  2ADF               	incf	indf2,f,c
  1219   000E4A                     
  1220                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1221   000E4A  0E00               	movlw	0
  1222   000E4C  0100               	movlb	0	; () banked
  1223   000E4E  6F77               	movwf	(_width+1)& (0+255),b
  1224   000E50  0E00               	movlw	0
  1225   000E52  6F76               	movwf	_width& (0+255),b
  1226   000E54  C076  F07A         	movff	_width,_flags
  1227   000E58                     
  1228                           ; BSR set to: 0
  1229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1230   000E58  6978               	setf	_prec& (0+255),b
  1231   000E5A  6979               	setf	(_prec+1)& (0+255),b
  1232   000E5C                     
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1235   000E5C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1236   000E5E  6ED9               	movwf	fsr2l,c
  1237   000E60  6ADA               	clrf	fsr2h,c
  1238   000E62  50DF               	movf	indf2,w,c
  1239   000E64  6E12               	movwf	vfpfcnvrt@cp^0,c
  1240   000E66                     
  1241                           ; BSR set to: 0
  1242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1243   000E66  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1244   000E6A                     	if	1	;There is more than 1 active tblptr byte
  1245   000E6A  0E0E               	movlw	high __smallconst
  1246   000E6C  6EF7               	movwf	tblptrh,c
  1247   000E6E                     	endif
  1248   000E6E                     	if	0	;tblptru may be non-zero
  1249   000E6E                     	endif
  1250   000E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1251   000E6E  0E00               	movlw	low (__smallconst shr (0+16))
  1252   000E70  6EF8               	movwf	tblptru,c
  1253   000E72                     	endif
  1254   000E72  0008               	tblrd		*
  1255   000E74  50F5               	movf	tablat,w,c
  1256   000E76  0A64               	xorlw	100
  1257   000E78  B4D8               	btfsc	status,2,c
  1258   000E7A  EF41  F007         	goto	u1361
  1259   000E7E  EF43  F007         	goto	u1360
  1260   000E82                     u1361:
  1261   000E82  EF53  F007         	goto	l2472
  1262   000E86                     u1360:
  1263   000E86                     
  1264                           ; BSR set to: 0
  1265   000E86  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1266   000E8A                     	if	1	;There is more than 1 active tblptr byte
  1267   000E8A  0E0E               	movlw	high __smallconst
  1268   000E8C  6EF7               	movwf	tblptrh,c
  1269   000E8E                     	endif
  1270   000E8E                     	if	0	;tblptru may be non-zero
  1271   000E8E                     	endif
  1272   000E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1273   000E8E  0E00               	movlw	low (__smallconst shr (0+16))
  1274   000E90  6EF8               	movwf	tblptru,c
  1275   000E92                     	endif
  1276   000E92  0008               	tblrd		*
  1277   000E94  50F5               	movf	tablat,w,c
  1278   000E96  0A69               	xorlw	105
  1279   000E98  A4D8               	btfss	status,2,c
  1280   000E9A  EF51  F007         	goto	u1371
  1281   000E9E  EF53  F007         	goto	u1370
  1282   000EA2                     u1371:
  1283   000EA2  EFE7  F007         	goto	l2502
  1284   000EA6                     u1370:
  1285   000EA6                     l2472:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1289   000EA6  500D               	movf	vfpfcnvrt@ap^0,w,c
  1290   000EA8  6ED9               	movwf	fsr2l,c
  1291   000EAA  6ADA               	clrf	fsr2h,c
  1292   000EAC  0E02               	movlw	2
  1293   000EAE  26DF               	addwf	indf2,f,c
  1294   000EB0  5CDF               	subwf	indf2,w,c
  1295   000EB2  6ED9               	movwf	fsr2l,c
  1296   000EB4  6ADA               	clrf	fsr2h,c
  1297   000EB6  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1298   000EBA  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1299   000EBE                     
  1300                           ; BSR set to: 0
  1301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1302   000EBE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1303   000EC0  6ED9               	movwf	fsr2l,c
  1304   000EC2  6ADA               	clrf	fsr2h,c
  1305   000EC4  2812               	incf	vfpfcnvrt@cp^0,w,c
  1306   000EC6  6EDF               	movwf	indf2,c
  1307   000EC8                     
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1310   000EC8  0E20               	movlw	32
  1311   000ECA  6E17               	movwf	vfpfcnvrt@c^0,c
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1314   000ECC  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1315   000ECE  EF6B  F007         	goto	u1381
  1316   000ED2  EF6E  F007         	goto	u1380
  1317   000ED6                     u1381:
  1318   000ED6  0E01               	movlw	1
  1319   000ED8  EF6F  F007         	goto	u1390
  1320   000EDC                     u1380:
  1321   000EDC  0E00               	movlw	0
  1322   000EDE                     u1390:
  1323   000EDE  6E0F               	movwf	vfpfcnvrt@done^0,c
  1324   000EE0                     l2478:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1327   000EE0  0617               	decf	vfpfcnvrt@c^0,f,c
  1328   000EE2  0E3C               	movlw	low _dbuf
  1329   000EE4  2417               	addwf	vfpfcnvrt@c^0,w,c
  1330   000EE6  6ED9               	movwf	fsr2l,c
  1331   000EE8  6ADA               	clrf	fsr2h,c
  1332   000EEA  0E01               	movlw	high _dbuf
  1333   000EEC  22DA               	addwfc	fsr2h,f,c
  1334   000EEE  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1335   000EF2  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1336   000EF6  0E00               	movlw	0
  1337   000EF8  6E04               	movwf	(___awmod@divisor+1)^0,c
  1338   000EFA  0E0A               	movlw	10
  1339   000EFC  6E03               	movwf	___awmod@divisor^0,c
  1340   000EFE  EC2E  F009         	call	___awmod	;wreg free
  1341   000F02  C001  F007         	movff	?___awmod,abs@a
  1342   000F06  C002  F008         	movff	?___awmod+1,abs@a+1
  1343   000F0A  ECA2  F00B         	call	_abs	;wreg free
  1344   000F0E  5007               	movf	?_abs^0,w,c
  1345   000F10  0F30               	addlw	48
  1346   000F12  6EDF               	movwf	indf2,c
  1347   000F14                     
  1348                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1349   000F14  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1350   000F18  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1351   000F1C  0E00               	movlw	0
  1352   000F1E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1353   000F20  0E0A               	movlw	10
  1354   000F22  6E03               	movwf	___awdiv@divisor^0,c
  1355   000F24  EC6F  F008         	call	___awdiv	;wreg free
  1356   000F28  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1357   000F2C  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1358   000F30                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1360   000F30  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1361   000F32  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1362   000F34                     
  1363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1364   000F34  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1365   000F36  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1366   000F38  B4D8               	btfsc	status,2,c
  1367   000F3A  EFA1  F007         	goto	u1401
  1368   000F3E  EFA3  F007         	goto	u1400
  1369   000F42                     u1401:
  1370   000F42  EFAB  F007         	goto	l2488
  1371   000F46                     u1400:
  1372   000F46  5017               	movf	vfpfcnvrt@c^0,w,c
  1373   000F48  A4D8               	btfss	status,2,c
  1374   000F4A  EFA9  F007         	goto	u1411
  1375   000F4E  EFAB  F007         	goto	u1410
  1376   000F52                     u1411:
  1377   000F52  EF70  F007         	goto	l2478
  1378   000F56                     u1410:
  1379   000F56                     l2488:
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1382   000F56  5017               	movf	vfpfcnvrt@c^0,w,c
  1383   000F58  B4D8               	btfsc	status,2,c
  1384   000F5A  EFB1  F007         	goto	u1421
  1385   000F5E  EFB3  F007         	goto	u1420
  1386   000F62                     u1421:
  1387   000F62  EFD8  F007         	goto	l2500
  1388   000F66                     u1420:
  1389   000F66  500F               	movf	vfpfcnvrt@done^0,w,c
  1390   000F68  B4D8               	btfsc	status,2,c
  1391   000F6A  EFB9  F007         	goto	u1431
  1392   000F6E  EFBB  F007         	goto	u1430
  1393   000F72                     u1431:
  1394   000F72  EFD8  F007         	goto	l2500
  1395   000F76                     u1430:
  1396   000F76                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1398   000F76  0617               	decf	vfpfcnvrt@c^0,f,c
  1399   000F78  0E3C               	movlw	low _dbuf
  1400   000F7A  2417               	addwf	vfpfcnvrt@c^0,w,c
  1401   000F7C  6ED9               	movwf	fsr2l,c
  1402   000F7E  6ADA               	clrf	fsr2h,c
  1403   000F80  0E01               	movlw	high _dbuf
  1404   000F82  22DA               	addwfc	fsr2h,f,c
  1405   000F84  0E2D               	movlw	45
  1406   000F86  6EDF               	movwf	indf2,c
  1407   000F88                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1409   000F88  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1410   000F8A  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1411   000F8C  EFD8  F007         	goto	l2500
  1412   000F90                     l2496:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1415   000F90  0E3C               	movlw	low _dbuf
  1416   000F92  2417               	addwf	vfpfcnvrt@c^0,w,c
  1417   000F94  6ED9               	movwf	fsr2l,c
  1418   000F96  6ADA               	clrf	fsr2h,c
  1419   000F98  0E01               	movlw	high _dbuf
  1420   000F9A  22DA               	addwfc	fsr2h,f,c
  1421   000F9C  50DF               	movf	indf2,w,c
  1422   000F9E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1423   000FA0  500E               	movf	??_vfpfcnvrt^0,w,c
  1424   000FA2  6E01               	movwf	fputc@c^0,c
  1425   000FA4  6A02               	clrf	(fputc@c+1)^0,c
  1426   000FA6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1427   000FAA  ECD1  F008         	call	_fputc	;wreg free
  1428   000FAE  2A17               	incf	vfpfcnvrt@c^0,f,c
  1429   000FB0                     l2500:
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1432   000FB0  0E20               	movlw	32
  1433   000FB2  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1434   000FB4  A4D8               	btfss	status,2,c
  1435   000FB6  EFDF  F007         	goto	u1441
  1436   000FBA  EFE1  F007         	goto	u1440
  1437   000FBE                     u1441:
  1438   000FBE  EFC8  F007         	goto	l2496
  1439   000FC2                     u1440:
  1440   000FC2                     
  1441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1442   000FC2  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1443   000FC6  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1444   000FCA  EF0A  F008         	goto	l1394
  1445   000FCE                     l2502:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1449   000FCE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1450   000FD0  6ED9               	movwf	fsr2l,c
  1451   000FD2  6ADA               	clrf	fsr2h,c
  1452   000FD4  2ADF               	incf	indf2,f,c
  1453   000FD6                     
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1456   000FD6  0E00               	movlw	0
  1457   000FD8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1458   000FDA  0E00               	movlw	0
  1459   000FDC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1460   000FDE  EF0A  F008         	goto	l1394
  1461   000FE2                     l2508:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1464   000FE2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1465   000FE4  6ED9               	movwf	fsr2l,c
  1466   000FE6  6ADA               	clrf	fsr2h,c
  1467   000FE8  CFDF FFF6          	movff	indf2,tblptrl
  1468   000FEC                     	if	1	;There is more than 1 active tblptr byte
  1469   000FEC  0E0E               	movlw	high __smallconst
  1470   000FEE  6EF7               	movwf	tblptrh,c
  1471   000FF0                     	endif
  1472   000FF0                     	if	0	;tblptru may be non-zero
  1473   000FF0                     	endif
  1474   000FF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1475   000FF0  0E00               	movlw	low (__smallconst shr (0+16))
  1476   000FF2  6EF8               	movwf	tblptru,c
  1477   000FF4                     	endif
  1478   000FF4  0008               	tblrd		*
  1479   000FF6  50F5               	movf	tablat,w,c
  1480   000FF8  6E01               	movwf	fputc@c^0,c
  1481   000FFA  6A02               	clrf	(fputc@c+1)^0,c
  1482   000FFC  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1483   001000  ECD1  F008         	call	_fputc	;wreg free
  1484   001004                     
  1485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1486   001004  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1487   001006  6ED9               	movwf	fsr2l,c
  1488   001008  6ADA               	clrf	fsr2h,c
  1489   00100A  2ADF               	incf	indf2,f,c
  1490   00100C                     
  1491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1492   00100C  0E00               	movlw	0
  1493   00100E  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1494   001010  0E01               	movlw	1
  1495   001012  6E0B               	movwf	?_vfpfcnvrt^0,c
  1496   001014                     l1394:
  1497   001014  0012               	return		;funcret
  1498   001016                     __end_of_vfpfcnvrt:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _fputc *****************
  1502 ;; Defined at:
  1503 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  c               2    0[COMRAM] int 
  1506 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1507 ;;		 -> sprintf@f(12), 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2    0[COMRAM] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;Total ram usage:        8 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 2
  1526 ;; This function calls:
  1527 ;;		_putch
  1528 ;; This function is called by:
  1529 ;;		_vfpfcnvrt
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text5
  1534   0011A2                     __ptext5:
  1535                           	callstack 0
  1536   0011A2                     _fputc:
  1537                           	callstack 24
  1538   0011A2  5003               	movf	fputc@fp^0,w,c
  1539   0011A4  B4D8               	btfsc	status,2,c
  1540   0011A6  EFD7  F008         	goto	u1121
  1541   0011AA  EFD9  F008         	goto	u1120
  1542   0011AE                     u1121:
  1543   0011AE  EFE1  F008         	goto	l2352
  1544   0011B2                     u1120:
  1545   0011B2  5003               	movf	fputc@fp^0,w,c
  1546   0011B4  A4D8               	btfss	status,2,c
  1547   0011B6  EFDF  F008         	goto	u1131
  1548   0011BA  EFE1  F008         	goto	u1130
  1549   0011BE                     u1131:
  1550   0011BE  EFE6  F008         	goto	l2354
  1551   0011C2                     u1130:
  1552   0011C2                     l2352:
  1553   0011C2  5001               	movf	fputc@c^0,w,c
  1554   0011C4  EC82  F00C         	call	_putch
  1555   0011C8  EF2D  F009         	goto	l1419
  1556   0011CC                     l2354:
  1557   0011CC  5003               	movf	fputc@fp^0,w,c
  1558   0011CE  6ED9               	movwf	fsr2l,c
  1559   0011D0  6ADA               	clrf	fsr2h,c
  1560   0011D2  0E0A               	movlw	10
  1561   0011D4  26D9               	addwf	fsr2l,f,c
  1562   0011D6  50DE               	movf	postinc2,w,c
  1563   0011D8  10DE               	iorwf	postinc2,w,c
  1564   0011DA  B4D8               	btfsc	status,2,c
  1565   0011DC  EFF2  F008         	goto	u1141
  1566   0011E0  EFF4  F008         	goto	u1140
  1567   0011E4                     u1141:
  1568   0011E4  EF0D  F009         	goto	l2358
  1569   0011E8                     u1140:
  1570   0011E8  5003               	movf	fputc@fp^0,w,c
  1571   0011EA  6ED9               	movwf	fsr2l,c
  1572   0011EC  6ADA               	clrf	fsr2h,c
  1573   0011EE  0E0A               	movlw	10
  1574   0011F0  26D9               	addwf	fsr2l,f,c
  1575   0011F2  5003               	movf	fputc@fp^0,w,c
  1576   0011F4  6EE1               	movwf	fsr1l,c
  1577   0011F6  6AE2               	clrf	fsr1h,c
  1578   0011F8  0E03               	movlw	3
  1579   0011FA  26E1               	addwf	fsr1l,f,c
  1580   0011FC  50DE               	movf	postinc2,w,c
  1581   0011FE  5CE6               	subwf	postinc1,w,c
  1582   001200  50E6               	movf	postinc1,w,c
  1583   001202  0A80               	xorlw	128
  1584   001204  6E08               	movwf	(??_fputc+4)^0,c
  1585   001206  50DE               	movf	postinc2,w,c
  1586   001208  0A80               	xorlw	128
  1587   00120A  5808               	subwfb	(??_fputc+4)^0,w,c
  1588   00120C  B0D8               	btfsc	status,0,c
  1589   00120E  EF0B  F009         	goto	u1151
  1590   001212  EF0D  F009         	goto	u1150
  1591   001216                     u1151:
  1592   001216  EF2D  F009         	goto	l1419
  1593   00121A                     u1150:
  1594   00121A                     l2358:
  1595   00121A  5003               	movf	fputc@fp^0,w,c
  1596   00121C  6ED9               	movwf	fsr2l,c
  1597   00121E  6ADA               	clrf	fsr2h,c
  1598   001220  0E03               	movlw	3
  1599   001222  26D9               	addwf	fsr2l,f,c
  1600   001224  CFDE F004          	movff	postinc2,??_fputc
  1601   001228  CFDD F005          	movff	postdec2,??_fputc+1
  1602   00122C  5003               	movf	fputc@fp^0,w,c
  1603   00122E  6ED9               	movwf	fsr2l,c
  1604   001230  6ADA               	clrf	fsr2h,c
  1605   001232  CFDE F006          	movff	postinc2,??_fputc+2
  1606   001236  CFDD F007          	movff	postdec2,??_fputc+3
  1607   00123A  5004               	movf	??_fputc^0,w,c
  1608   00123C  2406               	addwf	(??_fputc+2)^0,w,c
  1609   00123E  6ED9               	movwf	fsr2l,c
  1610   001240  5005               	movf	(??_fputc+1)^0,w,c
  1611   001242  2007               	addwfc	(??_fputc+3)^0,w,c
  1612   001244  6EDA               	movwf	fsr2h,c
  1613   001246  C001  FFDF         	movff	fputc@c,indf2
  1614   00124A  5003               	movf	fputc@fp^0,w,c
  1615   00124C  6ED9               	movwf	fsr2l,c
  1616   00124E  6ADA               	clrf	fsr2h,c
  1617   001250  0E03               	movlw	3
  1618   001252  26D9               	addwf	fsr2l,f,c
  1619   001254  2ADE               	incf	postinc2,f,c
  1620   001256  0E00               	movlw	0
  1621   001258  22DD               	addwfc	postdec2,f,c
  1622   00125A                     l1419:
  1623   00125A  0012               	return		;funcret
  1624   00125C                     __end_of_fputc:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _putch *****************
  1628 ;; Defined at:
  1629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  c               1    wreg     unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  c               1    0[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_fputc
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text6
  1658   001904                     __ptext6:
  1659                           	callstack 0
  1660   001904                     _putch:
  1661                           	callstack 24
  1662   001904  0012               	return		;funcret
  1663   001906                     __end_of_putch:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _abs *****************
  1667 ;; Defined at:
  1668 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  a               2    6[COMRAM] int 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2    6[COMRAM] int 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;Total ram usage:        4 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_vfpfcnvrt
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text7
  1697   001744                     __ptext7:
  1698                           	callstack 0
  1699   001744                     _abs:
  1700                           	callstack 25
  1701   001744  BE08               	btfsc	(abs@a+1)^0,7,c
  1702   001746  EFA7  F00B         	goto	u1161
  1703   00174A  EFA9  F00B         	goto	u1160
  1704   00174E                     u1161:
  1705   00174E  EFAF  F00B         	goto	l1404
  1706   001752                     u1160:
  1707   001752  C007  F007         	movff	abs@a,?_abs
  1708   001756  C008  F008         	movff	abs@a+1,?_abs+1
  1709   00175A  EFBB  F00B         	goto	l1407
  1710   00175E                     l1404:
  1711   00175E  C007  F009         	movff	abs@a,??_abs
  1712   001762  C008  F00A         	movff	abs@a+1,??_abs+1
  1713   001766  1E09               	comf	??_abs^0,f,c
  1714   001768  1E0A               	comf	(??_abs+1)^0,f,c
  1715   00176A  4A09               	infsnz	??_abs^0,f,c
  1716   00176C  2A0A               	incf	(??_abs+1)^0,f,c
  1717   00176E  C009  F007         	movff	??_abs,?_abs
  1718   001772  C00A  F008         	movff	??_abs+1,?_abs+1
  1719   001776                     l1407:
  1720   001776  0012               	return		;funcret
  1721   001778                     __end_of_abs:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function ___awmod *****************
  1725 ;; Defined at:
  1726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  dividend        2    0[COMRAM] int 
  1729 ;;  divisor         2    2[COMRAM] int 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  sign            1    5[COMRAM] unsigned char 
  1732 ;;  counter         1    4[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2    0[COMRAM] int 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;Total ram usage:        6 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_vfpfcnvrt
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text8
  1757   00125C                     __ptext8:
  1758                           	callstack 0
  1759   00125C                     ___awmod:
  1760                           	callstack 25
  1761   00125C  0E00               	movlw	0
  1762   00125E  6E06               	movwf	___awmod@sign^0,c
  1763   001260  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1764   001262  EF37  F009         	goto	u1060
  1765   001266  EF35  F009         	goto	u1061
  1766   00126A                     u1061:
  1767   00126A  EF3D  F009         	goto	l2320
  1768   00126E                     u1060:
  1769   00126E  6C01               	negf	___awmod@dividend^0,c
  1770   001270  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1771   001272  B0D8               	btfsc	status,0,c
  1772   001274  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1773   001276  0E01               	movlw	1
  1774   001278  6E06               	movwf	___awmod@sign^0,c
  1775   00127A                     l2320:
  1776   00127A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1777   00127C  EF44  F009         	goto	u1070
  1778   001280  EF42  F009         	goto	u1071
  1779   001284                     u1071:
  1780   001284  EF48  F009         	goto	l2324
  1781   001288                     u1070:
  1782   001288  6C03               	negf	___awmod@divisor^0,c
  1783   00128A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1784   00128C  B0D8               	btfsc	status,0,c
  1785   00128E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1786   001290                     l2324:
  1787   001290  5003               	movf	___awmod@divisor^0,w,c
  1788   001292  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1789   001294  B4D8               	btfsc	status,2,c
  1790   001296  EF4F  F009         	goto	u1081
  1791   00129A  EF51  F009         	goto	u1080
  1792   00129E                     u1081:
  1793   00129E  EF75  F009         	goto	l2340
  1794   0012A2                     u1080:
  1795   0012A2  0E01               	movlw	1
  1796   0012A4  6E05               	movwf	___awmod@counter^0,c
  1797   0012A6  EF59  F009         	goto	l2330
  1798   0012AA                     l2328:
  1799   0012AA  90D8               	bcf	status,0,c
  1800   0012AC  3603               	rlcf	___awmod@divisor^0,f,c
  1801   0012AE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1802   0012B0  2A05               	incf	___awmod@counter^0,f,c
  1803   0012B2                     l2330:
  1804   0012B2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1805   0012B4  EF5E  F009         	goto	u1091
  1806   0012B8  EF60  F009         	goto	u1090
  1807   0012BC                     u1091:
  1808   0012BC  EF55  F009         	goto	l2328
  1809   0012C0                     u1090:
  1810   0012C0                     l2332:
  1811   0012C0  5003               	movf	___awmod@divisor^0,w,c
  1812   0012C2  5C01               	subwf	___awmod@dividend^0,w,c
  1813   0012C4  5004               	movf	(___awmod@divisor+1)^0,w,c
  1814   0012C6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1815   0012C8  A0D8               	btfss	status,0,c
  1816   0012CA  EF69  F009         	goto	u1101
  1817   0012CE  EF6B  F009         	goto	u1100
  1818   0012D2                     u1101:
  1819   0012D2  EF6F  F009         	goto	l2336
  1820   0012D6                     u1100:
  1821   0012D6  5003               	movf	___awmod@divisor^0,w,c
  1822   0012D8  5E01               	subwf	___awmod@dividend^0,f,c
  1823   0012DA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1824   0012DC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1825   0012DE                     l2336:
  1826   0012DE  90D8               	bcf	status,0,c
  1827   0012E0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1828   0012E2  3203               	rrcf	___awmod@divisor^0,f,c
  1829   0012E4  2E05               	decfsz	___awmod@counter^0,f,c
  1830   0012E6  EF60  F009         	goto	l2332
  1831   0012EA                     l2340:
  1832   0012EA  5006               	movf	___awmod@sign^0,w,c
  1833   0012EC  B4D8               	btfsc	status,2,c
  1834   0012EE  EF7B  F009         	goto	u1111
  1835   0012F2  EF7D  F009         	goto	u1110
  1836   0012F6                     u1111:
  1837   0012F6  EF81  F009         	goto	l2344
  1838   0012FA                     u1110:
  1839   0012FA  6C01               	negf	___awmod@dividend^0,c
  1840   0012FC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1841   0012FE  B0D8               	btfsc	status,0,c
  1842   001300  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1843   001302                     l2344:
  1844   001302  C001  F001         	movff	___awmod@dividend,?___awmod
  1845   001306  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1846   00130A  0012               	return		;funcret
  1847   00130C                     __end_of___awmod:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function ___awdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  dividend        2    0[COMRAM] int 
  1855 ;;  divisor         2    2[COMRAM] int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    6[COMRAM] int 
  1858 ;;  sign            1    5[COMRAM] unsigned char 
  1859 ;;  counter         1    4[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    0[COMRAM] int 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1873 ;;Total ram usage:        8 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_vfpfcnvrt
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text9
  1884   0010DE                     __ptext9:
  1885                           	callstack 0
  1886   0010DE                     ___awdiv:
  1887                           	callstack 25
  1888   0010DE  0E00               	movlw	0
  1889   0010E0  6E06               	movwf	___awdiv@sign^0,c
  1890   0010E2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1891   0010E4  EF78  F008         	goto	u1000
  1892   0010E8  EF76  F008         	goto	u1001
  1893   0010EC                     u1001:
  1894   0010EC  EF7E  F008         	goto	l2276
  1895   0010F0                     u1000:
  1896   0010F0  6C03               	negf	___awdiv@divisor^0,c
  1897   0010F2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1898   0010F4  B0D8               	btfsc	status,0,c
  1899   0010F6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1900   0010F8  0E01               	movlw	1
  1901   0010FA  6E06               	movwf	___awdiv@sign^0,c
  1902   0010FC                     l2276:
  1903   0010FC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1904   0010FE  EF85  F008         	goto	u1010
  1905   001102  EF83  F008         	goto	u1011
  1906   001106                     u1011:
  1907   001106  EF8B  F008         	goto	l2282
  1908   00110A                     u1010:
  1909   00110A  6C01               	negf	___awdiv@dividend^0,c
  1910   00110C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1911   00110E  B0D8               	btfsc	status,0,c
  1912   001110  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1913   001112  0E01               	movlw	1
  1914   001114  1A06               	xorwf	___awdiv@sign^0,f,c
  1915   001116                     l2282:
  1916   001116  0E00               	movlw	0
  1917   001118  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1918   00111A  0E00               	movlw	0
  1919   00111C  6E07               	movwf	___awdiv@quotient^0,c
  1920   00111E  5003               	movf	___awdiv@divisor^0,w,c
  1921   001120  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1922   001122  B4D8               	btfsc	status,2,c
  1923   001124  EF96  F008         	goto	u1021
  1924   001128  EF98  F008         	goto	u1020
  1925   00112C                     u1021:
  1926   00112C  EFC0  F008         	goto	l2304
  1927   001130                     u1020:
  1928   001130  0E01               	movlw	1
  1929   001132  6E05               	movwf	___awdiv@counter^0,c
  1930   001134  EFA0  F008         	goto	l2290
  1931   001138                     l2288:
  1932   001138  90D8               	bcf	status,0,c
  1933   00113A  3603               	rlcf	___awdiv@divisor^0,f,c
  1934   00113C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1935   00113E  2A05               	incf	___awdiv@counter^0,f,c
  1936   001140                     l2290:
  1937   001140  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1938   001142  EFA5  F008         	goto	u1031
  1939   001146  EFA7  F008         	goto	u1030
  1940   00114A                     u1031:
  1941   00114A  EF9C  F008         	goto	l2288
  1942   00114E                     u1030:
  1943   00114E                     l2292:
  1944   00114E  90D8               	bcf	status,0,c
  1945   001150  3607               	rlcf	___awdiv@quotient^0,f,c
  1946   001152  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1947   001154  5003               	movf	___awdiv@divisor^0,w,c
  1948   001156  5C01               	subwf	___awdiv@dividend^0,w,c
  1949   001158  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1950   00115A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1951   00115C  A0D8               	btfss	status,0,c
  1952   00115E  EFB3  F008         	goto	u1041
  1953   001162  EFB5  F008         	goto	u1040
  1954   001166                     u1041:
  1955   001166  EFBA  F008         	goto	l2300
  1956   00116A                     u1040:
  1957   00116A  5003               	movf	___awdiv@divisor^0,w,c
  1958   00116C  5E01               	subwf	___awdiv@dividend^0,f,c
  1959   00116E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1960   001170  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1961   001172  8007               	bsf	___awdiv@quotient^0,0,c
  1962   001174                     l2300:
  1963   001174  90D8               	bcf	status,0,c
  1964   001176  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1965   001178  3203               	rrcf	___awdiv@divisor^0,f,c
  1966   00117A  2E05               	decfsz	___awdiv@counter^0,f,c
  1967   00117C  EFA7  F008         	goto	l2292
  1968   001180                     l2304:
  1969   001180  5006               	movf	___awdiv@sign^0,w,c
  1970   001182  B4D8               	btfsc	status,2,c
  1971   001184  EFC6  F008         	goto	u1051
  1972   001188  EFC8  F008         	goto	u1050
  1973   00118C                     u1051:
  1974   00118C  EFCC  F008         	goto	l2308
  1975   001190                     u1050:
  1976   001190  6C07               	negf	___awdiv@quotient^0,c
  1977   001192  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1978   001194  B0D8               	btfsc	status,0,c
  1979   001196  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1980   001198                     l2308:
  1981   001198  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1982   00119C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1983   0011A0  0012               	return		;funcret
  1984   0011A2                     __end_of___awdiv:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _sendStringSerial4 *****************
  1988 ;; Defined at:
  1989 ;;		line 35 in file "serial.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  string          2    1[COMRAM] PTR unsigned char 
  1992 ;;		 -> sendRGBCvalSerial4@tempStr(41), STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 2
  2011 ;; This function calls:
  2012 ;;		_sendCharSerial4
  2013 ;; This function is called by:
  2014 ;;		_sendRGBCvalSerial4
  2015 ;;		_sendIntSerial4
  2016 ;;		_sendArrayCharSerial4
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text10
  2021   00140A                     __ptext10:
  2022                           	callstack 0
  2023   00140A                     _sendStringSerial4:
  2024                           	callstack 27
  2025   00140A                     
  2026                           ;serial.c: 37:     while(*string != 0){
  2027   00140A  EF1C  F00A         	goto	l2644
  2028   00140E                     l2640:
  2029                           
  2030                           ;serial.c: 38:   sendCharSerial4(*string++);
  2031   00140E  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2032   001412  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2033   001416  0E00               	movlw	low (__smallconst shr (0+16))
  2034   001418  6EF8               	movwf	tblptru,c
  2035   00141A  0E0D               	movlw	(high __ramtop+-1)
  2036   00141C  64F7               	cpfsgt	tblptrh,c
  2037   00141E  D003               	bra	u1497
  2038   001420  0008               	tblrd		*
  2039   001422  50F5               	movf	tablat,w,c
  2040   001424  D005               	bra	u1490
  2041   001426                     u1497:
  2042   001426  CFF6 FFE9          	movff	tblptrl,fsr0l
  2043   00142A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2044   00142E  50EF               	movf	indf0,w,c
  2045   001430                     u1490:
  2046   001430  EC59  F00C         	call	_sendCharSerial4
  2047   001434  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2048   001436  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2049   001438                     l2644:
  2050                           
  2051                           ;serial.c: 37:     while(*string != 0){
  2052   001438  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2053   00143C  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2054   001440  0E00               	movlw	low (__smallconst shr (0+16))
  2055   001442  6EF8               	movwf	tblptru,c
  2056   001444  0E0D               	movlw	(high __ramtop+-1)
  2057   001446  64F7               	cpfsgt	tblptrh,c
  2058   001448  D003               	bra	u1507
  2059   00144A  0008               	tblrd		*
  2060   00144C  50F5               	movf	tablat,w,c
  2061   00144E  D005               	bra	u1500
  2062   001450                     u1507:
  2063   001450  CFF6 FFE9          	movff	tblptrl,fsr0l
  2064   001454  CFF7 FFEA          	movff	tblptrh,fsr0h
  2065   001458  50EF               	movf	indf0,w,c
  2066   00145A                     u1500:
  2067   00145A  0900               	iorlw	0
  2068   00145C  A4D8               	btfss	status,2,c
  2069   00145E  EF33  F00A         	goto	u1511
  2070   001462  EF35  F00A         	goto	u1510
  2071   001466                     u1511:
  2072   001466  EF07  F00A         	goto	l2640
  2073   00146A                     u1510:
  2074   00146A  0012               	return		;funcret
  2075   00146C                     __end_of_sendStringSerial4:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _sendCharSerial4 *****************
  2079 ;; Defined at:
  2080 ;;		line 29 in file "serial.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  charToSend      1    wreg     unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  charToSend      1    0[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2098 ;;Total ram usage:        1 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_sendStringSerial4
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text11
  2109   0018B2                     __ptext11:
  2110                           	callstack 0
  2111   0018B2                     _sendCharSerial4:
  2112                           	callstack 27
  2113                           
  2114                           ;incstack = 0
  2115                           ;sendCharSerial4@charToSend stored from wreg
  2116   0018B2  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2117   0018B4                     l412:
  2118   0018B4  010E               	movlb	14	; () banked
  2119   0018B6  A537               	btfss	55,2,b	;volatile
  2120   0018B8  EF60  F00C         	goto	u1471
  2121   0018BC  EF62  F00C         	goto	u1470
  2122   0018C0                     u1471:
  2123   0018C0  EF5A  F00C         	goto	l412
  2124   0018C4                     u1470:
  2125   0018C4                     
  2126                           ; BSR set to: 14
  2127                           ;serial.c: 31:     TX4REG = charToSend;
  2128   0018C4  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2129   0018C8                     
  2130                           ; BSR set to: 14
  2131   0018C8  0012               	return		;funcret
  2132   0018CA                     __end_of_sendCharSerial4:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _initUSART4 *****************
  2136 ;; Defined at:
  2137 ;;		line 5 in file "serial.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text12
  2166   001894                     __ptext12:
  2167                           	callstack 0
  2168   001894                     _initUSART4:
  2169                           	callstack 29
  2170   001894                     
  2171                           ;serial.c: 9:     RC0PPS = 0x12;
  2172   001894  0E12               	movlw	18
  2173   001896  010E               	movlb	14	; () banked
  2174   001898  6F62               	movwf	98,b	;volatile
  2175                           
  2176                           ;serial.c: 10:     RX4PPS = 0x11;
  2177   00189A  0E11               	movlw	17
  2178   00189C  6F15               	movwf	21,b	;volatile
  2179   00189E                     
  2180                           ; BSR set to: 14
  2181                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2182   00189E  97E9               	bcf	233,3,b	;volatile
  2183   0018A0                     
  2184                           ; BSR set to: 14
  2185                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2186   0018A0  95E8               	bcf	232,2,b	;volatile
  2187                           
  2188                           ;serial.c: 14:     SP4BRGL = 51;
  2189   0018A2  0E33               	movlw	51
  2190   0018A4  6FE5               	movwf	229,b	;volatile
  2191                           
  2192                           ;serial.c: 15:     SP4BRGH = 0;
  2193   0018A6  0E00               	movlw	0
  2194   0018A8  6FE6               	movwf	230,b	;volatile
  2195   0018AA                     
  2196                           ; BSR set to: 14
  2197                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2198   0018AA  89E7               	bsf	231,4,b	;volatile
  2199   0018AC                     
  2200                           ; BSR set to: 14
  2201                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2202   0018AC  8BE8               	bsf	232,5,b	;volatile
  2203   0018AE                     
  2204                           ; BSR set to: 14
  2205                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2206   0018AE  8FE7               	bsf	231,7,b	;volatile
  2207   0018B0                     
  2208                           ; BSR set to: 14
  2209   0018B0  0012               	return		;funcret
  2210   0018B2                     __end_of_initUSART4:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _initDCmotorsPWM *****************
  2214 ;; Defined at:
  2215 ;;		line 5 in file "dc_motor.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;Total ram usage:        2 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text13
  2244   00130C                     __ptext13:
  2245                           	callstack 0
  2246   00130C                     _initDCmotorsPWM:
  2247                           	callstack 29
  2248   00130C                     
  2249                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2250   00130C  9485               	bcf	133,2,c	;volatile
  2251                           
  2252                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2253   00130E  9885               	bcf	133,4,c	;volatile
  2254                           
  2255                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2256   001310  9E83               	bcf	131,7,c	;volatile
  2257                           
  2258                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2259   001312  9C87               	bcf	135,6,c	;volatile
  2260                           
  2261                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2262   001314  947D               	bcf	125,2,c	;volatile
  2263                           
  2264                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2265   001316  987D               	bcf	125,4,c	;volatile
  2266                           
  2267                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2268   001318  9E7B               	bcf	123,7,c	;volatile
  2269                           
  2270                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2271   00131A  9C7F               	bcf	127,6,c	;volatile
  2272   00131C                     
  2273                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2274   00131C  0E05               	movlw	5
  2275   00131E  010E               	movlb	14	; () banked
  2276   001320  6F74               	movwf	116,b	;volatile
  2277                           
  2278                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2279   001322  0E06               	movlw	6
  2280   001324  6F76               	movwf	118,b	;volatile
  2281                           
  2282                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2283   001326  0E07               	movlw	7
  2284   001328  6F69               	movwf	105,b	;volatile
  2285                           
  2286                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2287   00132A  0E08               	movlw	8
  2288   00132C  6F88               	movwf	136,b	;volatile
  2289                           
  2290                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2291   00132E  50BD               	movf	189,w,c	;volatile
  2292   001330  0B8F               	andlw	-113
  2293   001332  0940               	iorlw	64
  2294   001334  6EBD               	movwf	189,c	;volatile
  2295                           
  2296                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2297   001336  0EE0               	movlw	-32
  2298   001338  16BE               	andwf	190,f,c	;volatile
  2299                           
  2300                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2301   00133A  50BF               	movf	191,w,c	;volatile
  2302   00133C  0BF0               	andlw	-16
  2303   00133E  0901               	iorlw	1
  2304   001340  6EBF               	movwf	191,c	;volatile
  2305   001342                     
  2306                           ; BSR set to: 14
  2307                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2308   001342  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2309   001346                     
  2310                           ; BSR set to: 14
  2311                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2312   001346  8EBD               	bsf	189,7,c	;volatile
  2313                           
  2314                           ;dc_motor.c: 35:     CCPR1H=0;
  2315   001348  0E00               	movlw	0
  2316   00134A  6EAA               	movwf	170,c	;volatile
  2317                           
  2318                           ;dc_motor.c: 36:     CCPR2H=0;
  2319   00134C  0E00               	movlw	0
  2320   00134E  6EA6               	movwf	166,c	;volatile
  2321                           
  2322                           ;dc_motor.c: 37:     CCPR3H=0;
  2323   001350  0E00               	movlw	0
  2324   001352  010F               	movlb	15	; () banked
  2325   001354  6F25               	movwf	37,b	;volatile
  2326                           
  2327                           ;dc_motor.c: 38:     CCPR4H=0;
  2328   001356  0E00               	movlw	0
  2329   001358  6F21               	movwf	33,b	;volatile
  2330                           
  2331                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2332   00135A  0EFC               	movlw	-4
  2333   00135C  16AD               	andwf	173,f,c	;volatile
  2334                           
  2335                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2336   00135E  0EF3               	movlw	-13
  2337   001360  16AD               	andwf	173,f,c	;volatile
  2338                           
  2339                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2340   001362  0ECF               	movlw	-49
  2341   001364  16AD               	andwf	173,f,c	;volatile
  2342                           
  2343                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2344   001366  0E3F               	movlw	-193
  2345   001368  16AD               	andwf	173,f,c	;volatile
  2346   00136A                     
  2347                           ; BSR set to: 15
  2348                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2349   00136A  88AB               	bsf	171,4,c	;volatile
  2350                           
  2351                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2352   00136C  50AB               	movf	171,w,c	;volatile
  2353   00136E  0BF0               	andlw	-16
  2354   001370  090C               	iorlw	12
  2355   001372  6EAB               	movwf	171,c	;volatile
  2356   001374                     
  2357                           ; BSR set to: 15
  2358                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2359   001374  8EAB               	bsf	171,7,c	;volatile
  2360   001376                     
  2361                           ; BSR set to: 15
  2362                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2363   001376  88A7               	bsf	167,4,c	;volatile
  2364                           
  2365                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2366   001378  50A7               	movf	167,w,c	;volatile
  2367   00137A  0BF0               	andlw	-16
  2368   00137C  090C               	iorlw	12
  2369   00137E  6EA7               	movwf	167,c	;volatile
  2370   001380                     
  2371                           ; BSR set to: 15
  2372                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2373   001380  8EA7               	bsf	167,7,c	;volatile
  2374   001382                     
  2375                           ; BSR set to: 15
  2376                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2377   001382  8926               	bsf	38,4,b	;volatile
  2378                           
  2379                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2380   001384  5126               	movf	38,w,b	;volatile
  2381   001386  0BF0               	andlw	-16
  2382   001388  090C               	iorlw	12
  2383   00138A  6F26               	movwf	38,b	;volatile
  2384   00138C                     
  2385                           ; BSR set to: 15
  2386                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2387   00138C  8F26               	bsf	38,7,b	;volatile
  2388   00138E                     
  2389                           ; BSR set to: 15
  2390                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2391   00138E  8922               	bsf	34,4,b	;volatile
  2392                           
  2393                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2394   001390  5122               	movf	34,w,b	;volatile
  2395   001392  0BF0               	andlw	-16
  2396   001394  090C               	iorlw	12
  2397   001396  6F22               	movwf	34,b	;volatile
  2398   001398                     
  2399                           ; BSR set to: 15
  2400                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2401   001398  8F22               	bsf	34,7,b	;volatile
  2402   00139A                     
  2403                           ; BSR set to: 15
  2404   00139A  0012               	return		;funcret
  2405   00139C                     __end_of_initDCmotorsPWM:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _getRGBCval *****************
  2409 ;; Defined at:
  2410 ;;		line 84 in file "color.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2413 ;;		 -> main@measured_colour(8), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 4
  2432 ;; This function calls:
  2433 ;;		_color_read_Blue
  2434 ;;		_color_read_Clear
  2435 ;;		_color_read_Green
  2436 ;;		_color_read_Red
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text14
  2443   001520                     __ptext14:
  2444                           	callstack 0
  2445   001520                     _getRGBCval:
  2446                           	callstack 26
  2447   001520                     
  2448                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2449   001520  ECBB  F00A         	call	_color_read_Red	;wreg free
  2450   001524  500C               	movf	getRGBCval@p^0,w,c
  2451   001526  6ED9               	movwf	fsr2l,c
  2452   001528  6ADA               	clrf	fsr2h,c
  2453   00152A  C005  FFDE         	movff	?_color_read_Red,postinc2
  2454   00152E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2455                           
  2456                           ;color.c: 87:     p->B = color_read_Blue();
  2457   001532  EC33  F00B         	call	_color_read_Blue	;wreg free
  2458   001536  500C               	movf	getRGBCval@p^0,w,c
  2459   001538  6ED9               	movwf	fsr2l,c
  2460   00153A  6ADA               	clrf	fsr2h,c
  2461   00153C  0E04               	movlw	4
  2462   00153E  26D9               	addwf	fsr2l,f,c
  2463   001540  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2464   001544  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2465                           
  2466                           ;color.c: 88:     p->G = color_read_Green();
  2467   001548  ECE3  F00A         	call	_color_read_Green	;wreg free
  2468   00154C  500C               	movf	getRGBCval@p^0,w,c
  2469   00154E  6ED9               	movwf	fsr2l,c
  2470   001550  6ADA               	clrf	fsr2h,c
  2471   001552  0E02               	movlw	2
  2472   001554  26D9               	addwf	fsr2l,f,c
  2473   001556  C005  FFDE         	movff	?_color_read_Green,postinc2
  2474   00155A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2475                           
  2476                           ;color.c: 89:     p->C = color_read_Clear();
  2477   00155E  EC0B  F00B         	call	_color_read_Clear	;wreg free
  2478   001562  500C               	movf	getRGBCval@p^0,w,c
  2479   001564  6ED9               	movwf	fsr2l,c
  2480   001566  6ADA               	clrf	fsr2h,c
  2481   001568  0E06               	movlw	6
  2482   00156A  26D9               	addwf	fsr2l,f,c
  2483   00156C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2484   001570  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2485   001574  0012               	return		;funcret
  2486   001576                     __end_of_getRGBCval:
  2487                           	callstack 0
  2488                           
  2489 ;; *************** function _color_read_Red *****************
  2490 ;; Defined at:
  2491 ;;		line 28 in file "color.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  tmp             2    9[COMRAM] unsigned int 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2    4[COMRAM] unsigned int 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 3
  2512 ;; This function calls:
  2513 ;;		_I2C_2_Master_Read
  2514 ;;		_I2C_2_Master_RepStart
  2515 ;;		_I2C_2_Master_Start
  2516 ;;		_I2C_2_Master_Stop
  2517 ;;		_I2C_2_Master_Write
  2518 ;; This function is called by:
  2519 ;;		_getRGBCval
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text15
  2524   001576                     __ptext15:
  2525                           	callstack 0
  2526   001576                     _color_read_Red:
  2527                           	callstack 26
  2528   001576                     
  2529                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2530   001576  EC75  F00C         	call	_I2C_2_Master_Start	;wreg free
  2531                           
  2532                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2533   00157A  0E52               	movlw	82
  2534   00157C  EC65  F00C         	call	_I2C_2_Master_Write
  2535                           
  2536                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2537   001580  0EB6               	movlw	182
  2538   001582  EC65  F00C         	call	_I2C_2_Master_Write
  2539                           
  2540                           ;color.c: 34:  I2C_2_Master_RepStart();
  2541   001586  EC6B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2542                           
  2543                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2544   00158A  0E53               	movlw	83
  2545   00158C  EC65  F00C         	call	_I2C_2_Master_Write
  2546                           
  2547                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2548   001590  0E01               	movlw	1
  2549   001592  EC81  F00B         	call	_I2C_2_Master_Read
  2550   001596  6E07               	movwf	??_color_read_Red^0,c
  2551   001598  5007               	movf	??_color_read_Red^0,w,c
  2552   00159A  6E0A               	movwf	color_read_Red@tmp^0,c
  2553   00159C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2554                           
  2555                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2556   00159E  0E00               	movlw	0
  2557   0015A0  EC81  F00B         	call	_I2C_2_Master_Read
  2558   0015A4  6E07               	movwf	??_color_read_Red^0,c
  2559   0015A6  5007               	movf	??_color_read_Red^0,w,c
  2560   0015A8  6E09               	movwf	(??_color_read_Red+2)^0,c
  2561   0015AA  6A08               	clrf	(??_color_read_Red+1)^0,c
  2562   0015AC  500A               	movf	color_read_Red@tmp^0,w,c
  2563   0015AE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2564   0015B0  6E0A               	movwf	color_read_Red@tmp^0,c
  2565   0015B2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2566   0015B4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2567   0015B6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2568                           
  2569                           ;color.c: 38:  I2C_2_Master_Stop();
  2570   0015B8  EC70  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2571   0015BC                     
  2572                           ;color.c: 39:  return tmp;
  2573   0015BC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2574   0015C0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2575   0015C4  0012               	return		;funcret
  2576   0015C6                     __end_of_color_read_Red:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _color_read_Green *****************
  2580 ;; Defined at:
  2581 ;;		line 56 in file "color.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  tmp             2    9[COMRAM] unsigned int 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2    4[COMRAM] unsigned int 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;Total ram usage:        7 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 3
  2602 ;; This function calls:
  2603 ;;		_I2C_2_Master_Read
  2604 ;;		_I2C_2_Master_RepStart
  2605 ;;		_I2C_2_Master_Start
  2606 ;;		_I2C_2_Master_Stop
  2607 ;;		_I2C_2_Master_Write
  2608 ;; This function is called by:
  2609 ;;		_getRGBCval
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text16
  2614   0015C6                     __ptext16:
  2615                           	callstack 0
  2616   0015C6                     _color_read_Green:
  2617                           	callstack 26
  2618   0015C6                     
  2619                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2620   0015C6  EC75  F00C         	call	_I2C_2_Master_Start	;wreg free
  2621                           
  2622                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2623   0015CA  0E52               	movlw	82
  2624   0015CC  EC65  F00C         	call	_I2C_2_Master_Write
  2625                           
  2626                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2627   0015D0  0EB8               	movlw	184
  2628   0015D2  EC65  F00C         	call	_I2C_2_Master_Write
  2629                           
  2630                           ;color.c: 62:  I2C_2_Master_RepStart();
  2631   0015D6  EC6B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2632                           
  2633                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2634   0015DA  0E53               	movlw	83
  2635   0015DC  EC65  F00C         	call	_I2C_2_Master_Write
  2636                           
  2637                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2638   0015E0  0E01               	movlw	1
  2639   0015E2  EC81  F00B         	call	_I2C_2_Master_Read
  2640   0015E6  6E07               	movwf	??_color_read_Green^0,c
  2641   0015E8  5007               	movf	??_color_read_Green^0,w,c
  2642   0015EA  6E0A               	movwf	color_read_Green@tmp^0,c
  2643   0015EC  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2644                           
  2645                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2646   0015EE  0E00               	movlw	0
  2647   0015F0  EC81  F00B         	call	_I2C_2_Master_Read
  2648   0015F4  6E07               	movwf	??_color_read_Green^0,c
  2649   0015F6  5007               	movf	??_color_read_Green^0,w,c
  2650   0015F8  6E09               	movwf	(??_color_read_Green+2)^0,c
  2651   0015FA  6A08               	clrf	(??_color_read_Green+1)^0,c
  2652   0015FC  500A               	movf	color_read_Green@tmp^0,w,c
  2653   0015FE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2654   001600  6E0A               	movwf	color_read_Green@tmp^0,c
  2655   001602  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2656   001604  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2657   001606  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2658                           
  2659                           ;color.c: 66:  I2C_2_Master_Stop();
  2660   001608  EC70  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2661   00160C                     
  2662                           ;color.c: 67:  return tmp;
  2663   00160C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2664   001610  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2665   001614  0012               	return		;funcret
  2666   001616                     __end_of_color_read_Green:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _color_read_Clear *****************
  2670 ;; Defined at:
  2671 ;;		line 70 in file "color.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  tmp             2    9[COMRAM] unsigned int 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2    4[COMRAM] unsigned int 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;Total ram usage:        7 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 3
  2692 ;; This function calls:
  2693 ;;		_I2C_2_Master_Read
  2694 ;;		_I2C_2_Master_RepStart
  2695 ;;		_I2C_2_Master_Start
  2696 ;;		_I2C_2_Master_Stop
  2697 ;;		_I2C_2_Master_Write
  2698 ;; This function is called by:
  2699 ;;		_getRGBCval
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text17
  2704   001616                     __ptext17:
  2705                           	callstack 0
  2706   001616                     _color_read_Clear:
  2707                           	callstack 26
  2708   001616                     
  2709                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2710   001616  EC75  F00C         	call	_I2C_2_Master_Start	;wreg free
  2711                           
  2712                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2713   00161A  0E52               	movlw	82
  2714   00161C  EC65  F00C         	call	_I2C_2_Master_Write
  2715                           
  2716                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2717   001620  0EB4               	movlw	180
  2718   001622  EC65  F00C         	call	_I2C_2_Master_Write
  2719                           
  2720                           ;color.c: 76:  I2C_2_Master_RepStart();
  2721   001626  EC6B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2722                           
  2723                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2724   00162A  0E53               	movlw	83
  2725   00162C  EC65  F00C         	call	_I2C_2_Master_Write
  2726                           
  2727                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2728   001630  0E01               	movlw	1
  2729   001632  EC81  F00B         	call	_I2C_2_Master_Read
  2730   001636  6E07               	movwf	??_color_read_Clear^0,c
  2731   001638  5007               	movf	??_color_read_Clear^0,w,c
  2732   00163A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2733   00163C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2734                           
  2735                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2736   00163E  0E00               	movlw	0
  2737   001640  EC81  F00B         	call	_I2C_2_Master_Read
  2738   001644  6E07               	movwf	??_color_read_Clear^0,c
  2739   001646  5007               	movf	??_color_read_Clear^0,w,c
  2740   001648  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2741   00164A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2742   00164C  500A               	movf	color_read_Clear@tmp^0,w,c
  2743   00164E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2744   001650  6E0A               	movwf	color_read_Clear@tmp^0,c
  2745   001652  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2746   001654  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2747   001656  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2748                           
  2749                           ;color.c: 80:  I2C_2_Master_Stop();
  2750   001658  EC70  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2751   00165C                     
  2752                           ;color.c: 81:  return tmp;
  2753   00165C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2754   001660  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2755   001664  0012               	return		;funcret
  2756   001666                     __end_of_color_read_Clear:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _color_read_Blue *****************
  2760 ;; Defined at:
  2761 ;;		line 42 in file "color.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  tmp             2    9[COMRAM] unsigned int 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  2    4[COMRAM] unsigned int 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;Total ram usage:        7 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 3
  2782 ;; This function calls:
  2783 ;;		_I2C_2_Master_Read
  2784 ;;		_I2C_2_Master_RepStart
  2785 ;;		_I2C_2_Master_Start
  2786 ;;		_I2C_2_Master_Stop
  2787 ;;		_I2C_2_Master_Write
  2788 ;; This function is called by:
  2789 ;;		_getRGBCval
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text18
  2794   001666                     __ptext18:
  2795                           	callstack 0
  2796   001666                     _color_read_Blue:
  2797                           	callstack 26
  2798   001666                     
  2799                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2800   001666  EC75  F00C         	call	_I2C_2_Master_Start	;wreg free
  2801                           
  2802                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2803   00166A  0E52               	movlw	82
  2804   00166C  EC65  F00C         	call	_I2C_2_Master_Write
  2805                           
  2806                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2807   001670  0EBA               	movlw	186
  2808   001672  EC65  F00C         	call	_I2C_2_Master_Write
  2809                           
  2810                           ;color.c: 48:  I2C_2_Master_RepStart();
  2811   001676  EC6B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2812                           
  2813                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2814   00167A  0E53               	movlw	83
  2815   00167C  EC65  F00C         	call	_I2C_2_Master_Write
  2816                           
  2817                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2818   001680  0E01               	movlw	1
  2819   001682  EC81  F00B         	call	_I2C_2_Master_Read
  2820   001686  6E07               	movwf	??_color_read_Blue^0,c
  2821   001688  5007               	movf	??_color_read_Blue^0,w,c
  2822   00168A  6E0A               	movwf	color_read_Blue@tmp^0,c
  2823   00168C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2824                           
  2825                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2826   00168E  0E00               	movlw	0
  2827   001690  EC81  F00B         	call	_I2C_2_Master_Read
  2828   001694  6E07               	movwf	??_color_read_Blue^0,c
  2829   001696  5007               	movf	??_color_read_Blue^0,w,c
  2830   001698  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2831   00169A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2832   00169C  500A               	movf	color_read_Blue@tmp^0,w,c
  2833   00169E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2834   0016A0  6E0A               	movwf	color_read_Blue@tmp^0,c
  2835   0016A2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2836   0016A4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2837   0016A6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2838                           
  2839                           ;color.c: 52:  I2C_2_Master_Stop();
  2840   0016A8  EC70  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2841   0016AC                     
  2842                           ;color.c: 53:  return tmp;
  2843   0016AC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2844   0016B0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2845   0016B4  0012               	return		;funcret
  2846   0016B6                     __end_of_color_read_Blue:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _I2C_2_Master_RepStart *****************
  2850 ;; Defined at:
  2851 ;;		line 33 in file "i2c.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 2
  2872 ;; This function calls:
  2873 ;;		_I2C_2_Master_Idle
  2874 ;; This function is called by:
  2875 ;;		_color_read_Red
  2876 ;;		_color_read_Blue
  2877 ;;		_color_read_Green
  2878 ;;		_color_read_Clear
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text19
  2883   0018D6                     __ptext19:
  2884                           	callstack 0
  2885   0018D6                     _I2C_2_Master_RepStart:
  2886                           	callstack 26
  2887   0018D6                     
  2888                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2889   0018D6  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2890   0018DA                     
  2891                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2892   0018DA  010E               	movlb	14	; () banked
  2893   0018DC  83DA               	bsf	218,1,b	;volatile
  2894   0018DE                     
  2895                           ; BSR set to: 14
  2896   0018DE  0012               	return		;funcret
  2897   0018E0                     __end_of_I2C_2_Master_RepStart:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _I2C_2_Master_Read *****************
  2901 ;; Defined at:
  2902 ;;		line 51 in file "i2c.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  ack             1    wreg     unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  ack             1    2[COMRAM] unsigned char 
  2907 ;;  tmp             1    3[COMRAM] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      unsigned char 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;Total ram usage:        3 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 2
  2924 ;; This function calls:
  2925 ;;		_I2C_2_Master_Idle
  2926 ;; This function is called by:
  2927 ;;		_color_read_Red
  2928 ;;		_color_read_Blue
  2929 ;;		_color_read_Green
  2930 ;;		_color_read_Clear
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text20
  2935   001702                     __ptext20:
  2936                           	callstack 0
  2937   001702                     _I2C_2_Master_Read:
  2938                           	callstack 26
  2939                           
  2940                           ; BSR set to: 14
  2941                           ;incstack = 0
  2942                           ;I2C_2_Master_Read@ack stored from wreg
  2943   001702  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2944   001704                     
  2945                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2946   001704  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2947   001708                     
  2948                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2949   001708  010E               	movlb	14	; () banked
  2950   00170A  87DA               	bsf	218,3,b	;volatile
  2951                           
  2952                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2953   00170C  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2954   001710                     
  2955                           ;i2c.c: 57:   tmp = SSP2BUF;
  2956   001710  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2957                           
  2958                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2959   001714  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2960   001718                     
  2961                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2962   001718  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2963   00171A  B4D8               	btfsc	status,2,c
  2964   00171C  EF92  F00B         	goto	u1451
  2965   001720  EF96  F00B         	goto	u1450
  2966   001724                     u1451:
  2967   001724  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2968   001726  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2969   001728  EF97  F00B         	goto	u1468
  2970   00172C                     u1450:
  2971   00172C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2972   00172E                     u1468:
  2973   00172E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2974   001730  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2975   001732  010E               	movlb	14	; () banked
  2976   001734  51DA               	movf	218,w,b	;volatile
  2977   001736  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2978   001738  0BDF               	andlw	-33
  2979   00173A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2980   00173C  6FDA               	movwf	218,b	;volatile
  2981   00173E                     
  2982                           ; BSR set to: 14
  2983                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2984   00173E  89DA               	bsf	218,4,b	;volatile
  2985   001740                     
  2986                           ; BSR set to: 14
  2987                           ;i2c.c: 61:   return tmp;
  2988   001740  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2989   001742                     
  2990                           ; BSR set to: 14
  2991   001742  0012               	return		;funcret
  2992   001744                     __end_of_I2C_2_Master_Read:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _color_click_init *****************
  2996 ;; Defined at:
  2997 ;;		line 4 in file "color.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 4
  3018 ;; This function calls:
  3019 ;;		_I2C_2_Master_Init
  3020 ;;		_color_writetoaddr
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text21
  3027   001778                     __ptext21:
  3028                           	callstack 0
  3029   001778                     _color_click_init:
  3030                           	callstack 26
  3031   001778                     
  3032                           ;color.c: 7:     I2C_2_Master_Init();
  3033   001778  ECED  F00B         	call	_I2C_2_Master_Init	;wreg free
  3034   00177C                     
  3035                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3036   00177C  0E01               	movlw	1
  3037   00177E  6E03               	movwf	color_writetoaddr@value^0,c
  3038   001780  0E00               	movlw	0
  3039   001782  EC3A  F00C         	call	_color_writetoaddr
  3040   001786                     
  3041                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3042   001786  0E3F               	movlw	63
  3043   001788  6E05               	movwf	??_color_click_init^0,c
  3044   00178A  0E55               	movlw	85
  3045   00178C                     u2097:
  3046   00178C  2EE8               	decfsz	wreg,f,c
  3047   00178E  D7FE               	bra	u2097
  3048   001790  2E05               	decfsz	??_color_click_init^0,f,c
  3049   001792  D7FC               	bra	u2097
  3050   001794  0000               	nop	
  3051   001796                     
  3052                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  3053   001796  0E03               	movlw	3
  3054   001798  6E03               	movwf	color_writetoaddr@value^0,c
  3055   00179A  0E00               	movlw	0
  3056   00179C  EC3A  F00C         	call	_color_writetoaddr
  3057   0017A0                     
  3058                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  3059   0017A0  0ED5               	movlw	213
  3060   0017A2  6E03               	movwf	color_writetoaddr@value^0,c
  3061   0017A4  0E01               	movlw	1
  3062   0017A6  EC3A  F00C         	call	_color_writetoaddr
  3063   0017AA  0012               	return		;funcret
  3064   0017AC                     __end_of_color_click_init:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function _color_writetoaddr *****************
  3068 ;; Defined at:
  3069 ;;		line 20 in file "color.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  address         1    wreg     unsigned char 
  3072 ;;  value           1    2[COMRAM] unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  address         1    3[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3084 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;Total ram usage:        2 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 3
  3091 ;; This function calls:
  3092 ;;		_I2C_2_Master_Start
  3093 ;;		_I2C_2_Master_Stop
  3094 ;;		_I2C_2_Master_Write
  3095 ;; This function is called by:
  3096 ;;		_color_click_init
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text22
  3101   001874                     __ptext22:
  3102                           	callstack 0
  3103   001874                     _color_writetoaddr:
  3104                           	callstack 26
  3105                           
  3106                           ;incstack = 0
  3107                           ;color_writetoaddr@address stored from wreg
  3108   001874  6E04               	movwf	color_writetoaddr@address^0,c
  3109   001876                     
  3110                           ;color.c: 21:     I2C_2_Master_Start();
  3111   001876  EC75  F00C         	call	_I2C_2_Master_Start	;wreg free
  3112                           
  3113                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3114   00187A  0E52               	movlw	82
  3115   00187C  EC65  F00C         	call	_I2C_2_Master_Write
  3116                           
  3117                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3118   001880  5004               	movf	color_writetoaddr@address^0,w,c
  3119   001882  0980               	iorlw	128
  3120   001884  EC65  F00C         	call	_I2C_2_Master_Write
  3121                           
  3122                           ;color.c: 24:     I2C_2_Master_Write(value);
  3123   001888  5003               	movf	color_writetoaddr@value^0,w,c
  3124   00188A  EC65  F00C         	call	_I2C_2_Master_Write
  3125                           
  3126                           ;color.c: 25:     I2C_2_Master_Stop();
  3127   00188E  EC70  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3128   001892  0012               	return		;funcret
  3129   001894                     __end_of_color_writetoaddr:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _I2C_2_Master_Write *****************
  3133 ;; Defined at:
  3134 ;;		line 45 in file "i2c.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  data_byte       1    wreg     unsigned char 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  data_byte       1    1[COMRAM] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;Total ram usage:        1 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 2
  3155 ;; This function calls:
  3156 ;;		_I2C_2_Master_Idle
  3157 ;; This function is called by:
  3158 ;;		_color_writetoaddr
  3159 ;;		_color_read_Red
  3160 ;;		_color_read_Blue
  3161 ;;		_color_read_Green
  3162 ;;		_color_read_Clear
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text23
  3167   0018CA                     __ptext23:
  3168                           	callstack 0
  3169   0018CA                     _I2C_2_Master_Write:
  3170                           	callstack 26
  3171                           
  3172                           ;incstack = 0
  3173                           ;I2C_2_Master_Write@data_byte stored from wreg
  3174   0018CA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3175   0018CC                     
  3176                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3177   0018CC  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3178   0018D0                     
  3179                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3180   0018D0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3181   0018D4  0012               	return		;funcret
  3182   0018D6                     __end_of_I2C_2_Master_Write:
  3183                           	callstack 0
  3184                           
  3185 ;; *************** function _I2C_2_Master_Stop *****************
  3186 ;; Defined at:
  3187 ;;		line 39 in file "i2c.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 2
  3208 ;; This function calls:
  3209 ;;		_I2C_2_Master_Idle
  3210 ;; This function is called by:
  3211 ;;		_color_writetoaddr
  3212 ;;		_color_read_Red
  3213 ;;		_color_read_Blue
  3214 ;;		_color_read_Green
  3215 ;;		_color_read_Clear
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text24
  3220   0018E0                     __ptext24:
  3221                           	callstack 0
  3222   0018E0                     _I2C_2_Master_Stop:
  3223                           	callstack 26
  3224   0018E0                     
  3225                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3226   0018E0  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3227   0018E4                     
  3228                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3229   0018E4  010E               	movlb	14	; () banked
  3230   0018E6  85DA               	bsf	218,2,b	;volatile
  3231   0018E8                     
  3232                           ; BSR set to: 14
  3233   0018E8  0012               	return		;funcret
  3234   0018EA                     __end_of_I2C_2_Master_Stop:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _I2C_2_Master_Start *****************
  3238 ;; Defined at:
  3239 ;;		line 27 in file "i2c.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 2
  3260 ;; This function calls:
  3261 ;;		_I2C_2_Master_Idle
  3262 ;; This function is called by:
  3263 ;;		_color_writetoaddr
  3264 ;;		_color_read_Red
  3265 ;;		_color_read_Blue
  3266 ;;		_color_read_Green
  3267 ;;		_color_read_Clear
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text25
  3272   0018EA                     __ptext25:
  3273                           	callstack 0
  3274   0018EA                     _I2C_2_Master_Start:
  3275                           	callstack 26
  3276   0018EA                     
  3277                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3278   0018EA  EC02  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3279   0018EE                     
  3280                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3281   0018EE  010E               	movlb	14	; () banked
  3282   0018F0  81DA               	bsf	218,0,b	;volatile
  3283   0018F2                     
  3284                           ; BSR set to: 14
  3285   0018F2  0012               	return		;funcret
  3286   0018F4                     __end_of_I2C_2_Master_Start:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _I2C_2_Master_Idle *****************
  3290 ;; Defined at:
  3291 ;;		line 22 in file "i2c.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_I2C_2_Master_Start
  3316 ;;		_I2C_2_Master_RepStart
  3317 ;;		_I2C_2_Master_Stop
  3318 ;;		_I2C_2_Master_Write
  3319 ;;		_I2C_2_Master_Read
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text26
  3324   001804                     __ptext26:
  3325                           	callstack 0
  3326   001804                     _I2C_2_Master_Idle:
  3327                           	callstack 26
  3328   001804                     l250:
  3329   001804  010E               	movlb	14	; () banked
  3330   001806  B5D8               	btfsc	216,2,b	;volatile
  3331   001808  EF08  F00C         	goto	u1331
  3332   00180C  EF0A  F00C         	goto	u1330
  3333   001810                     u1331:
  3334   001810  EF02  F00C         	goto	l250
  3335   001814                     u1330:
  3336   001814                     
  3337                           ; BSR set to: 14
  3338   001814  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3339   001818  0E1F               	movlw	31
  3340   00181A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3341   00181C  A4D8               	btfss	status,2,c
  3342   00181E  EF13  F00C         	goto	u1341
  3343   001822  EF15  F00C         	goto	u1340
  3344   001826                     u1341:
  3345   001826  EF02  F00C         	goto	l250
  3346   00182A                     u1340:
  3347   00182A                     
  3348                           ; BSR set to: 14
  3349   00182A  0012               	return		;funcret
  3350   00182C                     __end_of_I2C_2_Master_Idle:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _I2C_2_Master_Init *****************
  3354 ;; Defined at:
  3355 ;;		line 4 in file "i2c.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_color_click_init
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text27
  3384   0017DA                     __ptext27:
  3385                           	callstack 0
  3386   0017DA                     _I2C_2_Master_Init:
  3387                           	callstack 28
  3388   0017DA                     
  3389                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3390   0017DA  010E               	movlb	14	; () banked
  3391   0017DC  51D9               	movf	217,w,b	;volatile
  3392   0017DE  0BF0               	andlw	-16
  3393   0017E0  0908               	iorlw	8
  3394   0017E2  6FD9               	movwf	217,b	;volatile
  3395   0017E4                     
  3396                           ; BSR set to: 14
  3397                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3398   0017E4  8BD9               	bsf	217,5,b	;volatile
  3399                           
  3400                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3401   0017E6  0E9F               	movlw	159
  3402   0017E8  6FD6               	movwf	214,b	;volatile
  3403   0017EA                     
  3404                           ; BSR set to: 14
  3405                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3406   0017EA  8A84               	bsf	132,5,c	;volatile
  3407   0017EC                     
  3408                           ; BSR set to: 14
  3409                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3410   0017EC  8C84               	bsf	132,6,c	;volatile
  3411   0017EE                     
  3412                           ; BSR set to: 14
  3413                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3414   0017EE  9BA7               	bcf	167,5,b	;volatile
  3415   0017F0                     
  3416                           ; BSR set to: 14
  3417                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3418   0017F0  9DA7               	bcf	167,6,b	;volatile
  3419                           
  3420                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3421   0017F2  0E1D               	movlw	29
  3422   0017F4  6F1D               	movwf	29,b	;volatile
  3423                           
  3424                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3425   0017F6  0E1E               	movlw	30
  3426   0017F8  6F1C               	movwf	28,b	;volatile
  3427                           
  3428                           ;i2c.c: 18:   RD5PPS=0x1C;
  3429   0017FA  0E1C               	movlw	28
  3430   0017FC  6F6F               	movwf	111,b	;volatile
  3431                           
  3432                           ;i2c.c: 19:   RD6PPS=0x1B;
  3433   0017FE  0E1B               	movlw	27
  3434   001800  6F70               	movwf	112,b	;volatile
  3435   001802                     
  3436                           ; BSR set to: 14
  3437   001802  0012               	return		;funcret
  3438   001804                     __end_of_I2C_2_Master_Init:
  3439                           	callstack 0
  3440                           
  3441 ;; *************** function _buggy_lights_init *****************
  3442 ;; Defined at:
  3443 ;;		line 4 in file "buggy_lights.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		None
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text28
  3472   0017AC                     __ptext28:
  3473                           	callstack 0
  3474   0017AC                     _buggy_lights_init:
  3475                           	callstack 29
  3476   0017AC                     
  3477                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3478   0017AC  9884               	bcf	132,4,c	;volatile
  3479                           
  3480                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3481   0017AE  9288               	bcf	136,1,c	;volatile
  3482                           
  3483                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3484   0017B0  9684               	bcf	132,3,c	;volatile
  3485                           
  3486                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3487   0017B2  9086               	bcf	134,0,c	;volatile
  3488                           
  3489                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3490   0017B4  9088               	bcf	136,0,c	;volatile
  3491                           
  3492                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  3493   0017B6  987C               	bcf	124,4,c	;volatile
  3494                           
  3495                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  3496   0017B8  9280               	bcf	128,1,c	;volatile
  3497                           
  3498                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  3499   0017BA  967C               	bcf	124,3,c	;volatile
  3500                           
  3501                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  3502   0017BC  907E               	bcf	126,0,c	;volatile
  3503                           
  3504                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  3505   0017BE  9080               	bcf	128,0,c	;volatile
  3506                           
  3507                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  3508   0017C0  9287               	bcf	135,1,c	;volatile
  3509                           
  3510                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  3511   0017C2  9881               	bcf	129,4,c	;volatile
  3512                           
  3513                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  3514   0017C4  9E86               	bcf	134,7,c	;volatile
  3515                           
  3516                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  3517   0017C6  927F               	bcf	127,1,c	;volatile
  3518                           
  3519                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  3520   0017C8  9879               	bcf	121,4,c	;volatile
  3521                           
  3522                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  3523   0017CA  9E7E               	bcf	126,7,c	;volatile
  3524                           
  3525                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  3526   0017CC  9087               	bcf	135,0,c	;volatile
  3527                           
  3528                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  3529   0017CE  9E85               	bcf	133,7,c	;volatile
  3530                           
  3531                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  3532   0017D0  9681               	bcf	129,3,c	;volatile
  3533                           
  3534                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  3535   0017D2  907F               	bcf	127,0,c	;volatile
  3536                           
  3537                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  3538   0017D4  9E7D               	bcf	125,7,c	;volatile
  3539                           
  3540                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  3541   0017D6  9679               	bcf	121,3,c	;volatile
  3542   0017D8  0012               	return		;funcret
  3543   0017DA                     __end_of_buggy_lights_init:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function _Timer0_init *****************
  3547 ;; Defined at:
  3548 ;;		line 7 in file "timers.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 2
  3569 ;; This function calls:
  3570 ;;		_reset_timer
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text29
  3577   001850                     __ptext29:
  3578                           	callstack 0
  3579   001850                     _Timer0_init:
  3580                           	callstack 28
  3581   001850                     
  3582                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3583   001850  50D6               	movf	214,w,c	;volatile
  3584   001852  0B1F               	andlw	-225
  3585   001854  0940               	iorlw	64
  3586   001856  6ED6               	movwf	214,c	;volatile
  3587   001858                     
  3588                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3589   001858  88D6               	bsf	214,4,c	;volatile
  3590   00185A                     
  3591                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3592   00185A  88D5               	bsf	213,4,c	;volatile
  3593                           
  3594                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3595   00185C  50D6               	movf	214,w,c	;volatile
  3596   00185E  0BF0               	andlw	-16
  3597   001860  090E               	iorlw	14
  3598   001862  6ED6               	movwf	214,c	;volatile
  3599   001864                     
  3600                           ;timers.c: 18:     reset_timer();
  3601   001864  EC7A  F00C         	call	_reset_timer	;wreg free
  3602   001868                     
  3603                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  3604   001868  8ED5               	bsf	213,7,c	;volatile
  3605   00186A                     
  3606                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  3607   00186A  010E               	movlb	14	; () banked
  3608   00186C  8B29               	bsf	41,5,b	;volatile
  3609   00186E                     
  3610                           ; BSR set to: 14
  3611                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  3612   00186E  8CF2               	bsf	242,6,c	;volatile
  3613   001870                     
  3614                           ; BSR set to: 14
  3615                           ;timers.c: 23:     INTCONbits.GIE = 1;
  3616   001870  8EF2               	bsf	242,7,c	;volatile
  3617   001872                     
  3618                           ; BSR set to: 14
  3619   001872  0012               	return		;funcret
  3620   001874                     __end_of_Timer0_init:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _reset_timer *****************
  3624 ;; Defined at:
  3625 ;;		line 26 in file "timers.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;Total ram usage:        0 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_Timer0_init
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text30
  3654   0018F4                     __ptext30:
  3655                           	callstack 0
  3656   0018F4                     _reset_timer:
  3657                           	callstack 28
  3658   0018F4                     
  3659                           ;timers.c: 31:     TMR0H = 0;
  3660   0018F4  0E00               	movlw	0
  3661   0018F6  6ED4               	movwf	212,c	;volatile
  3662                           
  3663                           ;timers.c: 32:     TMR0L = 0;
  3664   0018F8  0E00               	movlw	0
  3665   0018FA  6ED3               	movwf	211,c	;volatile
  3666   0018FC  0012               	return		;funcret
  3667   0018FE                     __end_of_reset_timer:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _ISR *****************
  3671 ;; Defined at:
  3672 ;;		line 84 in file "timers.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		Interrupt level 2
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	intcode
  3700   000008                     __pintcode:
  3701                           	callstack 0
  3702   000008                     _ISR:
  3703                           	callstack 24
  3704                           
  3705                           ;incstack = 0
  3706   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3707   00000A                     
  3708                           ;timers.c: 87:     if (PIR0bits.TMR0IF) {
  3709   00000A  010E               	movlb	14	; () banked
  3710   00000C  AB33               	btfss	51,5,b	;volatile
  3711   00000E  EF0B  F000         	goto	i2u96_41
  3712   000012  EF0D  F000         	goto	i2u96_40
  3713   000016                     i2u96_41:
  3714   000016  EF18  F000         	goto	i2l671
  3715   00001A                     i2u96_40:
  3716   00001A                     
  3717                           ; BSR set to: 14
  3718                           ;timers.c: 88:         if (returning) {
  3719   00001A  5055               	movf	_returning^0,w,c
  3720   00001C  B4D8               	btfsc	status,2,c
  3721   00001E  EF13  F000         	goto	i2u97_41
  3722   000022  EF15  F000         	goto	i2u97_40
  3723   000026                     i2u97_41:
  3724   000026  EF17  F000         	goto	i2l670
  3725   00002A                     i2u97_40:
  3726   00002A                     
  3727                           ; BSR set to: 14
  3728                           ;timers.c: 91:             return_flag = 1;
  3729   00002A  0E01               	movlw	1
  3730   00002C  6E54               	movwf	_return_flag^0,c
  3731   00002E                     i2l670:
  3732                           
  3733                           ; BSR set to: 14
  3734                           ;timers.c: 96:         PIR0bits.TMR0IF = 0;
  3735   00002E  9B33               	bcf	51,5,b	;volatile
  3736   000030                     i2l671:
  3737                           
  3738                           ; BSR set to: 14
  3739   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3740   000032  0011               	retfie		f
  3741   000034                     __end_of_ISR:
  3742                           	callstack 0
  3743                           
  3744                           	psect	rparam
  3745   000000                     
  3746                           	psect	temp
  3747   00005F                     btemp:
  3748                           	callstack 0
  3749   00005F                     	ds	1
  3750   000000                     int$flags	set	btemp
  3751   000000                     wtemp8	set	btemp+1
  3752   000000                     ttemp5	set	btemp+1
  3753   000000                     ttemp6	set	btemp+4
  3754   000000                     ttemp7	set	btemp+8
  3755                           
  3756                           	psect	idloc
  3757                           
  3758                           ;Config register IDLOC0 @ 0x200000
  3759                           ;	unspecified, using default values
  3760   200000                     	org	2097152
  3761   200000  FFFF               	dw	65535
  3762                           
  3763                           ;Config register IDLOC1 @ 0x200002
  3764                           ;	unspecified, using default values
  3765   200002                     	org	2097154
  3766   200002  FFFF               	dw	65535
  3767                           
  3768                           ;Config register IDLOC2 @ 0x200004
  3769                           ;	unspecified, using default values
  3770   200004                     	org	2097156
  3771   200004  FFFF               	dw	65535
  3772                           
  3773                           ;Config register IDLOC3 @ 0x200006
  3774                           ;	unspecified, using default values
  3775   200006                     	org	2097158
  3776   200006  FFFF               	dw	65535
  3777                           
  3778                           ;Config register IDLOC4 @ 0x200008
  3779                           ;	unspecified, using default values
  3780   200008                     	org	2097160
  3781   200008  FFFF               	dw	65535
  3782                           
  3783                           ;Config register IDLOC5 @ 0x20000A
  3784                           ;	unspecified, using default values
  3785   20000A                     	org	2097162
  3786   20000A  FFFF               	dw	65535
  3787                           
  3788                           ;Config register IDLOC6 @ 0x20000C
  3789                           ;	unspecified, using default values
  3790   20000C                     	org	2097164
  3791   20000C  FFFF               	dw	65535
  3792                           
  3793                           ;Config register IDLOC7 @ 0x20000E
  3794                           ;	unspecified, using default values
  3795   20000E                     	org	2097166
  3796   20000E  FFFF               	dw	65535
  3797                           
  3798                           	psect	config
  3799                           
  3800                           ;Config register CONFIG1L @ 0x300000
  3801                           ;	External Oscillator mode Selection bits
  3802                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3803                           ;	Power-up default value for COSC bits
  3804                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3805   300000                     	org	3145728
  3806   300000  AA                 	db	170
  3807                           
  3808                           ;Config register CONFIG1H @ 0x300001
  3809                           ;	unspecified, using default values
  3810                           ;	Clock Out Enable bit
  3811                           ;	CLKOUTEN = 0x1, unprogrammed default
  3812                           ;	Clock Switch Enable bit
  3813                           ;	CSWEN = 0x1, unprogrammed default
  3814                           ;	Fail-Safe Clock Monitor Enable bit
  3815                           ;	FCMEN = 0x1, unprogrammed default
  3816   300001                     	org	3145729
  3817   300001  FF                 	db	255
  3818                           
  3819                           ;Config register CONFIG2L @ 0x300002
  3820                           ;	unspecified, using default values
  3821                           ;	Master Clear Enable bit
  3822                           ;	MCLRE = 0x1, unprogrammed default
  3823                           ;	Power-up Timer Enable bit
  3824                           ;	PWRTE = 0x1, unprogrammed default
  3825                           ;	Low-power BOR enable bit
  3826                           ;	LPBOREN = 0x1, unprogrammed default
  3827                           ;	Brown-out Reset Enable bits
  3828                           ;	BOREN = 0x3, unprogrammed default
  3829   300002                     	org	3145730
  3830   300002  FF                 	db	255
  3831                           
  3832                           ;Config register CONFIG2H @ 0x300003
  3833                           ;	unspecified, using default values
  3834                           ;	Brown Out Reset Voltage selection bits
  3835                           ;	BORV = 0x3, unprogrammed default
  3836                           ;	ZCD Disable bit
  3837                           ;	ZCD = 0x1, unprogrammed default
  3838                           ;	PPSLOCK bit One-Way Set Enable bit
  3839                           ;	PPS1WAY = 0x1, unprogrammed default
  3840                           ;	Stack Full/Underflow Reset Enable bit
  3841                           ;	STVREN = 0x1, unprogrammed default
  3842                           ;	Debugger Enable bit
  3843                           ;	DEBUG = 0x1, unprogrammed default
  3844                           ;	Extended Instruction Set Enable bit
  3845                           ;	XINST = 0x1, unprogrammed default
  3846   300003                     	org	3145731
  3847   300003  FF                 	db	255
  3848                           
  3849                           ;Config register CONFIG3L @ 0x300004
  3850                           ;	WDT Period Select bits
  3851                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3852                           ;	WDT operating mode
  3853                           ;	WDTE = OFF, WDT Disabled
  3854   300004                     	org	3145732
  3855   300004  9F                 	db	159
  3856                           
  3857                           ;Config register CONFIG3H @ 0x300005
  3858                           ;	unspecified, using default values
  3859                           ;	WDT Window Select bits
  3860                           ;	WDTCWS = 0x7, unprogrammed default
  3861                           ;	WDT input clock selector
  3862                           ;	WDTCCS = 0x7, unprogrammed default
  3863   300005                     	org	3145733
  3864   300005  FF                 	db	255
  3865                           
  3866                           ;Config register CONFIG4L @ 0x300006
  3867                           ;	unspecified, using default values
  3868                           ;	Write Protection Block 0
  3869                           ;	WRT0 = 0x1, unprogrammed default
  3870                           ;	Write Protection Block 1
  3871                           ;	WRT1 = 0x1, unprogrammed default
  3872                           ;	Write Protection Block 2
  3873                           ;	WRT2 = 0x1, unprogrammed default
  3874                           ;	Write Protection Block 3
  3875                           ;	WRT3 = 0x1, unprogrammed default
  3876                           ;	Write Protection Block 3
  3877                           ;	WRT4 = 0x1, unprogrammed default
  3878                           ;	Write Protection Block 3
  3879                           ;	WRT5 = 0x1, unprogrammed default
  3880                           ;	Write Protection Block 3
  3881                           ;	WRT6 = 0x1, unprogrammed default
  3882                           ;	Write Protection Block 3
  3883                           ;	WRT7 = 0x1, unprogrammed default
  3884   300006                     	org	3145734
  3885   300006  FF                 	db	255
  3886                           
  3887                           ;Config register CONFIG4H @ 0x300007
  3888                           ;	unspecified, using default values
  3889                           ;	Configuration Register Write Protection bit
  3890                           ;	WRTC = 0x1, unprogrammed default
  3891                           ;	Boot Block Write Protection bit
  3892                           ;	WRTB = 0x1, unprogrammed default
  3893                           ;	Data EEPROM Write Protection bit
  3894                           ;	WRTD = 0x1, unprogrammed default
  3895                           ;	Scanner Enable bit
  3896                           ;	SCANE = 0x1, unprogrammed default
  3897                           ;	Low Voltage Programming Enable bit
  3898                           ;	LVP = 0x1, unprogrammed default
  3899   300007                     	org	3145735
  3900   300007  FF                 	db	255
  3901                           
  3902                           ;Config register CONFIG5L @ 0x300008
  3903                           ;	unspecified, using default values
  3904                           ;	UserNVM Program Memory Code Protection bit
  3905                           ;	CP = 0x1, unprogrammed default
  3906                           ;	DataNVM Memory Code Protection bit
  3907                           ;	CPD = 0x1, unprogrammed default
  3908   300008                     	org	3145736
  3909   300008  FF                 	db	255
  3910                           
  3911                           ;Config register CONFIG5H @ 0x300009
  3912                           ;	unspecified, using default values
  3913   300009                     	org	3145737
  3914   300009  FF                 	db	255
  3915                           
  3916                           ;Config register CONFIG6L @ 0x30000A
  3917                           ;	unspecified, using default values
  3918                           ;	Table Read Protection Block 0
  3919                           ;	EBTR0 = 0x1, unprogrammed default
  3920                           ;	Table Read Protection Block 1
  3921                           ;	EBTR1 = 0x1, unprogrammed default
  3922                           ;	Table Read Protection Block 2
  3923                           ;	EBTR2 = 0x1, unprogrammed default
  3924                           ;	Table Read Protection Block 3
  3925                           ;	EBTR3 = 0x1, unprogrammed default
  3926                           ;	Table Read Protection Block 4
  3927                           ;	EBTR4 = 0x1, unprogrammed default
  3928                           ;	Table Read Protection Block 5
  3929                           ;	EBTR5 = 0x1, unprogrammed default
  3930                           ;	Table Read Protection Block 6
  3931                           ;	EBTR6 = 0x1, unprogrammed default
  3932                           ;	Table Read Protection Block 7
  3933                           ;	EBTR7 = 0x1, unprogrammed default
  3934   30000A                     	org	3145738
  3935   30000A  FF                 	db	255
  3936                           
  3937                           ;Config register CONFIG6H @ 0x30000B
  3938                           ;	unspecified, using default values
  3939                           ;	Boot Block Table Read Protection bit
  3940                           ;	EBTRB = 0x1, unprogrammed default
  3941   30000B                     	org	3145739
  3942   30000B  FF                 	db	255
  3943                           tosu	equ	0xFFF
  3944                           tosh	equ	0xFFE
  3945                           tosl	equ	0xFFD
  3946                           stkptr	equ	0xFFC
  3947                           pclatu	equ	0xFFB
  3948                           pclath	equ	0xFFA
  3949                           pcl	equ	0xFF9
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           prodh	equ	0xFF4
  3955                           prodl	equ	0xFF3
  3956                           indf0	equ	0xFEF
  3957                           postinc0	equ	0xFEE
  3958                           postdec0	equ	0xFED
  3959                           preinc0	equ	0xFEC
  3960                           plusw0	equ	0xFEB
  3961                           fsr0h	equ	0xFEA
  3962                           fsr0l	equ	0xFE9
  3963                           wreg	equ	0xFE8
  3964                           indf1	equ	0xFE7
  3965                           postinc1	equ	0xFE6
  3966                           postdec1	equ	0xFE5
  3967                           preinc1	equ	0xFE4
  3968                           plusw1	equ	0xFE3
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           bsr	equ	0xFE0
  3972                           indf2	equ	0xFDF
  3973                           postinc2	equ	0xFDE
  3974                           postdec2	equ	0xFDD
  3975                           preinc2	equ	0xFDC
  3976                           plusw2	equ	0xFDB
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        41
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      94
    BANK0           160     41     144
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2640$buffer	PTR unsigned char  size(2) Largest target is 0

    S2640$source	PTR const unsigned char  size(2) Largest target is 0

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sendRGBCvalSerial4

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5590
                                             54 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                 _sendRGBCvalSerial4
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  42    41      1    4217
                                             53 COMRAM     1     0      1
                                              0 BANK0     41    41      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    3632
                                             27 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     616
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendRGBCvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14A      61        0.0%
DATA                 0      0     14A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 06 11:58:59 2024

                 _turn180Delay 00D0                 _color_read_Red 1576                _color_read_Blue 1666  
              _trail_timer_low 008F                             l27 17D8                             l61 17AA  
                           l70 16B4                             l64 1892                             l73 1614  
                           l67 15C4                             l76 1664                             l79 1574  
                 ___awdiv@sign 0006               _trail_timer_high 00DC               _color_read_Clear 1616  
             _color_read_Green 15C6                            l152 139A                            l250 1804  
                          l403 18B0                            l412 18B4                            l253 182A  
                          l421 146A                            l262 18E8                            l247 1802  
                          l415 18C8                            l256 18F2                            l432 14C8  
                          l265 18D4                            l259 18DE                            l268 1742  
                          l644 1872                            l647 18FC                            l905 11A0  
                          l918 130A                            _ISR 0008                            _abs 1744  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00CC  
                         ?_ISR 0001                           ?_abs 0007                           l1400 151E  
                         l2300 1174                           l1404 175E                           l2302 117A  
                         l1430 1904                           l1407 1776                           l2304 1180  
                         l2320 127A                           l2312 125C                           l1352 1700  
                         l2306 1190                           l2330 12B2                           l2322 1288  
                         l2314 1260                           l1419 125A                           l2308 1198  
                         l2332 12C0                           l2340 12EA                           l2324 1290  
                         l2316 126E                           l2500 0FB0                           l2270 10E2  
                         l2342 12FA                           l2334 12D6                           l2326 12A2  
                         l2318 1276                           l2350 11B2                           l2510 1004  
                         l2502 0FCE                           l2600 17DA                           l2520 18CC  
                         l2280 1112                           l2272 10F0                           l2344 1302  
                         l2336 12DE                           l2328 12AA                           l2352 11C2  
                         l2512 100C                           l2504 0FD6                           l1393 0FC2  
                         l2610 17F0                           l2602 17E4                           l2522 18D0  
                         l2530 18DA                           l2290 1140                           l2282 1116  
                         l2274 10F8                           l2338 12E4                           l2362 1744  
                         l2354 11CC                           l1394 1014                           l2604 17EA  
                         l2452 1804                           l2516 18EA                           l2524 18E0  
                         l2612 1876                           l2540 173E                           l2532 1704  
                         l2620 1666                           l2292 114E                           l2284 111E  
                         l2276 10FC                           l2268 10DE                           l2364 1752  
                         l2356 11E8                           l2348 11A2                           l2460 0E42  
                         l2508 0FE2                           l2606 17EC                           l2454 1814  
                         l2518 18EE                           l2526 18E4                           l2542 1740  
                         l2534 1708                           l2622 16AC                           l2614 1576  
                         l2294 1154                           l2286 1130                           l2278 110A  
                         l2358 121A                           l2470 0E86                           l2462 0E4A  
                         l1399 1516                           l2608 17EE                           l2536 1710  
                         l2528 18D6                           l2632 1616                           l2616 15BC  
                         l2640 140E                           l2296 116A                           l2288 1138  
                         l2480 0F14                           l2472 0EA6                           l2464 0E58  
                         l2456 0E14                           l2538 1718                           l2634 165C  
                         l2626 15C6                           l2642 1434                           l2298 1172  
                         l2490 0F66                           l2482 0F30                           l2474 0EBE  
                         l2466 0E5C                           l2458 0E1C                           l2650 16CA  
                         l2628 160C                           l2644 1438                           l2492 0F76  
                         l2484 0F34                           l2476 0EC8                           l2468 0E66  
                         l2652 16D2                           l2900 1022                           l2830 18AC  
                         l2822 1894                           l2590 18C4                           l2638 140A  
                         l2494 0F88                           l2486 0F46                           l2478 0EE0  
                         l2654 16EA                           l2646 16B6                           l2910 1056  
                         l2902 102A                           l2760 18F4                           l2840 1864  
                         l2832 18AE                           l2824 189E                           l2496 0F90  
                         l2488 0F56                           l2592 14CA                           l2656 16F8  
                         l2648 16C2                           l2920 107A                           l2912 105E  
                         l2904 1032                           l2842 1868                           l2834 1850  
                         l2762 17AC                           l2770 1796                           l2826 18A0  
                         l2498 0FAE                           l2594 14CE                           l2850 146C  
                         l2930 1084                           l2922 107C                           l2914 106E  
                         l2906 1046                           l2844 186A                           l2836 1858  
                         l2772 17A0                           l2764 1778                           l2780 1342  
                         l2828 18AA                           l2588 18B4                           l2596 14DC  
                         l2852 14BE                           l2940 109C                           l2932 1086  
                         l2924 107E                           l2916 1072                           l2908 104E  
                         l2846 186E                           l2838 185A                           l2766 177C  
                         l2774 1520                           l2790 1380                           l2782 1346  
                         l2598 14F6                           l2942 10BE                           l2934 108A  
                         l2926 1080                           l2918 1076                           l2848 1870  
                         l2768 1786                           l2792 1382                           l2784 136A  
                         l2776 130C                           l2936 108C                           l2928 1082  
                         l2794 138C                           l2786 1374                           l2778 131C  
                         l2938 1094                           l2796 138E                           l2788 1376  
                         l2798 1398                           l2898 1016                           STR_2 0E0F  
                         STR_5 0E01                           u1000 10F0                           u1001 10EC  
                         u1010 110A                           u1011 1106                           u1020 1130  
                         u1100 12D6                           u1021 112C                           u1101 12D2  
                         u1030 114E                           u1110 12FA                           u1031 114A  
                         u1111 12F6                           u1040 116A                           u1120 11B2  
                         u1041 1166                           u1121 11AE                           u1050 1190  
                         u1130 11C2                           u1051 118C                           u1131 11BE  
                         u1060 126E                           u1140 11E8                           u1061 126A  
                         u1141 11E4                           u1070 1288                           u1150 121A  
                         u1071 1284                           u1151 1216                           u1080 12A2  
                         u1160 1752                           u1400 0F46                           u1081 129E  
                         u1161 174E                           u1401 0F42                           u1330 1814  
                         u1090 12C0                           u1410 0F56                           u1331 1810  
                         u1091 12BC                           u1411 0F52                           u1340 182A  
                         u1500 145A                           u1420 0F66                           u1341 1826  
                         u1421 0F62                           u1510 146A                           u1430 0F76  
                         u1350 0E42                           u1511 1466                           u1431 0F72  
                         u1351 0E3E                           u1440 0FC2                           u1360 0E86  
                 _BAUD4CONbits 0EE9                           u1441 0FBE                           u1361 0E82  
                         u1450 172C                           u1370 0EA6                           u1451 1724  
                         u1507 1450                           u1371 0EA2                           u1380 0EDC  
                         u1381 0ED6                           u1470 18C4                           u1390 0EDE  
                         u1471 18C0                           u2087 10C8                           u1480 1516  
                         u2097 178C                           u1481 1512                           u1490 1430  
                         u1570 10AE                           _T2PR 0FBC                           u1571 10A6  
                         u1468 172E                           u1497 1426                           u1588 10B0  
                         abs@a 0007                           _dbuf 013C                           _main 1016  
                         _prec 0078                           _nout 0074                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F             _sendRGBCvalSerial4 146C  
                         start 0034         __end_of_color_read_Red 15C6                   ___param_bank 0000  
                        ??_ISR 0001            ?_sendRGBCvalSerial4 0036                          ??_abs 0009  
                        ?_main 0001             _timer_high_pointer 005C                __end_of___awdiv 11A2  
              __end_of___awmod 130C                ___awdiv@divisor 0003                          i2l670 002E  
                        i2l671 0030                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010  
                 vfpfcnvrt@fmt 000C                          _TMR0H 0FD4                          _TMR0L 0FD3  
      __end_of_sendCharSerial4 18CA     __end_of_I2C_2_Master_Start 18F4     __end_of_I2C_2_Master_Write 18D6  
                  _turningGear 00DA                          _flags 007A           ??_sendRGBCvalSerial4 0037  
                        _fputc 11A2                          _width 0076                          _putch 1904  
            _turnRight135Delay 00D2                          tablat 0FF5                _turnLeft90Delay 00D8  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 0FD8                          wtemp8 0060                __end_of_sprintf 1702  
      __end_of_color_read_Blue 16B6          _I2C_2_Master_RepStart 18D6                ?_color_read_Red 0005  
              __initialization 139C                   __end_of_main 10DE                         ??_main 0037  
                __activetblptr 0003                         ?_fputc 0001                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l2250 002A                         i2l2246 000A                         i2l2248 001A  
                       _RG6PPS 0E88                  vfpfcnvrt@done 000F       __end_of_color_click_init 17AC  
                       _RX4PPS 0E15                         _TX4REG 0EE4               _turnLeft135Delay 00D4  
                ??_Timer0_init 0001                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001B                      ??___awdiv 0005                      ??___awmod 0005  
                       clear_0 13E2                         clear_1 13EE                         clear_2 13FA  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                         fputc@c 0001                   __pdataCOMRAM 005A  
            _timer_low_pointer 005B                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1520              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0027              _buggy_lights_init 17AC                     __accesstop 0060  
      __end_of__initialization 1400       __end_of_color_read_Clear 1666       __end_of_color_read_Green 1616  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 182C  
          ??_buggy_lights_init 0001                  __end_of_fputc 125C                  __end_of_putch 1906  
          __end_of_Timer0_init 1874                        ??_fputc 0004      __end_of_buggy_lights_init 17DA  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 1520              _color_writetoaddr 1874                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        i2u96_40 001A                        i2u96_41 0016  
                      i2u97_40 002A                        i2u97_41 0026                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 1894             _I2C_2_Master_Start 18EA                     _initUSART4 1894  
           _I2C_2_Master_Write 18CA                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 1850        sendStringSerial4@string 0002  
                      ___awdiv 10DE                        ___awmod 125C            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0018                   __psmallconst 0E00  
                      __pcinit 139C                        __ramtop 0E00                        __ptext0 1016  
                      __ptext1 146C                        __ptext2 16B6                        __ptext3 14CA  
                      __ptext4 0E14                        __ptext5 11A2                        __ptext6 1904  
                      __ptext7 1744                        __ptext8 125C                        __ptext9 10DE  
                    _T2CONbits 0FBD               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 0059                        _sprintf 16B6           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 1400                    ?_getRGBCval 000C  
                      fputc@fp 0003              ?_color_click_init 0001             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 1016                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0013                     ??_vfprintf 001B                _initDCmotorsPWM 130C  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0060  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 0041                     main@motorR 004A  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0012                    vfpfcnvrt@fp 000B                  __pidataCOMRAM 18FE  
    sendRGBCvalSerial4@col_val 0036            color_read_Clear@tmp 000A            start_initialization 139C  
                  __end_of_ISR 0034                    __end_of_abs 1778                  _TxBufWriteCnt 0057  
             _turnRight90Delay 00D6      sendRGBCvalSerial4@tempStr 00A3            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 139C                    vfprintf@fmt 0019                    __pdataBANK0 00CC  
                  __pbssCOMRAM 0053                  __pcstackBANK0 00A3                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 1804              _I2C_2_Master_Init 17DA              _I2C_2_Master_Read 1702  
            _I2C_2_Master_Stop 18E0                   _RxBufReadCnt 0058             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _headbuttDelay 00CE       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C  
                    _rampDelay 005E                   ??_getRGBCval 000D              _sendStringSerial4 140A  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                  ??_reset_timer 0001  
                     _PIR0bits 0E33                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                      _returning 0055                      _vfpfcnvrt 0E14  
    __end_of_I2C_2_Master_Idle 182C      __end_of_I2C_2_Master_Init 1804      __end_of_I2C_2_Master_Read 1744  
    __end_of_I2C_2_Master_Stop 18EA    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 1576  
   __end_of_sendRGBCvalSerial4 14CA              ??_color_read_Blue 0007                   _TxBufReadCnt 0056  
                   vfpfcnvrt@c 0017                      copy_data0 13B0                      copy_data1 13D0  
    __end_of_sendStringSerial4 146C  __end_of_I2C_2_Master_RepStart 18E0             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001A  
                     __Lrparam 0000                     vfprintf@fp 0018                     ?_vfpfcnvrt 000B  
          __end_of_reset_timer 18FE                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001E                     sprintf@ret 0027                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6             __end_of_initUSART4 18B2                       __ptext10 140A  
                     __ptext11 18B2                       __ptext20 1702                       __ptext12 1894  
                     __ptext21 1778                       __ptext13 130C                       __ptext30 18F4  
                     __ptext22 1874                       __ptext14 1520                       __ptext23 18CA  
                     __ptext15 1576                       __ptext24 18E0                       __ptext16 15C6  
                     __ptext25 18EA                       __ptext17 1616                       __ptext26 1804  
                     __ptext18 1666                       __ptext27 17DA                       __ptext19 18D6  
                     __ptext28 17AC                       __ptext29 1850                    getRGBCval@p 000C  
          main@measured_colour 0039                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005F  
                     _vfprintf 14CA                     _INTCONbits 0FF2                       intlevel2 0000  
                    sprintf@ap 0029                   _topGearRight 00DB              _manoeuvre_pointer 005A  
                  _reset_timer 18F4                    ??_vfpfcnvrt 000E               _color_click_init 1778  
                  _topGearLeft 005D                       sprintf@f 002A                       sprintf@s 001C  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                _trail_manoeuvre 007B  
                  _return_flag 0054                _manoeuvre_count 0053                     _TX4STAbits 0EE8  
              _sendCharSerial4 18B2  
