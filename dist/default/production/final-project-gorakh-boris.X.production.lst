

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 11:44:36 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 18/08/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK0
   113   0036D4                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _manoeuvre_pointer
   117   0036D4  A6                 	db	low _trail_manoeuvre
   118   0036D5  01                 	db	high _trail_manoeuvre
   119                           
   120                           ;initializer for _timer_low_pointer
   121   0036D6  BA                 	db	low _trail_timer_low
   122   0036D7  01                 	db	high _trail_timer_low
   123                           
   124                           ;initializer for _timer_high_pointer
   125   0036D8  CE                 	db	low _trail_timer_high
   126   0036D9  01                 	db	high _trail_timer_high
   127                           
   128                           ;initializer for _squareDelay
   129   0036DA  012C               	dw	300
   130                           
   131                           ;initializer for _headbuttDelay
   132   0036DC  0046               	dw	70
   133                           
   134                           ;initializer for _turn180Delay
   135   0036DE  01FE               	dw	510
   136                           
   137                           ;initializer for _turnRight135Delay
   138   0036E0  012C               	dw	300
   139                           
   140                           ;initializer for _turnLeft135Delay
   141   0036E2  012C               	dw	300
   142                           
   143                           ;initializer for _turnRight90Delay
   144   0036E4  00AF               	dw	175
   145                           
   146                           ;initializer for _turnLeft90Delay
   147   0036E6  00AF               	dw	175
   148                           
   149                           ;initializer for _wall_threshold
   150   0036E8  012C               	dw	300
   151                           
   152                           ;initializer for _turningGear
   153   0036EA  2A                 	db	42
   154                           
   155                           ;initializer for _topGearRight
   156   0036EB  14                 	db	20
   157                           
   158                           ;initializer for _topGearLeft
   159   0036EC  14                 	db	20
   160                           
   161                           ;initializer for _rampDelay
   162   0036ED  08                 	db	8
   163                           
   164                           ;initializer for _sample_count
   165   0036EE  14                 	db	20
   166   000000                     _TMR0H	set	4052
   167   000000                     _TX4REG	set	3812
   168   000000                     _RC4STAbits	set	3815
   169   000000                     _SP4BRGH	set	3814
   170   000000                     _LATEbits	set	3965
   171   000000                     _TRISEbits	set	3973
   172   000000                     _LATGbits	set	3967
   173   000000                     _TRISGbits	set	3975
   174   000000                     _LATFbits	set	3966
   175   000000                     _LATHbits	set	3968
   176   000000                     _TRISFbits	set	3974
   177   000000                     _TRISHbits	set	3976
   178   000000                     _SSP2CON2bits	set	3802
   179   000000                     _RX4PPS	set	3605
   180   000000                     _SSP2CLKPPS	set	3612
   181   000000                     _SSP2DATPPS	set	3613
   182   000000                     _RC7PPS	set	3689
   183   000000                     _RE2PPS	set	3700
   184   000000                     _LATAbits	set	3961
   185   000000                     _LATDbits	set	3964
   186   000000                     _TRISDbits	set	3972
   187   000000                     _T2PR	set	4028
   188   000000                     _T2CONbits	set	4029
   189   000000                     _CCPR2H	set	4006
   190   000000                     _CCPR1H	set	4010
   191   000000                     _TRISCbits	set	3971
   192   000000                     _TRISAbits	set	3969
   193   000000                     _LATCbits	set	3963
   194   000000                     _RE4PPS	set	3702
   195   000000                     _RG6PPS	set	3720
   196   000000                     _RD5PPS	set	3695
   197   000000                     _ANSELDbits	set	3751
   198   000000                     _SSP2ADD	set	3798
   199   000000                     _SSP2CON1bits	set	3801
   200   000000                     _CCPR4H	set	3873
   201   000000                     _CCPR3H	set	3877
   202   000000                     _TMR0L	set	4051
   203   000000                     _T0CON0bits	set	4053
   204   000000                     _T0CON1bits	set	4054
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207   000000                     _CCP1CONbits	set	4011
   208   000000                     _CCPTMRS0bits	set	4013
   209   000000                     _CCP2CONbits	set	4007
   210   000000                     _CCP3CONbits	set	3878
   211   000000                     _CCP4CONbits	set	3874
   212   000000                     _RC4REG	set	3811
   213   000000                     _SP4BRGL	set	3813
   214   000000                     _TX4STAbits	set	3816
   215   000000                     _BAUD4CONbits	set	3817
   216   000000                     _SSP2CON2	set	3802
   217   000000                     _SSP2STAT	set	3800
   218   000000                     _ANSELFbits	set	3764
   219   000000                     _SSP2BUF	set	3797
   220   000000                     _PIE0bits	set	3625
   221   000000                     _PIR4bits	set	3639
   222   000000                     _RC0PPS	set	3682
   223   000000                     _RD6PPS	set	3696
   224   000000                     _INTCONbits	set	4082
   225   000000                     _PIR0bits	set	3635
   226                           
   227                           	psect	smallconst
   228   000E00                     __psmallconst:
   229                           	callstack 0
   230   000E00  00                 	db	0
   231   000E01                     STR_5:
   232                           
   233                           ; BSR set to: 14
   234   000E01  25                 	db	37
   235   000E02  75                 	db	117	;'u'
   236   000E03  20                 	db	32
   237   000E04  25                 	db	37
   238   000E05  75                 	db	117	;'u'
   239   000E06  20                 	db	32
   240   000E07  25                 	db	37
   241   000E08  75                 	db	117	;'u'
   242   000E09  20                 	db	32
   243   000E0A  25                 	db	37
   244   000E0B  75                 	db	117	;'u'
   245   000E0C  20                 	db	32
   246   000E0D  0D                 	db	13
   247   000E0E  00                 	db	0
   248   000E0F                     STR_1:
   249                           
   250                           ; BSR set to: 14
   251   000E0F  25                 	db	37
   252   000E10  64                 	db	100	;'d'
   253   000E11  20                 	db	32
   254   000E12  0D                 	db	13
   255   000E13  00                 	db	0
   256   000E14                     STR_2:
   257                           
   258                           ; BSR set to: 14
   259   000E14  25                 	db	37
   260   000E15  64                 	db	100	;'d'
   261   000E16  20                 	db	32
   262   000E17  00                 	db	0
   263   000E18  00                 	db	0	; dummy byte at the end
   264   000000                     
   265                           ; #config settings
   266                           
   267                           	psect	cinit
   268   003462                     __pcinit:
   269                           	callstack 0
   270   003462                     start_initialization:
   271                           	callstack 0
   272   003462                     __initialization:
   273                           	callstack 0
   274                           
   275                           ; Initialize objects allocated to BANK0 (27 bytes)
   276                           ; load TBLPTR registers with __pidataBANK0
   277   003462  0ED4               	movlw	low __pidataBANK0
   278   003464  6EF6               	movwf	tblptrl,c
   279   003466  0E36               	movlw	high __pidataBANK0
   280   003468  6EF7               	movwf	tblptrh,c
   281   00346A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   282   00346C  6EF8               	movwf	tblptru,c
   283   00346E  EE00  F0A8         	lfsr	0,__pdataBANK0
   284   003472  EE10 F01B          	lfsr	1,27
   285   003476                     copy_data0:
   286   003476  0009               	tblrd		*+
   287   003478  CFF5 FFEE          	movff	tablat,postinc0
   288   00347C  50E5               	movf	postdec1,w,c
   289   00347E  50E1               	movf	fsr1l,w,c
   290   003480  E1FA               	bnz	copy_data0
   291                           
   292                           ; Clear objects allocated to BANK1 (62 bytes)
   293   003482  EE01  F0A4         	lfsr	0,__pbssBANK1
   294   003486  0E3E               	movlw	62
   295   003488                     clear_0:
   296   003488  6AEE               	clrf	postinc0,c
   297   00348A  06E8               	decf	wreg,f,c
   298   00348C  E1FD               	bnz	clear_0
   299                           
   300                           ; Clear objects allocated to BANK0 (40 bytes)
   301   00348E  EE00  F060         	lfsr	0,__pbssBANK0
   302   003492  0E28               	movlw	40
   303   003494                     clear_1:
   304   003494  6AEE               	clrf	postinc0,c
   305   003496  06E8               	decf	wreg,f,c
   306   003498  E1FD               	bnz	clear_1
   307                           
   308                           ; Clear objects allocated to COMRAM (1 bytes)
   309   00349A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   310   00349C                     end_of_initialization:
   311                           	callstack 0
   312   00349C                     __end_of__initialization:
   313                           	callstack 0
   314   00349C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315   00349E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316   0034A0  0100               	movlb	0
   317   0034A2  EF18  F012         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMRAM
   320   00005E                     __pbssCOMRAM:
   321                           	callstack 0
   322   00005E                     _returning:
   323                           	callstack 0
   324   00005E                     	ds	1
   325                           
   326                           	psect	bssBANK0
   327   000060                     __pbssBANK0:
   328                           	callstack 0
   329   000060                     _dbuf:
   330                           	callstack 0
   331   000060                     	ds	32
   332   000080                     _nout:
   333                           	callstack 0
   334   000080                     	ds	2
   335   000082                     _width:
   336                           	callstack 0
   337   000082                     	ds	2
   338   000084                     _prec:
   339                           	callstack 0
   340   000084                     	ds	2
   341   000086                     _flags:
   342                           	callstack 0
   343   000086                     	ds	1
   344   000087                     _return_flag:
   345                           	callstack 0
   346   000087                     	ds	1
   347                           
   348                           	psect	dataBANK0
   349   0000A8                     __pdataBANK0:
   350                           	callstack 0
   351   0000A8                     _manoeuvre_pointer:
   352                           	callstack 0
   353   0000A8                     	ds	2
   354   0000AA                     _timer_low_pointer:
   355                           	callstack 0
   356   0000AA                     	ds	2
   357   0000AC                     _timer_high_pointer:
   358                           	callstack 0
   359   0000AC                     	ds	2
   360   0000AE                     _squareDelay:
   361                           	callstack 0
   362   0000AE                     	ds	2
   363   0000B0                     _headbuttDelay:
   364                           	callstack 0
   365   0000B0                     	ds	2
   366   0000B2                     _turn180Delay:
   367                           	callstack 0
   368   0000B2                     	ds	2
   369   0000B4                     _turnRight135Delay:
   370                           	callstack 0
   371   0000B4                     	ds	2
   372   0000B6                     _turnLeft135Delay:
   373                           	callstack 0
   374   0000B6                     	ds	2
   375   0000B8                     _turnRight90Delay:
   376                           	callstack 0
   377   0000B8                     	ds	2
   378   0000BA                     _turnLeft90Delay:
   379                           	callstack 0
   380   0000BA                     	ds	2
   381   0000BC                     _wall_threshold:
   382                           	callstack 0
   383   0000BC                     	ds	2
   384   0000BE                     _turningGear:
   385                           	callstack 0
   386   0000BE                     	ds	1
   387   0000BF                     _topGearRight:
   388                           	callstack 0
   389   0000BF                     	ds	1
   390   0000C0                     _topGearLeft:
   391                           	callstack 0
   392   0000C0                     	ds	1
   393   0000C1                     _rampDelay:
   394                           	callstack 0
   395   0000C1                     	ds	1
   396   0000C2                     _sample_count:
   397                           	callstack 0
   398   0000C2                     	ds	1
   399                           
   400                           	psect	bssBANK1
   401   0001A4                     __pbssBANK1:
   402                           	callstack 0
   403   0001A4                     _manoeuvre_count:
   404                           	callstack 0
   405   0001A4                     	ds	1
   406   0001A5                     _lost_flag:
   407                           	callstack 0
   408   0001A5                     	ds	1
   409   0001A6                     _trail_manoeuvre:
   410                           	callstack 0
   411   0001A6                     	ds	20
   412   0001BA                     _trail_timer_low:
   413                           	callstack 0
   414   0001BA                     	ds	20
   415   0001CE                     _trail_timer_high:
   416                           	callstack 0
   417   0001CE                     	ds	20
   418                           
   419                           	psect	cstackBANK1
   420   000100                     __pcstackBANK1:
   421                           	callstack 0
   422   000100                     sendArrayCharSerial4@tempStr:
   423                           	callstack 0
   424                           
   425                           ; 161 bytes @ 0x0
   426   000100                     	ds	161
   427   0001A1                     sendArrayCharSerial4@index:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xA1
   431   0001A1                     	ds	1
   432   0001A2                     sendArrayCharSerial4@i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xA2
   436   0001A2                     	ds	2
   437                           
   438                           	psect	cstackBANK0
   439   000088                     __pcstackBANK0:
   440                           	callstack 0
   441   000088                     main@motorL:
   442                           	callstack 0
   443                           
   444                           ; 9 bytes @ 0x0
   445   000088                     	ds	9
   446   000091                     main@motorR:
   447                           	callstack 0
   448                           
   449                           ; 9 bytes @ 0x9
   450   000091                     	ds	9
   451   00009A                     main@HSV_colour:
   452                           	callstack 0
   453                           
   454                           ; 6 bytes @ 0x12
   455   00009A                     	ds	6
   456   0000A0                     main@RGBC_colour:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x18
   460   0000A0                     	ds	8
   461                           
   462                           	psect	cstackCOMRAM
   463   000001                     __pcstackCOMRAM:
   464                           	callstack 0
   465   000001                     ??_toggle_tricolour_LED:
   466   000001                     ??_I2C_2_Master_Idle:
   467   000001                     ?_max_RGB:
   468                           	callstack 0
   469   000001                     ?_min_RGB:
   470                           	callstack 0
   471   000001                     ?___wmul:
   472                           	callstack 0
   473   000001                     ?___awdiv:
   474                           	callstack 0
   475   000001                     ?___awmod:
   476                           	callstack 0
   477   000001                     ?___lwmod:
   478                           	callstack 0
   479   000001                     ?___lmul:
   480                           	callstack 0
   481   000001                     ?___lldiv:
   482                           	callstack 0
   483   000001                     ?___xxtofl:
   484                           	callstack 0
   485   000001                     max_RGB@p:
   486                           	callstack 0
   487   000001                     min_RGB@p:
   488                           	callstack 0
   489   000001                     colour_to_key@p1:
   490                           	callstack 0
   491   000001                     sendCharSerial4@charToSend:
   492                           	callstack 0
   493   000001                     read_timer@tH:
   494                           	callstack 0
   495   000001                     write_timer@tL:
   496                           	callstack 0
   497   000001                     write_trail@tL:
   498                           	callstack 0
   499   000001                     initDCmotorsPWM@PWMperiod:
   500                           	callstack 0
   501   000001                     ___wmul@multiplier:
   502                           	callstack 0
   503   000001                     ___awdiv@dividend:
   504                           	callstack 0
   505   000001                     ___awmod@dividend:
   506                           	callstack 0
   507   000001                     ___lwmod@dividend:
   508                           	callstack 0
   509   000001                     fputc@c:
   510                           	callstack 0
   511   000001                     ___lmul@multiplier:
   512                           	callstack 0
   513   000001                     ___lldiv@dividend:
   514                           	callstack 0
   515   000001                     ___xxtofl@val:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x0
   519   000001                     	ds	1
   520   000002                     ??_I2C_2_Master_Read:
   521   000002                     colour_to_key@p2:
   522                           	callstack 0
   523   000002                     I2C_2_Master_Write@data_byte:
   524                           	callstack 0
   525   000002                     read_timer@tL:
   526                           	callstack 0
   527   000002                     write_timer@tH:
   528                           	callstack 0
   529   000002                     write_trail@man:
   530                           	callstack 0
   531   000002                     sendStringSerial4@string:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x1
   535   000002                     	ds	1
   536   000003                     color_writetoaddr@value:
   537                           	callstack 0
   538   000003                     I2C_2_Master_Read@ack:
   539                           	callstack 0
   540   000003                     write_trail@tH:
   541                           	callstack 0
   542   000003                     fputc@fp:
   543                           	callstack 0
   544   000003                     ___wmul@multiplicand:
   545                           	callstack 0
   546   000003                     ___awdiv@divisor:
   547                           	callstack 0
   548   000003                     ___awmod@divisor:
   549                           	callstack 0
   550   000003                     ___lwmod@divisor:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x2
   554   000003                     	ds	1
   555   000004                     ??_fputc:
   556   000004                     color_writetoaddr@address:
   557                           	callstack 0
   558   000004                     I2C_2_Master_Read@tmp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x3
   562   000004                     	ds	1
   563   000005                     ??_color_click_init:
   564   000005                     ??___xxtofl:
   565   000005                     ?_color_read_Red:
   566                           	callstack 0
   567   000005                     ?_color_read_Green:
   568                           	callstack 0
   569   000005                     ?_color_read_Blue:
   570                           	callstack 0
   571   000005                     ?_color_read_Clear:
   572                           	callstack 0
   573   000005                     colour_to_key@key:
   574                           	callstack 0
   575   000005                     ___awdiv@counter:
   576                           	callstack 0
   577   000005                     ___awmod@counter:
   578                           	callstack 0
   579   000005                     ___lwmod@counter:
   580                           	callstack 0
   581   000005                     max_RGB@max_val:
   582                           	callstack 0
   583   000005                     min_RGB@min_val:
   584                           	callstack 0
   585   000005                     ___wmul@product:
   586                           	callstack 0
   587   000005                     ___lmul@multiplicand:
   588                           	callstack 0
   589   000005                     ___lldiv@divisor:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x4
   593   000005                     	ds	1
   594   000006                     ___awdiv@sign:
   595                           	callstack 0
   596   000006                     ___awmod@sign:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x5
   600   000006                     	ds	1
   601   000007                     ??_color_read_Red:
   602   000007                     ??_color_read_Green:
   603   000007                     ??_color_read_Blue:
   604   000007                     ??_color_read_Clear:
   605   000007                     ?_abs:
   606                           	callstack 0
   607   000007                     ?___lwdiv:
   608                           	callstack 0
   609   000007                     ___awdiv@quotient:
   610                           	callstack 0
   611   000007                     ___lwdiv@dividend:
   612                           	callstack 0
   613   000007                     abs@a:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x6
   617   000007                     	ds	2
   618   000009                     ??_abs:
   619   000009                     ___xxtofl@sign:
   620                           	callstack 0
   621   000009                     ___lwdiv@divisor:
   622                           	callstack 0
   623   000009                     ___lmul@product:
   624                           	callstack 0
   625   000009                     ___lldiv@quotient:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x8
   629   000009                     	ds	1
   630   00000A                     ___xxtofl@exp:
   631                           	callstack 0
   632   00000A                     color_read_Red@tmp:
   633                           	callstack 0
   634   00000A                     color_read_Green@tmp:
   635                           	callstack 0
   636   00000A                     color_read_Blue@tmp:
   637                           	callstack 0
   638   00000A                     color_read_Clear@tmp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x9
   642   00000A                     	ds	1
   643   00000B                     ___lwdiv@quotient:
   644                           	callstack 0
   645   00000B                     ___xxtofl@arg:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0xA
   649   00000B                     	ds	1
   650   00000C                     getRGBCval@p:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0xB
   654   00000C                     	ds	1
   655   00000D                     wait_for_wall@p:
   656                           	callstack 0
   657   00000D                     ___lldiv@counter:
   658                           	callstack 0
   659   00000D                     ___lwdiv@counter:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0xC
   663   00000D                     	ds	1
   664   00000E                     ?_vfpfcnvrt:
   665                           	callstack 0
   666   00000E                     average_RGBC@p:
   667                           	callstack 0
   668   00000E                     wait_for_wall@loss:
   669                           	callstack 0
   670   00000E                     convert_HSV@p1:
   671                           	callstack 0
   672   00000E                     setMotorPWM@m:
   673                           	callstack 0
   674   00000E                     vfpfcnvrt@fp:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xD
   678   00000E                     	ds	1
   679   00000F                     ??_average_RGBC:
   680   00000F                     ??_setMotorPWM:
   681   00000F                     ?___flmul:
   682                           	callstack 0
   683   00000F                     convert_HSV@p2:
   684                           	callstack 0
   685   00000F                     vfpfcnvrt@fmt:
   686                           	callstack 0
   687   00000F                     ___flmul@b:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0xE
   691   00000F                     	ds	1
   692   000010                     ??_convert_HSV:
   693   000010                     vfpfcnvrt@ap:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0xF
   697   000010                     	ds	1
   698   000011                     ??_vfpfcnvrt:
   699   000011                     average_RGBC@i:
   700                           	callstack 0
   701   000011                     setMotorPWM@posDuty:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x10
   705   000011                     	ds	1
   706   000012                     setMotorPWM@negDuty:
   707                           	callstack 0
   708   000012                     average_RGBC@temp_R:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x11
   712   000012                     	ds	1
   713   000013                     stop@mL:
   714                           	callstack 0
   715   000013                     vfpfcnvrt@done:
   716                           	callstack 0
   717   000013                     ___flmul@a:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x12
   721   000013                     	ds	1
   722   000014                     stop@mR:
   723                           	callstack 0
   724   000014                     vfpfcnvrt@cnt:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x13
   728   000014                     	ds	1
   729   000015                     ??_stop:
   730                           
   731                           ; 1 bytes @ 0x14
   732   000015                     	ds	1
   733   000016                     vfpfcnvrt@cp:
   734                           	callstack 0
   735   000016                     average_RGBC@temp_G:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x15
   739   000016                     	ds	1
   740   000017                     ??___flmul:
   741   000017                     vfpfcnvrt@convarg:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x16
   745   000017                     	ds	1
   746   000018                     convert_HSV@sat_scale:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x17
   750   000018                     	ds	2
   751   00001A                     convert_HSV@m:
   752                           	callstack 0
   753   00001A                     average_RGBC@temp_B:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x19
   757   00001A                     	ds	1
   758   00001B                     ___flmul@sign:
   759                           	callstack 0
   760   00001B                     vfpfcnvrt@c:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x1A
   764   00001B                     	ds	1
   765   00001C                     ?_vfprintf:
   766                           	callstack 0
   767   00001C                     vfprintf@fp:
   768                           	callstack 0
   769   00001C                     convert_HSV@sat:
   770                           	callstack 0
   771   00001C                     ___flmul@grs:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x1B
   775   00001C                     	ds	1
   776   00001D                     vfprintf@fmt:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x1C
   780   00001D                     	ds	1
   781   00001E                     vfprintf@ap:
   782                           	callstack 0
   783   00001E                     convert_HSV@hue:
   784                           	callstack 0
   785   00001E                     average_RGBC@temp_C:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x1D
   789   00001E                     	ds	1
   790   00001F                     vfprintf@cfmt:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x1E
   794   00001F                     	ds	1
   795   000020                     ?_sprintf:
   796                           	callstack 0
   797   000020                     ___flmul@aexp:
   798                           	callstack 0
   799   000020                     sprintf@s:
   800                           	callstack 0
   801   000020                     convert_HSV@temp_614:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x1F
   805   000020                     	ds	1
   806   000021                     ___flmul@bexp:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x20
   810   000021                     	ds	1
   811   000022                     sprintf@fmt:
   812                           	callstack 0
   813   000022                     ___flmul@prod:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x21
   817   000022                     	ds	2
   818   000024                     convert_HSV@temp:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x23
   822   000024                     	ds	2
   823   000026                     ___flmul@temp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x25
   827   000026                     	ds	2
   828   000028                     ?___fltol:
   829                           	callstack 0
   830   000028                     convert_HSV@temp_610:
   831                           	callstack 0
   832   000028                     ___fltol@f1:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x27
   836   000028                     	ds	3
   837   00002B                     sprintf@ret:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x2A
   841   00002B                     	ds	1
   842   00002C                     ??___fltol:
   843   00002C                     convert_HSV@temp_611:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x2B
   847   00002C                     	ds	1
   848   00002D                     sprintf@ap:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x2C
   852   00002D                     	ds	1
   853   00002E                     sprintf@f:
   854                           	callstack 0
   855                           
   856                           ; 12 bytes @ 0x2D
   857   00002E                     	ds	2
   858   000030                     ___fltol@sign1:
   859                           	callstack 0
   860   000030                     convert_HSV@temp_612:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x2F
   864   000030                     	ds	1
   865   000031                     ___fltol@exp1:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x30
   869   000031                     	ds	1
   870   000032                     scale_RGB@p:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x31
   874   000032                     	ds	1
   875   000033                     ??_scale_RGB:
   876                           
   877                           ; 1 bytes @ 0x32
   878   000033                     	ds	1
   879   000034                     convert_HSV@temp_613:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x33
   883   000034                     	ds	4
   884   000038                     convert_HSV@temp_609:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x37
   888   000038                     	ds	2
   889   00003A                     sendRGBCvalSerial4@col_val:
   890                           	callstack 0
   891   00003A                     sendHSVvalSerial4@col_val:
   892                           	callstack 0
   893   00003A                     sendArrayCharSerial4@arr:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x39
   897   00003A                     	ds	1
   898   00003B                     sendHSVvalSerial4@tempStr:
   899                           	callstack 0
   900   00003B                     sendRGBCvalSerial4@tempStr:
   901                           	callstack 0
   902                           
   903                           ; 26 bytes @ 0x3A
   904   00003B                     	ds	1
   905   00003C                     ??_sendArrayCharSerial4:
   906   00003C                     convert_HSV@hue_scale:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x3B
   910   00003C                     	ds	2
   911   00003E                     convert_HSV@M:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x3D
   915   00003E                     	ds	2
   916   000040                     convert_HSV@C:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x3F
   920   000040                     	ds	21
   921   000055                     forward_navigation@mL:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x54
   925   000055                     	ds	1
   926   000056                     forward_navigation@mR:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x55
   930   000056                     	ds	1
   931   000057                     forward_navigation@p1:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x56
   935   000057                     	ds	1
   936   000058                     forward_navigation@p2:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x57
   940   000058                     	ds	1
   941   000059                     forward_navigation@timerH:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x58
   945   000059                     	ds	1
   946   00005A                     forward_navigation@timerL:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x59
   950   00005A                     	ds	1
   951   00005B                     forward_navigation@mann:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x5A
   955   00005B                     	ds	1
   956   00005C                     ??_main:
   957                           
   958                           ; 1 bytes @ 0x5B
   959   00005C                     	ds	2
   960                           
   961 ;;
   962 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   963 ;;
   964 ;; *************** function _main *****************
   965 ;; Defined at:
   966 ;;		line 27 in file "main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  motorR          9    9[BANK0 ] struct DC_motor
   971 ;;  motorL          9    0[BANK0 ] struct DC_motor
   972 ;;  RGBC_colour     8   24[BANK0 ] struct RGBC_val
   973 ;;  HSV_colour      6   18[BANK0 ] struct HSV_val
   974 ;;  PWMcycle        2    0        unsigned int 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   985 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   987 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   988 ;;Total ram usage:       34 bytes
   989 ;; Hardware stack levels required when called: 8
   990 ;; This function calls:
   991 ;;		_Timer0_init
   992 ;;		_average_RGBC
   993 ;;		_buggy_lights_init
   994 ;;		_color_click_init
   995 ;;		_convert_HSV
   996 ;;		_forward_navigation
   997 ;;		_initDCmotorsPWM
   998 ;;		_initUSART4
   999 ;;		_scale_RGB
  1000 ;;		_sendHSVvalSerial4
  1001 ;;		_sendRGBCvalSerial4
  1002 ;;		_toggle_tricolour_LED
  1003 ;; This function is called by:
  1004 ;;		Startup code after reset
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text0
  1009   002430                     __ptext0:
  1010                           	callstack 0
  1011   002430                     _main:
  1012                           	callstack 23
  1013   002430                     
  1014                           ;main.c: 28:     struct RGBC_val RGBC_colour;;main.c: 29:         RGBC_colour.R = 0;
  1015   002430  0E00               	movlw	0
  1016   002432  0100               	movlb	0	; () banked
  1017   002434  6FA1               	movwf	(main@RGBC_colour+1)& (0+255),b
  1018   002436  0E00               	movlw	0
  1019   002438  6FA0               	movwf	main@RGBC_colour& (0+255),b
  1020                           
  1021                           ;main.c: 30:         RGBC_colour.G = 0;
  1022   00243A  0E00               	movlw	0
  1023   00243C  6FA3               	movwf	(main@RGBC_colour+3)& (0+255),b
  1024   00243E  0E00               	movlw	0
  1025   002440  6FA2               	movwf	(main@RGBC_colour+2)& (0+255),b
  1026                           
  1027                           ;main.c: 31:         RGBC_colour.B = 0;
  1028   002442  0E00               	movlw	0
  1029   002444  6FA5               	movwf	(main@RGBC_colour+5)& (0+255),b
  1030   002446  0E00               	movlw	0
  1031   002448  6FA4               	movwf	(main@RGBC_colour+4)& (0+255),b
  1032                           
  1033                           ;main.c: 32:         RGBC_colour.C = 0;
  1034   00244A  0E00               	movlw	0
  1035   00244C  6FA7               	movwf	(main@RGBC_colour+7)& (0+255),b
  1036   00244E  0E00               	movlw	0
  1037   002450  6FA6               	movwf	(main@RGBC_colour+6)& (0+255),b
  1038                           
  1039                           ;main.c: 34:     struct HSV_val HSV_colour;;main.c: 35:         HSV_colour.H = 0;
  1040   002452  0E00               	movlw	0
  1041   002454  6F9B               	movwf	(main@HSV_colour+1)& (0+255),b
  1042   002456  0E00               	movlw	0
  1043   002458  6F9A               	movwf	main@HSV_colour& (0+255),b
  1044                           
  1045                           ;main.c: 36:         HSV_colour.S = 0;
  1046   00245A  0E00               	movlw	0
  1047   00245C  6F9D               	movwf	(main@HSV_colour+3)& (0+255),b
  1048   00245E  0E00               	movlw	0
  1049   002460  6F9C               	movwf	(main@HSV_colour+2)& (0+255),b
  1050                           
  1051                           ;main.c: 37:         HSV_colour.V = 0;
  1052   002462  0E00               	movlw	0
  1053   002464  6F9F               	movwf	(main@HSV_colour+5)& (0+255),b
  1054   002466  0E00               	movlw	0
  1055   002468  6F9E               	movwf	(main@HSV_colour+4)& (0+255),b
  1056                           
  1057                           ;main.c: 40:     struct DC_motor motorL, motorR;;main.c: 41:         motorL.power = 0;
  1058   00246A  0E00               	movlw	0
  1059   00246C  6F88               	movwf	main@motorL& (0+255),b
  1060                           
  1061                           ;main.c: 42:         motorL.direction = 1;
  1062   00246E  0E01               	movlw	1
  1063   002470  6F89               	movwf	(main@motorL+1)& (0+255),b
  1064                           
  1065                           ;main.c: 43:         motorL.brakemode = 1;
  1066   002472  0E01               	movlw	1
  1067   002474  6F8A               	movwf	(main@motorL+2)& (0+255),b
  1068   002476                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 44:         motorL.PWMperiod = PWMcycle;
  1071   002476  0E00               	movlw	0
  1072   002478  6F8C               	movwf	(main@motorL+4)& (0+255),b
  1073   00247A  0E63               	movlw	99
  1074   00247C  6F8B               	movwf	(main@motorL+3)& (0+255),b
  1075   00247E                     
  1076                           ; BSR set to: 0
  1077                           ;main.c: 45:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1078   00247E  0EAA               	movlw	170
  1079   002480  6F8D               	movwf	(main@motorL+5)& (0+255),b
  1080   002482  0E0F               	movlw	15
  1081   002484  6F8E               	movwf	(main@motorL+6)& (0+255),b
  1082   002486                     
  1083                           ; BSR set to: 0
  1084                           ;main.c: 46:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1085   002486  0EA6               	movlw	166
  1086   002488  6F8F               	movwf	(main@motorL+7)& (0+255),b
  1087   00248A  0E0F               	movlw	15
  1088   00248C  6F90               	movwf	(main@motorL+8)& (0+255),b
  1089                           
  1090                           ;main.c: 47:         motorR.power = 0;
  1091   00248E  0E00               	movlw	0
  1092   002490  6F91               	movwf	main@motorR& (0+255),b
  1093                           
  1094                           ;main.c: 48:         motorR.direction = 1;
  1095   002492  0E01               	movlw	1
  1096   002494  6F92               	movwf	(main@motorR+1)& (0+255),b
  1097                           
  1098                           ;main.c: 49:         motorR.brakemode = 1;
  1099   002496  0E01               	movlw	1
  1100   002498  6F93               	movwf	(main@motorR+2)& (0+255),b
  1101   00249A                     
  1102                           ; BSR set to: 0
  1103                           ;main.c: 50:         motorR.PWMperiod = PWMcycle;
  1104   00249A  0E00               	movlw	0
  1105   00249C  6F95               	movwf	(main@motorR+4)& (0+255),b
  1106   00249E  0E63               	movlw	99
  1107   0024A0  6F94               	movwf	(main@motorR+3)& (0+255),b
  1108   0024A2                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 51:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1111   0024A2  0E25               	movlw	37
  1112   0024A4  6F96               	movwf	(main@motorR+5)& (0+255),b
  1113   0024A6  0E0F               	movlw	15
  1114   0024A8  6F97               	movwf	(main@motorR+6)& (0+255),b
  1115   0024AA                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 52:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1118   0024AA  0E21               	movlw	33
  1119   0024AC  6F98               	movwf	(main@motorR+7)& (0+255),b
  1120   0024AE  0E0F               	movlw	15
  1121   0024B0  6F99               	movwf	(main@motorR+8)& (0+255),b
  1122   0024B2                     
  1123                           ; BSR set to: 0
  1124                           ;main.c: 55:     initDCmotorsPWM(PWMcycle);
  1125   0024B2  0E00               	movlw	0
  1126   0024B4  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1127   0024B6  0E63               	movlw	99
  1128   0024B8  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1129   0024BA  ECA8  F016         	call	_initDCmotorsPWM	;wreg free
  1130                           
  1131                           ;main.c: 56:     buggy_lights_init();
  1132   0024BE  ECE6  F01A         	call	_buggy_lights_init	;wreg free
  1133   0024C2                     
  1134                           ;main.c: 57:     color_click_init();
  1135   0024C2  ECCC  F01A         	call	_color_click_init	;wreg free
  1136   0024C6                     
  1137                           ;main.c: 58:     initUSART4();
  1138   0024C6  EC5B  F01B         	call	_initUSART4	;wreg free
  1139   0024CA                     
  1140                           ;main.c: 59:     Timer0_init();
  1141   0024CA  EC39  F01B         	call	_Timer0_init	;wreg free
  1142   0024CE                     
  1143                           ;main.c: 63:         TRISDbits.TRISD7 = 0;
  1144   0024CE  9E84               	bcf	132,7,c	;volatile
  1145   0024D0                     
  1146                           ;main.c: 64:         TRISHbits.TRISH3 = 0;
  1147   0024D0  9688               	bcf	136,3,c	;volatile
  1148   0024D2                     
  1149                           ;main.c: 66:         LATDbits.LATD7 = 0;
  1150   0024D2  9E7C               	bcf	124,7,c	;volatile
  1151   0024D4                     
  1152                           ;main.c: 67:         LATHbits.LATH3 = 0;
  1153   0024D4  9680               	bcf	128,3,c	;volatile
  1154   0024D6                     
  1155                           ;main.c: 71:         TRISFbits.TRISF2 = 1;
  1156   0024D6  8486               	bsf	134,2,c	;volatile
  1157   0024D8                     
  1158                           ;main.c: 72:         TRISFbits.TRISF3 = 1;
  1159   0024D8  8686               	bsf	134,3,c	;volatile
  1160   0024DA                     
  1161                           ;main.c: 74:         ANSELFbits.ANSELF2 = 0;
  1162   0024DA  010E               	movlb	14	; () banked
  1163   0024DC  95B4               	bcf	180,2,b	;volatile
  1164   0024DE                     
  1165                           ; BSR set to: 14
  1166                           ;main.c: 75:         ANSELFbits.ANSELF3 = 0;
  1167   0024DE  97B4               	bcf	180,3,b	;volatile
  1168                           
  1169                           ;main.c: 80:     LATDbits.LATD7 = !LATDbits.LATD7;
  1170   0024E0  AE7C               	btfss	124,7,c	;volatile
  1171   0024E2  EF75  F012         	goto	u3871
  1172   0024E6  EF79  F012         	goto	u3870
  1173   0024EA                     u3871:
  1174   0024EA  6A5C               	clrf	??_main^0,c
  1175   0024EC  2A5C               	incf	??_main^0,f,c
  1176   0024EE  EF7A  F012         	goto	u3888
  1177   0024F2                     u3870:
  1178   0024F2  6A5C               	clrf	??_main^0,c
  1179   0024F4                     u3888:
  1180   0024F4  325C               	rrcf	??_main^0,f,c
  1181   0024F6  325C               	rrcf	??_main^0,f,c
  1182   0024F8  507C               	movf	124,w,c	;volatile
  1183   0024FA  185C               	xorwf	??_main^0,w,c
  1184   0024FC  0B7F               	andlw	-129
  1185   0024FE  185C               	xorwf	??_main^0,w,c
  1186   002500  6E7C               	movwf	124,c	;volatile
  1187                           
  1188                           ;main.c: 81:     LATHbits.LATH3 = !LATHbits.LATH3;
  1189   002502  A680               	btfss	128,3,c	;volatile
  1190   002504  EF86  F012         	goto	u3891
  1191   002508  EF8A  F012         	goto	u3890
  1192   00250C                     u3891:
  1193   00250C  6A5C               	clrf	??_main^0,c
  1194   00250E  2A5C               	incf	??_main^0,f,c
  1195   002510  EF8B  F012         	goto	u3908
  1196   002514                     u3890:
  1197   002514  6A5C               	clrf	??_main^0,c
  1198   002516                     u3908:
  1199   002516  465C               	rlncf	??_main^0,f,c
  1200   002518  465C               	rlncf	??_main^0,f,c
  1201   00251A  465C               	rlncf	??_main^0,f,c
  1202   00251C  5080               	movf	128,w,c	;volatile
  1203   00251E  185C               	xorwf	??_main^0,w,c
  1204   002520  0BF7               	andlw	-9
  1205   002522  185C               	xorwf	??_main^0,w,c
  1206   002524  6E80               	movwf	128,c	;volatile
  1207   002526                     
  1208                           ;main.c: 82:     toggle_tricolour_LED();
  1209   002526  ECDB  F014         	call	_toggle_tricolour_LED	;wreg free
  1210   00252A                     
  1211                           ;main.c: 84:     forward_navigation(&motorL, &motorR, &HSV_colour, &RGBC_colour);
  1212   00252A  0E88               	movlw	low main@motorL
  1213   00252C  6E55               	movwf	forward_navigation@mL^0,c
  1214   00252E  0E91               	movlw	low main@motorR
  1215   002530  6E56               	movwf	forward_navigation@mR^0,c
  1216   002532  0E9A               	movlw	low main@HSV_colour
  1217   002534  6E57               	movwf	forward_navigation@p1^0,c
  1218   002536  0EA0               	movlw	low main@RGBC_colour
  1219   002538  6E58               	movwf	forward_navigation@p2^0,c
  1220   00253A  ECF2  F013         	call	_forward_navigation	;wreg free
  1221   00253E                     l4524:
  1222                           
  1223                           ;main.c: 87:         average_RGBC(&RGBC_colour);
  1224   00253E  0EA0               	movlw	low main@RGBC_colour
  1225   002540  6E0E               	movwf	average_RGBC@p^0,c
  1226   002542  EC40  F010         	call	_average_RGBC	;wreg free
  1227   002546                     
  1228                           ;main.c: 88:         scale_RGB(&RGBC_colour);
  1229   002546  0EA0               	movlw	low main@RGBC_colour
  1230   002548  6E32               	movwf	scale_RGB@p^0,c
  1231   00254A  EC70  F014         	call	_scale_RGB	;wreg free
  1232   00254E                     
  1233                           ;main.c: 89:         convert_HSV(&HSV_colour, &RGBC_colour);
  1234   00254E  0E9A               	movlw	low main@HSV_colour
  1235   002550  6E0E               	movwf	convert_HSV@p1^0,c
  1236   002552  0EA0               	movlw	low main@RGBC_colour
  1237   002554  6E0F               	movwf	convert_HSV@p2^0,c
  1238   002556  EC0D  F007         	call	_convert_HSV	;wreg free
  1239   00255A                     
  1240                           ;main.c: 90:         sendRGBCvalSerial4(&RGBC_colour);
  1241   00255A  0EA0               	movlw	low main@RGBC_colour
  1242   00255C  6E3A               	movwf	sendRGBCvalSerial4@col_val^0,c
  1243   00255E  ECC0  F018         	call	_sendRGBCvalSerial4	;wreg free
  1244   002562                     
  1245                           ;main.c: 91:         sendHSVvalSerial4(&HSV_colour);
  1246   002562  0E9A               	movlw	low main@HSV_colour
  1247   002564  6E3A               	movwf	sendHSVvalSerial4@col_val^0,c
  1248   002566  ECE5  F019         	call	_sendHSVvalSerial4	;wreg free
  1249   00256A                     
  1250                           ;main.c: 92:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1251   00256A  0E29               	movlw	41
  1252   00256C  6E5D               	movwf	(??_main+1)^0,c
  1253   00256E  0E96               	movlw	150
  1254   002570  6E5C               	movwf	??_main^0,c
  1255   002572  0E7F               	movlw	127
  1256   002574                     u3917:
  1257   002574  2EE8               	decfsz	wreg,f,c
  1258   002576  D7FE               	bra	u3917
  1259   002578  2E5C               	decfsz	??_main^0,f,c
  1260   00257A  D7FC               	bra	u3917
  1261   00257C  2E5D               	decfsz	(??_main+1)^0,f,c
  1262   00257E  D7FA               	bra	u3917
  1263   002580  0000               	nop	
  1264   002582  EF9F  F012         	goto	l4524
  1265   002586  EF21  F000         	goto	start
  1266   00258A                     __end_of_main:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _toggle_tricolour_LED *****************
  1270 ;; Defined at:
  1271 ;;		line 84 in file "buggy_lights.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1289 ;;Total ram usage:        1 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text1
  1300   0029B6                     __ptext1:
  1301                           	callstack 0
  1302   0029B6                     _toggle_tricolour_LED:
  1303                           	callstack 29
  1304   0029B6                     
  1305                           ;buggy_lights.c: 88:         LATGbits.LATG1 = !LATGbits.LATG1;
  1306   0029B6  A27F               	btfss	127,1,c	;volatile
  1307   0029B8  EFE0  F014         	goto	u3531
  1308   0029BC  EFE4  F014         	goto	u3530
  1309   0029C0                     u3531:
  1310   0029C0  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1311   0029C2  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1312   0029C4  EFE5  F014         	goto	u3548
  1313   0029C8                     u3530:
  1314   0029C8  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1315   0029CA                     u3548:
  1316   0029CA  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1317   0029CC  507F               	movf	127,w,c	;volatile
  1318   0029CE  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1319   0029D0  0BFD               	andlw	-3
  1320   0029D2  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1321   0029D4  6E7F               	movwf	127,c	;volatile
  1322                           
  1323                           ;buggy_lights.c: 89:         LATAbits.LATA4 = !LATAbits.LATA4;
  1324   0029D6  A879               	btfss	121,4,c	;volatile
  1325   0029D8  EFF0  F014         	goto	u3551
  1326   0029DC  EFF4  F014         	goto	u3550
  1327   0029E0                     u3551:
  1328   0029E0  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1329   0029E2  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1330   0029E4  EFF5  F014         	goto	u3568
  1331   0029E8                     u3550:
  1332   0029E8  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1333   0029EA                     u3568:
  1334   0029EA  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1335   0029EC  5079               	movf	121,w,c	;volatile
  1336   0029EE  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1337   0029F0  0BEF               	andlw	-17
  1338   0029F2  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1339   0029F4  6E79               	movwf	121,c	;volatile
  1340                           
  1341                           ;buggy_lights.c: 90:         LATFbits.LATF7 = !LATFbits.LATF7;
  1342   0029F6  AE7E               	btfss	126,7,c	;volatile
  1343   0029F8  EF00  F015         	goto	u3571
  1344   0029FC  EF04  F015         	goto	u3570
  1345   002A00                     u3571:
  1346   002A00  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1347   002A02  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1348   002A04  EF05  F015         	goto	u3588
  1349   002A08                     u3570:
  1350   002A08  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1351   002A0A                     u3588:
  1352   002A0A  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1353   002A0C  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1354   002A0E  507E               	movf	126,w,c	;volatile
  1355   002A10  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1356   002A12  0B7F               	andlw	-129
  1357   002A14  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1358   002A16  6E7E               	movwf	126,c	;volatile
  1359                           
  1360                           ;buggy_lights.c: 93:         LATGbits.LATG0 = !LATGbits.LATG0;
  1361   002A18  A07F               	btfss	127,0,c	;volatile
  1362   002A1A  EF11  F015         	goto	u3591
  1363   002A1E  EF15  F015         	goto	u3590
  1364   002A22                     u3591:
  1365   002A22  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1366   002A24  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1367   002A26  EF16  F015         	goto	u3608
  1368   002A2A                     u3590:
  1369   002A2A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1370   002A2C                     u3608:
  1371   002A2C  507F               	movf	127,w,c	;volatile
  1372   002A2E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1373   002A30  0BFE               	andlw	-2
  1374   002A32  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1375   002A34  6E7F               	movwf	127,c	;volatile
  1376                           
  1377                           ;buggy_lights.c: 94:         LATEbits.LATE7 = !LATEbits.LATE7;
  1378   002A36  AE7D               	btfss	125,7,c	;volatile
  1379   002A38  EF20  F015         	goto	u3611
  1380   002A3C  EF24  F015         	goto	u3610
  1381   002A40                     u3611:
  1382   002A40  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1383   002A42  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1384   002A44  EF25  F015         	goto	u3628
  1385   002A48                     u3610:
  1386   002A48  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1387   002A4A                     u3628:
  1388   002A4A  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1389   002A4C  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1390   002A4E  507D               	movf	125,w,c	;volatile
  1391   002A50  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1392   002A52  0B7F               	andlw	-129
  1393   002A54  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1394   002A56  6E7D               	movwf	125,c	;volatile
  1395                           
  1396                           ;buggy_lights.c: 95:         LATAbits.LATA3 = !LATAbits.LATA3;
  1397   002A58  A679               	btfss	121,3,c	;volatile
  1398   002A5A  EF31  F015         	goto	u3631
  1399   002A5E  EF35  F015         	goto	u3630
  1400   002A62                     u3631:
  1401   002A62  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1402   002A64  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1403   002A66  EF36  F015         	goto	u3648
  1404   002A6A                     u3630:
  1405   002A6A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1406   002A6C                     u3648:
  1407   002A6C  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1408   002A6E  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1409   002A70  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1410   002A72  5079               	movf	121,w,c	;volatile
  1411   002A74  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1412   002A76  0BF7               	andlw	-9
  1413   002A78  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1414   002A7A  6E79               	movwf	121,c	;volatile
  1415   002A7C  0012               	return		;funcret
  1416   002A7E                     __end_of_toggle_tricolour_LED:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _initUSART4 *****************
  1420 ;; Defined at:
  1421 ;;		line 8 in file "serial.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text2
  1450   0036B6                     __ptext2:
  1451                           	callstack 0
  1452   0036B6                     _initUSART4:
  1453                           	callstack 29
  1454   0036B6                     
  1455                           ;serial.c: 9:     RC0PPS = 0x12;
  1456   0036B6  0E12               	movlw	18
  1457   0036B8  010E               	movlb	14	; () banked
  1458   0036BA  6F62               	movwf	98,b	;volatile
  1459                           
  1460                           ;serial.c: 10:     RX4PPS = 0x11;
  1461   0036BC  0E11               	movlw	17
  1462   0036BE  6F15               	movwf	21,b	;volatile
  1463   0036C0                     
  1464                           ; BSR set to: 14
  1465                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1466   0036C0  97E9               	bcf	233,3,b	;volatile
  1467   0036C2                     
  1468                           ; BSR set to: 14
  1469                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1470   0036C2  95E8               	bcf	232,2,b	;volatile
  1471                           
  1472                           ;serial.c: 14:     SP4BRGL = 51;
  1473   0036C4  0E33               	movlw	51
  1474   0036C6  6FE5               	movwf	229,b	;volatile
  1475                           
  1476                           ;serial.c: 15:     SP4BRGH = 0;
  1477   0036C8  0E00               	movlw	0
  1478   0036CA  6FE6               	movwf	230,b	;volatile
  1479   0036CC                     
  1480                           ; BSR set to: 14
  1481                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1482   0036CC  89E7               	bsf	231,4,b	;volatile
  1483   0036CE                     
  1484                           ; BSR set to: 14
  1485                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1486   0036CE  8BE8               	bsf	232,5,b	;volatile
  1487   0036D0                     
  1488                           ; BSR set to: 14
  1489                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1490   0036D0  8FE7               	bsf	231,7,b	;volatile
  1491   0036D2                     
  1492                           ; BSR set to: 14
  1493   0036D2  0012               	return		;funcret
  1494   0036D4                     __end_of_initUSART4:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _initDCmotorsPWM *****************
  1498 ;; Defined at:
  1499 ;;		line 7 in file "dc_motor.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;Total ram usage:        2 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text3
  1528   002D50                     __ptext3:
  1529                           	callstack 0
  1530   002D50                     _initDCmotorsPWM:
  1531                           	callstack 29
  1532   002D50                     
  1533                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  1534   002D50  9485               	bcf	133,2,c	;volatile
  1535                           
  1536                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1537   002D52  9885               	bcf	133,4,c	;volatile
  1538                           
  1539                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  1540   002D54  9E83               	bcf	131,7,c	;volatile
  1541                           
  1542                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  1543   002D56  9C87               	bcf	135,6,c	;volatile
  1544                           
  1545                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  1546   002D58  947D               	bcf	125,2,c	;volatile
  1547                           
  1548                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  1549   002D5A  987D               	bcf	125,4,c	;volatile
  1550                           
  1551                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  1552   002D5C  9E7B               	bcf	123,7,c	;volatile
  1553                           
  1554                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  1555   002D5E  9C7F               	bcf	127,6,c	;volatile
  1556   002D60                     
  1557                           ;dc_motor.c: 19:     RE2PPS=0x05;
  1558   002D60  0E05               	movlw	5
  1559   002D62  010E               	movlb	14	; () banked
  1560   002D64  6F74               	movwf	116,b	;volatile
  1561                           
  1562                           ;dc_motor.c: 20:     RE4PPS=0x06;
  1563   002D66  0E06               	movlw	6
  1564   002D68  6F76               	movwf	118,b	;volatile
  1565                           
  1566                           ;dc_motor.c: 21:     RC7PPS=0x07;
  1567   002D6A  0E07               	movlw	7
  1568   002D6C  6F69               	movwf	105,b	;volatile
  1569                           
  1570                           ;dc_motor.c: 22:     RG6PPS=0x08;
  1571   002D6E  0E08               	movlw	8
  1572   002D70  6F88               	movwf	136,b	;volatile
  1573                           
  1574                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  1575   002D72  50BD               	movf	189,w,c	;volatile
  1576   002D74  0B8F               	andlw	-113
  1577   002D76  0940               	iorlw	64
  1578   002D78  6EBD               	movwf	189,c	;volatile
  1579                           
  1580                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  1581   002D7A  0EE0               	movlw	-32
  1582   002D7C  16BE               	andwf	190,f,c	;volatile
  1583                           
  1584                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  1585   002D7E  50BF               	movf	191,w,c	;volatile
  1586   002D80  0BF0               	andlw	-16
  1587   002D82  0901               	iorlw	1
  1588   002D84  6EBF               	movwf	191,c	;volatile
  1589   002D86                     
  1590                           ; BSR set to: 14
  1591                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  1592   002D86  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1593   002D8A                     
  1594                           ; BSR set to: 14
  1595                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  1596   002D8A  8EBD               	bsf	189,7,c	;volatile
  1597                           
  1598                           ;dc_motor.c: 36:         CCPR1H=0;
  1599   002D8C  0E00               	movlw	0
  1600   002D8E  6EAA               	movwf	170,c	;volatile
  1601                           
  1602                           ;dc_motor.c: 37:         CCPR2H=0;
  1603   002D90  0E00               	movlw	0
  1604   002D92  6EA6               	movwf	166,c	;volatile
  1605                           
  1606                           ;dc_motor.c: 38:         CCPR3H=0;
  1607   002D94  0E00               	movlw	0
  1608   002D96  010F               	movlb	15	; () banked
  1609   002D98  6F25               	movwf	37,b	;volatile
  1610                           
  1611                           ;dc_motor.c: 39:         CCPR4H=0;
  1612   002D9A  0E00               	movlw	0
  1613   002D9C  6F21               	movwf	33,b	;volatile
  1614                           
  1615                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  1616   002D9E  0EFC               	movlw	-4
  1617   002DA0  16AD               	andwf	173,f,c	;volatile
  1618                           
  1619                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  1620   002DA2  0EF3               	movlw	-13
  1621   002DA4  16AD               	andwf	173,f,c	;volatile
  1622                           
  1623                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  1624   002DA6  0ECF               	movlw	-49
  1625   002DA8  16AD               	andwf	173,f,c	;volatile
  1626                           
  1627                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  1628   002DAA  0E3F               	movlw	-193
  1629   002DAC  16AD               	andwf	173,f,c	;volatile
  1630   002DAE                     
  1631                           ; BSR set to: 15
  1632                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  1633   002DAE  88AB               	bsf	171,4,c	;volatile
  1634                           
  1635                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  1636   002DB0  50AB               	movf	171,w,c	;volatile
  1637   002DB2  0BF0               	andlw	-16
  1638   002DB4  090C               	iorlw	12
  1639   002DB6  6EAB               	movwf	171,c	;volatile
  1640   002DB8                     
  1641                           ; BSR set to: 15
  1642                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  1643   002DB8  8EAB               	bsf	171,7,c	;volatile
  1644   002DBA                     
  1645                           ; BSR set to: 15
  1646                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  1647   002DBA  88A7               	bsf	167,4,c	;volatile
  1648                           
  1649                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  1650   002DBC  50A7               	movf	167,w,c	;volatile
  1651   002DBE  0BF0               	andlw	-16
  1652   002DC0  090C               	iorlw	12
  1653   002DC2  6EA7               	movwf	167,c	;volatile
  1654   002DC4                     
  1655                           ; BSR set to: 15
  1656                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  1657   002DC4  8EA7               	bsf	167,7,c	;volatile
  1658   002DC6                     
  1659                           ; BSR set to: 15
  1660                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  1661   002DC6  8926               	bsf	38,4,b	;volatile
  1662                           
  1663                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  1664   002DC8  5126               	movf	38,w,b	;volatile
  1665   002DCA  0BF0               	andlw	-16
  1666   002DCC  090C               	iorlw	12
  1667   002DCE  6F26               	movwf	38,b	;volatile
  1668   002DD0                     
  1669                           ; BSR set to: 15
  1670                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  1671   002DD0  8F26               	bsf	38,7,b	;volatile
  1672   002DD2                     
  1673                           ; BSR set to: 15
  1674                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  1675   002DD2  8922               	bsf	34,4,b	;volatile
  1676                           
  1677                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  1678   002DD4  5122               	movf	34,w,b	;volatile
  1679   002DD6  0BF0               	andlw	-16
  1680   002DD8  090C               	iorlw	12
  1681   002DDA  6F22               	movwf	34,b	;volatile
  1682   002DDC                     
  1683                           ; BSR set to: 15
  1684                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  1685   002DDC  8F22               	bsf	34,7,b	;volatile
  1686   002DDE                     
  1687                           ; BSR set to: 15
  1688   002DDE  0012               	return		;funcret
  1689   002DE0                     __end_of_initDCmotorsPWM:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _forward_navigation *****************
  1693 ;; Defined at:
  1694 ;;		line 99 in file "timers.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  mL              1   84[COMRAM] PTR struct DC_motor
  1697 ;;		 -> main@motorL(9), 
  1698 ;;  mR              1   85[COMRAM] PTR struct DC_motor
  1699 ;;		 -> main@motorR(9), 
  1700 ;;  p1              1   86[COMRAM] PTR struct HSV_val
  1701 ;;		 -> main@HSV_colour(6), 
  1702 ;;  p2              1   87[COMRAM] PTR struct RGBC_val
  1703 ;;		 -> main@RGBC_colour(8), 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  mann            1   90[COMRAM] unsigned char 
  1706 ;;  timerL          1   89[COMRAM] unsigned char 
  1707 ;;  timerH          1   88[COMRAM] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;Total ram usage:        7 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 7
  1724 ;; This function calls:
  1725 ;;		_average_RGBC
  1726 ;;		_colour_to_key
  1727 ;;		_convert_HSV
  1728 ;;		_read_timer
  1729 ;;		_reset_timer
  1730 ;;		_scale_RGB
  1731 ;;		_sendArrayCharSerial4
  1732 ;;		_sendHSVvalSerial4
  1733 ;;		_sendRGBCvalSerial4
  1734 ;;		_stop
  1735 ;;		_wait_for_wall
  1736 ;;		_write_trail
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text4
  1743   0027E4                     __ptext4:
  1744                           	callstack 0
  1745   0027E4                     _forward_navigation:
  1746                           	callstack 23
  1747   0027E4                     
  1748                           ;timers.c: 99: void forward_navigation(DC_motor *mL, DC_motor *mR, HSV_val *p1, RGBC_val
      +                           *p2);timers.c: 100: {;timers.c: 101:     while (!returning) {
  1749   0027E4  EF67  F014         	goto	l4480
  1750   0027E8                     l4436:
  1751                           
  1752                           ;timers.c: 102:         unsigned char timerH = 0;
  1753   0027E8  0E00               	movlw	0
  1754   0027EA  6E59               	movwf	forward_navigation@timerH^0,c
  1755                           
  1756                           ;timers.c: 103:         unsigned char timerL = 0;
  1757   0027EC  0E00               	movlw	0
  1758   0027EE  6E5A               	movwf	forward_navigation@timerL^0,c
  1759   0027F0                     
  1760                           ;timers.c: 106:         reset_timer();
  1761   0027F0  EC95  F01B         	call	_reset_timer	;wreg free
  1762   0027F4                     
  1763                           ;timers.c: 109:         wait_for_wall(p2, lost_flag);
  1764   0027F4  C058  F00D         	movff	forward_navigation@p2,wait_for_wall@p
  1765   0027F8  C1A5  F00E         	movff	_lost_flag,wait_for_wall@loss
  1766   0027FC  EC53  F01A         	call	_wait_for_wall	;wreg free
  1767   002800                     
  1768                           ;timers.c: 111:         read_timer(&timerH, &timerL);
  1769   002800  0E59               	movlw	low forward_navigation@timerH
  1770   002802  6E01               	movwf	read_timer@tH^0,c
  1771   002804  0E5A               	movlw	low forward_navigation@timerL
  1772   002806  6E02               	movwf	read_timer@tL^0,c
  1773   002808  EC84  F01B         	call	_read_timer	;wreg free
  1774   00280C                     
  1775                           ;timers.c: 112:         stop(mL, mR);
  1776   00280C  C055  F013         	movff	forward_navigation@mL,stop@mL
  1777   002810  C056  F014         	movff	forward_navigation@mR,stop@mR
  1778   002814  ECF0  F016         	call	_stop	;wreg free
  1779   002818                     
  1780                           ;timers.c: 114:         average_RGBC(p2);
  1781   002818  C058  F00E         	movff	forward_navigation@p2,average_RGBC@p
  1782   00281C  EC40  F010         	call	_average_RGBC	;wreg free
  1783   002820                     
  1784                           ;timers.c: 115:         scale_RGB(p2);
  1785   002820  C058  F032         	movff	forward_navigation@p2,scale_RGB@p
  1786   002824  EC70  F014         	call	_scale_RGB	;wreg free
  1787   002828                     
  1788                           ;timers.c: 117:         convert_HSV(p1, p2);
  1789   002828  C057  F00E         	movff	forward_navigation@p1,convert_HSV@p1
  1790   00282C  C058  F00F         	movff	forward_navigation@p2,convert_HSV@p2
  1791   002830  EC0D  F007         	call	_convert_HSV	;wreg free
  1792   002834                     
  1793                           ;timers.c: 118:         mann = colour_to_key(p1, p2);
  1794   002834  C057  F001         	movff	forward_navigation@p1,colour_to_key@p1
  1795   002838  C058  F002         	movff	forward_navigation@p2,colour_to_key@p2
  1796   00283C  EC73  F00A         	call	_colour_to_key	;wreg free
  1797   002840  6E5B               	movwf	forward_navigation@mann^0,c
  1798   002842                     
  1799                           ;timers.c: 127:         if (lost_flag) {
  1800   002842  0101               	movlb	1	; () banked
  1801   002844  51A5               	movf	_lost_flag& (0+255),w,b
  1802   002846  B4D8               	btfsc	status,2,c
  1803   002848  EF28  F014         	goto	u3831
  1804   00284C  EF2A  F014         	goto	u3830
  1805   002850                     u3831:
  1806   002850  EF2E  F014         	goto	l4460
  1807   002854                     u3830:
  1808   002854                     
  1809                           ; BSR set to: 1
  1810                           ;timers.c: 128:             timerH = 0b11111111;
  1811   002854  6859               	setf	forward_navigation@timerH^0,c
  1812                           
  1813                           ;timers.c: 129:             timerL = 0b11111111;
  1814   002856  685A               	setf	forward_navigation@timerL^0,c
  1815   002858                     
  1816                           ; BSR set to: 1
  1817                           ;timers.c: 130:             mann = 8;
  1818   002858  0E08               	movlw	8
  1819   00285A  6E5B               	movwf	forward_navigation@mann^0,c
  1820   00285C                     l4460:
  1821                           
  1822                           ; BSR set to: 1
  1823                           ;timers.c: 133:         if (manoeuvre_count == 19) {
  1824   00285C  0E13               	movlw	19
  1825   00285E  19A4               	xorwf	_manoeuvre_count& (0+255),w,b
  1826   002860  A4D8               	btfss	status,2,c
  1827   002862  EF35  F014         	goto	u3841
  1828   002866  EF37  F014         	goto	u3840
  1829   00286A                     u3841:
  1830   00286A  EF39  F014         	goto	l4464
  1831   00286E                     u3840:
  1832   00286E                     
  1833                           ; BSR set to: 1
  1834                           ;timers.c: 134:             mann = 8;
  1835   00286E  0E08               	movlw	8
  1836   002870  6E5B               	movwf	forward_navigation@mann^0,c
  1837   002872                     l4464:
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;timers.c: 137:         write_trail(timerH, timerL, mann);
  1841   002872  C05A  F001         	movff	forward_navigation@timerL,write_trail@tL
  1842   002876  C05B  F002         	movff	forward_navigation@mann,write_trail@man
  1843   00287A  5059               	movf	forward_navigation@timerH^0,w,c
  1844   00287C  EC95  F01A         	call	_write_trail
  1845   002880                     
  1846                           ;timers.c: 140:         if (mann == 8) {
  1847   002880  0E08               	movlw	8
  1848   002882  185B               	xorwf	forward_navigation@mann^0,w,c
  1849   002884  A4D8               	btfss	status,2,c
  1850   002886  EF47  F014         	goto	u3851
  1851   00288A  EF49  F014         	goto	u3850
  1852   00288E                     u3851:
  1853   00288E  EF4B  F014         	goto	l4470
  1854   002892                     u3850:
  1855   002892                     
  1856                           ;timers.c: 141:             returning = 1;
  1857   002892  0E01               	movlw	1
  1858   002894  6E5E               	movwf	_returning^0,c
  1859   002896                     l4470:
  1860                           
  1861                           ;timers.c: 144:         sendRGBCvalSerial4(p2);
  1862   002896  C058  F03A         	movff	forward_navigation@p2,sendRGBCvalSerial4@col_val
  1863   00289A  ECC0  F018         	call	_sendRGBCvalSerial4	;wreg free
  1864   00289E                     
  1865                           ;timers.c: 145:         sendHSVvalSerial4(p1);
  1866   00289E  C057  F03A         	movff	forward_navigation@p1,sendHSVvalSerial4@col_val
  1867   0028A2  ECE5  F019         	call	_sendHSVvalSerial4	;wreg free
  1868   0028A6                     
  1869                           ;timers.c: 146:         sendArrayCharSerial4(trail_timer_high);
  1870   0028A6  0ECE               	movlw	low _trail_timer_high
  1871   0028A8  6E3A               	movwf	sendArrayCharSerial4@arr^0,c
  1872   0028AA  0E01               	movlw	high _trail_timer_high
  1873   0028AC  6E3B               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1874   0028AE  ECB3  F017         	call	_sendArrayCharSerial4	;wreg free
  1875   0028B2                     
  1876                           ;timers.c: 147:         sendArrayCharSerial4(trail_timer_low);
  1877   0028B2  0EBA               	movlw	low _trail_timer_low
  1878   0028B4  6E3A               	movwf	sendArrayCharSerial4@arr^0,c
  1879   0028B6  0E01               	movlw	high _trail_timer_low
  1880   0028B8  6E3B               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1881   0028BA  ECB3  F017         	call	_sendArrayCharSerial4	;wreg free
  1882   0028BE                     
  1883                           ;timers.c: 148:         sendArrayCharSerial4(trail_manoeuvre);
  1884   0028BE  0EA6               	movlw	low _trail_manoeuvre
  1885   0028C0  6E3A               	movwf	sendArrayCharSerial4@arr^0,c
  1886   0028C2  0E01               	movlw	high _trail_manoeuvre
  1887   0028C4  6E3B               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1888   0028C6  ECB3  F017         	call	_sendArrayCharSerial4	;wreg free
  1889                           
  1890                           ;timers.c: 150:         break;
  1891   0028CA  EF6F  F014         	goto	l701
  1892   0028CE                     l4480:
  1893                           
  1894                           ;timers.c: 101:     while (!returning) {
  1895   0028CE  505E               	movf	_returning^0,w,c
  1896   0028D0  B4D8               	btfsc	status,2,c
  1897   0028D2  EF6D  F014         	goto	u3861
  1898   0028D6  EF6F  F014         	goto	u3860
  1899   0028DA                     u3861:
  1900   0028DA  EFF4  F013         	goto	l4436
  1901   0028DE                     u3860:
  1902   0028DE                     l701:
  1903   0028DE  0012               	return		;funcret
  1904   0028E0                     __end_of_forward_navigation:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _write_trail *****************
  1908 ;; Defined at:
  1909 ;;		line 83 in file "timers.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  tH              1    wreg     unsigned char 
  1912 ;;  tL              1    0[COMRAM] unsigned char 
  1913 ;;  man             1    1[COMRAM] unsigned char 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  tH              1    2[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;Total ram usage:        3 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_forward_navigation
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text5
  1940   00352A                     __ptext5:
  1941                           	callstack 0
  1942   00352A                     _write_trail:
  1943                           	callstack 28
  1944                           
  1945                           ;incstack = 0
  1946                           ;write_trail@tH stored from wreg
  1947   00352A  6E03               	movwf	write_trail@tH^0,c
  1948   00352C                     
  1949                           ;timers.c: 83: void write_trail(unsigned char tH, unsigned char tL, unsigned char man);t
      +                          imers.c: 84: {;timers.c: 85:     *timer_high_pointer = tH;
  1950   00352C  C0AC  FFD9         	movff	_timer_high_pointer,fsr2l
  1951   003530  C0AD  FFDA         	movff	_timer_high_pointer+1,fsr2h
  1952   003534  C003  FFDF         	movff	write_trail@tH,indf2
  1953   003538                     
  1954                           ;timers.c: 86:     *timer_low_pointer = tL;
  1955   003538  C0AA  FFD9         	movff	_timer_low_pointer,fsr2l
  1956   00353C  C0AB  FFDA         	movff	_timer_low_pointer+1,fsr2h
  1957   003540  C001  FFDF         	movff	write_trail@tL,indf2
  1958   003544                     
  1959                           ;timers.c: 87:     *manoeuvre_pointer = man;
  1960   003544  C0A8  FFD9         	movff	_manoeuvre_pointer,fsr2l
  1961   003548  C0A9  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  1962   00354C  C002  FFDF         	movff	write_trail@man,indf2
  1963   003550                     
  1964                           ;timers.c: 89:     timer_high_pointer ++;
  1965   003550  0100               	movlb	0	; () banked
  1966   003552  4BAC               	infsnz	_timer_high_pointer& (0+255),f,b
  1967   003554  2BAD               	incf	(_timer_high_pointer+1)& (0+255),f,b
  1968   003556                     
  1969                           ; BSR set to: 0
  1970                           ;timers.c: 90:     timer_low_pointer ++;
  1971   003556  4BAA               	infsnz	_timer_low_pointer& (0+255),f,b
  1972   003558  2BAB               	incf	(_timer_low_pointer+1)& (0+255),f,b
  1973   00355A                     
  1974                           ; BSR set to: 0
  1975                           ;timers.c: 91:     manoeuvre_pointer ++;
  1976   00355A  4BA8               	infsnz	_manoeuvre_pointer& (0+255),f,b
  1977   00355C  2BA9               	incf	(_manoeuvre_pointer+1)& (0+255),f,b
  1978   00355E                     
  1979                           ; BSR set to: 0
  1980                           ;timers.c: 93:     manoeuvre_count ++;
  1981   00355E  0101               	movlb	1	; () banked
  1982   003560  2BA4               	incf	_manoeuvre_count& (0+255),f,b
  1983   003562                     
  1984                           ; BSR set to: 1
  1985   003562  0012               	return		;funcret
  1986   003564                     __end_of_write_trail:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _wait_for_wall *****************
  1990 ;; Defined at:
  1991 ;;		line 162 in file "color.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  p               1   12[COMRAM] PTR struct RGBC_val
  1994 ;;		 -> main@RGBC_colour(8), 
  1995 ;;  loss            1   13[COMRAM] unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;Total ram usage:        4 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 5
  2014 ;; This function calls:
  2015 ;;		_getRGBCval
  2016 ;; This function is called by:
  2017 ;;		_forward_navigation
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text6
  2022   0034A6                     __ptext6:
  2023                           	callstack 0
  2024   0034A6                     _wait_for_wall:
  2025                           	callstack 24
  2026   0034A6                     
  2027                           ;color.c: 162: void wait_for_wall(struct RGBC_val *p, unsigned char loss);color.c: 163: 
      +                          {;color.c: 164:     while (!loss) {
  2028   0034A6  EF6B  F01A         	goto	l3754
  2029   0034AA                     l3748:
  2030                           
  2031                           ;color.c: 165:         getRGBCval(p);
  2032   0034AA  C00D  F00C         	movff	wait_for_wall@p,getRGBCval@p
  2033   0034AE  EC1A  F019         	call	_getRGBCval	;wreg free
  2034   0034B2  500D               	movf	wait_for_wall@p^0,w,c
  2035   0034B4  6ED9               	movwf	fsr2l,c
  2036   0034B6  6ADA               	clrf	fsr2h,c
  2037   0034B8  0E06               	movlw	6
  2038   0034BA  26D9               	addwf	fsr2l,f,c
  2039   0034BC  0E2C               	movlw	44
  2040   0034BE  5CDE               	subwf	postinc2,w,c
  2041   0034C0  0E01               	movlw	1
  2042   0034C2  58DE               	subwfb	postinc2,w,c
  2043   0034C4  B0D8               	btfsc	status,0,c
  2044   0034C6  EF67  F01A         	goto	u3021
  2045   0034CA  EF69  F01A         	goto	u3020
  2046   0034CE                     u3021:
  2047   0034CE  EF6B  F01A         	goto	l3754
  2048   0034D2                     u3020:
  2049   0034D2  EF73  F01A         	goto	l96
  2050   0034D6                     l3754:
  2051                           
  2052                           ;color.c: 164:     while (!loss) {
  2053   0034D6  500E               	movf	wait_for_wall@loss^0,w,c
  2054   0034D8  B4D8               	btfsc	status,2,c
  2055   0034DA  EF71  F01A         	goto	u3031
  2056   0034DE  EF73  F01A         	goto	u3030
  2057   0034E2                     u3031:
  2058   0034E2  EF55  F01A         	goto	l3748
  2059   0034E6                     u3030:
  2060   0034E6                     l96:
  2061   0034E6  0012               	return		;funcret
  2062   0034E8                     __end_of_wait_for_wall:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function _stop *****************
  2066 ;; Defined at:
  2067 ;;		line 93 in file "dc_motor.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  2070 ;;		 -> main@motorL(9), 
  2071 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  2072 ;;		 -> main@motorR(9), 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:        3 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 3
  2091 ;; This function calls:
  2092 ;;		_setMotorPWM
  2093 ;; This function is called by:
  2094 ;;		_forward_navigation
  2095 ;;		_turnLeft90
  2096 ;;		_turnRight90
  2097 ;;		_turnLeft135
  2098 ;;		_turnRight135
  2099 ;;		_UTurn
  2100 ;;		_headbuttReverse
  2101 ;;		_squareReverse
  2102 ;;		_return_to_sender
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text7
  2107   002DE0                     __ptext7:
  2108                           	callstack 0
  2109   002DE0                     _stop:
  2110                           	callstack 26
  2111   002DE0                     
  2112                           ;dc_motor.c: 93: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 94: {;dc_motor.c: 95:
      +                               while ((mL->power>0) || (mR->power>0)){
  2113   002DE0  EF20  F017         	goto	l3978
  2114   002DE4                     l3964:
  2115                           
  2116                           ;dc_motor.c: 96:         if (mL->power>0) {mL->power--;}
  2117   002DE4  5013               	movf	stop@mL^0,w,c
  2118   002DE6  6ED9               	movwf	fsr2l,c
  2119   002DE8  6ADA               	clrf	fsr2h,c
  2120   002DEA  50DF               	movf	indf2,w,c
  2121   002DEC  B4D8               	btfsc	status,2,c
  2122   002DEE  EFFB  F016         	goto	u3481
  2123   002DF2  EFFD  F016         	goto	u3480
  2124   002DF6                     u3481:
  2125   002DF6  EF01  F017         	goto	l3968
  2126   002DFA                     u3480:
  2127   002DFA  5013               	movf	stop@mL^0,w,c
  2128   002DFC  6ED9               	movwf	fsr2l,c
  2129   002DFE  6ADA               	clrf	fsr2h,c
  2130   002E00  06DF               	decf	indf2,f,c
  2131   002E02                     l3968:
  2132                           
  2133                           ;dc_motor.c: 97:         if (mR->power>0) {mR->power--;}
  2134   002E02  5014               	movf	stop@mR^0,w,c
  2135   002E04  6ED9               	movwf	fsr2l,c
  2136   002E06  6ADA               	clrf	fsr2h,c
  2137   002E08  50DF               	movf	indf2,w,c
  2138   002E0A  B4D8               	btfsc	status,2,c
  2139   002E0C  EF0A  F017         	goto	u3491
  2140   002E10  EF0C  F017         	goto	u3490
  2141   002E14                     u3491:
  2142   002E14  EF10  F017         	goto	l3972
  2143   002E18                     u3490:
  2144   002E18  5014               	movf	stop@mR^0,w,c
  2145   002E1A  6ED9               	movwf	fsr2l,c
  2146   002E1C  6ADA               	clrf	fsr2h,c
  2147   002E1E  06DF               	decf	indf2,f,c
  2148   002E20                     l3972:
  2149                           
  2150                           ;dc_motor.c: 98:         setMotorPWM(mL);
  2151   002E20  C013  F00E         	movff	stop@mL,setMotorPWM@m
  2152   002E24  ECC5  F012         	call	_setMotorPWM	;wreg free
  2153   002E28                     
  2154                           ;dc_motor.c: 99:         setMotorPWM(mR);
  2155   002E28  C014  F00E         	movff	stop@mR,setMotorPWM@m
  2156   002E2C  ECC5  F012         	call	_setMotorPWM	;wreg free
  2157   002E30                     
  2158                           ;dc_motor.c: 100:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  2159   002E30  0EA7               	movlw	167
  2160   002E32  6E15               	movwf	??_stop^0,c
  2161   002E34  0E3A               	movlw	58
  2162   002E36                     u3927:
  2163   002E36  2EE8               	decfsz	wreg,f,c
  2164   002E38  D7FE               	bra	u3927
  2165   002E3A  2E15               	decfsz	??_stop^0,f,c
  2166   002E3C  D7FC               	bra	u3927
  2167   002E3E  D000               	nop2	
  2168   002E40                     l3978:
  2169                           
  2170                           ;dc_motor.c: 95:     while ((mL->power>0) || (mR->power>0)){
  2171   002E40  5013               	movf	stop@mL^0,w,c
  2172   002E42  6ED9               	movwf	fsr2l,c
  2173   002E44  6ADA               	clrf	fsr2h,c
  2174   002E46  50DF               	movf	indf2,w,c
  2175   002E48  A4D8               	btfss	status,2,c
  2176   002E4A  EF29  F017         	goto	u3501
  2177   002E4E  EF2B  F017         	goto	u3500
  2178   002E52                     u3501:
  2179   002E52  EFF2  F016         	goto	l3964
  2180   002E56                     u3500:
  2181   002E56  5014               	movf	stop@mR^0,w,c
  2182   002E58  6ED9               	movwf	fsr2l,c
  2183   002E5A  6ADA               	clrf	fsr2h,c
  2184   002E5C  50DF               	movf	indf2,w,c
  2185   002E5E  A4D8               	btfss	status,2,c
  2186   002E60  EF34  F017         	goto	u3511
  2187   002E64  EF36  F017         	goto	u3510
  2188   002E68                     u3511:
  2189   002E68  EFF2  F016         	goto	l3964
  2190   002E6C                     u3510:
  2191   002E6C  0012               	return		;funcret
  2192   002E6E                     __end_of_stop:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _setMotorPWM *****************
  2196 ;; Defined at:
  2197 ;;		line 68 in file "dc_motor.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  m               1   13[COMRAM] PTR struct DC_motor
  2200 ;;		 -> main@motorR(9), main@motorL(9), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  negDuty         1   17[COMRAM] unsigned char 
  2203 ;;  posDuty         1   16[COMRAM] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2213 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;Total ram usage:        5 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 2
  2220 ;; This function calls:
  2221 ;;		___lwdiv
  2222 ;;		___wmul
  2223 ;; This function is called by:
  2224 ;;		_stop
  2225 ;;		_turnLeft
  2226 ;;		_turnRight
  2227 ;;		_fullSpeedAhead
  2228 ;;		_fullSpeedReverse
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text8
  2233   00258A                     __ptext8:
  2234                           	callstack 0
  2235   00258A                     _setMotorPWM:
  2236                           	callstack 26
  2237   00258A                     
  2238                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  2239   00258A  500E               	movf	setMotorPWM@m^0,w,c
  2240   00258C  6ED9               	movwf	fsr2l,c
  2241   00258E  6ADA               	clrf	fsr2h,c
  2242   002590  0E02               	movlw	2
  2243   002592  26D9               	addwf	fsr2l,f,c
  2244   002594  50DF               	movf	indf2,w,c
  2245   002596  B4D8               	btfsc	status,2,c
  2246   002598  EFD0  F012         	goto	u2551
  2247   00259C  EFD2  F012         	goto	u2550
  2248   0025A0                     u2551:
  2249   0025A0  EF02  F013         	goto	l3376
  2250   0025A4                     u2550:
  2251   0025A4                     
  2252                           ;dc_motor.c: 73:         posDuty=(unsigned char)(m->PWMperiod - ((unsigned int)(m->power
      +                          )*(m->PWMperiod))/100);
  2253   0025A4  500E               	movf	setMotorPWM@m^0,w,c
  2254   0025A6  6ED9               	movwf	fsr2l,c
  2255   0025A8  6ADA               	clrf	fsr2h,c
  2256   0025AA  50DF               	movf	indf2,w,c
  2257   0025AC  6E0F               	movwf	??_setMotorPWM^0,c
  2258   0025AE  500F               	movf	??_setMotorPWM^0,w,c
  2259   0025B0  6E01               	movwf	___wmul@multiplier^0,c
  2260   0025B2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2261   0025B4  500E               	movf	setMotorPWM@m^0,w,c
  2262   0025B6  6ED9               	movwf	fsr2l,c
  2263   0025B8  6ADA               	clrf	fsr2h,c
  2264   0025BA  0E03               	movlw	3
  2265   0025BC  26D9               	addwf	fsr2l,f,c
  2266   0025BE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2267   0025C2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2268   0025C6  EC26  F01B         	call	___wmul	;wreg free
  2269   0025CA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2270   0025CE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2271   0025D2  0E00               	movlw	0
  2272   0025D4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2273   0025D6  0E64               	movlw	100
  2274   0025D8  6E09               	movwf	___lwdiv@divisor^0,c
  2275   0025DA  ECEE  F017         	call	___lwdiv	;wreg free
  2276   0025DE  500E               	movf	setMotorPWM@m^0,w,c
  2277   0025E0  6ED9               	movwf	fsr2l,c
  2278   0025E2  6ADA               	clrf	fsr2h,c
  2279   0025E4  0E03               	movlw	3
  2280   0025E6  26D9               	addwf	fsr2l,f,c
  2281   0025E8  50DF               	movf	indf2,w,c
  2282   0025EA  6E10               	movwf	(??_setMotorPWM+1)^0,c
  2283   0025EC  5007               	movf	?___lwdiv^0,w,c
  2284   0025EE  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  2285   0025F0  6E11               	movwf	setMotorPWM@posDuty^0,c
  2286   0025F2                     
  2287                           ;dc_motor.c: 74:         negDuty=(unsigned char)(m->PWMperiod);
  2288   0025F2  500E               	movf	setMotorPWM@m^0,w,c
  2289   0025F4  6ED9               	movwf	fsr2l,c
  2290   0025F6  6ADA               	clrf	fsr2h,c
  2291   0025F8  0E03               	movlw	3
  2292   0025FA  26D9               	addwf	fsr2l,f,c
  2293   0025FC  50DF               	movf	indf2,w,c
  2294   0025FE  6E12               	movwf	setMotorPWM@negDuty^0,c
  2295                           
  2296                           ;dc_motor.c: 75:     }
  2297   002600  EF23  F013         	goto	l3380
  2298   002604                     l3376:
  2299                           
  2300                           ;dc_motor.c: 77:         posDuty=0;
  2301   002604  0E00               	movlw	0
  2302   002606  6E11               	movwf	setMotorPWM@posDuty^0,c
  2303   002608                     
  2304                           ;dc_motor.c: 78:   negDuty=(unsigned char)(((unsigned int)(m->power)*(m->PWMperiod))/100
      +                          );
  2305   002608  500E               	movf	setMotorPWM@m^0,w,c
  2306   00260A  6ED9               	movwf	fsr2l,c
  2307   00260C  6ADA               	clrf	fsr2h,c
  2308   00260E  50DF               	movf	indf2,w,c
  2309   002610  6E0F               	movwf	??_setMotorPWM^0,c
  2310   002612  500F               	movf	??_setMotorPWM^0,w,c
  2311   002614  6E01               	movwf	___wmul@multiplier^0,c
  2312   002616  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2313   002618  500E               	movf	setMotorPWM@m^0,w,c
  2314   00261A  6ED9               	movwf	fsr2l,c
  2315   00261C  6ADA               	clrf	fsr2h,c
  2316   00261E  0E03               	movlw	3
  2317   002620  26D9               	addwf	fsr2l,f,c
  2318   002622  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2319   002626  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2320   00262A  EC26  F01B         	call	___wmul	;wreg free
  2321   00262E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2322   002632  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2323   002636  0E00               	movlw	0
  2324   002638  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2325   00263A  0E64               	movlw	100
  2326   00263C  6E09               	movwf	___lwdiv@divisor^0,c
  2327   00263E  ECEE  F017         	call	___lwdiv	;wreg free
  2328   002642  5007               	movf	?___lwdiv^0,w,c
  2329   002644  6E12               	movwf	setMotorPWM@negDuty^0,c
  2330   002646                     l3380:
  2331                           
  2332                           ;dc_motor.c: 81:     if (m->direction) {
  2333   002646  500E               	movf	setMotorPWM@m^0,w,c
  2334   002648  6ED9               	movwf	fsr2l,c
  2335   00264A  6ADA               	clrf	fsr2h,c
  2336   00264C  0E01               	movlw	1
  2337   00264E  26D9               	addwf	fsr2l,f,c
  2338   002650  50DF               	movf	indf2,w,c
  2339   002652  B4D8               	btfsc	status,2,c
  2340   002654  EF2E  F013         	goto	u2561
  2341   002658  EF30  F013         	goto	u2560
  2342   00265C                     u2561:
  2343   00265C  EF50  F013         	goto	l3384
  2344   002660                     u2560:
  2345   002660                     
  2346                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  2347   002660  500E               	movf	setMotorPWM@m^0,w,c
  2348   002662  6ED9               	movwf	fsr2l,c
  2349   002664  6ADA               	clrf	fsr2h,c
  2350   002666  0E05               	movlw	5
  2351   002668  26D9               	addwf	fsr2l,f,c
  2352   00266A  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2353   00266E  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2354   002672  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2355   002676  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2356   00267A  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  2357                           
  2358                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  2359   00267E  500E               	movf	setMotorPWM@m^0,w,c
  2360   002680  6ED9               	movwf	fsr2l,c
  2361   002682  6ADA               	clrf	fsr2h,c
  2362   002684  0E07               	movlw	7
  2363   002686  26D9               	addwf	fsr2l,f,c
  2364   002688  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2365   00268C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2366   002690  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2367   002694  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2368   002698  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  2369                           
  2370                           ;dc_motor.c: 84:     } else {
  2371   00269C  EF6E  F013         	goto	l217
  2372   0026A0                     l3384:
  2373                           
  2374                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  2375   0026A0  500E               	movf	setMotorPWM@m^0,w,c
  2376   0026A2  6ED9               	movwf	fsr2l,c
  2377   0026A4  6ADA               	clrf	fsr2h,c
  2378   0026A6  0E05               	movlw	5
  2379   0026A8  26D9               	addwf	fsr2l,f,c
  2380   0026AA  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2381   0026AE  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2382   0026B2  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2383   0026B6  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2384   0026BA  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  2385                           
  2386                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  2387   0026BE  500E               	movf	setMotorPWM@m^0,w,c
  2388   0026C0  6ED9               	movwf	fsr2l,c
  2389   0026C2  6ADA               	clrf	fsr2h,c
  2390   0026C4  0E07               	movlw	7
  2391   0026C6  26D9               	addwf	fsr2l,f,c
  2392   0026C8  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2393   0026CC  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2394   0026D0  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2395   0026D4  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2396   0026D8  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  2397   0026DC                     l217:
  2398   0026DC  0012               	return		;funcret
  2399   0026DE                     __end_of_setMotorPWM:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function ___wmul *****************
  2403 ;; Defined at:
  2404 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  multiplier      2    0[COMRAM] unsigned int 
  2407 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  product         2    4[COMRAM] unsigned int 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    0[COMRAM] unsigned int 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, prodl, prodh
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;Total ram usage:        6 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_setMotorPWM
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text9
  2434   00364C                     __ptext9:
  2435                           	callstack 0
  2436   00364C                     ___wmul:
  2437                           	callstack 26
  2438   00364C  5001               	movf	___wmul@multiplier^0,w,c
  2439   00364E  0203               	mulwf	___wmul@multiplicand^0,c
  2440   003650  CFF3 F005          	movff	prodl,___wmul@product
  2441   003654  CFF4 F006          	movff	prodh,___wmul@product+1
  2442   003658  5001               	movf	___wmul@multiplier^0,w,c
  2443   00365A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2444   00365C  50F3               	movf	243,w,c
  2445   00365E  2606               	addwf	(___wmul@product+1)^0,f,c
  2446   003660  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2447   003662  0203               	mulwf	___wmul@multiplicand^0,c
  2448   003664  50F3               	movf	243,w,c
  2449   003666  2606               	addwf	(___wmul@product+1)^0,f,c
  2450   003668  C005  F001         	movff	___wmul@product,?___wmul
  2451   00366C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2452   003670  0012               	return		;funcret
  2453   003672                     __end_of___wmul:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _sendRGBCvalSerial4 *****************
  2457 ;; Defined at:
  2458 ;;		line 75 in file "serial.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  col_val         1   57[COMRAM] PTR struct RGBC_val
  2461 ;;		 -> main@RGBC_colour(8), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  tempStr        26   58[COMRAM] unsigned char [26]
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;Total ram usage:       27 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 6
  2480 ;; This function calls:
  2481 ;;		_sendStringSerial4
  2482 ;;		_sprintf
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;;		_forward_navigation
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text10
  2490   003180                     __ptext10:
  2491                           	callstack 0
  2492   003180                     _sendRGBCvalSerial4:
  2493                           	callstack 24
  2494   003180                     
  2495                           ;serial.c: 76:     char tempStr[26];;serial.c: 78:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  2496   003180  0E3B               	movlw	low sendRGBCvalSerial4@tempStr
  2497   003182  6E20               	movwf	sprintf@s^0,c
  2498   003184  6A21               	clrf	(sprintf@s+1)^0,c
  2499   003186  0E01               	movlw	low STR_5
  2500   003188  6E22               	movwf	sprintf@fmt^0,c
  2501   00318A  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2502   00318C  6ED9               	movwf	fsr2l,c
  2503   00318E  6ADA               	clrf	fsr2h,c
  2504   003190  CFDE F023          	movff	postinc2,?_sprintf+3
  2505   003194  CFDD F024          	movff	postdec2,?_sprintf+4
  2506   003198  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2507   00319A  6ED9               	movwf	fsr2l,c
  2508   00319C  6ADA               	clrf	fsr2h,c
  2509   00319E  0E02               	movlw	2
  2510   0031A0  26D9               	addwf	fsr2l,f,c
  2511   0031A2  CFDE F025          	movff	postinc2,?_sprintf+5
  2512   0031A6  CFDD F026          	movff	postdec2,?_sprintf+6
  2513   0031AA  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2514   0031AC  6ED9               	movwf	fsr2l,c
  2515   0031AE  6ADA               	clrf	fsr2h,c
  2516   0031B0  0E04               	movlw	4
  2517   0031B2  26D9               	addwf	fsr2l,f,c
  2518   0031B4  CFDE F027          	movff	postinc2,?_sprintf+7
  2519   0031B8  CFDD F028          	movff	postdec2,?_sprintf+8
  2520   0031BC  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2521   0031BE  6ED9               	movwf	fsr2l,c
  2522   0031C0  6ADA               	clrf	fsr2h,c
  2523   0031C2  0E06               	movlw	6
  2524   0031C4  26D9               	addwf	fsr2l,f,c
  2525   0031C6  CFDE F029          	movff	postinc2,?_sprintf+9
  2526   0031CA  CFDD F02A          	movff	postdec2,?_sprintf+10
  2527   0031CE  EC0B  F01A         	call	_sprintf	;wreg free
  2528   0031D2                     
  2529                           ;serial.c: 79:     sendStringSerial4(tempStr);
  2530   0031D2  0E3B               	movlw	low sendRGBCvalSerial4@tempStr
  2531   0031D4  6E02               	movwf	sendStringSerial4@string^0,c
  2532   0031D6  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  2533   0031D8  EC8F  F018         	call	_sendStringSerial4	;wreg free
  2534   0031DC  0012               	return		;funcret
  2535   0031DE                     __end_of_sendRGBCvalSerial4:
  2536                           	callstack 0
  2537                           
  2538 ;; *************** function _sendHSVvalSerial4 *****************
  2539 ;; Defined at:
  2540 ;;		line 85 in file "serial.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  col_val         1   57[COMRAM] PTR struct HSV_val
  2543 ;;		 -> main@HSV_colour(6), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  tempStr        21   58[COMRAM] unsigned char [21]
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;Total ram usage:       22 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 6
  2562 ;; This function calls:
  2563 ;;		_sendStringSerial4
  2564 ;;		_sprintf
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;;		_forward_navigation
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text11
  2572   0033CA                     __ptext11:
  2573                           	callstack 0
  2574   0033CA                     _sendHSVvalSerial4:
  2575                           	callstack 24
  2576   0033CA                     
  2577                           ;serial.c: 86:     char tempStr[21];;serial.c: 88:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  2578   0033CA  0E3B               	movlw	low sendHSVvalSerial4@tempStr
  2579   0033CC  6E20               	movwf	sprintf@s^0,c
  2580   0033CE  6A21               	clrf	(sprintf@s+1)^0,c
  2581   0033D0  0E04               	movlw	low (STR_5+3)
  2582   0033D2  6E22               	movwf	sprintf@fmt^0,c
  2583   0033D4  503A               	movf	sendHSVvalSerial4@col_val^0,w,c
  2584   0033D6  6ED9               	movwf	fsr2l,c
  2585   0033D8  6ADA               	clrf	fsr2h,c
  2586   0033DA  CFDE F023          	movff	postinc2,?_sprintf+3
  2587   0033DE  CFDD F024          	movff	postdec2,?_sprintf+4
  2588   0033E2  503A               	movf	sendHSVvalSerial4@col_val^0,w,c
  2589   0033E4  6ED9               	movwf	fsr2l,c
  2590   0033E6  6ADA               	clrf	fsr2h,c
  2591   0033E8  0E02               	movlw	2
  2592   0033EA  26D9               	addwf	fsr2l,f,c
  2593   0033EC  CFDE F025          	movff	postinc2,?_sprintf+5
  2594   0033F0  CFDD F026          	movff	postdec2,?_sprintf+6
  2595   0033F4  503A               	movf	sendHSVvalSerial4@col_val^0,w,c
  2596   0033F6  6ED9               	movwf	fsr2l,c
  2597   0033F8  6ADA               	clrf	fsr2h,c
  2598   0033FA  0E04               	movlw	4
  2599   0033FC  26D9               	addwf	fsr2l,f,c
  2600   0033FE  CFDE F027          	movff	postinc2,?_sprintf+7
  2601   003402  CFDD F028          	movff	postdec2,?_sprintf+8
  2602   003406  EC0B  F01A         	call	_sprintf	;wreg free
  2603   00340A                     
  2604                           ;serial.c: 89:     sendStringSerial4(tempStr);
  2605   00340A  0E3B               	movlw	low sendHSVvalSerial4@tempStr
  2606   00340C  6E02               	movwf	sendStringSerial4@string^0,c
  2607   00340E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  2608   003410  EC8F  F018         	call	_sendStringSerial4	;wreg free
  2609   003414  0012               	return		;funcret
  2610   003416                     __end_of_sendHSVvalSerial4:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _sendArrayCharSerial4 *****************
  2614 ;; Defined at:
  2615 ;;		line 61 in file "serial.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  arr             2   57[COMRAM] PTR unsigned char 
  2618 ;;		 -> trail_manoeuvre(20), trail_timer_low(20), trail_timer_high(20), 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  i               2  162[BANK1 ] unsigned int 
  2621 ;;  tempStr       161    0[BANK1 ] unsigned char [161]
  2622 ;;  index           1  161[BANK1 ] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;      Locals:         0       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2635 ;;      Totals:         3       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2636 ;;Total ram usage:      167 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 6
  2639 ;; This function calls:
  2640 ;;		_sendStringSerial4
  2641 ;;		_sprintf
  2642 ;; This function is called by:
  2643 ;;		_forward_navigation
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text12
  2648   002F66                     __ptext12:
  2649                           	callstack 0
  2650   002F66                     _sendArrayCharSerial4:
  2651                           	callstack 23
  2652   002F66                     
  2653                           ;serial.c: 63:     unsigned char index = 0;
  2654   002F66  0E00               	movlw	0
  2655   002F68  0101               	movlb	1	; () banked
  2656   002F6A  6FA1               	movwf	sendArrayCharSerial4@index& (0+255),b
  2657                           
  2658                           ;serial.c: 64:     char tempStr[20 * 8 + 1];;serial.c: 65:     for (unsigned int i = 0; 
      +                          i < 20; i++) {
  2659   002F6C  0E00               	movlw	0
  2660   002F6E  6FA3               	movwf	(sendArrayCharSerial4@i+1)& (0+255),b
  2661   002F70  0E00               	movlw	0
  2662   002F72  6FA2               	movwf	sendArrayCharSerial4@i& (0+255),b
  2663   002F74                     l4426:
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;serial.c: 66:         index += sprintf(&tempStr[index], "%d ", arr[i]);
  2667   002F74  0E00               	movlw	low sendArrayCharSerial4@tempStr
  2668   002F76  25A1               	addwf	sendArrayCharSerial4@index& (0+255),w,b
  2669   002F78  6E20               	movwf	sprintf@s^0,c
  2670   002F7A  6A21               	clrf	(sprintf@s+1)^0,c
  2671   002F7C  0E01               	movlw	high sendArrayCharSerial4@tempStr
  2672   002F7E  2221               	addwfc	(sprintf@s+1)^0,f,c
  2673   002F80  0E14               	movlw	low STR_2
  2674   002F82  6E22               	movwf	sprintf@fmt^0,c
  2675   002F84  51A2               	movf	sendArrayCharSerial4@i& (0+255),w,b
  2676   002F86  243A               	addwf	sendArrayCharSerial4@arr^0,w,c
  2677   002F88  6ED9               	movwf	fsr2l,c
  2678   002F8A  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  2679   002F8C  203B               	addwfc	(sendArrayCharSerial4@arr+1)^0,w,c
  2680   002F8E  6EDA               	movwf	fsr2h,c
  2681   002F90  50DF               	movf	indf2,w,c
  2682   002F92  6E3C               	movwf	??_sendArrayCharSerial4^0,c
  2683   002F94  503C               	movf	??_sendArrayCharSerial4^0,w,c
  2684   002F96  6E23               	movwf	(?_sprintf+3)^0,c
  2685   002F98  6A24               	clrf	(?_sprintf+4)^0,c
  2686   002F9A  EC0B  F01A         	call	_sprintf	;wreg free
  2687   002F9E  5020               	movf	?_sprintf^0,w,c
  2688   002FA0  0101               	movlb	1	; () banked
  2689   002FA2  27A1               	addwf	sendArrayCharSerial4@index& (0+255),f,b
  2690   002FA4                     
  2691                           ; BSR set to: 1
  2692                           ;serial.c: 67:     }
  2693   002FA4  4BA2               	infsnz	sendArrayCharSerial4@i& (0+255),f,b
  2694   002FA6  2BA3               	incf	(sendArrayCharSerial4@i+1)& (0+255),f,b
  2695   002FA8                     
  2696                           ; BSR set to: 1
  2697   002FA8  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  2698   002FAA  E109               	bnz	u3820
  2699   002FAC  0E14               	movlw	20
  2700   002FAE  5DA2               	subwf	sendArrayCharSerial4@i& (0+255),w,b
  2701   002FB0  A0D8               	btfss	status,0,c
  2702   002FB2  EFDD  F017         	goto	u3821
  2703   002FB6  EFDF  F017         	goto	u3820
  2704   002FBA                     u3821:
  2705   002FBA  EFBA  F017         	goto	l4426
  2706   002FBE                     u3820:
  2707   002FBE                     
  2708                           ; BSR set to: 1
  2709                           ;serial.c: 68:     sendStringSerial4(tempStr);
  2710   002FBE  0E00               	movlw	low sendArrayCharSerial4@tempStr
  2711   002FC0  6E02               	movwf	sendStringSerial4@string^0,c
  2712   002FC2  0E01               	movlw	high sendArrayCharSerial4@tempStr
  2713   002FC4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2714   002FC6  EC8F  F018         	call	_sendStringSerial4	;wreg free
  2715                           
  2716                           ;serial.c: 69:     sendStringSerial4(" \r");
  2717   002FCA  0E11               	movlw	low (STR_1+2)
  2718   002FCC  6E02               	movwf	sendStringSerial4@string^0,c
  2719   002FCE  5002               	movf	sendStringSerial4@string^0,w,c
  2720   002FD0  A4D8               	btfss	status,2,c
  2721   002FD2  0E0E               	movlw	high __smallconst
  2722   002FD4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2723   002FD6  EC8F  F018         	call	_sendStringSerial4	;wreg free
  2724   002FDA  0012               	return		;funcret
  2725   002FDC                     __end_of_sendArrayCharSerial4:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _sprintf *****************
  2729 ;; Defined at:
  2730 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  s               2   31[COMRAM] PTR unsigned char 
  2733 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  2734 ;;  fmt             1   33[COMRAM] PTR const unsigned char 
  2735 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  f              12   45[COMRAM] struct _IO_FILE
  2738 ;;  ret             2   42[COMRAM] int 
  2739 ;;  ap              1   44[COMRAM] PTR void [1]
  2740 ;;		 -> ?_sprintf(2), 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2   31[COMRAM] int 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:       26 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 5
  2757 ;; This function calls:
  2758 ;;		_vfprintf
  2759 ;; This function is called by:
  2760 ;;		_sendArrayCharSerial4
  2761 ;;		_sendRGBCvalSerial4
  2762 ;;		_sendHSVvalSerial4
  2763 ;;		_sendIntSerial4
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text13
  2768   003416                     __ptext13:
  2769                           	callstack 0
  2770   003416                     _sprintf:
  2771                           	callstack 24
  2772   003416  0E23               	movlw	low (?_sprintf+3)
  2773   003418  6E2D               	movwf	sprintf@ap^0,c
  2774   00341A  C020  F02E         	movff	sprintf@s,sprintf@f
  2775   00341E  C021  F02F         	movff	sprintf@s+1,sprintf@f+1
  2776   003422  0E00               	movlw	0
  2777   003424  6E32               	movwf	(sprintf@f+4)^0,c
  2778   003426  0E00               	movlw	0
  2779   003428  6E31               	movwf	(sprintf@f+3)^0,c
  2780   00342A  0E00               	movlw	0
  2781   00342C  6E39               	movwf	(sprintf@f+11)^0,c
  2782   00342E  0E00               	movlw	0
  2783   003430  6E38               	movwf	(sprintf@f+10)^0,c
  2784   003432  0E2E               	movlw	low sprintf@f
  2785   003434  6E1C               	movwf	vfprintf@fp^0,c
  2786   003436  C022  F01D         	movff	sprintf@fmt,vfprintf@fmt
  2787   00343A  0E2D               	movlw	low sprintf@ap
  2788   00343C  6E1E               	movwf	vfprintf@ap^0,c
  2789   00343E  ECEF  F018         	call	_vfprintf	;wreg free
  2790   003442  C01C  F02B         	movff	?_vfprintf,sprintf@ret
  2791   003446  C01D  F02C         	movff	?_vfprintf+1,sprintf@ret+1
  2792   00344A  5031               	movf	(sprintf@f+3)^0,w,c
  2793   00344C  2420               	addwf	sprintf@s^0,w,c
  2794   00344E  6ED9               	movwf	fsr2l,c
  2795   003450  5032               	movf	(sprintf@f+4)^0,w,c
  2796   003452  2021               	addwfc	(sprintf@s+1)^0,w,c
  2797   003454  6EDA               	movwf	fsr2h,c
  2798   003456  6ADF               	clrf	indf2,c
  2799   003458  C02B  F020         	movff	sprintf@ret,?_sprintf
  2800   00345C  C02C  F021         	movff	sprintf@ret+1,?_sprintf+1
  2801   003460  0012               	return		;funcret
  2802   003462                     __end_of_sprintf:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _vfprintf *****************
  2806 ;; Defined at:
  2807 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  2810 ;;		 -> sprintf@f(12), 
  2811 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  2812 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2813 ;;  ap              1   29[COMRAM] PTR PTR void 
  2814 ;;		 -> sprintf@ap(1), 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  2817 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2   27[COMRAM] int 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2827 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;Total ram usage:        4 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 4
  2834 ;; This function calls:
  2835 ;;		_vfpfcnvrt
  2836 ;; This function is called by:
  2837 ;;		_sprintf
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text14
  2842   0031DE                     __ptext14:
  2843                           	callstack 0
  2844   0031DE                     _vfprintf:
  2845                           	callstack 24
  2846   0031DE                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2848   0031DE  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  2849   0031E2                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2851   0031E2  0E00               	movlw	0
  2852   0031E4  0100               	movlb	0	; () banked
  2853   0031E6  6F81               	movwf	(_nout+1)& (0+255),b
  2854   0031E8  0E00               	movlw	0
  2855   0031EA  6F80               	movwf	_nout& (0+255),b
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2858   0031EC  EF05  F019         	goto	l3342
  2859   0031F0                     l3340:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2863   0031F0  C01C  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2864   0031F4  0E1F               	movlw	low vfprintf@cfmt
  2865   0031F6  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  2866   0031F8  C01E  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  2867   0031FC  ECBA  F00E         	call	_vfpfcnvrt	;wreg free
  2868   003200  500E               	movf	?_vfpfcnvrt^0,w,c
  2869   003202  0100               	movlb	0	; () banked
  2870   003204  2780               	addwf	_nout& (0+255),f,b
  2871   003206  500F               	movf	(?_vfpfcnvrt+1)^0,w,c
  2872   003208  2381               	addwfc	(_nout+1)& (0+255),f,b
  2873   00320A                     l3342:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2877   00320A  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  2878   00320E                     	if	1	;There is more than 1 active tblptr byte
  2879   00320E  0E0E               	movlw	high __smallconst
  2880   003210  6EF7               	movwf	tblptrh,c
  2881   003212                     	endif
  2882   003212                     	if	0	;tblptru may be non-zero
  2883   003212                     	endif
  2884   003212                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2885   003212  0E00               	movlw	low (__smallconst shr (0+16))
  2886   003214  6EF8               	movwf	tblptru,c
  2887   003216                     	endif
  2888   003216  0008               	tblrd		*
  2889   003218  50F5               	movf	tablat,w,c
  2890   00321A  0900               	iorlw	0
  2891   00321C  A4D8               	btfss	status,2,c
  2892   00321E  EF13  F019         	goto	u2501
  2893   003222  EF15  F019         	goto	u2500
  2894   003226                     u2501:
  2895   003226  EFF8  F018         	goto	l3340
  2896   00322A                     u2500:
  2897   00322A                     
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2900   00322A  C080  F01C         	movff	_nout,?_vfprintf
  2901   00322E  C081  F01D         	movff	_nout+1,?_vfprintf+1
  2902   003232                     
  2903                           ; BSR set to: 0
  2904   003232  0012               	return		;funcret
  2905   003234                     __end_of_vfprintf:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _vfpfcnvrt *****************
  2909 ;; Defined at:
  2910 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2913 ;;		 -> sprintf@f(12), 
  2914 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  2915 ;;		 -> vfprintf@cfmt(1), 
  2916 ;;  ap              1   15[COMRAM] PTR PTR void 
  2917 ;;		 -> sprintf@ap(1), 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  convarg         4   22[COMRAM] struct .
  2920 ;;  cnt             2   19[COMRAM] int 
  2921 ;;  c               1   26[COMRAM] unsigned char 
  2922 ;;  cp              1   21[COMRAM] PTR unsigned char 
  2923 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2924 ;;  done            1   18[COMRAM] _Bool 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2   13[COMRAM] int 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;Total ram usage:       14 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 3
  2941 ;; This function calls:
  2942 ;;		___awdiv
  2943 ;;		___awmod
  2944 ;;		___lwdiv
  2945 ;;		___lwmod
  2946 ;;		_abs
  2947 ;;		_fputc
  2948 ;; This function is called by:
  2949 ;;		_vfprintf
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text15
  2954   001D74                     __ptext15:
  2955                           	callstack 0
  2956   001D74                     _vfpfcnvrt:
  2957                           	callstack 24
  2958   001D74                     
  2959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  2960   001D74  0E00               	movlw	0
  2961   001D76  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  2962   001D78  0E00               	movlw	0
  2963   001D7A  6E14               	movwf	vfpfcnvrt@cnt^0,c
  2964   001D7C                     
  2965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  2966   001D7C  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2967   001D7E  6ED9               	movwf	fsr2l,c
  2968   001D80  6ADA               	clrf	fsr2h,c
  2969   001D82  CFDF FFF6          	movff	indf2,tblptrl
  2970   001D86                     	if	1	;There is more than 1 active tblptr byte
  2971   001D86  0E0E               	movlw	high __smallconst
  2972   001D88  6EF7               	movwf	tblptrh,c
  2973   001D8A                     	endif
  2974   001D8A                     	if	0	;tblptru may be non-zero
  2975   001D8A                     	endif
  2976   001D8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2977   001D8A  0E00               	movlw	low (__smallconst shr (0+16))
  2978   001D8C  6EF8               	movwf	tblptru,c
  2979   001D8E                     	endif
  2980   001D8E  0008               	tblrd		*
  2981   001D90  50F5               	movf	tablat,w,c
  2982   001D92  0A25               	xorlw	37
  2983   001D94  A4D8               	btfss	status,2,c
  2984   001D96  EFCF  F00E         	goto	u2231
  2985   001D9A  EFD1  F00E         	goto	u2230
  2986   001D9E                     u2231:
  2987   001D9E  EF26  F010         	goto	l3222
  2988   001DA2                     u2230:
  2989   001DA2                     
  2990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2991   001DA2  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2992   001DA4  6ED9               	movwf	fsr2l,c
  2993   001DA6  6ADA               	clrf	fsr2h,c
  2994   001DA8  2ADF               	incf	indf2,f,c
  2995   001DAA                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2997   001DAA  0E00               	movlw	0
  2998   001DAC  0100               	movlb	0	; () banked
  2999   001DAE  6F83               	movwf	(_width+1)& (0+255),b
  3000   001DB0  0E00               	movlw	0
  3001   001DB2  6F82               	movwf	_width& (0+255),b
  3002   001DB4  C082  F086         	movff	_width,_flags
  3003   001DB8                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3006   001DB8  6984               	setf	_prec& (0+255),b
  3007   001DBA  6985               	setf	(_prec+1)& (0+255),b
  3008   001DBC                     
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3011   001DBC  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3012   001DBE  6ED9               	movwf	fsr2l,c
  3013   001DC0  6ADA               	clrf	fsr2h,c
  3014   001DC2  50DF               	movf	indf2,w,c
  3015   001DC4  6E16               	movwf	vfpfcnvrt@cp^0,c
  3016   001DC6                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3019   001DC6  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3020   001DCA                     	if	1	;There is more than 1 active tblptr byte
  3021   001DCA  0E0E               	movlw	high __smallconst
  3022   001DCC  6EF7               	movwf	tblptrh,c
  3023   001DCE                     	endif
  3024   001DCE                     	if	0	;tblptru may be non-zero
  3025   001DCE                     	endif
  3026   001DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3027   001DCE  0E00               	movlw	low (__smallconst shr (0+16))
  3028   001DD0  6EF8               	movwf	tblptru,c
  3029   001DD2                     	endif
  3030   001DD2  0008               	tblrd		*
  3031   001DD4  50F5               	movf	tablat,w,c
  3032   001DD6  0A64               	xorlw	100
  3033   001DD8  B4D8               	btfsc	status,2,c
  3034   001DDA  EFF1  F00E         	goto	u2241
  3035   001DDE  EFF3  F00E         	goto	u2240
  3036   001DE2                     u2241:
  3037   001DE2  EF03  F00F         	goto	l3158
  3038   001DE6                     u2240:
  3039   001DE6                     
  3040                           ; BSR set to: 0
  3041   001DE6  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3042   001DEA                     	if	1	;There is more than 1 active tblptr byte
  3043   001DEA  0E0E               	movlw	high __smallconst
  3044   001DEC  6EF7               	movwf	tblptrh,c
  3045   001DEE                     	endif
  3046   001DEE                     	if	0	;tblptru may be non-zero
  3047   001DEE                     	endif
  3048   001DEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3049   001DEE  0E00               	movlw	low (__smallconst shr (0+16))
  3050   001DF0  6EF8               	movwf	tblptru,c
  3051   001DF2                     	endif
  3052   001DF2  0008               	tblrd		*
  3053   001DF4  50F5               	movf	tablat,w,c
  3054   001DF6  0A69               	xorlw	105
  3055   001DF8  A4D8               	btfss	status,2,c
  3056   001DFA  EF01  F00F         	goto	u2251
  3057   001DFE  EF03  F00F         	goto	u2250
  3058   001E02                     u2251:
  3059   001E02  EF91  F00F         	goto	l3188
  3060   001E06                     u2250:
  3061   001E06                     l3158:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3065   001E06  5010               	movf	vfpfcnvrt@ap^0,w,c
  3066   001E08  6ED9               	movwf	fsr2l,c
  3067   001E0A  6ADA               	clrf	fsr2h,c
  3068   001E0C  0E02               	movlw	2
  3069   001E0E  26DF               	addwf	indf2,f,c
  3070   001E10  5CDF               	subwf	indf2,w,c
  3071   001E12  6ED9               	movwf	fsr2l,c
  3072   001E14  6ADA               	clrf	fsr2h,c
  3073   001E16  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3074   001E1A  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3075   001E1E                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3078   001E1E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3079   001E20  6ED9               	movwf	fsr2l,c
  3080   001E22  6ADA               	clrf	fsr2h,c
  3081   001E24  2816               	incf	vfpfcnvrt@cp^0,w,c
  3082   001E26  6EDF               	movwf	indf2,c
  3083   001E28                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3086   001E28  0E20               	movlw	32
  3087   001E2A  6E1B               	movwf	vfpfcnvrt@c^0,c
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3090   001E2C  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3091   001E2E  EF1B  F00F         	goto	u2261
  3092   001E32  EF1E  F00F         	goto	u2260
  3093   001E36                     u2261:
  3094   001E36  0E01               	movlw	1
  3095   001E38  EF1F  F00F         	goto	u2270
  3096   001E3C                     u2260:
  3097   001E3C  0E00               	movlw	0
  3098   001E3E                     u2270:
  3099   001E3E  6E13               	movwf	vfpfcnvrt@done^0,c
  3100   001E40                     l3164:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3103   001E40  061B               	decf	vfpfcnvrt@c^0,f,c
  3104   001E42  501B               	movf	vfpfcnvrt@c^0,w,c
  3105   001E44  0F60               	addlw	low _dbuf
  3106   001E46  6ED9               	movwf	fsr2l,c
  3107   001E48  6ADA               	clrf	fsr2h,c
  3108   001E4A  C017  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3109   001E4E  C018  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3110   001E52  0E00               	movlw	0
  3111   001E54  6E04               	movwf	(___awmod@divisor+1)^0,c
  3112   001E56  0E0A               	movlw	10
  3113   001E58  6E03               	movwf	___awmod@divisor^0,c
  3114   001E5A  ECFE  F015         	call	___awmod	;wreg free
  3115   001E5E  C001  F007         	movff	?___awmod,abs@a
  3116   001E62  C002  F008         	movff	?___awmod+1,abs@a+1
  3117   001E66  ECB2  F01A         	call	_abs	;wreg free
  3118   001E6A  5007               	movf	?_abs^0,w,c
  3119   001E6C  0F30               	addlw	48
  3120   001E6E  6EDF               	movwf	indf2,c
  3121   001E70                     
  3122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3123   001E70  C017  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3124   001E74  C018  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3125   001E78  0E00               	movlw	0
  3126   001E7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3127   001E7C  0E0A               	movlw	10
  3128   001E7E  6E03               	movwf	___awdiv@divisor^0,c
  3129   001E80  EC3F  F015         	call	___awdiv	;wreg free
  3130   001E84  C001  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  3131   001E88  C002  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3132   001E8C                     
  3133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  3134   001E8C  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  3135   001E8E  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  3136   001E90                     
  3137                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3138   001E90  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3139   001E92  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3140   001E94  B4D8               	btfsc	status,2,c
  3141   001E96  EF4F  F00F         	goto	u2281
  3142   001E9A  EF51  F00F         	goto	u2280
  3143   001E9E                     u2281:
  3144   001E9E  EF59  F00F         	goto	l3174
  3145   001EA2                     u2280:
  3146   001EA2  501B               	movf	vfpfcnvrt@c^0,w,c
  3147   001EA4  A4D8               	btfss	status,2,c
  3148   001EA6  EF57  F00F         	goto	u2291
  3149   001EAA  EF59  F00F         	goto	u2290
  3150   001EAE                     u2291:
  3151   001EAE  EF20  F00F         	goto	l3164
  3152   001EB2                     u2290:
  3153   001EB2                     l3174:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3156   001EB2  501B               	movf	vfpfcnvrt@c^0,w,c
  3157   001EB4  B4D8               	btfsc	status,2,c
  3158   001EB6  EF5F  F00F         	goto	u2301
  3159   001EBA  EF61  F00F         	goto	u2300
  3160   001EBE                     u2301:
  3161   001EBE  EF82  F00F         	goto	l3186
  3162   001EC2                     u2300:
  3163   001EC2  5013               	movf	vfpfcnvrt@done^0,w,c
  3164   001EC4  B4D8               	btfsc	status,2,c
  3165   001EC6  EF67  F00F         	goto	u2311
  3166   001ECA  EF69  F00F         	goto	u2310
  3167   001ECE                     u2311:
  3168   001ECE  EF82  F00F         	goto	l3186
  3169   001ED2                     u2310:
  3170   001ED2                     
  3171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3172   001ED2  061B               	decf	vfpfcnvrt@c^0,f,c
  3173   001ED4  501B               	movf	vfpfcnvrt@c^0,w,c
  3174   001ED6  0F60               	addlw	low _dbuf
  3175   001ED8  6ED9               	movwf	fsr2l,c
  3176   001EDA  6ADA               	clrf	fsr2h,c
  3177   001EDC  0E2D               	movlw	45
  3178   001EDE  6EDF               	movwf	indf2,c
  3179   001EE0                     
  3180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  3181   001EE0  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  3182   001EE2  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  3183   001EE4  EF82  F00F         	goto	l3186
  3184   001EE8                     l3182:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3187   001EE8  501B               	movf	vfpfcnvrt@c^0,w,c
  3188   001EEA  0F60               	addlw	low _dbuf
  3189   001EEC  6ED9               	movwf	fsr2l,c
  3190   001EEE  6ADA               	clrf	fsr2h,c
  3191   001EF0  50DF               	movf	indf2,w,c
  3192   001EF2  6E11               	movwf	??_vfpfcnvrt^0,c
  3193   001EF4  5011               	movf	??_vfpfcnvrt^0,w,c
  3194   001EF6  6E01               	movwf	fputc@c^0,c
  3195   001EF8  6A02               	clrf	(fputc@c+1)^0,c
  3196   001EFA  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3197   001EFE  ECA1  F015         	call	_fputc	;wreg free
  3198   001F02  2A1B               	incf	vfpfcnvrt@c^0,f,c
  3199   001F04                     l3186:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3202   001F04  0E20               	movlw	32
  3203   001F06  181B               	xorwf	vfpfcnvrt@c^0,w,c
  3204   001F08  A4D8               	btfss	status,2,c
  3205   001F0A  EF89  F00F         	goto	u2321
  3206   001F0E  EF8B  F00F         	goto	u2320
  3207   001F12                     u2321:
  3208   001F12  EF74  F00F         	goto	l3182
  3209   001F16                     u2320:
  3210   001F16                     l1468:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  3213   001F16  C014  F00E         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  3214   001F1A  C015  F00F         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  3215   001F1E  EF3F  F010         	goto	l1469
  3216   001F22                     l3188:
  3217                           
  3218                           ; BSR set to: 0
  3219   001F22  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3220   001F26                     	if	1	;There is more than 1 active tblptr byte
  3221   001F26  0E0E               	movlw	high __smallconst
  3222   001F28  6EF7               	movwf	tblptrh,c
  3223   001F2A                     	endif
  3224   001F2A                     	if	0	;tblptru may be non-zero
  3225   001F2A                     	endif
  3226   001F2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3227   001F2A  0E00               	movlw	low (__smallconst shr (0+16))
  3228   001F2C  6EF8               	movwf	tblptru,c
  3229   001F2E                     	endif
  3230   001F2E  0008               	tblrd		*
  3231   001F30  50F5               	movf	tablat,w,c
  3232   001F32  0A75               	xorlw	117
  3233   001F34  A4D8               	btfss	status,2,c
  3234   001F36  EF9F  F00F         	goto	u2331
  3235   001F3A  EFA1  F00F         	goto	u2330
  3236   001F3E                     u2331:
  3237   001F3E  EF1C  F010         	goto	l3216
  3238   001F42                     u2330:
  3239   001F42                     
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  3242   001F42  5010               	movf	vfpfcnvrt@ap^0,w,c
  3243   001F44  6ED9               	movwf	fsr2l,c
  3244   001F46  6ADA               	clrf	fsr2h,c
  3245   001F48  0E02               	movlw	2
  3246   001F4A  26DF               	addwf	indf2,f,c
  3247   001F4C  5CDF               	subwf	indf2,w,c
  3248   001F4E  6ED9               	movwf	fsr2l,c
  3249   001F50  6ADA               	clrf	fsr2h,c
  3250   001F52  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3251   001F56  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3252   001F5A                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  3255   001F5A  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3256   001F5C  6ED9               	movwf	fsr2l,c
  3257   001F5E  6ADA               	clrf	fsr2h,c
  3258   001F60  2816               	incf	vfpfcnvrt@cp^0,w,c
  3259   001F62  6EDF               	movwf	indf2,c
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3262   001F64  EF04  F010         	goto	l3214
  3263   001F68                     l3194:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  3267   001F68  0E20               	movlw	32
  3268   001F6A  6E1B               	movwf	vfpfcnvrt@c^0,c
  3269   001F6C                     l3196:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  3272   001F6C  061B               	decf	vfpfcnvrt@c^0,f,c
  3273   001F6E  501B               	movf	vfpfcnvrt@c^0,w,c
  3274   001F70  0F60               	addlw	low _dbuf
  3275   001F72  6ED9               	movwf	fsr2l,c
  3276   001F74  6ADA               	clrf	fsr2h,c
  3277   001F76  C017  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  3278   001F7A  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  3279   001F7E  0E00               	movlw	0
  3280   001F80  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3281   001F82  0E0A               	movlw	10
  3282   001F84  6E03               	movwf	___lwmod@divisor^0,c
  3283   001F86  EC5D  F018         	call	___lwmod	;wreg free
  3284   001F8A  5001               	movf	?___lwmod^0,w,c
  3285   001F8C  0F30               	addlw	48
  3286   001F8E  6EDF               	movwf	indf2,c
  3287   001F90                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  3289   001F90  C017  F007         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  3290   001F94  C018  F008         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  3291   001F98  0E00               	movlw	0
  3292   001F9A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3293   001F9C  0E0A               	movlw	10
  3294   001F9E  6E09               	movwf	___lwdiv@divisor^0,c
  3295   001FA0  ECEE  F017         	call	___lwdiv	;wreg free
  3296   001FA4  C007  F017         	movff	?___lwdiv,vfpfcnvrt@convarg
  3297   001FA8  C008  F018         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  3298   001FAC                     
  3299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  3300   001FAC  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  3301   001FAE  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  3302   001FB0                     
  3303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  3304   001FB0  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3305   001FB2  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3306   001FB4  B4D8               	btfsc	status,2,c
  3307   001FB6  EFDF  F00F         	goto	u2341
  3308   001FBA  EFE1  F00F         	goto	u2340
  3309   001FBE                     u2341:
  3310   001FBE  EFF9  F00F         	goto	l3210
  3311   001FC2                     u2340:
  3312   001FC2  501B               	movf	vfpfcnvrt@c^0,w,c
  3313   001FC4  A4D8               	btfss	status,2,c
  3314   001FC6  EFE7  F00F         	goto	u2351
  3315   001FCA  EFE9  F00F         	goto	u2350
  3316   001FCE                     u2351:
  3317   001FCE  EFB6  F00F         	goto	l3196
  3318   001FD2                     u2350:
  3319   001FD2  EFF9  F00F         	goto	l3210
  3320   001FD6                     l3206:
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  3323   001FD6  501B               	movf	vfpfcnvrt@c^0,w,c
  3324   001FD8  0F60               	addlw	low _dbuf
  3325   001FDA  6ED9               	movwf	fsr2l,c
  3326   001FDC  6ADA               	clrf	fsr2h,c
  3327   001FDE  50DF               	movf	indf2,w,c
  3328   001FE0  6E11               	movwf	??_vfpfcnvrt^0,c
  3329   001FE2  5011               	movf	??_vfpfcnvrt^0,w,c
  3330   001FE4  6E01               	movwf	fputc@c^0,c
  3331   001FE6  6A02               	clrf	(fputc@c+1)^0,c
  3332   001FE8  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3333   001FEC  ECA1  F015         	call	_fputc	;wreg free
  3334   001FF0  2A1B               	incf	vfpfcnvrt@c^0,f,c
  3335   001FF2                     l3210:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  3338   001FF2  0E20               	movlw	32
  3339   001FF4  181B               	xorwf	vfpfcnvrt@c^0,w,c
  3340   001FF6  A4D8               	btfss	status,2,c
  3341   001FF8  EF00  F010         	goto	u2361
  3342   001FFC  EF02  F010         	goto	u2360
  3343   002000                     u2361:
  3344   002000  EFEB  F00F         	goto	l3206
  3345   002004                     u2360:
  3346   002004  EF8B  F00F         	goto	l1468
  3347   002008                     l3214:
  3348                           
  3349                           ; BSR set to: 0
  3350   002008  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3351   00200C                     	if	1	;There is more than 1 active tblptr byte
  3352   00200C  0E0E               	movlw	high __smallconst
  3353   00200E  6EF7               	movwf	tblptrh,c
  3354   002010                     	endif
  3355   002010                     	if	0	;tblptru may be non-zero
  3356   002010                     	endif
  3357   002010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3358   002010  0E00               	movlw	low (__smallconst shr (0+16))
  3359   002012  6EF8               	movwf	tblptru,c
  3360   002014                     	endif
  3361   002014  0008               	tblrd		*
  3362   002016  50F5               	movf	tablat,w,c
  3363   002018  6E11               	movwf	??_vfpfcnvrt^0,c
  3364   00201A  6A12               	clrf	(??_vfpfcnvrt+1)^0,c
  3365                           
  3366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3367                           ; Switch size 1, requested type "simple"
  3368                           ; Number of cases is 1, Range of values is 0 to 0
  3369                           ; switch strategies available:
  3370                           ; Name         Instructions Cycles
  3371                           ; simple_byte            4     3 (average)
  3372                           ;	Chosen strategy is simple_byte
  3373   00201C  5012               	movf	(??_vfpfcnvrt+1)^0,w,c
  3374   00201E  0A00               	xorlw	0	; case 0
  3375   002020  B4D8               	btfsc	status,2,c
  3376   002022  EF15  F010         	goto	l4566
  3377   002026  EF1C  F010         	goto	l3216
  3378   00202A                     l4566:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ; Switch size 1, requested type "simple"
  3382                           ; Number of cases is 1, Range of values is 117 to 117
  3383                           ; switch strategies available:
  3384                           ; Name         Instructions Cycles
  3385                           ; simple_byte            4     3 (average)
  3386                           ;	Chosen strategy is simple_byte
  3387   00202A  5011               	movf	??_vfpfcnvrt^0,w,c
  3388   00202C  0A75               	xorlw	117	; case 117
  3389   00202E  B4D8               	btfsc	status,2,c
  3390   002030  EFB4  F00F         	goto	l3194
  3391   002034  EF1C  F010         	goto	l3216
  3392   002038                     l3216:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3396   002038  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3397   00203A  6ED9               	movwf	fsr2l,c
  3398   00203C  6ADA               	clrf	fsr2h,c
  3399   00203E  2ADF               	incf	indf2,f,c
  3400   002040                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  3403   002040  0E00               	movlw	0
  3404   002042  6E0F               	movwf	(?_vfpfcnvrt+1)^0,c
  3405   002044  0E00               	movlw	0
  3406   002046  6E0E               	movwf	?_vfpfcnvrt^0,c
  3407   002048  EF3F  F010         	goto	l1469
  3408   00204C                     l3222:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3411   00204C  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3412   00204E  6ED9               	movwf	fsr2l,c
  3413   002050  6ADA               	clrf	fsr2h,c
  3414   002052  CFDF FFF6          	movff	indf2,tblptrl
  3415   002056                     	if	1	;There is more than 1 active tblptr byte
  3416   002056  0E0E               	movlw	high __smallconst
  3417   002058  6EF7               	movwf	tblptrh,c
  3418   00205A                     	endif
  3419   00205A                     	if	0	;tblptru may be non-zero
  3420   00205A                     	endif
  3421   00205A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3422   00205A  0E00               	movlw	low (__smallconst shr (0+16))
  3423   00205C  6EF8               	movwf	tblptru,c
  3424   00205E                     	endif
  3425   00205E  0008               	tblrd		*
  3426   002060  50F5               	movf	tablat,w,c
  3427   002062  6E01               	movwf	fputc@c^0,c
  3428   002064  6A02               	clrf	(fputc@c+1)^0,c
  3429   002066  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3430   00206A  ECA1  F015         	call	_fputc	;wreg free
  3431   00206E                     
  3432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  3433   00206E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3434   002070  6ED9               	movwf	fsr2l,c
  3435   002072  6ADA               	clrf	fsr2h,c
  3436   002074  2ADF               	incf	indf2,f,c
  3437   002076                     
  3438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  3439   002076  0E00               	movlw	0
  3440   002078  6E0F               	movwf	(?_vfpfcnvrt+1)^0,c
  3441   00207A  0E01               	movlw	1
  3442   00207C  6E0E               	movwf	?_vfpfcnvrt^0,c
  3443   00207E                     l1469:
  3444   00207E  0012               	return		;funcret
  3445   002080                     __end_of_vfpfcnvrt:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function _fputc *****************
  3449 ;; Defined at:
  3450 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  c               2    0[COMRAM] int 
  3453 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3454 ;;		 -> sprintf@f(12), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2    0[COMRAM] int 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3466 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;Total ram usage:        8 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 2
  3473 ;; This function calls:
  3474 ;;		_putch
  3475 ;; This function is called by:
  3476 ;;		_vfpfcnvrt
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text16
  3481   002B42                     __ptext16:
  3482                           	callstack 0
  3483   002B42                     _fputc:
  3484                           	callstack 24
  3485   002B42  5003               	movf	fputc@fp^0,w,c
  3486   002B44  B4D8               	btfsc	status,2,c
  3487   002B46  EFA7  F015         	goto	u2161
  3488   002B4A  EFA9  F015         	goto	u2160
  3489   002B4E                     u2161:
  3490   002B4E  EFB1  F015         	goto	l3098
  3491   002B52                     u2160:
  3492   002B52  5003               	movf	fputc@fp^0,w,c
  3493   002B54  A4D8               	btfss	status,2,c
  3494   002B56  EFAF  F015         	goto	u2171
  3495   002B5A  EFB1  F015         	goto	u2170
  3496   002B5E                     u2171:
  3497   002B5E  EFB6  F015         	goto	l3100
  3498   002B62                     u2170:
  3499   002B62                     l3098:
  3500   002B62  5001               	movf	fputc@c^0,w,c
  3501   002B64  ECB0  F01B         	call	_putch
  3502   002B68  EFFD  F015         	goto	l1507
  3503   002B6C                     l3100:
  3504   002B6C  5003               	movf	fputc@fp^0,w,c
  3505   002B6E  6ED9               	movwf	fsr2l,c
  3506   002B70  6ADA               	clrf	fsr2h,c
  3507   002B72  0E0A               	movlw	10
  3508   002B74  26D9               	addwf	fsr2l,f,c
  3509   002B76  50DE               	movf	postinc2,w,c
  3510   002B78  10DE               	iorwf	postinc2,w,c
  3511   002B7A  B4D8               	btfsc	status,2,c
  3512   002B7C  EFC2  F015         	goto	u2181
  3513   002B80  EFC4  F015         	goto	u2180
  3514   002B84                     u2181:
  3515   002B84  EFDD  F015         	goto	l3104
  3516   002B88                     u2180:
  3517   002B88  5003               	movf	fputc@fp^0,w,c
  3518   002B8A  6ED9               	movwf	fsr2l,c
  3519   002B8C  6ADA               	clrf	fsr2h,c
  3520   002B8E  0E0A               	movlw	10
  3521   002B90  26D9               	addwf	fsr2l,f,c
  3522   002B92  5003               	movf	fputc@fp^0,w,c
  3523   002B94  6EE1               	movwf	fsr1l,c
  3524   002B96  6AE2               	clrf	fsr1h,c
  3525   002B98  0E03               	movlw	3
  3526   002B9A  26E1               	addwf	fsr1l,f,c
  3527   002B9C  50DE               	movf	postinc2,w,c
  3528   002B9E  5CE6               	subwf	postinc1,w,c
  3529   002BA0  50E6               	movf	postinc1,w,c
  3530   002BA2  0A80               	xorlw	128
  3531   002BA4  6E08               	movwf	(??_fputc+4)^0,c
  3532   002BA6  50DE               	movf	postinc2,w,c
  3533   002BA8  0A80               	xorlw	128
  3534   002BAA  5808               	subwfb	(??_fputc+4)^0,w,c
  3535   002BAC  B0D8               	btfsc	status,0,c
  3536   002BAE  EFDB  F015         	goto	u2191
  3537   002BB2  EFDD  F015         	goto	u2190
  3538   002BB6                     u2191:
  3539   002BB6  EFFD  F015         	goto	l1507
  3540   002BBA                     u2190:
  3541   002BBA                     l3104:
  3542   002BBA  5003               	movf	fputc@fp^0,w,c
  3543   002BBC  6ED9               	movwf	fsr2l,c
  3544   002BBE  6ADA               	clrf	fsr2h,c
  3545   002BC0  0E03               	movlw	3
  3546   002BC2  26D9               	addwf	fsr2l,f,c
  3547   002BC4  CFDE F004          	movff	postinc2,??_fputc
  3548   002BC8  CFDD F005          	movff	postdec2,??_fputc+1
  3549   002BCC  5003               	movf	fputc@fp^0,w,c
  3550   002BCE  6ED9               	movwf	fsr2l,c
  3551   002BD0  6ADA               	clrf	fsr2h,c
  3552   002BD2  CFDE F006          	movff	postinc2,??_fputc+2
  3553   002BD6  CFDD F007          	movff	postdec2,??_fputc+3
  3554   002BDA  5004               	movf	??_fputc^0,w,c
  3555   002BDC  2406               	addwf	(??_fputc+2)^0,w,c
  3556   002BDE  6ED9               	movwf	fsr2l,c
  3557   002BE0  5005               	movf	(??_fputc+1)^0,w,c
  3558   002BE2  2007               	addwfc	(??_fputc+3)^0,w,c
  3559   002BE4  6EDA               	movwf	fsr2h,c
  3560   002BE6  C001  FFDF         	movff	fputc@c,indf2
  3561   002BEA  5003               	movf	fputc@fp^0,w,c
  3562   002BEC  6ED9               	movwf	fsr2l,c
  3563   002BEE  6ADA               	clrf	fsr2h,c
  3564   002BF0  0E03               	movlw	3
  3565   002BF2  26D9               	addwf	fsr2l,f,c
  3566   002BF4  2ADE               	incf	postinc2,f,c
  3567   002BF6  0E00               	movlw	0
  3568   002BF8  22DD               	addwfc	postdec2,f,c
  3569   002BFA                     l1507:
  3570   002BFA  0012               	return		;funcret
  3571   002BFC                     __end_of_fputc:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _putch *****************
  3575 ;; Defined at:
  3576 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  c               1    wreg     unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  c               1    0[COMRAM] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_fputc
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text17
  3605   003760                     __ptext17:
  3606                           	callstack 0
  3607   003760                     _putch:
  3608                           	callstack 24
  3609   003760  0012               	return		;funcret
  3610   003762                     __end_of_putch:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function _abs *****************
  3614 ;; Defined at:
  3615 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  a               2    6[COMRAM] int 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  2    6[COMRAM] int 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;Total ram usage:        4 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_vfpfcnvrt
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text18
  3644   003564                     __ptext18:
  3645                           	callstack 0
  3646   003564                     _abs:
  3647                           	callstack 25
  3648   003564  BE08               	btfsc	(abs@a+1)^0,7,c
  3649   003566  EFB7  F01A         	goto	u2201
  3650   00356A  EFB9  F01A         	goto	u2200
  3651   00356E                     u2201:
  3652   00356E  EFBF  F01A         	goto	l1492
  3653   003572                     u2200:
  3654   003572  C007  F007         	movff	abs@a,?_abs
  3655   003576  C008  F008         	movff	abs@a+1,?_abs+1
  3656   00357A  EFCB  F01A         	goto	l1495
  3657   00357E                     l1492:
  3658   00357E  C007  F009         	movff	abs@a,??_abs
  3659   003582  C008  F00A         	movff	abs@a+1,??_abs+1
  3660   003586  1E09               	comf	??_abs^0,f,c
  3661   003588  1E0A               	comf	(??_abs+1)^0,f,c
  3662   00358A  4A09               	infsnz	??_abs^0,f,c
  3663   00358C  2A0A               	incf	(??_abs+1)^0,f,c
  3664   00358E  C009  F007         	movff	??_abs,?_abs
  3665   003592  C00A  F008         	movff	??_abs+1,?_abs+1
  3666   003596                     l1495:
  3667   003596  0012               	return		;funcret
  3668   003598                     __end_of_abs:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function ___lwmod *****************
  3672 ;; Defined at:
  3673 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  dividend        2    0[COMRAM] unsigned int 
  3676 ;;  divisor         2    2[COMRAM] unsigned int 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  counter         1    4[COMRAM] unsigned char 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  2    0[COMRAM] unsigned int 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;Total ram usage:        5 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 1
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_vfpfcnvrt
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text19
  3703   0030BA                     __ptext19:
  3704                           	callstack 0
  3705   0030BA                     ___lwmod:
  3706                           	callstack 25
  3707   0030BA  5003               	movf	___lwmod@divisor^0,w,c
  3708   0030BC  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3709   0030BE  B4D8               	btfsc	status,2,c
  3710   0030C0  EF64  F018         	goto	u2131
  3711   0030C4  EF66  F018         	goto	u2130
  3712   0030C8                     u2131:
  3713   0030C8  EF8A  F018         	goto	l1250
  3714   0030CC                     u2130:
  3715   0030CC  0E01               	movlw	1
  3716   0030CE  6E05               	movwf	___lwmod@counter^0,c
  3717   0030D0  EF6E  F018         	goto	l3084
  3718   0030D4                     l3082:
  3719   0030D4  90D8               	bcf	status,0,c
  3720   0030D6  3603               	rlcf	___lwmod@divisor^0,f,c
  3721   0030D8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3722   0030DA  2A05               	incf	___lwmod@counter^0,f,c
  3723   0030DC                     l3084:
  3724   0030DC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3725   0030DE  EF73  F018         	goto	u2141
  3726   0030E2  EF75  F018         	goto	u2140
  3727   0030E6                     u2141:
  3728   0030E6  EF6A  F018         	goto	l3082
  3729   0030EA                     u2140:
  3730   0030EA                     l3086:
  3731   0030EA  5003               	movf	___lwmod@divisor^0,w,c
  3732   0030EC  5C01               	subwf	___lwmod@dividend^0,w,c
  3733   0030EE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3734   0030F0  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3735   0030F2  A0D8               	btfss	status,0,c
  3736   0030F4  EF7E  F018         	goto	u2151
  3737   0030F8  EF80  F018         	goto	u2150
  3738   0030FC                     u2151:
  3739   0030FC  EF84  F018         	goto	l3090
  3740   003100                     u2150:
  3741   003100  5003               	movf	___lwmod@divisor^0,w,c
  3742   003102  5E01               	subwf	___lwmod@dividend^0,f,c
  3743   003104  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3744   003106  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3745   003108                     l3090:
  3746   003108  90D8               	bcf	status,0,c
  3747   00310A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3748   00310C  3203               	rrcf	___lwmod@divisor^0,f,c
  3749   00310E  2E05               	decfsz	___lwmod@counter^0,f,c
  3750   003110  EF75  F018         	goto	l3086
  3751   003114                     l1250:
  3752   003114  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3753   003118  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3754   00311C  0012               	return		;funcret
  3755   00311E                     __end_of___lwmod:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function ___lwdiv *****************
  3759 ;; Defined at:
  3760 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  dividend        2    6[COMRAM] unsigned int 
  3763 ;;  divisor         2    8[COMRAM] unsigned int 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  quotient        2   10[COMRAM] unsigned int 
  3766 ;;  counter         1   12[COMRAM] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  2    6[COMRAM] unsigned int 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;Total ram usage:        7 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_setMotorPWM
  3787 ;;		_vfpfcnvrt
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text20
  3792   002FDC                     __ptext20:
  3793                           	callstack 0
  3794   002FDC                     ___lwdiv:
  3795                           	callstack 25
  3796   002FDC  0E00               	movlw	0
  3797   002FDE  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3798   002FE0  0E00               	movlw	0
  3799   002FE2  6E0B               	movwf	___lwdiv@quotient^0,c
  3800   002FE4  5009               	movf	___lwdiv@divisor^0,w,c
  3801   002FE6  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3802   002FE8  B4D8               	btfsc	status,2,c
  3803   002FEA  EFF9  F017         	goto	u2101
  3804   002FEE  EFFB  F017         	goto	u2100
  3805   002FF2                     u2101:
  3806   002FF2  EF23  F018         	goto	l1240
  3807   002FF6                     u2100:
  3808   002FF6  0E01               	movlw	1
  3809   002FF8  6E0D               	movwf	___lwdiv@counter^0,c
  3810   002FFA  EF03  F018         	goto	l3064
  3811   002FFE                     l3062:
  3812   002FFE  90D8               	bcf	status,0,c
  3813   003000  3609               	rlcf	___lwdiv@divisor^0,f,c
  3814   003002  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3815   003004  2A0D               	incf	___lwdiv@counter^0,f,c
  3816   003006                     l3064:
  3817   003006  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3818   003008  EF08  F018         	goto	u2111
  3819   00300C  EF0A  F018         	goto	u2110
  3820   003010                     u2111:
  3821   003010  EFFF  F017         	goto	l3062
  3822   003014                     u2110:
  3823   003014                     l3066:
  3824   003014  90D8               	bcf	status,0,c
  3825   003016  360B               	rlcf	___lwdiv@quotient^0,f,c
  3826   003018  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3827   00301A  5009               	movf	___lwdiv@divisor^0,w,c
  3828   00301C  5C07               	subwf	___lwdiv@dividend^0,w,c
  3829   00301E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3830   003020  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3831   003022  A0D8               	btfss	status,0,c
  3832   003024  EF16  F018         	goto	u2121
  3833   003028  EF18  F018         	goto	u2120
  3834   00302C                     u2121:
  3835   00302C  EF1D  F018         	goto	l3074
  3836   003030                     u2120:
  3837   003030  5009               	movf	___lwdiv@divisor^0,w,c
  3838   003032  5E07               	subwf	___lwdiv@dividend^0,f,c
  3839   003034  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3840   003036  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3841   003038  800B               	bsf	___lwdiv@quotient^0,0,c
  3842   00303A                     l3074:
  3843   00303A  90D8               	bcf	status,0,c
  3844   00303C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3845   00303E  3209               	rrcf	___lwdiv@divisor^0,f,c
  3846   003040  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3847   003042  EF0A  F018         	goto	l3066
  3848   003046                     l1240:
  3849   003046  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3850   00304A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3851   00304E  0012               	return		;funcret
  3852   003050                     __end_of___lwdiv:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function ___awmod *****************
  3856 ;; Defined at:
  3857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  dividend        2    0[COMRAM] int 
  3860 ;;  divisor         2    2[COMRAM] int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  sign            1    5[COMRAM] unsigned char 
  3863 ;;  counter         1    4[COMRAM] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  2    0[COMRAM] int 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;Total ram usage:        6 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_vfpfcnvrt
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text21
  3888   002BFC                     __ptext21:
  3889                           	callstack 0
  3890   002BFC                     ___awmod:
  3891                           	callstack 25
  3892   002BFC  0E00               	movlw	0
  3893   002BFE  6E06               	movwf	___awmod@sign^0,c
  3894   002C00  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3895   002C02  EF07  F016         	goto	u2040
  3896   002C06  EF05  F016         	goto	u2041
  3897   002C0A                     u2041:
  3898   002C0A  EF0D  F016         	goto	l3028
  3899   002C0E                     u2040:
  3900   002C0E  6C01               	negf	___awmod@dividend^0,c
  3901   002C10  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3902   002C12  B0D8               	btfsc	status,0,c
  3903   002C14  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3904   002C16  0E01               	movlw	1
  3905   002C18  6E06               	movwf	___awmod@sign^0,c
  3906   002C1A                     l3028:
  3907   002C1A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3908   002C1C  EF14  F016         	goto	u2050
  3909   002C20  EF12  F016         	goto	u2051
  3910   002C24                     u2051:
  3911   002C24  EF18  F016         	goto	l3032
  3912   002C28                     u2050:
  3913   002C28  6C03               	negf	___awmod@divisor^0,c
  3914   002C2A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3915   002C2C  B0D8               	btfsc	status,0,c
  3916   002C2E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3917   002C30                     l3032:
  3918   002C30  5003               	movf	___awmod@divisor^0,w,c
  3919   002C32  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3920   002C34  B4D8               	btfsc	status,2,c
  3921   002C36  EF1F  F016         	goto	u2061
  3922   002C3A  EF21  F016         	goto	u2060
  3923   002C3E                     u2061:
  3924   002C3E  EF45  F016         	goto	l3048
  3925   002C42                     u2060:
  3926   002C42  0E01               	movlw	1
  3927   002C44  6E05               	movwf	___awmod@counter^0,c
  3928   002C46  EF29  F016         	goto	l3038
  3929   002C4A                     l3036:
  3930   002C4A  90D8               	bcf	status,0,c
  3931   002C4C  3603               	rlcf	___awmod@divisor^0,f,c
  3932   002C4E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3933   002C50  2A05               	incf	___awmod@counter^0,f,c
  3934   002C52                     l3038:
  3935   002C52  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3936   002C54  EF2E  F016         	goto	u2071
  3937   002C58  EF30  F016         	goto	u2070
  3938   002C5C                     u2071:
  3939   002C5C  EF25  F016         	goto	l3036
  3940   002C60                     u2070:
  3941   002C60                     l3040:
  3942   002C60  5003               	movf	___awmod@divisor^0,w,c
  3943   002C62  5C01               	subwf	___awmod@dividend^0,w,c
  3944   002C64  5004               	movf	(___awmod@divisor+1)^0,w,c
  3945   002C66  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3946   002C68  A0D8               	btfss	status,0,c
  3947   002C6A  EF39  F016         	goto	u2081
  3948   002C6E  EF3B  F016         	goto	u2080
  3949   002C72                     u2081:
  3950   002C72  EF3F  F016         	goto	l3044
  3951   002C76                     u2080:
  3952   002C76  5003               	movf	___awmod@divisor^0,w,c
  3953   002C78  5E01               	subwf	___awmod@dividend^0,f,c
  3954   002C7A  5004               	movf	(___awmod@divisor+1)^0,w,c
  3955   002C7C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3956   002C7E                     l3044:
  3957   002C7E  90D8               	bcf	status,0,c
  3958   002C80  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3959   002C82  3203               	rrcf	___awmod@divisor^0,f,c
  3960   002C84  2E05               	decfsz	___awmod@counter^0,f,c
  3961   002C86  EF30  F016         	goto	l3040
  3962   002C8A                     l3048:
  3963   002C8A  5006               	movf	___awmod@sign^0,w,c
  3964   002C8C  B4D8               	btfsc	status,2,c
  3965   002C8E  EF4B  F016         	goto	u2091
  3966   002C92  EF4D  F016         	goto	u2090
  3967   002C96                     u2091:
  3968   002C96  EF51  F016         	goto	l3052
  3969   002C9A                     u2090:
  3970   002C9A  6C01               	negf	___awmod@dividend^0,c
  3971   002C9C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3972   002C9E  B0D8               	btfsc	status,0,c
  3973   002CA0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3974   002CA2                     l3052:
  3975   002CA2  C001  F001         	movff	___awmod@dividend,?___awmod
  3976   002CA6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3977   002CAA  0012               	return		;funcret
  3978   002CAC                     __end_of___awmod:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function ___awdiv *****************
  3982 ;; Defined at:
  3983 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  dividend        2    0[COMRAM] int 
  3986 ;;  divisor         2    2[COMRAM] int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  quotient        2    6[COMRAM] int 
  3989 ;;  sign            1    5[COMRAM] unsigned char 
  3990 ;;  counter         1    4[COMRAM] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  2    0[COMRAM] int 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;Total ram usage:        8 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_vfpfcnvrt
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text22
  4015   002A7E                     __ptext22:
  4016                           	callstack 0
  4017   002A7E                     ___awdiv:
  4018                           	callstack 25
  4019   002A7E  0E00               	movlw	0
  4020   002A80  6E06               	movwf	___awdiv@sign^0,c
  4021   002A82  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4022   002A84  EF48  F015         	goto	u1980
  4023   002A88  EF46  F015         	goto	u1981
  4024   002A8C                     u1981:
  4025   002A8C  EF4E  F015         	goto	l2984
  4026   002A90                     u1980:
  4027   002A90  6C03               	negf	___awdiv@divisor^0,c
  4028   002A92  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4029   002A94  B0D8               	btfsc	status,0,c
  4030   002A96  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4031   002A98  0E01               	movlw	1
  4032   002A9A  6E06               	movwf	___awdiv@sign^0,c
  4033   002A9C                     l2984:
  4034   002A9C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4035   002A9E  EF55  F015         	goto	u1990
  4036   002AA2  EF53  F015         	goto	u1991
  4037   002AA6                     u1991:
  4038   002AA6  EF5B  F015         	goto	l2990
  4039   002AAA                     u1990:
  4040   002AAA  6C01               	negf	___awdiv@dividend^0,c
  4041   002AAC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4042   002AAE  B0D8               	btfsc	status,0,c
  4043   002AB0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4044   002AB2  0E01               	movlw	1
  4045   002AB4  1A06               	xorwf	___awdiv@sign^0,f,c
  4046   002AB6                     l2990:
  4047   002AB6  0E00               	movlw	0
  4048   002AB8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4049   002ABA  0E00               	movlw	0
  4050   002ABC  6E07               	movwf	___awdiv@quotient^0,c
  4051   002ABE  5003               	movf	___awdiv@divisor^0,w,c
  4052   002AC0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4053   002AC2  B4D8               	btfsc	status,2,c
  4054   002AC4  EF66  F015         	goto	u2001
  4055   002AC8  EF68  F015         	goto	u2000
  4056   002ACC                     u2001:
  4057   002ACC  EF90  F015         	goto	l3012
  4058   002AD0                     u2000:
  4059   002AD0  0E01               	movlw	1
  4060   002AD2  6E05               	movwf	___awdiv@counter^0,c
  4061   002AD4  EF70  F015         	goto	l2998
  4062   002AD8                     l2996:
  4063   002AD8  90D8               	bcf	status,0,c
  4064   002ADA  3603               	rlcf	___awdiv@divisor^0,f,c
  4065   002ADC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4066   002ADE  2A05               	incf	___awdiv@counter^0,f,c
  4067   002AE0                     l2998:
  4068   002AE0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4069   002AE2  EF75  F015         	goto	u2011
  4070   002AE6  EF77  F015         	goto	u2010
  4071   002AEA                     u2011:
  4072   002AEA  EF6C  F015         	goto	l2996
  4073   002AEE                     u2010:
  4074   002AEE                     l3000:
  4075   002AEE  90D8               	bcf	status,0,c
  4076   002AF0  3607               	rlcf	___awdiv@quotient^0,f,c
  4077   002AF2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4078   002AF4  5003               	movf	___awdiv@divisor^0,w,c
  4079   002AF6  5C01               	subwf	___awdiv@dividend^0,w,c
  4080   002AF8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4081   002AFA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4082   002AFC  A0D8               	btfss	status,0,c
  4083   002AFE  EF83  F015         	goto	u2021
  4084   002B02  EF85  F015         	goto	u2020
  4085   002B06                     u2021:
  4086   002B06  EF8A  F015         	goto	l3008
  4087   002B0A                     u2020:
  4088   002B0A  5003               	movf	___awdiv@divisor^0,w,c
  4089   002B0C  5E01               	subwf	___awdiv@dividend^0,f,c
  4090   002B0E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4091   002B10  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4092   002B12  8007               	bsf	___awdiv@quotient^0,0,c
  4093   002B14                     l3008:
  4094   002B14  90D8               	bcf	status,0,c
  4095   002B16  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4096   002B18  3203               	rrcf	___awdiv@divisor^0,f,c
  4097   002B1A  2E05               	decfsz	___awdiv@counter^0,f,c
  4098   002B1C  EF77  F015         	goto	l3000
  4099   002B20                     l3012:
  4100   002B20  5006               	movf	___awdiv@sign^0,w,c
  4101   002B22  B4D8               	btfsc	status,2,c
  4102   002B24  EF96  F015         	goto	u2031
  4103   002B28  EF98  F015         	goto	u2030
  4104   002B2C                     u2031:
  4105   002B2C  EF9C  F015         	goto	l3016
  4106   002B30                     u2030:
  4107   002B30  6C07               	negf	___awdiv@quotient^0,c
  4108   002B32  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4109   002B34  B0D8               	btfsc	status,0,c
  4110   002B36  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4111   002B38                     l3016:
  4112   002B38  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4113   002B3C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4114   002B40  0012               	return		;funcret
  4115   002B42                     __end_of___awdiv:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _sendStringSerial4 *****************
  4119 ;; Defined at:
  4120 ;;		line 41 in file "serial.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  string          2    1[COMRAM] PTR unsigned char 
  4123 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  4124 ;;		 -> sendIntSerial4@string(17), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;Total ram usage:        2 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 2
  4143 ;; This function calls:
  4144 ;;		_sendCharSerial4
  4145 ;; This function is called by:
  4146 ;;		_sendArrayCharSerial4
  4147 ;;		_sendRGBCvalSerial4
  4148 ;;		_sendHSVvalSerial4
  4149 ;;		_sendIntSerial4
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text23
  4154   00311E                     __ptext23:
  4155                           	callstack 0
  4156   00311E                     _sendStringSerial4:
  4157                           	callstack 27
  4158   00311E                     
  4159                           ;serial.c: 43:     while(*string != 0){
  4160   00311E  EFA6  F018         	goto	l3434
  4161   003122                     l3430:
  4162                           
  4163                           ;serial.c: 44:   sendCharSerial4(*string++);
  4164   003122  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  4165   003126  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  4166   00312A  0E00               	movlw	low (__smallconst shr (0+16))
  4167   00312C  6EF8               	movwf	tblptru,c
  4168   00312E  0E0D               	movlw	(high __ramtop+-1)
  4169   003130  64F7               	cpfsgt	tblptrh,c
  4170   003132  D003               	bra	u2577
  4171   003134  0008               	tblrd		*
  4172   003136  50F5               	movf	tablat,w,c
  4173   003138  D005               	bra	u2570
  4174   00313A                     u2577:
  4175   00313A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4176   00313E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4177   003142  50EF               	movf	indf0,w,c
  4178   003144                     u2570:
  4179   003144  EC78  F01B         	call	_sendCharSerial4
  4180   003148  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4181   00314A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4182   00314C                     l3434:
  4183                           
  4184                           ;serial.c: 43:     while(*string != 0){
  4185   00314C  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  4186   003150  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  4187   003154  0E00               	movlw	low (__smallconst shr (0+16))
  4188   003156  6EF8               	movwf	tblptru,c
  4189   003158  0E0D               	movlw	(high __ramtop+-1)
  4190   00315A  64F7               	cpfsgt	tblptrh,c
  4191   00315C  D003               	bra	u2587
  4192   00315E  0008               	tblrd		*
  4193   003160  50F5               	movf	tablat,w,c
  4194   003162  D005               	bra	u2580
  4195   003164                     u2587:
  4196   003164  CFF6 FFE9          	movff	tblptrl,fsr0l
  4197   003168  CFF7 FFEA          	movff	tblptrh,fsr0h
  4198   00316C  50EF               	movf	indf0,w,c
  4199   00316E                     u2580:
  4200   00316E  0900               	iorlw	0
  4201   003170  A4D8               	btfss	status,2,c
  4202   003172  EFBD  F018         	goto	u2591
  4203   003176  EFBF  F018         	goto	u2590
  4204   00317A                     u2591:
  4205   00317A  EF91  F018         	goto	l3430
  4206   00317E                     u2590:
  4207   00317E  0012               	return		;funcret
  4208   003180                     __end_of_sendStringSerial4:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _sendCharSerial4 *****************
  4212 ;; Defined at:
  4213 ;;		line 33 in file "serial.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  charToSend      1    wreg     unsigned char 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  charToSend      1    0[COMRAM] unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;Total ram usage:        1 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_sendStringSerial4
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text24
  4242   0036F0                     __ptext24:
  4243                           	callstack 0
  4244   0036F0                     _sendCharSerial4:
  4245                           	callstack 27
  4246                           
  4247                           ;incstack = 0
  4248                           ;sendCharSerial4@charToSend stored from wreg
  4249   0036F0  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4250   0036F2                     l464:
  4251   0036F2  010E               	movlb	14	; () banked
  4252   0036F4  A537               	btfss	55,2,b	;volatile
  4253   0036F6  EF7F  F01B         	goto	u2491
  4254   0036FA  EF81  F01B         	goto	u2490
  4255   0036FE                     u2491:
  4256   0036FE  EF79  F01B         	goto	l464
  4257   003702                     u2490:
  4258   003702                     
  4259                           ; BSR set to: 14
  4260                           ;serial.c: 35:     TX4REG = charToSend;
  4261   003702  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4262   003706                     
  4263                           ; BSR set to: 14
  4264   003706  0012               	return		;funcret
  4265   003708                     __end_of_sendCharSerial4:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _scale_RGB *****************
  4269 ;; Defined at:
  4270 ;;		line 197 in file "color.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  4273 ;;		 -> main@RGBC_colour(8), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;Total ram usage:        3 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 2
  4292 ;; This function calls:
  4293 ;;		___flmul
  4294 ;;		___fltol
  4295 ;;		___xxtofl
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_forward_navigation
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text25
  4303   0028E0                     __ptext25:
  4304                           	callstack 0
  4305   0028E0                     _scale_RGB:
  4306                           	callstack 28
  4307   0028E0                     
  4308                           ;color.c: 197: void scale_RGB(struct RGBC_val *p);color.c: 198: {;color.c: 199:     p->R
      +                           *= 0.5;
  4309   0028E0  0E00               	movlw	0
  4310   0028E2  6E13               	movwf	___flmul@a^0,c
  4311   0028E4  0E00               	movlw	0
  4312   0028E6  6E14               	movwf	(___flmul@a+1)^0,c
  4313   0028E8  0E00               	movlw	0
  4314   0028EA  6E15               	movwf	(___flmul@a+2)^0,c
  4315   0028EC  0E3F               	movlw	63
  4316   0028EE  6E16               	movwf	(___flmul@a+3)^0,c
  4317   0028F0  5032               	movf	scale_RGB@p^0,w,c
  4318   0028F2  6ED9               	movwf	fsr2l,c
  4319   0028F4  6ADA               	clrf	fsr2h,c
  4320   0028F6  CFDE F033          	movff	postinc2,??_scale_RGB
  4321   0028FA  CFDD F034          	movff	postdec2,??_scale_RGB+1
  4322   0028FE  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  4323   002902  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  4324   002906  6A03               	clrf	(___xxtofl@val+2)^0,c
  4325   002908  6A04               	clrf	(___xxtofl@val+3)^0,c
  4326   00290A  0E00               	movlw	0
  4327   00290C  EC3E  F011         	call	___xxtofl
  4328   002910  C001  F00F         	movff	?___xxtofl,___flmul@b
  4329   002914  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  4330   002918  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  4331   00291C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  4332   002920  ECA5  F00C         	call	___flmul	;wreg free
  4333   002924  C00F  F028         	movff	?___flmul,___fltol@f1
  4334   002928  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  4335   00292C  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  4336   002930  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  4337   002934  EC6F  F013         	call	___fltol	;wreg free
  4338   002938  5032               	movf	scale_RGB@p^0,w,c
  4339   00293A  6ED9               	movwf	fsr2l,c
  4340   00293C  6ADA               	clrf	fsr2h,c
  4341   00293E  C028  FFDE         	movff	?___fltol,postinc2
  4342   002942  C029  FFDD         	movff	?___fltol+1,postdec2
  4343                           
  4344                           ;color.c: 200:     p->G *= 0.7;
  4345   002946  0E33               	movlw	51
  4346   002948  6E13               	movwf	___flmul@a^0,c
  4347   00294A  0E33               	movlw	51
  4348   00294C  6E14               	movwf	(___flmul@a+1)^0,c
  4349   00294E  0E33               	movlw	51
  4350   002950  6E15               	movwf	(___flmul@a+2)^0,c
  4351   002952  0E3F               	movlw	63
  4352   002954  6E16               	movwf	(___flmul@a+3)^0,c
  4353   002956  5032               	movf	scale_RGB@p^0,w,c
  4354   002958  6ED9               	movwf	fsr2l,c
  4355   00295A  6ADA               	clrf	fsr2h,c
  4356   00295C  0E02               	movlw	2
  4357   00295E  26D9               	addwf	fsr2l,f,c
  4358   002960  CFDE F033          	movff	postinc2,??_scale_RGB
  4359   002964  CFDD F034          	movff	postdec2,??_scale_RGB+1
  4360   002968  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  4361   00296C  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  4362   002970  6A03               	clrf	(___xxtofl@val+2)^0,c
  4363   002972  6A04               	clrf	(___xxtofl@val+3)^0,c
  4364   002974  0E00               	movlw	0
  4365   002976  EC3E  F011         	call	___xxtofl
  4366   00297A  C001  F00F         	movff	?___xxtofl,___flmul@b
  4367   00297E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  4368   002982  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  4369   002986  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  4370   00298A  ECA5  F00C         	call	___flmul	;wreg free
  4371   00298E  C00F  F028         	movff	?___flmul,___fltol@f1
  4372   002992  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  4373   002996  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  4374   00299A  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  4375   00299E  EC6F  F013         	call	___fltol	;wreg free
  4376   0029A2  5032               	movf	scale_RGB@p^0,w,c
  4377   0029A4  6ED9               	movwf	fsr2l,c
  4378   0029A6  6ADA               	clrf	fsr2h,c
  4379   0029A8  0E02               	movlw	2
  4380   0029AA  26D9               	addwf	fsr2l,f,c
  4381   0029AC  C028  FFDE         	movff	?___fltol,postinc2
  4382   0029B0  C029  FFDD         	movff	?___fltol+1,postdec2
  4383   0029B4  0012               	return		;funcret
  4384   0029B6                     __end_of_scale_RGB:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function ___xxtofl *****************
  4388 ;; Defined at:
  4389 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  sign            1    wreg     unsigned char 
  4392 ;;  val             4    0[COMRAM] long 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  sign            1    8[COMRAM] unsigned char 
  4395 ;;  arg             4   10[COMRAM] unsigned long 
  4396 ;;  exp             1    9[COMRAM] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  4    0[COMRAM] unsigned char 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:       14 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_scale_RGB
  4417 ;;		_stop
  4418 ;;		_turnLeft
  4419 ;;		_turnRight
  4420 ;;		_fullSpeedAhead
  4421 ;;		_fullSpeedReverse
  4422 ;;		_turnLeft90
  4423 ;;		_turnRight90
  4424 ;;		_turnLeft135
  4425 ;;		_turnRight135
  4426 ;;		_UTurn
  4427 ;;		_headbuttReverse
  4428 ;;		_squareReverse
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text26
  4433   00227C                     __ptext26:
  4434                           	callstack 0
  4435   00227C                     ___xxtofl:
  4436                           	callstack 28
  4437                           
  4438                           ;incstack = 0
  4439                           ;___xxtofl@sign stored from wreg
  4440   00227C  6E09               	movwf	___xxtofl@sign^0,c
  4441   00227E  5009               	movf	___xxtofl@sign^0,w,c
  4442   002280  B4D8               	btfsc	status,2,c
  4443   002282  EF45  F011         	goto	u2911
  4444   002286  EF47  F011         	goto	u2910
  4445   00228A                     u2911:
  4446   00228A  EF69  F011         	goto	l1404
  4447   00228E                     u2910:
  4448   00228E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4449   002290  EF4E  F011         	goto	u2920
  4450   002294  EF4C  F011         	goto	u2921
  4451   002298                     u2921:
  4452   002298  EF69  F011         	goto	l1404
  4453   00229C                     u2920:
  4454   00229C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4455   0022A0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4456   0022A4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4457   0022A8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4458   0022AC  1E05               	comf	??___xxtofl^0,f,c
  4459   0022AE  1E06               	comf	(??___xxtofl+1)^0,f,c
  4460   0022B0  1E07               	comf	(??___xxtofl+2)^0,f,c
  4461   0022B2  1E08               	comf	(??___xxtofl+3)^0,f,c
  4462   0022B4  2A05               	incf	??___xxtofl^0,f,c
  4463   0022B6  0E00               	movlw	0
  4464   0022B8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4465   0022BA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4466   0022BC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4467   0022BE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4468   0022C2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4469   0022C6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4470   0022CA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4471   0022CE  EF71  F011         	goto	l3666
  4472   0022D2                     l1404:
  4473   0022D2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4474   0022D6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4475   0022DA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4476   0022DE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4477   0022E2                     l3666:
  4478   0022E2  5001               	movf	___xxtofl@val^0,w,c
  4479   0022E4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4480   0022E6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4481   0022E8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4482   0022EA  A4D8               	btfss	status,2,c
  4483   0022EC  EF7A  F011         	goto	u2931
  4484   0022F0  EF7C  F011         	goto	u2930
  4485   0022F4                     u2931:
  4486   0022F4  EF86  F011         	goto	l3672
  4487   0022F8                     u2930:
  4488   0022F8  0E00               	movlw	0
  4489   0022FA  6E01               	movwf	?___xxtofl^0,c
  4490   0022FC  0E00               	movlw	0
  4491   0022FE  6E02               	movwf	(?___xxtofl+1)^0,c
  4492   002300  0E00               	movlw	0
  4493   002302  6E03               	movwf	(?___xxtofl+2)^0,c
  4494   002304  0E00               	movlw	0
  4495   002306  6E04               	movwf	(?___xxtofl+3)^0,c
  4496   002308  EF17  F012         	goto	l1407
  4497   00230C                     l3672:
  4498   00230C  0E96               	movlw	150
  4499   00230E  6E0A               	movwf	___xxtofl@exp^0,c
  4500   002310  EF90  F011         	goto	l3676
  4501   002314                     l3674:
  4502   002314  2A0A               	incf	___xxtofl@exp^0,f,c
  4503   002316  90D8               	bcf	status,0,c
  4504   002318  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4505   00231A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4506   00231C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4507   00231E  320B               	rrcf	___xxtofl@arg^0,f,c
  4508   002320                     l3676:
  4509   002320  0E00               	movlw	0
  4510   002322  140B               	andwf	___xxtofl@arg^0,w,c
  4511   002324  6E05               	movwf	??___xxtofl^0,c
  4512   002326  0E00               	movlw	0
  4513   002328  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4514   00232A  6E06               	movwf	(??___xxtofl+1)^0,c
  4515   00232C  0E00               	movlw	0
  4516   00232E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4517   002330  6E07               	movwf	(??___xxtofl+2)^0,c
  4518   002332  0EFE               	movlw	254
  4519   002334  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4520   002336  6E08               	movwf	(??___xxtofl+3)^0,c
  4521   002338  5005               	movf	??___xxtofl^0,w,c
  4522   00233A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4523   00233C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4524   00233E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4525   002340  A4D8               	btfss	status,2,c
  4526   002342  EFA5  F011         	goto	u2941
  4527   002346  EFA7  F011         	goto	u2940
  4528   00234A                     u2941:
  4529   00234A  EF8A  F011         	goto	l3674
  4530   00234E                     u2940:
  4531   00234E  EFB5  F011         	goto	l1411
  4532   002352                     l3678:
  4533   002352  2A0A               	incf	___xxtofl@exp^0,f,c
  4534   002354  0E01               	movlw	1
  4535   002356  260B               	addwf	___xxtofl@arg^0,f,c
  4536   002358  0E00               	movlw	0
  4537   00235A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4538   00235C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4539   00235E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4540   002360  90D8               	bcf	status,0,c
  4541   002362  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4542   002364  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4543   002366  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4544   002368  320B               	rrcf	___xxtofl@arg^0,f,c
  4545   00236A                     l1411:
  4546   00236A  0E00               	movlw	0
  4547   00236C  140B               	andwf	___xxtofl@arg^0,w,c
  4548   00236E  6E05               	movwf	??___xxtofl^0,c
  4549   002370  0E00               	movlw	0
  4550   002372  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4551   002374  6E06               	movwf	(??___xxtofl+1)^0,c
  4552   002376  0E00               	movlw	0
  4553   002378  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4554   00237A  6E07               	movwf	(??___xxtofl+2)^0,c
  4555   00237C  0EFF               	movlw	255
  4556   00237E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4557   002380  6E08               	movwf	(??___xxtofl+3)^0,c
  4558   002382  5005               	movf	??___xxtofl^0,w,c
  4559   002384  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4560   002386  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4561   002388  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4562   00238A  A4D8               	btfss	status,2,c
  4563   00238C  EFCA  F011         	goto	u2951
  4564   002390  EFCC  F011         	goto	u2950
  4565   002394                     u2951:
  4566   002394  EFA9  F011         	goto	l3678
  4567   002398                     u2950:
  4568   002398  EFD4  F011         	goto	l3686
  4569   00239C                     l3684:
  4570   00239C  060A               	decf	___xxtofl@exp^0,f,c
  4571   00239E  90D8               	bcf	status,0,c
  4572   0023A0  360B               	rlcf	___xxtofl@arg^0,f,c
  4573   0023A2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4574   0023A4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4575   0023A6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4576   0023A8                     l3686:
  4577   0023A8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4578   0023AA  EFD9  F011         	goto	u2961
  4579   0023AE  EFDB  F011         	goto	u2960
  4580   0023B2                     u2961:
  4581   0023B2  EFE3  F011         	goto	l1418
  4582   0023B6                     u2960:
  4583   0023B6  0E02               	movlw	2
  4584   0023B8  600A               	cpfslt	___xxtofl@exp^0,c
  4585   0023BA  EFE1  F011         	goto	u2971
  4586   0023BE  EFE3  F011         	goto	u2970
  4587   0023C2                     u2971:
  4588   0023C2  EFCE  F011         	goto	l3684
  4589   0023C6                     u2970:
  4590   0023C6                     l1418:
  4591   0023C6  B00A               	btfsc	___xxtofl@exp^0,0,c
  4592   0023C8  EFE8  F011         	goto	u2981
  4593   0023CC  EFEA  F011         	goto	u2980
  4594   0023D0                     u2981:
  4595   0023D0  EFEB  F011         	goto	l3692
  4596   0023D4                     u2980:
  4597   0023D4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4598   0023D6                     l3692:
  4599   0023D6  90D8               	bcf	status,0,c
  4600   0023D8  320A               	rrcf	___xxtofl@exp^0,f,c
  4601   0023DA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4602   0023DE  6A06               	clrf	(??___xxtofl+1)^0,c
  4603   0023E0  6A07               	clrf	(??___xxtofl+2)^0,c
  4604   0023E2  6A08               	clrf	(??___xxtofl+3)^0,c
  4605   0023E4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4606   0023E8  6A07               	clrf	(??___xxtofl+2)^0,c
  4607   0023EA  6A06               	clrf	(??___xxtofl+1)^0,c
  4608   0023EC  6A05               	clrf	??___xxtofl^0,c
  4609   0023EE  5005               	movf	??___xxtofl^0,w,c
  4610   0023F0  120B               	iorwf	___xxtofl@arg^0,f,c
  4611   0023F2  5006               	movf	(??___xxtofl+1)^0,w,c
  4612   0023F4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4613   0023F6  5007               	movf	(??___xxtofl+2)^0,w,c
  4614   0023F8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4615   0023FA  5008               	movf	(??___xxtofl+3)^0,w,c
  4616   0023FC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4617   0023FE  5009               	movf	___xxtofl@sign^0,w,c
  4618   002400  B4D8               	btfsc	status,2,c
  4619   002402  EF05  F012         	goto	u2991
  4620   002406  EF07  F012         	goto	u2990
  4621   00240A                     u2991:
  4622   00240A  EF0F  F012         	goto	l3702
  4623   00240E                     u2990:
  4624   00240E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4625   002410  EF0E  F012         	goto	u3000
  4626   002414  EF0C  F012         	goto	u3001
  4627   002418                     u3001:
  4628   002418  EF0F  F012         	goto	l3702
  4629   00241C                     u3000:
  4630   00241C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4631   00241E                     l3702:
  4632   00241E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4633   002422  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4634   002426  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4635   00242A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4636   00242E                     l1407:
  4637   00242E  0012               	return		;funcret
  4638   002430                     __end_of___xxtofl:
  4639                           	callstack 0
  4640                           
  4641 ;; *************** function ___fltol *****************
  4642 ;; Defined at:
  4643 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  f1              4   39[COMRAM] unsigned char 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  exp1            1   48[COMRAM] unsigned char 
  4648 ;;  sign1           1   47[COMRAM] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  4   39[COMRAM] long 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;Total ram usage:       10 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 1
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_scale_RGB
  4669 ;;		_stop
  4670 ;;		_turnLeft
  4671 ;;		_turnRight
  4672 ;;		_fullSpeedAhead
  4673 ;;		_fullSpeedReverse
  4674 ;;		_turnLeft90
  4675 ;;		_turnRight90
  4676 ;;		_turnLeft135
  4677 ;;		_turnRight135
  4678 ;;		_UTurn
  4679 ;;		_headbuttReverse
  4680 ;;		_squareReverse
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text27
  4685   0026DE                     __ptext27:
  4686                           	callstack 0
  4687   0026DE                     ___fltol:
  4688                           	callstack 28
  4689   0026DE  342A               	rlcf	(___fltol@f1+2)^0,w,c
  4690   0026E0  342B               	rlcf	(___fltol@f1+3)^0,w,c
  4691   0026E2  6E31               	movwf	___fltol@exp1^0,c
  4692   0026E4  5031               	movf	___fltol@exp1^0,w,c
  4693   0026E6  A4D8               	btfss	status,2,c
  4694   0026E8  EF78  F013         	goto	u2841
  4695   0026EC  EF7A  F013         	goto	u2840
  4696   0026F0                     u2841:
  4697   0026F0  EF84  F013         	goto	l3622
  4698   0026F4                     u2840:
  4699   0026F4                     l3618:
  4700   0026F4  0E00               	movlw	0
  4701   0026F6  6E28               	movwf	?___fltol^0,c
  4702   0026F8  0E00               	movlw	0
  4703   0026FA  6E29               	movwf	(?___fltol+1)^0,c
  4704   0026FC  0E00               	movlw	0
  4705   0026FE  6E2A               	movwf	(?___fltol+2)^0,c
  4706   002700  0E00               	movlw	0
  4707   002702  6E2B               	movwf	(?___fltol+3)^0,c
  4708   002704  EFF1  F013         	goto	l1046
  4709   002708                     l3622:
  4710   002708  C028  F02C         	movff	___fltol@f1,??___fltol
  4711   00270C  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  4712   002710  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  4713   002714  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  4714   002718  0E20               	movlw	32
  4715   00271A  EF94  F013         	goto	u2850
  4716   00271E                     u2855:
  4717   00271E  90D8               	bcf	status,0,c
  4718   002720  322F               	rrcf	(??___fltol+3)^0,f,c
  4719   002722  322E               	rrcf	(??___fltol+2)^0,f,c
  4720   002724  322D               	rrcf	(??___fltol+1)^0,f,c
  4721   002726  322C               	rrcf	??___fltol^0,f,c
  4722   002728                     u2850:
  4723   002728  2EE8               	decfsz	wreg,f,c
  4724   00272A  EF8F  F013         	goto	u2855
  4725   00272E  502C               	movf	??___fltol^0,w,c
  4726   002730  6E30               	movwf	___fltol@sign1^0,c
  4727   002732  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  4728   002734  0EFF               	movlw	255
  4729   002736  1628               	andwf	___fltol@f1^0,f,c
  4730   002738  0EFF               	movlw	255
  4731   00273A  1629               	andwf	(___fltol@f1+1)^0,f,c
  4732   00273C  0EFF               	movlw	255
  4733   00273E  162A               	andwf	(___fltol@f1+2)^0,f,c
  4734   002740  0E00               	movlw	0
  4735   002742  162B               	andwf	(___fltol@f1+3)^0,f,c
  4736   002744  0E96               	movlw	150
  4737   002746  5E31               	subwf	___fltol@exp1^0,f,c
  4738   002748  BE31               	btfsc	___fltol@exp1^0,7,c
  4739   00274A  EFAB  F013         	goto	u2860
  4740   00274E  EFA9  F013         	goto	u2861
  4741   002752                     u2861:
  4742   002752  EFC1  F013         	goto	l3642
  4743   002756                     u2860:
  4744   002756  5031               	movf	___fltol@exp1^0,w,c
  4745   002758  0A80               	xorlw	128
  4746   00275A  0F97               	addlw	151
  4747   00275C  B0D8               	btfsc	status,0,c
  4748   00275E  EFB3  F013         	goto	u2871
  4749   002762  EFB5  F013         	goto	u2870
  4750   002766                     u2871:
  4751   002766  EFB7  F013         	goto	l3638
  4752   00276A                     u2870:
  4753   00276A  EF7A  F013         	goto	l3618
  4754   00276E                     l3638:
  4755   00276E  90D8               	bcf	status,0,c
  4756   002770  322B               	rrcf	(___fltol@f1+3)^0,f,c
  4757   002772  322A               	rrcf	(___fltol@f1+2)^0,f,c
  4758   002774  3229               	rrcf	(___fltol@f1+1)^0,f,c
  4759   002776  3228               	rrcf	___fltol@f1^0,f,c
  4760   002778  3E31               	incfsz	___fltol@exp1^0,f,c
  4761   00277A  EFB7  F013         	goto	l3638
  4762   00277E  EFD9  F013         	goto	l3652
  4763   002782                     l3642:
  4764   002782  0E1F               	movlw	31
  4765   002784  6431               	cpfsgt	___fltol@exp1^0,c
  4766   002786  EFC7  F013         	goto	u2881
  4767   00278A  EFC9  F013         	goto	u2880
  4768   00278E                     u2881:
  4769   00278E  EFD1  F013         	goto	l3650
  4770   002792                     u2880:
  4771   002792  EF7A  F013         	goto	l3618
  4772   002796                     l3648:
  4773   002796  90D8               	bcf	status,0,c
  4774   002798  3628               	rlcf	___fltol@f1^0,f,c
  4775   00279A  3629               	rlcf	(___fltol@f1+1)^0,f,c
  4776   00279C  362A               	rlcf	(___fltol@f1+2)^0,f,c
  4777   00279E  362B               	rlcf	(___fltol@f1+3)^0,f,c
  4778   0027A0  0631               	decf	___fltol@exp1^0,f,c
  4779   0027A2                     l3650:
  4780   0027A2  5031               	movf	___fltol@exp1^0,w,c
  4781   0027A4  A4D8               	btfss	status,2,c
  4782   0027A6  EFD7  F013         	goto	u2891
  4783   0027AA  EFD9  F013         	goto	u2890
  4784   0027AE                     u2891:
  4785   0027AE  EFCB  F013         	goto	l3648
  4786   0027B2                     u2890:
  4787   0027B2                     l3652:
  4788   0027B2  5030               	movf	___fltol@sign1^0,w,c
  4789   0027B4  B4D8               	btfsc	status,2,c
  4790   0027B6  EFDF  F013         	goto	u2901
  4791   0027BA  EFE1  F013         	goto	u2900
  4792   0027BE                     u2901:
  4793   0027BE  EFE9  F013         	goto	l3656
  4794   0027C2                     u2900:
  4795   0027C2  1E2B               	comf	(___fltol@f1+3)^0,f,c
  4796   0027C4  1E2A               	comf	(___fltol@f1+2)^0,f,c
  4797   0027C6  1E29               	comf	(___fltol@f1+1)^0,f,c
  4798   0027C8  6C28               	negf	___fltol@f1^0,c
  4799   0027CA  0E00               	movlw	0
  4800   0027CC  2229               	addwfc	(___fltol@f1+1)^0,f,c
  4801   0027CE  222A               	addwfc	(___fltol@f1+2)^0,f,c
  4802   0027D0  222B               	addwfc	(___fltol@f1+3)^0,f,c
  4803   0027D2                     l3656:
  4804   0027D2  C028  F028         	movff	___fltol@f1,?___fltol
  4805   0027D6  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  4806   0027DA  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  4807   0027DE  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  4808   0027E2                     l1046:
  4809   0027E2  0012               	return		;funcret
  4810   0027E4                     __end_of___fltol:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function ___flmul *****************
  4814 ;; Defined at:
  4815 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  b               4   14[COMRAM] long 
  4818 ;;  a               4   18[COMRAM] long 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  prod            4   33[COMRAM] struct .
  4821 ;;  grs             4   27[COMRAM] unsigned long 
  4822 ;;  temp            2   37[COMRAM] struct .
  4823 ;;  bexp            1   32[COMRAM] unsigned char 
  4824 ;;  aexp            1   31[COMRAM] unsigned char 
  4825 ;;  sign            1   26[COMRAM] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  4   14[COMRAM] unsigned char 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, prodl, prodh
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4835 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;Total ram usage:       25 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 1
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_scale_RGB
  4846 ;;		_stop
  4847 ;;		_turnLeft
  4848 ;;		_turnRight
  4849 ;;		_fullSpeedAhead
  4850 ;;		_fullSpeedReverse
  4851 ;;		_turnLeft90
  4852 ;;		_turnRight90
  4853 ;;		_turnLeft135
  4854 ;;		_turnRight135
  4855 ;;		_UTurn
  4856 ;;		_headbuttReverse
  4857 ;;		_squareReverse
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text28
  4862   00194A                     __ptext28:
  4863                           	callstack 0
  4864   00194A                     ___flmul:
  4865                           	callstack 28
  4866   00194A  5012               	movf	(___flmul@b+3)^0,w,c
  4867   00194C  0B80               	andlw	128
  4868   00194E  6E1B               	movwf	___flmul@sign^0,c
  4869   001950  5012               	movf	(___flmul@b+3)^0,w,c
  4870   001952  2412               	addwf	(___flmul@b+3)^0,w,c
  4871   001954  6E21               	movwf	___flmul@bexp^0,c
  4872   001956  AE11               	btfss	(___flmul@b+2)^0,7,c
  4873   001958  EFB0  F00C         	goto	u2651
  4874   00195C  EFB2  F00C         	goto	u2650
  4875   001960                     u2651:
  4876   001960  EFB3  F00C         	goto	l3492
  4877   001964                     u2650:
  4878   001964  8021               	bsf	___flmul@bexp^0,0,c
  4879   001966                     l3492:
  4880   001966  5021               	movf	___flmul@bexp^0,w,c
  4881   001968  B4D8               	btfsc	status,2,c
  4882   00196A  EFB9  F00C         	goto	u2661
  4883   00196E  EFBB  F00C         	goto	u2660
  4884   001972                     u2661:
  4885   001972  EFCE  F00C         	goto	l3500
  4886   001976                     u2660:
  4887   001976  2821               	incf	___flmul@bexp^0,w,c
  4888   001978  A4D8               	btfss	status,2,c
  4889   00197A  EFC1  F00C         	goto	u2671
  4890   00197E  EFC3  F00C         	goto	u2670
  4891   001982                     u2671:
  4892   001982  EFCB  F00C         	goto	l3498
  4893   001986                     u2670:
  4894   001986  0E00               	movlw	0
  4895   001988  6E0F               	movwf	___flmul@b^0,c
  4896   00198A  0E00               	movlw	0
  4897   00198C  6E10               	movwf	(___flmul@b+1)^0,c
  4898   00198E  0E00               	movlw	0
  4899   001990  6E11               	movwf	(___flmul@b+2)^0,c
  4900   001992  0E00               	movlw	0
  4901   001994  6E12               	movwf	(___flmul@b+3)^0,c
  4902   001996                     l3498:
  4903   001996  8E11               	bsf	(___flmul@b+2)^0,7,c
  4904   001998  EFD6  F00C         	goto	l3502
  4905   00199C                     l3500:
  4906   00199C  0E00               	movlw	0
  4907   00199E  6E0F               	movwf	___flmul@b^0,c
  4908   0019A0  0E00               	movlw	0
  4909   0019A2  6E10               	movwf	(___flmul@b+1)^0,c
  4910   0019A4  0E00               	movlw	0
  4911   0019A6  6E11               	movwf	(___flmul@b+2)^0,c
  4912   0019A8  0E00               	movlw	0
  4913   0019AA  6E12               	movwf	(___flmul@b+3)^0,c
  4914   0019AC                     l3502:
  4915   0019AC  5016               	movf	(___flmul@a+3)^0,w,c
  4916   0019AE  0B80               	andlw	128
  4917   0019B0  1A1B               	xorwf	___flmul@sign^0,f,c
  4918   0019B2  5016               	movf	(___flmul@a+3)^0,w,c
  4919   0019B4  2416               	addwf	(___flmul@a+3)^0,w,c
  4920   0019B6  6E20               	movwf	___flmul@aexp^0,c
  4921   0019B8  AE15               	btfss	(___flmul@a+2)^0,7,c
  4922   0019BA  EFE1  F00C         	goto	u2681
  4923   0019BE  EFE3  F00C         	goto	u2680
  4924   0019C2                     u2681:
  4925   0019C2  EFE4  F00C         	goto	l3510
  4926   0019C6                     u2680:
  4927   0019C6  8020               	bsf	___flmul@aexp^0,0,c
  4928   0019C8                     l3510:
  4929   0019C8  5020               	movf	___flmul@aexp^0,w,c
  4930   0019CA  B4D8               	btfsc	status,2,c
  4931   0019CC  EFEA  F00C         	goto	u2691
  4932   0019D0  EFEC  F00C         	goto	u2690
  4933   0019D4                     u2691:
  4934   0019D4  EFFF  F00C         	goto	l3518
  4935   0019D8                     u2690:
  4936   0019D8  2820               	incf	___flmul@aexp^0,w,c
  4937   0019DA  A4D8               	btfss	status,2,c
  4938   0019DC  EFF2  F00C         	goto	u2701
  4939   0019E0  EFF4  F00C         	goto	u2700
  4940   0019E4                     u2701:
  4941   0019E4  EFFC  F00C         	goto	l3516
  4942   0019E8                     u2700:
  4943   0019E8  0E00               	movlw	0
  4944   0019EA  6E13               	movwf	___flmul@a^0,c
  4945   0019EC  0E00               	movlw	0
  4946   0019EE  6E14               	movwf	(___flmul@a+1)^0,c
  4947   0019F0  0E00               	movlw	0
  4948   0019F2  6E15               	movwf	(___flmul@a+2)^0,c
  4949   0019F4  0E00               	movlw	0
  4950   0019F6  6E16               	movwf	(___flmul@a+3)^0,c
  4951   0019F8                     l3516:
  4952   0019F8  8E15               	bsf	(___flmul@a+2)^0,7,c
  4953   0019FA  EF07  F00D         	goto	l1363
  4954   0019FE                     l3518:
  4955   0019FE  0E00               	movlw	0
  4956   001A00  6E13               	movwf	___flmul@a^0,c
  4957   001A02  0E00               	movlw	0
  4958   001A04  6E14               	movwf	(___flmul@a+1)^0,c
  4959   001A06  0E00               	movlw	0
  4960   001A08  6E15               	movwf	(___flmul@a+2)^0,c
  4961   001A0A  0E00               	movlw	0
  4962   001A0C  6E16               	movwf	(___flmul@a+3)^0,c
  4963   001A0E                     l1363:
  4964   001A0E  5020               	movf	___flmul@aexp^0,w,c
  4965   001A10  B4D8               	btfsc	status,2,c
  4966   001A12  EF0D  F00D         	goto	u2711
  4967   001A16  EF0F  F00D         	goto	u2710
  4968   001A1A                     u2711:
  4969   001A1A  EF17  F00D         	goto	l3522
  4970   001A1E                     u2710:
  4971   001A1E  5021               	movf	___flmul@bexp^0,w,c
  4972   001A20  A4D8               	btfss	status,2,c
  4973   001A22  EF15  F00D         	goto	u2721
  4974   001A26  EF17  F00D         	goto	u2720
  4975   001A2A                     u2721:
  4976   001A2A  EF21  F00D         	goto	l3526
  4977   001A2E                     u2720:
  4978   001A2E                     l3522:
  4979   001A2E  0E00               	movlw	0
  4980   001A30  6E0F               	movwf	?___flmul^0,c
  4981   001A32  0E00               	movlw	0
  4982   001A34  6E10               	movwf	(?___flmul+1)^0,c
  4983   001A36  0E00               	movlw	0
  4984   001A38  6E11               	movwf	(?___flmul+2)^0,c
  4985   001A3A  0E00               	movlw	0
  4986   001A3C  6E12               	movwf	(?___flmul+3)^0,c
  4987   001A3E  EFB9  F00E         	goto	l1367
  4988   001A42                     l3526:
  4989   001A42  5015               	movf	(___flmul@a+2)^0,w,c
  4990   001A44  020F               	mulwf	___flmul@b^0,c
  4991   001A46  CFF3 F026          	movff	prodl,___flmul@temp
  4992   001A4A  CFF4 F027          	movff	prodh,___flmul@temp+1
  4993   001A4E  5026               	movf	___flmul@temp^0,w,c
  4994   001A50  6E1C               	movwf	___flmul@grs^0,c
  4995   001A52  6A1D               	clrf	(___flmul@grs+1)^0,c
  4996   001A54  6A1E               	clrf	(___flmul@grs+2)^0,c
  4997   001A56  6A1F               	clrf	(___flmul@grs+3)^0,c
  4998   001A58  5027               	movf	(___flmul@temp+1)^0,w,c
  4999   001A5A  6E22               	movwf	___flmul@prod^0,c
  5000   001A5C  6A23               	clrf	(___flmul@prod+1)^0,c
  5001   001A5E  6A24               	clrf	(___flmul@prod+2)^0,c
  5002   001A60  6A25               	clrf	(___flmul@prod+3)^0,c
  5003   001A62  5014               	movf	(___flmul@a+1)^0,w,c
  5004   001A64  0210               	mulwf	(___flmul@b+1)^0,c
  5005   001A66  CFF3 F026          	movff	prodl,___flmul@temp
  5006   001A6A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5007   001A6E  5026               	movf	___flmul@temp^0,w,c
  5008   001A70  261C               	addwf	___flmul@grs^0,f,c
  5009   001A72  0E00               	movlw	0
  5010   001A74  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5011   001A76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5012   001A78  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5013   001A7A  5027               	movf	(___flmul@temp+1)^0,w,c
  5014   001A7C  2622               	addwf	___flmul@prod^0,f,c
  5015   001A7E  0E00               	movlw	0
  5016   001A80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5017   001A82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5018   001A84  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5019   001A86  5013               	movf	___flmul@a^0,w,c
  5020   001A88  0211               	mulwf	(___flmul@b+2)^0,c
  5021   001A8A  CFF3 F026          	movff	prodl,___flmul@temp
  5022   001A8E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5023   001A92  5026               	movf	___flmul@temp^0,w,c
  5024   001A94  261C               	addwf	___flmul@grs^0,f,c
  5025   001A96  0E00               	movlw	0
  5026   001A98  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5027   001A9A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5028   001A9C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5029   001A9E  5027               	movf	(___flmul@temp+1)^0,w,c
  5030   001AA0  2622               	addwf	___flmul@prod^0,f,c
  5031   001AA2  0E00               	movlw	0
  5032   001AA4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5033   001AA6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5034   001AA8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5035   001AAA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5036   001AAE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5037   001AB2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5038   001AB6  6A1C               	clrf	___flmul@grs^0,c
  5039   001AB8  5013               	movf	___flmul@a^0,w,c
  5040   001ABA  0210               	mulwf	(___flmul@b+1)^0,c
  5041   001ABC  CFF3 F026          	movff	prodl,___flmul@temp
  5042   001AC0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5043   001AC4  5026               	movf	___flmul@temp^0,w,c
  5044   001AC6  261C               	addwf	___flmul@grs^0,f,c
  5045   001AC8  5027               	movf	(___flmul@temp+1)^0,w,c
  5046   001ACA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5047   001ACC  0E00               	movlw	0
  5048   001ACE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5049   001AD0  0E00               	movlw	0
  5050   001AD2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5051   001AD4  5014               	movf	(___flmul@a+1)^0,w,c
  5052   001AD6  020F               	mulwf	___flmul@b^0,c
  5053   001AD8  CFF3 F026          	movff	prodl,___flmul@temp
  5054   001ADC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5055   001AE0  5026               	movf	___flmul@temp^0,w,c
  5056   001AE2  261C               	addwf	___flmul@grs^0,f,c
  5057   001AE4  5027               	movf	(___flmul@temp+1)^0,w,c
  5058   001AE6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5059   001AE8  0E00               	movlw	0
  5060   001AEA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5061   001AEC  0E00               	movlw	0
  5062   001AEE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5063   001AF0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5064   001AF4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5065   001AF8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5066   001AFC  6A1C               	clrf	___flmul@grs^0,c
  5067   001AFE  5013               	movf	___flmul@a^0,w,c
  5068   001B00  020F               	mulwf	___flmul@b^0,c
  5069   001B02  CFF3 F026          	movff	prodl,___flmul@temp
  5070   001B06  CFF4 F027          	movff	prodh,___flmul@temp+1
  5071   001B0A  5026               	movf	___flmul@temp^0,w,c
  5072   001B0C  261C               	addwf	___flmul@grs^0,f,c
  5073   001B0E  5027               	movf	(___flmul@temp+1)^0,w,c
  5074   001B10  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5075   001B12  0E00               	movlw	0
  5076   001B14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5077   001B16  0E00               	movlw	0
  5078   001B18  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5079   001B1A  5015               	movf	(___flmul@a+2)^0,w,c
  5080   001B1C  0210               	mulwf	(___flmul@b+1)^0,c
  5081   001B1E  CFF3 F026          	movff	prodl,___flmul@temp
  5082   001B22  CFF4 F027          	movff	prodh,___flmul@temp+1
  5083   001B26  5026               	movf	___flmul@temp^0,w,c
  5084   001B28  2622               	addwf	___flmul@prod^0,f,c
  5085   001B2A  5027               	movf	(___flmul@temp+1)^0,w,c
  5086   001B2C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5087   001B2E  0E00               	movlw	0
  5088   001B30  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5089   001B32  0E00               	movlw	0
  5090   001B34  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5091   001B36  5014               	movf	(___flmul@a+1)^0,w,c
  5092   001B38  0211               	mulwf	(___flmul@b+2)^0,c
  5093   001B3A  CFF3 F026          	movff	prodl,___flmul@temp
  5094   001B3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5095   001B42  5026               	movf	___flmul@temp^0,w,c
  5096   001B44  2622               	addwf	___flmul@prod^0,f,c
  5097   001B46  5027               	movf	(___flmul@temp+1)^0,w,c
  5098   001B48  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5099   001B4A  0E00               	movlw	0
  5100   001B4C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5101   001B4E  0E00               	movlw	0
  5102   001B50  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5103   001B52  5015               	movf	(___flmul@a+2)^0,w,c
  5104   001B54  0211               	mulwf	(___flmul@b+2)^0,c
  5105   001B56  CFF3 F026          	movff	prodl,___flmul@temp
  5106   001B5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5107   001B5E  5026               	movf	___flmul@temp^0,w,c
  5108   001B60  6E17               	movwf	??___flmul^0,c
  5109   001B62  5027               	movf	(___flmul@temp+1)^0,w,c
  5110   001B64  6E18               	movwf	(??___flmul+1)^0,c
  5111   001B66  6A19               	clrf	(??___flmul+2)^0,c
  5112   001B68  6A1A               	clrf	(??___flmul+3)^0,c
  5113   001B6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5114   001B6E  C018  F019         	movff	??___flmul+1,??___flmul+2
  5115   001B72  C017  F018         	movff	??___flmul,??___flmul+1
  5116   001B76  6A17               	clrf	??___flmul^0,c
  5117   001B78  5017               	movf	??___flmul^0,w,c
  5118   001B7A  2622               	addwf	___flmul@prod^0,f,c
  5119   001B7C  5018               	movf	(??___flmul+1)^0,w,c
  5120   001B7E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5121   001B80  5019               	movf	(??___flmul+2)^0,w,c
  5122   001B82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5123   001B84  501A               	movf	(??___flmul+3)^0,w,c
  5124   001B86  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5125   001B88  C01C  F017         	movff	___flmul@grs,??___flmul
  5126   001B8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5127   001B90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5128   001B94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5129   001B98  0E19               	movlw	25
  5130   001B9A  EFD4  F00D         	goto	u2730
  5131   001B9E                     u2735:
  5132   001B9E  90D8               	bcf	status,0,c
  5133   001BA0  321A               	rrcf	(??___flmul+3)^0,f,c
  5134   001BA2  3219               	rrcf	(??___flmul+2)^0,f,c
  5135   001BA4  3218               	rrcf	(??___flmul+1)^0,f,c
  5136   001BA6  3217               	rrcf	??___flmul^0,f,c
  5137   001BA8                     u2730:
  5138   001BA8  2EE8               	decfsz	wreg,f,c
  5139   001BAA  EFCF  F00D         	goto	u2735
  5140   001BAE  5017               	movf	??___flmul^0,w,c
  5141   001BB0  2622               	addwf	___flmul@prod^0,f,c
  5142   001BB2  5018               	movf	(??___flmul+1)^0,w,c
  5143   001BB4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5144   001BB6  5019               	movf	(??___flmul+2)^0,w,c
  5145   001BB8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5146   001BBA  501A               	movf	(??___flmul+3)^0,w,c
  5147   001BBC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5148   001BBE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5149   001BC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5150   001BC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5151   001BCA  6A1C               	clrf	___flmul@grs^0,c
  5152   001BCC  5020               	movf	___flmul@aexp^0,w,c
  5153   001BCE  C021  F017         	movff	___flmul@bexp,??___flmul
  5154   001BD2  6A18               	clrf	(??___flmul+1)^0,c
  5155   001BD4  2617               	addwf	??___flmul^0,f,c
  5156   001BD6  0E00               	movlw	0
  5157   001BD8  2218               	addwfc	(??___flmul+1)^0,f,c
  5158   001BDA  0E82               	movlw	130
  5159   001BDC  2417               	addwf	??___flmul^0,w,c
  5160   001BDE  6E26               	movwf	___flmul@temp^0,c
  5161   001BE0  0EFF               	movlw	255
  5162   001BE2  2018               	addwfc	(??___flmul+1)^0,w,c
  5163   001BE4  6E27               	movwf	(___flmul@temp+1)^0,c
  5164   001BE6  EF0A  F00E         	goto	l3574
  5165   001BEA                     l3568:
  5166   001BEA  90D8               	bcf	status,0,c
  5167   001BEC  3622               	rlcf	___flmul@prod^0,f,c
  5168   001BEE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5169   001BF0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5170   001BF2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5171   001BF4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5172   001BF6  EFFF  F00D         	goto	u2741
  5173   001BFA  EF01  F00E         	goto	u2740
  5174   001BFE                     u2741:
  5175   001BFE  EF02  F00E         	goto	l1370
  5176   001C02                     u2740:
  5177   001C02  8022               	bsf	___flmul@prod^0,0,c
  5178   001C04                     l1370:
  5179   001C04  90D8               	bcf	status,0,c
  5180   001C06  361C               	rlcf	___flmul@grs^0,f,c
  5181   001C08  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5182   001C0A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5183   001C0C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5184   001C0E  0626               	decf	___flmul@temp^0,f,c
  5185   001C10  A0D8               	btfss	status,0,c
  5186   001C12  0627               	decf	(___flmul@temp+1)^0,f,c
  5187   001C14                     l3574:
  5188   001C14  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5189   001C16  EF0F  F00E         	goto	u2751
  5190   001C1A  EF11  F00E         	goto	u2750
  5191   001C1E                     u2751:
  5192   001C1E  EFF5  F00D         	goto	l3568
  5193   001C22                     u2750:
  5194   001C22  0E00               	movlw	0
  5195   001C24  6E20               	movwf	___flmul@aexp^0,c
  5196   001C26  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5197   001C28  EF18  F00E         	goto	u2761
  5198   001C2C  EF1A  F00E         	goto	u2760
  5199   001C30                     u2761:
  5200   001C30  EF3E  F00E         	goto	l1372
  5201   001C34                     u2760:
  5202   001C34  0EFF               	movlw	255
  5203   001C36  141C               	andwf	___flmul@grs^0,w,c
  5204   001C38  6E17               	movwf	??___flmul^0,c
  5205   001C3A  0EFF               	movlw	255
  5206   001C3C  141D               	andwf	(___flmul@grs+1)^0,w,c
  5207   001C3E  6E18               	movwf	(??___flmul+1)^0,c
  5208   001C40  0EFF               	movlw	255
  5209   001C42  141E               	andwf	(___flmul@grs+2)^0,w,c
  5210   001C44  6E19               	movwf	(??___flmul+2)^0,c
  5211   001C46  0E7F               	movlw	127
  5212   001C48  141F               	andwf	(___flmul@grs+3)^0,w,c
  5213   001C4A  6E1A               	movwf	(??___flmul+3)^0,c
  5214   001C4C  5017               	movf	??___flmul^0,w,c
  5215   001C4E  1018               	iorwf	(??___flmul+1)^0,w,c
  5216   001C50  1019               	iorwf	(??___flmul+2)^0,w,c
  5217   001C52  101A               	iorwf	(??___flmul+3)^0,w,c
  5218   001C54  B4D8               	btfsc	status,2,c
  5219   001C56  EF2F  F00E         	goto	u2771
  5220   001C5A  EF31  F00E         	goto	u2770
  5221   001C5E                     u2771:
  5222   001C5E  EF35  F00E         	goto	l1373
  5223   001C62                     u2770:
  5224   001C62                     l3582:
  5225   001C62  0E01               	movlw	1
  5226   001C64  6E20               	movwf	___flmul@aexp^0,c
  5227   001C66  EF3E  F00E         	goto	l1372
  5228   001C6A                     l1373:
  5229   001C6A  A022               	btfss	___flmul@prod^0,0,c
  5230   001C6C  EF3A  F00E         	goto	u2781
  5231   001C70  EF3C  F00E         	goto	u2780
  5232   001C74                     u2781:
  5233   001C74  EF3E  F00E         	goto	l1372
  5234   001C78                     u2780:
  5235   001C78  EF31  F00E         	goto	l3582
  5236   001C7C                     l1372:
  5237   001C7C  5020               	movf	___flmul@aexp^0,w,c
  5238   001C7E  B4D8               	btfsc	status,2,c
  5239   001C80  EF44  F00E         	goto	u2791
  5240   001C84  EF46  F00E         	goto	u2790
  5241   001C88                     u2791:
  5242   001C88  EF6A  F00E         	goto	l3594
  5243   001C8C                     u2790:
  5244   001C8C  0E01               	movlw	1
  5245   001C8E  2622               	addwf	___flmul@prod^0,f,c
  5246   001C90  0E00               	movlw	0
  5247   001C92  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5248   001C94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5249   001C96  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5250   001C98  A025               	btfss	(___flmul@prod+3)^0,0,c
  5251   001C9A  EF51  F00E         	goto	u2801
  5252   001C9E  EF53  F00E         	goto	u2800
  5253   001CA2                     u2801:
  5254   001CA2  EF6A  F00E         	goto	l3594
  5255   001CA6                     u2800:
  5256   001CA6  C022  F017         	movff	___flmul@prod,??___flmul
  5257   001CAA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5258   001CAE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5259   001CB2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5260   001CB6  341A               	rlcf	(??___flmul+3)^0,w,c
  5261   001CB8  321A               	rrcf	(??___flmul+3)^0,f,c
  5262   001CBA  3219               	rrcf	(??___flmul+2)^0,f,c
  5263   001CBC  3218               	rrcf	(??___flmul+1)^0,f,c
  5264   001CBE  3217               	rrcf	??___flmul^0,f,c
  5265   001CC0  C017  F022         	movff	??___flmul,___flmul@prod
  5266   001CC4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5267   001CC8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5268   001CCC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5269   001CD0  4A26               	infsnz	___flmul@temp^0,f,c
  5270   001CD2  2A27               	incf	(___flmul@temp+1)^0,f,c
  5271   001CD4                     l3594:
  5272   001CD4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5273   001CD6  EF75  F00E         	goto	u2811
  5274   001CDA  5027               	movf	(___flmul@temp+1)^0,w,c
  5275   001CDC  E108               	bnz	u2810
  5276   001CDE  2826               	incf	___flmul@temp^0,w,c
  5277   001CE0  A0D8               	btfss	status,0,c
  5278   001CE2  EF75  F00E         	goto	u2811
  5279   001CE6  EF77  F00E         	goto	u2810
  5280   001CEA                     u2811:
  5281   001CEA  EF81  F00E         	goto	l3598
  5282   001CEE                     u2810:
  5283   001CEE  0E00               	movlw	0
  5284   001CF0  6E22               	movwf	___flmul@prod^0,c
  5285   001CF2  0E00               	movlw	0
  5286   001CF4  6E23               	movwf	(___flmul@prod+1)^0,c
  5287   001CF6  0E80               	movlw	128
  5288   001CF8  6E24               	movwf	(___flmul@prod+2)^0,c
  5289   001CFA  0E7F               	movlw	127
  5290   001CFC  6E25               	movwf	(___flmul@prod+3)^0,c
  5291   001CFE  EFAF  F00E         	goto	l3610
  5292   001D02                     l3598:
  5293   001D02  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5294   001D04  EF8E  F00E         	goto	u2820
  5295   001D08  5027               	movf	(___flmul@temp+1)^0,w,c
  5296   001D0A  E106               	bnz	u2821
  5297   001D0C  0426               	decf	___flmul@temp^0,w,c
  5298   001D0E  B0D8               	btfsc	status,0,c
  5299   001D10  EF8C  F00E         	goto	u2821
  5300   001D14  EF8E  F00E         	goto	u2820
  5301   001D18                     u2821:
  5302   001D18  EF9A  F00E         	goto	l1380
  5303   001D1C                     u2820:
  5304   001D1C  0E00               	movlw	0
  5305   001D1E  6E22               	movwf	___flmul@prod^0,c
  5306   001D20  0E00               	movlw	0
  5307   001D22  6E23               	movwf	(___flmul@prod+1)^0,c
  5308   001D24  0E00               	movlw	0
  5309   001D26  6E24               	movwf	(___flmul@prod+2)^0,c
  5310   001D28  0E00               	movlw	0
  5311   001D2A  6E25               	movwf	(___flmul@prod+3)^0,c
  5312   001D2C  0E00               	movlw	0
  5313   001D2E  6E1B               	movwf	___flmul@sign^0,c
  5314   001D30  EFAF  F00E         	goto	l3610
  5315   001D34                     l1380:
  5316   001D34  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5317   001D38  0EFF               	movlw	255
  5318   001D3A  1622               	andwf	___flmul@prod^0,f,c
  5319   001D3C  0EFF               	movlw	255
  5320   001D3E  1623               	andwf	(___flmul@prod+1)^0,f,c
  5321   001D40  0E7F               	movlw	127
  5322   001D42  1624               	andwf	(___flmul@prod+2)^0,f,c
  5323   001D44  0E00               	movlw	0
  5324   001D46  1625               	andwf	(___flmul@prod+3)^0,f,c
  5325   001D48  A021               	btfss	___flmul@bexp^0,0,c
  5326   001D4A  EFA9  F00E         	goto	u2831
  5327   001D4E  EFAB  F00E         	goto	u2830
  5328   001D52                     u2831:
  5329   001D52  EFAC  F00E         	goto	l3608
  5330   001D56                     u2830:
  5331   001D56  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5332   001D58                     l3608:
  5333   001D58  90D8               	bcf	status,0,c
  5334   001D5A  3021               	rrcf	___flmul@bexp^0,w,c
  5335   001D5C  6E25               	movwf	(___flmul@prod+3)^0,c
  5336   001D5E                     l3610:
  5337   001D5E  501B               	movf	___flmul@sign^0,w,c
  5338   001D60  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5339   001D62  C022  F00F         	movff	___flmul@prod,?___flmul
  5340   001D66  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5341   001D6A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5342   001D6E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5343   001D72                     l1367:
  5344   001D72  0012               	return		;funcret
  5345   001D74                     __end_of___flmul:
  5346                           	callstack 0
  5347                           
  5348 ;; *************** function _read_timer *****************
  5349 ;; Defined at:
  5350 ;;		line 29 in file "timers.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  tH              1    0[COMRAM] PTR unsigned char 
  5353 ;;		 -> forward_navigation@timerH(1), 
  5354 ;;  tL              1    1[COMRAM] PTR unsigned char 
  5355 ;;		 -> forward_navigation@timerL(1), 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr2l, fsr2h, status,2
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 1
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_forward_navigation
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text29
  5382   003708                     __ptext29:
  5383                           	callstack 0
  5384   003708                     _read_timer:
  5385                           	callstack 28
  5386   003708                     
  5387                           ;timers.c: 29: void read_timer(unsigned char *tH, unsigned char *tL);timers.c: 30: {;tim
      +                          ers.c: 34:     *tL = TMR0L;
  5388   003708  5002               	movf	read_timer@tL^0,w,c
  5389   00370A  6ED9               	movwf	fsr2l,c
  5390   00370C  6ADA               	clrf	fsr2h,c
  5391   00370E  CFD3 FFDF          	movff	4051,indf2	;volatile
  5392                           
  5393                           ;timers.c: 35:     *tH = TMR0H;
  5394   003712  5001               	movf	read_timer@tH^0,w,c
  5395   003714  6ED9               	movwf	fsr2l,c
  5396   003716  6ADA               	clrf	fsr2h,c
  5397   003718  CFD4 FFDF          	movff	4052,indf2	;volatile
  5398   00371C  0012               	return		;funcret
  5399   00371E                     __end_of_read_timer:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _convert_HSV *****************
  5403 ;; Defined at:
  5404 ;;		line 209 in file "color.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  5407 ;;		 -> main@HSV_colour(6), 
  5408 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  5409 ;;		 -> main@RGBC_colour(8), 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  temp            4   51[COMRAM] unsigned long 
  5412 ;;  temp            4   47[COMRAM] unsigned long 
  5413 ;;  temp            4   43[COMRAM] unsigned long 
  5414 ;;  temp            4   39[COMRAM] unsigned long 
  5415 ;;  temp            4   55[COMRAM] unsigned long 
  5416 ;;  temp            4   35[COMRAM] unsigned long 
  5417 ;;  temp            4   31[COMRAM] unsigned long 
  5418 ;;  C               2   63[COMRAM] unsigned int 
  5419 ;;  M               2   61[COMRAM] unsigned int 
  5420 ;;  hue_scale       2   59[COMRAM] unsigned int 
  5421 ;;  hue             2   29[COMRAM] unsigned int 
  5422 ;;  sat             2   27[COMRAM] unsigned int 
  5423 ;;  m               2   25[COMRAM] unsigned int 
  5424 ;;  sat_scale       2   23[COMRAM] unsigned int 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:       52 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 2
  5441 ;; This function calls:
  5442 ;;		___lldiv
  5443 ;;		___lmul
  5444 ;;		_max_RGB
  5445 ;;		_min_RGB
  5446 ;; This function is called by:
  5447 ;;		_main
  5448 ;;		_forward_navigation
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text30
  5453   000E1A                     __ptext30:
  5454                           	callstack 0
  5455   000E1A                     _convert_HSV:
  5456                           	callstack 27
  5457   000E1A                     
  5458                           ;color.c: 209: void convert_HSV(struct HSV_val *p1,struct RGBC_val *p2);color.c: 210: {;
      +                          color.c: 211:     unsigned int hue = 0;
  5459   000E1A  0E00               	movlw	0
  5460   000E1C  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  5461   000E1E  0E00               	movlw	0
  5462   000E20  6E1E               	movwf	convert_HSV@hue^0,c
  5463                           
  5464                           ;color.c: 213:     unsigned int hue_scale = 60;
  5465   000E22  0E00               	movlw	0
  5466   000E24  6E3D               	movwf	(convert_HSV@hue_scale+1)^0,c
  5467   000E26  0E3C               	movlw	60
  5468   000E28  6E3C               	movwf	convert_HSV@hue_scale^0,c
  5469                           
  5470                           ;color.c: 214:     unsigned int sat_scale = 100;
  5471   000E2A  0E00               	movlw	0
  5472   000E2C  6E19               	movwf	(convert_HSV@sat_scale+1)^0,c
  5473   000E2E  0E64               	movlw	100
  5474   000E30  6E18               	movwf	convert_HSV@sat_scale^0,c
  5475   000E32                     
  5476                           ;color.c: 216:     unsigned int M = max_RGB(p2);
  5477   000E32  C00F  F001         	movff	convert_HSV@p2,max_RGB@p
  5478   000E36  EC75  F017         	call	_max_RGB	;wreg free
  5479   000E3A  C001  F03E         	movff	?_max_RGB,convert_HSV@M
  5480   000E3E  C002  F03F         	movff	?_max_RGB+1,convert_HSV@M+1
  5481   000E42                     
  5482                           ;color.c: 217:     unsigned int m = min_RGB(p2);
  5483   000E42  C00F  F001         	movff	convert_HSV@p2,min_RGB@p
  5484   000E46  EC37  F017         	call	_min_RGB	;wreg free
  5485   000E4A  C001  F01A         	movff	?_min_RGB,convert_HSV@m
  5486   000E4E  C002  F01B         	movff	?_min_RGB+1,convert_HSV@m+1
  5487   000E52                     
  5488                           ;color.c: 218:     unsigned int C = M - m;
  5489   000E52  501A               	movf	convert_HSV@m^0,w,c
  5490   000E54  5C3E               	subwf	convert_HSV@M^0,w,c
  5491   000E56  6E40               	movwf	convert_HSV@C^0,c
  5492   000E58  501B               	movf	(convert_HSV@m+1)^0,w,c
  5493   000E5A  583F               	subwfb	(convert_HSV@M+1)^0,w,c
  5494   000E5C  6E41               	movwf	(convert_HSV@C+1)^0,c
  5495   000E5E                     
  5496                           ;color.c: 220:     if (C == 0) {
  5497   000E5E  5040               	movf	convert_HSV@C^0,w,c
  5498   000E60  1041               	iorwf	(convert_HSV@C+1)^0,w,c
  5499   000E62  A4D8               	btfss	status,2,c
  5500   000E64  EF36  F007         	goto	u3041
  5501   000E68  EF38  F007         	goto	u3040
  5502   000E6C                     u3041:
  5503   000E6C  EF3E  F007         	goto	l3770
  5504   000E70                     u3040:
  5505   000E70                     
  5506                           ;color.c: 221:         hue = 0;
  5507   000E70  0E00               	movlw	0
  5508   000E72  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  5509   000E74  0E00               	movlw	0
  5510   000E76  6E1E               	movwf	convert_HSV@hue^0,c
  5511                           
  5512                           ;color.c: 222:     } else {
  5513   000E78  EF0E  F00A         	goto	l3854
  5514   000E7C                     l3770:
  5515                           
  5516                           ;color.c: 232:         if (M == p2->R) {
  5517   000E7C  500F               	movf	convert_HSV@p2^0,w,c
  5518   000E7E  6ED9               	movwf	fsr2l,c
  5519   000E80  6ADA               	clrf	fsr2h,c
  5520   000E82  503E               	movf	convert_HSV@M^0,w,c
  5521   000E84  18DE               	xorwf	postinc2,w,c
  5522   000E86  E107               	bnz	u3051
  5523   000E88  503F               	movf	(convert_HSV@M+1)^0,w,c
  5524   000E8A  18DE               	xorwf	postinc2,w,c
  5525   000E8C  A4D8               	btfss	status,2,c
  5526   000E8E  EF4B  F007         	goto	u3051
  5527   000E92  EF4D  F007         	goto	u3050
  5528   000E96                     u3051:
  5529   000E96  EF3A  F008         	goto	l3798
  5530   000E9A                     u3050:
  5531   000E9A                     
  5532                           ;color.c: 233:             if (p2->G >= p2->B) {
  5533   000E9A  500F               	movf	convert_HSV@p2^0,w,c
  5534   000E9C  6ED9               	movwf	fsr2l,c
  5535   000E9E  6ADA               	clrf	fsr2h,c
  5536   000EA0  0E04               	movlw	4
  5537   000EA2  26D9               	addwf	fsr2l,f,c
  5538   000EA4  500F               	movf	convert_HSV@p2^0,w,c
  5539   000EA6  6EE1               	movwf	fsr1l,c
  5540   000EA8  6AE2               	clrf	fsr1h,c
  5541   000EAA  0E02               	movlw	2
  5542   000EAC  26E1               	addwf	fsr1l,f,c
  5543   000EAE  50DE               	movf	postinc2,w,c
  5544   000EB0  5CE6               	subwf	postinc1,w,c
  5545   000EB2  50DE               	movf	postinc2,w,c
  5546   000EB4  58E6               	subwfb	postinc1,w,c
  5547   000EB6  A0D8               	btfss	status,0,c
  5548   000EB8  EF60  F007         	goto	u3061
  5549   000EBC  EF62  F007         	goto	u3060
  5550   000EC0                     u3061:
  5551   000EC0  EFC2  F007         	goto	l3786
  5552   000EC4                     u3060:
  5553   000EC4                     
  5554                           ;color.c: 237:                 temp *= 0;
  5555   000EC4  0E00               	movlw	0
  5556   000EC6  6E24               	movwf	convert_HSV@temp^0,c
  5557   000EC8  0E00               	movlw	0
  5558   000ECA  6E25               	movwf	(convert_HSV@temp+1)^0,c
  5559   000ECC  0E00               	movlw	0
  5560   000ECE  6E26               	movwf	(convert_HSV@temp+2)^0,c
  5561   000ED0  0E00               	movlw	0
  5562   000ED2  6E27               	movwf	(convert_HSV@temp+3)^0,c
  5563   000ED4                     
  5564                           ;color.c: 238:                 temp += (unsigned long)(p2->G - p2->B);
  5565   000ED4  500F               	movf	convert_HSV@p2^0,w,c
  5566   000ED6  6ED9               	movwf	fsr2l,c
  5567   000ED8  6ADA               	clrf	fsr2h,c
  5568   000EDA  0E04               	movlw	4
  5569   000EDC  26D9               	addwf	fsr2l,f,c
  5570   000EDE  CFDE F010          	movff	postinc2,??_convert_HSV
  5571   000EE2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5572   000EE6  500F               	movf	convert_HSV@p2^0,w,c
  5573   000EE8  6ED9               	movwf	fsr2l,c
  5574   000EEA  6ADA               	clrf	fsr2h,c
  5575   000EEC  0E02               	movlw	2
  5576   000EEE  26D9               	addwf	fsr2l,f,c
  5577   000EF0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5578   000EF4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5579   000EF8  5010               	movf	??_convert_HSV^0,w,c
  5580   000EFA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5581   000EFC  6E14               	movwf	(??_convert_HSV+4)^0,c
  5582   000EFE  5011               	movf	(??_convert_HSV+1)^0,w,c
  5583   000F00  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5584   000F02  6E15               	movwf	(??_convert_HSV+5)^0,c
  5585   000F04  5014               	movf	(??_convert_HSV+4)^0,w,c
  5586   000F06  2624               	addwf	convert_HSV@temp^0,f,c
  5587   000F08  5015               	movf	(??_convert_HSV+5)^0,w,c
  5588   000F0A  2225               	addwfc	(convert_HSV@temp+1)^0,f,c
  5589   000F0C  0E00               	movlw	0
  5590   000F0E  2226               	addwfc	(convert_HSV@temp+2)^0,f,c
  5591   000F10  0E00               	movlw	0
  5592   000F12  2227               	addwfc	(convert_HSV@temp+3)^0,f,c
  5593   000F14                     
  5594                           ;color.c: 239:                 temp *= (unsigned long)hue_scale;
  5595   000F14  C024  F001         	movff	convert_HSV@temp,___lmul@multiplier
  5596   000F18  C025  F002         	movff	convert_HSV@temp+1,___lmul@multiplier+1
  5597   000F1C  C026  F003         	movff	convert_HSV@temp+2,___lmul@multiplier+2
  5598   000F20  C027  F004         	movff	convert_HSV@temp+3,___lmul@multiplier+3
  5599   000F24  0E3C               	movlw	60
  5600   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  5601   000F28  0E00               	movlw	0
  5602   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5603   000F2C  0E00               	movlw	0
  5604   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5605   000F30  0E00               	movlw	0
  5606   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5607   000F34  EC28  F018         	call	___lmul	;wreg free
  5608   000F38  C001  F024         	movff	?___lmul,convert_HSV@temp
  5609   000F3C  C002  F025         	movff	?___lmul+1,convert_HSV@temp+1
  5610   000F40  C003  F026         	movff	?___lmul+2,convert_HSV@temp+2
  5611   000F44  C004  F027         	movff	?___lmul+3,convert_HSV@temp+3
  5612   000F48                     
  5613                           ;color.c: 240:                 temp /= (unsigned long)C;
  5614   000F48  C024  F001         	movff	convert_HSV@temp,___lldiv@dividend
  5615   000F4C  C025  F002         	movff	convert_HSV@temp+1,___lldiv@dividend+1
  5616   000F50  C026  F003         	movff	convert_HSV@temp+2,___lldiv@dividend+2
  5617   000F54  C027  F004         	movff	convert_HSV@temp+3,___lldiv@dividend+3
  5618   000F58  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5619   000F5C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5620   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5621   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5622   000F64  EC56  F016         	call	___lldiv	;wreg free
  5623   000F68  C001  F024         	movff	?___lldiv,convert_HSV@temp
  5624   000F6C  C002  F025         	movff	?___lldiv+1,convert_HSV@temp+1
  5625   000F70  C003  F026         	movff	?___lldiv+2,convert_HSV@temp+2
  5626   000F74  C004  F027         	movff	?___lldiv+3,convert_HSV@temp+3
  5627   000F78                     
  5628                           ;color.c: 241:                 hue = (unsigned int)temp;
  5629   000F78  C024  F01E         	movff	convert_HSV@temp,convert_HSV@hue
  5630   000F7C  C025  F01F         	movff	convert_HSV@temp+1,convert_HSV@hue+1
  5631                           
  5632                           ;color.c: 242:             } else {
  5633   000F80  EF3A  F008         	goto	l3798
  5634   000F84                     l3786:
  5635                           
  5636                           ;color.c: 244:                 unsigned long temp;;color.c: 245:                 temp = 
      +                          (unsigned long)C;
  5637   000F84  C040  F038         	movff	convert_HSV@C,convert_HSV@temp_609
  5638   000F88  C041  F039         	movff	convert_HSV@C+1,convert_HSV@temp_609+1
  5639   000F8C  6A3A               	clrf	(convert_HSV@temp_609+2)^0,c
  5640   000F8E  6A3B               	clrf	(convert_HSV@temp_609+3)^0,c
  5641   000F90                     
  5642                           ;color.c: 246:                 temp *= 6;
  5643   000F90  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  5644   000F94  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  5645   000F98  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  5646   000F9C  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  5647   000FA0  0E06               	movlw	6
  5648   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  5649   000FA4  0E00               	movlw	0
  5650   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5651   000FA8  0E00               	movlw	0
  5652   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5653   000FAC  0E00               	movlw	0
  5654   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5655   000FB0  EC28  F018         	call	___lmul	;wreg free
  5656   000FB4  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  5657   000FB8  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  5658   000FBC  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  5659   000FC0  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  5660   000FC4                     
  5661                           ;color.c: 247:                 temp -= (unsigned long)(p2->B - p2->G);
  5662   000FC4  500F               	movf	convert_HSV@p2^0,w,c
  5663   000FC6  6ED9               	movwf	fsr2l,c
  5664   000FC8  6ADA               	clrf	fsr2h,c
  5665   000FCA  0E02               	movlw	2
  5666   000FCC  26D9               	addwf	fsr2l,f,c
  5667   000FCE  CFDE F010          	movff	postinc2,??_convert_HSV
  5668   000FD2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5669   000FD6  500F               	movf	convert_HSV@p2^0,w,c
  5670   000FD8  6ED9               	movwf	fsr2l,c
  5671   000FDA  6ADA               	clrf	fsr2h,c
  5672   000FDC  0E04               	movlw	4
  5673   000FDE  26D9               	addwf	fsr2l,f,c
  5674   000FE0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5675   000FE4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5676   000FE8  5010               	movf	??_convert_HSV^0,w,c
  5677   000FEA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5678   000FEC  6E14               	movwf	(??_convert_HSV+4)^0,c
  5679   000FEE  5011               	movf	(??_convert_HSV+1)^0,w,c
  5680   000FF0  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5681   000FF2  6E15               	movwf	(??_convert_HSV+5)^0,c
  5682   000FF4  6A16               	clrf	(??_convert_HSV+6)^0,c
  5683   000FF6  6A17               	clrf	(??_convert_HSV+7)^0,c
  5684   000FF8  5014               	movf	(??_convert_HSV+4)^0,w,c
  5685   000FFA  5E38               	subwf	convert_HSV@temp_609^0,f,c
  5686   000FFC  5015               	movf	(??_convert_HSV+5)^0,w,c
  5687   000FFE  5A39               	subwfb	(convert_HSV@temp_609+1)^0,f,c
  5688   001000  5016               	movf	(??_convert_HSV+6)^0,w,c
  5689   001002  5A3A               	subwfb	(convert_HSV@temp_609+2)^0,f,c
  5690   001004  5017               	movf	(??_convert_HSV+7)^0,w,c
  5691   001006  5A3B               	subwfb	(convert_HSV@temp_609+3)^0,f,c
  5692   001008                     
  5693                           ;color.c: 248:                 temp *= (unsigned long)hue_scale;
  5694   001008  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  5695   00100C  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  5696   001010  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  5697   001014  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  5698   001018  0E3C               	movlw	60
  5699   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  5700   00101C  0E00               	movlw	0
  5701   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5702   001020  0E00               	movlw	0
  5703   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5704   001024  0E00               	movlw	0
  5705   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5706   001028  EC28  F018         	call	___lmul	;wreg free
  5707   00102C  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  5708   001030  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  5709   001034  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  5710   001038  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  5711   00103C                     
  5712                           ;color.c: 249:                 temp /= (unsigned long)C;
  5713   00103C  C038  F001         	movff	convert_HSV@temp_609,___lldiv@dividend
  5714   001040  C039  F002         	movff	convert_HSV@temp_609+1,___lldiv@dividend+1
  5715   001044  C03A  F003         	movff	convert_HSV@temp_609+2,___lldiv@dividend+2
  5716   001048  C03B  F004         	movff	convert_HSV@temp_609+3,___lldiv@dividend+3
  5717   00104C  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5718   001050  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5719   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5720   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5721   001058  EC56  F016         	call	___lldiv	;wreg free
  5722   00105C  C001  F038         	movff	?___lldiv,convert_HSV@temp_609
  5723   001060  C002  F039         	movff	?___lldiv+1,convert_HSV@temp_609+1
  5724   001064  C003  F03A         	movff	?___lldiv+2,convert_HSV@temp_609+2
  5725   001068  C004  F03B         	movff	?___lldiv+3,convert_HSV@temp_609+3
  5726   00106C                     
  5727                           ;color.c: 250:                 hue = (unsigned int)temp;
  5728   00106C  C038  F01E         	movff	convert_HSV@temp_609,convert_HSV@hue
  5729   001070  C039  F01F         	movff	convert_HSV@temp_609+1,convert_HSV@hue+1
  5730   001074                     l3798:
  5731                           
  5732                           ;color.c: 253:         if (M == p2->G) {
  5733   001074  500F               	movf	convert_HSV@p2^0,w,c
  5734   001076  6ED9               	movwf	fsr2l,c
  5735   001078  6ADA               	clrf	fsr2h,c
  5736   00107A  0E02               	movlw	2
  5737   00107C  26D9               	addwf	fsr2l,f,c
  5738   00107E  503E               	movf	convert_HSV@M^0,w,c
  5739   001080  18DE               	xorwf	postinc2,w,c
  5740   001082  E107               	bnz	u3071
  5741   001084  503F               	movf	(convert_HSV@M+1)^0,w,c
  5742   001086  18DE               	xorwf	postinc2,w,c
  5743   001088  A4D8               	btfss	status,2,c
  5744   00108A  EF49  F008         	goto	u3071
  5745   00108E  EF4B  F008         	goto	u3070
  5746   001092                     u3071:
  5747   001092  EF20  F009         	goto	l3826
  5748   001096                     u3070:
  5749   001096                     
  5750                           ;color.c: 254:             if (p2->B >= p2->R) {
  5751   001096  500F               	movf	convert_HSV@p2^0,w,c
  5752   001098  6ED9               	movwf	fsr2l,c
  5753   00109A  6ADA               	clrf	fsr2h,c
  5754   00109C  500F               	movf	convert_HSV@p2^0,w,c
  5755   00109E  6EE1               	movwf	fsr1l,c
  5756   0010A0  6AE2               	clrf	fsr1h,c
  5757   0010A2  0E04               	movlw	4
  5758   0010A4  26E1               	addwf	fsr1l,f,c
  5759   0010A6  50DE               	movf	postinc2,w,c
  5760   0010A8  5CE6               	subwf	postinc1,w,c
  5761   0010AA  50DE               	movf	postinc2,w,c
  5762   0010AC  58E6               	subwfb	postinc1,w,c
  5763   0010AE  A0D8               	btfss	status,0,c
  5764   0010B0  EF5C  F008         	goto	u3081
  5765   0010B4  EF5E  F008         	goto	u3080
  5766   0010B8                     u3081:
  5767   0010B8  EFBF  F008         	goto	l3814
  5768   0010BC                     u3080:
  5769   0010BC                     
  5770                           ;color.c: 256:                 unsigned long temp;;color.c: 257:                 temp = 
      +                          (unsigned long)C;
  5771   0010BC  C040  F028         	movff	convert_HSV@C,convert_HSV@temp_610
  5772   0010C0  C041  F029         	movff	convert_HSV@C+1,convert_HSV@temp_610+1
  5773   0010C4  6A2A               	clrf	(convert_HSV@temp_610+2)^0,c
  5774   0010C6  6A2B               	clrf	(convert_HSV@temp_610+3)^0,c
  5775   0010C8                     
  5776                           ;color.c: 258:                 temp *= 2;
  5777   0010C8  90D8               	bcf	status,0,c
  5778   0010CA  3628               	rlcf	convert_HSV@temp_610^0,f,c
  5779   0010CC  3629               	rlcf	(convert_HSV@temp_610+1)^0,f,c
  5780   0010CE  362A               	rlcf	(convert_HSV@temp_610+2)^0,f,c
  5781   0010D0  362B               	rlcf	(convert_HSV@temp_610+3)^0,f,c
  5782   0010D2                     
  5783                           ;color.c: 259:                 temp += (unsigned long)(p2->B - p2->R);
  5784   0010D2  500F               	movf	convert_HSV@p2^0,w,c
  5785   0010D4  6ED9               	movwf	fsr2l,c
  5786   0010D6  6ADA               	clrf	fsr2h,c
  5787   0010D8  CFDE F010          	movff	postinc2,??_convert_HSV
  5788   0010DC  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5789   0010E0  500F               	movf	convert_HSV@p2^0,w,c
  5790   0010E2  6ED9               	movwf	fsr2l,c
  5791   0010E4  6ADA               	clrf	fsr2h,c
  5792   0010E6  0E04               	movlw	4
  5793   0010E8  26D9               	addwf	fsr2l,f,c
  5794   0010EA  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5795   0010EE  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5796   0010F2  5010               	movf	??_convert_HSV^0,w,c
  5797   0010F4  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5798   0010F6  6E14               	movwf	(??_convert_HSV+4)^0,c
  5799   0010F8  5011               	movf	(??_convert_HSV+1)^0,w,c
  5800   0010FA  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5801   0010FC  6E15               	movwf	(??_convert_HSV+5)^0,c
  5802   0010FE  5014               	movf	(??_convert_HSV+4)^0,w,c
  5803   001100  2628               	addwf	convert_HSV@temp_610^0,f,c
  5804   001102  5015               	movf	(??_convert_HSV+5)^0,w,c
  5805   001104  2229               	addwfc	(convert_HSV@temp_610+1)^0,f,c
  5806   001106  0E00               	movlw	0
  5807   001108  222A               	addwfc	(convert_HSV@temp_610+2)^0,f,c
  5808   00110A  0E00               	movlw	0
  5809   00110C  222B               	addwfc	(convert_HSV@temp_610+3)^0,f,c
  5810   00110E                     
  5811                           ;color.c: 260:                 temp *= (unsigned long)hue_scale;
  5812   00110E  C028  F001         	movff	convert_HSV@temp_610,___lmul@multiplier
  5813   001112  C029  F002         	movff	convert_HSV@temp_610+1,___lmul@multiplier+1
  5814   001116  C02A  F003         	movff	convert_HSV@temp_610+2,___lmul@multiplier+2
  5815   00111A  C02B  F004         	movff	convert_HSV@temp_610+3,___lmul@multiplier+3
  5816   00111E  0E3C               	movlw	60
  5817   001120  6E05               	movwf	___lmul@multiplicand^0,c
  5818   001122  0E00               	movlw	0
  5819   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5820   001126  0E00               	movlw	0
  5821   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5822   00112A  0E00               	movlw	0
  5823   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5824   00112E  EC28  F018         	call	___lmul	;wreg free
  5825   001132  C001  F028         	movff	?___lmul,convert_HSV@temp_610
  5826   001136  C002  F029         	movff	?___lmul+1,convert_HSV@temp_610+1
  5827   00113A  C003  F02A         	movff	?___lmul+2,convert_HSV@temp_610+2
  5828   00113E  C004  F02B         	movff	?___lmul+3,convert_HSV@temp_610+3
  5829   001142                     
  5830                           ;color.c: 261:                 temp /= (unsigned long)C;
  5831   001142  C028  F001         	movff	convert_HSV@temp_610,___lldiv@dividend
  5832   001146  C029  F002         	movff	convert_HSV@temp_610+1,___lldiv@dividend+1
  5833   00114A  C02A  F003         	movff	convert_HSV@temp_610+2,___lldiv@dividend+2
  5834   00114E  C02B  F004         	movff	convert_HSV@temp_610+3,___lldiv@dividend+3
  5835   001152  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5836   001156  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5837   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5838   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5839   00115E  EC56  F016         	call	___lldiv	;wreg free
  5840   001162  C001  F028         	movff	?___lldiv,convert_HSV@temp_610
  5841   001166  C002  F029         	movff	?___lldiv+1,convert_HSV@temp_610+1
  5842   00116A  C003  F02A         	movff	?___lldiv+2,convert_HSV@temp_610+2
  5843   00116E  C004  F02B         	movff	?___lldiv+3,convert_HSV@temp_610+3
  5844   001172                     
  5845                           ;color.c: 262:                 hue = (unsigned int)temp;
  5846   001172  C028  F01E         	movff	convert_HSV@temp_610,convert_HSV@hue
  5847   001176  C029  F01F         	movff	convert_HSV@temp_610+1,convert_HSV@hue+1
  5848                           
  5849                           ;color.c: 263:             } else {
  5850   00117A  EF20  F009         	goto	l3826
  5851   00117E                     l3814:
  5852                           
  5853                           ;color.c: 265:                 unsigned long temp;;color.c: 266:                 temp = 
      +                          (unsigned long)C;
  5854   00117E  C040  F02C         	movff	convert_HSV@C,convert_HSV@temp_611
  5855   001182  C041  F02D         	movff	convert_HSV@C+1,convert_HSV@temp_611+1
  5856   001186  6A2E               	clrf	(convert_HSV@temp_611+2)^0,c
  5857   001188  6A2F               	clrf	(convert_HSV@temp_611+3)^0,c
  5858   00118A                     
  5859                           ;color.c: 267:                 temp *= 2;
  5860   00118A  90D8               	bcf	status,0,c
  5861   00118C  362C               	rlcf	convert_HSV@temp_611^0,f,c
  5862   00118E  362D               	rlcf	(convert_HSV@temp_611+1)^0,f,c
  5863   001190  362E               	rlcf	(convert_HSV@temp_611+2)^0,f,c
  5864   001192  362F               	rlcf	(convert_HSV@temp_611+3)^0,f,c
  5865   001194                     
  5866                           ;color.c: 268:                 temp -= (unsigned long)(p2->R - p2->B);
  5867   001194  500F               	movf	convert_HSV@p2^0,w,c
  5868   001196  6ED9               	movwf	fsr2l,c
  5869   001198  6ADA               	clrf	fsr2h,c
  5870   00119A  0E04               	movlw	4
  5871   00119C  26D9               	addwf	fsr2l,f,c
  5872   00119E  CFDE F010          	movff	postinc2,??_convert_HSV
  5873   0011A2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5874   0011A6  500F               	movf	convert_HSV@p2^0,w,c
  5875   0011A8  6ED9               	movwf	fsr2l,c
  5876   0011AA  6ADA               	clrf	fsr2h,c
  5877   0011AC  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5878   0011B0  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5879   0011B4  5010               	movf	??_convert_HSV^0,w,c
  5880   0011B6  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5881   0011B8  6E14               	movwf	(??_convert_HSV+4)^0,c
  5882   0011BA  5011               	movf	(??_convert_HSV+1)^0,w,c
  5883   0011BC  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5884   0011BE  6E15               	movwf	(??_convert_HSV+5)^0,c
  5885   0011C0  6A16               	clrf	(??_convert_HSV+6)^0,c
  5886   0011C2  6A17               	clrf	(??_convert_HSV+7)^0,c
  5887   0011C4  5014               	movf	(??_convert_HSV+4)^0,w,c
  5888   0011C6  5E2C               	subwf	convert_HSV@temp_611^0,f,c
  5889   0011C8  5015               	movf	(??_convert_HSV+5)^0,w,c
  5890   0011CA  5A2D               	subwfb	(convert_HSV@temp_611+1)^0,f,c
  5891   0011CC  5016               	movf	(??_convert_HSV+6)^0,w,c
  5892   0011CE  5A2E               	subwfb	(convert_HSV@temp_611+2)^0,f,c
  5893   0011D0  5017               	movf	(??_convert_HSV+7)^0,w,c
  5894   0011D2  5A2F               	subwfb	(convert_HSV@temp_611+3)^0,f,c
  5895   0011D4                     
  5896                           ;color.c: 269:                 temp *= (unsigned long)hue_scale;
  5897   0011D4  C02C  F001         	movff	convert_HSV@temp_611,___lmul@multiplier
  5898   0011D8  C02D  F002         	movff	convert_HSV@temp_611+1,___lmul@multiplier+1
  5899   0011DC  C02E  F003         	movff	convert_HSV@temp_611+2,___lmul@multiplier+2
  5900   0011E0  C02F  F004         	movff	convert_HSV@temp_611+3,___lmul@multiplier+3
  5901   0011E4  0E3C               	movlw	60
  5902   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  5903   0011E8  0E00               	movlw	0
  5904   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5905   0011EC  0E00               	movlw	0
  5906   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5907   0011F0  0E00               	movlw	0
  5908   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5909   0011F4  EC28  F018         	call	___lmul	;wreg free
  5910   0011F8  C001  F02C         	movff	?___lmul,convert_HSV@temp_611
  5911   0011FC  C002  F02D         	movff	?___lmul+1,convert_HSV@temp_611+1
  5912   001200  C003  F02E         	movff	?___lmul+2,convert_HSV@temp_611+2
  5913   001204  C004  F02F         	movff	?___lmul+3,convert_HSV@temp_611+3
  5914   001208                     
  5915                           ;color.c: 270:                 temp /= (unsigned long)C;
  5916   001208  C02C  F001         	movff	convert_HSV@temp_611,___lldiv@dividend
  5917   00120C  C02D  F002         	movff	convert_HSV@temp_611+1,___lldiv@dividend+1
  5918   001210  C02E  F003         	movff	convert_HSV@temp_611+2,___lldiv@dividend+2
  5919   001214  C02F  F004         	movff	convert_HSV@temp_611+3,___lldiv@dividend+3
  5920   001218  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5921   00121C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5922   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5923   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5924   001224  EC56  F016         	call	___lldiv	;wreg free
  5925   001228  C001  F02C         	movff	?___lldiv,convert_HSV@temp_611
  5926   00122C  C002  F02D         	movff	?___lldiv+1,convert_HSV@temp_611+1
  5927   001230  C003  F02E         	movff	?___lldiv+2,convert_HSV@temp_611+2
  5928   001234  C004  F02F         	movff	?___lldiv+3,convert_HSV@temp_611+3
  5929   001238                     
  5930                           ;color.c: 271:                 hue = (unsigned int)temp;
  5931   001238  C02C  F01E         	movff	convert_HSV@temp_611,convert_HSV@hue
  5932   00123C  C02D  F01F         	movff	convert_HSV@temp_611+1,convert_HSV@hue+1
  5933   001240                     l3826:
  5934                           
  5935                           ;color.c: 274:         if (M == p2->B) {
  5936   001240  500F               	movf	convert_HSV@p2^0,w,c
  5937   001242  6ED9               	movwf	fsr2l,c
  5938   001244  6ADA               	clrf	fsr2h,c
  5939   001246  0E04               	movlw	4
  5940   001248  26D9               	addwf	fsr2l,f,c
  5941   00124A  503E               	movf	convert_HSV@M^0,w,c
  5942   00124C  18DE               	xorwf	postinc2,w,c
  5943   00124E  E107               	bnz	u3091
  5944   001250  503F               	movf	(convert_HSV@M+1)^0,w,c
  5945   001252  18DE               	xorwf	postinc2,w,c
  5946   001254  A4D8               	btfss	status,2,c
  5947   001256  EF2F  F009         	goto	u3091
  5948   00125A  EF31  F009         	goto	u3090
  5949   00125E                     u3091:
  5950   00125E  EF0E  F00A         	goto	l3854
  5951   001262                     u3090:
  5952   001262                     
  5953                           ;color.c: 275:             if (p2->R >= p2->G) {
  5954   001262  500F               	movf	convert_HSV@p2^0,w,c
  5955   001264  6ED9               	movwf	fsr2l,c
  5956   001266  6ADA               	clrf	fsr2h,c
  5957   001268  0E02               	movlw	2
  5958   00126A  26D9               	addwf	fsr2l,f,c
  5959   00126C  500F               	movf	convert_HSV@p2^0,w,c
  5960   00126E  6EE1               	movwf	fsr1l,c
  5961   001270  6AE2               	clrf	fsr1h,c
  5962   001272  50DE               	movf	postinc2,w,c
  5963   001274  5CE6               	subwf	postinc1,w,c
  5964   001276  50DE               	movf	postinc2,w,c
  5965   001278  58E6               	subwfb	postinc1,w,c
  5966   00127A  A0D8               	btfss	status,0,c
  5967   00127C  EF42  F009         	goto	u3101
  5968   001280  EF44  F009         	goto	u3100
  5969   001284                     u3101:
  5970   001284  EFA9  F009         	goto	l3842
  5971   001288                     u3100:
  5972   001288                     
  5973                           ;color.c: 277:                 unsigned long temp;;color.c: 278:                 temp = 
      +                          (unsigned long)C;
  5974   001288  C040  F030         	movff	convert_HSV@C,convert_HSV@temp_612
  5975   00128C  C041  F031         	movff	convert_HSV@C+1,convert_HSV@temp_612+1
  5976   001290  6A32               	clrf	(convert_HSV@temp_612+2)^0,c
  5977   001292  6A33               	clrf	(convert_HSV@temp_612+3)^0,c
  5978   001294                     
  5979                           ;color.c: 279:                 temp *= 4;
  5980   001294  0E02               	movlw	2
  5981   001296                     u3115:
  5982   001296  90D8               	bcf	status,0,c
  5983   001298  3630               	rlcf	convert_HSV@temp_612^0,f,c
  5984   00129A  3631               	rlcf	(convert_HSV@temp_612+1)^0,f,c
  5985   00129C  3632               	rlcf	(convert_HSV@temp_612+2)^0,f,c
  5986   00129E  3633               	rlcf	(convert_HSV@temp_612+3)^0,f,c
  5987   0012A0  2EE8               	decfsz	wreg,f,c
  5988   0012A2  EF4B  F009         	goto	u3115
  5989   0012A6                     
  5990                           ;color.c: 280:                 temp += (unsigned long)(p2->R - p2->G);
  5991   0012A6  500F               	movf	convert_HSV@p2^0,w,c
  5992   0012A8  6ED9               	movwf	fsr2l,c
  5993   0012AA  6ADA               	clrf	fsr2h,c
  5994   0012AC  0E02               	movlw	2
  5995   0012AE  26D9               	addwf	fsr2l,f,c
  5996   0012B0  CFDE F010          	movff	postinc2,??_convert_HSV
  5997   0012B4  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5998   0012B8  500F               	movf	convert_HSV@p2^0,w,c
  5999   0012BA  6ED9               	movwf	fsr2l,c
  6000   0012BC  6ADA               	clrf	fsr2h,c
  6001   0012BE  CFDE F012          	movff	postinc2,??_convert_HSV+2
  6002   0012C2  CFDD F013          	movff	postdec2,??_convert_HSV+3
  6003   0012C6  5010               	movf	??_convert_HSV^0,w,c
  6004   0012C8  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  6005   0012CA  6E14               	movwf	(??_convert_HSV+4)^0,c
  6006   0012CC  5011               	movf	(??_convert_HSV+1)^0,w,c
  6007   0012CE  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  6008   0012D0  6E15               	movwf	(??_convert_HSV+5)^0,c
  6009   0012D2  5014               	movf	(??_convert_HSV+4)^0,w,c
  6010   0012D4  2630               	addwf	convert_HSV@temp_612^0,f,c
  6011   0012D6  5015               	movf	(??_convert_HSV+5)^0,w,c
  6012   0012D8  2231               	addwfc	(convert_HSV@temp_612+1)^0,f,c
  6013   0012DA  0E00               	movlw	0
  6014   0012DC  2232               	addwfc	(convert_HSV@temp_612+2)^0,f,c
  6015   0012DE  0E00               	movlw	0
  6016   0012E0  2233               	addwfc	(convert_HSV@temp_612+3)^0,f,c
  6017   0012E2                     
  6018                           ;color.c: 281:                 temp *= (unsigned long)hue_scale;
  6019   0012E2  C030  F001         	movff	convert_HSV@temp_612,___lmul@multiplier
  6020   0012E6  C031  F002         	movff	convert_HSV@temp_612+1,___lmul@multiplier+1
  6021   0012EA  C032  F003         	movff	convert_HSV@temp_612+2,___lmul@multiplier+2
  6022   0012EE  C033  F004         	movff	convert_HSV@temp_612+3,___lmul@multiplier+3
  6023   0012F2  0E3C               	movlw	60
  6024   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  6025   0012F6  0E00               	movlw	0
  6026   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6027   0012FA  0E00               	movlw	0
  6028   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6029   0012FE  0E00               	movlw	0
  6030   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6031   001302  EC28  F018         	call	___lmul	;wreg free
  6032   001306  C001  F030         	movff	?___lmul,convert_HSV@temp_612
  6033   00130A  C002  F031         	movff	?___lmul+1,convert_HSV@temp_612+1
  6034   00130E  C003  F032         	movff	?___lmul+2,convert_HSV@temp_612+2
  6035   001312  C004  F033         	movff	?___lmul+3,convert_HSV@temp_612+3
  6036   001316                     
  6037                           ;color.c: 282:                 temp /= (unsigned long)C;
  6038   001316  C030  F001         	movff	convert_HSV@temp_612,___lldiv@dividend
  6039   00131A  C031  F002         	movff	convert_HSV@temp_612+1,___lldiv@dividend+1
  6040   00131E  C032  F003         	movff	convert_HSV@temp_612+2,___lldiv@dividend+2
  6041   001322  C033  F004         	movff	convert_HSV@temp_612+3,___lldiv@dividend+3
  6042   001326  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  6043   00132A  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  6044   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  6045   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  6046   001332  EC56  F016         	call	___lldiv	;wreg free
  6047   001336  C001  F030         	movff	?___lldiv,convert_HSV@temp_612
  6048   00133A  C002  F031         	movff	?___lldiv+1,convert_HSV@temp_612+1
  6049   00133E  C003  F032         	movff	?___lldiv+2,convert_HSV@temp_612+2
  6050   001342  C004  F033         	movff	?___lldiv+3,convert_HSV@temp_612+3
  6051   001346                     
  6052                           ;color.c: 283:                 hue = (unsigned int)temp;
  6053   001346  C030  F01E         	movff	convert_HSV@temp_612,convert_HSV@hue
  6054   00134A  C031  F01F         	movff	convert_HSV@temp_612+1,convert_HSV@hue+1
  6055                           
  6056                           ;color.c: 284:             } else {
  6057   00134E  EF0E  F00A         	goto	l3854
  6058   001352                     l3842:
  6059                           
  6060                           ;color.c: 286:                 unsigned long temp;;color.c: 287:                 temp = 
      +                          (unsigned long)C;
  6061   001352  C040  F034         	movff	convert_HSV@C,convert_HSV@temp_613
  6062   001356  C041  F035         	movff	convert_HSV@C+1,convert_HSV@temp_613+1
  6063   00135A  6A36               	clrf	(convert_HSV@temp_613+2)^0,c
  6064   00135C  6A37               	clrf	(convert_HSV@temp_613+3)^0,c
  6065   00135E                     
  6066                           ;color.c: 288:                 temp *= 4;
  6067   00135E  0E02               	movlw	2
  6068   001360                     u3125:
  6069   001360  90D8               	bcf	status,0,c
  6070   001362  3634               	rlcf	convert_HSV@temp_613^0,f,c
  6071   001364  3635               	rlcf	(convert_HSV@temp_613+1)^0,f,c
  6072   001366  3636               	rlcf	(convert_HSV@temp_613+2)^0,f,c
  6073   001368  3637               	rlcf	(convert_HSV@temp_613+3)^0,f,c
  6074   00136A  2EE8               	decfsz	wreg,f,c
  6075   00136C  EFB0  F009         	goto	u3125
  6076   001370                     
  6077                           ;color.c: 289:                 temp -= (unsigned long)(p2->G - p2->R);
  6078   001370  500F               	movf	convert_HSV@p2^0,w,c
  6079   001372  6ED9               	movwf	fsr2l,c
  6080   001374  6ADA               	clrf	fsr2h,c
  6081   001376  CFDE F010          	movff	postinc2,??_convert_HSV
  6082   00137A  CFDD F011          	movff	postdec2,??_convert_HSV+1
  6083   00137E  500F               	movf	convert_HSV@p2^0,w,c
  6084   001380  6ED9               	movwf	fsr2l,c
  6085   001382  6ADA               	clrf	fsr2h,c
  6086   001384  0E02               	movlw	2
  6087   001386  26D9               	addwf	fsr2l,f,c
  6088   001388  CFDE F012          	movff	postinc2,??_convert_HSV+2
  6089   00138C  CFDD F013          	movff	postdec2,??_convert_HSV+3
  6090   001390  5010               	movf	??_convert_HSV^0,w,c
  6091   001392  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  6092   001394  6E14               	movwf	(??_convert_HSV+4)^0,c
  6093   001396  5011               	movf	(??_convert_HSV+1)^0,w,c
  6094   001398  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  6095   00139A  6E15               	movwf	(??_convert_HSV+5)^0,c
  6096   00139C  6A16               	clrf	(??_convert_HSV+6)^0,c
  6097   00139E  6A17               	clrf	(??_convert_HSV+7)^0,c
  6098   0013A0  5014               	movf	(??_convert_HSV+4)^0,w,c
  6099   0013A2  5E34               	subwf	convert_HSV@temp_613^0,f,c
  6100   0013A4  5015               	movf	(??_convert_HSV+5)^0,w,c
  6101   0013A6  5A35               	subwfb	(convert_HSV@temp_613+1)^0,f,c
  6102   0013A8  5016               	movf	(??_convert_HSV+6)^0,w,c
  6103   0013AA  5A36               	subwfb	(convert_HSV@temp_613+2)^0,f,c
  6104   0013AC  5017               	movf	(??_convert_HSV+7)^0,w,c
  6105   0013AE  5A37               	subwfb	(convert_HSV@temp_613+3)^0,f,c
  6106   0013B0                     
  6107                           ;color.c: 290:                 temp *= (unsigned long)hue_scale;
  6108   0013B0  C034  F001         	movff	convert_HSV@temp_613,___lmul@multiplier
  6109   0013B4  C035  F002         	movff	convert_HSV@temp_613+1,___lmul@multiplier+1
  6110   0013B8  C036  F003         	movff	convert_HSV@temp_613+2,___lmul@multiplier+2
  6111   0013BC  C037  F004         	movff	convert_HSV@temp_613+3,___lmul@multiplier+3
  6112   0013C0  0E3C               	movlw	60
  6113   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  6114   0013C4  0E00               	movlw	0
  6115   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6116   0013C8  0E00               	movlw	0
  6117   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6118   0013CC  0E00               	movlw	0
  6119   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6120   0013D0  EC28  F018         	call	___lmul	;wreg free
  6121   0013D4  C001  F034         	movff	?___lmul,convert_HSV@temp_613
  6122   0013D8  C002  F035         	movff	?___lmul+1,convert_HSV@temp_613+1
  6123   0013DC  C003  F036         	movff	?___lmul+2,convert_HSV@temp_613+2
  6124   0013E0  C004  F037         	movff	?___lmul+3,convert_HSV@temp_613+3
  6125   0013E4                     
  6126                           ;color.c: 291:                 temp /= (unsigned long)C;
  6127   0013E4  C034  F001         	movff	convert_HSV@temp_613,___lldiv@dividend
  6128   0013E8  C035  F002         	movff	convert_HSV@temp_613+1,___lldiv@dividend+1
  6129   0013EC  C036  F003         	movff	convert_HSV@temp_613+2,___lldiv@dividend+2
  6130   0013F0  C037  F004         	movff	convert_HSV@temp_613+3,___lldiv@dividend+3
  6131   0013F4  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  6132   0013F8  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  6133   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  6134   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  6135   001400  EC56  F016         	call	___lldiv	;wreg free
  6136   001404  C001  F034         	movff	?___lldiv,convert_HSV@temp_613
  6137   001408  C002  F035         	movff	?___lldiv+1,convert_HSV@temp_613+1
  6138   00140C  C003  F036         	movff	?___lldiv+2,convert_HSV@temp_613+2
  6139   001410  C004  F037         	movff	?___lldiv+3,convert_HSV@temp_613+3
  6140   001414                     
  6141                           ;color.c: 292:                 hue = (unsigned int)temp;
  6142   001414  C034  F01E         	movff	convert_HSV@temp_613,convert_HSV@hue
  6143   001418  C035  F01F         	movff	convert_HSV@temp_613+1,convert_HSV@hue+1
  6144   00141C                     l3854:
  6145                           
  6146                           ;color.c: 297:     if (M == 0) {
  6147   00141C  503E               	movf	convert_HSV@M^0,w,c
  6148   00141E  103F               	iorwf	(convert_HSV@M+1)^0,w,c
  6149   001420  A4D8               	btfss	status,2,c
  6150   001422  EF15  F00A         	goto	u3131
  6151   001426  EF17  F00A         	goto	u3130
  6152   00142A                     u3131:
  6153   00142A  EF1D  F00A         	goto	l3858
  6154   00142E                     u3130:
  6155   00142E                     
  6156                           ;color.c: 298:         sat = 0;
  6157   00142E  0E00               	movlw	0
  6158   001430  6E1D               	movwf	(convert_HSV@sat+1)^0,c
  6159   001432  0E00               	movlw	0
  6160   001434  6E1C               	movwf	convert_HSV@sat^0,c
  6161                           
  6162                           ;color.c: 299:     } else {
  6163   001436  EF59  F00A         	goto	l3866
  6164   00143A                     l3858:
  6165                           
  6166                           ;color.c: 301:         unsigned long temp;;color.c: 302:         temp = (unsigned long)C
      +                          ;
  6167   00143A  C040  F020         	movff	convert_HSV@C,convert_HSV@temp_614
  6168   00143E  C041  F021         	movff	convert_HSV@C+1,convert_HSV@temp_614+1
  6169   001442  6A22               	clrf	(convert_HSV@temp_614+2)^0,c
  6170   001444  6A23               	clrf	(convert_HSV@temp_614+3)^0,c
  6171   001446                     
  6172                           ;color.c: 303:         temp *= (unsigned long)sat_scale;
  6173   001446  C020  F001         	movff	convert_HSV@temp_614,___lmul@multiplier
  6174   00144A  C021  F002         	movff	convert_HSV@temp_614+1,___lmul@multiplier+1
  6175   00144E  C022  F003         	movff	convert_HSV@temp_614+2,___lmul@multiplier+2
  6176   001452  C023  F004         	movff	convert_HSV@temp_614+3,___lmul@multiplier+3
  6177   001456  0E64               	movlw	100
  6178   001458  6E05               	movwf	___lmul@multiplicand^0,c
  6179   00145A  0E00               	movlw	0
  6180   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6181   00145E  0E00               	movlw	0
  6182   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6183   001462  0E00               	movlw	0
  6184   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6185   001466  EC28  F018         	call	___lmul	;wreg free
  6186   00146A  C001  F020         	movff	?___lmul,convert_HSV@temp_614
  6187   00146E  C002  F021         	movff	?___lmul+1,convert_HSV@temp_614+1
  6188   001472  C003  F022         	movff	?___lmul+2,convert_HSV@temp_614+2
  6189   001476  C004  F023         	movff	?___lmul+3,convert_HSV@temp_614+3
  6190   00147A                     
  6191                           ;color.c: 304:         temp /= (unsigned long)M;
  6192   00147A  C020  F001         	movff	convert_HSV@temp_614,___lldiv@dividend
  6193   00147E  C021  F002         	movff	convert_HSV@temp_614+1,___lldiv@dividend+1
  6194   001482  C022  F003         	movff	convert_HSV@temp_614+2,___lldiv@dividend+2
  6195   001486  C023  F004         	movff	convert_HSV@temp_614+3,___lldiv@dividend+3
  6196   00148A  C03E  F005         	movff	convert_HSV@M,___lldiv@divisor
  6197   00148E  C03F  F006         	movff	convert_HSV@M+1,___lldiv@divisor+1
  6198   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  6199   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  6200   001496  EC56  F016         	call	___lldiv	;wreg free
  6201   00149A  C001  F020         	movff	?___lldiv,convert_HSV@temp_614
  6202   00149E  C002  F021         	movff	?___lldiv+1,convert_HSV@temp_614+1
  6203   0014A2  C003  F022         	movff	?___lldiv+2,convert_HSV@temp_614+2
  6204   0014A6  C004  F023         	movff	?___lldiv+3,convert_HSV@temp_614+3
  6205   0014AA                     
  6206                           ;color.c: 305:         sat = (unsigned int)temp;
  6207   0014AA  C020  F01C         	movff	convert_HSV@temp_614,convert_HSV@sat
  6208   0014AE  C021  F01D         	movff	convert_HSV@temp_614+1,convert_HSV@sat+1
  6209   0014B2                     l3866:
  6210                           
  6211                           ;color.c: 308:     p1->H = hue;
  6212   0014B2  500E               	movf	convert_HSV@p1^0,w,c
  6213   0014B4  6ED9               	movwf	fsr2l,c
  6214   0014B6  6ADA               	clrf	fsr2h,c
  6215   0014B8  C01E  FFDE         	movff	convert_HSV@hue,postinc2
  6216   0014BC  C01F  FFDD         	movff	convert_HSV@hue+1,postdec2
  6217   0014C0                     
  6218                           ;color.c: 309:     p1->S = sat;
  6219   0014C0  500E               	movf	convert_HSV@p1^0,w,c
  6220   0014C2  6ED9               	movwf	fsr2l,c
  6221   0014C4  6ADA               	clrf	fsr2h,c
  6222   0014C6  0E02               	movlw	2
  6223   0014C8  26D9               	addwf	fsr2l,f,c
  6224   0014CA  C01C  FFDE         	movff	convert_HSV@sat,postinc2
  6225   0014CE  C01D  FFDD         	movff	convert_HSV@sat+1,postdec2
  6226   0014D2                     
  6227                           ;color.c: 310:     p1->V = M;
  6228   0014D2  500E               	movf	convert_HSV@p1^0,w,c
  6229   0014D4  6ED9               	movwf	fsr2l,c
  6230   0014D6  6ADA               	clrf	fsr2h,c
  6231   0014D8  0E04               	movlw	4
  6232   0014DA  26D9               	addwf	fsr2l,f,c
  6233   0014DC  C03E  FFDE         	movff	convert_HSV@M,postinc2
  6234   0014E0  C03F  FFDD         	movff	convert_HSV@M+1,postdec2
  6235   0014E4  0012               	return		;funcret
  6236   0014E6                     __end_of_convert_HSV:
  6237                           	callstack 0
  6238                           
  6239 ;; *************** function _min_RGB *****************
  6240 ;; Defined at:
  6241 ;;		line 186 in file "color.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  6244 ;;		 -> main@RGBC_colour(8), 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  min_val         2    4[COMRAM] unsigned int 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  2    0[COMRAM] unsigned int 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6260 ;;Total ram usage:        6 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_convert_HSV
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text31
  6271   002E6E                     __ptext31:
  6272                           	callstack 0
  6273   002E6E                     _min_RGB:
  6274                           	callstack 27
  6275   002E6E                     
  6276                           ;color.c: 186: unsigned int min_RGB(struct RGBC_val *p);color.c: 187: {;color.c: 188:   
      +                            unsigned int min_val = p->R;
  6277   002E6E  5001               	movf	min_RGB@p^0,w,c
  6278   002E70  6ED9               	movwf	fsr2l,c
  6279   002E72  6ADA               	clrf	fsr2h,c
  6280   002E74  CFDE F005          	movff	postinc2,min_RGB@min_val
  6281   002E78  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  6282   002E7C                     
  6283                           ;color.c: 189:     if (p->G < min_val) {min_val = p->G;}
  6284   002E7C  5001               	movf	min_RGB@p^0,w,c
  6285   002E7E  6ED9               	movwf	fsr2l,c
  6286   002E80  6ADA               	clrf	fsr2h,c
  6287   002E82  0E02               	movlw	2
  6288   002E84  26D9               	addwf	fsr2l,f,c
  6289   002E86  5005               	movf	min_RGB@min_val^0,w,c
  6290   002E88  5CDE               	subwf	postinc2,w,c
  6291   002E8A  5006               	movf	(min_RGB@min_val+1)^0,w,c
  6292   002E8C  58DE               	subwfb	postinc2,w,c
  6293   002E8E  B0D8               	btfsc	status,0,c
  6294   002E90  EF4C  F017         	goto	u2531
  6295   002E94  EF4E  F017         	goto	u2530
  6296   002E98                     u2531:
  6297   002E98  EF57  F017         	goto	l104
  6298   002E9C                     u2530:
  6299   002E9C  5001               	movf	min_RGB@p^0,w,c
  6300   002E9E  6ED9               	movwf	fsr2l,c
  6301   002EA0  6ADA               	clrf	fsr2h,c
  6302   002EA2  0E02               	movlw	2
  6303   002EA4  26D9               	addwf	fsr2l,f,c
  6304   002EA6  CFDE F005          	movff	postinc2,min_RGB@min_val
  6305   002EAA  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  6306   002EAE                     l104:
  6307                           
  6308                           ;color.c: 190:     if (p->B < min_val) {min_val = p->B;}
  6309   002EAE  5001               	movf	min_RGB@p^0,w,c
  6310   002EB0  6ED9               	movwf	fsr2l,c
  6311   002EB2  6ADA               	clrf	fsr2h,c
  6312   002EB4  0E04               	movlw	4
  6313   002EB6  26D9               	addwf	fsr2l,f,c
  6314   002EB8  5005               	movf	min_RGB@min_val^0,w,c
  6315   002EBA  5CDE               	subwf	postinc2,w,c
  6316   002EBC  5006               	movf	(min_RGB@min_val+1)^0,w,c
  6317   002EBE  58DE               	subwfb	postinc2,w,c
  6318   002EC0  B0D8               	btfsc	status,0,c
  6319   002EC2  EF65  F017         	goto	u2541
  6320   002EC6  EF67  F017         	goto	u2540
  6321   002ECA                     u2541:
  6322   002ECA  EF70  F017         	goto	l3366
  6323   002ECE                     u2540:
  6324   002ECE  5001               	movf	min_RGB@p^0,w,c
  6325   002ED0  6ED9               	movwf	fsr2l,c
  6326   002ED2  6ADA               	clrf	fsr2h,c
  6327   002ED4  0E04               	movlw	4
  6328   002ED6  26D9               	addwf	fsr2l,f,c
  6329   002ED8  CFDE F005          	movff	postinc2,min_RGB@min_val
  6330   002EDC  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  6331   002EE0                     l3366:
  6332                           
  6333                           ;color.c: 191:     return min_val;
  6334   002EE0  C005  F001         	movff	min_RGB@min_val,?_min_RGB
  6335   002EE4  C006  F002         	movff	min_RGB@min_val+1,?_min_RGB+1
  6336   002EE8  0012               	return		;funcret
  6337   002EEA                     __end_of_min_RGB:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _max_RGB *****************
  6341 ;; Defined at:
  6342 ;;		line 175 in file "color.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  6345 ;;		 -> main@RGBC_colour(8), 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;  max_val         2    4[COMRAM] unsigned int 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2    0[COMRAM] unsigned int 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;Total ram usage:        6 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; Hardware stack levels required when called: 1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_convert_HSV
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text32
  6372   002EEA                     __ptext32:
  6373                           	callstack 0
  6374   002EEA                     _max_RGB:
  6375                           	callstack 27
  6376   002EEA                     
  6377                           ;color.c: 175: unsigned int max_RGB(struct RGBC_val *p);color.c: 176: {;color.c: 177:   
      +                            unsigned int max_val = p->R;
  6378   002EEA  5001               	movf	max_RGB@p^0,w,c
  6379   002EEC  6ED9               	movwf	fsr2l,c
  6380   002EEE  6ADA               	clrf	fsr2h,c
  6381   002EF0  CFDE F005          	movff	postinc2,max_RGB@max_val
  6382   002EF4  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  6383   002EF8                     
  6384                           ;color.c: 178:     if (p->G > max_val) {max_val = p->G;}
  6385   002EF8  5001               	movf	max_RGB@p^0,w,c
  6386   002EFA  6ED9               	movwf	fsr2l,c
  6387   002EFC  6ADA               	clrf	fsr2h,c
  6388   002EFE  0E02               	movlw	2
  6389   002F00  26D9               	addwf	fsr2l,f,c
  6390   002F02  50DE               	movf	postinc2,w,c
  6391   002F04  5C05               	subwf	max_RGB@max_val^0,w,c
  6392   002F06  50DE               	movf	postinc2,w,c
  6393   002F08  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  6394   002F0A  B0D8               	btfsc	status,0,c
  6395   002F0C  EF8A  F017         	goto	u2511
  6396   002F10  EF8C  F017         	goto	u2510
  6397   002F14                     u2511:
  6398   002F14  EF95  F017         	goto	l99
  6399   002F18                     u2510:
  6400   002F18  5001               	movf	max_RGB@p^0,w,c
  6401   002F1A  6ED9               	movwf	fsr2l,c
  6402   002F1C  6ADA               	clrf	fsr2h,c
  6403   002F1E  0E02               	movlw	2
  6404   002F20  26D9               	addwf	fsr2l,f,c
  6405   002F22  CFDE F005          	movff	postinc2,max_RGB@max_val
  6406   002F26  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  6407   002F2A                     l99:
  6408                           
  6409                           ;color.c: 179:     if (p->B > max_val) {max_val = p->B;}
  6410   002F2A  5001               	movf	max_RGB@p^0,w,c
  6411   002F2C  6ED9               	movwf	fsr2l,c
  6412   002F2E  6ADA               	clrf	fsr2h,c
  6413   002F30  0E04               	movlw	4
  6414   002F32  26D9               	addwf	fsr2l,f,c
  6415   002F34  50DE               	movf	postinc2,w,c
  6416   002F36  5C05               	subwf	max_RGB@max_val^0,w,c
  6417   002F38  50DE               	movf	postinc2,w,c
  6418   002F3A  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  6419   002F3C  B0D8               	btfsc	status,0,c
  6420   002F3E  EFA3  F017         	goto	u2521
  6421   002F42  EFA5  F017         	goto	u2520
  6422   002F46                     u2521:
  6423   002F46  EFAE  F017         	goto	l3354
  6424   002F4A                     u2520:
  6425   002F4A  5001               	movf	max_RGB@p^0,w,c
  6426   002F4C  6ED9               	movwf	fsr2l,c
  6427   002F4E  6ADA               	clrf	fsr2h,c
  6428   002F50  0E04               	movlw	4
  6429   002F52  26D9               	addwf	fsr2l,f,c
  6430   002F54  CFDE F005          	movff	postinc2,max_RGB@max_val
  6431   002F58  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  6432   002F5C                     l3354:
  6433                           
  6434                           ;color.c: 180:     return max_val;
  6435   002F5C  C005  F001         	movff	max_RGB@max_val,?_max_RGB
  6436   002F60  C006  F002         	movff	max_RGB@max_val+1,?_max_RGB+1
  6437   002F64  0012               	return		;funcret
  6438   002F66                     __end_of_max_RGB:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function ___lmul *****************
  6442 ;; Defined at:
  6443 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  multiplier      4    0[COMRAM] unsigned long 
  6446 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  product         4    8[COMRAM] unsigned long 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  4    0[COMRAM] unsigned long 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6458 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;Total ram usage:       12 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_convert_HSV
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text33
  6473   003050                     __ptext33:
  6474                           	callstack 0
  6475   003050                     ___lmul:
  6476                           	callstack 27
  6477   003050  0E00               	movlw	0
  6478   003052  6E09               	movwf	___lmul@product^0,c
  6479   003054  0E00               	movlw	0
  6480   003056  6E0A               	movwf	(___lmul@product+1)^0,c
  6481   003058  0E00               	movlw	0
  6482   00305A  6E0B               	movwf	(___lmul@product+2)^0,c
  6483   00305C  0E00               	movlw	0
  6484   00305E  6E0C               	movwf	(___lmul@product+3)^0,c
  6485   003060                     l3456:
  6486   003060  A001               	btfss	___lmul@multiplier^0,0,c
  6487   003062  EF35  F018         	goto	u2601
  6488   003066  EF37  F018         	goto	u2600
  6489   00306A                     u2601:
  6490   00306A  EF3F  F018         	goto	l3460
  6491   00306E                     u2600:
  6492   00306E  5005               	movf	___lmul@multiplicand^0,w,c
  6493   003070  2609               	addwf	___lmul@product^0,f,c
  6494   003072  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6495   003074  220A               	addwfc	(___lmul@product+1)^0,f,c
  6496   003076  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6497   003078  220B               	addwfc	(___lmul@product+2)^0,f,c
  6498   00307A  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6499   00307C  220C               	addwfc	(___lmul@product+3)^0,f,c
  6500   00307E                     l3460:
  6501   00307E  90D8               	bcf	status,0,c
  6502   003080  3605               	rlcf	___lmul@multiplicand^0,f,c
  6503   003082  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6504   003084  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6505   003086  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6506   003088  90D8               	bcf	status,0,c
  6507   00308A  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6508   00308C  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6509   00308E  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6510   003090  3201               	rrcf	___lmul@multiplier^0,f,c
  6511   003092  5001               	movf	___lmul@multiplier^0,w,c
  6512   003094  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6513   003096  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6514   003098  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6515   00309A  A4D8               	btfss	status,2,c
  6516   00309C  EF52  F018         	goto	u2611
  6517   0030A0  EF54  F018         	goto	u2610
  6518   0030A4                     u2611:
  6519   0030A4  EF30  F018         	goto	l3456
  6520   0030A8                     u2610:
  6521   0030A8  C009  F001         	movff	___lmul@product,?___lmul
  6522   0030AC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6523   0030B0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6524   0030B4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6525   0030B8  0012               	return		;funcret
  6526   0030BA                     __end_of___lmul:
  6527                           	callstack 0
  6528                           
  6529 ;; *************** function _colour_to_key *****************
  6530 ;; Defined at:
  6531 ;;		line 321 in file "color.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  p1              1    0[COMRAM] PTR struct HSV_val
  6534 ;;		 -> main@HSV_colour(6), 
  6535 ;;  p2              1    1[COMRAM] PTR struct RGBC_val
  6536 ;;		 -> main@RGBC_colour(8), 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  key             1    4[COMRAM] unsigned char 
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      unsigned char 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;Total ram usage:        5 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_forward_navigation
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text34
  6563   0014E6                     __ptext34:
  6564                           	callstack 0
  6565   0014E6                     _colour_to_key:
  6566                           	callstack 28
  6567   0014E6                     
  6568                           ;color.c: 321: unsigned char colour_to_key(struct HSV_val *p1, struct RGBC_val *p2);colo
      +                          r.c: 322: {;color.c: 323:     unsigned char key = 0;
  6569   0014E6  0E00               	movlw	0
  6570   0014E8  6E05               	movwf	colour_to_key@key^0,c
  6571   0014EA                     
  6572                           ;color.c: 324:     if ( ((293 <= p1->H) && (p1->H <= 360)) &&
  6573   0014EA  5001               	movf	colour_to_key@p1^0,w,c
  6574   0014EC  6ED9               	movwf	fsr2l,c
  6575   0014EE  6ADA               	clrf	fsr2h,c
  6576   0014F0  0E25               	movlw	37
  6577   0014F2  5CDE               	subwf	postinc2,w,c
  6578   0014F4  0E01               	movlw	1
  6579   0014F6  58DE               	subwfb	postinc2,w,c
  6580   0014F8  A0D8               	btfss	status,0,c
  6581   0014FA  EF81  F00A         	goto	u3141
  6582   0014FE  EF83  F00A         	goto	u3140
  6583   001502                     u3141:
  6584   001502  EFB5  F00A         	goto	l3884
  6585   001506                     u3140:
  6586   001506  5001               	movf	colour_to_key@p1^0,w,c
  6587   001508  6ED9               	movwf	fsr2l,c
  6588   00150A  6ADA               	clrf	fsr2h,c
  6589   00150C  0E69               	movlw	105
  6590   00150E  5CDE               	subwf	postinc2,w,c
  6591   001510  0E01               	movlw	1
  6592   001512  58DE               	subwfb	postinc2,w,c
  6593   001514  B0D8               	btfsc	status,0,c
  6594   001516  EF8F  F00A         	goto	u3151
  6595   00151A  EF91  F00A         	goto	u3150
  6596   00151E                     u3151:
  6597   00151E  EFB5  F00A         	goto	l3884
  6598   001522                     u3150:
  6599   001522  5001               	movf	colour_to_key@p1^0,w,c
  6600   001524  6ED9               	movwf	fsr2l,c
  6601   001526  6ADA               	clrf	fsr2h,c
  6602   001528  0E02               	movlw	2
  6603   00152A  26D9               	addwf	fsr2l,f,c
  6604   00152C  0E01               	movlw	1
  6605   00152E  50DB               	movf	plusw2,w,c
  6606   001530  E109               	bnz	u3160
  6607   001532  0E2E               	movlw	46
  6608   001534  5CDE               	subwf	postinc2,w,c
  6609   001536  A0D8               	btfss	status,0,c
  6610   001538  EFA0  F00A         	goto	u3161
  6611   00153C  EFA2  F00A         	goto	u3160
  6612   001540                     u3161:
  6613   001540  EFB5  F00A         	goto	l3884
  6614   001544                     u3160:
  6615   001544  5001               	movf	colour_to_key@p1^0,w,c
  6616   001546  6ED9               	movwf	fsr2l,c
  6617   001548  6ADA               	clrf	fsr2h,c
  6618   00154A  0E02               	movlw	2
  6619   00154C  26D9               	addwf	fsr2l,f,c
  6620   00154E  0E01               	movlw	1
  6621   001550  50DB               	movf	plusw2,w,c
  6622   001552  E107               	bnz	u3171
  6623   001554  0E5B               	movlw	91
  6624   001556  5CDE               	subwf	postinc2,w,c
  6625   001558  B0D8               	btfsc	status,0,c
  6626   00155A  EFB1  F00A         	goto	u3171
  6627   00155E  EFB3  F00A         	goto	u3170
  6628   001562                     u3171:
  6629   001562  EFB5  F00A         	goto	l3884
  6630   001566                     u3170:
  6631   001566                     
  6632                           ;color.c: 325:          ((46 <= p1->S) && (p1->S <= 90))) {;color.c: 326:         key = 
      +                          1;
  6633   001566  0E01               	movlw	1
  6634   001568  6E05               	movwf	colour_to_key@key^0,c
  6635   00156A                     l3884:
  6636                           
  6637                           ;color.c: 329:     if ( ((113 <= p1->H) && (p1->H <= 153)) &&
  6638   00156A  5001               	movf	colour_to_key@p1^0,w,c
  6639   00156C  6ED9               	movwf	fsr2l,c
  6640   00156E  6ADA               	clrf	fsr2h,c
  6641   001570  0E01               	movlw	1
  6642   001572  50DB               	movf	plusw2,w,c
  6643   001574  E109               	bnz	u3180
  6644   001576  0E71               	movlw	113
  6645   001578  5CDE               	subwf	postinc2,w,c
  6646   00157A  A0D8               	btfss	status,0,c
  6647   00157C  EFC2  F00A         	goto	u3181
  6648   001580  EFC4  F00A         	goto	u3180
  6649   001584                     u3181:
  6650   001584  EFF7  F00A         	goto	l3894
  6651   001588                     u3180:
  6652   001588  5001               	movf	colour_to_key@p1^0,w,c
  6653   00158A  6ED9               	movwf	fsr2l,c
  6654   00158C  6ADA               	clrf	fsr2h,c
  6655   00158E  0E01               	movlw	1
  6656   001590  50DB               	movf	plusw2,w,c
  6657   001592  E107               	bnz	u3191
  6658   001594  0E9A               	movlw	154
  6659   001596  5CDE               	subwf	postinc2,w,c
  6660   001598  B0D8               	btfsc	status,0,c
  6661   00159A  EFD1  F00A         	goto	u3191
  6662   00159E  EFD3  F00A         	goto	u3190
  6663   0015A2                     u3191:
  6664   0015A2  EFF7  F00A         	goto	l3894
  6665   0015A6                     u3190:
  6666   0015A6  5001               	movf	colour_to_key@p1^0,w,c
  6667   0015A8  6ED9               	movwf	fsr2l,c
  6668   0015AA  6ADA               	clrf	fsr2h,c
  6669   0015AC  0E02               	movlw	2
  6670   0015AE  26D9               	addwf	fsr2l,f,c
  6671   0015B0  0E01               	movlw	1
  6672   0015B2  50DB               	movf	plusw2,w,c
  6673   0015B4  E109               	bnz	u3200
  6674   0015B6  0E1F               	movlw	31
  6675   0015B8  5CDE               	subwf	postinc2,w,c
  6676   0015BA  A0D8               	btfss	status,0,c
  6677   0015BC  EFE2  F00A         	goto	u3201
  6678   0015C0  EFE4  F00A         	goto	u3200
  6679   0015C4                     u3201:
  6680   0015C4  EFF7  F00A         	goto	l3894
  6681   0015C8                     u3200:
  6682   0015C8  5001               	movf	colour_to_key@p1^0,w,c
  6683   0015CA  6ED9               	movwf	fsr2l,c
  6684   0015CC  6ADA               	clrf	fsr2h,c
  6685   0015CE  0E02               	movlw	2
  6686   0015D0  26D9               	addwf	fsr2l,f,c
  6687   0015D2  0E01               	movlw	1
  6688   0015D4  50DB               	movf	plusw2,w,c
  6689   0015D6  E107               	bnz	u3211
  6690   0015D8  0E2C               	movlw	44
  6691   0015DA  5CDE               	subwf	postinc2,w,c
  6692   0015DC  B0D8               	btfsc	status,0,c
  6693   0015DE  EFF3  F00A         	goto	u3211
  6694   0015E2  EFF5  F00A         	goto	u3210
  6695   0015E6                     u3211:
  6696   0015E6  EFF7  F00A         	goto	l3894
  6697   0015EA                     u3210:
  6698   0015EA                     
  6699                           ;color.c: 330:          ((31 <= p1->S) && (p1->S <= 43))) {;color.c: 331:         key = 
      +                          2;
  6700   0015EA  0E02               	movlw	2
  6701   0015EC  6E05               	movwf	colour_to_key@key^0,c
  6702   0015EE                     l3894:
  6703                           
  6704                           ;color.c: 334:     if ( ((180 <= p1->H) && (p1->H <= 244)) &&
  6705   0015EE  5001               	movf	colour_to_key@p1^0,w,c
  6706   0015F0  6ED9               	movwf	fsr2l,c
  6707   0015F2  6ADA               	clrf	fsr2h,c
  6708   0015F4  0E01               	movlw	1
  6709   0015F6  50DB               	movf	plusw2,w,c
  6710   0015F8  E109               	bnz	u3220
  6711   0015FA  0EB4               	movlw	180
  6712   0015FC  5CDE               	subwf	postinc2,w,c
  6713   0015FE  A0D8               	btfss	status,0,c
  6714   001600  EF04  F00B         	goto	u3221
  6715   001604  EF06  F00B         	goto	u3220
  6716   001608                     u3221:
  6717   001608  EF39  F00B         	goto	l3904
  6718   00160C                     u3220:
  6719   00160C  5001               	movf	colour_to_key@p1^0,w,c
  6720   00160E  6ED9               	movwf	fsr2l,c
  6721   001610  6ADA               	clrf	fsr2h,c
  6722   001612  0E01               	movlw	1
  6723   001614  50DB               	movf	plusw2,w,c
  6724   001616  E107               	bnz	u3231
  6725   001618  0EF5               	movlw	245
  6726   00161A  5CDE               	subwf	postinc2,w,c
  6727   00161C  B0D8               	btfsc	status,0,c
  6728   00161E  EF13  F00B         	goto	u3231
  6729   001622  EF15  F00B         	goto	u3230
  6730   001626                     u3231:
  6731   001626  EF39  F00B         	goto	l3904
  6732   00162A                     u3230:
  6733   00162A  5001               	movf	colour_to_key@p1^0,w,c
  6734   00162C  6ED9               	movwf	fsr2l,c
  6735   00162E  6ADA               	clrf	fsr2h,c
  6736   001630  0E02               	movlw	2
  6737   001632  26D9               	addwf	fsr2l,f,c
  6738   001634  0E01               	movlw	1
  6739   001636  50DB               	movf	plusw2,w,c
  6740   001638  E109               	bnz	u3240
  6741   00163A  0E2A               	movlw	42
  6742   00163C  5CDE               	subwf	postinc2,w,c
  6743   00163E  A0D8               	btfss	status,0,c
  6744   001640  EF24  F00B         	goto	u3241
  6745   001644  EF26  F00B         	goto	u3240
  6746   001648                     u3241:
  6747   001648  EF39  F00B         	goto	l3904
  6748   00164C                     u3240:
  6749   00164C  5001               	movf	colour_to_key@p1^0,w,c
  6750   00164E  6ED9               	movwf	fsr2l,c
  6751   001650  6ADA               	clrf	fsr2h,c
  6752   001652  0E02               	movlw	2
  6753   001654  26D9               	addwf	fsr2l,f,c
  6754   001656  0E01               	movlw	1
  6755   001658  50DB               	movf	plusw2,w,c
  6756   00165A  E107               	bnz	u3251
  6757   00165C  0E39               	movlw	57
  6758   00165E  5CDE               	subwf	postinc2,w,c
  6759   001660  B0D8               	btfsc	status,0,c
  6760   001662  EF35  F00B         	goto	u3251
  6761   001666  EF37  F00B         	goto	u3250
  6762   00166A                     u3251:
  6763   00166A  EF39  F00B         	goto	l3904
  6764   00166E                     u3250:
  6765   00166E                     
  6766                           ;color.c: 335:          ((42 <= p1->S) && (p1->S <= 56))) {;color.c: 336:         key = 
      +                          3;
  6767   00166E  0E03               	movlw	3
  6768   001670  6E05               	movwf	colour_to_key@key^0,c
  6769   001672                     l3904:
  6770                           
  6771                           ;color.c: 339:     if ( ((10 <= p1->H) && (p1->H <= 31)) &&
  6772   001672  5001               	movf	colour_to_key@p1^0,w,c
  6773   001674  6ED9               	movwf	fsr2l,c
  6774   001676  6ADA               	clrf	fsr2h,c
  6775   001678  0E01               	movlw	1
  6776   00167A  50DB               	movf	plusw2,w,c
  6777   00167C  E109               	bnz	u3260
  6778   00167E  0E0A               	movlw	10
  6779   001680  5CDE               	subwf	postinc2,w,c
  6780   001682  A0D8               	btfss	status,0,c
  6781   001684  EF46  F00B         	goto	u3261
  6782   001688  EF48  F00B         	goto	u3260
  6783   00168C                     u3261:
  6784   00168C  EF7B  F00B         	goto	l3914
  6785   001690                     u3260:
  6786   001690  5001               	movf	colour_to_key@p1^0,w,c
  6787   001692  6ED9               	movwf	fsr2l,c
  6788   001694  6ADA               	clrf	fsr2h,c
  6789   001696  0E01               	movlw	1
  6790   001698  50DB               	movf	plusw2,w,c
  6791   00169A  E107               	bnz	u3271
  6792   00169C  0E20               	movlw	32
  6793   00169E  5CDE               	subwf	postinc2,w,c
  6794   0016A0  B0D8               	btfsc	status,0,c
  6795   0016A2  EF55  F00B         	goto	u3271
  6796   0016A6  EF57  F00B         	goto	u3270
  6797   0016AA                     u3271:
  6798   0016AA  EF7B  F00B         	goto	l3914
  6799   0016AE                     u3270:
  6800   0016AE  5001               	movf	colour_to_key@p1^0,w,c
  6801   0016B0  6ED9               	movwf	fsr2l,c
  6802   0016B2  6ADA               	clrf	fsr2h,c
  6803   0016B4  0E02               	movlw	2
  6804   0016B6  26D9               	addwf	fsr2l,f,c
  6805   0016B8  0E01               	movlw	1
  6806   0016BA  50DB               	movf	plusw2,w,c
  6807   0016BC  E109               	bnz	u3280
  6808   0016BE  0E11               	movlw	17
  6809   0016C0  5CDE               	subwf	postinc2,w,c
  6810   0016C2  A0D8               	btfss	status,0,c
  6811   0016C4  EF66  F00B         	goto	u3281
  6812   0016C8  EF68  F00B         	goto	u3280
  6813   0016CC                     u3281:
  6814   0016CC  EF7B  F00B         	goto	l3914
  6815   0016D0                     u3280:
  6816   0016D0  5001               	movf	colour_to_key@p1^0,w,c
  6817   0016D2  6ED9               	movwf	fsr2l,c
  6818   0016D4  6ADA               	clrf	fsr2h,c
  6819   0016D6  0E02               	movlw	2
  6820   0016D8  26D9               	addwf	fsr2l,f,c
  6821   0016DA  0E01               	movlw	1
  6822   0016DC  50DB               	movf	plusw2,w,c
  6823   0016DE  E107               	bnz	u3291
  6824   0016E0  0E21               	movlw	33
  6825   0016E2  5CDE               	subwf	postinc2,w,c
  6826   0016E4  B0D8               	btfsc	status,0,c
  6827   0016E6  EF77  F00B         	goto	u3291
  6828   0016EA  EF79  F00B         	goto	u3290
  6829   0016EE                     u3291:
  6830   0016EE  EF7B  F00B         	goto	l3914
  6831   0016F2                     u3290:
  6832   0016F2                     
  6833                           ;color.c: 340:          ((17 <= p1->S) && (p1->S <= 32))) {;color.c: 341:         key = 
      +                          4;
  6834   0016F2  0E04               	movlw	4
  6835   0016F4  6E05               	movwf	colour_to_key@key^0,c
  6836   0016F6                     l3914:
  6837                           
  6838                           ;color.c: 344:     if ( ((279 <= p1->H) && (p1->H <= 377)) &&
  6839   0016F6  5001               	movf	colour_to_key@p1^0,w,c
  6840   0016F8  6ED9               	movwf	fsr2l,c
  6841   0016FA  6ADA               	clrf	fsr2h,c
  6842   0016FC  0E17               	movlw	23
  6843   0016FE  5CDE               	subwf	postinc2,w,c
  6844   001700  0E01               	movlw	1
  6845   001702  58DE               	subwfb	postinc2,w,c
  6846   001704  A0D8               	btfss	status,0,c
  6847   001706  EF87  F00B         	goto	u3301
  6848   00170A  EF89  F00B         	goto	u3300
  6849   00170E                     u3301:
  6850   00170E  EFBB  F00B         	goto	l3924
  6851   001712                     u3300:
  6852   001712  5001               	movf	colour_to_key@p1^0,w,c
  6853   001714  6ED9               	movwf	fsr2l,c
  6854   001716  6ADA               	clrf	fsr2h,c
  6855   001718  0E7A               	movlw	122
  6856   00171A  5CDE               	subwf	postinc2,w,c
  6857   00171C  0E01               	movlw	1
  6858   00171E  58DE               	subwfb	postinc2,w,c
  6859   001720  B0D8               	btfsc	status,0,c
  6860   001722  EF95  F00B         	goto	u3311
  6861   001726  EF97  F00B         	goto	u3310
  6862   00172A                     u3311:
  6863   00172A  EFBB  F00B         	goto	l3924
  6864   00172E                     u3310:
  6865   00172E  5001               	movf	colour_to_key@p1^0,w,c
  6866   001730  6ED9               	movwf	fsr2l,c
  6867   001732  6ADA               	clrf	fsr2h,c
  6868   001734  0E02               	movlw	2
  6869   001736  26D9               	addwf	fsr2l,f,c
  6870   001738  0E01               	movlw	1
  6871   00173A  50DB               	movf	plusw2,w,c
  6872   00173C  E109               	bnz	u3320
  6873   00173E  0E0B               	movlw	11
  6874   001740  5CDE               	subwf	postinc2,w,c
  6875   001742  A0D8               	btfss	status,0,c
  6876   001744  EFA6  F00B         	goto	u3321
  6877   001748  EFA8  F00B         	goto	u3320
  6878   00174C                     u3321:
  6879   00174C  EFBB  F00B         	goto	l3924
  6880   001750                     u3320:
  6881   001750  5001               	movf	colour_to_key@p1^0,w,c
  6882   001752  6ED9               	movwf	fsr2l,c
  6883   001754  6ADA               	clrf	fsr2h,c
  6884   001756  0E02               	movlw	2
  6885   001758  26D9               	addwf	fsr2l,f,c
  6886   00175A  0E01               	movlw	1
  6887   00175C  50DB               	movf	plusw2,w,c
  6888   00175E  E107               	bnz	u3331
  6889   001760  0E10               	movlw	16
  6890   001762  5CDE               	subwf	postinc2,w,c
  6891   001764  B0D8               	btfsc	status,0,c
  6892   001766  EFB7  F00B         	goto	u3331
  6893   00176A  EFB9  F00B         	goto	u3330
  6894   00176E                     u3331:
  6895   00176E  EFBB  F00B         	goto	l3924
  6896   001772                     u3330:
  6897   001772                     
  6898                           ;color.c: 345:          ((11 <= p1->S) && (p1->S <= 15))) {;color.c: 346:         key = 
      +                          5;
  6899   001772  0E05               	movlw	5
  6900   001774  6E05               	movwf	colour_to_key@key^0,c
  6901   001776                     l3924:
  6902                           
  6903                           ;color.c: 349:     if ( ((298 <= p1->H) && (p1->H <= 360)) &&
  6904   001776  5001               	movf	colour_to_key@p1^0,w,c
  6905   001778  6ED9               	movwf	fsr2l,c
  6906   00177A  6ADA               	clrf	fsr2h,c
  6907   00177C  0E2A               	movlw	42
  6908   00177E  5CDE               	subwf	postinc2,w,c
  6909   001780  0E01               	movlw	1
  6910   001782  58DE               	subwfb	postinc2,w,c
  6911   001784  A0D8               	btfss	status,0,c
  6912   001786  EFC7  F00B         	goto	u3341
  6913   00178A  EFC9  F00B         	goto	u3340
  6914   00178E                     u3341:
  6915   00178E  EFFB  F00B         	goto	l3934
  6916   001792                     u3340:
  6917   001792  5001               	movf	colour_to_key@p1^0,w,c
  6918   001794  6ED9               	movwf	fsr2l,c
  6919   001796  6ADA               	clrf	fsr2h,c
  6920   001798  0E69               	movlw	105
  6921   00179A  5CDE               	subwf	postinc2,w,c
  6922   00179C  0E01               	movlw	1
  6923   00179E  58DE               	subwfb	postinc2,w,c
  6924   0017A0  B0D8               	btfsc	status,0,c
  6925   0017A2  EFD5  F00B         	goto	u3351
  6926   0017A6  EFD7  F00B         	goto	u3350
  6927   0017AA                     u3351:
  6928   0017AA  EFFB  F00B         	goto	l3934
  6929   0017AE                     u3350:
  6930   0017AE  5001               	movf	colour_to_key@p1^0,w,c
  6931   0017B0  6ED9               	movwf	fsr2l,c
  6932   0017B2  6ADA               	clrf	fsr2h,c
  6933   0017B4  0E02               	movlw	2
  6934   0017B6  26D9               	addwf	fsr2l,f,c
  6935   0017B8  0E01               	movlw	1
  6936   0017BA  50DB               	movf	plusw2,w,c
  6937   0017BC  E109               	bnz	u3360
  6938   0017BE  0E14               	movlw	20
  6939   0017C0  5CDE               	subwf	postinc2,w,c
  6940   0017C2  A0D8               	btfss	status,0,c
  6941   0017C4  EFE6  F00B         	goto	u3361
  6942   0017C8  EFE8  F00B         	goto	u3360
  6943   0017CC                     u3361:
  6944   0017CC  EFFB  F00B         	goto	l3934
  6945   0017D0                     u3360:
  6946   0017D0  5001               	movf	colour_to_key@p1^0,w,c
  6947   0017D2  6ED9               	movwf	fsr2l,c
  6948   0017D4  6ADA               	clrf	fsr2h,c
  6949   0017D6  0E02               	movlw	2
  6950   0017D8  26D9               	addwf	fsr2l,f,c
  6951   0017DA  0E01               	movlw	1
  6952   0017DC  50DB               	movf	plusw2,w,c
  6953   0017DE  E107               	bnz	u3371
  6954   0017E0  0E2E               	movlw	46
  6955   0017E2  5CDE               	subwf	postinc2,w,c
  6956   0017E4  B0D8               	btfsc	status,0,c
  6957   0017E6  EFF7  F00B         	goto	u3371
  6958   0017EA  EFF9  F00B         	goto	u3370
  6959   0017EE                     u3371:
  6960   0017EE  EFFB  F00B         	goto	l3934
  6961   0017F2                     u3370:
  6962   0017F2                     
  6963                           ;color.c: 350:          ((20 <= p1->S) && (p1->S <= 45))) {;color.c: 351:         key = 
      +                          6;
  6964   0017F2  0E06               	movlw	6
  6965   0017F4  6E05               	movwf	colour_to_key@key^0,c
  6966   0017F6                     l3934:
  6967                           
  6968                           ;color.c: 354:     if ( ((153 <= p1->H) && (p1->H <= 207)) &&
  6969   0017F6  5001               	movf	colour_to_key@p1^0,w,c
  6970   0017F8  6ED9               	movwf	fsr2l,c
  6971   0017FA  6ADA               	clrf	fsr2h,c
  6972   0017FC  0E01               	movlw	1
  6973   0017FE  50DB               	movf	plusw2,w,c
  6974   001800  E109               	bnz	u3380
  6975   001802  0E99               	movlw	153
  6976   001804  5CDE               	subwf	postinc2,w,c
  6977   001806  A0D8               	btfss	status,0,c
  6978   001808  EF08  F00C         	goto	u3381
  6979   00180C  EF0A  F00C         	goto	u3380
  6980   001810                     u3381:
  6981   001810  EF3D  F00C         	goto	l3944
  6982   001814                     u3380:
  6983   001814  5001               	movf	colour_to_key@p1^0,w,c
  6984   001816  6ED9               	movwf	fsr2l,c
  6985   001818  6ADA               	clrf	fsr2h,c
  6986   00181A  0E01               	movlw	1
  6987   00181C  50DB               	movf	plusw2,w,c
  6988   00181E  E107               	bnz	u3391
  6989   001820  0ED0               	movlw	208
  6990   001822  5CDE               	subwf	postinc2,w,c
  6991   001824  B0D8               	btfsc	status,0,c
  6992   001826  EF17  F00C         	goto	u3391
  6993   00182A  EF19  F00C         	goto	u3390
  6994   00182E                     u3391:
  6995   00182E  EF3D  F00C         	goto	l3944
  6996   001832                     u3390:
  6997   001832  5001               	movf	colour_to_key@p1^0,w,c
  6998   001834  6ED9               	movwf	fsr2l,c
  6999   001836  6ADA               	clrf	fsr2h,c
  7000   001838  0E02               	movlw	2
  7001   00183A  26D9               	addwf	fsr2l,f,c
  7002   00183C  0E01               	movlw	1
  7003   00183E  50DB               	movf	plusw2,w,c
  7004   001840  E109               	bnz	u3400
  7005   001842  0E21               	movlw	33
  7006   001844  5CDE               	subwf	postinc2,w,c
  7007   001846  A0D8               	btfss	status,0,c
  7008   001848  EF28  F00C         	goto	u3401
  7009   00184C  EF2A  F00C         	goto	u3400
  7010   001850                     u3401:
  7011   001850  EF3D  F00C         	goto	l3944
  7012   001854                     u3400:
  7013   001854  5001               	movf	colour_to_key@p1^0,w,c
  7014   001856  6ED9               	movwf	fsr2l,c
  7015   001858  6ADA               	clrf	fsr2h,c
  7016   00185A  0E02               	movlw	2
  7017   00185C  26D9               	addwf	fsr2l,f,c
  7018   00185E  0E01               	movlw	1
  7019   001860  50DB               	movf	plusw2,w,c
  7020   001862  E107               	bnz	u3411
  7021   001864  0E2E               	movlw	46
  7022   001866  5CDE               	subwf	postinc2,w,c
  7023   001868  B0D8               	btfsc	status,0,c
  7024   00186A  EF39  F00C         	goto	u3411
  7025   00186E  EF3B  F00C         	goto	u3410
  7026   001872                     u3411:
  7027   001872  EF3D  F00C         	goto	l3944
  7028   001876                     u3410:
  7029   001876                     
  7030                           ;color.c: 355:          ((33 <= p1->S) && (p1->S <= 45))) {;color.c: 356:         key = 
      +                          7;
  7031   001876  0E07               	movlw	7
  7032   001878  6E05               	movwf	colour_to_key@key^0,c
  7033   00187A                     l3944:
  7034                           
  7035                           ;color.c: 359:     if ( ((3000 <= p2->C) && (p2->C <= 40000)) &&
  7036   00187A  5002               	movf	colour_to_key@p2^0,w,c
  7037   00187C  6ED9               	movwf	fsr2l,c
  7038   00187E  6ADA               	clrf	fsr2h,c
  7039   001880  0E06               	movlw	6
  7040   001882  26D9               	addwf	fsr2l,f,c
  7041   001884  0EB8               	movlw	184
  7042   001886  5CDE               	subwf	postinc2,w,c
  7043   001888  0E0B               	movlw	11
  7044   00188A  58DE               	subwfb	postinc2,w,c
  7045   00188C  A0D8               	btfss	status,0,c
  7046   00188E  EF4B  F00C         	goto	u3421
  7047   001892  EF4D  F00C         	goto	u3420
  7048   001896                     u3421:
  7049   001896  EF70  F00C         	goto	l3952
  7050   00189A                     u3420:
  7051   00189A  5002               	movf	colour_to_key@p2^0,w,c
  7052   00189C  6ED9               	movwf	fsr2l,c
  7053   00189E  6ADA               	clrf	fsr2h,c
  7054   0018A0  0E06               	movlw	6
  7055   0018A2  26D9               	addwf	fsr2l,f,c
  7056   0018A4  0E41               	movlw	65
  7057   0018A6  5CDE               	subwf	postinc2,w,c
  7058   0018A8  0E9C               	movlw	156
  7059   0018AA  58DE               	subwfb	postinc2,w,c
  7060   0018AC  B0D8               	btfsc	status,0,c
  7061   0018AE  EF5B  F00C         	goto	u3431
  7062   0018B2  EF5D  F00C         	goto	u3430
  7063   0018B6                     u3431:
  7064   0018B6  EF70  F00C         	goto	l3952
  7065   0018BA                     u3430:
  7066   0018BA  5001               	movf	colour_to_key@p1^0,w,c
  7067   0018BC  6ED9               	movwf	fsr2l,c
  7068   0018BE  6ADA               	clrf	fsr2h,c
  7069   0018C0  0E02               	movlw	2
  7070   0018C2  26D9               	addwf	fsr2l,f,c
  7071   0018C4  0E01               	movlw	1
  7072   0018C6  50DB               	movf	plusw2,w,c
  7073   0018C8  E107               	bnz	u3441
  7074   0018CA  0E0B               	movlw	11
  7075   0018CC  5CDE               	subwf	postinc2,w,c
  7076   0018CE  B0D8               	btfsc	status,0,c
  7077   0018D0  EF6C  F00C         	goto	u3441
  7078   0018D4  EF6E  F00C         	goto	u3440
  7079   0018D8                     u3441:
  7080   0018D8  EF70  F00C         	goto	l3952
  7081   0018DC                     u3440:
  7082   0018DC                     
  7083                           ;color.c: 360:          ((p1->S <= 10))) {;color.c: 361:         key = 8;
  7084   0018DC  0E08               	movlw	8
  7085   0018DE  6E05               	movwf	colour_to_key@key^0,c
  7086   0018E0                     l3952:
  7087                           
  7088                           ;color.c: 364:     if ( ((1000 <= p2->C) && (p2->C <= 2600)) &&
  7089   0018E0  5002               	movf	colour_to_key@p2^0,w,c
  7090   0018E2  6ED9               	movwf	fsr2l,c
  7091   0018E4  6ADA               	clrf	fsr2h,c
  7092   0018E6  0E06               	movlw	6
  7093   0018E8  26D9               	addwf	fsr2l,f,c
  7094   0018EA  0EE8               	movlw	232
  7095   0018EC  5CDE               	subwf	postinc2,w,c
  7096   0018EE  0E03               	movlw	3
  7097   0018F0  58DE               	subwfb	postinc2,w,c
  7098   0018F2  A0D8               	btfss	status,0,c
  7099   0018F4  EF7E  F00C         	goto	u3451
  7100   0018F8  EF80  F00C         	goto	u3450
  7101   0018FC                     u3451:
  7102   0018FC  EFA3  F00C         	goto	l136
  7103   001900                     u3450:
  7104   001900  5002               	movf	colour_to_key@p2^0,w,c
  7105   001902  6ED9               	movwf	fsr2l,c
  7106   001904  6ADA               	clrf	fsr2h,c
  7107   001906  0E06               	movlw	6
  7108   001908  26D9               	addwf	fsr2l,f,c
  7109   00190A  0E29               	movlw	41
  7110   00190C  5CDE               	subwf	postinc2,w,c
  7111   00190E  0E0A               	movlw	10
  7112   001910  58DE               	subwfb	postinc2,w,c
  7113   001912  B0D8               	btfsc	status,0,c
  7114   001914  EF8E  F00C         	goto	u3461
  7115   001918  EF90  F00C         	goto	u3460
  7116   00191C                     u3461:
  7117   00191C  EFA3  F00C         	goto	l136
  7118   001920                     u3460:
  7119   001920  5001               	movf	colour_to_key@p1^0,w,c
  7120   001922  6ED9               	movwf	fsr2l,c
  7121   001924  6ADA               	clrf	fsr2h,c
  7122   001926  0E02               	movlw	2
  7123   001928  26D9               	addwf	fsr2l,f,c
  7124   00192A  0E01               	movlw	1
  7125   00192C  50DB               	movf	plusw2,w,c
  7126   00192E  E107               	bnz	u3471
  7127   001930  0E0D               	movlw	13
  7128   001932  5CDE               	subwf	postinc2,w,c
  7129   001934  B0D8               	btfsc	status,0,c
  7130   001936  EF9F  F00C         	goto	u3471
  7131   00193A  EFA1  F00C         	goto	u3470
  7132   00193E                     u3471:
  7133   00193E  EFA3  F00C         	goto	l136
  7134   001942                     u3470:
  7135   001942                     
  7136                           ;color.c: 365:          ((p1->S <= 12))) {;color.c: 366:         key = 9;
  7137   001942  0E09               	movlw	9
  7138   001944  6E05               	movwf	colour_to_key@key^0,c
  7139   001946                     l136:
  7140                           
  7141                           ;color.c: 369:     return key;
  7142   001946  5005               	movf	colour_to_key@key^0,w,c
  7143   001948  0012               	return		;funcret
  7144   00194A                     __end_of_colour_to_key:
  7145                           	callstack 0
  7146                           
  7147 ;; *************** function _average_RGBC *****************
  7148 ;; Defined at:
  7149 ;;		line 124 in file "color.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  p               1   13[COMRAM] PTR struct RGBC_val
  7152 ;;		 -> main@RGBC_colour(8), 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  i               1   16[COMRAM] unsigned char 
  7155 ;;  temp_C          4   29[COMRAM] unsigned long 
  7156 ;;  temp_B          4   25[COMRAM] unsigned long 
  7157 ;;  temp_G          4   21[COMRAM] unsigned long 
  7158 ;;  temp_R          4   17[COMRAM] unsigned long 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7168 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;Total ram usage:       20 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 5
  7175 ;; This function calls:
  7176 ;;		___lldiv
  7177 ;;		_getRGBCval
  7178 ;; This function is called by:
  7179 ;;		_main
  7180 ;;		_forward_navigation
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text35
  7185   002080                     __ptext35:
  7186                           	callstack 0
  7187   002080                     _average_RGBC:
  7188                           	callstack 24
  7189   002080                     
  7190                           ;color.c: 124: void average_RGBC(struct RGBC_val *p);color.c: 125: {;color.c: 127:     u
      +                          nsigned long temp_R = 0;
  7191   002080  0E00               	movlw	0
  7192   002082  6E12               	movwf	average_RGBC@temp_R^0,c
  7193   002084  0E00               	movlw	0
  7194   002086  6E13               	movwf	(average_RGBC@temp_R+1)^0,c
  7195   002088  0E00               	movlw	0
  7196   00208A  6E14               	movwf	(average_RGBC@temp_R+2)^0,c
  7197   00208C  0E00               	movlw	0
  7198   00208E  6E15               	movwf	(average_RGBC@temp_R+3)^0,c
  7199                           
  7200                           ;color.c: 128:     unsigned long temp_G = 0;
  7201   002090  0E00               	movlw	0
  7202   002092  6E16               	movwf	average_RGBC@temp_G^0,c
  7203   002094  0E00               	movlw	0
  7204   002096  6E17               	movwf	(average_RGBC@temp_G+1)^0,c
  7205   002098  0E00               	movlw	0
  7206   00209A  6E18               	movwf	(average_RGBC@temp_G+2)^0,c
  7207   00209C  0E00               	movlw	0
  7208   00209E  6E19               	movwf	(average_RGBC@temp_G+3)^0,c
  7209                           
  7210                           ;color.c: 129:     unsigned long temp_B = 0;
  7211   0020A0  0E00               	movlw	0
  7212   0020A2  6E1A               	movwf	average_RGBC@temp_B^0,c
  7213   0020A4  0E00               	movlw	0
  7214   0020A6  6E1B               	movwf	(average_RGBC@temp_B+1)^0,c
  7215   0020A8  0E00               	movlw	0
  7216   0020AA  6E1C               	movwf	(average_RGBC@temp_B+2)^0,c
  7217   0020AC  0E00               	movlw	0
  7218   0020AE  6E1D               	movwf	(average_RGBC@temp_B+3)^0,c
  7219                           
  7220                           ;color.c: 130:     unsigned long temp_C = 0;
  7221   0020B0  0E00               	movlw	0
  7222   0020B2  6E1E               	movwf	average_RGBC@temp_C^0,c
  7223   0020B4  0E00               	movlw	0
  7224   0020B6  6E1F               	movwf	(average_RGBC@temp_C+1)^0,c
  7225   0020B8  0E00               	movlw	0
  7226   0020BA  6E20               	movwf	(average_RGBC@temp_C+2)^0,c
  7227   0020BC  0E00               	movlw	0
  7228   0020BE  6E21               	movwf	(average_RGBC@temp_C+3)^0,c
  7229                           
  7230                           ;color.c: 136:     for (unsigned char i = 0; i < sample_count; i++) {
  7231   0020C0  0E00               	movlw	0
  7232   0020C2  6E11               	movwf	average_RGBC@i^0,c
  7233   0020C4  EFAB  F010         	goto	l3734
  7234   0020C8                     l3722:
  7235                           
  7236                           ;color.c: 138:         getRGBCval(p);
  7237   0020C8  C00E  F00C         	movff	average_RGBC@p,getRGBCval@p
  7238   0020CC  EC1A  F019         	call	_getRGBCval	;wreg free
  7239   0020D0                     
  7240                           ;color.c: 140:         temp_R += (unsigned long)p->R;
  7241   0020D0  500E               	movf	average_RGBC@p^0,w,c
  7242   0020D2  6ED9               	movwf	fsr2l,c
  7243   0020D4  6ADA               	clrf	fsr2h,c
  7244   0020D6  CFDE F00F          	movff	postinc2,??_average_RGBC
  7245   0020DA  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7246   0020DE  500F               	movf	??_average_RGBC^0,w,c
  7247   0020E0  2612               	addwf	average_RGBC@temp_R^0,f,c
  7248   0020E2  5010               	movf	(??_average_RGBC+1)^0,w,c
  7249   0020E4  2213               	addwfc	(average_RGBC@temp_R+1)^0,f,c
  7250   0020E6  0E00               	movlw	0
  7251   0020E8  2214               	addwfc	(average_RGBC@temp_R+2)^0,f,c
  7252   0020EA  0E00               	movlw	0
  7253   0020EC  2215               	addwfc	(average_RGBC@temp_R+3)^0,f,c
  7254   0020EE                     
  7255                           ;color.c: 141:         temp_G += (unsigned long)p->G;
  7256   0020EE  500E               	movf	average_RGBC@p^0,w,c
  7257   0020F0  6ED9               	movwf	fsr2l,c
  7258   0020F2  6ADA               	clrf	fsr2h,c
  7259   0020F4  0E02               	movlw	2
  7260   0020F6  26D9               	addwf	fsr2l,f,c
  7261   0020F8  CFDE F00F          	movff	postinc2,??_average_RGBC
  7262   0020FC  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7263   002100  500F               	movf	??_average_RGBC^0,w,c
  7264   002102  2616               	addwf	average_RGBC@temp_G^0,f,c
  7265   002104  5010               	movf	(??_average_RGBC+1)^0,w,c
  7266   002106  2217               	addwfc	(average_RGBC@temp_G+1)^0,f,c
  7267   002108  0E00               	movlw	0
  7268   00210A  2218               	addwfc	(average_RGBC@temp_G+2)^0,f,c
  7269   00210C  0E00               	movlw	0
  7270   00210E  2219               	addwfc	(average_RGBC@temp_G+3)^0,f,c
  7271   002110                     
  7272                           ;color.c: 142:         temp_B += (unsigned long)p->B;
  7273   002110  500E               	movf	average_RGBC@p^0,w,c
  7274   002112  6ED9               	movwf	fsr2l,c
  7275   002114  6ADA               	clrf	fsr2h,c
  7276   002116  0E04               	movlw	4
  7277   002118  26D9               	addwf	fsr2l,f,c
  7278   00211A  CFDE F00F          	movff	postinc2,??_average_RGBC
  7279   00211E  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7280   002122  500F               	movf	??_average_RGBC^0,w,c
  7281   002124  261A               	addwf	average_RGBC@temp_B^0,f,c
  7282   002126  5010               	movf	(??_average_RGBC+1)^0,w,c
  7283   002128  221B               	addwfc	(average_RGBC@temp_B+1)^0,f,c
  7284   00212A  0E00               	movlw	0
  7285   00212C  221C               	addwfc	(average_RGBC@temp_B+2)^0,f,c
  7286   00212E  0E00               	movlw	0
  7287   002130  221D               	addwfc	(average_RGBC@temp_B+3)^0,f,c
  7288   002132                     
  7289                           ;color.c: 143:         temp_C += (unsigned long)p->C;
  7290   002132  500E               	movf	average_RGBC@p^0,w,c
  7291   002134  6ED9               	movwf	fsr2l,c
  7292   002136  6ADA               	clrf	fsr2h,c
  7293   002138  0E06               	movlw	6
  7294   00213A  26D9               	addwf	fsr2l,f,c
  7295   00213C  CFDE F00F          	movff	postinc2,??_average_RGBC
  7296   002140  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7297   002144  500F               	movf	??_average_RGBC^0,w,c
  7298   002146  261E               	addwf	average_RGBC@temp_C^0,f,c
  7299   002148  5010               	movf	(??_average_RGBC+1)^0,w,c
  7300   00214A  221F               	addwfc	(average_RGBC@temp_C+1)^0,f,c
  7301   00214C  0E00               	movlw	0
  7302   00214E  2220               	addwfc	(average_RGBC@temp_C+2)^0,f,c
  7303   002150  0E00               	movlw	0
  7304   002152  2221               	addwfc	(average_RGBC@temp_C+3)^0,f,c
  7305   002154                     
  7306                           ;color.c: 144:     }
  7307   002154  2A11               	incf	average_RGBC@i^0,f,c
  7308   002156                     l3734:
  7309   002156  0E13               	movlw	19
  7310   002158  6411               	cpfsgt	average_RGBC@i^0,c
  7311   00215A  EFB1  F010         	goto	u3011
  7312   00215E  EFB3  F010         	goto	u3010
  7313   002162                     u3011:
  7314   002162  EF64  F010         	goto	l3722
  7315   002166                     u3010:
  7316   002166  C012  F001         	movff	average_RGBC@temp_R,___lldiv@dividend
  7317   00216A  C013  F002         	movff	average_RGBC@temp_R+1,___lldiv@dividend+1
  7318   00216E  C014  F003         	movff	average_RGBC@temp_R+2,___lldiv@dividend+2
  7319   002172  C015  F004         	movff	average_RGBC@temp_R+3,___lldiv@dividend+3
  7320   002176  0E14               	movlw	20
  7321   002178  6E05               	movwf	___lldiv@divisor^0,c
  7322   00217A  0E00               	movlw	0
  7323   00217C  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7324   00217E  0E00               	movlw	0
  7325   002180  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7326   002182  0E00               	movlw	0
  7327   002184  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7328   002186  EC56  F016         	call	___lldiv	;wreg free
  7329   00218A  C001  F012         	movff	?___lldiv,average_RGBC@temp_R
  7330   00218E  C002  F013         	movff	?___lldiv+1,average_RGBC@temp_R+1
  7331   002192  C003  F014         	movff	?___lldiv+2,average_RGBC@temp_R+2
  7332   002196  C004  F015         	movff	?___lldiv+3,average_RGBC@temp_R+3
  7333   00219A  C016  F001         	movff	average_RGBC@temp_G,___lldiv@dividend
  7334   00219E  C017  F002         	movff	average_RGBC@temp_G+1,___lldiv@dividend+1
  7335   0021A2  C018  F003         	movff	average_RGBC@temp_G+2,___lldiv@dividend+2
  7336   0021A6  C019  F004         	movff	average_RGBC@temp_G+3,___lldiv@dividend+3
  7337   0021AA  0E14               	movlw	20
  7338   0021AC  6E05               	movwf	___lldiv@divisor^0,c
  7339   0021AE  0E00               	movlw	0
  7340   0021B0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7341   0021B2  0E00               	movlw	0
  7342   0021B4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7343   0021B6  0E00               	movlw	0
  7344   0021B8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7345   0021BA  EC56  F016         	call	___lldiv	;wreg free
  7346   0021BE  C001  F016         	movff	?___lldiv,average_RGBC@temp_G
  7347   0021C2  C002  F017         	movff	?___lldiv+1,average_RGBC@temp_G+1
  7348   0021C6  C003  F018         	movff	?___lldiv+2,average_RGBC@temp_G+2
  7349   0021CA  C004  F019         	movff	?___lldiv+3,average_RGBC@temp_G+3
  7350   0021CE  C01A  F001         	movff	average_RGBC@temp_B,___lldiv@dividend
  7351   0021D2  C01B  F002         	movff	average_RGBC@temp_B+1,___lldiv@dividend+1
  7352   0021D6  C01C  F003         	movff	average_RGBC@temp_B+2,___lldiv@dividend+2
  7353   0021DA  C01D  F004         	movff	average_RGBC@temp_B+3,___lldiv@dividend+3
  7354   0021DE  0E14               	movlw	20
  7355   0021E0  6E05               	movwf	___lldiv@divisor^0,c
  7356   0021E2  0E00               	movlw	0
  7357   0021E4  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7358   0021E6  0E00               	movlw	0
  7359   0021E8  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7360   0021EA  0E00               	movlw	0
  7361   0021EC  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7362   0021EE  EC56  F016         	call	___lldiv	;wreg free
  7363   0021F2  C001  F01A         	movff	?___lldiv,average_RGBC@temp_B
  7364   0021F6  C002  F01B         	movff	?___lldiv+1,average_RGBC@temp_B+1
  7365   0021FA  C003  F01C         	movff	?___lldiv+2,average_RGBC@temp_B+2
  7366   0021FE  C004  F01D         	movff	?___lldiv+3,average_RGBC@temp_B+3
  7367   002202  C01E  F001         	movff	average_RGBC@temp_C,___lldiv@dividend
  7368   002206  C01F  F002         	movff	average_RGBC@temp_C+1,___lldiv@dividend+1
  7369   00220A  C020  F003         	movff	average_RGBC@temp_C+2,___lldiv@dividend+2
  7370   00220E  C021  F004         	movff	average_RGBC@temp_C+3,___lldiv@dividend+3
  7371   002212  0E14               	movlw	20
  7372   002214  6E05               	movwf	___lldiv@divisor^0,c
  7373   002216  0E00               	movlw	0
  7374   002218  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7375   00221A  0E00               	movlw	0
  7376   00221C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7377   00221E  0E00               	movlw	0
  7378   002220  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7379   002222  EC56  F016         	call	___lldiv	;wreg free
  7380   002226  C001  F01E         	movff	?___lldiv,average_RGBC@temp_C
  7381   00222A  C002  F01F         	movff	?___lldiv+1,average_RGBC@temp_C+1
  7382   00222E  C003  F020         	movff	?___lldiv+2,average_RGBC@temp_C+2
  7383   002232  C004  F021         	movff	?___lldiv+3,average_RGBC@temp_C+3
  7384   002236                     
  7385                           ;color.c: 153:     p->R = (unsigned int)temp_R;
  7386   002236  500E               	movf	average_RGBC@p^0,w,c
  7387   002238  6ED9               	movwf	fsr2l,c
  7388   00223A  6ADA               	clrf	fsr2h,c
  7389   00223C  C012  FFDE         	movff	average_RGBC@temp_R,postinc2
  7390   002240  C013  FFDD         	movff	average_RGBC@temp_R+1,postdec2
  7391   002244                     
  7392                           ;color.c: 154:     p->G = (unsigned int)temp_G;
  7393   002244  500E               	movf	average_RGBC@p^0,w,c
  7394   002246  6ED9               	movwf	fsr2l,c
  7395   002248  6ADA               	clrf	fsr2h,c
  7396   00224A  0E02               	movlw	2
  7397   00224C  26D9               	addwf	fsr2l,f,c
  7398   00224E  C016  FFDE         	movff	average_RGBC@temp_G,postinc2
  7399   002252  C017  FFDD         	movff	average_RGBC@temp_G+1,postdec2
  7400   002256                     
  7401                           ;color.c: 155:     p->B = (unsigned int)temp_B;
  7402   002256  500E               	movf	average_RGBC@p^0,w,c
  7403   002258  6ED9               	movwf	fsr2l,c
  7404   00225A  6ADA               	clrf	fsr2h,c
  7405   00225C  0E04               	movlw	4
  7406   00225E  26D9               	addwf	fsr2l,f,c
  7407   002260  C01A  FFDE         	movff	average_RGBC@temp_B,postinc2
  7408   002264  C01B  FFDD         	movff	average_RGBC@temp_B+1,postdec2
  7409   002268                     
  7410                           ;color.c: 156:     p->C = (unsigned int)temp_C;
  7411   002268  500E               	movf	average_RGBC@p^0,w,c
  7412   00226A  6ED9               	movwf	fsr2l,c
  7413   00226C  6ADA               	clrf	fsr2h,c
  7414   00226E  0E06               	movlw	6
  7415   002270  26D9               	addwf	fsr2l,f,c
  7416   002272  C01E  FFDE         	movff	average_RGBC@temp_C,postinc2
  7417   002276  C01F  FFDD         	movff	average_RGBC@temp_C+1,postdec2
  7418   00227A  0012               	return		;funcret
  7419   00227C                     __end_of_average_RGBC:
  7420                           	callstack 0
  7421                           
  7422 ;; *************** function _getRGBCval *****************
  7423 ;; Defined at:
  7424 ;;		line 112 in file "color.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  7427 ;;		 -> main@RGBC_colour(8), 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7443 ;;Total ram usage:        1 bytes
  7444 ;; Hardware stack levels used: 1
  7445 ;; Hardware stack levels required when called: 4
  7446 ;; This function calls:
  7447 ;;		_color_read_Blue
  7448 ;;		_color_read_Clear
  7449 ;;		_color_read_Green
  7450 ;;		_color_read_Red
  7451 ;; This function is called by:
  7452 ;;		_average_RGBC
  7453 ;;		_wait_for_wall
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text36
  7458   003234                     __ptext36:
  7459                           	callstack 0
  7460   003234                     _getRGBCval:
  7461                           	callstack 24
  7462   003234                     
  7463                           ;color.c: 112: void getRGBCval(struct RGBC_val *p);color.c: 113: {;color.c: 114:     p->
      +                          R = color_read_Red();
  7464   003234  EC45  F019         	call	_color_read_Red	;wreg free
  7465   003238  500C               	movf	getRGBCval@p^0,w,c
  7466   00323A  6ED9               	movwf	fsr2l,c
  7467   00323C  6ADA               	clrf	fsr2h,c
  7468   00323E  C005  FFDE         	movff	?_color_read_Red,postinc2
  7469   003242  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7470                           
  7471                           ;color.c: 115:     p->G = color_read_Green();
  7472   003246  EC6D  F019         	call	_color_read_Green	;wreg free
  7473   00324A  500C               	movf	getRGBCval@p^0,w,c
  7474   00324C  6ED9               	movwf	fsr2l,c
  7475   00324E  6ADA               	clrf	fsr2h,c
  7476   003250  0E02               	movlw	2
  7477   003252  26D9               	addwf	fsr2l,f,c
  7478   003254  C005  FFDE         	movff	?_color_read_Green,postinc2
  7479   003258  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7480                           
  7481                           ;color.c: 116:     p->B = color_read_Blue();
  7482   00325C  ECBD  F019         	call	_color_read_Blue	;wreg free
  7483   003260  500C               	movf	getRGBCval@p^0,w,c
  7484   003262  6ED9               	movwf	fsr2l,c
  7485   003264  6ADA               	clrf	fsr2h,c
  7486   003266  0E04               	movlw	4
  7487   003268  26D9               	addwf	fsr2l,f,c
  7488   00326A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7489   00326E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7490                           
  7491                           ;color.c: 117:     p->C = color_read_Clear();
  7492   003272  EC95  F019         	call	_color_read_Clear	;wreg free
  7493   003276  500C               	movf	getRGBCval@p^0,w,c
  7494   003278  6ED9               	movwf	fsr2l,c
  7495   00327A  6ADA               	clrf	fsr2h,c
  7496   00327C  0E06               	movlw	6
  7497   00327E  26D9               	addwf	fsr2l,f,c
  7498   003280  C005  FFDE         	movff	?_color_read_Clear,postinc2
  7499   003284  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  7500   003288  0012               	return		;funcret
  7501   00328A                     __end_of_getRGBCval:
  7502                           	callstack 0
  7503                           
  7504 ;; *************** function _color_read_Red *****************
  7505 ;; Defined at:
  7506 ;;		line 40 in file "color.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  tmp             2    9[COMRAM] unsigned int 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  2    4[COMRAM] unsigned int 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;Total ram usage:        7 bytes
  7525 ;; Hardware stack levels used: 1
  7526 ;; Hardware stack levels required when called: 3
  7527 ;; This function calls:
  7528 ;;		_I2C_2_Master_Read
  7529 ;;		_I2C_2_Master_RepStart
  7530 ;;		_I2C_2_Master_Start
  7531 ;;		_I2C_2_Master_Stop
  7532 ;;		_I2C_2_Master_Write
  7533 ;; This function is called by:
  7534 ;;		_getRGBCval
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text37
  7539   00328A                     __ptext37:
  7540                           	callstack 0
  7541   00328A                     _color_read_Red:
  7542                           	callstack 24
  7543   00328A                     
  7544                           ;color.c: 42:  unsigned int tmp;;color.c: 43:  I2C_2_Master_Start();
  7545   00328A  ECAB  F01B         	call	_I2C_2_Master_Start	;wreg free
  7546                           
  7547                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x00);
  7548   00328E  0E52               	movlw	82
  7549   003290  EC8F  F01B         	call	_I2C_2_Master_Write
  7550                           
  7551                           ;color.c: 45:  I2C_2_Master_Write(0xA0 | 0x16);
  7552   003294  0EB6               	movlw	182
  7553   003296  EC8F  F01B         	call	_I2C_2_Master_Write
  7554                           
  7555                           ;color.c: 46:  I2C_2_Master_RepStart();
  7556   00329A  ECA1  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7557                           
  7558                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x01);
  7559   00329E  0E53               	movlw	83
  7560   0032A0  EC8F  F01B         	call	_I2C_2_Master_Write
  7561                           
  7562                           ;color.c: 48:  tmp=I2C_2_Master_Read(1);
  7563   0032A4  0E01               	movlw	1
  7564   0032A6  EC74  F01A         	call	_I2C_2_Master_Read
  7565   0032AA  6E07               	movwf	??_color_read_Red^0,c
  7566   0032AC  5007               	movf	??_color_read_Red^0,w,c
  7567   0032AE  6E0A               	movwf	color_read_Red@tmp^0,c
  7568   0032B0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7569                           
  7570                           ;color.c: 49:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7571   0032B2  0E00               	movlw	0
  7572   0032B4  EC74  F01A         	call	_I2C_2_Master_Read
  7573   0032B8  6E07               	movwf	??_color_read_Red^0,c
  7574   0032BA  5007               	movf	??_color_read_Red^0,w,c
  7575   0032BC  6E09               	movwf	(??_color_read_Red+2)^0,c
  7576   0032BE  6A08               	clrf	(??_color_read_Red+1)^0,c
  7577   0032C0  500A               	movf	color_read_Red@tmp^0,w,c
  7578   0032C2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7579   0032C4  6E0A               	movwf	color_read_Red@tmp^0,c
  7580   0032C6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7581   0032C8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7582   0032CA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7583                           
  7584                           ;color.c: 50:  I2C_2_Master_Stop();
  7585   0032CC  ECA6  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7586   0032D0                     
  7587                           ;color.c: 51:  return tmp;
  7588   0032D0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7589   0032D4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7590   0032D8  0012               	return		;funcret
  7591   0032DA                     __end_of_color_read_Red:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _color_read_Green *****************
  7595 ;; Defined at:
  7596 ;;		line 58 in file "color.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  tmp             2    9[COMRAM] unsigned int 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  2    4[COMRAM] unsigned int 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7614 ;;Total ram usage:        7 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; Hardware stack levels required when called: 3
  7617 ;; This function calls:
  7618 ;;		_I2C_2_Master_Read
  7619 ;;		_I2C_2_Master_RepStart
  7620 ;;		_I2C_2_Master_Start
  7621 ;;		_I2C_2_Master_Stop
  7622 ;;		_I2C_2_Master_Write
  7623 ;; This function is called by:
  7624 ;;		_getRGBCval
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text38
  7629   0032DA                     __ptext38:
  7630                           	callstack 0
  7631   0032DA                     _color_read_Green:
  7632                           	callstack 24
  7633   0032DA                     
  7634                           ;color.c: 60:     unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7635   0032DA  ECAB  F01B         	call	_I2C_2_Master_Start	;wreg free
  7636                           
  7637                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7638   0032DE  0E52               	movlw	82
  7639   0032E0  EC8F  F01B         	call	_I2C_2_Master_Write
  7640                           
  7641                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  7642   0032E4  0EB8               	movlw	184
  7643   0032E6  EC8F  F01B         	call	_I2C_2_Master_Write
  7644                           
  7645                           ;color.c: 64:  I2C_2_Master_RepStart();
  7646   0032EA  ECA1  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7647                           
  7648                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7649   0032EE  0E53               	movlw	83
  7650   0032F0  EC8F  F01B         	call	_I2C_2_Master_Write
  7651                           
  7652                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7653   0032F4  0E01               	movlw	1
  7654   0032F6  EC74  F01A         	call	_I2C_2_Master_Read
  7655   0032FA  6E07               	movwf	??_color_read_Green^0,c
  7656   0032FC  5007               	movf	??_color_read_Green^0,w,c
  7657   0032FE  6E0A               	movwf	color_read_Green@tmp^0,c
  7658   003300  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7659                           
  7660                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7661   003302  0E00               	movlw	0
  7662   003304  EC74  F01A         	call	_I2C_2_Master_Read
  7663   003308  6E07               	movwf	??_color_read_Green^0,c
  7664   00330A  5007               	movf	??_color_read_Green^0,w,c
  7665   00330C  6E09               	movwf	(??_color_read_Green+2)^0,c
  7666   00330E  6A08               	clrf	(??_color_read_Green+1)^0,c
  7667   003310  500A               	movf	color_read_Green@tmp^0,w,c
  7668   003312  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7669   003314  6E0A               	movwf	color_read_Green@tmp^0,c
  7670   003316  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7671   003318  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7672   00331A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7673                           
  7674                           ;color.c: 68:  I2C_2_Master_Stop();
  7675   00331C  ECA6  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7676   003320                     
  7677                           ;color.c: 69:  return tmp;
  7678   003320  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7679   003324  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7680   003328  0012               	return		;funcret
  7681   00332A                     __end_of_color_read_Green:
  7682                           	callstack 0
  7683                           
  7684 ;; *************** function _color_read_Clear *****************
  7685 ;; Defined at:
  7686 ;;		line 94 in file "color.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;		None
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  tmp             2    9[COMRAM] unsigned int 
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  2    4[COMRAM] unsigned int 
  7693 ;; Registers used:
  7694 ;;		wreg, status,2, status,0, cstack
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7702 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7703 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7704 ;;Total ram usage:        7 bytes
  7705 ;; Hardware stack levels used: 1
  7706 ;; Hardware stack levels required when called: 3
  7707 ;; This function calls:
  7708 ;;		_I2C_2_Master_Read
  7709 ;;		_I2C_2_Master_RepStart
  7710 ;;		_I2C_2_Master_Start
  7711 ;;		_I2C_2_Master_Stop
  7712 ;;		_I2C_2_Master_Write
  7713 ;; This function is called by:
  7714 ;;		_getRGBCval
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text39
  7719   00332A                     __ptext39:
  7720                           	callstack 0
  7721   00332A                     _color_read_Clear:
  7722                           	callstack 24
  7723   00332A                     
  7724                           ;color.c: 96:     unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  7725   00332A  ECAB  F01B         	call	_I2C_2_Master_Start	;wreg free
  7726                           
  7727                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  7728   00332E  0E52               	movlw	82
  7729   003330  EC8F  F01B         	call	_I2C_2_Master_Write
  7730                           
  7731                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x14);
  7732   003334  0EB4               	movlw	180
  7733   003336  EC8F  F01B         	call	_I2C_2_Master_Write
  7734                           
  7735                           ;color.c: 100:  I2C_2_Master_RepStart();
  7736   00333A  ECA1  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7737                           
  7738                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  7739   00333E  0E53               	movlw	83
  7740   003340  EC8F  F01B         	call	_I2C_2_Master_Write
  7741                           
  7742                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  7743   003344  0E01               	movlw	1
  7744   003346  EC74  F01A         	call	_I2C_2_Master_Read
  7745   00334A  6E07               	movwf	??_color_read_Clear^0,c
  7746   00334C  5007               	movf	??_color_read_Clear^0,w,c
  7747   00334E  6E0A               	movwf	color_read_Clear@tmp^0,c
  7748   003350  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7749                           
  7750                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7751   003352  0E00               	movlw	0
  7752   003354  EC74  F01A         	call	_I2C_2_Master_Read
  7753   003358  6E07               	movwf	??_color_read_Clear^0,c
  7754   00335A  5007               	movf	??_color_read_Clear^0,w,c
  7755   00335C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7756   00335E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7757   003360  500A               	movf	color_read_Clear@tmp^0,w,c
  7758   003362  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7759   003364  6E0A               	movwf	color_read_Clear@tmp^0,c
  7760   003366  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7761   003368  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7762   00336A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7763                           
  7764                           ;color.c: 104:  I2C_2_Master_Stop();
  7765   00336C  ECA6  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7766   003370                     
  7767                           ;color.c: 105:  return tmp;
  7768   003370  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7769   003374  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7770   003378  0012               	return		;funcret
  7771   00337A                     __end_of_color_read_Clear:
  7772                           	callstack 0
  7773                           
  7774 ;; *************** function _color_read_Blue *****************
  7775 ;; Defined at:
  7776 ;;		line 76 in file "color.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;		None
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  tmp             2    9[COMRAM] unsigned int 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  2    4[COMRAM] unsigned int 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7794 ;;Total ram usage:        7 bytes
  7795 ;; Hardware stack levels used: 1
  7796 ;; Hardware stack levels required when called: 3
  7797 ;; This function calls:
  7798 ;;		_I2C_2_Master_Read
  7799 ;;		_I2C_2_Master_RepStart
  7800 ;;		_I2C_2_Master_Start
  7801 ;;		_I2C_2_Master_Stop
  7802 ;;		_I2C_2_Master_Write
  7803 ;; This function is called by:
  7804 ;;		_getRGBCval
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text40
  7809   00337A                     __ptext40:
  7810                           	callstack 0
  7811   00337A                     _color_read_Blue:
  7812                           	callstack 24
  7813   00337A                     
  7814                           ;color.c: 78:     unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7815   00337A  ECAB  F01B         	call	_I2C_2_Master_Start	;wreg free
  7816                           
  7817                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7818   00337E  0E52               	movlw	82
  7819   003380  EC8F  F01B         	call	_I2C_2_Master_Write
  7820                           
  7821                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x1A);
  7822   003384  0EBA               	movlw	186
  7823   003386  EC8F  F01B         	call	_I2C_2_Master_Write
  7824                           
  7825                           ;color.c: 82:  I2C_2_Master_RepStart();
  7826   00338A  ECA1  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7827                           
  7828                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7829   00338E  0E53               	movlw	83
  7830   003390  EC8F  F01B         	call	_I2C_2_Master_Write
  7831                           
  7832                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7833   003394  0E01               	movlw	1
  7834   003396  EC74  F01A         	call	_I2C_2_Master_Read
  7835   00339A  6E07               	movwf	??_color_read_Blue^0,c
  7836   00339C  5007               	movf	??_color_read_Blue^0,w,c
  7837   00339E  6E0A               	movwf	color_read_Blue@tmp^0,c
  7838   0033A0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7839                           
  7840                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7841   0033A2  0E00               	movlw	0
  7842   0033A4  EC74  F01A         	call	_I2C_2_Master_Read
  7843   0033A8  6E07               	movwf	??_color_read_Blue^0,c
  7844   0033AA  5007               	movf	??_color_read_Blue^0,w,c
  7845   0033AC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7846   0033AE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7847   0033B0  500A               	movf	color_read_Blue@tmp^0,w,c
  7848   0033B2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7849   0033B4  6E0A               	movwf	color_read_Blue@tmp^0,c
  7850   0033B6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7851   0033B8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7852   0033BA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7853                           
  7854                           ;color.c: 86:  I2C_2_Master_Stop();
  7855   0033BC  ECA6  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7856   0033C0                     
  7857                           ;color.c: 87:  return tmp;
  7858   0033C0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7859   0033C4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7860   0033C8  0012               	return		;funcret
  7861   0033CA                     __end_of_color_read_Blue:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _I2C_2_Master_RepStart *****************
  7865 ;; Defined at:
  7866 ;;		line 33 in file "i2c.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;		None
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;Total ram usage:        0 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 2
  7887 ;; This function calls:
  7888 ;;		_I2C_2_Master_Idle
  7889 ;; This function is called by:
  7890 ;;		_color_read_Red
  7891 ;;		_color_read_Green
  7892 ;;		_color_read_Blue
  7893 ;;		_color_read_Clear
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text41
  7898   003742                     __ptext41:
  7899                           	callstack 0
  7900   003742                     _I2C_2_Master_RepStart:
  7901                           	callstack 24
  7902   003742                     
  7903                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7904   003742  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7905   003746                     
  7906                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7907   003746  010E               	movlb	14	; () banked
  7908   003748  83DA               	bsf	218,1,b	;volatile
  7909   00374A                     
  7910                           ; BSR set to: 14
  7911   00374A  0012               	return		;funcret
  7912   00374C                     __end_of_I2C_2_Master_RepStart:
  7913                           	callstack 0
  7914                           
  7915 ;; *************** function _I2C_2_Master_Read *****************
  7916 ;; Defined at:
  7917 ;;		line 51 in file "i2c.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  ack             1    wreg     unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  ack             1    2[COMRAM] unsigned char 
  7922 ;;  tmp             1    3[COMRAM] unsigned char 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      unsigned char 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;Total ram usage:        3 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; Hardware stack levels required when called: 2
  7939 ;; This function calls:
  7940 ;;		_I2C_2_Master_Idle
  7941 ;; This function is called by:
  7942 ;;		_color_read_Red
  7943 ;;		_color_read_Green
  7944 ;;		_color_read_Blue
  7945 ;;		_color_read_Clear
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text42
  7950   0034E8                     __ptext42:
  7951                           	callstack 0
  7952   0034E8                     _I2C_2_Master_Read:
  7953                           	callstack 24
  7954                           
  7955                           ; BSR set to: 14
  7956                           ;incstack = 0
  7957                           ;I2C_2_Master_Read@ack stored from wreg
  7958   0034E8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7959   0034EA                     
  7960                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7961   0034EA  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7962   0034EE                     
  7963                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7964   0034EE  010E               	movlb	14	; () banked
  7965   0034F0  87DA               	bsf	218,3,b	;volatile
  7966                           
  7967                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7968   0034F2  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7969   0034F6                     
  7970                           ;i2c.c: 57:   tmp = SSP2BUF;
  7971   0034F6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7972                           
  7973                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7974   0034FA  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7975   0034FE                     
  7976                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7977   0034FE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7978   003500  B4D8               	btfsc	status,2,c
  7979   003502  EF85  F01A         	goto	u2211
  7980   003506  EF89  F01A         	goto	u2210
  7981   00350A                     u2211:
  7982   00350A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7983   00350C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7984   00350E  EF8A  F01A         	goto	u2228
  7985   003512                     u2210:
  7986   003512  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7987   003514                     u2228:
  7988   003514  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7989   003516  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7990   003518  010E               	movlb	14	; () banked
  7991   00351A  51DA               	movf	218,w,b	;volatile
  7992   00351C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7993   00351E  0BDF               	andlw	-33
  7994   003520  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7995   003522  6FDA               	movwf	218,b	;volatile
  7996   003524                     
  7997                           ; BSR set to: 14
  7998                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7999   003524  89DA               	bsf	218,4,b	;volatile
  8000   003526                     
  8001                           ; BSR set to: 14
  8002                           ;i2c.c: 61:   return tmp;
  8003   003526  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8004   003528                     
  8005                           ; BSR set to: 14
  8006   003528  0012               	return		;funcret
  8007   00352A                     __end_of_I2C_2_Master_Read:
  8008                           	callstack 0
  8009                           
  8010 ;; *************** function ___lldiv *****************
  8011 ;; Defined at:
  8012 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  dividend        4    0[COMRAM] unsigned long 
  8015 ;;  divisor         4    4[COMRAM] unsigned long 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  quotient        4    8[COMRAM] unsigned long 
  8018 ;;  counter         1   12[COMRAM] unsigned char 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  4    0[COMRAM] unsigned long 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8028 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;Total ram usage:       13 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_average_RGBC
  8039 ;;		_convert_HSV
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text43
  8044   002CAC                     __ptext43:
  8045                           	callstack 0
  8046   002CAC                     ___lldiv:
  8047                           	callstack 27
  8048   002CAC  0E00               	movlw	0
  8049   002CAE  6E09               	movwf	___lldiv@quotient^0,c
  8050   002CB0  0E00               	movlw	0
  8051   002CB2  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8052   002CB4  0E00               	movlw	0
  8053   002CB6  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8054   002CB8  0E00               	movlw	0
  8055   002CBA  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8056   002CBC  5005               	movf	___lldiv@divisor^0,w,c
  8057   002CBE  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8058   002CC0  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8059   002CC2  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8060   002CC4  B4D8               	btfsc	status,2,c
  8061   002CC6  EF67  F016         	goto	u2621
  8062   002CCA  EF69  F016         	goto	u2620
  8063   002CCE                     u2621:
  8064   002CCE  EF9F  F016         	goto	l776
  8065   002CD2                     u2620:
  8066   002CD2  0E01               	movlw	1
  8067   002CD4  6E0D               	movwf	___lldiv@counter^0,c
  8068   002CD6  EF73  F016         	goto	l3472
  8069   002CDA                     l3470:
  8070   002CDA  90D8               	bcf	status,0,c
  8071   002CDC  3605               	rlcf	___lldiv@divisor^0,f,c
  8072   002CDE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8073   002CE0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8074   002CE2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8075   002CE4  2A0D               	incf	___lldiv@counter^0,f,c
  8076   002CE6                     l3472:
  8077   002CE6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8078   002CE8  EF78  F016         	goto	u2631
  8079   002CEC  EF7A  F016         	goto	u2630
  8080   002CF0                     u2631:
  8081   002CF0  EF6D  F016         	goto	l3470
  8082   002CF4                     u2630:
  8083   002CF4                     l3474:
  8084   002CF4  90D8               	bcf	status,0,c
  8085   002CF6  3609               	rlcf	___lldiv@quotient^0,f,c
  8086   002CF8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8087   002CFA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8088   002CFC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8089   002CFE  5005               	movf	___lldiv@divisor^0,w,c
  8090   002D00  5C01               	subwf	___lldiv@dividend^0,w,c
  8091   002D02  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8092   002D04  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8093   002D06  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8094   002D08  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8095   002D0A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8096   002D0C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8097   002D0E  A0D8               	btfss	status,0,c
  8098   002D10  EF8C  F016         	goto	u2641
  8099   002D14  EF8E  F016         	goto	u2640
  8100   002D18                     u2641:
  8101   002D18  EF97  F016         	goto	l3482
  8102   002D1C                     u2640:
  8103   002D1C  5005               	movf	___lldiv@divisor^0,w,c
  8104   002D1E  5E01               	subwf	___lldiv@dividend^0,f,c
  8105   002D20  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8106   002D22  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8107   002D24  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8108   002D26  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8109   002D28  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8110   002D2A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8111   002D2C  8009               	bsf	___lldiv@quotient^0,0,c
  8112   002D2E                     l3482:
  8113   002D2E  90D8               	bcf	status,0,c
  8114   002D30  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8115   002D32  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8116   002D34  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8117   002D36  3205               	rrcf	___lldiv@divisor^0,f,c
  8118   002D38  2E0D               	decfsz	___lldiv@counter^0,f,c
  8119   002D3A  EF7A  F016         	goto	l3474
  8120   002D3E                     l776:
  8121   002D3E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8122   002D42  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8123   002D46  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8124   002D4A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8125   002D4E  0012               	return		;funcret
  8126   002D50                     __end_of___lldiv:
  8127                           	callstack 0
  8128                           
  8129 ;; *************** function _color_click_init *****************
  8130 ;; Defined at:
  8131 ;;		line 7 in file "color.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;		None
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;		None
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  1    wreg      void 
  8138 ;; Registers used:
  8139 ;;		wreg, status,2, status,0, cstack
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;Total ram usage:        1 bytes
  8150 ;; Hardware stack levels used: 1
  8151 ;; Hardware stack levels required when called: 4
  8152 ;; This function calls:
  8153 ;;		_I2C_2_Master_Init
  8154 ;;		_color_writetoaddr
  8155 ;; This function is called by:
  8156 ;;		_main
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text44
  8161   003598                     __ptext44:
  8162                           	callstack 0
  8163   003598                     _color_click_init:
  8164                           	callstack 26
  8165   003598                     
  8166                           ;color.c: 10:     I2C_2_Master_Init();
  8167   003598  ECFD  F01A         	call	_I2C_2_Master_Init	;wreg free
  8168   00359C                     
  8169                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  8170   00359C  0E01               	movlw	1
  8171   00359E  6E03               	movwf	color_writetoaddr@value^0,c
  8172   0035A0  0E00               	movlw	0
  8173   0035A2  EC4B  F01B         	call	_color_writetoaddr
  8174   0035A6                     
  8175                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8176   0035A6  0E3F               	movlw	63
  8177   0035A8  6E05               	movwf	??_color_click_init^0,c
  8178   0035AA  0E55               	movlw	85
  8179   0035AC                     u3937:
  8180   0035AC  2EE8               	decfsz	wreg,f,c
  8181   0035AE  D7FE               	bra	u3937
  8182   0035B0  2E05               	decfsz	??_color_click_init^0,f,c
  8183   0035B2  D7FC               	bra	u3937
  8184   0035B4  0000               	nop	
  8185   0035B6                     
  8186                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  8187   0035B6  0E03               	movlw	3
  8188   0035B8  6E03               	movwf	color_writetoaddr@value^0,c
  8189   0035BA  0E00               	movlw	0
  8190   0035BC  EC4B  F01B         	call	_color_writetoaddr
  8191   0035C0                     
  8192                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  8193   0035C0  0ED5               	movlw	213
  8194   0035C2  6E03               	movwf	color_writetoaddr@value^0,c
  8195   0035C4  0E01               	movlw	1
  8196   0035C6  EC4B  F01B         	call	_color_writetoaddr
  8197   0035CA  0012               	return		;funcret
  8198   0035CC                     __end_of_color_click_init:
  8199                           	callstack 0
  8200                           
  8201 ;; *************** function _color_writetoaddr *****************
  8202 ;; Defined at:
  8203 ;;		line 28 in file "color.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  address         1    wreg     unsigned char 
  8206 ;;  value           1    2[COMRAM] unsigned char 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  address         1    3[COMRAM] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8218 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;Total ram usage:        2 bytes
  8223 ;; Hardware stack levels used: 1
  8224 ;; Hardware stack levels required when called: 3
  8225 ;; This function calls:
  8226 ;;		_I2C_2_Master_Start
  8227 ;;		_I2C_2_Master_Stop
  8228 ;;		_I2C_2_Master_Write
  8229 ;; This function is called by:
  8230 ;;		_color_click_init
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text45
  8235   003696                     __ptext45:
  8236                           	callstack 0
  8237   003696                     _color_writetoaddr:
  8238                           	callstack 26
  8239                           
  8240                           ;incstack = 0
  8241                           ;color_writetoaddr@address stored from wreg
  8242   003696  6E04               	movwf	color_writetoaddr@address^0,c
  8243   003698                     
  8244                           ;color.c: 29:     I2C_2_Master_Start();
  8245   003698  ECAB  F01B         	call	_I2C_2_Master_Start	;wreg free
  8246                           
  8247                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  8248   00369C  0E52               	movlw	82
  8249   00369E  EC8F  F01B         	call	_I2C_2_Master_Write
  8250                           
  8251                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  8252   0036A2  5004               	movf	color_writetoaddr@address^0,w,c
  8253   0036A4  0980               	iorlw	128
  8254   0036A6  EC8F  F01B         	call	_I2C_2_Master_Write
  8255                           
  8256                           ;color.c: 32:     I2C_2_Master_Write(value);
  8257   0036AA  5003               	movf	color_writetoaddr@value^0,w,c
  8258   0036AC  EC8F  F01B         	call	_I2C_2_Master_Write
  8259                           
  8260                           ;color.c: 33:     I2C_2_Master_Stop();
  8261   0036B0  ECA6  F01B         	call	_I2C_2_Master_Stop	;wreg free
  8262   0036B4  0012               	return		;funcret
  8263   0036B6                     __end_of_color_writetoaddr:
  8264                           	callstack 0
  8265                           
  8266 ;; *************** function _I2C_2_Master_Write *****************
  8267 ;; Defined at:
  8268 ;;		line 45 in file "i2c.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  data_byte       1    wreg     unsigned char 
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;  data_byte       1    1[COMRAM] unsigned char 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;Total ram usage:        1 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 2
  8289 ;; This function calls:
  8290 ;;		_I2C_2_Master_Idle
  8291 ;; This function is called by:
  8292 ;;		_color_writetoaddr
  8293 ;;		_color_read_Red
  8294 ;;		_color_read_Green
  8295 ;;		_color_read_Blue
  8296 ;;		_color_read_Clear
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text46
  8301   00371E                     __ptext46:
  8302                           	callstack 0
  8303   00371E                     _I2C_2_Master_Write:
  8304                           	callstack 24
  8305                           
  8306                           ;incstack = 0
  8307                           ;I2C_2_Master_Write@data_byte stored from wreg
  8308   00371E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8309   003720                     
  8310                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8311   003720  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8312   003724                     
  8313                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8314   003724  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8315   003728  0012               	return		;funcret
  8316   00372A                     __end_of_I2C_2_Master_Write:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _I2C_2_Master_Stop *****************
  8320 ;; Defined at:
  8321 ;;		line 39 in file "i2c.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 2
  8342 ;; This function calls:
  8343 ;;		_I2C_2_Master_Idle
  8344 ;; This function is called by:
  8345 ;;		_color_writetoaddr
  8346 ;;		_color_read_Red
  8347 ;;		_color_read_Green
  8348 ;;		_color_read_Blue
  8349 ;;		_color_read_Clear
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text47
  8354   00374C                     __ptext47:
  8355                           	callstack 0
  8356   00374C                     _I2C_2_Master_Stop:
  8357                           	callstack 24
  8358   00374C                     
  8359                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8360   00374C  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8361   003750                     
  8362                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8363   003750  010E               	movlb	14	; () banked
  8364   003752  85DA               	bsf	218,2,b	;volatile
  8365   003754                     
  8366                           ; BSR set to: 14
  8367   003754  0012               	return		;funcret
  8368   003756                     __end_of_I2C_2_Master_Stop:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function _I2C_2_Master_Start *****************
  8372 ;; Defined at:
  8373 ;;		line 27 in file "i2c.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 2
  8394 ;; This function calls:
  8395 ;;		_I2C_2_Master_Idle
  8396 ;; This function is called by:
  8397 ;;		_color_writetoaddr
  8398 ;;		_color_read_Red
  8399 ;;		_color_read_Green
  8400 ;;		_color_read_Blue
  8401 ;;		_color_read_Clear
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text48
  8406   003756                     __ptext48:
  8407                           	callstack 0
  8408   003756                     _I2C_2_Master_Start:
  8409                           	callstack 24
  8410   003756                     
  8411                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8412   003756  EC12  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8413   00375A                     
  8414                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8415   00375A  010E               	movlb	14	; () banked
  8416   00375C  81DA               	bsf	218,0,b	;volatile
  8417   00375E                     
  8418                           ; BSR set to: 14
  8419   00375E  0012               	return		;funcret
  8420   003760                     __end_of_I2C_2_Master_Start:
  8421                           	callstack 0
  8422                           
  8423 ;; *************** function _I2C_2_Master_Idle *****************
  8424 ;; Defined at:
  8425 ;;		line 22 in file "i2c.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;		None
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;		None
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, status,2, status,0
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;Total ram usage:        1 bytes
  8444 ;; Hardware stack levels used: 1
  8445 ;; Hardware stack levels required when called: 1
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_I2C_2_Master_Start
  8450 ;;		_I2C_2_Master_RepStart
  8451 ;;		_I2C_2_Master_Stop
  8452 ;;		_I2C_2_Master_Write
  8453 ;;		_I2C_2_Master_Read
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text49
  8458   003624                     __ptext49:
  8459                           	callstack 0
  8460   003624                     _I2C_2_Master_Idle:
  8461                           	callstack 24
  8462   003624                     l308:
  8463   003624  010E               	movlb	14	; () banked
  8464   003626  B5D8               	btfsc	216,2,b	;volatile
  8465   003628  EF18  F01B         	goto	u1961
  8466   00362C  EF1A  F01B         	goto	u1960
  8467   003630                     u1961:
  8468   003630  EF12  F01B         	goto	l308
  8469   003634                     u1960:
  8470   003634                     
  8471                           ; BSR set to: 14
  8472   003634  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8473   003638  0E1F               	movlw	31
  8474   00363A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8475   00363C  A4D8               	btfss	status,2,c
  8476   00363E  EF23  F01B         	goto	u1971
  8477   003642  EF25  F01B         	goto	u1970
  8478   003646                     u1971:
  8479   003646  EF12  F01B         	goto	l308
  8480   00364A                     u1970:
  8481   00364A                     
  8482                           ; BSR set to: 14
  8483   00364A  0012               	return		;funcret
  8484   00364C                     __end_of_I2C_2_Master_Idle:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _I2C_2_Master_Init *****************
  8488 ;; Defined at:
  8489 ;;		line 4 in file "i2c.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; Hardware stack levels required when called: 1
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_color_click_init
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text50
  8518   0035FA                     __ptext50:
  8519                           	callstack 0
  8520   0035FA                     _I2C_2_Master_Init:
  8521                           	callstack 28
  8522   0035FA                     
  8523                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8524   0035FA  010E               	movlb	14	; () banked
  8525   0035FC  51D9               	movf	217,w,b	;volatile
  8526   0035FE  0BF0               	andlw	-16
  8527   003600  0908               	iorlw	8
  8528   003602  6FD9               	movwf	217,b	;volatile
  8529   003604                     
  8530                           ; BSR set to: 14
  8531                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8532   003604  8BD9               	bsf	217,5,b	;volatile
  8533                           
  8534                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8535   003606  0E9F               	movlw	159
  8536   003608  6FD6               	movwf	214,b	;volatile
  8537   00360A                     
  8538                           ; BSR set to: 14
  8539                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8540   00360A  8A84               	bsf	132,5,c	;volatile
  8541   00360C                     
  8542                           ; BSR set to: 14
  8543                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8544   00360C  8C84               	bsf	132,6,c	;volatile
  8545   00360E                     
  8546                           ; BSR set to: 14
  8547                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8548   00360E  9BA7               	bcf	167,5,b	;volatile
  8549   003610                     
  8550                           ; BSR set to: 14
  8551                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8552   003610  9DA7               	bcf	167,6,b	;volatile
  8553                           
  8554                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8555   003612  0E1D               	movlw	29
  8556   003614  6F1D               	movwf	29,b	;volatile
  8557                           
  8558                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8559   003616  0E1E               	movlw	30
  8560   003618  6F1C               	movwf	28,b	;volatile
  8561                           
  8562                           ;i2c.c: 18:   RD5PPS=0x1C;
  8563   00361A  0E1C               	movlw	28
  8564   00361C  6F6F               	movwf	111,b	;volatile
  8565                           
  8566                           ;i2c.c: 19:   RD6PPS=0x1B;
  8567   00361E  0E1B               	movlw	27
  8568   003620  6F70               	movwf	112,b	;volatile
  8569   003622                     
  8570                           ; BSR set to: 14
  8571   003622  0012               	return		;funcret
  8572   003624                     __end_of_I2C_2_Master_Init:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function _buggy_lights_init *****************
  8576 ;; Defined at:
  8577 ;;		line 7 in file "buggy_lights.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		None
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used: 1
  8597 ;; Hardware stack levels required when called: 1
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_main
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text51
  8606   0035CC                     __ptext51:
  8607                           	callstack 0
  8608   0035CC                     _buggy_lights_init:
  8609                           	callstack 29
  8610   0035CC                     
  8611                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  8612   0035CC  9884               	bcf	132,4,c	;volatile
  8613                           
  8614                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  8615   0035CE  9288               	bcf	136,1,c	;volatile
  8616                           
  8617                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  8618   0035D0  9684               	bcf	132,3,c	;volatile
  8619                           
  8620                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  8621   0035D2  9086               	bcf	134,0,c	;volatile
  8622                           
  8623                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  8624   0035D4  9088               	bcf	136,0,c	;volatile
  8625                           
  8626                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  8627   0035D6  987C               	bcf	124,4,c	;volatile
  8628                           
  8629                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  8630   0035D8  9280               	bcf	128,1,c	;volatile
  8631                           
  8632                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  8633   0035DA  967C               	bcf	124,3,c	;volatile
  8634                           
  8635                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  8636   0035DC  907E               	bcf	126,0,c	;volatile
  8637                           
  8638                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  8639   0035DE  9080               	bcf	128,0,c	;volatile
  8640                           
  8641                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  8642   0035E0  9287               	bcf	135,1,c	;volatile
  8643                           
  8644                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  8645   0035E2  9881               	bcf	129,4,c	;volatile
  8646                           
  8647                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  8648   0035E4  9E86               	bcf	134,7,c	;volatile
  8649                           
  8650                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  8651   0035E6  927F               	bcf	127,1,c	;volatile
  8652                           
  8653                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  8654   0035E8  9879               	bcf	121,4,c	;volatile
  8655                           
  8656                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  8657   0035EA  9E7E               	bcf	126,7,c	;volatile
  8658                           
  8659                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  8660   0035EC  9087               	bcf	135,0,c	;volatile
  8661                           
  8662                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  8663   0035EE  9E85               	bcf	133,7,c	;volatile
  8664                           
  8665                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  8666   0035F0  9681               	bcf	129,3,c	;volatile
  8667                           
  8668                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  8669   0035F2  907F               	bcf	127,0,c	;volatile
  8670                           
  8671                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  8672   0035F4  9E7D               	bcf	125,7,c	;volatile
  8673                           
  8674                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  8675   0035F6  9679               	bcf	121,3,c	;volatile
  8676   0035F8  0012               	return		;funcret
  8677   0035FA                     __end_of_buggy_lights_init:
  8678                           	callstack 0
  8679                           
  8680 ;; *************** function _Timer0_init *****************
  8681 ;; Defined at:
  8682 ;;		line 7 in file "timers.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;Total ram usage:        0 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 3
  8703 ;; This function calls:
  8704 ;;		_reset_timer
  8705 ;; This function is called by:
  8706 ;;		_main
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text52
  8711   003672                     __ptext52:
  8712                           	callstack 0
  8713   003672                     _Timer0_init:
  8714                           	callstack 27
  8715   003672                     
  8716                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8717   003672  50D6               	movf	214,w,c	;volatile
  8718   003674  0B1F               	andlw	-225
  8719   003676  0940               	iorlw	64
  8720   003678  6ED6               	movwf	214,c	;volatile
  8721   00367A                     
  8722                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8723   00367A  88D6               	bsf	214,4,c	;volatile
  8724   00367C                     
  8725                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  8726   00367C  88D5               	bsf	213,4,c	;volatile
  8727                           
  8728                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  8729   00367E  50D6               	movf	214,w,c	;volatile
  8730   003680  0BF0               	andlw	-16
  8731   003682  090E               	iorlw	14
  8732   003684  6ED6               	movwf	214,c	;volatile
  8733   003686                     
  8734                           ;timers.c: 18:     reset_timer();
  8735   003686  EC95  F01B         	call	_reset_timer	;wreg free
  8736   00368A                     
  8737                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  8738   00368A  8ED5               	bsf	213,7,c	;volatile
  8739   00368C                     
  8740                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  8741   00368C  010E               	movlb	14	; () banked
  8742   00368E  8B29               	bsf	41,5,b	;volatile
  8743   003690                     
  8744                           ; BSR set to: 14
  8745                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  8746   003690  8CF2               	bsf	242,6,c	;volatile
  8747   003692                     
  8748                           ; BSR set to: 14
  8749                           ;timers.c: 23:     INTCONbits.GIE = 1;
  8750   003692  8EF2               	bsf	242,7,c	;volatile
  8751   003694                     
  8752                           ; BSR set to: 14
  8753   003694  0012               	return		;funcret
  8754   003696                     __end_of_Timer0_init:
  8755                           	callstack 0
  8756                           
  8757 ;; *************** function _reset_timer *****************
  8758 ;; Defined at:
  8759 ;;		line 53 in file "timers.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, cstack
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;Total ram usage:        0 bytes
  8778 ;; Hardware stack levels used: 1
  8779 ;; Hardware stack levels required when called: 2
  8780 ;; This function calls:
  8781 ;;		_write_timer
  8782 ;; This function is called by:
  8783 ;;		_Timer0_init
  8784 ;;		_forward_navigation
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text53
  8789   00372A                     __ptext53:
  8790                           	callstack 0
  8791   00372A                     _reset_timer:
  8792                           	callstack 27
  8793   00372A                     
  8794                           ;timers.c: 55:     write_timer(0, 0);
  8795   00372A  0E00               	movlw	0
  8796   00372C  6E01               	movwf	write_timer@tL^0,c
  8797   00372E  0E00               	movlw	0
  8798   003730  EC9B  F01B         	call	_write_timer
  8799   003734  0012               	return		;funcret
  8800   003736                     __end_of_reset_timer:
  8801                           	callstack 0
  8802                           
  8803 ;; *************** function _write_timer *****************
  8804 ;; Defined at:
  8805 ;;		line 41 in file "timers.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  tH              1    wreg     unsigned char 
  8808 ;;  tL              1    0[COMRAM] unsigned char 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;  tH              1    1[COMRAM] unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8820 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:        2 bytes
  8825 ;; Hardware stack levels used: 1
  8826 ;; Hardware stack levels required when called: 1
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_reset_timer
  8831 ;;		_return_to_sender
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text54
  8836   003736                     __ptext54:
  8837                           	callstack 0
  8838   003736                     _write_timer:
  8839                           	callstack 27
  8840                           
  8841                           ;incstack = 0
  8842                           ;write_timer@tH stored from wreg
  8843   003736  6E02               	movwf	write_timer@tH^0,c
  8844   003738                     
  8845                           ;timers.c: 41: void write_timer(unsigned char tH, unsigned char tL);timers.c: 42: {;time
      +                          rs.c: 46:     TMR0H = tH;
  8846   003738  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  8847   00373C                     
  8848                           ;timers.c: 47:     TMR0L = tL;
  8849   00373C  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  8850   003740  0012               	return		;funcret
  8851   003742                     __end_of_write_timer:
  8852                           	callstack 0
  8853                           
  8854 ;; *************** function _ISR *****************
  8855 ;; Defined at:
  8856 ;;		line 186 in file "timers.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;		None
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;		None
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  1    wreg      void 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;Total ram usage:        0 bytes
  8875 ;; Hardware stack levels used: 1
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		Interrupt level 2
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	intcode
  8884   000008                     __pintcode:
  8885                           	callstack 0
  8886   000008                     _ISR:
  8887                           	callstack 23
  8888                           
  8889                           ;incstack = 0
  8890   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8891   00000A                     
  8892                           ;timers.c: 188:     if (PIR0bits.TMR0IF) {
  8893   00000A  010E               	movlb	14	; () banked
  8894   00000C  AB33               	btfss	51,5,b	;volatile
  8895   00000E  EF0B  F000         	goto	i2u380_41
  8896   000012  EF0D  F000         	goto	i2u380_40
  8897   000016                     i2u380_41:
  8898   000016  EF1F  F000         	goto	i2l719
  8899   00001A                     i2u380_40:
  8900   00001A                     
  8901                           ; BSR set to: 14
  8902                           ;timers.c: 189:         if (returning) {
  8903   00001A  505E               	movf	_returning^0,w,c
  8904   00001C  B4D8               	btfsc	status,2,c
  8905   00001E  EF13  F000         	goto	i2u381_41
  8906   000022  EF15  F000         	goto	i2u381_40
  8907   000026                     i2u381_41:
  8908   000026  EF1A  F000         	goto	i2l4384
  8909   00002A                     i2u381_40:
  8910   00002A                     
  8911                           ; BSR set to: 14
  8912                           ;timers.c: 190:             return_flag = 1;
  8913   00002A  0E01               	movlw	1
  8914   00002C  0100               	movlb	0	; () banked
  8915   00002E  6F87               	movwf	_return_flag& (0+255),b
  8916                           
  8917                           ;timers.c: 191:         } else {
  8918   000030  EF1D  F000         	goto	i2l4386
  8919   000034                     i2l4384:
  8920                           
  8921                           ; BSR set to: 14
  8922                           ;timers.c: 192:             lost_flag = 1;
  8923   000034  0E01               	movlw	1
  8924   000036  0101               	movlb	1	; () banked
  8925   000038  6FA5               	movwf	_lost_flag& (0+255),b
  8926   00003A                     i2l4386:
  8927                           
  8928                           ;timers.c: 194:         PIR0bits.TMR0IF = 0;
  8929   00003A  010E               	movlb	14	; () banked
  8930   00003C  9B33               	bcf	51,5,b	;volatile
  8931   00003E                     i2l719:
  8932                           
  8933                           ; BSR set to: 14
  8934   00003E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8935   000040  0011               	retfie		f
  8936   000042                     __end_of_ISR:
  8937                           	callstack 0
  8938                           
  8939                           	psect	rparam
  8940   000000                     
  8941                           	psect	temp
  8942   00005F                     btemp:
  8943                           	callstack 0
  8944   00005F                     	ds	1
  8945   000000                     int$flags	set	btemp
  8946   000000                     wtemp8	set	btemp+1
  8947   000000                     ttemp5	set	btemp+1
  8948   000000                     ttemp6	set	btemp+4
  8949   000000                     ttemp7	set	btemp+8
  8950                           
  8951                           	psect	idloc
  8952                           
  8953                           ;Config register IDLOC0 @ 0x200000
  8954                           ;	unspecified, using default values
  8955   200000                     	org	2097152
  8956   200000  FFFF               	dw	65535
  8957                           
  8958                           ;Config register IDLOC1 @ 0x200002
  8959                           ;	unspecified, using default values
  8960   200002                     	org	2097154
  8961   200002  FFFF               	dw	65535
  8962                           
  8963                           ;Config register IDLOC2 @ 0x200004
  8964                           ;	unspecified, using default values
  8965   200004                     	org	2097156
  8966   200004  FFFF               	dw	65535
  8967                           
  8968                           ;Config register IDLOC3 @ 0x200006
  8969                           ;	unspecified, using default values
  8970   200006                     	org	2097158
  8971   200006  FFFF               	dw	65535
  8972                           
  8973                           ;Config register IDLOC4 @ 0x200008
  8974                           ;	unspecified, using default values
  8975   200008                     	org	2097160
  8976   200008  FFFF               	dw	65535
  8977                           
  8978                           ;Config register IDLOC5 @ 0x20000A
  8979                           ;	unspecified, using default values
  8980   20000A                     	org	2097162
  8981   20000A  FFFF               	dw	65535
  8982                           
  8983                           ;Config register IDLOC6 @ 0x20000C
  8984                           ;	unspecified, using default values
  8985   20000C                     	org	2097164
  8986   20000C  FFFF               	dw	65535
  8987                           
  8988                           ;Config register IDLOC7 @ 0x20000E
  8989                           ;	unspecified, using default values
  8990   20000E                     	org	2097166
  8991   20000E  FFFF               	dw	65535
  8992                           
  8993                           	psect	config
  8994                           
  8995                           ;Config register CONFIG1L @ 0x300000
  8996                           ;	External Oscillator mode Selection bits
  8997                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8998                           ;	Power-up default value for COSC bits
  8999                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9000   300000                     	org	3145728
  9001   300000  AA                 	db	170
  9002                           
  9003                           ;Config register CONFIG1H @ 0x300001
  9004                           ;	unspecified, using default values
  9005                           ;	Clock Out Enable bit
  9006                           ;	CLKOUTEN = 0x1, unprogrammed default
  9007                           ;	Clock Switch Enable bit
  9008                           ;	CSWEN = 0x1, unprogrammed default
  9009                           ;	Fail-Safe Clock Monitor Enable bit
  9010                           ;	FCMEN = 0x1, unprogrammed default
  9011   300001                     	org	3145729
  9012   300001  FF                 	db	255
  9013                           
  9014                           ;Config register CONFIG2L @ 0x300002
  9015                           ;	unspecified, using default values
  9016                           ;	Master Clear Enable bit
  9017                           ;	MCLRE = 0x1, unprogrammed default
  9018                           ;	Power-up Timer Enable bit
  9019                           ;	PWRTE = 0x1, unprogrammed default
  9020                           ;	Low-power BOR enable bit
  9021                           ;	LPBOREN = 0x1, unprogrammed default
  9022                           ;	Brown-out Reset Enable bits
  9023                           ;	BOREN = 0x3, unprogrammed default
  9024   300002                     	org	3145730
  9025   300002  FF                 	db	255
  9026                           
  9027                           ;Config register CONFIG2H @ 0x300003
  9028                           ;	unspecified, using default values
  9029                           ;	Brown Out Reset Voltage selection bits
  9030                           ;	BORV = 0x3, unprogrammed default
  9031                           ;	ZCD Disable bit
  9032                           ;	ZCD = 0x1, unprogrammed default
  9033                           ;	PPSLOCK bit One-Way Set Enable bit
  9034                           ;	PPS1WAY = 0x1, unprogrammed default
  9035                           ;	Stack Full/Underflow Reset Enable bit
  9036                           ;	STVREN = 0x1, unprogrammed default
  9037                           ;	Debugger Enable bit
  9038                           ;	DEBUG = 0x1, unprogrammed default
  9039                           ;	Extended Instruction Set Enable bit
  9040                           ;	XINST = 0x1, unprogrammed default
  9041   300003                     	org	3145731
  9042   300003  FF                 	db	255
  9043                           
  9044                           ;Config register CONFIG3L @ 0x300004
  9045                           ;	WDT Period Select bits
  9046                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9047                           ;	WDT operating mode
  9048                           ;	WDTE = OFF, WDT Disabled
  9049   300004                     	org	3145732
  9050   300004  9F                 	db	159
  9051                           
  9052                           ;Config register CONFIG3H @ 0x300005
  9053                           ;	unspecified, using default values
  9054                           ;	WDT Window Select bits
  9055                           ;	WDTCWS = 0x7, unprogrammed default
  9056                           ;	WDT input clock selector
  9057                           ;	WDTCCS = 0x7, unprogrammed default
  9058   300005                     	org	3145733
  9059   300005  FF                 	db	255
  9060                           
  9061                           ;Config register CONFIG4L @ 0x300006
  9062                           ;	unspecified, using default values
  9063                           ;	Write Protection Block 0
  9064                           ;	WRT0 = 0x1, unprogrammed default
  9065                           ;	Write Protection Block 1
  9066                           ;	WRT1 = 0x1, unprogrammed default
  9067                           ;	Write Protection Block 2
  9068                           ;	WRT2 = 0x1, unprogrammed default
  9069                           ;	Write Protection Block 3
  9070                           ;	WRT3 = 0x1, unprogrammed default
  9071                           ;	Write Protection Block 3
  9072                           ;	WRT4 = 0x1, unprogrammed default
  9073                           ;	Write Protection Block 3
  9074                           ;	WRT5 = 0x1, unprogrammed default
  9075                           ;	Write Protection Block 3
  9076                           ;	WRT6 = 0x1, unprogrammed default
  9077                           ;	Write Protection Block 3
  9078                           ;	WRT7 = 0x1, unprogrammed default
  9079   300006                     	org	3145734
  9080   300006  FF                 	db	255
  9081                           
  9082                           ;Config register CONFIG4H @ 0x300007
  9083                           ;	unspecified, using default values
  9084                           ;	Configuration Register Write Protection bit
  9085                           ;	WRTC = 0x1, unprogrammed default
  9086                           ;	Boot Block Write Protection bit
  9087                           ;	WRTB = 0x1, unprogrammed default
  9088                           ;	Data EEPROM Write Protection bit
  9089                           ;	WRTD = 0x1, unprogrammed default
  9090                           ;	Scanner Enable bit
  9091                           ;	SCANE = 0x1, unprogrammed default
  9092                           ;	Low Voltage Programming Enable bit
  9093                           ;	LVP = 0x1, unprogrammed default
  9094   300007                     	org	3145735
  9095   300007  FF                 	db	255
  9096                           
  9097                           ;Config register CONFIG5L @ 0x300008
  9098                           ;	unspecified, using default values
  9099                           ;	UserNVM Program Memory Code Protection bit
  9100                           ;	CP = 0x1, unprogrammed default
  9101                           ;	DataNVM Memory Code Protection bit
  9102                           ;	CPD = 0x1, unprogrammed default
  9103   300008                     	org	3145736
  9104   300008  FF                 	db	255
  9105                           
  9106                           ;Config register CONFIG5H @ 0x300009
  9107                           ;	unspecified, using default values
  9108   300009                     	org	3145737
  9109   300009  FF                 	db	255
  9110                           
  9111                           ;Config register CONFIG6L @ 0x30000A
  9112                           ;	unspecified, using default values
  9113                           ;	Table Read Protection Block 0
  9114                           ;	EBTR0 = 0x1, unprogrammed default
  9115                           ;	Table Read Protection Block 1
  9116                           ;	EBTR1 = 0x1, unprogrammed default
  9117                           ;	Table Read Protection Block 2
  9118                           ;	EBTR2 = 0x1, unprogrammed default
  9119                           ;	Table Read Protection Block 3
  9120                           ;	EBTR3 = 0x1, unprogrammed default
  9121                           ;	Table Read Protection Block 4
  9122                           ;	EBTR4 = 0x1, unprogrammed default
  9123                           ;	Table Read Protection Block 5
  9124                           ;	EBTR5 = 0x1, unprogrammed default
  9125                           ;	Table Read Protection Block 6
  9126                           ;	EBTR6 = 0x1, unprogrammed default
  9127                           ;	Table Read Protection Block 7
  9128                           ;	EBTR7 = 0x1, unprogrammed default
  9129   30000A                     	org	3145738
  9130   30000A  FF                 	db	255
  9131                           
  9132                           ;Config register CONFIG6H @ 0x30000B
  9133                           ;	unspecified, using default values
  9134                           ;	Boot Block Table Read Protection bit
  9135                           ;	EBTRB = 0x1, unprogrammed default
  9136   30000B                     	org	3145739
  9137   30000B  FF                 	db	255
  9138                           tosu	equ	0xFFF
  9139                           tosh	equ	0xFFE
  9140                           tosl	equ	0xFFD
  9141                           stkptr	equ	0xFFC
  9142                           pclatu	equ	0xFFB
  9143                           pclath	equ	0xFFA
  9144                           pcl	equ	0xFF9
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           indf0	equ	0xFEF
  9152                           postinc0	equ	0xFEE
  9153                           postdec0	equ	0xFED
  9154                           preinc0	equ	0xFEC
  9155                           plusw0	equ	0xFEB
  9156                           fsr0h	equ	0xFEA
  9157                           fsr0l	equ	0xFE9
  9158                           wreg	equ	0xFE8
  9159                           indf1	equ	0xFE7
  9160                           postinc1	equ	0xFE6
  9161                           postdec1	equ	0xFE5
  9162                           preinc1	equ	0xFE4
  9163                           plusw1	equ	0xFE3
  9164                           fsr1h	equ	0xFE2
  9165                           fsr1l	equ	0xFE1
  9166                           bsr	equ	0xFE0
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           postdec2	equ	0xFDD
  9170                           preinc2	equ	0xFDC
  9171                           plusw2	equ	0xFDB
  9172                           fsr2h	equ	0xFDA
  9173                           fsr2l	equ	0xFD9
  9174                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     32      99
    BANK1           256    164     226
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    average_RGBC@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    colour_to_key@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    colour_to_key@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    convert_HSV@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    convert_HSV@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward_navigation@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward_navigation@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward_navigation@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    forward_navigation@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    max_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    min_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    read_timer@tH	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerH(COMRAM[1]), 

    read_timer@tL	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerL(COMRAM[1]), 

    S1143DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2748$buffer	PTR unsigned char  size(2) Largest target is 0

    S2748$source	PTR const unsigned char  size(2) Largest target is 0

    scale_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendArrayCharSerial4@arr	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), trail_timer_high(BANK1[20]), trail_timer_low(BANK1[20]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), main@motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    wait_for_wall@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_forward_navigation
    _forward_navigation->_sendRGBCvalSerial4
    _wait_for_wall->_getRGBCval
    _stop->_setMotorPWM
    _setMotorPWM->___lwdiv
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sendArrayCharSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _abs->___awmod
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _scale_RGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _convert_HSV->___lldiv
    _average_RGBC->___lldiv
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _forward_navigation->_sendArrayCharSerial4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   68102
                                             91 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                       _average_RGBC
                  _buggy_lights_init
                   _color_click_init
                        _convert_HSV
                 _forward_navigation
                    _initDCmotorsPWM
                         _initUSART4
                          _scale_RGB
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward_navigation                                   7     3      4   39534
                                             84 COMRAM     7     3      4
                       _average_RGBC
                      _colour_to_key
                        _convert_HSV
                         _read_timer
                        _reset_timer
                          _scale_RGB
               _sendArrayCharSerial4
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
                               _stop
                      _wait_for_wall
                        _write_trail
 ---------------------------------------------------------------------------------
 (2) _write_trail                                          3     1      2     218
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _wait_for_wall                                        4     2      2     910
                                             12 COMRAM     4     2      2
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (2) _stop                                                 3     1      2    3525
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    1981
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5811
                                             57 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5789
                                             57 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendArrayCharSerial4                               167   165      2    6038
                                             57 COMRAM     3     1      2
                                              0 BANK1    164   164      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5074
                                             31 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4249
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    3897
                                             13 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scale_RGB                                            3     2      1    6039
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _read_timer                                           2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _convert_HSV                                         52    50      2    5869
                                             13 COMRAM    52    50      2
                            ___lldiv
                             ___lmul
                            _max_RGB
                            _min_RGB
 ---------------------------------------------------------------------------------
 (3) _min_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _max_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _colour_to_key                                        5     3      2     932
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _average_RGBC                                        20    19      1    3088
                                             13 COMRAM    20    19      1
                            ___lldiv
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (3) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1834
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _average_RGBC
     ___lldiv
     _getRGBCval
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _convert_HSV
     ___lldiv
     ___lmul
     _max_RGB
     _min_RGB
   _forward_navigation
     _average_RGBC
     _colour_to_key
     _convert_HSV
     _read_timer
     _reset_timer
     _scale_RGB
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _sendArrayCharSerial4
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     _sendHSVvalSerial4
       _sendStringSerial4
       _sprintf
     _sendRGBCvalSerial4
       _sendStringSerial4
       _sprintf
     _stop
       _setMotorPWM
         ___lwdiv
         ___wmul
     _wait_for_wall
       _getRGBCval
     _write_trail
   _initDCmotorsPWM
   _initUSART4
   _scale_RGB
   _sendHSVvalSerial4
   _sendRGBCvalSerial4
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      E2       7       88.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A3      60        0.0%
DATA                 0      0     1A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 11:44:36 2024

                 _turn180Delay 00B2                ??_wait_for_wall 000F                 _color_read_Red 328A  
              _color_read_Blue 337A                _trail_timer_low 01BA         ??_sendArrayCharSerial4 003C  
                           l42 2A7C                             l27 35F8                             l71 32D8  
                           l80 3378                             l65 35CA                             l74 3328  
                           l83 3288                             l68 36B4                             l77 33C8  
                           l96 34E6                             l89 227A                             l99 2F2A  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _trail_timer_high 01CE  
             _color_read_Clear 332A               _color_read_Green 32DA                            l101 2F64  
                          l104 2EAE                            l106 2EE8                            l210 2DDE  
                          l125 14E4                            l109 29B4                            l311 364A  
                          l320 3754                            l136 1946                            l305 3622  
                          l137 1948                            l217 26DC                            l225 2E6C  
                          l314 375E                            l323 3728                            l308 3624  
                          l317 374A                            l326 3528                            l701 28DE  
                          l455 36D2                            l464 36F2                            l473 317E  
                          l481 2FDA                            l467 3706                            l484 31DC  
                          l487 3414                            l760 30A8                            l680 371C  
                          l761 30B8                            l683 3740                            l692 3562  
                          l677 3694                            l749 3670                            l686 3734  
                          l783 2D4E                            l776 2D3E                            l980 2B40  
                          l993 2CAA                            _ISR 0008         ??_toggle_tricolour_LED 0001  
                          _abs 3564                   ___awmod@sign 0006                            wreg 0FE8  
                 ___flmul@aexp 0020                   ___flmul@bexp 0021                   ?_convert_HSV 000E  
                 ___flmul@sign 001B                   ___flmul@temp 0026                   ___flmul@prod 0022  
               min_RGB@min_val 0005                    _squareDelay 00AE                           ?_ISR 0001  
                 ___fltol@exp1 0031                           ?_abs 0007                           l1046 27E2  
                         l3000 2AEE                           l1240 3046                           l3010 2B1A  
                         l3002 2AF4                           l1250 3114                           l1411 236A  
                         l1404 22D2                           l3004 2B0A                           l3012 2B20  
                         l3020 2BFC                           l3100 2B6C                           l3014 2B30  
                         l3006 2B12                           l3030 2C28                           l3022 2C00  
                         l3110 3572                           l3102 2B88                           l1407 242E  
                         l1247 304E                           l3112 3756                           l3120 374C  
                         l3016 2B38                           l3008 2B14                           l3040 2C60  
                         l3032 2C30                           l3024 2C0E                           l3104 2BBA  
                         l3200 1FAC                           l1257 311C                           l3114 375A  
                         l3122 3750                           l3130 34EE                           l1370 1C04  
                         l1418 23C6                           l3050 2C9A                           l3042 2C76  
                         l3034 2C42                           l3026 2C16                           l3210 1FF2  
                         l3202 1FB0                           l1363 1A0E                           l1507 2BFA  
                         l1427 3460                           l3116 3720                           l3132 34F6  
                         l3124 3742                           l1380 1D34                           l1372 1C7C  
                         l3052 2CA2                           l3044 2C7E                           l3036 2C4A  
                         l3028 2C1A                           l3060 2FF6                           l3108 3564  
                         l3204 1FC2                           l1373 1C6A                           l3118 3724  
                         l3134 34FE                           l3126 3746                           l3046 2C84  
                         l3038 2C52                           l3070 3030                           l3062 2FFE  
                         l1518 3760                           l3206 1FD6                           l3214 2008  
                         l3150 1DB8                           l3222 204C                           l3142 1D74  
                         l4110 3538                           l1367 1D72                           l4104 372A  
                         l4200 3686                           l3136 3524                           l3128 34EA  
                         l3048 2C8A                           l3072 3038                           l3064 3006  
                         l3056 2FDC                           l3080 30CC                           l3224 206E  
                         l3208 1FF0                           l3216 2038                           l3160 1E1E  
                         l3152 1DBC                           l3144 1D7C                           l4120 355E  
                         l4112 3544                           l4202 368A                           l4122 35CC  
                         l4130 35A6                           l3138 3526                           l3250 33C0  
                         l3242 32DA                           l4106 3708                           l3074 303A  
                         l3066 3014                           l3058 2FE4                           l3090 3108  
                         l3082 30D4                           l3226 2076                           l3218 2040  
                         l3170 1E90                           l3162 1E28                           l3154 1DC6  
                         l3146 1DA2                           l3330 364C                           l4114 3550  
                         l4204 368C                           l4132 35B6                           l3244 3320  
                         l3236 328A                           l3500 199C                           l3076 3040  
                         l3068 301A                           l3092 310E                           l3084 30DC  
                         l1492 357E                           l1468 1F16                           l3180 1EE0  
                         l3172 1EA2                           l3164 1E40                           l3156 1DE6  
                         l3148 1DAA                           l3340 31F0                           l3332 3668  
                         l4116 3556                           l4108 352C                           l4140 2D86  
                         l4124 29B6                           l1469 207E                           l4206 3690  
                         l4134 35C0                           l4126 3598                           l3254 332A  
                         l3238 32D0                           l3350 2F18                           l3510 19C8  
                         l3502 19AC                           l3326 36F2                           l3430 3122  
                         l3086 30EA                           l3078 30BA                           l3094 2B42  
                         l3190 1F42                           l3182 1EE8                           l3174 1EB2  
                         l3166 1E70                           l3158 1E06                           l3342 320A  
                         l4118 355A                           l4150 2DC4                           l4142 2D8A  
                         l1495 3596                           l1487 322A                           l4208 3692  
                         l4128 359C                           l3248 337A                           l3256 3370  
                         l3344 3234                           l3352 2F4A                           l3360 2E7C  
                         l3600 1D1C                           l3520 1A1E                           l3512 19D8  
                         l3504 19B2                           l3328 3702                           l3432 3148  
                         l3088 3100                           l3096 2B52                           l3192 1F5A  
                         l3184 1F02                           l3176 1EC2                           l3168 1E8C  
                         l1488 3232                           l3336 31DE                           l3440 342A  
                         l4152 2DC6                           l4144 2DAE                           l4136 2D50  
                         l3450 3738                           l3354 2F5C                           l3346 2EEA  
                         l3362 2E9C                           l3602 1D38                           l3610 1D5E  
                         l3530 1A58                           l3522 1A2E                           l3514 19E8  
                         l3506 19B8                           l3434 314C                           l3098 2B62  
                         l3194 1F68                           l3178 1ED2                           l3186 1F04  
                         l3338 31E2                           l3442 3432                           l3370 258A  
                         l4154 2DD0                           l4146 2DB8                           l4138 2D60  
                         l3452 373C                           l3460 307E                           l3348 2EF8  
                         l3364 2ECE                           l3612 1D62                           l3604 1D48  
                         l3540 1AAA                           l3532 1A6E                           l3516 19F8  
                         l3508 19C6                           l3700 241C                           l3428 311E  
                         l3196 1F6C                           l3188 1F22                           l3444 344A  
                         l3436 3416                           l4420 2F66                           l3380 2646  
                         l3372 25A4                           l4156 2DD2                           l4148 2DBA  
                         l4500 24C6                           l3710 360A                           l3470 2CDA  
                         l3462 3088                           l3454 3050                           l3366 2EE0  
                         l3358 2E6E                           l3606 1D56                           l3550 1AF0  
                         l3542 1AB8                           l3534 1A7A                           l3526 1A42  
                         l3518 19FE                           l3630 2748                           l3622 2708  
                         l3702 241E                           l3198 1F90                           l3446 3458  
                         l3438 3422                           l4430 2FA8                           l3382 2660  
                         l3374 25F2                           l4158 2DDC                           l4190 36CE  
                         l4182 36B6                           l4510 24D4                           l4502 24CA  
                         l3712 360C                           l3480 2D2C                           l3472 2CE6  
                         l3464 2CAC                           l3720 2080                           l3456 3060  
                         l3800 1096                           l3608 1D58                           l3560 1B5E  
                         l3552 1B0A                           l3544 1AC4                           l3536 1A92  
                         l3528 1A4E                           l3640 2778                           l3632 2756  
                         l3624 2732                           l3616 26DE                           l4432 2FBE  
                         l3384 26A0                           l3376 2604                           l4440 27F4  
                         l4192 36D0                           l4184 36C0                           l4520 2526  
                         l4512 24D6                           l4504 24CE                           l4194 3672  
                         l3714 360E                           l3706 35FA                           l3482 2D2E  
                         l3474 2CF4                           l3466 2CBC                           l3730 2132  
                         l3722 20C8                           l3458 306E                           l3810 1142  
                         l3802 10BC                           l3570 1BF4                           l3562 1B88  
                         l3554 1B1A                           l3546 1AD4                           l3538 1A9E  
                         l3490 1964                           l3650 27A2                           l3642 2782  
                         l3626 2734                           l3618 26F4                           l4426 2F74  
                         l3378 2608                           l4450 2828                           l4442 2800  
                         l4434 27E4                           l4186 36C2                           l4530 255A  
                         l4522 252A                           l4514 24D8                           l4506 24D0  
                         l4196 367A                           l3716 3610                           l3708 3604  
                         l3484 2D38                           l3476 2CFE                           l3468 2CD2  
                         l3740 2244                           l3732 2154                           l3724 20D0  
                         l3900 164C                           l3820 11D4                           l3812 1172  
                         l3804 10C8                           l3580 1C34                           l3572 1C02  
                         l3564 1BBE                           l3556 1B36                           l3548 1AE0  
                         l3492 1966                           l3652 27B2                           l3628 2744  
                         l3660 227E                           l4428 2FA4                           l4460 285C  
                         l4452 2834                           l4444 280C                           l4436 27E8  
                         l4188 36CC                           l4532 2562                           l4524 253E  
                         l4516 24DA                           l4508 24D2                           l4198 367C  
                         l3718 3698                           l3478 2D1C                           l3742 2256  
                         l3726 20EE                           l3734 2156                           l3910 16D0  
                         l3902 166E                           l3830 1288                           l3822 1208  
                         l3806 10D2                           l3814 117E                           l3590 1CA6  
                         l3582 1C62                           l3574 1C14                           l3566 1BCC  
                         l3558 1B42                           l3494 1976                           l3486 194A  
                         l3654 27C2                           l3638 276E                           l3662 228E  
                         l3750 34B2                           l4470 2896                           l4462 286E  
                         l4454 2842                           l4446 2818                           l4438 27F0  
                         l4534 256A                           l4526 2546                           l4518 24DE  
                         l3744 2268                           l3736 2166                           l3728 2110  
                         l3920 1750                           l3912 16F2                           l3904 1672  
                         l3840 1346                           l3832 1294                           l3824 1238  
                         l3816 118A                           l3808 110E                           l3760 0E32  
                         l3592 1CD0                           l3576 1C22                           l3568 1BEA  
                         l3496 1986                           l3488 1956                           l3656 27D2  
                         l3648 2796                           l3680 2354                           l3672 230C  
                         l3664 229C                           l4472 289E                           l4464 2872  
                         l4456 2854                           l4448 2820                           l4480 28CE  
                         l4528 254E                           l3738 2236                           l3930 17D0  
                         l3922 1772                           l3906 1690                           l3914 16F6  
                         l3850 13E4                           l3834 12A6                           l3842 1352  
                         l3818 1194                           l3826 1240                           l3770 0E7C  
                         l3762 0E42                           l3586 1C8C                           l3594 1CD4  
                         l3578 1C26                           l3498 1996                           l3690 23D4  
                         l3682 2360                           l3674 2314                           l3666 22E2  
                         l3754 34D6                           l3746 34A6                           l4474 28A6  
                         l4466 2880                           l4458 2858                           l4490 249A  
                         l4482 2430                           l2972 3624                           l3940 1854  
                         l3932 17F2                           l3916 1712                           l3924 1776  
                         l3908 16AE                           l3860 1446                           l3852 1414  
                         l3844 135E                           l3836 12E2                           l3828 1262  
                         l3780 0F14                           l3772 0E9A                           l3764 0E52  
                         l3596 1CEE                           l3588 1C98                           l3692 23D6  
                         l3684 239C                           l3676 2320                           l3668 22F8  
                         l3756 28E0                           l2980 2A90                           l3748 34AA  
                         l4476 28B2                           l4468 2892                           l4492 24A2  
                         l4484 2476                           l2974 3634                           l3950 18DC  
                         l3942 1876                           l3926 1792                           l3934 17F6  
                         l3918 172E                           l3870 14D2                           l3862 147A  
                         l3846 1370                           l3838 1316                           l3790 0FC4  
                         l3782 0F48                           l3774 0EC4                           l3854 141C  
                         l3766 0E5E                           l3758 0E1A                           l3598 1D02  
                         l3694 23DA                           l3686 23A8                           l3678 2352  
                         l2990 2AB6                           l2982 2A98                           l4566 202A  
                         l4478 28BE                           l4494 24AA                           l4486 247E  
                         l3952 18E0                           l3936 1814                           l3944 187A  
                         l3928 17AE                           l3880 1544                           l3872 14E6  
                         l3864 14AA                           l3856 142E                           l3848 13B0  
                         l3792 1008                           l3784 0F78                           l3776 0EC4  
                         l3768 0E70                           l3696 23FE                           l3688 23B6  
                         l2992 2ABE                           l2984 2A9C                           l2976 2A7E  
                         l4496 24B2                           l4488 2486                           l3954 1900  
                         l3946 189A                           l3938 1832                           l3890 15C8  
                         l3882 1566                           l3874 14EA                           l3866 14B2  
                         l3858 143A                           l3794 103C                           l3778 0ED4  
                         l3786 0F84                           l3698 240E                           l2994 2AD0  
                         l2986 2AAA                           l2978 2A82                           l3970 2E18  
                         l3962 2DE0                           l4498 24C2                           l3956 1920  
                         l3948 18BA                           l3892 15EA                           l3876 1506  
                         l3884 156A                           l3868 14C0                           l3796 106C  
                         l3788 0F90                           l2996 2AD8                           l2988 2AB2  
                         l3980 2E56                           l3972 2E20                           l3964 2DE4  
                         l3958 1942                           l3886 1588                           l3894 15EE  
                         l3878 1522                           l3798 1074                           l2998 2AE0  
                         l3982 3180                           l3974 2E28                           l3966 2DFA  
                         l3896 160C                           l3888 15A6                           l3984 31D2  
                         l3976 2E30                           l3968 2E02                           l3898 162A  
                         l3986 33CA                           l3978 2E40                           l3988 340A  
                         STR_1 0E0F                           STR_2 0E14                           STR_3 0E14  
                         STR_4 0E11                           STR_5 0E01                           STR_6 0E04  
                         u2000 2AD0                           u2001 2ACC                           u2010 2AEE  
                         u2011 2AEA                           u2020 2B0A                           u2100 2FF6  
                         u2021 2B06                           u2101 2FF2                           u2030 2B30  
                         u2110 3014                           u2031 2B2C                           u2111 3010  
                         u3000 241C                           u2040 2C0E                           u2120 3030  
                         u2200 3572                           u3001 2418                           u2041 2C0A  
                         u2121 302C                           u2201 356E                           u2210 3512  
                         u3010 2166                           u2050 2C28                           u2130 30CC  
                         u2211 350A                           u3011 2162                           u2051 2C24  
                         u2131 30C8                           u3100 1288                           u2060 2C42  
                         u2140 30EA                           u2300 1EC2                           u3020 34D2  
                         u3101 1284                           u2061 2C3E                           u2141 30E6  
                         u2301 1EBE                           u3021 34CE                           u2070 2C60  
                         u2150 3100                           u2310 1ED2                           u2230 1DA2  
                         u3030 34E6                           u2071 2C5C                           u2151 30FC  
                         u2311 1ECE                           u2231 1D9E                           u3031 34E2  
                         u3200 15C8                           u3040 0E70                           u2080 2C76  
                         u2160 2B52                           u2320 1F16                           u2240 1DE6  
                 _BAUD4CONbits 0EE9                           u3201 15C4                           u3041 0E6C  
                         u2081 2C72                           u2161 2B4E                           u2321 1F12  
                         u2241 1DE2                           u3210 15EA                           u3130 142E  
                         u3050 0E9A                           u2090 2C9A                           u2170 2B62  
                         u2330 1F42                           u2250 1E06                           u3211 15E6  
                         u3131 142A                           u3115 1296                           u3051 0E96  
                         u2091 2C96                           u2171 2B5E                           u2331 1F3E  
                         u2251 1E02                           u2228 3514                           u3300 1712  
                         u3220 160C                           u3140 1506                           u3060 0EC4  
                         u2180 2B88                           u2340 1FC2                           u2260 1E3C  
                         u2500 322A                           u3301 170E                           u3221 1608  
                         u3141 1502                           u3125 1360                           u3061 0EC0  
                         u2181 2B84                           u2341 1FBE                           u2261 1E36  
                         u2501 3226                           u3310 172E                           u3230 162A  
                         u3150 1522                           u2510 2F18                           u3070 1096  
                         u2190 2BBA                           u2350 1FD2                           u2270 1E3E  
                         u3311 172A                           u3231 1626                           u3151 151E  
                         u2511 2F14                           u3071 1092                           u2191 2BB6  
                         u2351 1FCE                           u3400 1854                           u3320 1750  
                         u3240 164C                           u3160 1544                           u2600 306E  
                         u2520 2F4A                           u3080 10BC                           u2360 2004  
                         u2280 1EA2                           u3401 1850                           u3321 174C  
                         u3241 1648                           u3161 1540                           u2601 306A  
                         u2521 2F46                           u3081 10B8                           u2361 2000  
                         u2281 1E9E                           u3410 1876                           u3330 1772  
                         u3250 166E                           u3170 1566                           u2610 30A8  
                         u2530 2E9C                           u3090 1262                           u2290 1EB2  
                         _T2PR 0FBC                           u3411 1872                           u3331 176E  
                         u3251 166A                           u3171 1562                           u2611 30A4  
                         u2531 2E98                           u3091 125E                           u2291 1EAE  
                         u2620 2CD2                           u3420 189A                           u3340 1792  
                         u3260 1690                           u3180 1588                           u2540 2ECE  
                         u2700 19E8                           u3500 2E56                           u2621 2CCE  
                         u3421 1896                           u3341 178E                           u3261 168C  
                         u3181 1584                           u2541 2ECA                           u2701 19E4  
                         u3501 2E52                           u2630 2CF4                           u3430 18BA  
                         u3350 17AE                           u3270 16AE                           u3190 15A6  
                         u2710 1A1E                           u2550 25A4                           u3510 2E6C  
                         u2631 2CF0                           u3431 18B6                           u3351 17AA  
                         u3271 16AA                           u3191 15A2                           u2711 1A1A  
                         u2551 25A0                           u3511 2E68                           u2640 2D1C  
                         u3440 18DC                           u3360 17D0                           u3280 16D0  
                         u2800 1CA6                           u2720 1A2E                           u2560 2660  
                         u2641 2D18                           u3441 18D8                           u3361 17CC  
                         u3281 16CC                           u2801 1CA2                           u2721 1A2A  
                         u2561 265C                           u3450 1900                           u3370 17F2  
                         u3290 16F2                           u2810 1CEE                           u2730 1BA8  
                         u2650 1964                           u2490 3702                           u2570 3144  
                         u3610 2A48                           u3530 29C8                           u3451 18FC  
                         u3371 17EE                           u3291 16EE                           u2811 1CEA  
                         u2651 1960                           u2491 36FE                           u3611 2A40  
                         u3531 29C0                           u3460 1920                           u3380 1814  
                         u2820 1D1C                           u2740 1C02                           u2660 1976  
                         u2900 27C2                           u2580 316E                           u3461 191C  
                         u3381 1810                           u2821 1D18                           u2741 1BFE  
                         u2661 1972                           u2901 27BE                           u3470 1942  
                         u3390 1832                           u2830 1D56                           u2750 1C22  
                         u2670 1986                           u2910 228E                           u2590 317E  
                         u3630 2A6A                           u3550 29E8                           u3471 193E  
                         u3391 182E                           u2831 1D52                           u2751 1C1E  
                         u2735 1B9E                           u2671 1982                           u2911 228A  
                         u2591 317A                           u3631 2A62                           u3551 29E0  
                         u1960 3634                           u2760 1C34                           u2680 19C6  
                         u2840 26F4                           u2920 229C                           u3480 2DFA  
                         u3608 2A2C                           u1961 3630                           u2761 1C30  
                         u2681 19C2                           u2841 26F0                           u2921 2298  
                         u2577 313A                           u3481 2DF6                           u1970 364A  
                         u2770 1C62                           u2690 19D8                           u2850 2728  
                         u2930 22F8                           u3490 2E18                           u3570 2A08  
                         u1971 3646                           u2771 1C5E                           u2691 19D4  
                         u2931 22F4                           u2587 3164                           u3491 2E14  
                         u3571 2A00                           u2780 1C78                           u2860 2756  
                         u2940 234E                           u1980 2A90                           u3820 2FBE  
                         u3628 2A4A                           u3548 29CA                           u2781 1C74  
                         u2861 2752                           u2941 234A                           u1981 2A8C  
                         u3821 2FBA                           u2790 1C8C                           u2870 276A  
                         u2950 2398                           u1990 2AAA                           u3830 2854  
                         u3590 2A2A                           u2791 1C88                           u2871 2766  
                         u2855 271E                           u2951 2394                           u1991 2AA6  
                         u3831 2850                           u3591 2A22                           u2880 2792  
                         u2960 23B6                           u3840 286E                           u3648 2A6C  
                         u3568 29EA                           u2881 278E                           u2961 23B2  
                         u3841 286A                           u2890 27B2                           u2970 23C6  
                         u3850 2892                           u2891 27AE                           u2971 23C2  
                         u3851 288E                           u2980 23D4                           u3860 28DE  
                         u3588 2A0A                           u3908 2516                           u2981 23D0  
                         u3861 28DA                           u3917 2574                           u2990 240E  
                         u3870 24F2                           u2991 240A                           u3927 2E36  
                         u3871 24EA                           u3937 35AC                           u3890 2514  
                         u3891 250C                           u3888 24F4                  _colour_to_key 14E6  
                         abs@a 0007                           _dbuf 0060                           _main 2430  
                         _prec 0084                           _nout 0080                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F                           _stop 2DE0  
           _sendRGBCvalSerial4 3180                           prodh 0FF4                           prodl 0FF3  
               ??_average_RGBC 000F                           start 0042             average_RGBC@temp_B 001A  
           average_RGBC@temp_C 001E             average_RGBC@temp_G 0016             average_RGBC@temp_R 0012  
       __end_of_color_read_Red 32DA                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 003A                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                  write_trail@tH 0003                  write_trail@tL 0001  
                ___fltol@sign1 0030                          ?_main 0001             _timer_high_pointer 00AC  
              __end_of___awdiv 2B42                __end_of___awmod 2CAC                __end_of___flmul 1D74  
              __end_of___fltol 27E4                __end_of___lldiv 2D50                          ?_stop 0013  
              ___awdiv@divisor 0003                __end_of___lwdiv 3050                __end_of___lwmod 311E  
                        i2l719 003E                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0014  
                 vfpfcnvrt@fmt 000F                          _TMR0H 0FD4                          _TMR0L 0FD3  
          ___lmul@multiplicand 0005        __end_of_sendCharSerial4 3708     __end_of_I2C_2_Master_Start 3760  
                  _write_timer 3736     __end_of_I2C_2_Master_Write 372A                    _write_trail 352A  
              __end_of_max_RGB 2F66                __end_of_min_RGB 2EEA                    _turningGear 00BE  
                        _flags 0086           ??_sendRGBCvalSerial4 003B                          _fputc 2B42  
                        _width 0082                          _putch 3760                 ?_colour_to_key 0001  
            _turnRight135Delay 00B4                          tablat 0FF5                _turnLeft90Delay 00BA  
                        plusw2 0FDB                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
              __end_of_sprintf 3462        __end_of_color_read_Blue 33CA                  average_RGBC@i 0011  
                average_RGBC@p 000E          _I2C_2_Master_RepStart 3742                ?_color_read_Red 0005  
              __initialization 3462                   __end_of_main 258A                   __end_of_stop 2E6E  
                       ??_main 005C                         ??_stop 0015                  __activetblptr 0003  
               write_trail@man 0002                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0001                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RD6PPS 0E70  
                       _RE4PPS 0E76                         i2l4380 001A                         i2l4382 002A  
                       i2l4384 0034                         i2l4386 003A                         i2l4378 000A  
                       _RG6PPS 0E88                  vfpfcnvrt@done 0013       __end_of_color_click_init 35CC  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 2430  
             _turnLeft135Delay 00B6                  ??_Timer0_init 0003                   ?_reset_timer 0001  
                 _CCPTMRS0bits 0FAD      sendArrayCharSerial4@index 01A1                   vfprintf@cfmt 001F  
                 convert_HSV@C 0040                   convert_HSV@M 003E                         ___lmul 3050  
                 convert_HSV@m 001A                         ___wmul 364C                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___flmul 0017                      ??___fltol 002C  
                    ??___lldiv 0009                      ??___lwdiv 000B                      ??___lwmod 0005  
         forward_navigation@p1 0057           forward_navigation@p2 0058                         clear_0 3488  
                       clear_1 3494           forward_navigation@mL 0055           forward_navigation@mR 0056  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                      ??_max_RGB 0003                      ??_min_RGB 0003  
                       fputc@c 0001              _timer_low_pointer 00AA           __end_of_average_RGBC 227C  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
              ??_colour_to_key 0003               __end_of_vfprintf 3234                         stop@mL 0013  
                       stop@mR 0014              ??_initDCmotorsPWM 0003                      ??_sprintf 002B  
          convert_HSV@temp_610 0028            convert_HSV@temp_611 002C            convert_HSV@temp_612 0030  
          convert_HSV@temp_613 0034            convert_HSV@temp_614 0020            convert_HSV@temp_609 0038  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
            _buggy_lights_init 35CC                     __accesstop 0060        __end_of__initialization 349C  
     __end_of_color_read_Clear 337A       __end_of_color_read_Green 332A         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001                     ___fltol@f1 0028  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 36D4  
          ??_buggy_lights_init 0001                  __end_of_fputc 2BFC                  __end_of_putch 3762  
          __end_of_Timer0_init 3696     __end_of_forward_navigation 28E0                        ??_fputc 0004  
    __end_of_buggy_lights_init 35FA                        ??_putch 0001                     __pbssBANK0 0060  
                   __pbssBANK1 01A4                     _getRGBCval 3234              _color_writetoaddr 3696  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___lmul 0001  
                      ?___wmul 0001          __end_of_wait_for_wall 34E8                 ___lmul@product 0009  
          ??_color_writetoaddr 0004                      ?___xxtofl 0001                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                   ?_write_timer 0001                   ?_write_trail 0001  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 36B6             _I2C_2_Master_Start 3756  
                   _initUSART4 36B6             _I2C_2_Master_Write 371E                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 3672  
      sendStringSerial4@string 0002                        ___awdiv 2A7E                        ___awmod 2BFC  
                      ___flmul 194A                        ___fltol 26DE                        ___lldiv 2CAC  
                convert_HSV@p1 000E            ?_I2C_2_Master_Start 0001                  convert_HSV@p2 000F  
                      ___lwdiv 2FDC            ?_I2C_2_Master_Write 0001                        ___lwmod 30BA  
                    ?_vfprintf 001C              wait_for_wall@loss 000E                   __psmallconst 0E00  
        sendArrayCharSerial4@i 01A2                        __pcinit 3462                        __ramtop 0E00  
                      __ptext0 2430                        __ptext1 29B6                        __ptext2 36B6  
                      __ptext3 2D50                        __ptext4 27E4                        __ptext5 352A  
                      __ptext6 34A6                        __ptext7 2DE0                        __ptext8 258A  
                      __ptext9 364C                     _read_timer 3708                        _max_RGB 2EEA  
                      _min_RGB 2E6E                      _T2CONbits 0FBD                     ??___xxtofl 0005  
             ___awmod@dividend 0001              __end_of_scale_RGB 29B6                      _T2HLTbits 0FBE  
                      _sprintf 3416           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 349C              _sendHSVvalSerial4 33CA       forward_navigation@timerH 0059  
     forward_navigation@timerL 005A                    ?_getRGBCval 000C                        fputc@fp 0003  
            ?_color_click_init 0001             ?_sendHSVvalSerial4 003A                ___lldiv@divisor 0005  
              colour_to_key@p1 0001                colour_to_key@p2 0002             ??_color_click_init 0005  
              ___lldiv@counter 000D                   _average_RGBC 2080              __end_of_vfpfcnvrt 2080  
          ??_sendHSVvalSerial4 003B           convert_HSV@hue_scale 003C                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0017                     ??_vfprintf 001F  
              _initDCmotorsPWM 2D50             setMotorPWM@negDuty 0012           convert_HSV@sat_scale 0018  
                 read_timer@tH 0001                   read_timer@tL 0002                  ___xxtofl@sign 0009  
                    _TRISAbits 0F81             setMotorPWM@posDuty 0011                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88      __end_of_sendHSVvalSerial4 3416  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001                     main@motorL 0088  
                   main@motorR 0091             ??_color_read_Clear 0007             ??_color_read_Green 0007  
               __end_of___lmul 30BA                    vfpfcnvrt@ap 0010                    vfpfcnvrt@cp 0016  
                  vfpfcnvrt@fp 000E                 __end_of___wmul 3672                    ?_read_timer 0001  
    sendRGBCvalSerial4@col_val 003A       sendHSVvalSerial4@col_val 003A            color_read_Clear@tmp 000A  
          start_initialization 3462                  ??_convert_HSV 0010                    __end_of_ISR 0042  
                  __end_of_abs 3598               _turnRight90Delay 00B8      sendRGBCvalSerial4@tempStr 003B  
     sendHSVvalSerial4@tempStr 003B          __end_of_colour_to_key 194A             _forward_navigation 27E4  
          color_read_Green@tmp 000A            ?_forward_navigation 0055        __end_of_initDCmotorsPWM 2DE0  
                  vfprintf@fmt 001D                       ??___lmul 0009                       ??___wmul 0005  
                  __pdataBANK0 00A8                     scale_RGB@p 0032                 max_RGB@max_val 0005  
         ??_forward_navigation 0059                      ___flmul@a 0013                      ___flmul@b 000F  
                  __pbssCOMRAM 005E                  __pcstackBANK0 0088                  __pcstackBANK1 0100  
              convert_HSV@temp 0024                 _wall_threshold 00BC   __end_of_sendArrayCharSerial4 2FDC  
          __end_of_convert_HSV 14E6        sendArrayCharSerial4@arr 003A   __end_of_toggle_tricolour_LED 2A7E  
             ___lwdiv@dividend 0007                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___flmul 000F  
                     ?___fltol 0028                       ?___lldiv 0001                       ?___lwdiv 0007  
                     ?___lwmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                     ?_max_RGB 0001                       ?_min_RGB 0001                    __smallconst 0E00  
            _I2C_2_Master_Idle 3624              _I2C_2_Master_Init 35FA              _I2C_2_Master_Read 34E8  
            _I2C_2_Master_Stop 374C             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 000F             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B                  _headbuttDelay 00B0       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0020                      _scale_RGB 28E0                      _rampDelay 00C1  
                 ??_getRGBCval 000D              _sendStringSerial4 311E            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                  ??_reset_timer 0003                      _lost_flag 01A5  
                     _PIR0bits 0E33                       i2u380_40 001A                       i2u380_41 0016  
                     i2u381_40 002A                       i2u381_41 0026                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 005E  
                    _vfpfcnvrt 1D74      __end_of_I2C_2_Master_Idle 364C      __end_of_I2C_2_Master_Init 3624  
    __end_of_I2C_2_Master_Read 352A              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 3756  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 328A  
   __end_of_sendRGBCvalSerial4 31DE              ??_color_read_Blue 0007                    _convert_HSV 0E1A  
              main@RGBC_colour 00A0                     vfpfcnvrt@c 001B              ___lmul@multiplier 0001  
                    copy_data0 3476      __end_of_sendStringSerial4 3180                     ?_scale_RGB 0032  
__end_of_I2C_2_Master_RepStart 374C             color_read_Blue@tmp 000A            __end_of_setMotorPWM 26DE  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001E  
                     __Lrparam 0000                     vfprintf@fp 001C                 wait_for_wall@p 000D  
                 _sample_count 00C2                     ?_vfpfcnvrt 000E            __end_of_reset_timer 3736  
                _wait_for_wall 34A6           _sendArrayCharSerial4 2F66                   ??_read_timer 0003  
               convert_HSV@hue 001E                 convert_HSV@sat 001C                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                     sprintf@fmt 0022                     sprintf@ret 002B  
                     ___xxtofl 227C                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
         _toggle_tricolour_LED 29B6                ___lwdiv@divisor 0009             __end_of_initUSART4 36D4  
              ___lwdiv@counter 000D                       __ptext10 3180                       __ptext11 33CA  
                     __ptext20 2FDC                       __ptext12 2F66                       __ptext21 2BFC  
                     __ptext13 3416                       __ptext30 0E1A                       __ptext22 2A7E  
                     __ptext14 31DE                       __ptext31 2E6E                       __ptext23 311E  
                     __ptext15 1D74                       __ptext40 337A                       __ptext32 2EEA  
                     __ptext24 36F0                       __ptext16 2B42                       __ptext41 3742  
                     __ptext33 3050                       __ptext25 28E0                       __ptext17 3760  
                     __ptext50 35FA                       __ptext42 34E8                       __ptext34 14E6  
                     __ptext26 227C                       __ptext18 3564                       __ptext51 35CC  
                     __ptext43 2CAC                       __ptext35 2080                       __ptext27 26DE  
                     __ptext19 30BA                       __ptext52 3672                       __ptext44 3598  
                     __ptext36 3234                       __ptext28 194A                       __ptext53 372A  
                     __ptext45 3696                       __ptext37 328A                       __ptext29 3708  
                     __ptext54 3736                       __ptext46 371E                       __ptext38 32DA  
                     __ptext47 374C                       __ptext39 332A                       __ptext48 3756  
                     __ptext49 3624                    getRGBCval@p 000C                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA         forward_navigation@mann 005B             __end_of_read_timer 371E  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005F  
                     _vfprintf 31DE                 ?_wait_for_wall 000D          ?_sendArrayCharSerial4 003A  
                     max_RGB@p 0001                       min_RGB@p 0001                     _INTCONbits 0FF2  
        ?_toggle_tricolour_LED 0001                  ??_write_timer 0002                  ??_write_trail 0003  
                  _setMotorPWM 258A                    ??_scale_RGB 0033                       intlevel2 0000  
                    sprintf@ap 002D                   _topGearRight 00BF              _manoeuvre_pointer 00A8  
             ___lwmod@dividend 0001               ___lldiv@dividend 0001               colour_to_key@key 0005  
               main@HSV_colour 009A                    _reset_timer 372A                    ??_vfpfcnvrt 0011  
             _color_click_init 3598                    _topGearLeft 00C0                       sprintf@f 002E  
                     sprintf@s 0020                     _SSP2DATPPS 0E1D               ___lldiv@quotient 0009  
                   _SSP2CLKPPS 0E1C                ___lwmod@divisor 0003                ___lwmod@counter 0005  
              _trail_manoeuvre 01A6                    _return_flag 0087                _manoeuvre_count 01A4  
                   _TX4STAbits 0EE8                _sendCharSerial4 36F0            __end_of_write_timer 3742  
          __end_of_write_trail 3564    sendArrayCharSerial4@tempStr 0100                  ?_average_RGBC 000E  
