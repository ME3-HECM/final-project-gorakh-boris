

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 08 10:08:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 18/08/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F67K40 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataCOMRAM
   106   002CEC                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _timer_high_pointer
   110   002CEC  28                 	db	low _trail_timer_high
   111   002CED  01                 	db	high _trail_timer_high
   112                           
   113                           ;initializer for _turningGear
   114   002CEE  2A                 	db	42
   115                           
   116                           ;initializer for _topGearRight
   117   002CEF  14                 	db	20
   118                           
   119                           ;initializer for _topGearLeft
   120   002CF0  14                 	db	20
   121                           
   122                           ;initializer for _rampDelay
   123   002CF1  08                 	db	8
   124                           
   125                           	psect	idataBANK0
   126   002C96                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for _manoeuvre_pointer
   130   002C96  00                 	db	low _trail_manoeuvre
   131   002C97  01                 	db	high _trail_manoeuvre
   132                           
   133                           ;initializer for _timer_low_pointer
   134   002C98  14                 	db	low _trail_timer_low
   135   002C99  01                 	db	high _trail_timer_low
   136                           
   137                           ;initializer for _squareDelay
   138   002C9A  012C               	dw	300
   139                           
   140                           ;initializer for _headbuttDelay
   141   002C9C  0046               	dw	70
   142                           
   143                           ;initializer for _turn180Delay
   144   002C9E  01FE               	dw	510
   145                           
   146                           ;initializer for _turnRight135Delay
   147   002CA0  012C               	dw	300
   148                           
   149                           ;initializer for _turnLeft135Delay
   150   002CA2  012C               	dw	300
   151                           
   152                           ;initializer for _turnRight90Delay
   153   002CA4  00AF               	dw	175
   154                           
   155                           ;initializer for _turnLeft90Delay
   156   002CA6  00AF               	dw	175
   157                           
   158                           ;initializer for _wall_threshold
   159   002CA8  012C               	dw	300
   160   000000                     _TMR0H	set	4052
   161   000000                     _TX4REG	set	3812
   162   000000                     _RC4STAbits	set	3815
   163   000000                     _SP4BRGH	set	3814
   164   000000                     _LATEbits	set	3965
   165   000000                     _TRISEbits	set	3973
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISGbits	set	3975
   168   000000                     _LATFbits	set	3966
   169   000000                     _LATHbits	set	3968
   170   000000                     _TRISFbits	set	3974
   171   000000                     _TRISHbits	set	3976
   172   000000                     _SSP2CON2bits	set	3802
   173   000000                     _RX4PPS	set	3605
   174   000000                     _SSP2CLKPPS	set	3612
   175   000000                     _SSP2DATPPS	set	3613
   176   000000                     _RC7PPS	set	3689
   177   000000                     _RE2PPS	set	3700
   178   000000                     _LATAbits	set	3961
   179   000000                     _LATDbits	set	3964
   180   000000                     _TRISDbits	set	3972
   181   000000                     _T2PR	set	4028
   182   000000                     _T2CONbits	set	4029
   183   000000                     _CCPR2H	set	4006
   184   000000                     _CCPR1H	set	4010
   185   000000                     _TRISCbits	set	3971
   186   000000                     _TRISAbits	set	3969
   187   000000                     _LATCbits	set	3963
   188   000000                     _RE4PPS	set	3702
   189   000000                     _RG6PPS	set	3720
   190   000000                     _RD5PPS	set	3695
   191   000000                     _ANSELDbits	set	3751
   192   000000                     _SSP2ADD	set	3798
   193   000000                     _SSP2CON1bits	set	3801
   194   000000                     _CCPR4H	set	3873
   195   000000                     _CCPR3H	set	3877
   196   000000                     _TMR0L	set	4051
   197   000000                     _T0CON0bits	set	4053
   198   000000                     _T0CON1bits	set	4054
   199   000000                     _T2CLKCONbits	set	4031
   200   000000                     _T2HLTbits	set	4030
   201   000000                     _CCP1CONbits	set	4011
   202   000000                     _CCPTMRS0bits	set	4013
   203   000000                     _CCP2CONbits	set	4007
   204   000000                     _CCP3CONbits	set	3878
   205   000000                     _CCP4CONbits	set	3874
   206   000000                     _RC4REG	set	3811
   207   000000                     _SP4BRGL	set	3813
   208   000000                     _TX4STAbits	set	3816
   209   000000                     _BAUD4CONbits	set	3817
   210   000000                     _SSP2CON2	set	3802
   211   000000                     _SSP2STAT	set	3800
   212   000000                     _ANSELFbits	set	3764
   213   000000                     _SSP2BUF	set	3797
   214   000000                     _PIE0bits	set	3625
   215   000000                     _PIR4bits	set	3639
   216   000000                     _RC0PPS	set	3682
   217   000000                     _RD6PPS	set	3696
   218   000000                     _INTCONbits	set	4082
   219   000000                     _PIR0bits	set	3635
   220                           
   221                           	psect	smallconst
   222   000E00                     __psmallconst:
   223                           	callstack 0
   224   000E00  00                 	db	0
   225   000E01                     STR_5:
   226                           
   227                           ; BSR set to: 14
   228   000E01  25                 	db	37
   229   000E02  75                 	db	117	;'u'
   230   000E03  20                 	db	32
   231   000E04  25                 	db	37
   232   000E05  75                 	db	117	;'u'
   233   000E06  20                 	db	32
   234   000E07  25                 	db	37
   235   000E08  75                 	db	117	;'u'
   236   000E09  20                 	db	32
   237   000E0A  25                 	db	37
   238   000E0B  75                 	db	117	;'u'
   239   000E0C  20                 	db	32
   240   000E0D  0D                 	db	13
   241   000E0E  00                 	db	0
   242   000E0F                     STR_1:
   243                           
   244                           ; BSR set to: 14
   245   000E0F  25                 	db	37
   246   000E10  64                 	db	100	;'d'
   247   000E11  20                 	db	32
   248   000E12  0D                 	db	13
   249   000E13  00                 	db	0
   250   000E14                     STR_2:
   251                           
   252                           ; BSR set to: 14
   253   000E14  25                 	db	37
   254   000E15  64                 	db	100	;'d'
   255   000E16  20                 	db	32
   256   000E17  00                 	db	0
   257   000E18  00                 	db	0	; dummy byte at the end
   258   000000                     
   259                           ; #config settings
   260                           
   261                           	psect	cinit
   262   00256E                     __pcinit:
   263                           	callstack 0
   264   00256E                     start_initialization:
   265                           	callstack 0
   266   00256E                     __initialization:
   267                           	callstack 0
   268                           
   269                           ; Initialize objects allocated to BANK0 (20 bytes)
   270                           ; load TBLPTR registers with __pidataBANK0
   271   00256E  0E96               	movlw	low __pidataBANK0
   272   002570  6EF6               	movwf	tblptrl,c
   273   002572  0E2C               	movlw	high __pidataBANK0
   274   002574  6EF7               	movwf	tblptrh,c
   275   002576  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   276   002578  6EF8               	movwf	tblptru,c
   277   00257A  EE00  F0A6         	lfsr	0,__pdataBANK0
   278   00257E  EE10 F014          	lfsr	1,20
   279   002582                     copy_data0:
   280   002582  0009               	tblrd		*+
   281   002584  CFF5 FFEE          	movff	tablat,postinc0
   282   002588  50E5               	movf	postdec1,w,c
   283   00258A  50E1               	movf	fsr1l,w,c
   284   00258C  E1FA               	bnz	copy_data0
   285                           
   286                           ; Initialize objects allocated to COMRAM (6 bytes)
   287                           ; load TBLPTR registers with __pidataCOMRAM
   288   00258E  0EEC               	movlw	low __pidataCOMRAM
   289   002590  6EF6               	movwf	tblptrl,c
   290   002592  0E2C               	movlw	high __pidataCOMRAM
   291   002594  6EF7               	movwf	tblptrh,c
   292   002596  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   293   002598  6EF8               	movwf	tblptru,c
   294   00259A  EE00  F054         	lfsr	0,__pdataCOMRAM
   295   00259E  EE10 F006          	lfsr	1,6
   296   0025A2                     copy_data1:
   297   0025A2  0009               	tblrd		*+
   298   0025A4  CFF5 FFEE          	movff	tablat,postinc0
   299   0025A8  50E5               	movf	postdec1,w,c
   300   0025AA  50E1               	movf	fsr1l,w,c
   301   0025AC  E1FA               	bnz	copy_data1
   302                           
   303                           ; Clear objects allocated to BANK1 (60 bytes)
   304   0025AE  EE01  F000         	lfsr	0,__pbssBANK1
   305   0025B2  0E3C               	movlw	60
   306   0025B4                     clear_0:
   307   0025B4  6AEE               	clrf	postinc0,c
   308   0025B6  06E8               	decf	wreg,f,c
   309   0025B8  E1FD               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to BANK0 (38 bytes)
   312   0025BA  EE00  F060         	lfsr	0,__pbssBANK0
   313   0025BE  0E26               	movlw	38
   314   0025C0                     clear_1:
   315   0025C0  6AEE               	clrf	postinc0,c
   316   0025C2  06E8               	decf	wreg,f,c
   317   0025C4  E1FD               	bnz	clear_1
   318                           
   319                           ; Clear objects allocated to COMRAM (4 bytes)
   320   0025C6  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   321   0025C8  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   322   0025CA  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   323   0025CC  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   324   0025CE                     end_of_initialization:
   325                           	callstack 0
   326   0025CE                     __end_of__initialization:
   327                           	callstack 0
   328   0025CE  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329   0025D0  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330   0025D2  0100               	movlb	0
   331   0025D4  EFE8  F00E         	goto	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMRAM
   334   00005A                     __pbssCOMRAM:
   335                           	callstack 0
   336   00005A                     _flags:
   337                           	callstack 0
   338   00005A                     	ds	1
   339   00005B                     _manoeuvre_count:
   340                           	callstack 0
   341   00005B                     	ds	1
   342   00005C                     _return_flag:
   343                           	callstack 0
   344   00005C                     	ds	1
   345   00005D                     _returning:
   346                           	callstack 0
   347   00005D                     	ds	1
   348                           
   349                           	psect	dataCOMRAM
   350   000054                     __pdataCOMRAM:
   351                           	callstack 0
   352   000054                     _timer_high_pointer:
   353                           	callstack 0
   354   000054                     	ds	2
   355   000056                     _turningGear:
   356                           	callstack 0
   357   000056                     	ds	1
   358   000057                     _topGearRight:
   359                           	callstack 0
   360   000057                     	ds	1
   361   000058                     _topGearLeft:
   362                           	callstack 0
   363   000058                     	ds	1
   364   000059                     _rampDelay:
   365                           	callstack 0
   366   000059                     	ds	1
   367                           
   368                           	psect	bssBANK0
   369   000060                     __pbssBANK0:
   370                           	callstack 0
   371   000060                     _dbuf:
   372                           	callstack 0
   373   000060                     	ds	32
   374   000080                     _nout:
   375                           	callstack 0
   376   000080                     	ds	2
   377   000082                     _width:
   378                           	callstack 0
   379   000082                     	ds	2
   380   000084                     _prec:
   381                           	callstack 0
   382   000084                     	ds	2
   383                           
   384                           	psect	dataBANK0
   385   0000A6                     __pdataBANK0:
   386                           	callstack 0
   387   0000A6                     _manoeuvre_pointer:
   388                           	callstack 0
   389   0000A6                     	ds	2
   390   0000A8                     _timer_low_pointer:
   391                           	callstack 0
   392   0000A8                     	ds	2
   393   0000AA                     _squareDelay:
   394                           	callstack 0
   395   0000AA                     	ds	2
   396   0000AC                     _headbuttDelay:
   397                           	callstack 0
   398   0000AC                     	ds	2
   399   0000AE                     _turn180Delay:
   400                           	callstack 0
   401   0000AE                     	ds	2
   402   0000B0                     _turnRight135Delay:
   403                           	callstack 0
   404   0000B0                     	ds	2
   405   0000B2                     _turnLeft135Delay:
   406                           	callstack 0
   407   0000B2                     	ds	2
   408   0000B4                     _turnRight90Delay:
   409                           	callstack 0
   410   0000B4                     	ds	2
   411   0000B6                     _turnLeft90Delay:
   412                           	callstack 0
   413   0000B6                     	ds	2
   414   0000B8                     _wall_threshold:
   415                           	callstack 0
   416   0000B8                     	ds	2
   417                           
   418                           	psect	bssBANK1
   419   000100                     __pbssBANK1:
   420                           	callstack 0
   421   000100                     _trail_manoeuvre:
   422                           	callstack 0
   423   000100                     	ds	20
   424   000114                     _trail_timer_low:
   425                           	callstack 0
   426   000114                     	ds	20
   427   000128                     _trail_timer_high:
   428                           	callstack 0
   429   000128                     	ds	20
   430                           
   431                           	psect	cstackBANK0
   432   000086                     __pcstackBANK0:
   433                           	callstack 0
   434   000086                     main@HSV_colour:
   435                           	callstack 0
   436                           
   437                           ; 6 bytes @ 0x0
   438   000086                     	ds	6
   439   00008C                     main@motorL:
   440                           	callstack 0
   441                           
   442                           ; 9 bytes @ 0x6
   443   00008C                     	ds	9
   444   000095                     main@motorR:
   445                           	callstack 0
   446                           
   447                           ; 9 bytes @ 0xF
   448   000095                     	ds	9
   449   00009E                     main@measured_colour:
   450                           	callstack 0
   451                           
   452                           ; 8 bytes @ 0x18
   453   00009E                     	ds	8
   454                           
   455                           	psect	cstackCOMRAM
   456   000001                     __pcstackCOMRAM:
   457                           	callstack 0
   458   000001                     ??_toggle_tricolour_LED:
   459   000001                     ??_I2C_2_Master_Idle:
   460   000001                     ?_max:
   461                           	callstack 0
   462   000001                     ?_min:
   463                           	callstack 0
   464   000001                     ?___awdiv:
   465                           	callstack 0
   466   000001                     ?___awmod:
   467                           	callstack 0
   468   000001                     ?___lwdiv:
   469                           	callstack 0
   470   000001                     ?___lwmod:
   471                           	callstack 0
   472   000001                     ?___lmul:
   473                           	callstack 0
   474   000001                     ?___lldiv:
   475                           	callstack 0
   476   000001                     ?___xxtofl:
   477                           	callstack 0
   478   000001                     sendCharSerial4@charToSend:
   479                           	callstack 0
   480   000001                     write_timer@tL:
   481                           	callstack 0
   482   000001                     max@a:
   483                           	callstack 0
   484   000001                     min@a:
   485                           	callstack 0
   486   000001                     initDCmotorsPWM@PWMperiod:
   487                           	callstack 0
   488   000001                     ___awdiv@dividend:
   489                           	callstack 0
   490   000001                     ___awmod@dividend:
   491                           	callstack 0
   492   000001                     ___lwdiv@dividend:
   493                           	callstack 0
   494   000001                     ___lwmod@dividend:
   495                           	callstack 0
   496   000001                     fputc@c:
   497                           	callstack 0
   498   000001                     ___lmul@multiplier:
   499                           	callstack 0
   500   000001                     ___lldiv@dividend:
   501                           	callstack 0
   502   000001                     ___xxtofl@val:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x0
   506   000001                     	ds	1
   507   000002                     ??_I2C_2_Master_Read:
   508   000002                     I2C_2_Master_Write@data_byte:
   509                           	callstack 0
   510   000002                     write_timer@tH:
   511                           	callstack 0
   512   000002                     sendStringSerial4@string:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x1
   516   000002                     	ds	1
   517   000003                     color_writetoaddr@value:
   518                           	callstack 0
   519   000003                     I2C_2_Master_Read@ack:
   520                           	callstack 0
   521   000003                     fputc@fp:
   522                           	callstack 0
   523   000003                     max@b:
   524                           	callstack 0
   525   000003                     min@b:
   526                           	callstack 0
   527   000003                     ___awdiv@divisor:
   528                           	callstack 0
   529   000003                     ___awmod@divisor:
   530                           	callstack 0
   531   000003                     ___lwdiv@divisor:
   532                           	callstack 0
   533   000003                     ___lwmod@divisor:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x2
   537   000003                     	ds	1
   538   000004                     ??_fputc:
   539   000004                     color_writetoaddr@address:
   540                           	callstack 0
   541   000004                     I2C_2_Master_Read@tmp:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x3
   545   000004                     	ds	1
   546   000005                     ??_color_click_init:
   547   000005                     ??___xxtofl:
   548   000005                     ?_color_read_Red:
   549                           	callstack 0
   550   000005                     ?_color_read_Green:
   551                           	callstack 0
   552   000005                     ?_color_read_Blue:
   553                           	callstack 0
   554   000005                     ?_color_read_Clear:
   555                           	callstack 0
   556   000005                     ___awdiv@counter:
   557                           	callstack 0
   558   000005                     ___awmod@counter:
   559                           	callstack 0
   560   000005                     ___lwmod@counter:
   561                           	callstack 0
   562   000005                     max@max_val:
   563                           	callstack 0
   564   000005                     min@min_val:
   565                           	callstack 0
   566   000005                     ___lwdiv@quotient:
   567                           	callstack 0
   568   000005                     ___lmul@multiplicand:
   569                           	callstack 0
   570   000005                     ___lldiv@divisor:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x4
   574   000005                     	ds	1
   575   000006                     ___awdiv@sign:
   576                           	callstack 0
   577   000006                     ___awmod@sign:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x5
   581   000006                     	ds	1
   582   000007                     ??_color_read_Red:
   583   000007                     ??_color_read_Green:
   584   000007                     ??_color_read_Blue:
   585   000007                     ??_color_read_Clear:
   586   000007                     ?_abs:
   587                           	callstack 0
   588   000007                     ?_maxRGB:
   589                           	callstack 0
   590   000007                     ?_minRGB:
   591                           	callstack 0
   592   000007                     maxRGB@p:
   593                           	callstack 0
   594   000007                     minRGB@p:
   595                           	callstack 0
   596   000007                     ___lwdiv@counter:
   597                           	callstack 0
   598   000007                     ___awdiv@quotient:
   599                           	callstack 0
   600   000007                     abs@a:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x6
   604   000007                     	ds	2
   605   000009                     ??_abs:
   606   000009                     ___xxtofl@sign:
   607                           	callstack 0
   608   000009                     _maxRGB$3164:
   609                           	callstack 0
   610   000009                     _minRGB$3165:
   611                           	callstack 0
   612   000009                     ___lmul@product:
   613                           	callstack 0
   614   000009                     ___lldiv@quotient:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x8
   618   000009                     	ds	1
   619   00000A                     ___xxtofl@exp:
   620                           	callstack 0
   621   00000A                     color_read_Red@tmp:
   622                           	callstack 0
   623   00000A                     color_read_Green@tmp:
   624                           	callstack 0
   625   00000A                     color_read_Blue@tmp:
   626                           	callstack 0
   627   00000A                     color_read_Clear@tmp:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x9
   631   00000A                     	ds	1
   632   00000B                     ?_vfpfcnvrt:
   633                           	callstack 0
   634   00000B                     vfpfcnvrt@fp:
   635                           	callstack 0
   636   00000B                     ___xxtofl@arg:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0xA
   640   00000B                     	ds	1
   641   00000C                     getRGBCval@p:
   642                           	callstack 0
   643   00000C                     vfpfcnvrt@fmt:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xB
   647   00000C                     	ds	1
   648   00000D                     ___lldiv@counter:
   649                           	callstack 0
   650   00000D                     vfpfcnvrt@ap:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0xC
   654   00000D                     	ds	1
   655   00000E                     ??_vfpfcnvrt:
   656   00000E                     getHSVval@p1:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0xD
   660   00000E                     	ds	1
   661   00000F                     ?___flmul:
   662                           	callstack 0
   663   00000F                     getHSVval@p2:
   664                           	callstack 0
   665   00000F                     ___flmul@b:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0xE
   669   00000F                     	ds	1
   670   000010                     ??_getHSVval:
   671   000010                     vfpfcnvrt@done:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0xF
   675   000010                     	ds	1
   676   000011                     vfpfcnvrt@cnt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x10
   680   000011                     	ds	2
   681   000013                     vfpfcnvrt@cp:
   682                           	callstack 0
   683   000013                     ___flmul@a:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x12
   687   000013                     	ds	1
   688   000014                     vfpfcnvrt@convarg:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x13
   692   000014                     	ds	3
   693   000017                     ??___flmul:
   694                           
   695                           ; 1 bytes @ 0x16
   696   000017                     	ds	1
   697   000018                     vfpfcnvrt@c:
   698                           	callstack 0
   699   000018                     getHSVval@Sz:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x17
   703   000018                     	ds	1
   704   000019                     ?_vfprintf:
   705                           	callstack 0
   706   000019                     vfprintf@fp:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x18
   710   000019                     	ds	1
   711   00001A                     vfprintf@fmt:
   712                           	callstack 0
   713   00001A                     getHSVval@m:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x19
   717   00001A                     	ds	1
   718   00001B                     ___flmul@sign:
   719                           	callstack 0
   720   00001B                     vfprintf@ap:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x1A
   724   00001B                     	ds	1
   725   00001C                     vfprintf@cfmt:
   726                           	callstack 0
   727   00001C                     getHSVval@S:
   728                           	callstack 0
   729   00001C                     ___flmul@grs:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x1B
   733   00001C                     	ds	1
   734   00001D                     ?_sprintf:
   735                           	callstack 0
   736   00001D                     sprintf@s:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x1C
   740   00001D                     	ds	1
   741   00001E                     getHSVval@H:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x1D
   745   00001E                     	ds	1
   746   00001F                     sprintf@fmt:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x1E
   750   00001F                     	ds	1
   751   000020                     ___flmul@aexp:
   752                           	callstack 0
   753   000020                     getHSVval@temp_631:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x1F
   757   000020                     	ds	1
   758   000021                     ___flmul@bexp:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x20
   762   000021                     	ds	1
   763   000022                     ___flmul@prod:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x21
   767   000022                     	ds	2
   768   000024                     getHSVval@temp:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x23
   772   000024                     	ds	2
   773   000026                     ___flmul@temp:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x25
   777   000026                     	ds	2
   778   000028                     ?___fltol:
   779                           	callstack 0
   780   000028                     sprintf@ret:
   781                           	callstack 0
   782   000028                     getHSVval@temp_627:
   783                           	callstack 0
   784   000028                     ___fltol@f1:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x27
   788   000028                     	ds	2
   789   00002A                     sprintf@ap:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x29
   793   00002A                     	ds	1
   794   00002B                     sprintf@f:
   795                           	callstack 0
   796                           
   797                           ; 12 bytes @ 0x2A
   798   00002B                     	ds	1
   799   00002C                     ??___fltol:
   800   00002C                     getHSVval@temp_628:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x2B
   804   00002C                     	ds	4
   805   000030                     ___fltol@sign1:
   806                           	callstack 0
   807   000030                     getHSVval@temp_629:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x2F
   811   000030                     	ds	1
   812   000031                     ___fltol@exp1:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x30
   816   000031                     	ds	1
   817   000032                     scaleRGB@p:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x31
   821   000032                     	ds	1
   822   000033                     ??_scaleRGB:
   823                           
   824                           ; 1 bytes @ 0x32
   825   000033                     	ds	1
   826   000034                     getHSVval@temp_630:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x33
   830   000034                     	ds	3
   831   000037                     sendRGBCvalSerial4@col_val:
   832                           	callstack 0
   833   000037                     sendHSVvalSerial4@col_val:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x36
   837   000037                     	ds	1
   838   000038                     getHSVval@temp_626:
   839                           	callstack 0
   840   000038                     sendHSVvalSerial4@tempStr:
   841                           	callstack 0
   842   000038                     sendRGBCvalSerial4@tempStr:
   843                           	callstack 0
   844                           
   845                           ; 26 bytes @ 0x37
   846   000038                     	ds	4
   847   00003C                     getHSVval@M:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x3B
   851   00003C                     	ds	2
   852   00003E                     getHSVval@C:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x3D
   856   00003E                     	ds	20
   857   000052                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x51
   860   000052                     	ds	2
   861                           
   862 ;;
   863 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   864 ;;
   865 ;; *************** function _main *****************
   866 ;; Defined at:
   867 ;;		line 27 in file "main.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  motorR          9   15[BANK0 ] struct DC_motor
   872 ;;  motorL          9    6[BANK0 ] struct DC_motor
   873 ;;  measured_col    8   24[BANK0 ] struct RGBC_val
   874 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   875 ;;  PWMcycle        2    0        unsigned int 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   886 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;Total ram usage:       34 bytes
   890 ;; Hardware stack levels required when called: 7
   891 ;; This function calls:
   892 ;;		_Timer0_init
   893 ;;		_buggy_lights_init
   894 ;;		_color_click_init
   895 ;;		_getHSVval
   896 ;;		_getRGBCval
   897 ;;		_initDCmotorsPWM
   898 ;;		_initUSART4
   899 ;;		_scaleRGB
   900 ;;		_sendHSVvalSerial4
   901 ;;		_sendRGBCvalSerial4
   902 ;;		_toggle_tricolour_LED
   903 ;; This function is called by:
   904 ;;		Startup code after reset
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text0
   909   001DD0                     __ptext0:
   910                           	callstack 0
   911   001DD0                     _main:
   912                           	callstack 24
   913   001DD0                     
   914                           ;main.c: 28:     struct RGBC_val measured_colour;;main.c: 29:         measured_colour.R 
      +                          = 0;
   915   001DD0  0E00               	movlw	0
   916   001DD2  0100               	movlb	0	; () banked
   917   001DD4  6F9F               	movwf	(main@measured_colour+1)& (0+255),b
   918   001DD6  0E00               	movlw	0
   919   001DD8  6F9E               	movwf	main@measured_colour& (0+255),b
   920                           
   921                           ;main.c: 30:         measured_colour.G = 0;
   922   001DDA  0E00               	movlw	0
   923   001DDC  6FA1               	movwf	(main@measured_colour+3)& (0+255),b
   924   001DDE  0E00               	movlw	0
   925   001DE0  6FA0               	movwf	(main@measured_colour+2)& (0+255),b
   926                           
   927                           ;main.c: 31:         measured_colour.B = 0;
   928   001DE2  0E00               	movlw	0
   929   001DE4  6FA3               	movwf	(main@measured_colour+5)& (0+255),b
   930   001DE6  0E00               	movlw	0
   931   001DE8  6FA2               	movwf	(main@measured_colour+4)& (0+255),b
   932                           
   933                           ;main.c: 32:         measured_colour.C = 0;
   934   001DEA  0E00               	movlw	0
   935   001DEC  6FA5               	movwf	(main@measured_colour+7)& (0+255),b
   936   001DEE  0E00               	movlw	0
   937   001DF0  6FA4               	movwf	(main@measured_colour+6)& (0+255),b
   938                           
   939                           ;main.c: 34:     struct HSV_val HSV_colour;;main.c: 35:         HSV_colour.H = 0;
   940   001DF2  0E00               	movlw	0
   941   001DF4  6F87               	movwf	(main@HSV_colour+1)& (0+255),b
   942   001DF6  0E00               	movlw	0
   943   001DF8  6F86               	movwf	main@HSV_colour& (0+255),b
   944                           
   945                           ;main.c: 36:         HSV_colour.S = 0;
   946   001DFA  0E00               	movlw	0
   947   001DFC  6F89               	movwf	(main@HSV_colour+3)& (0+255),b
   948   001DFE  0E00               	movlw	0
   949   001E00  6F88               	movwf	(main@HSV_colour+2)& (0+255),b
   950                           
   951                           ;main.c: 37:         HSV_colour.V = 0;
   952   001E02  0E00               	movlw	0
   953   001E04  6F8B               	movwf	(main@HSV_colour+5)& (0+255),b
   954   001E06  0E00               	movlw	0
   955   001E08  6F8A               	movwf	(main@HSV_colour+4)& (0+255),b
   956                           
   957                           ;main.c: 41:     struct DC_motor motorL, motorR;;main.c: 42:         motorL.power = 0;
   958   001E0A  0E00               	movlw	0
   959   001E0C  6F8C               	movwf	main@motorL& (0+255),b
   960                           
   961                           ;main.c: 43:         motorL.direction = 1;
   962   001E0E  0E01               	movlw	1
   963   001E10  6F8D               	movwf	(main@motorL+1)& (0+255),b
   964                           
   965                           ;main.c: 44:         motorL.brakemode = 1;
   966   001E12  0E01               	movlw	1
   967   001E14  6F8E               	movwf	(main@motorL+2)& (0+255),b
   968   001E16                     
   969                           ; BSR set to: 0
   970                           ;main.c: 45:         motorL.PWMperiod = PWMcycle;
   971   001E16  0E00               	movlw	0
   972   001E18  6F90               	movwf	(main@motorL+4)& (0+255),b
   973   001E1A  0E63               	movlw	99
   974   001E1C  6F8F               	movwf	(main@motorL+3)& (0+255),b
   975   001E1E                     
   976                           ; BSR set to: 0
   977                           ;main.c: 46:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   978   001E1E  0EAA               	movlw	170
   979   001E20  6F91               	movwf	(main@motorL+5)& (0+255),b
   980   001E22  0E0F               	movlw	15
   981   001E24  6F92               	movwf	(main@motorL+6)& (0+255),b
   982   001E26                     
   983                           ; BSR set to: 0
   984                           ;main.c: 47:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   985   001E26  0EA6               	movlw	166
   986   001E28  6F93               	movwf	(main@motorL+7)& (0+255),b
   987   001E2A  0E0F               	movlw	15
   988   001E2C  6F94               	movwf	(main@motorL+8)& (0+255),b
   989                           
   990                           ;main.c: 48:         motorR.power = 0;
   991   001E2E  0E00               	movlw	0
   992   001E30  6F95               	movwf	main@motorR& (0+255),b
   993                           
   994                           ;main.c: 49:         motorR.direction = 1;
   995   001E32  0E01               	movlw	1
   996   001E34  6F96               	movwf	(main@motorR+1)& (0+255),b
   997                           
   998                           ;main.c: 50:         motorR.brakemode = 1;
   999   001E36  0E01               	movlw	1
  1000   001E38  6F97               	movwf	(main@motorR+2)& (0+255),b
  1001   001E3A                     
  1002                           ; BSR set to: 0
  1003                           ;main.c: 51:         motorR.PWMperiod = PWMcycle;
  1004   001E3A  0E00               	movlw	0
  1005   001E3C  6F99               	movwf	(main@motorR+4)& (0+255),b
  1006   001E3E  0E63               	movlw	99
  1007   001E40  6F98               	movwf	(main@motorR+3)& (0+255),b
  1008   001E42                     
  1009                           ; BSR set to: 0
  1010                           ;main.c: 52:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1011   001E42  0E25               	movlw	37
  1012   001E44  6F9A               	movwf	(main@motorR+5)& (0+255),b
  1013   001E46  0E0F               	movlw	15
  1014   001E48  6F9B               	movwf	(main@motorR+6)& (0+255),b
  1015   001E4A                     
  1016                           ; BSR set to: 0
  1017                           ;main.c: 53:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1018   001E4A  0E21               	movlw	33
  1019   001E4C  6F9C               	movwf	(main@motorR+7)& (0+255),b
  1020   001E4E  0E0F               	movlw	15
  1021   001E50  6F9D               	movwf	(main@motorR+8)& (0+255),b
  1022   001E52                     
  1023                           ; BSR set to: 0
  1024                           ;main.c: 55:     initDCmotorsPWM(PWMcycle);
  1025   001E52  0E00               	movlw	0
  1026   001E54  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1027   001E56  0E63               	movlw	99
  1028   001E58  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1029   001E5A  EC35  F012         	call	_initDCmotorsPWM	;wreg free
  1030                           
  1031                           ;main.c: 56:     buggy_lights_init();
  1032   001E5E  ECCE  F015         	call	_buggy_lights_init	;wreg free
  1033   001E62                     
  1034                           ;main.c: 57:     color_click_init();
  1035   001E62  EC84  F015         	call	_color_click_init	;wreg free
  1036   001E66                     
  1037                           ;main.c: 58:     initUSART4();
  1038   001E66  EC30  F016         	call	_initUSART4	;wreg free
  1039   001E6A                     
  1040                           ;main.c: 59:     Timer0_init();
  1041   001E6A  EC0E  F016         	call	_Timer0_init	;wreg free
  1042   001E6E                     
  1043                           ;main.c: 63:         TRISDbits.TRISD7 = 0;
  1044   001E6E  9E84               	bcf	132,7,c	;volatile
  1045   001E70                     
  1046                           ;main.c: 64:         TRISHbits.TRISH3 = 0;
  1047   001E70  9688               	bcf	136,3,c	;volatile
  1048   001E72                     
  1049                           ;main.c: 66:         LATDbits.LATD7 = 0;
  1050   001E72  9E7C               	bcf	124,7,c	;volatile
  1051   001E74                     
  1052                           ;main.c: 67:         LATHbits.LATH3 = 0;
  1053   001E74  9680               	bcf	128,3,c	;volatile
  1054   001E76                     
  1055                           ;main.c: 71:         TRISFbits.TRISF2 = 1;
  1056   001E76  8486               	bsf	134,2,c	;volatile
  1057   001E78                     
  1058                           ;main.c: 72:         TRISFbits.TRISF3 = 1;
  1059   001E78  8686               	bsf	134,3,c	;volatile
  1060   001E7A                     
  1061                           ;main.c: 74:         ANSELFbits.ANSELF2 = 0;
  1062   001E7A  010E               	movlb	14	; () banked
  1063   001E7C  95B4               	bcf	180,2,b	;volatile
  1064   001E7E                     
  1065                           ; BSR set to: 14
  1066                           ;main.c: 75:         ANSELFbits.ANSELF3 = 0;
  1067   001E7E  97B4               	bcf	180,3,b	;volatile
  1068                           
  1069                           ;main.c: 80:     LATHbits.LATH3 = !LATHbits.LATH3;
  1070   001E80  A680               	btfss	128,3,c	;volatile
  1071   001E82  EF45  F00F         	goto	u2911
  1072   001E86  EF49  F00F         	goto	u2910
  1073   001E8A                     u2911:
  1074   001E8A  6A52               	clrf	??_main^0,c
  1075   001E8C  2A52               	incf	??_main^0,f,c
  1076   001E8E  EF4A  F00F         	goto	u2928
  1077   001E92                     u2910:
  1078   001E92  6A52               	clrf	??_main^0,c
  1079   001E94                     u2928:
  1080   001E94  4652               	rlncf	??_main^0,f,c
  1081   001E96  4652               	rlncf	??_main^0,f,c
  1082   001E98  4652               	rlncf	??_main^0,f,c
  1083   001E9A  5080               	movf	128,w,c	;volatile
  1084   001E9C  1852               	xorwf	??_main^0,w,c
  1085   001E9E  0BF7               	andlw	-9
  1086   001EA0  1852               	xorwf	??_main^0,w,c
  1087   001EA2  6E80               	movwf	128,c	;volatile
  1088   001EA4                     
  1089                           ;main.c: 81:     toggle_tricolour_LED();
  1090   001EA4  EC68  F010         	call	_toggle_tricolour_LED	;wreg free
  1091   001EA8                     l3942:
  1092                           
  1093                           ;main.c: 86:         getRGBCval(&measured_colour);
  1094   001EA8  0E9E               	movlw	low main@measured_colour
  1095   001EAA  6E0C               	movwf	getRGBCval@p^0,c
  1096   001EAC  ECDE  F013         	call	_getRGBCval	;wreg free
  1097   001EB0                     
  1098                           ;main.c: 87:         scaleRGB(&measured_colour);
  1099   001EB0  0E9E               	movlw	low main@measured_colour
  1100   001EB2  6E32               	movwf	scaleRGB@p^0,c
  1101   001EB4  ECFD  F00F         	call	_scaleRGB	;wreg free
  1102   001EB8                     
  1103                           ;main.c: 91:         getHSVval(&HSV_colour, &measured_colour);
  1104   001EB8  0E86               	movlw	low main@HSV_colour
  1105   001EBA  6E0E               	movwf	getHSVval@p1^0,c
  1106   001EBC  0E9E               	movlw	low main@measured_colour
  1107   001EBE  6E0F               	movwf	getHSVval@p2^0,c
  1108   001EC0  EC0D  F007         	call	_getHSVval	;wreg free
  1109   001EC4                     
  1110                           ;main.c: 92:         sendRGBCvalSerial4(&measured_colour);
  1111   001EC4  0E9E               	movlw	low main@measured_colour
  1112   001EC6  6E37               	movwf	sendRGBCvalSerial4@col_val^0,c
  1113   001EC8  EC84  F013         	call	_sendRGBCvalSerial4	;wreg free
  1114   001ECC                     
  1115                           ;main.c: 93:         sendHSVvalSerial4(&HSV_colour);
  1116   001ECC  0E86               	movlw	low main@HSV_colour
  1117   001ECE  6E37               	movwf	sendHSVvalSerial4@col_val^0,c
  1118   001ED0  ECFD  F014         	call	_sendHSVvalSerial4	;wreg free
  1119   001ED4                     
  1120                           ;main.c: 94:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1121   001ED4  0E52               	movlw	82
  1122   001ED6  6E53               	movwf	(??_main+1)^0,c
  1123   001ED8  0E2B               	movlw	43
  1124   001EDA  6E52               	movwf	??_main^0,c
  1125   001EDC  0E00               	movlw	0
  1126   001EDE                     u3007:
  1127   001EDE  2EE8               	decfsz	wreg,f,c
  1128   001EE0  D7FE               	bra	u3007
  1129   001EE2  2E52               	decfsz	??_main^0,f,c
  1130   001EE4  D7FC               	bra	u3007
  1131   001EE6  2E53               	decfsz	(??_main+1)^0,f,c
  1132   001EE8  D7FA               	bra	u3007
  1133   001EEA  D000               	nop2	
  1134   001EEC  EF54  F00F         	goto	l3942
  1135   001EF0  EF1A  F000         	goto	start
  1136   001EF4                     __end_of_main:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _toggle_tricolour_LED *****************
  1140 ;; Defined at:
  1141 ;;		line 86 in file "buggy_lights.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;Total ram usage:        1 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text1
  1170   0020D0                     __ptext1:
  1171                           	callstack 0
  1172   0020D0                     _toggle_tricolour_LED:
  1173                           	callstack 29
  1174   0020D0                     
  1175                           ;buggy_lights.c: 91:             LATGbits.LATG1 = !LATGbits.LATG1;
  1176   0020D0  A27F               	btfss	127,1,c	;volatile
  1177   0020D2  EF6D  F010         	goto	u2611
  1178   0020D6  EF71  F010         	goto	u2610
  1179   0020DA                     u2611:
  1180   0020DA  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1181   0020DC  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1182   0020DE  EF72  F010         	goto	u2628
  1183   0020E2                     u2610:
  1184   0020E2  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1185   0020E4                     u2628:
  1186   0020E4  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1187   0020E6  507F               	movf	127,w,c	;volatile
  1188   0020E8  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1189   0020EA  0BFD               	andlw	-3
  1190   0020EC  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1191   0020EE  6E7F               	movwf	127,c	;volatile
  1192                           
  1193                           ;buggy_lights.c: 92:             LATAbits.LATA4 = !LATAbits.LATA4;
  1194   0020F0  A879               	btfss	121,4,c	;volatile
  1195   0020F2  EF7D  F010         	goto	u2631
  1196   0020F6  EF81  F010         	goto	u2630
  1197   0020FA                     u2631:
  1198   0020FA  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1199   0020FC  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1200   0020FE  EF82  F010         	goto	u2648
  1201   002102                     u2630:
  1202   002102  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1203   002104                     u2648:
  1204   002104  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1205   002106  5079               	movf	121,w,c	;volatile
  1206   002108  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1207   00210A  0BEF               	andlw	-17
  1208   00210C  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1209   00210E  6E79               	movwf	121,c	;volatile
  1210                           
  1211                           ;buggy_lights.c: 93:             LATFbits.LATF7 = !LATFbits.LATF7;
  1212   002110  AE7E               	btfss	126,7,c	;volatile
  1213   002112  EF8D  F010         	goto	u2651
  1214   002116  EF91  F010         	goto	u2650
  1215   00211A                     u2651:
  1216   00211A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1217   00211C  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1218   00211E  EF92  F010         	goto	u2668
  1219   002122                     u2650:
  1220   002122  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1221   002124                     u2668:
  1222   002124  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1223   002126  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1224   002128  507E               	movf	126,w,c	;volatile
  1225   00212A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1226   00212C  0B7F               	andlw	-129
  1227   00212E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1228   002130  6E7E               	movwf	126,c	;volatile
  1229                           
  1230                           ;buggy_lights.c: 97:             LATGbits.LATG0 = !LATGbits.LATG0;
  1231   002132  A07F               	btfss	127,0,c	;volatile
  1232   002134  EF9E  F010         	goto	u2671
  1233   002138  EFA2  F010         	goto	u2670
  1234   00213C                     u2671:
  1235   00213C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1236   00213E  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1237   002140  EFA3  F010         	goto	u2688
  1238   002144                     u2670:
  1239   002144  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1240   002146                     u2688:
  1241   002146  507F               	movf	127,w,c	;volatile
  1242   002148  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1243   00214A  0BFE               	andlw	-2
  1244   00214C  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1245   00214E  6E7F               	movwf	127,c	;volatile
  1246                           
  1247                           ;buggy_lights.c: 98:             LATEbits.LATE7 = !LATEbits.LATE7;
  1248   002150  AE7D               	btfss	125,7,c	;volatile
  1249   002152  EFAD  F010         	goto	u2691
  1250   002156  EFB1  F010         	goto	u2690
  1251   00215A                     u2691:
  1252   00215A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1253   00215C  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1254   00215E  EFB2  F010         	goto	u2708
  1255   002162                     u2690:
  1256   002162  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1257   002164                     u2708:
  1258   002164  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1259   002166  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1260   002168  507D               	movf	125,w,c	;volatile
  1261   00216A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1262   00216C  0B7F               	andlw	-129
  1263   00216E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1264   002170  6E7D               	movwf	125,c	;volatile
  1265                           
  1266                           ;buggy_lights.c: 99:             LATAbits.LATA3 = !LATAbits.LATA3;
  1267   002172  A679               	btfss	121,3,c	;volatile
  1268   002174  EFBE  F010         	goto	u2711
  1269   002178  EFC2  F010         	goto	u2710
  1270   00217C                     u2711:
  1271   00217C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1272   00217E  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1273   002180  EFC3  F010         	goto	u2728
  1274   002184                     u2710:
  1275   002184  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1276   002186                     u2728:
  1277   002186  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1278   002188  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1279   00218A  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1280   00218C  5079               	movf	121,w,c	;volatile
  1281   00218E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1282   002190  0BF7               	andlw	-9
  1283   002192  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1284   002194  6E79               	movwf	121,c	;volatile
  1285   002196  0012               	return		;funcret
  1286   002198                     __end_of_toggle_tricolour_LED:
  1287                           	callstack 0
  1288                           
  1289 ;; *************** function _sendRGBCvalSerial4 *****************
  1290 ;; Defined at:
  1291 ;;		line 62 in file "serial.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  col_val         1   54[COMRAM] PTR struct RGBC_val
  1294 ;;		 -> main@measured_colour(8), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  tempStr        26   55[COMRAM] unsigned char [26]
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1306 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;Total ram usage:       27 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 6
  1313 ;; This function calls:
  1314 ;;		_sendStringSerial4
  1315 ;;		_sprintf
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text2
  1322   002708                     __ptext2:
  1323                           	callstack 0
  1324   002708                     _sendRGBCvalSerial4:
  1325                           	callstack 24
  1326   002708                     
  1327                           ;serial.c: 63:     char tempStr[26];;serial.c: 65:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1328   002708  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1329   00270A  6E1D               	movwf	sprintf@s^0,c
  1330   00270C  6A1E               	clrf	(sprintf@s+1)^0,c
  1331   00270E  0E01               	movlw	low STR_5
  1332   002710  6E1F               	movwf	sprintf@fmt^0,c
  1333   002712  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1334   002714  6ED9               	movwf	fsr2l,c
  1335   002716  6ADA               	clrf	fsr2h,c
  1336   002718  CFDE F020          	movff	postinc2,?_sprintf+3
  1337   00271C  CFDD F021          	movff	postdec2,?_sprintf+4
  1338   002720  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1339   002722  6ED9               	movwf	fsr2l,c
  1340   002724  6ADA               	clrf	fsr2h,c
  1341   002726  0E02               	movlw	2
  1342   002728  26D9               	addwf	fsr2l,f,c
  1343   00272A  CFDE F022          	movff	postinc2,?_sprintf+5
  1344   00272E  CFDD F023          	movff	postdec2,?_sprintf+6
  1345   002732  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1346   002734  6ED9               	movwf	fsr2l,c
  1347   002736  6ADA               	clrf	fsr2h,c
  1348   002738  0E04               	movlw	4
  1349   00273A  26D9               	addwf	fsr2l,f,c
  1350   00273C  CFDE F024          	movff	postinc2,?_sprintf+7
  1351   002740  CFDD F025          	movff	postdec2,?_sprintf+8
  1352   002744  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1353   002746  6ED9               	movwf	fsr2l,c
  1354   002748  6ADA               	clrf	fsr2h,c
  1355   00274A  0E06               	movlw	6
  1356   00274C  26D9               	addwf	fsr2l,f,c
  1357   00274E  CFDE F026          	movff	postinc2,?_sprintf+9
  1358   002752  CFDD F027          	movff	postdec2,?_sprintf+10
  1359   002756  EC23  F015         	call	_sprintf	;wreg free
  1360   00275A                     
  1361                           ;serial.c: 66:     sendStringSerial4(tempStr);
  1362   00275A  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1363   00275C  6E02               	movwf	sendStringSerial4@string^0,c
  1364   00275E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1365   002760  EC53  F013         	call	_sendStringSerial4	;wreg free
  1366   002764  0012               	return		;funcret
  1367   002766                     __end_of_sendRGBCvalSerial4:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _sendHSVvalSerial4 *****************
  1371 ;; Defined at:
  1372 ;;		line 70 in file "serial.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  col_val         1   54[COMRAM] PTR struct HSV_val
  1375 ;;		 -> main@HSV_colour(6), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  tempStr        21   55[COMRAM] unsigned char [21]
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;Total ram usage:       22 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 6
  1394 ;; This function calls:
  1395 ;;		_sendStringSerial4
  1396 ;;		_sprintf
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text3
  1403   0029FA                     __ptext3:
  1404                           	callstack 0
  1405   0029FA                     _sendHSVvalSerial4:
  1406                           	callstack 24
  1407   0029FA                     
  1408                           ;serial.c: 71:     char tempStr[21];;serial.c: 73:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  1409   0029FA  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1410   0029FC  6E1D               	movwf	sprintf@s^0,c
  1411   0029FE  6A1E               	clrf	(sprintf@s+1)^0,c
  1412   002A00  0E04               	movlw	low (STR_5+3)
  1413   002A02  6E1F               	movwf	sprintf@fmt^0,c
  1414   002A04  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1415   002A06  6ED9               	movwf	fsr2l,c
  1416   002A08  6ADA               	clrf	fsr2h,c
  1417   002A0A  CFDE F020          	movff	postinc2,?_sprintf+3
  1418   002A0E  CFDD F021          	movff	postdec2,?_sprintf+4
  1419   002A12  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1420   002A14  6ED9               	movwf	fsr2l,c
  1421   002A16  6ADA               	clrf	fsr2h,c
  1422   002A18  0E02               	movlw	2
  1423   002A1A  26D9               	addwf	fsr2l,f,c
  1424   002A1C  CFDE F022          	movff	postinc2,?_sprintf+5
  1425   002A20  CFDD F023          	movff	postdec2,?_sprintf+6
  1426   002A24  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1427   002A26  6ED9               	movwf	fsr2l,c
  1428   002A28  6ADA               	clrf	fsr2h,c
  1429   002A2A  0E04               	movlw	4
  1430   002A2C  26D9               	addwf	fsr2l,f,c
  1431   002A2E  CFDE F024          	movff	postinc2,?_sprintf+7
  1432   002A32  CFDD F025          	movff	postdec2,?_sprintf+8
  1433   002A36  EC23  F015         	call	_sprintf	;wreg free
  1434   002A3A                     
  1435                           ;serial.c: 74:     sendStringSerial4(tempStr);
  1436   002A3A  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1437   002A3C  6E02               	movwf	sendStringSerial4@string^0,c
  1438   002A3E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1439   002A40  EC53  F013         	call	_sendStringSerial4	;wreg free
  1440   002A44  0012               	return		;funcret
  1441   002A46                     __end_of_sendHSVvalSerial4:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _sprintf *****************
  1445 ;; Defined at:
  1446 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  s               2   28[COMRAM] PTR unsigned char 
  1449 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1450 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1451 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  f              12   42[COMRAM] struct _IO_FILE
  1454 ;;  ret             2   39[COMRAM] int 
  1455 ;;  ap              1   41[COMRAM] PTR void [1]
  1456 ;;		 -> ?_sprintf(2), 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2   28[COMRAM] int 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1466 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;Total ram usage:       26 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 5
  1473 ;; This function calls:
  1474 ;;		_vfprintf
  1475 ;; This function is called by:
  1476 ;;		_sendRGBCvalSerial4
  1477 ;;		_sendHSVvalSerial4
  1478 ;;		_sendIntSerial4
  1479 ;;		_sendArrayCharSerial4
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text4
  1484   002A46                     __ptext4:
  1485                           	callstack 0
  1486   002A46                     _sprintf:
  1487                           	callstack 24
  1488   002A46  0E20               	movlw	low (?_sprintf+3)
  1489   002A48  6E2A               	movwf	sprintf@ap^0,c
  1490   002A4A  C01D  F02B         	movff	sprintf@s,sprintf@f
  1491   002A4E  C01E  F02C         	movff	sprintf@s+1,sprintf@f+1
  1492   002A52  0E00               	movlw	0
  1493   002A54  6E2F               	movwf	(sprintf@f+4)^0,c
  1494   002A56  0E00               	movlw	0
  1495   002A58  6E2E               	movwf	(sprintf@f+3)^0,c
  1496   002A5A  0E00               	movlw	0
  1497   002A5C  6E36               	movwf	(sprintf@f+11)^0,c
  1498   002A5E  0E00               	movlw	0
  1499   002A60  6E35               	movwf	(sprintf@f+10)^0,c
  1500   002A62  0E2B               	movlw	low sprintf@f
  1501   002A64  6E19               	movwf	vfprintf@fp^0,c
  1502   002A66  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  1503   002A6A  0E2A               	movlw	low sprintf@ap
  1504   002A6C  6E1B               	movwf	vfprintf@ap^0,c
  1505   002A6E  ECB3  F013         	call	_vfprintf	;wreg free
  1506   002A72  C019  F028         	movff	?_vfprintf,sprintf@ret
  1507   002A76  C01A  F029         	movff	?_vfprintf+1,sprintf@ret+1
  1508   002A7A  502E               	movf	(sprintf@f+3)^0,w,c
  1509   002A7C  241D               	addwf	sprintf@s^0,w,c
  1510   002A7E  6ED9               	movwf	fsr2l,c
  1511   002A80  502F               	movf	(sprintf@f+4)^0,w,c
  1512   002A82  201E               	addwfc	(sprintf@s+1)^0,w,c
  1513   002A84  6EDA               	movwf	fsr2h,c
  1514   002A86  6ADF               	clrf	indf2,c
  1515   002A88  C028  F01D         	movff	sprintf@ret,?_sprintf
  1516   002A8C  C029  F01E         	movff	sprintf@ret+1,?_sprintf+1
  1517   002A90  0012               	return		;funcret
  1518   002A92                     __end_of_sprintf:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _vfprintf *****************
  1522 ;; Defined at:
  1523 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1526 ;;		 -> sprintf@f(12), 
  1527 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1528 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1529 ;;  ap              1   26[COMRAM] PTR PTR void 
  1530 ;;		 -> sprintf@ap(1), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1533 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2   24[COMRAM] int 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1543 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;Total ram usage:        4 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 4
  1550 ;; This function calls:
  1551 ;;		_vfpfcnvrt
  1552 ;; This function is called by:
  1553 ;;		_sprintf
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text5
  1558   002766                     __ptext5:
  1559                           	callstack 0
  1560   002766                     _vfprintf:
  1561                           	callstack 24
  1562   002766                     
  1563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1564   002766  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1565   00276A                     
  1566                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1567   00276A  0E00               	movlw	0
  1568   00276C  0100               	movlb	0	; () banked
  1569   00276E  6F81               	movwf	(_nout+1)& (0+255),b
  1570   002770  0E00               	movlw	0
  1571   002772  6F80               	movwf	_nout& (0+255),b
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1574   002774  EFC9  F013         	goto	l3190
  1575   002778                     l3188:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1579   002778  C019  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1580   00277C  0E1C               	movlw	low vfprintf@cfmt
  1581   00277E  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1582   002780  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1583   002784  EC88  F00C         	call	_vfpfcnvrt	;wreg free
  1584   002788  500B               	movf	?_vfpfcnvrt^0,w,c
  1585   00278A  0100               	movlb	0	; () banked
  1586   00278C  2780               	addwf	_nout& (0+255),f,b
  1587   00278E  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1588   002790  2381               	addwfc	(_nout+1)& (0+255),f,b
  1589   002792                     l3190:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1593   002792  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1594   002796                     	if	1	;There is more than 1 active tblptr byte
  1595   002796  0E0E               	movlw	high __smallconst
  1596   002798  6EF7               	movwf	tblptrh,c
  1597   00279A                     	endif
  1598   00279A                     	if	0	;tblptru may be non-zero
  1599   00279A                     	endif
  1600   00279A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1601   00279A  0E00               	movlw	low (__smallconst shr (0+16))
  1602   00279C  6EF8               	movwf	tblptru,c
  1603   00279E                     	endif
  1604   00279E  0008               	tblrd		*
  1605   0027A0  50F5               	movf	tablat,w,c
  1606   0027A2  0900               	iorlw	0
  1607   0027A4  A4D8               	btfss	status,2,c
  1608   0027A6  EFD7  F013         	goto	u2161
  1609   0027AA  EFD9  F013         	goto	u2160
  1610   0027AE                     u2161:
  1611   0027AE  EFBC  F013         	goto	l3188
  1612   0027B2                     u2160:
  1613   0027B2                     
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1616   0027B2  C080  F019         	movff	_nout,?_vfprintf
  1617   0027B6  C081  F01A         	movff	_nout+1,?_vfprintf+1
  1618   0027BA                     
  1619                           ; BSR set to: 0
  1620   0027BA  0012               	return		;funcret
  1621   0027BC                     __end_of_vfprintf:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _vfpfcnvrt *****************
  1625 ;; Defined at:
  1626 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1629 ;;		 -> sprintf@f(12), 
  1630 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1631 ;;		 -> vfprintf@cfmt(1), 
  1632 ;;  ap              1   12[COMRAM] PTR PTR void 
  1633 ;;		 -> sprintf@ap(1), 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  convarg         4   19[COMRAM] struct .
  1636 ;;  cnt             2   16[COMRAM] int 
  1637 ;;  c               1   23[COMRAM] unsigned char 
  1638 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1639 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1640 ;;  done            1   15[COMRAM] _Bool 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   10[COMRAM] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:       14 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 3
  1657 ;; This function calls:
  1658 ;;		___awdiv
  1659 ;;		___awmod
  1660 ;;		___lwdiv
  1661 ;;		___lwmod
  1662 ;;		_abs
  1663 ;;		_fputc
  1664 ;; This function is called by:
  1665 ;;		_vfprintf
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text6
  1670   001910                     __ptext6:
  1671                           	callstack 0
  1672   001910                     _vfpfcnvrt:
  1673                           	callstack 24
  1674   001910                     
  1675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1676   001910  0E00               	movlw	0
  1677   001912  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1678   001914  0E00               	movlw	0
  1679   001916  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1680   001918                     
  1681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1682   001918  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1683   00191A  6ED9               	movwf	fsr2l,c
  1684   00191C  6ADA               	clrf	fsr2h,c
  1685   00191E  CFDF FFF6          	movff	indf2,tblptrl
  1686   001922                     	if	1	;There is more than 1 active tblptr byte
  1687   001922  0E0E               	movlw	high __smallconst
  1688   001924  6EF7               	movwf	tblptrh,c
  1689   001926                     	endif
  1690   001926                     	if	0	;tblptru may be non-zero
  1691   001926                     	endif
  1692   001926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1693   001926  0E00               	movlw	low (__smallconst shr (0+16))
  1694   001928  6EF8               	movwf	tblptru,c
  1695   00192A                     	endif
  1696   00192A  0008               	tblrd		*
  1697   00192C  50F5               	movf	tablat,w,c
  1698   00192E  0A25               	xorlw	37
  1699   001930  A4D8               	btfss	status,2,c
  1700   001932  EF9D  F00C         	goto	u1971
  1701   001936  EF9F  F00C         	goto	u1970
  1702   00193A                     u1971:
  1703   00193A  EFF4  F00D         	goto	l3078
  1704   00193E                     u1970:
  1705   00193E                     
  1706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1707   00193E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1708   001940  6ED9               	movwf	fsr2l,c
  1709   001942  6ADA               	clrf	fsr2h,c
  1710   001944  2ADF               	incf	indf2,f,c
  1711   001946                     
  1712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1713   001946  0E00               	movlw	0
  1714   001948  0100               	movlb	0	; () banked
  1715   00194A  6F83               	movwf	(_width+1)& (0+255),b
  1716   00194C  0E00               	movlw	0
  1717   00194E  6F82               	movwf	_width& (0+255),b
  1718   001950  C082  F05A         	movff	_width,_flags
  1719   001954                     
  1720                           ; BSR set to: 0
  1721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1722   001954  6984               	setf	_prec& (0+255),b
  1723   001956  6985               	setf	(_prec+1)& (0+255),b
  1724   001958                     
  1725                           ; BSR set to: 0
  1726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1727   001958  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1728   00195A  6ED9               	movwf	fsr2l,c
  1729   00195C  6ADA               	clrf	fsr2h,c
  1730   00195E  50DF               	movf	indf2,w,c
  1731   001960  6E13               	movwf	vfpfcnvrt@cp^0,c
  1732   001962                     
  1733                           ; BSR set to: 0
  1734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1735   001962  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1736   001966                     	if	1	;There is more than 1 active tblptr byte
  1737   001966  0E0E               	movlw	high __smallconst
  1738   001968  6EF7               	movwf	tblptrh,c
  1739   00196A                     	endif
  1740   00196A                     	if	0	;tblptru may be non-zero
  1741   00196A                     	endif
  1742   00196A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1743   00196A  0E00               	movlw	low (__smallconst shr (0+16))
  1744   00196C  6EF8               	movwf	tblptru,c
  1745   00196E                     	endif
  1746   00196E  0008               	tblrd		*
  1747   001970  50F5               	movf	tablat,w,c
  1748   001972  0A64               	xorlw	100
  1749   001974  B4D8               	btfsc	status,2,c
  1750   001976  EFBF  F00C         	goto	u1981
  1751   00197A  EFC1  F00C         	goto	u1980
  1752   00197E                     u1981:
  1753   00197E  EFD1  F00C         	goto	l3014
  1754   001982                     u1980:
  1755   001982                     
  1756                           ; BSR set to: 0
  1757   001982  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1758   001986                     	if	1	;There is more than 1 active tblptr byte
  1759   001986  0E0E               	movlw	high __smallconst
  1760   001988  6EF7               	movwf	tblptrh,c
  1761   00198A                     	endif
  1762   00198A                     	if	0	;tblptru may be non-zero
  1763   00198A                     	endif
  1764   00198A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1765   00198A  0E00               	movlw	low (__smallconst shr (0+16))
  1766   00198C  6EF8               	movwf	tblptru,c
  1767   00198E                     	endif
  1768   00198E  0008               	tblrd		*
  1769   001990  50F5               	movf	tablat,w,c
  1770   001992  0A69               	xorlw	105
  1771   001994  A4D8               	btfss	status,2,c
  1772   001996  EFCF  F00C         	goto	u1991
  1773   00199A  EFD1  F00C         	goto	u1990
  1774   00199E                     u1991:
  1775   00199E  EF5F  F00D         	goto	l3044
  1776   0019A2                     u1990:
  1777   0019A2                     l3014:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1781   0019A2  500D               	movf	vfpfcnvrt@ap^0,w,c
  1782   0019A4  6ED9               	movwf	fsr2l,c
  1783   0019A6  6ADA               	clrf	fsr2h,c
  1784   0019A8  0E02               	movlw	2
  1785   0019AA  26DF               	addwf	indf2,f,c
  1786   0019AC  5CDF               	subwf	indf2,w,c
  1787   0019AE  6ED9               	movwf	fsr2l,c
  1788   0019B0  6ADA               	clrf	fsr2h,c
  1789   0019B2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1790   0019B6  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1791   0019BA                     
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1794   0019BA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1795   0019BC  6ED9               	movwf	fsr2l,c
  1796   0019BE  6ADA               	clrf	fsr2h,c
  1797   0019C0  2813               	incf	vfpfcnvrt@cp^0,w,c
  1798   0019C2  6EDF               	movwf	indf2,c
  1799   0019C4                     
  1800                           ; BSR set to: 0
  1801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1802   0019C4  0E20               	movlw	32
  1803   0019C6  6E18               	movwf	vfpfcnvrt@c^0,c
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1806   0019C8  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1807   0019CA  EFE9  F00C         	goto	u2001
  1808   0019CE  EFEC  F00C         	goto	u2000
  1809   0019D2                     u2001:
  1810   0019D2  0E01               	movlw	1
  1811   0019D4  EFED  F00C         	goto	u2010
  1812   0019D8                     u2000:
  1813   0019D8  0E00               	movlw	0
  1814   0019DA                     u2010:
  1815   0019DA  6E10               	movwf	vfpfcnvrt@done^0,c
  1816   0019DC                     l3020:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1819   0019DC  0618               	decf	vfpfcnvrt@c^0,f,c
  1820   0019DE  5018               	movf	vfpfcnvrt@c^0,w,c
  1821   0019E0  0F60               	addlw	low _dbuf
  1822   0019E2  6ED9               	movwf	fsr2l,c
  1823   0019E4  6ADA               	clrf	fsr2h,c
  1824   0019E6  C014  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1825   0019EA  C015  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1826   0019EE  0E00               	movlw	0
  1827   0019F0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1828   0019F2  0E0A               	movlw	10
  1829   0019F4  6E03               	movwf	___awmod@divisor^0,c
  1830   0019F6  EC8B  F011         	call	___awmod	;wreg free
  1831   0019FA  C001  F007         	movff	?___awmod,abs@a
  1832   0019FE  C002  F008         	movff	?___awmod+1,abs@a+1
  1833   001A02  EC6A  F015         	call	_abs	;wreg free
  1834   001A06  5007               	movf	?_abs^0,w,c
  1835   001A08  0F30               	addlw	48
  1836   001A0A  6EDF               	movwf	indf2,c
  1837   001A0C                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1839   001A0C  C014  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1840   001A10  C015  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1841   001A14  0E00               	movlw	0
  1842   001A16  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1843   001A18  0E0A               	movlw	10
  1844   001A1A  6E03               	movwf	___awdiv@divisor^0,c
  1845   001A1C  ECCC  F010         	call	___awdiv	;wreg free
  1846   001A20  C001  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1847   001A24  C002  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1848   001A28                     
  1849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1850   001A28  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1851   001A2A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1852   001A2C                     
  1853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1854   001A2C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1855   001A2E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1856   001A30  B4D8               	btfsc	status,2,c
  1857   001A32  EF1D  F00D         	goto	u2021
  1858   001A36  EF1F  F00D         	goto	u2020
  1859   001A3A                     u2021:
  1860   001A3A  EF27  F00D         	goto	l3030
  1861   001A3E                     u2020:
  1862   001A3E  5018               	movf	vfpfcnvrt@c^0,w,c
  1863   001A40  A4D8               	btfss	status,2,c
  1864   001A42  EF25  F00D         	goto	u2031
  1865   001A46  EF27  F00D         	goto	u2030
  1866   001A4A                     u2031:
  1867   001A4A  EFEE  F00C         	goto	l3020
  1868   001A4E                     u2030:
  1869   001A4E                     l3030:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1872   001A4E  5018               	movf	vfpfcnvrt@c^0,w,c
  1873   001A50  B4D8               	btfsc	status,2,c
  1874   001A52  EF2D  F00D         	goto	u2041
  1875   001A56  EF2F  F00D         	goto	u2040
  1876   001A5A                     u2041:
  1877   001A5A  EF50  F00D         	goto	l3042
  1878   001A5E                     u2040:
  1879   001A5E  5010               	movf	vfpfcnvrt@done^0,w,c
  1880   001A60  B4D8               	btfsc	status,2,c
  1881   001A62  EF35  F00D         	goto	u2051
  1882   001A66  EF37  F00D         	goto	u2050
  1883   001A6A                     u2051:
  1884   001A6A  EF50  F00D         	goto	l3042
  1885   001A6E                     u2050:
  1886   001A6E                     
  1887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1888   001A6E  0618               	decf	vfpfcnvrt@c^0,f,c
  1889   001A70  5018               	movf	vfpfcnvrt@c^0,w,c
  1890   001A72  0F60               	addlw	low _dbuf
  1891   001A74  6ED9               	movwf	fsr2l,c
  1892   001A76  6ADA               	clrf	fsr2h,c
  1893   001A78  0E2D               	movlw	45
  1894   001A7A  6EDF               	movwf	indf2,c
  1895   001A7C                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1897   001A7C  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1898   001A7E  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1899   001A80  EF50  F00D         	goto	l3042
  1900   001A84                     l3038:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1903   001A84  5018               	movf	vfpfcnvrt@c^0,w,c
  1904   001A86  0F60               	addlw	low _dbuf
  1905   001A88  6ED9               	movwf	fsr2l,c
  1906   001A8A  6ADA               	clrf	fsr2h,c
  1907   001A8C  50DF               	movf	indf2,w,c
  1908   001A8E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1909   001A90  500E               	movf	??_vfpfcnvrt^0,w,c
  1910   001A92  6E01               	movwf	fputc@c^0,c
  1911   001A94  6A02               	clrf	(fputc@c+1)^0,c
  1912   001A96  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1913   001A9A  EC2E  F011         	call	_fputc	;wreg free
  1914   001A9E  2A18               	incf	vfpfcnvrt@c^0,f,c
  1915   001AA0                     l3042:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1918   001AA0  0E20               	movlw	32
  1919   001AA2  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1920   001AA4  A4D8               	btfss	status,2,c
  1921   001AA6  EF57  F00D         	goto	u2061
  1922   001AAA  EF59  F00D         	goto	u2060
  1923   001AAE                     u2061:
  1924   001AAE  EF42  F00D         	goto	l3038
  1925   001AB2                     u2060:
  1926   001AB2                     l1422:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1929   001AB2  C011  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1930   001AB6  C012  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1931   001ABA  EF0D  F00E         	goto	l1423
  1932   001ABE                     l3044:
  1933                           
  1934                           ; BSR set to: 0
  1935   001ABE  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1936   001AC2                     	if	1	;There is more than 1 active tblptr byte
  1937   001AC2  0E0E               	movlw	high __smallconst
  1938   001AC4  6EF7               	movwf	tblptrh,c
  1939   001AC6                     	endif
  1940   001AC6                     	if	0	;tblptru may be non-zero
  1941   001AC6                     	endif
  1942   001AC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1943   001AC6  0E00               	movlw	low (__smallconst shr (0+16))
  1944   001AC8  6EF8               	movwf	tblptru,c
  1945   001ACA                     	endif
  1946   001ACA  0008               	tblrd		*
  1947   001ACC  50F5               	movf	tablat,w,c
  1948   001ACE  0A75               	xorlw	117
  1949   001AD0  A4D8               	btfss	status,2,c
  1950   001AD2  EF6D  F00D         	goto	u2071
  1951   001AD6  EF6F  F00D         	goto	u2070
  1952   001ADA                     u2071:
  1953   001ADA  EFEA  F00D         	goto	l3072
  1954   001ADE                     u2070:
  1955   001ADE                     
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1958   001ADE  500D               	movf	vfpfcnvrt@ap^0,w,c
  1959   001AE0  6ED9               	movwf	fsr2l,c
  1960   001AE2  6ADA               	clrf	fsr2h,c
  1961   001AE4  0E02               	movlw	2
  1962   001AE6  26DF               	addwf	indf2,f,c
  1963   001AE8  5CDF               	subwf	indf2,w,c
  1964   001AEA  6ED9               	movwf	fsr2l,c
  1965   001AEC  6ADA               	clrf	fsr2h,c
  1966   001AEE  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1967   001AF2  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1968   001AF6                     
  1969                           ; BSR set to: 0
  1970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1971   001AF6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1972   001AF8  6ED9               	movwf	fsr2l,c
  1973   001AFA  6ADA               	clrf	fsr2h,c
  1974   001AFC  2813               	incf	vfpfcnvrt@cp^0,w,c
  1975   001AFE  6EDF               	movwf	indf2,c
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1978   001B00  EFD2  F00D         	goto	l3070
  1979   001B04                     l3050:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1983   001B04  0E20               	movlw	32
  1984   001B06  6E18               	movwf	vfpfcnvrt@c^0,c
  1985   001B08                     l3052:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1988   001B08  0618               	decf	vfpfcnvrt@c^0,f,c
  1989   001B0A  5018               	movf	vfpfcnvrt@c^0,w,c
  1990   001B0C  0F60               	addlw	low _dbuf
  1991   001B0E  6ED9               	movwf	fsr2l,c
  1992   001B10  6ADA               	clrf	fsr2h,c
  1993   001B12  C014  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  1994   001B16  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  1995   001B1A  0E00               	movlw	0
  1996   001B1C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1997   001B1E  0E0A               	movlw	10
  1998   001B20  6E03               	movwf	___lwmod@divisor^0,c
  1999   001B22  EC21  F013         	call	___lwmod	;wreg free
  2000   001B26  5001               	movf	?___lwmod^0,w,c
  2001   001B28  0F30               	addlw	48
  2002   001B2A  6EDF               	movwf	indf2,c
  2003   001B2C                     
  2004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2005   001B2C  C014  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2006   001B30  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2007   001B34  0E00               	movlw	0
  2008   001B36  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2009   001B38  0E0A               	movlw	10
  2010   001B3A  6E03               	movwf	___lwdiv@divisor^0,c
  2011   001B3C  EC7D  F012         	call	___lwdiv	;wreg free
  2012   001B40  C001  F014         	movff	?___lwdiv,vfpfcnvrt@convarg
  2013   001B44  C002  F015         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2014   001B48                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2016   001B48  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2017   001B4A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2018   001B4C                     
  2019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2020   001B4C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2021   001B4E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2022   001B50  B4D8               	btfsc	status,2,c
  2023   001B52  EFAD  F00D         	goto	u2081
  2024   001B56  EFAF  F00D         	goto	u2080
  2025   001B5A                     u2081:
  2026   001B5A  EFC7  F00D         	goto	l3066
  2027   001B5E                     u2080:
  2028   001B5E  5018               	movf	vfpfcnvrt@c^0,w,c
  2029   001B60  A4D8               	btfss	status,2,c
  2030   001B62  EFB5  F00D         	goto	u2091
  2031   001B66  EFB7  F00D         	goto	u2090
  2032   001B6A                     u2091:
  2033   001B6A  EF84  F00D         	goto	l3052
  2034   001B6E                     u2090:
  2035   001B6E  EFC7  F00D         	goto	l3066
  2036   001B72                     l3062:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2039   001B72  5018               	movf	vfpfcnvrt@c^0,w,c
  2040   001B74  0F60               	addlw	low _dbuf
  2041   001B76  6ED9               	movwf	fsr2l,c
  2042   001B78  6ADA               	clrf	fsr2h,c
  2043   001B7A  50DF               	movf	indf2,w,c
  2044   001B7C  6E0E               	movwf	??_vfpfcnvrt^0,c
  2045   001B7E  500E               	movf	??_vfpfcnvrt^0,w,c
  2046   001B80  6E01               	movwf	fputc@c^0,c
  2047   001B82  6A02               	clrf	(fputc@c+1)^0,c
  2048   001B84  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2049   001B88  EC2E  F011         	call	_fputc	;wreg free
  2050   001B8C  2A18               	incf	vfpfcnvrt@c^0,f,c
  2051   001B8E                     l3066:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2054   001B8E  0E20               	movlw	32
  2055   001B90  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2056   001B92  A4D8               	btfss	status,2,c
  2057   001B94  EFCE  F00D         	goto	u2101
  2058   001B98  EFD0  F00D         	goto	u2100
  2059   001B9C                     u2101:
  2060   001B9C  EFB9  F00D         	goto	l3062
  2061   001BA0                     u2100:
  2062   001BA0  EF59  F00D         	goto	l1422
  2063   001BA4                     l3070:
  2064                           
  2065                           ; BSR set to: 0
  2066   001BA4  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2067   001BA8                     	if	1	;There is more than 1 active tblptr byte
  2068   001BA8  0E0E               	movlw	high __smallconst
  2069   001BAA  6EF7               	movwf	tblptrh,c
  2070   001BAC                     	endif
  2071   001BAC                     	if	0	;tblptru may be non-zero
  2072   001BAC                     	endif
  2073   001BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2074   001BAC  0E00               	movlw	low (__smallconst shr (0+16))
  2075   001BAE  6EF8               	movwf	tblptru,c
  2076   001BB0                     	endif
  2077   001BB0  0008               	tblrd		*
  2078   001BB2  50F5               	movf	tablat,w,c
  2079   001BB4  6E0E               	movwf	??_vfpfcnvrt^0,c
  2080   001BB6  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2081                           
  2082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 1, Range of values is 0 to 0
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            4     3 (average)
  2088                           ;	Chosen strategy is simple_byte
  2089   001BB8  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2090   001BBA  0A00               	xorlw	0	; case 0
  2091   001BBC  B4D8               	btfsc	status,2,c
  2092   001BBE  EFE3  F00D         	goto	l4140
  2093   001BC2  EFEA  F00D         	goto	l3072
  2094   001BC6                     l4140:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ; Switch size 1, requested type "simple"
  2098                           ; Number of cases is 1, Range of values is 117 to 117
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            4     3 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103   001BC6  500E               	movf	??_vfpfcnvrt^0,w,c
  2104   001BC8  0A75               	xorlw	117	; case 117
  2105   001BCA  B4D8               	btfsc	status,2,c
  2106   001BCC  EF82  F00D         	goto	l3050
  2107   001BD0  EFEA  F00D         	goto	l3072
  2108   001BD4                     l3072:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2112   001BD4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2113   001BD6  6ED9               	movwf	fsr2l,c
  2114   001BD8  6ADA               	clrf	fsr2h,c
  2115   001BDA  2ADF               	incf	indf2,f,c
  2116   001BDC                     
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2119   001BDC  0E00               	movlw	0
  2120   001BDE  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2121   001BE0  0E00               	movlw	0
  2122   001BE2  6E0B               	movwf	?_vfpfcnvrt^0,c
  2123   001BE4  EF0D  F00E         	goto	l1423
  2124   001BE8                     l3078:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2127   001BE8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2128   001BEA  6ED9               	movwf	fsr2l,c
  2129   001BEC  6ADA               	clrf	fsr2h,c
  2130   001BEE  CFDF FFF6          	movff	indf2,tblptrl
  2131   001BF2                     	if	1	;There is more than 1 active tblptr byte
  2132   001BF2  0E0E               	movlw	high __smallconst
  2133   001BF4  6EF7               	movwf	tblptrh,c
  2134   001BF6                     	endif
  2135   001BF6                     	if	0	;tblptru may be non-zero
  2136   001BF6                     	endif
  2137   001BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2138   001BF6  0E00               	movlw	low (__smallconst shr (0+16))
  2139   001BF8  6EF8               	movwf	tblptru,c
  2140   001BFA                     	endif
  2141   001BFA  0008               	tblrd		*
  2142   001BFC  50F5               	movf	tablat,w,c
  2143   001BFE  6E01               	movwf	fputc@c^0,c
  2144   001C00  6A02               	clrf	(fputc@c+1)^0,c
  2145   001C02  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2146   001C06  EC2E  F011         	call	_fputc	;wreg free
  2147   001C0A                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2149   001C0A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2150   001C0C  6ED9               	movwf	fsr2l,c
  2151   001C0E  6ADA               	clrf	fsr2h,c
  2152   001C10  2ADF               	incf	indf2,f,c
  2153   001C12                     
  2154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2155   001C12  0E00               	movlw	0
  2156   001C14  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2157   001C16  0E01               	movlw	1
  2158   001C18  6E0B               	movwf	?_vfpfcnvrt^0,c
  2159   001C1A                     l1423:
  2160   001C1A  0012               	return		;funcret
  2161   001C1C                     __end_of_vfpfcnvrt:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _fputc *****************
  2165 ;; Defined at:
  2166 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  c               2    0[COMRAM] int 
  2169 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2170 ;;		 -> sprintf@f(12), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  2    0[COMRAM] int 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;Total ram usage:        8 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 2
  2189 ;; This function calls:
  2190 ;;		_putch
  2191 ;; This function is called by:
  2192 ;;		_vfpfcnvrt
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text7
  2197   00225C                     __ptext7:
  2198                           	callstack 0
  2199   00225C                     _fputc:
  2200                           	callstack 24
  2201   00225C  5003               	movf	fputc@fp^0,w,c
  2202   00225E  B4D8               	btfsc	status,2,c
  2203   002260  EF34  F011         	goto	u1741
  2204   002264  EF36  F011         	goto	u1740
  2205   002268                     u1741:
  2206   002268  EF3E  F011         	goto	l2894
  2207   00226C                     u1740:
  2208   00226C  5003               	movf	fputc@fp^0,w,c
  2209   00226E  A4D8               	btfss	status,2,c
  2210   002270  EF3C  F011         	goto	u1751
  2211   002274  EF3E  F011         	goto	u1750
  2212   002278                     u1751:
  2213   002278  EF43  F011         	goto	l2896
  2214   00227C                     u1750:
  2215   00227C                     l2894:
  2216   00227C  5001               	movf	fputc@c^0,w,c
  2217   00227E  EC79  F016         	call	_putch
  2218   002282  EF8A  F011         	goto	l1461
  2219   002286                     l2896:
  2220   002286  5003               	movf	fputc@fp^0,w,c
  2221   002288  6ED9               	movwf	fsr2l,c
  2222   00228A  6ADA               	clrf	fsr2h,c
  2223   00228C  0E0A               	movlw	10
  2224   00228E  26D9               	addwf	fsr2l,f,c
  2225   002290  50DE               	movf	postinc2,w,c
  2226   002292  10DE               	iorwf	postinc2,w,c
  2227   002294  B4D8               	btfsc	status,2,c
  2228   002296  EF4F  F011         	goto	u1761
  2229   00229A  EF51  F011         	goto	u1760
  2230   00229E                     u1761:
  2231   00229E  EF6A  F011         	goto	l2900
  2232   0022A2                     u1760:
  2233   0022A2  5003               	movf	fputc@fp^0,w,c
  2234   0022A4  6ED9               	movwf	fsr2l,c
  2235   0022A6  6ADA               	clrf	fsr2h,c
  2236   0022A8  0E0A               	movlw	10
  2237   0022AA  26D9               	addwf	fsr2l,f,c
  2238   0022AC  5003               	movf	fputc@fp^0,w,c
  2239   0022AE  6EE1               	movwf	fsr1l,c
  2240   0022B0  6AE2               	clrf	fsr1h,c
  2241   0022B2  0E03               	movlw	3
  2242   0022B4  26E1               	addwf	fsr1l,f,c
  2243   0022B6  50DE               	movf	postinc2,w,c
  2244   0022B8  5CE6               	subwf	postinc1,w,c
  2245   0022BA  50E6               	movf	postinc1,w,c
  2246   0022BC  0A80               	xorlw	128
  2247   0022BE  6E08               	movwf	(??_fputc+4)^0,c
  2248   0022C0  50DE               	movf	postinc2,w,c
  2249   0022C2  0A80               	xorlw	128
  2250   0022C4  5808               	subwfb	(??_fputc+4)^0,w,c
  2251   0022C6  B0D8               	btfsc	status,0,c
  2252   0022C8  EF68  F011         	goto	u1771
  2253   0022CC  EF6A  F011         	goto	u1770
  2254   0022D0                     u1771:
  2255   0022D0  EF8A  F011         	goto	l1461
  2256   0022D4                     u1770:
  2257   0022D4                     l2900:
  2258   0022D4  5003               	movf	fputc@fp^0,w,c
  2259   0022D6  6ED9               	movwf	fsr2l,c
  2260   0022D8  6ADA               	clrf	fsr2h,c
  2261   0022DA  0E03               	movlw	3
  2262   0022DC  26D9               	addwf	fsr2l,f,c
  2263   0022DE  CFDE F004          	movff	postinc2,??_fputc
  2264   0022E2  CFDD F005          	movff	postdec2,??_fputc+1
  2265   0022E6  5003               	movf	fputc@fp^0,w,c
  2266   0022E8  6ED9               	movwf	fsr2l,c
  2267   0022EA  6ADA               	clrf	fsr2h,c
  2268   0022EC  CFDE F006          	movff	postinc2,??_fputc+2
  2269   0022F0  CFDD F007          	movff	postdec2,??_fputc+3
  2270   0022F4  5004               	movf	??_fputc^0,w,c
  2271   0022F6  2406               	addwf	(??_fputc+2)^0,w,c
  2272   0022F8  6ED9               	movwf	fsr2l,c
  2273   0022FA  5005               	movf	(??_fputc+1)^0,w,c
  2274   0022FC  2007               	addwfc	(??_fputc+3)^0,w,c
  2275   0022FE  6EDA               	movwf	fsr2h,c
  2276   002300  C001  FFDF         	movff	fputc@c,indf2
  2277   002304  5003               	movf	fputc@fp^0,w,c
  2278   002306  6ED9               	movwf	fsr2l,c
  2279   002308  6ADA               	clrf	fsr2h,c
  2280   00230A  0E03               	movlw	3
  2281   00230C  26D9               	addwf	fsr2l,f,c
  2282   00230E  2ADE               	incf	postinc2,f,c
  2283   002310  0E00               	movlw	0
  2284   002312  22DD               	addwfc	postdec2,f,c
  2285   002314                     l1461:
  2286   002314  0012               	return		;funcret
  2287   002316                     __end_of_fputc:
  2288                           	callstack 0
  2289                           
  2290 ;; *************** function _putch *****************
  2291 ;; Defined at:
  2292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  c               1    wreg     unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  c               1    0[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_fputc
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text8
  2321   002CF2                     __ptext8:
  2322                           	callstack 0
  2323   002CF2                     _putch:
  2324                           	callstack 24
  2325   002CF2  0012               	return		;funcret
  2326   002CF4                     __end_of_putch:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _abs *****************
  2330 ;; Defined at:
  2331 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  a               2    6[COMRAM] int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    6[COMRAM] int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_vfpfcnvrt
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text9
  2360   002AD4                     __ptext9:
  2361                           	callstack 0
  2362   002AD4                     _abs:
  2363                           	callstack 25
  2364   002AD4  BE08               	btfsc	(abs@a+1)^0,7,c
  2365   002AD6  EF6F  F015         	goto	u1781
  2366   002ADA  EF71  F015         	goto	u1780
  2367   002ADE                     u1781:
  2368   002ADE  EF77  F015         	goto	l1446
  2369   002AE2                     u1780:
  2370   002AE2  C007  F007         	movff	abs@a,?_abs
  2371   002AE6  C008  F008         	movff	abs@a+1,?_abs+1
  2372   002AEA  EF83  F015         	goto	l1449
  2373   002AEE                     l1446:
  2374   002AEE  C007  F009         	movff	abs@a,??_abs
  2375   002AF2  C008  F00A         	movff	abs@a+1,??_abs+1
  2376   002AF6  1E09               	comf	??_abs^0,f,c
  2377   002AF8  1E0A               	comf	(??_abs+1)^0,f,c
  2378   002AFA  4A09               	infsnz	??_abs^0,f,c
  2379   002AFC  2A0A               	incf	(??_abs+1)^0,f,c
  2380   002AFE  C009  F007         	movff	??_abs,?_abs
  2381   002B02  C00A  F008         	movff	??_abs+1,?_abs+1
  2382   002B06                     l1449:
  2383   002B06  0012               	return		;funcret
  2384   002B08                     __end_of_abs:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function ___lwmod *****************
  2388 ;; Defined at:
  2389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  dividend        2    0[COMRAM] unsigned int 
  2392 ;;  divisor         2    2[COMRAM] unsigned int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  counter         1    4[COMRAM] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2    0[COMRAM] unsigned int 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2408 ;;Total ram usage:        5 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_vfpfcnvrt
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text10
  2419   002642                     __ptext10:
  2420                           	callstack 0
  2421   002642                     ___lwmod:
  2422                           	callstack 25
  2423   002642  5003               	movf	___lwmod@divisor^0,w,c
  2424   002644  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2425   002646  B4D8               	btfsc	status,2,c
  2426   002648  EF28  F013         	goto	u1711
  2427   00264C  EF2A  F013         	goto	u1710
  2428   002650                     u1711:
  2429   002650  EF4E  F013         	goto	l1204
  2430   002654                     u1710:
  2431   002654  0E01               	movlw	1
  2432   002656  6E05               	movwf	___lwmod@counter^0,c
  2433   002658  EF32  F013         	goto	l2880
  2434   00265C                     l2878:
  2435   00265C  90D8               	bcf	status,0,c
  2436   00265E  3603               	rlcf	___lwmod@divisor^0,f,c
  2437   002660  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2438   002662  2A05               	incf	___lwmod@counter^0,f,c
  2439   002664                     l2880:
  2440   002664  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2441   002666  EF37  F013         	goto	u1721
  2442   00266A  EF39  F013         	goto	u1720
  2443   00266E                     u1721:
  2444   00266E  EF2E  F013         	goto	l2878
  2445   002672                     u1720:
  2446   002672                     l2882:
  2447   002672  5003               	movf	___lwmod@divisor^0,w,c
  2448   002674  5C01               	subwf	___lwmod@dividend^0,w,c
  2449   002676  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2450   002678  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2451   00267A  A0D8               	btfss	status,0,c
  2452   00267C  EF42  F013         	goto	u1731
  2453   002680  EF44  F013         	goto	u1730
  2454   002684                     u1731:
  2455   002684  EF48  F013         	goto	l2886
  2456   002688                     u1730:
  2457   002688  5003               	movf	___lwmod@divisor^0,w,c
  2458   00268A  5E01               	subwf	___lwmod@dividend^0,f,c
  2459   00268C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2460   00268E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2461   002690                     l2886:
  2462   002690  90D8               	bcf	status,0,c
  2463   002692  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2464   002694  3203               	rrcf	___lwmod@divisor^0,f,c
  2465   002696  2E05               	decfsz	___lwmod@counter^0,f,c
  2466   002698  EF39  F013         	goto	l2882
  2467   00269C                     l1204:
  2468   00269C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2469   0026A0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2470   0026A4  0012               	return		;funcret
  2471   0026A6                     __end_of___lwmod:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function ___lwdiv *****************
  2475 ;; Defined at:
  2476 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  dividend        2    0[COMRAM] unsigned int 
  2479 ;;  divisor         2    2[COMRAM] unsigned int 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  quotient        2    4[COMRAM] unsigned int 
  2482 ;;  counter         1    6[COMRAM] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2    0[COMRAM] unsigned int 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;Total ram usage:        7 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_vfpfcnvrt
  2503 ;;		_setMotorPWM
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text11
  2508   0024FA                     __ptext11:
  2509                           	callstack 0
  2510   0024FA                     ___lwdiv:
  2511                           	callstack 25
  2512   0024FA  0E00               	movlw	0
  2513   0024FC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2514   0024FE  0E00               	movlw	0
  2515   002500  6E05               	movwf	___lwdiv@quotient^0,c
  2516   002502  5003               	movf	___lwdiv@divisor^0,w,c
  2517   002504  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2518   002506  B4D8               	btfsc	status,2,c
  2519   002508  EF88  F012         	goto	u1681
  2520   00250C  EF8A  F012         	goto	u1680
  2521   002510                     u1681:
  2522   002510  EFB2  F012         	goto	l1194
  2523   002514                     u1680:
  2524   002514  0E01               	movlw	1
  2525   002516  6E07               	movwf	___lwdiv@counter^0,c
  2526   002518  EF92  F012         	goto	l2860
  2527   00251C                     l2858:
  2528   00251C  90D8               	bcf	status,0,c
  2529   00251E  3603               	rlcf	___lwdiv@divisor^0,f,c
  2530   002520  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2531   002522  2A07               	incf	___lwdiv@counter^0,f,c
  2532   002524                     l2860:
  2533   002524  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2534   002526  EF97  F012         	goto	u1691
  2535   00252A  EF99  F012         	goto	u1690
  2536   00252E                     u1691:
  2537   00252E  EF8E  F012         	goto	l2858
  2538   002532                     u1690:
  2539   002532                     l2862:
  2540   002532  90D8               	bcf	status,0,c
  2541   002534  3605               	rlcf	___lwdiv@quotient^0,f,c
  2542   002536  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2543   002538  5003               	movf	___lwdiv@divisor^0,w,c
  2544   00253A  5C01               	subwf	___lwdiv@dividend^0,w,c
  2545   00253C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2546   00253E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2547   002540  A0D8               	btfss	status,0,c
  2548   002542  EFA5  F012         	goto	u1701
  2549   002546  EFA7  F012         	goto	u1700
  2550   00254A                     u1701:
  2551   00254A  EFAC  F012         	goto	l2870
  2552   00254E                     u1700:
  2553   00254E  5003               	movf	___lwdiv@divisor^0,w,c
  2554   002550  5E01               	subwf	___lwdiv@dividend^0,f,c
  2555   002552  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2556   002554  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2557   002556  8005               	bsf	___lwdiv@quotient^0,0,c
  2558   002558                     l2870:
  2559   002558  90D8               	bcf	status,0,c
  2560   00255A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2561   00255C  3203               	rrcf	___lwdiv@divisor^0,f,c
  2562   00255E  2E07               	decfsz	___lwdiv@counter^0,f,c
  2563   002560  EF99  F012         	goto	l2862
  2564   002564                     l1194:
  2565   002564  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2566   002568  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2567   00256C  0012               	return		;funcret
  2568   00256E                     __end_of___lwdiv:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function ___awmod *****************
  2572 ;; Defined at:
  2573 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  dividend        2    0[COMRAM] int 
  2576 ;;  divisor         2    2[COMRAM] int 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  sign            1    5[COMRAM] unsigned char 
  2579 ;;  counter         1    4[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2    0[COMRAM] int 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;Total ram usage:        6 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_vfpfcnvrt
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text12
  2604   002316                     __ptext12:
  2605                           	callstack 0
  2606   002316                     ___awmod:
  2607                           	callstack 25
  2608   002316  0E00               	movlw	0
  2609   002318  6E06               	movwf	___awmod@sign^0,c
  2610   00231A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2611   00231C  EF94  F011         	goto	u1620
  2612   002320  EF92  F011         	goto	u1621
  2613   002324                     u1621:
  2614   002324  EF9A  F011         	goto	l2824
  2615   002328                     u1620:
  2616   002328  6C01               	negf	___awmod@dividend^0,c
  2617   00232A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2618   00232C  B0D8               	btfsc	status,0,c
  2619   00232E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2620   002330  0E01               	movlw	1
  2621   002332  6E06               	movwf	___awmod@sign^0,c
  2622   002334                     l2824:
  2623   002334  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2624   002336  EFA1  F011         	goto	u1630
  2625   00233A  EF9F  F011         	goto	u1631
  2626   00233E                     u1631:
  2627   00233E  EFA5  F011         	goto	l2828
  2628   002342                     u1630:
  2629   002342  6C03               	negf	___awmod@divisor^0,c
  2630   002344  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2631   002346  B0D8               	btfsc	status,0,c
  2632   002348  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2633   00234A                     l2828:
  2634   00234A  5003               	movf	___awmod@divisor^0,w,c
  2635   00234C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2636   00234E  B4D8               	btfsc	status,2,c
  2637   002350  EFAC  F011         	goto	u1641
  2638   002354  EFAE  F011         	goto	u1640
  2639   002358                     u1641:
  2640   002358  EFD2  F011         	goto	l2844
  2641   00235C                     u1640:
  2642   00235C  0E01               	movlw	1
  2643   00235E  6E05               	movwf	___awmod@counter^0,c
  2644   002360  EFB6  F011         	goto	l2834
  2645   002364                     l2832:
  2646   002364  90D8               	bcf	status,0,c
  2647   002366  3603               	rlcf	___awmod@divisor^0,f,c
  2648   002368  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2649   00236A  2A05               	incf	___awmod@counter^0,f,c
  2650   00236C                     l2834:
  2651   00236C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2652   00236E  EFBB  F011         	goto	u1651
  2653   002372  EFBD  F011         	goto	u1650
  2654   002376                     u1651:
  2655   002376  EFB2  F011         	goto	l2832
  2656   00237A                     u1650:
  2657   00237A                     l2836:
  2658   00237A  5003               	movf	___awmod@divisor^0,w,c
  2659   00237C  5C01               	subwf	___awmod@dividend^0,w,c
  2660   00237E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2661   002380  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2662   002382  A0D8               	btfss	status,0,c
  2663   002384  EFC6  F011         	goto	u1661
  2664   002388  EFC8  F011         	goto	u1660
  2665   00238C                     u1661:
  2666   00238C  EFCC  F011         	goto	l2840
  2667   002390                     u1660:
  2668   002390  5003               	movf	___awmod@divisor^0,w,c
  2669   002392  5E01               	subwf	___awmod@dividend^0,f,c
  2670   002394  5004               	movf	(___awmod@divisor+1)^0,w,c
  2671   002396  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2672   002398                     l2840:
  2673   002398  90D8               	bcf	status,0,c
  2674   00239A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2675   00239C  3203               	rrcf	___awmod@divisor^0,f,c
  2676   00239E  2E05               	decfsz	___awmod@counter^0,f,c
  2677   0023A0  EFBD  F011         	goto	l2836
  2678   0023A4                     l2844:
  2679   0023A4  5006               	movf	___awmod@sign^0,w,c
  2680   0023A6  B4D8               	btfsc	status,2,c
  2681   0023A8  EFD8  F011         	goto	u1671
  2682   0023AC  EFDA  F011         	goto	u1670
  2683   0023B0                     u1671:
  2684   0023B0  EFDE  F011         	goto	l2848
  2685   0023B4                     u1670:
  2686   0023B4  6C01               	negf	___awmod@dividend^0,c
  2687   0023B6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2688   0023B8  B0D8               	btfsc	status,0,c
  2689   0023BA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2690   0023BC                     l2848:
  2691   0023BC  C001  F001         	movff	___awmod@dividend,?___awmod
  2692   0023C0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2693   0023C4  0012               	return		;funcret
  2694   0023C6                     __end_of___awmod:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function ___awdiv *****************
  2698 ;; Defined at:
  2699 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  dividend        2    0[COMRAM] int 
  2702 ;;  divisor         2    2[COMRAM] int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  quotient        2    6[COMRAM] int 
  2705 ;;  sign            1    5[COMRAM] unsigned char 
  2706 ;;  counter         1    4[COMRAM] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2    0[COMRAM] int 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;Total ram usage:        8 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_vfpfcnvrt
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text13
  2731   002198                     __ptext13:
  2732                           	callstack 0
  2733   002198                     ___awdiv:
  2734                           	callstack 25
  2735   002198  0E00               	movlw	0
  2736   00219A  6E06               	movwf	___awdiv@sign^0,c
  2737   00219C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2738   00219E  EFD5  F010         	goto	u1560
  2739   0021A2  EFD3  F010         	goto	u1561
  2740   0021A6                     u1561:
  2741   0021A6  EFDB  F010         	goto	l2780
  2742   0021AA                     u1560:
  2743   0021AA  6C03               	negf	___awdiv@divisor^0,c
  2744   0021AC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2745   0021AE  B0D8               	btfsc	status,0,c
  2746   0021B0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2747   0021B2  0E01               	movlw	1
  2748   0021B4  6E06               	movwf	___awdiv@sign^0,c
  2749   0021B6                     l2780:
  2750   0021B6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2751   0021B8  EFE2  F010         	goto	u1570
  2752   0021BC  EFE0  F010         	goto	u1571
  2753   0021C0                     u1571:
  2754   0021C0  EFE8  F010         	goto	l2786
  2755   0021C4                     u1570:
  2756   0021C4  6C01               	negf	___awdiv@dividend^0,c
  2757   0021C6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2758   0021C8  B0D8               	btfsc	status,0,c
  2759   0021CA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2760   0021CC  0E01               	movlw	1
  2761   0021CE  1A06               	xorwf	___awdiv@sign^0,f,c
  2762   0021D0                     l2786:
  2763   0021D0  0E00               	movlw	0
  2764   0021D2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2765   0021D4  0E00               	movlw	0
  2766   0021D6  6E07               	movwf	___awdiv@quotient^0,c
  2767   0021D8  5003               	movf	___awdiv@divisor^0,w,c
  2768   0021DA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2769   0021DC  B4D8               	btfsc	status,2,c
  2770   0021DE  EFF3  F010         	goto	u1581
  2771   0021E2  EFF5  F010         	goto	u1580
  2772   0021E6                     u1581:
  2773   0021E6  EF1D  F011         	goto	l2808
  2774   0021EA                     u1580:
  2775   0021EA  0E01               	movlw	1
  2776   0021EC  6E05               	movwf	___awdiv@counter^0,c
  2777   0021EE  EFFD  F010         	goto	l2794
  2778   0021F2                     l2792:
  2779   0021F2  90D8               	bcf	status,0,c
  2780   0021F4  3603               	rlcf	___awdiv@divisor^0,f,c
  2781   0021F6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2782   0021F8  2A05               	incf	___awdiv@counter^0,f,c
  2783   0021FA                     l2794:
  2784   0021FA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2785   0021FC  EF02  F011         	goto	u1591
  2786   002200  EF04  F011         	goto	u1590
  2787   002204                     u1591:
  2788   002204  EFF9  F010         	goto	l2792
  2789   002208                     u1590:
  2790   002208                     l2796:
  2791   002208  90D8               	bcf	status,0,c
  2792   00220A  3607               	rlcf	___awdiv@quotient^0,f,c
  2793   00220C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2794   00220E  5003               	movf	___awdiv@divisor^0,w,c
  2795   002210  5C01               	subwf	___awdiv@dividend^0,w,c
  2796   002212  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2797   002214  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2798   002216  A0D8               	btfss	status,0,c
  2799   002218  EF10  F011         	goto	u1601
  2800   00221C  EF12  F011         	goto	u1600
  2801   002220                     u1601:
  2802   002220  EF17  F011         	goto	l2804
  2803   002224                     u1600:
  2804   002224  5003               	movf	___awdiv@divisor^0,w,c
  2805   002226  5E01               	subwf	___awdiv@dividend^0,f,c
  2806   002228  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2807   00222A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2808   00222C  8007               	bsf	___awdiv@quotient^0,0,c
  2809   00222E                     l2804:
  2810   00222E  90D8               	bcf	status,0,c
  2811   002230  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2812   002232  3203               	rrcf	___awdiv@divisor^0,f,c
  2813   002234  2E05               	decfsz	___awdiv@counter^0,f,c
  2814   002236  EF04  F011         	goto	l2796
  2815   00223A                     l2808:
  2816   00223A  5006               	movf	___awdiv@sign^0,w,c
  2817   00223C  B4D8               	btfsc	status,2,c
  2818   00223E  EF23  F011         	goto	u1611
  2819   002242  EF25  F011         	goto	u1610
  2820   002246                     u1611:
  2821   002246  EF29  F011         	goto	l2812
  2822   00224A                     u1610:
  2823   00224A  6C07               	negf	___awdiv@quotient^0,c
  2824   00224C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2825   00224E  B0D8               	btfsc	status,0,c
  2826   002250  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2827   002252                     l2812:
  2828   002252  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2829   002256  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2830   00225A  0012               	return		;funcret
  2831   00225C                     __end_of___awdiv:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _sendStringSerial4 *****************
  2835 ;; Defined at:
  2836 ;;		line 35 in file "serial.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  string          2    1[COMRAM] PTR unsigned char 
  2839 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2840 ;;		 -> sendIntSerial4@string(17), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;Total ram usage:        2 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 2
  2859 ;; This function calls:
  2860 ;;		_sendCharSerial4
  2861 ;; This function is called by:
  2862 ;;		_sendRGBCvalSerial4
  2863 ;;		_sendHSVvalSerial4
  2864 ;;		_sendIntSerial4
  2865 ;;		_sendArrayCharSerial4
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text14
  2870   0026A6                     __ptext14:
  2871                           	callstack 0
  2872   0026A6                     _sendStringSerial4:
  2873                           	callstack 27
  2874   0026A6                     
  2875                           ;serial.c: 37:     while(*string != 0){
  2876   0026A6  EF6A  F013         	goto	l3244
  2877   0026AA                     l3240:
  2878                           
  2879                           ;serial.c: 38:   sendCharSerial4(*string++);
  2880   0026AA  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2881   0026AE  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2882   0026B2  0E00               	movlw	low (__smallconst shr (0+16))
  2883   0026B4  6EF8               	movwf	tblptru,c
  2884   0026B6  0E0D               	movlw	(high __ramtop+-1)
  2885   0026B8  64F7               	cpfsgt	tblptrh,c
  2886   0026BA  D003               	bra	u2177
  2887   0026BC  0008               	tblrd		*
  2888   0026BE  50F5               	movf	tablat,w,c
  2889   0026C0  D005               	bra	u2170
  2890   0026C2                     u2177:
  2891   0026C2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2892   0026C6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2893   0026CA  50EF               	movf	indf0,w,c
  2894   0026CC                     u2170:
  2895   0026CC  EC3F  F016         	call	_sendCharSerial4
  2896   0026D0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2897   0026D2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2898   0026D4                     l3244:
  2899                           
  2900                           ;serial.c: 37:     while(*string != 0){
  2901   0026D4  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2902   0026D8  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2903   0026DC  0E00               	movlw	low (__smallconst shr (0+16))
  2904   0026DE  6EF8               	movwf	tblptru,c
  2905   0026E0  0E0D               	movlw	(high __ramtop+-1)
  2906   0026E2  64F7               	cpfsgt	tblptrh,c
  2907   0026E4  D003               	bra	u2187
  2908   0026E6  0008               	tblrd		*
  2909   0026E8  50F5               	movf	tablat,w,c
  2910   0026EA  D005               	bra	u2180
  2911   0026EC                     u2187:
  2912   0026EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2913   0026F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2914   0026F4  50EF               	movf	indf0,w,c
  2915   0026F6                     u2180:
  2916   0026F6  0900               	iorlw	0
  2917   0026F8  A4D8               	btfss	status,2,c
  2918   0026FA  EF81  F013         	goto	u2191
  2919   0026FE  EF83  F013         	goto	u2190
  2920   002702                     u2191:
  2921   002702  EF55  F013         	goto	l3240
  2922   002706                     u2190:
  2923   002706  0012               	return		;funcret
  2924   002708                     __end_of_sendStringSerial4:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _sendCharSerial4 *****************
  2928 ;; Defined at:
  2929 ;;		line 29 in file "serial.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  charToSend      1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  charToSend      1    0[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2947 ;;Total ram usage:        1 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_sendStringSerial4
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text15
  2958   002C7E                     __ptext15:
  2959                           	callstack 0
  2960   002C7E                     _sendCharSerial4:
  2961                           	callstack 27
  2962                           
  2963                           ;incstack = 0
  2964                           ;sendCharSerial4@charToSend stored from wreg
  2965   002C7E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2966   002C80                     l442:
  2967   002C80  010E               	movlb	14	; () banked
  2968   002C82  A537               	btfss	55,2,b	;volatile
  2969   002C84  EF46  F016         	goto	u2151
  2970   002C88  EF48  F016         	goto	u2150
  2971   002C8C                     u2151:
  2972   002C8C  EF40  F016         	goto	l442
  2973   002C90                     u2150:
  2974   002C90                     
  2975                           ; BSR set to: 14
  2976                           ;serial.c: 31:     TX4REG = charToSend;
  2977   002C90  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2978   002C94                     
  2979                           ; BSR set to: 14
  2980   002C94  0012               	return		;funcret
  2981   002C96                     __end_of_sendCharSerial4:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _scaleRGB *****************
  2985 ;; Defined at:
  2986 ;;		line 128 in file "color.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  2989 ;;		 -> main@measured_colour(8), 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3001 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;Total ram usage:        3 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 2
  3008 ;; This function calls:
  3009 ;;		___flmul
  3010 ;;		___fltol
  3011 ;;		___xxtofl
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text16
  3018   001FFA                     __ptext16:
  3019                           	callstack 0
  3020   001FFA                     _scaleRGB:
  3021                           	callstack 28
  3022   001FFA                     
  3023                           ;color.c: 128: void scaleRGB(struct RGBC_val *p);color.c: 129: {;color.c: 130:     p->R 
      +                          *= 0.5;
  3024   001FFA  0E00               	movlw	0
  3025   001FFC  6E13               	movwf	___flmul@a^0,c
  3026   001FFE  0E00               	movlw	0
  3027   002000  6E14               	movwf	(___flmul@a+1)^0,c
  3028   002002  0E00               	movlw	0
  3029   002004  6E15               	movwf	(___flmul@a+2)^0,c
  3030   002006  0E3F               	movlw	63
  3031   002008  6E16               	movwf	(___flmul@a+3)^0,c
  3032   00200A  5032               	movf	scaleRGB@p^0,w,c
  3033   00200C  6ED9               	movwf	fsr2l,c
  3034   00200E  6ADA               	clrf	fsr2h,c
  3035   002010  CFDE F033          	movff	postinc2,??_scaleRGB
  3036   002014  CFDD F034          	movff	postdec2,??_scaleRGB+1
  3037   002018  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  3038   00201C  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  3039   002020  6A03               	clrf	(___xxtofl@val+2)^0,c
  3040   002022  6A04               	clrf	(___xxtofl@val+3)^0,c
  3041   002024  0E00               	movlw	0
  3042   002026  EC0E  F00E         	call	___xxtofl
  3043   00202A  C001  F00F         	movff	?___xxtofl,___flmul@b
  3044   00202E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3045   002032  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3046   002036  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3047   00203A  EC73  F00A         	call	___flmul	;wreg free
  3048   00203E  C00F  F028         	movff	?___flmul,___fltol@f1
  3049   002042  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3050   002046  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3051   00204A  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3052   00204E  EC7A  F00F         	call	___fltol	;wreg free
  3053   002052  5032               	movf	scaleRGB@p^0,w,c
  3054   002054  6ED9               	movwf	fsr2l,c
  3055   002056  6ADA               	clrf	fsr2h,c
  3056   002058  C028  FFDE         	movff	?___fltol,postinc2
  3057   00205C  C029  FFDD         	movff	?___fltol+1,postdec2
  3058                           
  3059                           ;color.c: 131:     p->G *= 0.7;
  3060   002060  0E33               	movlw	51
  3061   002062  6E13               	movwf	___flmul@a^0,c
  3062   002064  0E33               	movlw	51
  3063   002066  6E14               	movwf	(___flmul@a+1)^0,c
  3064   002068  0E33               	movlw	51
  3065   00206A  6E15               	movwf	(___flmul@a+2)^0,c
  3066   00206C  0E3F               	movlw	63
  3067   00206E  6E16               	movwf	(___flmul@a+3)^0,c
  3068   002070  5032               	movf	scaleRGB@p^0,w,c
  3069   002072  6ED9               	movwf	fsr2l,c
  3070   002074  6ADA               	clrf	fsr2h,c
  3071   002076  0E02               	movlw	2
  3072   002078  26D9               	addwf	fsr2l,f,c
  3073   00207A  CFDE F033          	movff	postinc2,??_scaleRGB
  3074   00207E  CFDD F034          	movff	postdec2,??_scaleRGB+1
  3075   002082  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  3076   002086  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  3077   00208A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3078   00208C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3079   00208E  0E00               	movlw	0
  3080   002090  EC0E  F00E         	call	___xxtofl
  3081   002094  C001  F00F         	movff	?___xxtofl,___flmul@b
  3082   002098  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3083   00209C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3084   0020A0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3085   0020A4  EC73  F00A         	call	___flmul	;wreg free
  3086   0020A8  C00F  F028         	movff	?___flmul,___fltol@f1
  3087   0020AC  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3088   0020B0  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3089   0020B4  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3090   0020B8  EC7A  F00F         	call	___fltol	;wreg free
  3091   0020BC  5032               	movf	scaleRGB@p^0,w,c
  3092   0020BE  6ED9               	movwf	fsr2l,c
  3093   0020C0  6ADA               	clrf	fsr2h,c
  3094   0020C2  0E02               	movlw	2
  3095   0020C4  26D9               	addwf	fsr2l,f,c
  3096   0020C6  C028  FFDE         	movff	?___fltol,postinc2
  3097   0020CA  C029  FFDD         	movff	?___fltol+1,postdec2
  3098   0020CE  0012               	return		;funcret
  3099   0020D0                     __end_of_scaleRGB:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function ___xxtofl *****************
  3103 ;; Defined at:
  3104 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  sign            1    wreg     unsigned char 
  3107 ;;  val             4    0[COMRAM] long 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  sign            1    8[COMRAM] unsigned char 
  3110 ;;  arg             4   10[COMRAM] unsigned long 
  3111 ;;  exp             1    9[COMRAM] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  4    0[COMRAM] unsigned char 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;Total ram usage:       14 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_scaleRGB
  3132 ;;		_stop
  3133 ;;		_turnLeft
  3134 ;;		_turnRight
  3135 ;;		_fullSpeedAhead
  3136 ;;		_fullSpeedReverse
  3137 ;;		_turnLeft90
  3138 ;;		_turnRight90
  3139 ;;		_turnLeft135
  3140 ;;		_turnRight135
  3141 ;;		_UTurn
  3142 ;;		_headbuttReverse
  3143 ;;		_squareReverse
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text17
  3148   001C1C                     __ptext17:
  3149                           	callstack 0
  3150   001C1C                     ___xxtofl:
  3151                           	callstack 28
  3152                           
  3153                           ;incstack = 0
  3154                           ;___xxtofl@sign stored from wreg
  3155   001C1C  6E09               	movwf	___xxtofl@sign^0,c
  3156   001C1E  5009               	movf	___xxtofl@sign^0,w,c
  3157   001C20  B4D8               	btfsc	status,2,c
  3158   001C22  EF15  F00E         	goto	u2511
  3159   001C26  EF17  F00E         	goto	u2510
  3160   001C2A                     u2511:
  3161   001C2A  EF39  F00E         	goto	l1358
  3162   001C2E                     u2510:
  3163   001C2E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3164   001C30  EF1E  F00E         	goto	u2520
  3165   001C34  EF1C  F00E         	goto	u2521
  3166   001C38                     u2521:
  3167   001C38  EF39  F00E         	goto	l1358
  3168   001C3C                     u2520:
  3169   001C3C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3170   001C40  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3171   001C44  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3172   001C48  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3173   001C4C  1E05               	comf	??___xxtofl^0,f,c
  3174   001C4E  1E06               	comf	(??___xxtofl+1)^0,f,c
  3175   001C50  1E07               	comf	(??___xxtofl+2)^0,f,c
  3176   001C52  1E08               	comf	(??___xxtofl+3)^0,f,c
  3177   001C54  2A05               	incf	??___xxtofl^0,f,c
  3178   001C56  0E00               	movlw	0
  3179   001C58  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3180   001C5A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3181   001C5C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3182   001C5E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3183   001C62  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3184   001C66  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3185   001C6A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3186   001C6E  EF41  F00E         	goto	l3574
  3187   001C72                     l1358:
  3188   001C72  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3189   001C76  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3190   001C7A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3191   001C7E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3192   001C82                     l3574:
  3193   001C82  5001               	movf	___xxtofl@val^0,w,c
  3194   001C84  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3195   001C86  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3196   001C88  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3197   001C8A  A4D8               	btfss	status,2,c
  3198   001C8C  EF4A  F00E         	goto	u2531
  3199   001C90  EF4C  F00E         	goto	u2530
  3200   001C94                     u2531:
  3201   001C94  EF56  F00E         	goto	l3580
  3202   001C98                     u2530:
  3203   001C98  0E00               	movlw	0
  3204   001C9A  6E01               	movwf	?___xxtofl^0,c
  3205   001C9C  0E00               	movlw	0
  3206   001C9E  6E02               	movwf	(?___xxtofl+1)^0,c
  3207   001CA0  0E00               	movlw	0
  3208   001CA2  6E03               	movwf	(?___xxtofl+2)^0,c
  3209   001CA4  0E00               	movlw	0
  3210   001CA6  6E04               	movwf	(?___xxtofl+3)^0,c
  3211   001CA8  EFE7  F00E         	goto	l1361
  3212   001CAC                     l3580:
  3213   001CAC  0E96               	movlw	150
  3214   001CAE  6E0A               	movwf	___xxtofl@exp^0,c
  3215   001CB0  EF60  F00E         	goto	l3584
  3216   001CB4                     l3582:
  3217   001CB4  2A0A               	incf	___xxtofl@exp^0,f,c
  3218   001CB6  90D8               	bcf	status,0,c
  3219   001CB8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3220   001CBA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3221   001CBC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3222   001CBE  320B               	rrcf	___xxtofl@arg^0,f,c
  3223   001CC0                     l3584:
  3224   001CC0  0E00               	movlw	0
  3225   001CC2  140B               	andwf	___xxtofl@arg^0,w,c
  3226   001CC4  6E05               	movwf	??___xxtofl^0,c
  3227   001CC6  0E00               	movlw	0
  3228   001CC8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3229   001CCA  6E06               	movwf	(??___xxtofl+1)^0,c
  3230   001CCC  0E00               	movlw	0
  3231   001CCE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3232   001CD0  6E07               	movwf	(??___xxtofl+2)^0,c
  3233   001CD2  0EFE               	movlw	254
  3234   001CD4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3235   001CD6  6E08               	movwf	(??___xxtofl+3)^0,c
  3236   001CD8  5005               	movf	??___xxtofl^0,w,c
  3237   001CDA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3238   001CDC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3239   001CDE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3240   001CE0  A4D8               	btfss	status,2,c
  3241   001CE2  EF75  F00E         	goto	u2541
  3242   001CE6  EF77  F00E         	goto	u2540
  3243   001CEA                     u2541:
  3244   001CEA  EF5A  F00E         	goto	l3582
  3245   001CEE                     u2540:
  3246   001CEE  EF85  F00E         	goto	l1365
  3247   001CF2                     l3586:
  3248   001CF2  2A0A               	incf	___xxtofl@exp^0,f,c
  3249   001CF4  0E01               	movlw	1
  3250   001CF6  260B               	addwf	___xxtofl@arg^0,f,c
  3251   001CF8  0E00               	movlw	0
  3252   001CFA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3253   001CFC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3254   001CFE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3255   001D00  90D8               	bcf	status,0,c
  3256   001D02  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3257   001D04  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3258   001D06  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3259   001D08  320B               	rrcf	___xxtofl@arg^0,f,c
  3260   001D0A                     l1365:
  3261   001D0A  0E00               	movlw	0
  3262   001D0C  140B               	andwf	___xxtofl@arg^0,w,c
  3263   001D0E  6E05               	movwf	??___xxtofl^0,c
  3264   001D10  0E00               	movlw	0
  3265   001D12  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3266   001D14  6E06               	movwf	(??___xxtofl+1)^0,c
  3267   001D16  0E00               	movlw	0
  3268   001D18  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3269   001D1A  6E07               	movwf	(??___xxtofl+2)^0,c
  3270   001D1C  0EFF               	movlw	255
  3271   001D1E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3272   001D20  6E08               	movwf	(??___xxtofl+3)^0,c
  3273   001D22  5005               	movf	??___xxtofl^0,w,c
  3274   001D24  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3275   001D26  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3276   001D28  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3277   001D2A  A4D8               	btfss	status,2,c
  3278   001D2C  EF9A  F00E         	goto	u2551
  3279   001D30  EF9C  F00E         	goto	u2550
  3280   001D34                     u2551:
  3281   001D34  EF79  F00E         	goto	l3586
  3282   001D38                     u2550:
  3283   001D38  EFA4  F00E         	goto	l3594
  3284   001D3C                     l3592:
  3285   001D3C  060A               	decf	___xxtofl@exp^0,f,c
  3286   001D3E  90D8               	bcf	status,0,c
  3287   001D40  360B               	rlcf	___xxtofl@arg^0,f,c
  3288   001D42  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3289   001D44  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3290   001D46  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3291   001D48                     l3594:
  3292   001D48  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3293   001D4A  EFA9  F00E         	goto	u2561
  3294   001D4E  EFAB  F00E         	goto	u2560
  3295   001D52                     u2561:
  3296   001D52  EFB3  F00E         	goto	l1372
  3297   001D56                     u2560:
  3298   001D56  0E02               	movlw	2
  3299   001D58  600A               	cpfslt	___xxtofl@exp^0,c
  3300   001D5A  EFB1  F00E         	goto	u2571
  3301   001D5E  EFB3  F00E         	goto	u2570
  3302   001D62                     u2571:
  3303   001D62  EF9E  F00E         	goto	l3592
  3304   001D66                     u2570:
  3305   001D66                     l1372:
  3306   001D66  B00A               	btfsc	___xxtofl@exp^0,0,c
  3307   001D68  EFB8  F00E         	goto	u2581
  3308   001D6C  EFBA  F00E         	goto	u2580
  3309   001D70                     u2581:
  3310   001D70  EFBB  F00E         	goto	l3600
  3311   001D74                     u2580:
  3312   001D74  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3313   001D76                     l3600:
  3314   001D76  90D8               	bcf	status,0,c
  3315   001D78  320A               	rrcf	___xxtofl@exp^0,f,c
  3316   001D7A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3317   001D7E  6A06               	clrf	(??___xxtofl+1)^0,c
  3318   001D80  6A07               	clrf	(??___xxtofl+2)^0,c
  3319   001D82  6A08               	clrf	(??___xxtofl+3)^0,c
  3320   001D84  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3321   001D88  6A07               	clrf	(??___xxtofl+2)^0,c
  3322   001D8A  6A06               	clrf	(??___xxtofl+1)^0,c
  3323   001D8C  6A05               	clrf	??___xxtofl^0,c
  3324   001D8E  5005               	movf	??___xxtofl^0,w,c
  3325   001D90  120B               	iorwf	___xxtofl@arg^0,f,c
  3326   001D92  5006               	movf	(??___xxtofl+1)^0,w,c
  3327   001D94  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3328   001D96  5007               	movf	(??___xxtofl+2)^0,w,c
  3329   001D98  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3330   001D9A  5008               	movf	(??___xxtofl+3)^0,w,c
  3331   001D9C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3332   001D9E  5009               	movf	___xxtofl@sign^0,w,c
  3333   001DA0  B4D8               	btfsc	status,2,c
  3334   001DA2  EFD5  F00E         	goto	u2591
  3335   001DA6  EFD7  F00E         	goto	u2590
  3336   001DAA                     u2591:
  3337   001DAA  EFDF  F00E         	goto	l3610
  3338   001DAE                     u2590:
  3339   001DAE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3340   001DB0  EFDE  F00E         	goto	u2600
  3341   001DB4  EFDC  F00E         	goto	u2601
  3342   001DB8                     u2601:
  3343   001DB8  EFDF  F00E         	goto	l3610
  3344   001DBC                     u2600:
  3345   001DBC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3346   001DBE                     l3610:
  3347   001DBE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3348   001DC2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3349   001DC6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3350   001DCA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3351   001DCE                     l1361:
  3352   001DCE  0012               	return		;funcret
  3353   001DD0                     __end_of___xxtofl:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function ___fltol *****************
  3357 ;; Defined at:
  3358 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  f1              4   39[COMRAM] unsigned char 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  exp1            1   48[COMRAM] unsigned char 
  3363 ;;  sign1           1   47[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  4   39[COMRAM] long 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;Total ram usage:       10 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_scaleRGB
  3384 ;;		_stop
  3385 ;;		_turnLeft
  3386 ;;		_turnRight
  3387 ;;		_fullSpeedAhead
  3388 ;;		_fullSpeedReverse
  3389 ;;		_turnLeft90
  3390 ;;		_turnRight90
  3391 ;;		_turnLeft135
  3392 ;;		_turnRight135
  3393 ;;		_UTurn
  3394 ;;		_headbuttReverse
  3395 ;;		_squareReverse
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text18
  3400   001EF4                     __ptext18:
  3401                           	callstack 0
  3402   001EF4                     ___fltol:
  3403                           	callstack 28
  3404   001EF4  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3405   001EF6  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3406   001EF8  6E31               	movwf	___fltol@exp1^0,c
  3407   001EFA  5031               	movf	___fltol@exp1^0,w,c
  3408   001EFC  A4D8               	btfss	status,2,c
  3409   001EFE  EF83  F00F         	goto	u2441
  3410   001F02  EF85  F00F         	goto	u2440
  3411   001F06                     u2441:
  3412   001F06  EF8F  F00F         	goto	l3530
  3413   001F0A                     u2440:
  3414   001F0A                     l3526:
  3415   001F0A  0E00               	movlw	0
  3416   001F0C  6E28               	movwf	?___fltol^0,c
  3417   001F0E  0E00               	movlw	0
  3418   001F10  6E29               	movwf	(?___fltol+1)^0,c
  3419   001F12  0E00               	movlw	0
  3420   001F14  6E2A               	movwf	(?___fltol+2)^0,c
  3421   001F16  0E00               	movlw	0
  3422   001F18  6E2B               	movwf	(?___fltol+3)^0,c
  3423   001F1A  EFFC  F00F         	goto	l1000
  3424   001F1E                     l3530:
  3425   001F1E  C028  F02C         	movff	___fltol@f1,??___fltol
  3426   001F22  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3427   001F26  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3428   001F2A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3429   001F2E  0E20               	movlw	32
  3430   001F30  EF9F  F00F         	goto	u2450
  3431   001F34                     u2455:
  3432   001F34  90D8               	bcf	status,0,c
  3433   001F36  322F               	rrcf	(??___fltol+3)^0,f,c
  3434   001F38  322E               	rrcf	(??___fltol+2)^0,f,c
  3435   001F3A  322D               	rrcf	(??___fltol+1)^0,f,c
  3436   001F3C  322C               	rrcf	??___fltol^0,f,c
  3437   001F3E                     u2450:
  3438   001F3E  2EE8               	decfsz	wreg,f,c
  3439   001F40  EF9A  F00F         	goto	u2455
  3440   001F44  502C               	movf	??___fltol^0,w,c
  3441   001F46  6E30               	movwf	___fltol@sign1^0,c
  3442   001F48  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3443   001F4A  0EFF               	movlw	255
  3444   001F4C  1628               	andwf	___fltol@f1^0,f,c
  3445   001F4E  0EFF               	movlw	255
  3446   001F50  1629               	andwf	(___fltol@f1+1)^0,f,c
  3447   001F52  0EFF               	movlw	255
  3448   001F54  162A               	andwf	(___fltol@f1+2)^0,f,c
  3449   001F56  0E00               	movlw	0
  3450   001F58  162B               	andwf	(___fltol@f1+3)^0,f,c
  3451   001F5A  0E96               	movlw	150
  3452   001F5C  5E31               	subwf	___fltol@exp1^0,f,c
  3453   001F5E  BE31               	btfsc	___fltol@exp1^0,7,c
  3454   001F60  EFB6  F00F         	goto	u2460
  3455   001F64  EFB4  F00F         	goto	u2461
  3456   001F68                     u2461:
  3457   001F68  EFCC  F00F         	goto	l3550
  3458   001F6C                     u2460:
  3459   001F6C  5031               	movf	___fltol@exp1^0,w,c
  3460   001F6E  0A80               	xorlw	128
  3461   001F70  0F97               	addlw	151
  3462   001F72  B0D8               	btfsc	status,0,c
  3463   001F74  EFBE  F00F         	goto	u2471
  3464   001F78  EFC0  F00F         	goto	u2470
  3465   001F7C                     u2471:
  3466   001F7C  EFC2  F00F         	goto	l3546
  3467   001F80                     u2470:
  3468   001F80  EF85  F00F         	goto	l3526
  3469   001F84                     l3546:
  3470   001F84  90D8               	bcf	status,0,c
  3471   001F86  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3472   001F88  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3473   001F8A  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3474   001F8C  3228               	rrcf	___fltol@f1^0,f,c
  3475   001F8E  3E31               	incfsz	___fltol@exp1^0,f,c
  3476   001F90  EFC2  F00F         	goto	l3546
  3477   001F94  EFE4  F00F         	goto	l3560
  3478   001F98                     l3550:
  3479   001F98  0E1F               	movlw	31
  3480   001F9A  6431               	cpfsgt	___fltol@exp1^0,c
  3481   001F9C  EFD2  F00F         	goto	u2481
  3482   001FA0  EFD4  F00F         	goto	u2480
  3483   001FA4                     u2481:
  3484   001FA4  EFDC  F00F         	goto	l3558
  3485   001FA8                     u2480:
  3486   001FA8  EF85  F00F         	goto	l3526
  3487   001FAC                     l3556:
  3488   001FAC  90D8               	bcf	status,0,c
  3489   001FAE  3628               	rlcf	___fltol@f1^0,f,c
  3490   001FB0  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3491   001FB2  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3492   001FB4  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3493   001FB6  0631               	decf	___fltol@exp1^0,f,c
  3494   001FB8                     l3558:
  3495   001FB8  5031               	movf	___fltol@exp1^0,w,c
  3496   001FBA  A4D8               	btfss	status,2,c
  3497   001FBC  EFE2  F00F         	goto	u2491
  3498   001FC0  EFE4  F00F         	goto	u2490
  3499   001FC4                     u2491:
  3500   001FC4  EFD6  F00F         	goto	l3556
  3501   001FC8                     u2490:
  3502   001FC8                     l3560:
  3503   001FC8  5030               	movf	___fltol@sign1^0,w,c
  3504   001FCA  B4D8               	btfsc	status,2,c
  3505   001FCC  EFEA  F00F         	goto	u2501
  3506   001FD0  EFEC  F00F         	goto	u2500
  3507   001FD4                     u2501:
  3508   001FD4  EFF4  F00F         	goto	l3564
  3509   001FD8                     u2500:
  3510   001FD8  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3511   001FDA  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3512   001FDC  1E29               	comf	(___fltol@f1+1)^0,f,c
  3513   001FDE  6C28               	negf	___fltol@f1^0,c
  3514   001FE0  0E00               	movlw	0
  3515   001FE2  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3516   001FE4  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3517   001FE6  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3518   001FE8                     l3564:
  3519   001FE8  C028  F028         	movff	___fltol@f1,?___fltol
  3520   001FEC  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3521   001FF0  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3522   001FF4  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3523   001FF8                     l1000:
  3524   001FF8  0012               	return		;funcret
  3525   001FFA                     __end_of___fltol:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function ___flmul *****************
  3529 ;; Defined at:
  3530 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  b               4   14[COMRAM] long 
  3533 ;;  a               4   18[COMRAM] long 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  prod            4   33[COMRAM] struct .
  3536 ;;  grs             4   27[COMRAM] unsigned long 
  3537 ;;  temp            2   37[COMRAM] struct .
  3538 ;;  bexp            1   32[COMRAM] unsigned char 
  3539 ;;  aexp            1   31[COMRAM] unsigned char 
  3540 ;;  sign            1   26[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  4   14[COMRAM] unsigned char 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, prodl, prodh
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:       25 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 1
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_scaleRGB
  3561 ;;		_stop
  3562 ;;		_turnLeft
  3563 ;;		_turnRight
  3564 ;;		_fullSpeedAhead
  3565 ;;		_fullSpeedReverse
  3566 ;;		_turnLeft90
  3567 ;;		_turnRight90
  3568 ;;		_turnLeft135
  3569 ;;		_turnRight135
  3570 ;;		_UTurn
  3571 ;;		_headbuttReverse
  3572 ;;		_squareReverse
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text19
  3577   0014E6                     __ptext19:
  3578                           	callstack 0
  3579   0014E6                     ___flmul:
  3580                           	callstack 28
  3581   0014E6  5012               	movf	(___flmul@b+3)^0,w,c
  3582   0014E8  0B80               	andlw	128
  3583   0014EA  6E1B               	movwf	___flmul@sign^0,c
  3584   0014EC  5012               	movf	(___flmul@b+3)^0,w,c
  3585   0014EE  2412               	addwf	(___flmul@b+3)^0,w,c
  3586   0014F0  6E21               	movwf	___flmul@bexp^0,c
  3587   0014F2  AE11               	btfss	(___flmul@b+2)^0,7,c
  3588   0014F4  EF7E  F00A         	goto	u2251
  3589   0014F8  EF80  F00A         	goto	u2250
  3590   0014FC                     u2251:
  3591   0014FC  EF81  F00A         	goto	l3400
  3592   001500                     u2250:
  3593   001500  8021               	bsf	___flmul@bexp^0,0,c
  3594   001502                     l3400:
  3595   001502  5021               	movf	___flmul@bexp^0,w,c
  3596   001504  B4D8               	btfsc	status,2,c
  3597   001506  EF87  F00A         	goto	u2261
  3598   00150A  EF89  F00A         	goto	u2260
  3599   00150E                     u2261:
  3600   00150E  EF9C  F00A         	goto	l3408
  3601   001512                     u2260:
  3602   001512  2821               	incf	___flmul@bexp^0,w,c
  3603   001514  A4D8               	btfss	status,2,c
  3604   001516  EF8F  F00A         	goto	u2271
  3605   00151A  EF91  F00A         	goto	u2270
  3606   00151E                     u2271:
  3607   00151E  EF99  F00A         	goto	l3406
  3608   001522                     u2270:
  3609   001522  0E00               	movlw	0
  3610   001524  6E0F               	movwf	___flmul@b^0,c
  3611   001526  0E00               	movlw	0
  3612   001528  6E10               	movwf	(___flmul@b+1)^0,c
  3613   00152A  0E00               	movlw	0
  3614   00152C  6E11               	movwf	(___flmul@b+2)^0,c
  3615   00152E  0E00               	movlw	0
  3616   001530  6E12               	movwf	(___flmul@b+3)^0,c
  3617   001532                     l3406:
  3618   001532  8E11               	bsf	(___flmul@b+2)^0,7,c
  3619   001534  EFA4  F00A         	goto	l3410
  3620   001538                     l3408:
  3621   001538  0E00               	movlw	0
  3622   00153A  6E0F               	movwf	___flmul@b^0,c
  3623   00153C  0E00               	movlw	0
  3624   00153E  6E10               	movwf	(___flmul@b+1)^0,c
  3625   001540  0E00               	movlw	0
  3626   001542  6E11               	movwf	(___flmul@b+2)^0,c
  3627   001544  0E00               	movlw	0
  3628   001546  6E12               	movwf	(___flmul@b+3)^0,c
  3629   001548                     l3410:
  3630   001548  5016               	movf	(___flmul@a+3)^0,w,c
  3631   00154A  0B80               	andlw	128
  3632   00154C  1A1B               	xorwf	___flmul@sign^0,f,c
  3633   00154E  5016               	movf	(___flmul@a+3)^0,w,c
  3634   001550  2416               	addwf	(___flmul@a+3)^0,w,c
  3635   001552  6E20               	movwf	___flmul@aexp^0,c
  3636   001554  AE15               	btfss	(___flmul@a+2)^0,7,c
  3637   001556  EFAF  F00A         	goto	u2281
  3638   00155A  EFB1  F00A         	goto	u2280
  3639   00155E                     u2281:
  3640   00155E  EFB2  F00A         	goto	l3418
  3641   001562                     u2280:
  3642   001562  8020               	bsf	___flmul@aexp^0,0,c
  3643   001564                     l3418:
  3644   001564  5020               	movf	___flmul@aexp^0,w,c
  3645   001566  B4D8               	btfsc	status,2,c
  3646   001568  EFB8  F00A         	goto	u2291
  3647   00156C  EFBA  F00A         	goto	u2290
  3648   001570                     u2291:
  3649   001570  EFCD  F00A         	goto	l3426
  3650   001574                     u2290:
  3651   001574  2820               	incf	___flmul@aexp^0,w,c
  3652   001576  A4D8               	btfss	status,2,c
  3653   001578  EFC0  F00A         	goto	u2301
  3654   00157C  EFC2  F00A         	goto	u2300
  3655   001580                     u2301:
  3656   001580  EFCA  F00A         	goto	l3424
  3657   001584                     u2300:
  3658   001584  0E00               	movlw	0
  3659   001586  6E13               	movwf	___flmul@a^0,c
  3660   001588  0E00               	movlw	0
  3661   00158A  6E14               	movwf	(___flmul@a+1)^0,c
  3662   00158C  0E00               	movlw	0
  3663   00158E  6E15               	movwf	(___flmul@a+2)^0,c
  3664   001590  0E00               	movlw	0
  3665   001592  6E16               	movwf	(___flmul@a+3)^0,c
  3666   001594                     l3424:
  3667   001594  8E15               	bsf	(___flmul@a+2)^0,7,c
  3668   001596  EFD5  F00A         	goto	l1317
  3669   00159A                     l3426:
  3670   00159A  0E00               	movlw	0
  3671   00159C  6E13               	movwf	___flmul@a^0,c
  3672   00159E  0E00               	movlw	0
  3673   0015A0  6E14               	movwf	(___flmul@a+1)^0,c
  3674   0015A2  0E00               	movlw	0
  3675   0015A4  6E15               	movwf	(___flmul@a+2)^0,c
  3676   0015A6  0E00               	movlw	0
  3677   0015A8  6E16               	movwf	(___flmul@a+3)^0,c
  3678   0015AA                     l1317:
  3679   0015AA  5020               	movf	___flmul@aexp^0,w,c
  3680   0015AC  B4D8               	btfsc	status,2,c
  3681   0015AE  EFDB  F00A         	goto	u2311
  3682   0015B2  EFDD  F00A         	goto	u2310
  3683   0015B6                     u2311:
  3684   0015B6  EFE5  F00A         	goto	l3430
  3685   0015BA                     u2310:
  3686   0015BA  5021               	movf	___flmul@bexp^0,w,c
  3687   0015BC  A4D8               	btfss	status,2,c
  3688   0015BE  EFE3  F00A         	goto	u2321
  3689   0015C2  EFE5  F00A         	goto	u2320
  3690   0015C6                     u2321:
  3691   0015C6  EFEF  F00A         	goto	l3434
  3692   0015CA                     u2320:
  3693   0015CA                     l3430:
  3694   0015CA  0E00               	movlw	0
  3695   0015CC  6E0F               	movwf	?___flmul^0,c
  3696   0015CE  0E00               	movlw	0
  3697   0015D0  6E10               	movwf	(?___flmul+1)^0,c
  3698   0015D2  0E00               	movlw	0
  3699   0015D4  6E11               	movwf	(?___flmul+2)^0,c
  3700   0015D6  0E00               	movlw	0
  3701   0015D8  6E12               	movwf	(?___flmul+3)^0,c
  3702   0015DA  EF87  F00C         	goto	l1321
  3703   0015DE                     l3434:
  3704   0015DE  5015               	movf	(___flmul@a+2)^0,w,c
  3705   0015E0  020F               	mulwf	___flmul@b^0,c
  3706   0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  3707   0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3708   0015EA  5026               	movf	___flmul@temp^0,w,c
  3709   0015EC  6E1C               	movwf	___flmul@grs^0,c
  3710   0015EE  6A1D               	clrf	(___flmul@grs+1)^0,c
  3711   0015F0  6A1E               	clrf	(___flmul@grs+2)^0,c
  3712   0015F2  6A1F               	clrf	(___flmul@grs+3)^0,c
  3713   0015F4  5027               	movf	(___flmul@temp+1)^0,w,c
  3714   0015F6  6E22               	movwf	___flmul@prod^0,c
  3715   0015F8  6A23               	clrf	(___flmul@prod+1)^0,c
  3716   0015FA  6A24               	clrf	(___flmul@prod+2)^0,c
  3717   0015FC  6A25               	clrf	(___flmul@prod+3)^0,c
  3718   0015FE  5014               	movf	(___flmul@a+1)^0,w,c
  3719   001600  0210               	mulwf	(___flmul@b+1)^0,c
  3720   001602  CFF3 F026          	movff	prodl,___flmul@temp
  3721   001606  CFF4 F027          	movff	prodh,___flmul@temp+1
  3722   00160A  5026               	movf	___flmul@temp^0,w,c
  3723   00160C  261C               	addwf	___flmul@grs^0,f,c
  3724   00160E  0E00               	movlw	0
  3725   001610  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3726   001612  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3727   001614  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3728   001616  5027               	movf	(___flmul@temp+1)^0,w,c
  3729   001618  2622               	addwf	___flmul@prod^0,f,c
  3730   00161A  0E00               	movlw	0
  3731   00161C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3732   00161E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3733   001620  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3734   001622  5013               	movf	___flmul@a^0,w,c
  3735   001624  0211               	mulwf	(___flmul@b+2)^0,c
  3736   001626  CFF3 F026          	movff	prodl,___flmul@temp
  3737   00162A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3738   00162E  5026               	movf	___flmul@temp^0,w,c
  3739   001630  261C               	addwf	___flmul@grs^0,f,c
  3740   001632  0E00               	movlw	0
  3741   001634  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3742   001636  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3743   001638  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3744   00163A  5027               	movf	(___flmul@temp+1)^0,w,c
  3745   00163C  2622               	addwf	___flmul@prod^0,f,c
  3746   00163E  0E00               	movlw	0
  3747   001640  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3748   001642  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3749   001644  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3750   001646  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3751   00164A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3752   00164E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3753   001652  6A1C               	clrf	___flmul@grs^0,c
  3754   001654  5013               	movf	___flmul@a^0,w,c
  3755   001656  0210               	mulwf	(___flmul@b+1)^0,c
  3756   001658  CFF3 F026          	movff	prodl,___flmul@temp
  3757   00165C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3758   001660  5026               	movf	___flmul@temp^0,w,c
  3759   001662  261C               	addwf	___flmul@grs^0,f,c
  3760   001664  5027               	movf	(___flmul@temp+1)^0,w,c
  3761   001666  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3762   001668  0E00               	movlw	0
  3763   00166A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3764   00166C  0E00               	movlw	0
  3765   00166E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3766   001670  5014               	movf	(___flmul@a+1)^0,w,c
  3767   001672  020F               	mulwf	___flmul@b^0,c
  3768   001674  CFF3 F026          	movff	prodl,___flmul@temp
  3769   001678  CFF4 F027          	movff	prodh,___flmul@temp+1
  3770   00167C  5026               	movf	___flmul@temp^0,w,c
  3771   00167E  261C               	addwf	___flmul@grs^0,f,c
  3772   001680  5027               	movf	(___flmul@temp+1)^0,w,c
  3773   001682  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3774   001684  0E00               	movlw	0
  3775   001686  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3776   001688  0E00               	movlw	0
  3777   00168A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3778   00168C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3779   001690  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3780   001694  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3781   001698  6A1C               	clrf	___flmul@grs^0,c
  3782   00169A  5013               	movf	___flmul@a^0,w,c
  3783   00169C  020F               	mulwf	___flmul@b^0,c
  3784   00169E  CFF3 F026          	movff	prodl,___flmul@temp
  3785   0016A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3786   0016A6  5026               	movf	___flmul@temp^0,w,c
  3787   0016A8  261C               	addwf	___flmul@grs^0,f,c
  3788   0016AA  5027               	movf	(___flmul@temp+1)^0,w,c
  3789   0016AC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3790   0016AE  0E00               	movlw	0
  3791   0016B0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3792   0016B2  0E00               	movlw	0
  3793   0016B4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3794   0016B6  5015               	movf	(___flmul@a+2)^0,w,c
  3795   0016B8  0210               	mulwf	(___flmul@b+1)^0,c
  3796   0016BA  CFF3 F026          	movff	prodl,___flmul@temp
  3797   0016BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3798   0016C2  5026               	movf	___flmul@temp^0,w,c
  3799   0016C4  2622               	addwf	___flmul@prod^0,f,c
  3800   0016C6  5027               	movf	(___flmul@temp+1)^0,w,c
  3801   0016C8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3802   0016CA  0E00               	movlw	0
  3803   0016CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3804   0016CE  0E00               	movlw	0
  3805   0016D0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3806   0016D2  5014               	movf	(___flmul@a+1)^0,w,c
  3807   0016D4  0211               	mulwf	(___flmul@b+2)^0,c
  3808   0016D6  CFF3 F026          	movff	prodl,___flmul@temp
  3809   0016DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3810   0016DE  5026               	movf	___flmul@temp^0,w,c
  3811   0016E0  2622               	addwf	___flmul@prod^0,f,c
  3812   0016E2  5027               	movf	(___flmul@temp+1)^0,w,c
  3813   0016E4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3814   0016E6  0E00               	movlw	0
  3815   0016E8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3816   0016EA  0E00               	movlw	0
  3817   0016EC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3818   0016EE  5015               	movf	(___flmul@a+2)^0,w,c
  3819   0016F0  0211               	mulwf	(___flmul@b+2)^0,c
  3820   0016F2  CFF3 F026          	movff	prodl,___flmul@temp
  3821   0016F6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3822   0016FA  5026               	movf	___flmul@temp^0,w,c
  3823   0016FC  6E17               	movwf	??___flmul^0,c
  3824   0016FE  5027               	movf	(___flmul@temp+1)^0,w,c
  3825   001700  6E18               	movwf	(??___flmul+1)^0,c
  3826   001702  6A19               	clrf	(??___flmul+2)^0,c
  3827   001704  6A1A               	clrf	(??___flmul+3)^0,c
  3828   001706  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3829   00170A  C018  F019         	movff	??___flmul+1,??___flmul+2
  3830   00170E  C017  F018         	movff	??___flmul,??___flmul+1
  3831   001712  6A17               	clrf	??___flmul^0,c
  3832   001714  5017               	movf	??___flmul^0,w,c
  3833   001716  2622               	addwf	___flmul@prod^0,f,c
  3834   001718  5018               	movf	(??___flmul+1)^0,w,c
  3835   00171A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3836   00171C  5019               	movf	(??___flmul+2)^0,w,c
  3837   00171E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3838   001720  501A               	movf	(??___flmul+3)^0,w,c
  3839   001722  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3840   001724  C01C  F017         	movff	___flmul@grs,??___flmul
  3841   001728  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3842   00172C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3843   001730  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3844   001734  0E19               	movlw	25
  3845   001736  EFA2  F00B         	goto	u2330
  3846   00173A                     u2335:
  3847   00173A  90D8               	bcf	status,0,c
  3848   00173C  321A               	rrcf	(??___flmul+3)^0,f,c
  3849   00173E  3219               	rrcf	(??___flmul+2)^0,f,c
  3850   001740  3218               	rrcf	(??___flmul+1)^0,f,c
  3851   001742  3217               	rrcf	??___flmul^0,f,c
  3852   001744                     u2330:
  3853   001744  2EE8               	decfsz	wreg,f,c
  3854   001746  EF9D  F00B         	goto	u2335
  3855   00174A  5017               	movf	??___flmul^0,w,c
  3856   00174C  2622               	addwf	___flmul@prod^0,f,c
  3857   00174E  5018               	movf	(??___flmul+1)^0,w,c
  3858   001750  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3859   001752  5019               	movf	(??___flmul+2)^0,w,c
  3860   001754  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3861   001756  501A               	movf	(??___flmul+3)^0,w,c
  3862   001758  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3863   00175A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3864   00175E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3865   001762  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3866   001766  6A1C               	clrf	___flmul@grs^0,c
  3867   001768  5020               	movf	___flmul@aexp^0,w,c
  3868   00176A  C021  F017         	movff	___flmul@bexp,??___flmul
  3869   00176E  6A18               	clrf	(??___flmul+1)^0,c
  3870   001770  2617               	addwf	??___flmul^0,f,c
  3871   001772  0E00               	movlw	0
  3872   001774  2218               	addwfc	(??___flmul+1)^0,f,c
  3873   001776  0E82               	movlw	130
  3874   001778  2417               	addwf	??___flmul^0,w,c
  3875   00177A  6E26               	movwf	___flmul@temp^0,c
  3876   00177C  0EFF               	movlw	255
  3877   00177E  2018               	addwfc	(??___flmul+1)^0,w,c
  3878   001780  6E27               	movwf	(___flmul@temp+1)^0,c
  3879   001782  EFD8  F00B         	goto	l3482
  3880   001786                     l3476:
  3881   001786  90D8               	bcf	status,0,c
  3882   001788  3622               	rlcf	___flmul@prod^0,f,c
  3883   00178A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3884   00178C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3885   00178E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3886   001790  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3887   001792  EFCD  F00B         	goto	u2341
  3888   001796  EFCF  F00B         	goto	u2340
  3889   00179A                     u2341:
  3890   00179A  EFD0  F00B         	goto	l1324
  3891   00179E                     u2340:
  3892   00179E  8022               	bsf	___flmul@prod^0,0,c
  3893   0017A0                     l1324:
  3894   0017A0  90D8               	bcf	status,0,c
  3895   0017A2  361C               	rlcf	___flmul@grs^0,f,c
  3896   0017A4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3897   0017A6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3898   0017A8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3899   0017AA  0626               	decf	___flmul@temp^0,f,c
  3900   0017AC  A0D8               	btfss	status,0,c
  3901   0017AE  0627               	decf	(___flmul@temp+1)^0,f,c
  3902   0017B0                     l3482:
  3903   0017B0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3904   0017B2  EFDD  F00B         	goto	u2351
  3905   0017B6  EFDF  F00B         	goto	u2350
  3906   0017BA                     u2351:
  3907   0017BA  EFC3  F00B         	goto	l3476
  3908   0017BE                     u2350:
  3909   0017BE  0E00               	movlw	0
  3910   0017C0  6E20               	movwf	___flmul@aexp^0,c
  3911   0017C2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3912   0017C4  EFE6  F00B         	goto	u2361
  3913   0017C8  EFE8  F00B         	goto	u2360
  3914   0017CC                     u2361:
  3915   0017CC  EF0C  F00C         	goto	l1326
  3916   0017D0                     u2360:
  3917   0017D0  0EFF               	movlw	255
  3918   0017D2  141C               	andwf	___flmul@grs^0,w,c
  3919   0017D4  6E17               	movwf	??___flmul^0,c
  3920   0017D6  0EFF               	movlw	255
  3921   0017D8  141D               	andwf	(___flmul@grs+1)^0,w,c
  3922   0017DA  6E18               	movwf	(??___flmul+1)^0,c
  3923   0017DC  0EFF               	movlw	255
  3924   0017DE  141E               	andwf	(___flmul@grs+2)^0,w,c
  3925   0017E0  6E19               	movwf	(??___flmul+2)^0,c
  3926   0017E2  0E7F               	movlw	127
  3927   0017E4  141F               	andwf	(___flmul@grs+3)^0,w,c
  3928   0017E6  6E1A               	movwf	(??___flmul+3)^0,c
  3929   0017E8  5017               	movf	??___flmul^0,w,c
  3930   0017EA  1018               	iorwf	(??___flmul+1)^0,w,c
  3931   0017EC  1019               	iorwf	(??___flmul+2)^0,w,c
  3932   0017EE  101A               	iorwf	(??___flmul+3)^0,w,c
  3933   0017F0  B4D8               	btfsc	status,2,c
  3934   0017F2  EFFD  F00B         	goto	u2371
  3935   0017F6  EFFF  F00B         	goto	u2370
  3936   0017FA                     u2371:
  3937   0017FA  EF03  F00C         	goto	l1327
  3938   0017FE                     u2370:
  3939   0017FE                     l3490:
  3940   0017FE  0E01               	movlw	1
  3941   001800  6E20               	movwf	___flmul@aexp^0,c
  3942   001802  EF0C  F00C         	goto	l1326
  3943   001806                     l1327:
  3944   001806  A022               	btfss	___flmul@prod^0,0,c
  3945   001808  EF08  F00C         	goto	u2381
  3946   00180C  EF0A  F00C         	goto	u2380
  3947   001810                     u2381:
  3948   001810  EF0C  F00C         	goto	l1326
  3949   001814                     u2380:
  3950   001814  EFFF  F00B         	goto	l3490
  3951   001818                     l1326:
  3952   001818  5020               	movf	___flmul@aexp^0,w,c
  3953   00181A  B4D8               	btfsc	status,2,c
  3954   00181C  EF12  F00C         	goto	u2391
  3955   001820  EF14  F00C         	goto	u2390
  3956   001824                     u2391:
  3957   001824  EF38  F00C         	goto	l3502
  3958   001828                     u2390:
  3959   001828  0E01               	movlw	1
  3960   00182A  2622               	addwf	___flmul@prod^0,f,c
  3961   00182C  0E00               	movlw	0
  3962   00182E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3963   001830  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3964   001832  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3965   001834  A025               	btfss	(___flmul@prod+3)^0,0,c
  3966   001836  EF1F  F00C         	goto	u2401
  3967   00183A  EF21  F00C         	goto	u2400
  3968   00183E                     u2401:
  3969   00183E  EF38  F00C         	goto	l3502
  3970   001842                     u2400:
  3971   001842  C022  F017         	movff	___flmul@prod,??___flmul
  3972   001846  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3973   00184A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3974   00184E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3975   001852  341A               	rlcf	(??___flmul+3)^0,w,c
  3976   001854  321A               	rrcf	(??___flmul+3)^0,f,c
  3977   001856  3219               	rrcf	(??___flmul+2)^0,f,c
  3978   001858  3218               	rrcf	(??___flmul+1)^0,f,c
  3979   00185A  3217               	rrcf	??___flmul^0,f,c
  3980   00185C  C017  F022         	movff	??___flmul,___flmul@prod
  3981   001860  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3982   001864  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3983   001868  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3984   00186C  4A26               	infsnz	___flmul@temp^0,f,c
  3985   00186E  2A27               	incf	(___flmul@temp+1)^0,f,c
  3986   001870                     l3502:
  3987   001870  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3988   001872  EF43  F00C         	goto	u2411
  3989   001876  5027               	movf	(___flmul@temp+1)^0,w,c
  3990   001878  E108               	bnz	u2410
  3991   00187A  2826               	incf	___flmul@temp^0,w,c
  3992   00187C  A0D8               	btfss	status,0,c
  3993   00187E  EF43  F00C         	goto	u2411
  3994   001882  EF45  F00C         	goto	u2410
  3995   001886                     u2411:
  3996   001886  EF4F  F00C         	goto	l3506
  3997   00188A                     u2410:
  3998   00188A  0E00               	movlw	0
  3999   00188C  6E22               	movwf	___flmul@prod^0,c
  4000   00188E  0E00               	movlw	0
  4001   001890  6E23               	movwf	(___flmul@prod+1)^0,c
  4002   001892  0E80               	movlw	128
  4003   001894  6E24               	movwf	(___flmul@prod+2)^0,c
  4004   001896  0E7F               	movlw	127
  4005   001898  6E25               	movwf	(___flmul@prod+3)^0,c
  4006   00189A  EF7D  F00C         	goto	l3518
  4007   00189E                     l3506:
  4008   00189E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4009   0018A0  EF5C  F00C         	goto	u2420
  4010   0018A4  5027               	movf	(___flmul@temp+1)^0,w,c
  4011   0018A6  E106               	bnz	u2421
  4012   0018A8  0426               	decf	___flmul@temp^0,w,c
  4013   0018AA  B0D8               	btfsc	status,0,c
  4014   0018AC  EF5A  F00C         	goto	u2421
  4015   0018B0  EF5C  F00C         	goto	u2420
  4016   0018B4                     u2421:
  4017   0018B4  EF68  F00C         	goto	l1334
  4018   0018B8                     u2420:
  4019   0018B8  0E00               	movlw	0
  4020   0018BA  6E22               	movwf	___flmul@prod^0,c
  4021   0018BC  0E00               	movlw	0
  4022   0018BE  6E23               	movwf	(___flmul@prod+1)^0,c
  4023   0018C0  0E00               	movlw	0
  4024   0018C2  6E24               	movwf	(___flmul@prod+2)^0,c
  4025   0018C4  0E00               	movlw	0
  4026   0018C6  6E25               	movwf	(___flmul@prod+3)^0,c
  4027   0018C8  0E00               	movlw	0
  4028   0018CA  6E1B               	movwf	___flmul@sign^0,c
  4029   0018CC  EF7D  F00C         	goto	l3518
  4030   0018D0                     l1334:
  4031   0018D0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4032   0018D4  0EFF               	movlw	255
  4033   0018D6  1622               	andwf	___flmul@prod^0,f,c
  4034   0018D8  0EFF               	movlw	255
  4035   0018DA  1623               	andwf	(___flmul@prod+1)^0,f,c
  4036   0018DC  0E7F               	movlw	127
  4037   0018DE  1624               	andwf	(___flmul@prod+2)^0,f,c
  4038   0018E0  0E00               	movlw	0
  4039   0018E2  1625               	andwf	(___flmul@prod+3)^0,f,c
  4040   0018E4  A021               	btfss	___flmul@bexp^0,0,c
  4041   0018E6  EF77  F00C         	goto	u2431
  4042   0018EA  EF79  F00C         	goto	u2430
  4043   0018EE                     u2431:
  4044   0018EE  EF7A  F00C         	goto	l3516
  4045   0018F2                     u2430:
  4046   0018F2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4047   0018F4                     l3516:
  4048   0018F4  90D8               	bcf	status,0,c
  4049   0018F6  3021               	rrcf	___flmul@bexp^0,w,c
  4050   0018F8  6E25               	movwf	(___flmul@prod+3)^0,c
  4051   0018FA                     l3518:
  4052   0018FA  501B               	movf	___flmul@sign^0,w,c
  4053   0018FC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4054   0018FE  C022  F00F         	movff	___flmul@prod,?___flmul
  4055   001902  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4056   001906  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4057   00190A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4058   00190E                     l1321:
  4059   00190E  0012               	return		;funcret
  4060   001910                     __end_of___flmul:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _initUSART4 *****************
  4064 ;; Defined at:
  4065 ;;		line 5 in file "serial.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 1
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text20
  4094   002C60                     __ptext20:
  4095                           	callstack 0
  4096   002C60                     _initUSART4:
  4097                           	callstack 29
  4098   002C60                     
  4099                           ;serial.c: 9:     RC0PPS = 0x12;
  4100   002C60  0E12               	movlw	18
  4101   002C62  010E               	movlb	14	; () banked
  4102   002C64  6F62               	movwf	98,b	;volatile
  4103                           
  4104                           ;serial.c: 10:     RX4PPS = 0x11;
  4105   002C66  0E11               	movlw	17
  4106   002C68  6F15               	movwf	21,b	;volatile
  4107   002C6A                     
  4108                           ; BSR set to: 14
  4109                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4110   002C6A  97E9               	bcf	233,3,b	;volatile
  4111   002C6C                     
  4112                           ; BSR set to: 14
  4113                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4114   002C6C  95E8               	bcf	232,2,b	;volatile
  4115                           
  4116                           ;serial.c: 14:     SP4BRGL = 51;
  4117   002C6E  0E33               	movlw	51
  4118   002C70  6FE5               	movwf	229,b	;volatile
  4119                           
  4120                           ;serial.c: 15:     SP4BRGH = 0;
  4121   002C72  0E00               	movlw	0
  4122   002C74  6FE6               	movwf	230,b	;volatile
  4123   002C76                     
  4124                           ; BSR set to: 14
  4125                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4126   002C76  89E7               	bsf	231,4,b	;volatile
  4127   002C78                     
  4128                           ; BSR set to: 14
  4129                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4130   002C78  8BE8               	bsf	232,5,b	;volatile
  4131   002C7A                     
  4132                           ; BSR set to: 14
  4133                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4134   002C7A  8FE7               	bsf	231,7,b	;volatile
  4135   002C7C                     
  4136                           ; BSR set to: 14
  4137   002C7C  0012               	return		;funcret
  4138   002C7E                     __end_of_initUSART4:
  4139                           	callstack 0
  4140                           
  4141 ;; *************** function _initDCmotorsPWM *****************
  4142 ;; Defined at:
  4143 ;;		line 5 in file "dc_motor.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;Total ram usage:        2 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text21
  4172   00246A                     __ptext21:
  4173                           	callstack 0
  4174   00246A                     _initDCmotorsPWM:
  4175                           	callstack 29
  4176   00246A                     
  4177                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4178   00246A  9485               	bcf	133,2,c	;volatile
  4179                           
  4180                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4181   00246C  9885               	bcf	133,4,c	;volatile
  4182                           
  4183                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4184   00246E  9E83               	bcf	131,7,c	;volatile
  4185                           
  4186                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4187   002470  9C87               	bcf	135,6,c	;volatile
  4188                           
  4189                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4190   002472  947D               	bcf	125,2,c	;volatile
  4191                           
  4192                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4193   002474  987D               	bcf	125,4,c	;volatile
  4194                           
  4195                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4196   002476  9E7B               	bcf	123,7,c	;volatile
  4197                           
  4198                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4199   002478  9C7F               	bcf	127,6,c	;volatile
  4200   00247A                     
  4201                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4202   00247A  0E05               	movlw	5
  4203   00247C  010E               	movlb	14	; () banked
  4204   00247E  6F74               	movwf	116,b	;volatile
  4205                           
  4206                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4207   002480  0E06               	movlw	6
  4208   002482  6F76               	movwf	118,b	;volatile
  4209                           
  4210                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4211   002484  0E07               	movlw	7
  4212   002486  6F69               	movwf	105,b	;volatile
  4213                           
  4214                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4215   002488  0E08               	movlw	8
  4216   00248A  6F88               	movwf	136,b	;volatile
  4217                           
  4218                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  4219   00248C  50BD               	movf	189,w,c	;volatile
  4220   00248E  0B8F               	andlw	-113
  4221   002490  0940               	iorlw	64
  4222   002492  6EBD               	movwf	189,c	;volatile
  4223                           
  4224                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  4225   002494  0EE0               	movlw	-32
  4226   002496  16BE               	andwf	190,f,c	;volatile
  4227                           
  4228                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  4229   002498  50BF               	movf	191,w,c	;volatile
  4230   00249A  0BF0               	andlw	-16
  4231   00249C  0901               	iorlw	1
  4232   00249E  6EBF               	movwf	191,c	;volatile
  4233   0024A0                     
  4234                           ; BSR set to: 14
  4235                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  4236   0024A0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4237   0024A4                     
  4238                           ; BSR set to: 14
  4239                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  4240   0024A4  8EBD               	bsf	189,7,c	;volatile
  4241                           
  4242                           ;dc_motor.c: 35:     CCPR1H=0;
  4243   0024A6  0E00               	movlw	0
  4244   0024A8  6EAA               	movwf	170,c	;volatile
  4245                           
  4246                           ;dc_motor.c: 36:     CCPR2H=0;
  4247   0024AA  0E00               	movlw	0
  4248   0024AC  6EA6               	movwf	166,c	;volatile
  4249                           
  4250                           ;dc_motor.c: 37:     CCPR3H=0;
  4251   0024AE  0E00               	movlw	0
  4252   0024B0  010F               	movlb	15	; () banked
  4253   0024B2  6F25               	movwf	37,b	;volatile
  4254                           
  4255                           ;dc_motor.c: 38:     CCPR4H=0;
  4256   0024B4  0E00               	movlw	0
  4257   0024B6  6F21               	movwf	33,b	;volatile
  4258                           
  4259                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  4260   0024B8  0EFC               	movlw	-4
  4261   0024BA  16AD               	andwf	173,f,c	;volatile
  4262                           
  4263                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  4264   0024BC  0EF3               	movlw	-13
  4265   0024BE  16AD               	andwf	173,f,c	;volatile
  4266                           
  4267                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  4268   0024C0  0ECF               	movlw	-49
  4269   0024C2  16AD               	andwf	173,f,c	;volatile
  4270                           
  4271                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  4272   0024C4  0E3F               	movlw	-193
  4273   0024C6  16AD               	andwf	173,f,c	;volatile
  4274   0024C8                     
  4275                           ; BSR set to: 15
  4276                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  4277   0024C8  88AB               	bsf	171,4,c	;volatile
  4278                           
  4279                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  4280   0024CA  50AB               	movf	171,w,c	;volatile
  4281   0024CC  0BF0               	andlw	-16
  4282   0024CE  090C               	iorlw	12
  4283   0024D0  6EAB               	movwf	171,c	;volatile
  4284   0024D2                     
  4285                           ; BSR set to: 15
  4286                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  4287   0024D2  8EAB               	bsf	171,7,c	;volatile
  4288   0024D4                     
  4289                           ; BSR set to: 15
  4290                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  4291   0024D4  88A7               	bsf	167,4,c	;volatile
  4292                           
  4293                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  4294   0024D6  50A7               	movf	167,w,c	;volatile
  4295   0024D8  0BF0               	andlw	-16
  4296   0024DA  090C               	iorlw	12
  4297   0024DC  6EA7               	movwf	167,c	;volatile
  4298   0024DE                     
  4299                           ; BSR set to: 15
  4300                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  4301   0024DE  8EA7               	bsf	167,7,c	;volatile
  4302   0024E0                     
  4303                           ; BSR set to: 15
  4304                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  4305   0024E0  8926               	bsf	38,4,b	;volatile
  4306                           
  4307                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  4308   0024E2  5126               	movf	38,w,b	;volatile
  4309   0024E4  0BF0               	andlw	-16
  4310   0024E6  090C               	iorlw	12
  4311   0024E8  6F26               	movwf	38,b	;volatile
  4312   0024EA                     
  4313                           ; BSR set to: 15
  4314                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  4315   0024EA  8F26               	bsf	38,7,b	;volatile
  4316   0024EC                     
  4317                           ; BSR set to: 15
  4318                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  4319   0024EC  8922               	bsf	34,4,b	;volatile
  4320                           
  4321                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  4322   0024EE  5122               	movf	34,w,b	;volatile
  4323   0024F0  0BF0               	andlw	-16
  4324   0024F2  090C               	iorlw	12
  4325   0024F4  6F22               	movwf	34,b	;volatile
  4326   0024F6                     
  4327                           ; BSR set to: 15
  4328                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  4329   0024F6  8F22               	bsf	34,7,b	;volatile
  4330   0024F8                     
  4331                           ; BSR set to: 15
  4332   0024F8  0012               	return		;funcret
  4333   0024FA                     __end_of_initDCmotorsPWM:
  4334                           	callstack 0
  4335                           
  4336 ;; *************** function _getRGBCval *****************
  4337 ;; Defined at:
  4338 ;;		line 84 in file "color.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  4341 ;;		 -> main@measured_colour(8), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;Total ram usage:        1 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 4
  4360 ;; This function calls:
  4361 ;;		_color_read_Blue
  4362 ;;		_color_read_Clear
  4363 ;;		_color_read_Green
  4364 ;;		_color_read_Red
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;;		_wait_for_wall
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text22
  4372   0027BC                     __ptext22:
  4373                           	callstack 0
  4374   0027BC                     _getRGBCval:
  4375                           	callstack 26
  4376   0027BC                     
  4377                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  4378   0027BC  EC5D  F014         	call	_color_read_Red	;wreg free
  4379   0027C0  500C               	movf	getRGBCval@p^0,w,c
  4380   0027C2  6ED9               	movwf	fsr2l,c
  4381   0027C4  6ADA               	clrf	fsr2h,c
  4382   0027C6  C005  FFDE         	movff	?_color_read_Red,postinc2
  4383   0027CA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4384                           
  4385                           ;color.c: 87:     p->G = color_read_Green();
  4386   0027CE  EC85  F014         	call	_color_read_Green	;wreg free
  4387   0027D2  500C               	movf	getRGBCval@p^0,w,c
  4388   0027D4  6ED9               	movwf	fsr2l,c
  4389   0027D6  6ADA               	clrf	fsr2h,c
  4390   0027D8  0E02               	movlw	2
  4391   0027DA  26D9               	addwf	fsr2l,f,c
  4392   0027DC  C005  FFDE         	movff	?_color_read_Green,postinc2
  4393   0027E0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4394                           
  4395                           ;color.c: 88:     p->B = color_read_Blue();
  4396   0027E4  ECD5  F014         	call	_color_read_Blue	;wreg free
  4397   0027E8  500C               	movf	getRGBCval@p^0,w,c
  4398   0027EA  6ED9               	movwf	fsr2l,c
  4399   0027EC  6ADA               	clrf	fsr2h,c
  4400   0027EE  0E04               	movlw	4
  4401   0027F0  26D9               	addwf	fsr2l,f,c
  4402   0027F2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4403   0027F6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4404                           
  4405                           ;color.c: 89:     p->C = color_read_Clear();
  4406   0027FA  ECAD  F014         	call	_color_read_Clear	;wreg free
  4407   0027FE  500C               	movf	getRGBCval@p^0,w,c
  4408   002800  6ED9               	movwf	fsr2l,c
  4409   002802  6ADA               	clrf	fsr2h,c
  4410   002804  0E06               	movlw	6
  4411   002806  26D9               	addwf	fsr2l,f,c
  4412   002808  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4413   00280C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4414   002810  0012               	return		;funcret
  4415   002812                     __end_of_getRGBCval:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _color_read_Red *****************
  4419 ;; Defined at:
  4420 ;;		line 28 in file "color.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  tmp             2    9[COMRAM] unsigned int 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  2    4[COMRAM] unsigned int 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4436 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;Total ram usage:        7 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 3
  4441 ;; This function calls:
  4442 ;;		_I2C_2_Master_Read
  4443 ;;		_I2C_2_Master_RepStart
  4444 ;;		_I2C_2_Master_Start
  4445 ;;		_I2C_2_Master_Stop
  4446 ;;		_I2C_2_Master_Write
  4447 ;; This function is called by:
  4448 ;;		_getRGBCval
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text23
  4453   0028BA                     __ptext23:
  4454                           	callstack 0
  4455   0028BA                     _color_read_Red:
  4456                           	callstack 26
  4457   0028BA                     
  4458                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  4459   0028BA  EC71  F016         	call	_I2C_2_Master_Start	;wreg free
  4460                           
  4461                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  4462   0028BE  0E52               	movlw	82
  4463   0028C0  EC55  F016         	call	_I2C_2_Master_Write
  4464                           
  4465                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  4466   0028C4  0EB6               	movlw	182
  4467   0028C6  EC55  F016         	call	_I2C_2_Master_Write
  4468                           
  4469                           ;color.c: 34:  I2C_2_Master_RepStart();
  4470   0028CA  EC67  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4471                           
  4472                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  4473   0028CE  0E53               	movlw	83
  4474   0028D0  EC55  F016         	call	_I2C_2_Master_Write
  4475                           
  4476                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  4477   0028D4  0E01               	movlw	1
  4478   0028D6  EC49  F015         	call	_I2C_2_Master_Read
  4479   0028DA  6E07               	movwf	??_color_read_Red^0,c
  4480   0028DC  5007               	movf	??_color_read_Red^0,w,c
  4481   0028DE  6E0A               	movwf	color_read_Red@tmp^0,c
  4482   0028E0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4483                           
  4484                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4485   0028E2  0E00               	movlw	0
  4486   0028E4  EC49  F015         	call	_I2C_2_Master_Read
  4487   0028E8  6E07               	movwf	??_color_read_Red^0,c
  4488   0028EA  5007               	movf	??_color_read_Red^0,w,c
  4489   0028EC  6E09               	movwf	(??_color_read_Red+2)^0,c
  4490   0028EE  6A08               	clrf	(??_color_read_Red+1)^0,c
  4491   0028F0  500A               	movf	color_read_Red@tmp^0,w,c
  4492   0028F2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4493   0028F4  6E0A               	movwf	color_read_Red@tmp^0,c
  4494   0028F6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4495   0028F8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4496   0028FA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4497                           
  4498                           ;color.c: 38:  I2C_2_Master_Stop();
  4499   0028FC  EC6C  F016         	call	_I2C_2_Master_Stop	;wreg free
  4500   002900                     
  4501                           ;color.c: 39:  return tmp;
  4502   002900  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4503   002904  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4504   002908  0012               	return		;funcret
  4505   00290A                     __end_of_color_read_Red:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _color_read_Green *****************
  4509 ;; Defined at:
  4510 ;;		line 42 in file "color.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  tmp             2    9[COMRAM] unsigned int 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  2    4[COMRAM] unsigned int 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;Total ram usage:        7 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 3
  4531 ;; This function calls:
  4532 ;;		_I2C_2_Master_Read
  4533 ;;		_I2C_2_Master_RepStart
  4534 ;;		_I2C_2_Master_Start
  4535 ;;		_I2C_2_Master_Stop
  4536 ;;		_I2C_2_Master_Write
  4537 ;; This function is called by:
  4538 ;;		_getRGBCval
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text24
  4543   00290A                     __ptext24:
  4544                           	callstack 0
  4545   00290A                     _color_read_Green:
  4546                           	callstack 26
  4547   00290A                     
  4548                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  4549   00290A  EC71  F016         	call	_I2C_2_Master_Start	;wreg free
  4550                           
  4551                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  4552   00290E  0E52               	movlw	82
  4553   002910  EC55  F016         	call	_I2C_2_Master_Write
  4554                           
  4555                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x18);
  4556   002914  0EB8               	movlw	184
  4557   002916  EC55  F016         	call	_I2C_2_Master_Write
  4558                           
  4559                           ;color.c: 48:  I2C_2_Master_RepStart();
  4560   00291A  EC67  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4561                           
  4562                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  4563   00291E  0E53               	movlw	83
  4564   002920  EC55  F016         	call	_I2C_2_Master_Write
  4565                           
  4566                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  4567   002924  0E01               	movlw	1
  4568   002926  EC49  F015         	call	_I2C_2_Master_Read
  4569   00292A  6E07               	movwf	??_color_read_Green^0,c
  4570   00292C  5007               	movf	??_color_read_Green^0,w,c
  4571   00292E  6E0A               	movwf	color_read_Green@tmp^0,c
  4572   002930  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4573                           
  4574                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4575   002932  0E00               	movlw	0
  4576   002934  EC49  F015         	call	_I2C_2_Master_Read
  4577   002938  6E07               	movwf	??_color_read_Green^0,c
  4578   00293A  5007               	movf	??_color_read_Green^0,w,c
  4579   00293C  6E09               	movwf	(??_color_read_Green+2)^0,c
  4580   00293E  6A08               	clrf	(??_color_read_Green+1)^0,c
  4581   002940  500A               	movf	color_read_Green@tmp^0,w,c
  4582   002942  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4583   002944  6E0A               	movwf	color_read_Green@tmp^0,c
  4584   002946  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4585   002948  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4586   00294A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4587                           
  4588                           ;color.c: 52:  I2C_2_Master_Stop();
  4589   00294C  EC6C  F016         	call	_I2C_2_Master_Stop	;wreg free
  4590   002950                     
  4591                           ;color.c: 53:  return tmp;
  4592   002950  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4593   002954  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4594   002958  0012               	return		;funcret
  4595   00295A                     __end_of_color_read_Green:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _color_read_Clear *****************
  4599 ;; Defined at:
  4600 ;;		line 70 in file "color.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  tmp             2    9[COMRAM] unsigned int 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    4[COMRAM] unsigned int 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;Total ram usage:        7 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 3
  4621 ;; This function calls:
  4622 ;;		_I2C_2_Master_Read
  4623 ;;		_I2C_2_Master_RepStart
  4624 ;;		_I2C_2_Master_Start
  4625 ;;		_I2C_2_Master_Stop
  4626 ;;		_I2C_2_Master_Write
  4627 ;; This function is called by:
  4628 ;;		_getRGBCval
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text25
  4633   00295A                     __ptext25:
  4634                           	callstack 0
  4635   00295A                     _color_read_Clear:
  4636                           	callstack 26
  4637   00295A                     
  4638                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  4639   00295A  EC71  F016         	call	_I2C_2_Master_Start	;wreg free
  4640                           
  4641                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  4642   00295E  0E52               	movlw	82
  4643   002960  EC55  F016         	call	_I2C_2_Master_Write
  4644                           
  4645                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  4646   002964  0EB4               	movlw	180
  4647   002966  EC55  F016         	call	_I2C_2_Master_Write
  4648                           
  4649                           ;color.c: 76:  I2C_2_Master_RepStart();
  4650   00296A  EC67  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4651                           
  4652                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  4653   00296E  0E53               	movlw	83
  4654   002970  EC55  F016         	call	_I2C_2_Master_Write
  4655                           
  4656                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  4657   002974  0E01               	movlw	1
  4658   002976  EC49  F015         	call	_I2C_2_Master_Read
  4659   00297A  6E07               	movwf	??_color_read_Clear^0,c
  4660   00297C  5007               	movf	??_color_read_Clear^0,w,c
  4661   00297E  6E0A               	movwf	color_read_Clear@tmp^0,c
  4662   002980  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4663                           
  4664                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4665   002982  0E00               	movlw	0
  4666   002984  EC49  F015         	call	_I2C_2_Master_Read
  4667   002988  6E07               	movwf	??_color_read_Clear^0,c
  4668   00298A  5007               	movf	??_color_read_Clear^0,w,c
  4669   00298C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4670   00298E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4671   002990  500A               	movf	color_read_Clear@tmp^0,w,c
  4672   002992  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4673   002994  6E0A               	movwf	color_read_Clear@tmp^0,c
  4674   002996  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4675   002998  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4676   00299A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4677                           
  4678                           ;color.c: 80:  I2C_2_Master_Stop();
  4679   00299C  EC6C  F016         	call	_I2C_2_Master_Stop	;wreg free
  4680   0029A0                     
  4681                           ;color.c: 81:  return tmp;
  4682   0029A0  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4683   0029A4  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4684   0029A8  0012               	return		;funcret
  4685   0029AA                     __end_of_color_read_Clear:
  4686                           	callstack 0
  4687                           
  4688 ;; *************** function _color_read_Blue *****************
  4689 ;; Defined at:
  4690 ;;		line 56 in file "color.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  tmp             2    9[COMRAM] unsigned int 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  2    4[COMRAM] unsigned int 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;Total ram usage:        7 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 3
  4711 ;; This function calls:
  4712 ;;		_I2C_2_Master_Read
  4713 ;;		_I2C_2_Master_RepStart
  4714 ;;		_I2C_2_Master_Start
  4715 ;;		_I2C_2_Master_Stop
  4716 ;;		_I2C_2_Master_Write
  4717 ;; This function is called by:
  4718 ;;		_getRGBCval
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text26
  4723   0029AA                     __ptext26:
  4724                           	callstack 0
  4725   0029AA                     _color_read_Blue:
  4726                           	callstack 26
  4727   0029AA                     
  4728                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  4729   0029AA  EC71  F016         	call	_I2C_2_Master_Start	;wreg free
  4730                           
  4731                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  4732   0029AE  0E52               	movlw	82
  4733   0029B0  EC55  F016         	call	_I2C_2_Master_Write
  4734                           
  4735                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x1A);
  4736   0029B4  0EBA               	movlw	186
  4737   0029B6  EC55  F016         	call	_I2C_2_Master_Write
  4738                           
  4739                           ;color.c: 62:  I2C_2_Master_RepStart();
  4740   0029BA  EC67  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4741                           
  4742                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  4743   0029BE  0E53               	movlw	83
  4744   0029C0  EC55  F016         	call	_I2C_2_Master_Write
  4745                           
  4746                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  4747   0029C4  0E01               	movlw	1
  4748   0029C6  EC49  F015         	call	_I2C_2_Master_Read
  4749   0029CA  6E07               	movwf	??_color_read_Blue^0,c
  4750   0029CC  5007               	movf	??_color_read_Blue^0,w,c
  4751   0029CE  6E0A               	movwf	color_read_Blue@tmp^0,c
  4752   0029D0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4753                           
  4754                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4755   0029D2  0E00               	movlw	0
  4756   0029D4  EC49  F015         	call	_I2C_2_Master_Read
  4757   0029D8  6E07               	movwf	??_color_read_Blue^0,c
  4758   0029DA  5007               	movf	??_color_read_Blue^0,w,c
  4759   0029DC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4760   0029DE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4761   0029E0  500A               	movf	color_read_Blue@tmp^0,w,c
  4762   0029E2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4763   0029E4  6E0A               	movwf	color_read_Blue@tmp^0,c
  4764   0029E6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4765   0029E8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4766   0029EA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4767                           
  4768                           ;color.c: 66:  I2C_2_Master_Stop();
  4769   0029EC  EC6C  F016         	call	_I2C_2_Master_Stop	;wreg free
  4770   0029F0                     
  4771                           ;color.c: 67:  return tmp;
  4772   0029F0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4773   0029F4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4774   0029F8  0012               	return		;funcret
  4775   0029FA                     __end_of_color_read_Blue:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function _I2C_2_Master_RepStart *****************
  4779 ;; Defined at:
  4780 ;;		line 33 in file "i2c.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 2
  4801 ;; This function calls:
  4802 ;;		_I2C_2_Master_Idle
  4803 ;; This function is called by:
  4804 ;;		_color_read_Red
  4805 ;;		_color_read_Green
  4806 ;;		_color_read_Blue
  4807 ;;		_color_read_Clear
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text27
  4812   002CCE                     __ptext27:
  4813                           	callstack 0
  4814   002CCE                     _I2C_2_Master_RepStart:
  4815                           	callstack 26
  4816   002CCE                     
  4817                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4818   002CCE  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  4819   002CD2                     
  4820                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4821   002CD2  010E               	movlb	14	; () banked
  4822   002CD4  83DA               	bsf	218,1,b	;volatile
  4823   002CD6                     
  4824                           ; BSR set to: 14
  4825   002CD6  0012               	return		;funcret
  4826   002CD8                     __end_of_I2C_2_Master_RepStart:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function _I2C_2_Master_Read *****************
  4830 ;; Defined at:
  4831 ;;		line 51 in file "i2c.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  ack             1    wreg     unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  ack             1    2[COMRAM] unsigned char 
  4836 ;;  tmp             1    3[COMRAM] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      unsigned char 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;Total ram usage:        3 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 2
  4853 ;; This function calls:
  4854 ;;		_I2C_2_Master_Idle
  4855 ;; This function is called by:
  4856 ;;		_color_read_Red
  4857 ;;		_color_read_Green
  4858 ;;		_color_read_Blue
  4859 ;;		_color_read_Clear
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text28
  4864   002A92                     __ptext28:
  4865                           	callstack 0
  4866   002A92                     _I2C_2_Master_Read:
  4867                           	callstack 26
  4868                           
  4869                           ; BSR set to: 14
  4870                           ;incstack = 0
  4871                           ;I2C_2_Master_Read@ack stored from wreg
  4872   002A92  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4873   002A94                     
  4874                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4875   002A94  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  4876   002A98                     
  4877                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4878   002A98  010E               	movlb	14	; () banked
  4879   002A9A  87DA               	bsf	218,3,b	;volatile
  4880                           
  4881                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4882   002A9C  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  4883   002AA0                     
  4884                           ;i2c.c: 57:   tmp = SSP2BUF;
  4885   002AA0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4886                           
  4887                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4888   002AA4  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  4889   002AA8                     
  4890                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4891   002AA8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4892   002AAA  B4D8               	btfsc	status,2,c
  4893   002AAC  EF5A  F015         	goto	u2111
  4894   002AB0  EF5E  F015         	goto	u2110
  4895   002AB4                     u2111:
  4896   002AB4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4897   002AB6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4898   002AB8  EF5F  F015         	goto	u2128
  4899   002ABC                     u2110:
  4900   002ABC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4901   002ABE                     u2128:
  4902   002ABE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4903   002AC0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4904   002AC2  010E               	movlb	14	; () banked
  4905   002AC4  51DA               	movf	218,w,b	;volatile
  4906   002AC6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4907   002AC8  0BDF               	andlw	-33
  4908   002ACA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4909   002ACC  6FDA               	movwf	218,b	;volatile
  4910   002ACE                     
  4911                           ; BSR set to: 14
  4912                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4913   002ACE  89DA               	bsf	218,4,b	;volatile
  4914   002AD0                     
  4915                           ; BSR set to: 14
  4916                           ;i2c.c: 61:   return tmp;
  4917   002AD0  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4918   002AD2                     
  4919                           ; BSR set to: 14
  4920   002AD2  0012               	return		;funcret
  4921   002AD4                     __end_of_I2C_2_Master_Read:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function _getHSVval *****************
  4925 ;; Defined at:
  4926 ;;		line 136 in file "color.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  4929 ;;		 -> main@HSV_colour(6), 
  4930 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  4931 ;;		 -> main@measured_colour(8), 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  temp            4   51[COMRAM] unsigned long 
  4934 ;;  temp            4   47[COMRAM] unsigned long 
  4935 ;;  temp            4   43[COMRAM] unsigned long 
  4936 ;;  temp            4   39[COMRAM] unsigned long 
  4937 ;;  temp            4   55[COMRAM] unsigned long 
  4938 ;;  temp            4   35[COMRAM] unsigned long 
  4939 ;;  temp            4   31[COMRAM] unsigned long 
  4940 ;;  C               2   61[COMRAM] unsigned int 
  4941 ;;  M               2   59[COMRAM] unsigned int 
  4942 ;;  Hz              2    0        unsigned int 
  4943 ;;  H               2   29[COMRAM] unsigned int 
  4944 ;;  S               2   27[COMRAM] unsigned int 
  4945 ;;  m               2   25[COMRAM] unsigned int 
  4946 ;;  Sz              2   23[COMRAM] unsigned int 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Totals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;Total ram usage:       50 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 3
  4963 ;; This function calls:
  4964 ;;		___lldiv
  4965 ;;		___lmul
  4966 ;;		_maxRGB
  4967 ;;		_minRGB
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text29
  4974   000E1A                     __ptext29:
  4975                           	callstack 0
  4976   000E1A                     _getHSVval:
  4977                           	callstack 27
  4978   000E1A                     
  4979                           ;color.c: 139:     unsigned int Sz = 100;
  4980   000E1A  0E00               	movlw	0
  4981   000E1C  6E19               	movwf	(getHSVval@Sz+1)^0,c
  4982   000E1E  0E64               	movlw	100
  4983   000E20  6E18               	movwf	getHSVval@Sz^0,c
  4984                           
  4985                           ;color.c: 140:     unsigned int H = 0;
  4986   000E22  0E00               	movlw	0
  4987   000E24  6E1F               	movwf	(getHSVval@H+1)^0,c
  4988   000E26  0E00               	movlw	0
  4989   000E28  6E1E               	movwf	getHSVval@H^0,c
  4990                           
  4991                           ;color.c: 141:     unsigned int S = 0;
  4992   000E2A  0E00               	movlw	0
  4993   000E2C  6E1D               	movwf	(getHSVval@S+1)^0,c
  4994   000E2E  0E00               	movlw	0
  4995   000E30  6E1C               	movwf	getHSVval@S^0,c
  4996   000E32                     
  4997                           ;color.c: 143:     unsigned int M = maxRGB(p2);
  4998   000E32  C00F  F007         	movff	getHSVval@p2,maxRGB@p
  4999   000E36  EC33  F014         	call	_maxRGB	;wreg free
  5000   000E3A  C007  F03C         	movff	?_maxRGB,getHSVval@M
  5001   000E3E  C008  F03D         	movff	?_maxRGB+1,getHSVval@M+1
  5002   000E42                     
  5003                           ;color.c: 144:     unsigned int m = minRGB(p2);
  5004   000E42  C00F  F007         	movff	getHSVval@p2,minRGB@p
  5005   000E46  EC09  F014         	call	_minRGB	;wreg free
  5006   000E4A  C007  F01A         	movff	?_minRGB,getHSVval@m
  5007   000E4E  C008  F01B         	movff	?_minRGB+1,getHSVval@m+1
  5008   000E52                     
  5009                           ;color.c: 145:     unsigned int C = M - m;
  5010   000E52  501A               	movf	getHSVval@m^0,w,c
  5011   000E54  5C3C               	subwf	getHSVval@M^0,w,c
  5012   000E56  6E3E               	movwf	getHSVval@C^0,c
  5013   000E58  501B               	movf	(getHSVval@m+1)^0,w,c
  5014   000E5A  583D               	subwfb	(getHSVval@M+1)^0,w,c
  5015   000E5C  6E3F               	movwf	(getHSVval@C+1)^0,c
  5016   000E5E                     
  5017                           ;color.c: 147:     if (C == 0) {
  5018   000E5E  503E               	movf	getHSVval@C^0,w,c
  5019   000E60  103F               	iorwf	(getHSVval@C+1)^0,w,c
  5020   000E62  A4D8               	btfss	status,2,c
  5021   000E64  EF36  F007         	goto	u2761
  5022   000E68  EF38  F007         	goto	u2760
  5023   000E6C                     u2761:
  5024   000E6C  EF3E  F007         	goto	l3652
  5025   000E70                     u2760:
  5026   000E70                     
  5027                           ;color.c: 148:         H = 0;
  5028   000E70  0E00               	movlw	0
  5029   000E72  6E1F               	movwf	(getHSVval@H+1)^0,c
  5030   000E74  0E00               	movlw	0
  5031   000E76  6E1E               	movwf	getHSVval@H^0,c
  5032                           
  5033                           ;color.c: 149:     } else {
  5034   000E78  EF0E  F00A         	goto	l3736
  5035   000E7C                     l3652:
  5036                           
  5037                           ;color.c: 150:         if (M == p2->R) {
  5038   000E7C  500F               	movf	getHSVval@p2^0,w,c
  5039   000E7E  6ED9               	movwf	fsr2l,c
  5040   000E80  6ADA               	clrf	fsr2h,c
  5041   000E82  503C               	movf	getHSVval@M^0,w,c
  5042   000E84  18DE               	xorwf	postinc2,w,c
  5043   000E86  E107               	bnz	u2771
  5044   000E88  503D               	movf	(getHSVval@M+1)^0,w,c
  5045   000E8A  18DE               	xorwf	postinc2,w,c
  5046   000E8C  A4D8               	btfss	status,2,c
  5047   000E8E  EF4B  F007         	goto	u2771
  5048   000E92  EF4D  F007         	goto	u2770
  5049   000E96                     u2771:
  5050   000E96  EF3A  F008         	goto	l3680
  5051   000E9A                     u2770:
  5052   000E9A                     
  5053                           ;color.c: 151:             if (p2->G >= p2->B) {
  5054   000E9A  500F               	movf	getHSVval@p2^0,w,c
  5055   000E9C  6ED9               	movwf	fsr2l,c
  5056   000E9E  6ADA               	clrf	fsr2h,c
  5057   000EA0  0E04               	movlw	4
  5058   000EA2  26D9               	addwf	fsr2l,f,c
  5059   000EA4  500F               	movf	getHSVval@p2^0,w,c
  5060   000EA6  6EE1               	movwf	fsr1l,c
  5061   000EA8  6AE2               	clrf	fsr1h,c
  5062   000EAA  0E02               	movlw	2
  5063   000EAC  26E1               	addwf	fsr1l,f,c
  5064   000EAE  50DE               	movf	postinc2,w,c
  5065   000EB0  5CE6               	subwf	postinc1,w,c
  5066   000EB2  50DE               	movf	postinc2,w,c
  5067   000EB4  58E6               	subwfb	postinc1,w,c
  5068   000EB6  A0D8               	btfss	status,0,c
  5069   000EB8  EF60  F007         	goto	u2781
  5070   000EBC  EF62  F007         	goto	u2780
  5071   000EC0                     u2781:
  5072   000EC0  EFC2  F007         	goto	l3668
  5073   000EC4                     u2780:
  5074   000EC4                     
  5075                           ;color.c: 155:                 temp *= 0;
  5076   000EC4  0E00               	movlw	0
  5077   000EC6  6E24               	movwf	getHSVval@temp^0,c
  5078   000EC8  0E00               	movlw	0
  5079   000ECA  6E25               	movwf	(getHSVval@temp+1)^0,c
  5080   000ECC  0E00               	movlw	0
  5081   000ECE  6E26               	movwf	(getHSVval@temp+2)^0,c
  5082   000ED0  0E00               	movlw	0
  5083   000ED2  6E27               	movwf	(getHSVval@temp+3)^0,c
  5084   000ED4                     
  5085                           ;color.c: 156:                 temp += (unsigned long)(p2->G - p2->B);
  5086   000ED4  500F               	movf	getHSVval@p2^0,w,c
  5087   000ED6  6ED9               	movwf	fsr2l,c
  5088   000ED8  6ADA               	clrf	fsr2h,c
  5089   000EDA  0E04               	movlw	4
  5090   000EDC  26D9               	addwf	fsr2l,f,c
  5091   000EDE  CFDE F010          	movff	postinc2,??_getHSVval
  5092   000EE2  CFDD F011          	movff	postdec2,??_getHSVval+1
  5093   000EE6  500F               	movf	getHSVval@p2^0,w,c
  5094   000EE8  6ED9               	movwf	fsr2l,c
  5095   000EEA  6ADA               	clrf	fsr2h,c
  5096   000EEC  0E02               	movlw	2
  5097   000EEE  26D9               	addwf	fsr2l,f,c
  5098   000EF0  CFDE F012          	movff	postinc2,??_getHSVval+2
  5099   000EF4  CFDD F013          	movff	postdec2,??_getHSVval+3
  5100   000EF8  5010               	movf	??_getHSVval^0,w,c
  5101   000EFA  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5102   000EFC  6E14               	movwf	(??_getHSVval+4)^0,c
  5103   000EFE  5011               	movf	(??_getHSVval+1)^0,w,c
  5104   000F00  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5105   000F02  6E15               	movwf	(??_getHSVval+5)^0,c
  5106   000F04  5014               	movf	(??_getHSVval+4)^0,w,c
  5107   000F06  2624               	addwf	getHSVval@temp^0,f,c
  5108   000F08  5015               	movf	(??_getHSVval+5)^0,w,c
  5109   000F0A  2225               	addwfc	(getHSVval@temp+1)^0,f,c
  5110   000F0C  0E00               	movlw	0
  5111   000F0E  2226               	addwfc	(getHSVval@temp+2)^0,f,c
  5112   000F10  0E00               	movlw	0
  5113   000F12  2227               	addwfc	(getHSVval@temp+3)^0,f,c
  5114   000F14                     
  5115                           ;color.c: 157:                 temp *= (unsigned long)Hz;
  5116   000F14  C024  F001         	movff	getHSVval@temp,___lmul@multiplier
  5117   000F18  C025  F002         	movff	getHSVval@temp+1,___lmul@multiplier+1
  5118   000F1C  C026  F003         	movff	getHSVval@temp+2,___lmul@multiplier+2
  5119   000F20  C027  F004         	movff	getHSVval@temp+3,___lmul@multiplier+3
  5120   000F24  0E3C               	movlw	60
  5121   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  5122   000F28  0E00               	movlw	0
  5123   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5124   000F2C  0E00               	movlw	0
  5125   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5126   000F30  0E00               	movlw	0
  5127   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5128   000F34  ECEC  F012         	call	___lmul	;wreg free
  5129   000F38  C001  F024         	movff	?___lmul,getHSVval@temp
  5130   000F3C  C002  F025         	movff	?___lmul+1,getHSVval@temp+1
  5131   000F40  C003  F026         	movff	?___lmul+2,getHSVval@temp+2
  5132   000F44  C004  F027         	movff	?___lmul+3,getHSVval@temp+3
  5133   000F48                     
  5134                           ;color.c: 158:                 temp /= (unsigned long)C;
  5135   000F48  C024  F001         	movff	getHSVval@temp,___lldiv@dividend
  5136   000F4C  C025  F002         	movff	getHSVval@temp+1,___lldiv@dividend+1
  5137   000F50  C026  F003         	movff	getHSVval@temp+2,___lldiv@dividend+2
  5138   000F54  C027  F004         	movff	getHSVval@temp+3,___lldiv@dividend+3
  5139   000F58  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5140   000F5C  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5141   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5142   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5143   000F64  ECE3  F011         	call	___lldiv	;wreg free
  5144   000F68  C001  F024         	movff	?___lldiv,getHSVval@temp
  5145   000F6C  C002  F025         	movff	?___lldiv+1,getHSVval@temp+1
  5146   000F70  C003  F026         	movff	?___lldiv+2,getHSVval@temp+2
  5147   000F74  C004  F027         	movff	?___lldiv+3,getHSVval@temp+3
  5148   000F78                     
  5149                           ;color.c: 159:                 H = (unsigned int)temp;
  5150   000F78  C024  F01E         	movff	getHSVval@temp,getHSVval@H
  5151   000F7C  C025  F01F         	movff	getHSVval@temp+1,getHSVval@H+1
  5152                           
  5153                           ;color.c: 160:             } else {
  5154   000F80  EF3A  F008         	goto	l3680
  5155   000F84                     l3668:
  5156                           
  5157                           ;color.c: 162:                 unsigned long temp;;color.c: 163:                 temp = 
      +                          (unsigned long)C;
  5158   000F84  C03E  F038         	movff	getHSVval@C,getHSVval@temp_626
  5159   000F88  C03F  F039         	movff	getHSVval@C+1,getHSVval@temp_626+1
  5160   000F8C  6A3A               	clrf	(getHSVval@temp_626+2)^0,c
  5161   000F8E  6A3B               	clrf	(getHSVval@temp_626+3)^0,c
  5162   000F90                     
  5163                           ;color.c: 164:                 temp *= 6;
  5164   000F90  C038  F001         	movff	getHSVval@temp_626,___lmul@multiplier
  5165   000F94  C039  F002         	movff	getHSVval@temp_626+1,___lmul@multiplier+1
  5166   000F98  C03A  F003         	movff	getHSVval@temp_626+2,___lmul@multiplier+2
  5167   000F9C  C03B  F004         	movff	getHSVval@temp_626+3,___lmul@multiplier+3
  5168   000FA0  0E06               	movlw	6
  5169   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  5170   000FA4  0E00               	movlw	0
  5171   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5172   000FA8  0E00               	movlw	0
  5173   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5174   000FAC  0E00               	movlw	0
  5175   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5176   000FB0  ECEC  F012         	call	___lmul	;wreg free
  5177   000FB4  C001  F038         	movff	?___lmul,getHSVval@temp_626
  5178   000FB8  C002  F039         	movff	?___lmul+1,getHSVval@temp_626+1
  5179   000FBC  C003  F03A         	movff	?___lmul+2,getHSVval@temp_626+2
  5180   000FC0  C004  F03B         	movff	?___lmul+3,getHSVval@temp_626+3
  5181   000FC4                     
  5182                           ;color.c: 165:                 temp -= (unsigned long)(p2->B - p2->G);
  5183   000FC4  500F               	movf	getHSVval@p2^0,w,c
  5184   000FC6  6ED9               	movwf	fsr2l,c
  5185   000FC8  6ADA               	clrf	fsr2h,c
  5186   000FCA  0E02               	movlw	2
  5187   000FCC  26D9               	addwf	fsr2l,f,c
  5188   000FCE  CFDE F010          	movff	postinc2,??_getHSVval
  5189   000FD2  CFDD F011          	movff	postdec2,??_getHSVval+1
  5190   000FD6  500F               	movf	getHSVval@p2^0,w,c
  5191   000FD8  6ED9               	movwf	fsr2l,c
  5192   000FDA  6ADA               	clrf	fsr2h,c
  5193   000FDC  0E04               	movlw	4
  5194   000FDE  26D9               	addwf	fsr2l,f,c
  5195   000FE0  CFDE F012          	movff	postinc2,??_getHSVval+2
  5196   000FE4  CFDD F013          	movff	postdec2,??_getHSVval+3
  5197   000FE8  5010               	movf	??_getHSVval^0,w,c
  5198   000FEA  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5199   000FEC  6E14               	movwf	(??_getHSVval+4)^0,c
  5200   000FEE  5011               	movf	(??_getHSVval+1)^0,w,c
  5201   000FF0  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5202   000FF2  6E15               	movwf	(??_getHSVval+5)^0,c
  5203   000FF4  6A16               	clrf	(??_getHSVval+6)^0,c
  5204   000FF6  6A17               	clrf	(??_getHSVval+7)^0,c
  5205   000FF8  5014               	movf	(??_getHSVval+4)^0,w,c
  5206   000FFA  5E38               	subwf	getHSVval@temp_626^0,f,c
  5207   000FFC  5015               	movf	(??_getHSVval+5)^0,w,c
  5208   000FFE  5A39               	subwfb	(getHSVval@temp_626+1)^0,f,c
  5209   001000  5016               	movf	(??_getHSVval+6)^0,w,c
  5210   001002  5A3A               	subwfb	(getHSVval@temp_626+2)^0,f,c
  5211   001004  5017               	movf	(??_getHSVval+7)^0,w,c
  5212   001006  5A3B               	subwfb	(getHSVval@temp_626+3)^0,f,c
  5213   001008                     
  5214                           ;color.c: 166:                 temp *= (unsigned long)Hz;
  5215   001008  C038  F001         	movff	getHSVval@temp_626,___lmul@multiplier
  5216   00100C  C039  F002         	movff	getHSVval@temp_626+1,___lmul@multiplier+1
  5217   001010  C03A  F003         	movff	getHSVval@temp_626+2,___lmul@multiplier+2
  5218   001014  C03B  F004         	movff	getHSVval@temp_626+3,___lmul@multiplier+3
  5219   001018  0E3C               	movlw	60
  5220   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  5221   00101C  0E00               	movlw	0
  5222   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5223   001020  0E00               	movlw	0
  5224   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5225   001024  0E00               	movlw	0
  5226   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5227   001028  ECEC  F012         	call	___lmul	;wreg free
  5228   00102C  C001  F038         	movff	?___lmul,getHSVval@temp_626
  5229   001030  C002  F039         	movff	?___lmul+1,getHSVval@temp_626+1
  5230   001034  C003  F03A         	movff	?___lmul+2,getHSVval@temp_626+2
  5231   001038  C004  F03B         	movff	?___lmul+3,getHSVval@temp_626+3
  5232   00103C                     
  5233                           ;color.c: 167:                 temp /= (unsigned long)C;
  5234   00103C  C038  F001         	movff	getHSVval@temp_626,___lldiv@dividend
  5235   001040  C039  F002         	movff	getHSVval@temp_626+1,___lldiv@dividend+1
  5236   001044  C03A  F003         	movff	getHSVval@temp_626+2,___lldiv@dividend+2
  5237   001048  C03B  F004         	movff	getHSVval@temp_626+3,___lldiv@dividend+3
  5238   00104C  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5239   001050  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5240   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5241   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5242   001058  ECE3  F011         	call	___lldiv	;wreg free
  5243   00105C  C001  F038         	movff	?___lldiv,getHSVval@temp_626
  5244   001060  C002  F039         	movff	?___lldiv+1,getHSVval@temp_626+1
  5245   001064  C003  F03A         	movff	?___lldiv+2,getHSVval@temp_626+2
  5246   001068  C004  F03B         	movff	?___lldiv+3,getHSVval@temp_626+3
  5247   00106C                     
  5248                           ;color.c: 168:                 H = (unsigned int)temp;
  5249   00106C  C038  F01E         	movff	getHSVval@temp_626,getHSVval@H
  5250   001070  C039  F01F         	movff	getHSVval@temp_626+1,getHSVval@H+1
  5251   001074                     l3680:
  5252                           
  5253                           ;color.c: 171:         if (M == p2->G) {
  5254   001074  500F               	movf	getHSVval@p2^0,w,c
  5255   001076  6ED9               	movwf	fsr2l,c
  5256   001078  6ADA               	clrf	fsr2h,c
  5257   00107A  0E02               	movlw	2
  5258   00107C  26D9               	addwf	fsr2l,f,c
  5259   00107E  503C               	movf	getHSVval@M^0,w,c
  5260   001080  18DE               	xorwf	postinc2,w,c
  5261   001082  E107               	bnz	u2791
  5262   001084  503D               	movf	(getHSVval@M+1)^0,w,c
  5263   001086  18DE               	xorwf	postinc2,w,c
  5264   001088  A4D8               	btfss	status,2,c
  5265   00108A  EF49  F008         	goto	u2791
  5266   00108E  EF4B  F008         	goto	u2790
  5267   001092                     u2791:
  5268   001092  EF20  F009         	goto	l3708
  5269   001096                     u2790:
  5270   001096                     
  5271                           ;color.c: 172:             if (p2->B >= p2->R) {
  5272   001096  500F               	movf	getHSVval@p2^0,w,c
  5273   001098  6ED9               	movwf	fsr2l,c
  5274   00109A  6ADA               	clrf	fsr2h,c
  5275   00109C  500F               	movf	getHSVval@p2^0,w,c
  5276   00109E  6EE1               	movwf	fsr1l,c
  5277   0010A0  6AE2               	clrf	fsr1h,c
  5278   0010A2  0E04               	movlw	4
  5279   0010A4  26E1               	addwf	fsr1l,f,c
  5280   0010A6  50DE               	movf	postinc2,w,c
  5281   0010A8  5CE6               	subwf	postinc1,w,c
  5282   0010AA  50DE               	movf	postinc2,w,c
  5283   0010AC  58E6               	subwfb	postinc1,w,c
  5284   0010AE  A0D8               	btfss	status,0,c
  5285   0010B0  EF5C  F008         	goto	u2801
  5286   0010B4  EF5E  F008         	goto	u2800
  5287   0010B8                     u2801:
  5288   0010B8  EFBF  F008         	goto	l3696
  5289   0010BC                     u2800:
  5290   0010BC                     
  5291                           ;color.c: 174:                 unsigned long temp;;color.c: 175:                 temp = 
      +                          (unsigned long)C;
  5292   0010BC  C03E  F028         	movff	getHSVval@C,getHSVval@temp_627
  5293   0010C0  C03F  F029         	movff	getHSVval@C+1,getHSVval@temp_627+1
  5294   0010C4  6A2A               	clrf	(getHSVval@temp_627+2)^0,c
  5295   0010C6  6A2B               	clrf	(getHSVval@temp_627+3)^0,c
  5296   0010C8                     
  5297                           ;color.c: 176:                 temp *= 2;
  5298   0010C8  90D8               	bcf	status,0,c
  5299   0010CA  3628               	rlcf	getHSVval@temp_627^0,f,c
  5300   0010CC  3629               	rlcf	(getHSVval@temp_627+1)^0,f,c
  5301   0010CE  362A               	rlcf	(getHSVval@temp_627+2)^0,f,c
  5302   0010D0  362B               	rlcf	(getHSVval@temp_627+3)^0,f,c
  5303   0010D2                     
  5304                           ;color.c: 177:                 temp += (unsigned long)(p2->B - p2->R);
  5305   0010D2  500F               	movf	getHSVval@p2^0,w,c
  5306   0010D4  6ED9               	movwf	fsr2l,c
  5307   0010D6  6ADA               	clrf	fsr2h,c
  5308   0010D8  CFDE F010          	movff	postinc2,??_getHSVval
  5309   0010DC  CFDD F011          	movff	postdec2,??_getHSVval+1
  5310   0010E0  500F               	movf	getHSVval@p2^0,w,c
  5311   0010E2  6ED9               	movwf	fsr2l,c
  5312   0010E4  6ADA               	clrf	fsr2h,c
  5313   0010E6  0E04               	movlw	4
  5314   0010E8  26D9               	addwf	fsr2l,f,c
  5315   0010EA  CFDE F012          	movff	postinc2,??_getHSVval+2
  5316   0010EE  CFDD F013          	movff	postdec2,??_getHSVval+3
  5317   0010F2  5010               	movf	??_getHSVval^0,w,c
  5318   0010F4  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5319   0010F6  6E14               	movwf	(??_getHSVval+4)^0,c
  5320   0010F8  5011               	movf	(??_getHSVval+1)^0,w,c
  5321   0010FA  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5322   0010FC  6E15               	movwf	(??_getHSVval+5)^0,c
  5323   0010FE  5014               	movf	(??_getHSVval+4)^0,w,c
  5324   001100  2628               	addwf	getHSVval@temp_627^0,f,c
  5325   001102  5015               	movf	(??_getHSVval+5)^0,w,c
  5326   001104  2229               	addwfc	(getHSVval@temp_627+1)^0,f,c
  5327   001106  0E00               	movlw	0
  5328   001108  222A               	addwfc	(getHSVval@temp_627+2)^0,f,c
  5329   00110A  0E00               	movlw	0
  5330   00110C  222B               	addwfc	(getHSVval@temp_627+3)^0,f,c
  5331   00110E                     
  5332                           ;color.c: 178:                 temp *= (unsigned long)Hz;
  5333   00110E  C028  F001         	movff	getHSVval@temp_627,___lmul@multiplier
  5334   001112  C029  F002         	movff	getHSVval@temp_627+1,___lmul@multiplier+1
  5335   001116  C02A  F003         	movff	getHSVval@temp_627+2,___lmul@multiplier+2
  5336   00111A  C02B  F004         	movff	getHSVval@temp_627+3,___lmul@multiplier+3
  5337   00111E  0E3C               	movlw	60
  5338   001120  6E05               	movwf	___lmul@multiplicand^0,c
  5339   001122  0E00               	movlw	0
  5340   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5341   001126  0E00               	movlw	0
  5342   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5343   00112A  0E00               	movlw	0
  5344   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5345   00112E  ECEC  F012         	call	___lmul	;wreg free
  5346   001132  C001  F028         	movff	?___lmul,getHSVval@temp_627
  5347   001136  C002  F029         	movff	?___lmul+1,getHSVval@temp_627+1
  5348   00113A  C003  F02A         	movff	?___lmul+2,getHSVval@temp_627+2
  5349   00113E  C004  F02B         	movff	?___lmul+3,getHSVval@temp_627+3
  5350   001142                     
  5351                           ;color.c: 179:                 temp /= (unsigned long)C;
  5352   001142  C028  F001         	movff	getHSVval@temp_627,___lldiv@dividend
  5353   001146  C029  F002         	movff	getHSVval@temp_627+1,___lldiv@dividend+1
  5354   00114A  C02A  F003         	movff	getHSVval@temp_627+2,___lldiv@dividend+2
  5355   00114E  C02B  F004         	movff	getHSVval@temp_627+3,___lldiv@dividend+3
  5356   001152  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5357   001156  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5358   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5359   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5360   00115E  ECE3  F011         	call	___lldiv	;wreg free
  5361   001162  C001  F028         	movff	?___lldiv,getHSVval@temp_627
  5362   001166  C002  F029         	movff	?___lldiv+1,getHSVval@temp_627+1
  5363   00116A  C003  F02A         	movff	?___lldiv+2,getHSVval@temp_627+2
  5364   00116E  C004  F02B         	movff	?___lldiv+3,getHSVval@temp_627+3
  5365   001172                     
  5366                           ;color.c: 180:                 H = (unsigned int)temp;
  5367   001172  C028  F01E         	movff	getHSVval@temp_627,getHSVval@H
  5368   001176  C029  F01F         	movff	getHSVval@temp_627+1,getHSVval@H+1
  5369                           
  5370                           ;color.c: 181:             } else {
  5371   00117A  EF20  F009         	goto	l3708
  5372   00117E                     l3696:
  5373                           
  5374                           ;color.c: 183:                 unsigned long temp;;color.c: 184:                 temp = 
      +                          (unsigned long)C;
  5375   00117E  C03E  F02C         	movff	getHSVval@C,getHSVval@temp_628
  5376   001182  C03F  F02D         	movff	getHSVval@C+1,getHSVval@temp_628+1
  5377   001186  6A2E               	clrf	(getHSVval@temp_628+2)^0,c
  5378   001188  6A2F               	clrf	(getHSVval@temp_628+3)^0,c
  5379   00118A                     
  5380                           ;color.c: 185:                 temp *= 2;
  5381   00118A  90D8               	bcf	status,0,c
  5382   00118C  362C               	rlcf	getHSVval@temp_628^0,f,c
  5383   00118E  362D               	rlcf	(getHSVval@temp_628+1)^0,f,c
  5384   001190  362E               	rlcf	(getHSVval@temp_628+2)^0,f,c
  5385   001192  362F               	rlcf	(getHSVval@temp_628+3)^0,f,c
  5386   001194                     
  5387                           ;color.c: 186:                 temp -= (unsigned long)(p2->R - p2->B);
  5388   001194  500F               	movf	getHSVval@p2^0,w,c
  5389   001196  6ED9               	movwf	fsr2l,c
  5390   001198  6ADA               	clrf	fsr2h,c
  5391   00119A  0E04               	movlw	4
  5392   00119C  26D9               	addwf	fsr2l,f,c
  5393   00119E  CFDE F010          	movff	postinc2,??_getHSVval
  5394   0011A2  CFDD F011          	movff	postdec2,??_getHSVval+1
  5395   0011A6  500F               	movf	getHSVval@p2^0,w,c
  5396   0011A8  6ED9               	movwf	fsr2l,c
  5397   0011AA  6ADA               	clrf	fsr2h,c
  5398   0011AC  CFDE F012          	movff	postinc2,??_getHSVval+2
  5399   0011B0  CFDD F013          	movff	postdec2,??_getHSVval+3
  5400   0011B4  5010               	movf	??_getHSVval^0,w,c
  5401   0011B6  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5402   0011B8  6E14               	movwf	(??_getHSVval+4)^0,c
  5403   0011BA  5011               	movf	(??_getHSVval+1)^0,w,c
  5404   0011BC  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5405   0011BE  6E15               	movwf	(??_getHSVval+5)^0,c
  5406   0011C0  6A16               	clrf	(??_getHSVval+6)^0,c
  5407   0011C2  6A17               	clrf	(??_getHSVval+7)^0,c
  5408   0011C4  5014               	movf	(??_getHSVval+4)^0,w,c
  5409   0011C6  5E2C               	subwf	getHSVval@temp_628^0,f,c
  5410   0011C8  5015               	movf	(??_getHSVval+5)^0,w,c
  5411   0011CA  5A2D               	subwfb	(getHSVval@temp_628+1)^0,f,c
  5412   0011CC  5016               	movf	(??_getHSVval+6)^0,w,c
  5413   0011CE  5A2E               	subwfb	(getHSVval@temp_628+2)^0,f,c
  5414   0011D0  5017               	movf	(??_getHSVval+7)^0,w,c
  5415   0011D2  5A2F               	subwfb	(getHSVval@temp_628+3)^0,f,c
  5416   0011D4                     
  5417                           ;color.c: 187:                 temp *= (unsigned long)Hz;
  5418   0011D4  C02C  F001         	movff	getHSVval@temp_628,___lmul@multiplier
  5419   0011D8  C02D  F002         	movff	getHSVval@temp_628+1,___lmul@multiplier+1
  5420   0011DC  C02E  F003         	movff	getHSVval@temp_628+2,___lmul@multiplier+2
  5421   0011E0  C02F  F004         	movff	getHSVval@temp_628+3,___lmul@multiplier+3
  5422   0011E4  0E3C               	movlw	60
  5423   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  5424   0011E8  0E00               	movlw	0
  5425   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5426   0011EC  0E00               	movlw	0
  5427   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5428   0011F0  0E00               	movlw	0
  5429   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5430   0011F4  ECEC  F012         	call	___lmul	;wreg free
  5431   0011F8  C001  F02C         	movff	?___lmul,getHSVval@temp_628
  5432   0011FC  C002  F02D         	movff	?___lmul+1,getHSVval@temp_628+1
  5433   001200  C003  F02E         	movff	?___lmul+2,getHSVval@temp_628+2
  5434   001204  C004  F02F         	movff	?___lmul+3,getHSVval@temp_628+3
  5435   001208                     
  5436                           ;color.c: 188:                 temp /= (unsigned long)C;
  5437   001208  C02C  F001         	movff	getHSVval@temp_628,___lldiv@dividend
  5438   00120C  C02D  F002         	movff	getHSVval@temp_628+1,___lldiv@dividend+1
  5439   001210  C02E  F003         	movff	getHSVval@temp_628+2,___lldiv@dividend+2
  5440   001214  C02F  F004         	movff	getHSVval@temp_628+3,___lldiv@dividend+3
  5441   001218  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5442   00121C  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5443   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5444   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5445   001224  ECE3  F011         	call	___lldiv	;wreg free
  5446   001228  C001  F02C         	movff	?___lldiv,getHSVval@temp_628
  5447   00122C  C002  F02D         	movff	?___lldiv+1,getHSVval@temp_628+1
  5448   001230  C003  F02E         	movff	?___lldiv+2,getHSVval@temp_628+2
  5449   001234  C004  F02F         	movff	?___lldiv+3,getHSVval@temp_628+3
  5450   001238                     
  5451                           ;color.c: 189:                 H = (unsigned int)temp;
  5452   001238  C02C  F01E         	movff	getHSVval@temp_628,getHSVval@H
  5453   00123C  C02D  F01F         	movff	getHSVval@temp_628+1,getHSVval@H+1
  5454   001240                     l3708:
  5455                           
  5456                           ;color.c: 192:         if (M == p2->B) {
  5457   001240  500F               	movf	getHSVval@p2^0,w,c
  5458   001242  6ED9               	movwf	fsr2l,c
  5459   001244  6ADA               	clrf	fsr2h,c
  5460   001246  0E04               	movlw	4
  5461   001248  26D9               	addwf	fsr2l,f,c
  5462   00124A  503C               	movf	getHSVval@M^0,w,c
  5463   00124C  18DE               	xorwf	postinc2,w,c
  5464   00124E  E107               	bnz	u2811
  5465   001250  503D               	movf	(getHSVval@M+1)^0,w,c
  5466   001252  18DE               	xorwf	postinc2,w,c
  5467   001254  A4D8               	btfss	status,2,c
  5468   001256  EF2F  F009         	goto	u2811
  5469   00125A  EF31  F009         	goto	u2810
  5470   00125E                     u2811:
  5471   00125E  EF0E  F00A         	goto	l3736
  5472   001262                     u2810:
  5473   001262                     
  5474                           ;color.c: 193:             if (p2->R >= p2->G) {
  5475   001262  500F               	movf	getHSVval@p2^0,w,c
  5476   001264  6ED9               	movwf	fsr2l,c
  5477   001266  6ADA               	clrf	fsr2h,c
  5478   001268  0E02               	movlw	2
  5479   00126A  26D9               	addwf	fsr2l,f,c
  5480   00126C  500F               	movf	getHSVval@p2^0,w,c
  5481   00126E  6EE1               	movwf	fsr1l,c
  5482   001270  6AE2               	clrf	fsr1h,c
  5483   001272  50DE               	movf	postinc2,w,c
  5484   001274  5CE6               	subwf	postinc1,w,c
  5485   001276  50DE               	movf	postinc2,w,c
  5486   001278  58E6               	subwfb	postinc1,w,c
  5487   00127A  A0D8               	btfss	status,0,c
  5488   00127C  EF42  F009         	goto	u2821
  5489   001280  EF44  F009         	goto	u2820
  5490   001284                     u2821:
  5491   001284  EFA9  F009         	goto	l3724
  5492   001288                     u2820:
  5493   001288                     
  5494                           ;color.c: 195:                 unsigned long temp;;color.c: 196:                 temp = 
      +                          (unsigned long)C;
  5495   001288  C03E  F030         	movff	getHSVval@C,getHSVval@temp_629
  5496   00128C  C03F  F031         	movff	getHSVval@C+1,getHSVval@temp_629+1
  5497   001290  6A32               	clrf	(getHSVval@temp_629+2)^0,c
  5498   001292  6A33               	clrf	(getHSVval@temp_629+3)^0,c
  5499   001294                     
  5500                           ;color.c: 197:                 temp *= 4;
  5501   001294  0E02               	movlw	2
  5502   001296                     u2835:
  5503   001296  90D8               	bcf	status,0,c
  5504   001298  3630               	rlcf	getHSVval@temp_629^0,f,c
  5505   00129A  3631               	rlcf	(getHSVval@temp_629+1)^0,f,c
  5506   00129C  3632               	rlcf	(getHSVval@temp_629+2)^0,f,c
  5507   00129E  3633               	rlcf	(getHSVval@temp_629+3)^0,f,c
  5508   0012A0  2EE8               	decfsz	wreg,f,c
  5509   0012A2  EF4B  F009         	goto	u2835
  5510   0012A6                     
  5511                           ;color.c: 198:                 temp += (unsigned long)(p2->R - p2->G);
  5512   0012A6  500F               	movf	getHSVval@p2^0,w,c
  5513   0012A8  6ED9               	movwf	fsr2l,c
  5514   0012AA  6ADA               	clrf	fsr2h,c
  5515   0012AC  0E02               	movlw	2
  5516   0012AE  26D9               	addwf	fsr2l,f,c
  5517   0012B0  CFDE F010          	movff	postinc2,??_getHSVval
  5518   0012B4  CFDD F011          	movff	postdec2,??_getHSVval+1
  5519   0012B8  500F               	movf	getHSVval@p2^0,w,c
  5520   0012BA  6ED9               	movwf	fsr2l,c
  5521   0012BC  6ADA               	clrf	fsr2h,c
  5522   0012BE  CFDE F012          	movff	postinc2,??_getHSVval+2
  5523   0012C2  CFDD F013          	movff	postdec2,??_getHSVval+3
  5524   0012C6  5010               	movf	??_getHSVval^0,w,c
  5525   0012C8  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5526   0012CA  6E14               	movwf	(??_getHSVval+4)^0,c
  5527   0012CC  5011               	movf	(??_getHSVval+1)^0,w,c
  5528   0012CE  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5529   0012D0  6E15               	movwf	(??_getHSVval+5)^0,c
  5530   0012D2  5014               	movf	(??_getHSVval+4)^0,w,c
  5531   0012D4  2630               	addwf	getHSVval@temp_629^0,f,c
  5532   0012D6  5015               	movf	(??_getHSVval+5)^0,w,c
  5533   0012D8  2231               	addwfc	(getHSVval@temp_629+1)^0,f,c
  5534   0012DA  0E00               	movlw	0
  5535   0012DC  2232               	addwfc	(getHSVval@temp_629+2)^0,f,c
  5536   0012DE  0E00               	movlw	0
  5537   0012E0  2233               	addwfc	(getHSVval@temp_629+3)^0,f,c
  5538   0012E2                     
  5539                           ;color.c: 199:                 temp *= (unsigned long)Hz;
  5540   0012E2  C030  F001         	movff	getHSVval@temp_629,___lmul@multiplier
  5541   0012E6  C031  F002         	movff	getHSVval@temp_629+1,___lmul@multiplier+1
  5542   0012EA  C032  F003         	movff	getHSVval@temp_629+2,___lmul@multiplier+2
  5543   0012EE  C033  F004         	movff	getHSVval@temp_629+3,___lmul@multiplier+3
  5544   0012F2  0E3C               	movlw	60
  5545   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  5546   0012F6  0E00               	movlw	0
  5547   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5548   0012FA  0E00               	movlw	0
  5549   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5550   0012FE  0E00               	movlw	0
  5551   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5552   001302  ECEC  F012         	call	___lmul	;wreg free
  5553   001306  C001  F030         	movff	?___lmul,getHSVval@temp_629
  5554   00130A  C002  F031         	movff	?___lmul+1,getHSVval@temp_629+1
  5555   00130E  C003  F032         	movff	?___lmul+2,getHSVval@temp_629+2
  5556   001312  C004  F033         	movff	?___lmul+3,getHSVval@temp_629+3
  5557   001316                     
  5558                           ;color.c: 200:                 temp /= (unsigned long)C;
  5559   001316  C030  F001         	movff	getHSVval@temp_629,___lldiv@dividend
  5560   00131A  C031  F002         	movff	getHSVval@temp_629+1,___lldiv@dividend+1
  5561   00131E  C032  F003         	movff	getHSVval@temp_629+2,___lldiv@dividend+2
  5562   001322  C033  F004         	movff	getHSVval@temp_629+3,___lldiv@dividend+3
  5563   001326  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5564   00132A  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5565   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5566   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5567   001332  ECE3  F011         	call	___lldiv	;wreg free
  5568   001336  C001  F030         	movff	?___lldiv,getHSVval@temp_629
  5569   00133A  C002  F031         	movff	?___lldiv+1,getHSVval@temp_629+1
  5570   00133E  C003  F032         	movff	?___lldiv+2,getHSVval@temp_629+2
  5571   001342  C004  F033         	movff	?___lldiv+3,getHSVval@temp_629+3
  5572   001346                     
  5573                           ;color.c: 201:                 H = (unsigned int)temp;
  5574   001346  C030  F01E         	movff	getHSVval@temp_629,getHSVval@H
  5575   00134A  C031  F01F         	movff	getHSVval@temp_629+1,getHSVval@H+1
  5576                           
  5577                           ;color.c: 202:             } else {
  5578   00134E  EF0E  F00A         	goto	l3736
  5579   001352                     l3724:
  5580                           
  5581                           ;color.c: 204:                 unsigned long temp;;color.c: 205:                 temp = 
      +                          (unsigned long)C;
  5582   001352  C03E  F034         	movff	getHSVval@C,getHSVval@temp_630
  5583   001356  C03F  F035         	movff	getHSVval@C+1,getHSVval@temp_630+1
  5584   00135A  6A36               	clrf	(getHSVval@temp_630+2)^0,c
  5585   00135C  6A37               	clrf	(getHSVval@temp_630+3)^0,c
  5586   00135E                     
  5587                           ;color.c: 206:                 temp *= 4;
  5588   00135E  0E02               	movlw	2
  5589   001360                     u2845:
  5590   001360  90D8               	bcf	status,0,c
  5591   001362  3634               	rlcf	getHSVval@temp_630^0,f,c
  5592   001364  3635               	rlcf	(getHSVval@temp_630+1)^0,f,c
  5593   001366  3636               	rlcf	(getHSVval@temp_630+2)^0,f,c
  5594   001368  3637               	rlcf	(getHSVval@temp_630+3)^0,f,c
  5595   00136A  2EE8               	decfsz	wreg,f,c
  5596   00136C  EFB0  F009         	goto	u2845
  5597   001370                     
  5598                           ;color.c: 207:                 temp -= (unsigned long)(p2->G - p2->R);
  5599   001370  500F               	movf	getHSVval@p2^0,w,c
  5600   001372  6ED9               	movwf	fsr2l,c
  5601   001374  6ADA               	clrf	fsr2h,c
  5602   001376  CFDE F010          	movff	postinc2,??_getHSVval
  5603   00137A  CFDD F011          	movff	postdec2,??_getHSVval+1
  5604   00137E  500F               	movf	getHSVval@p2^0,w,c
  5605   001380  6ED9               	movwf	fsr2l,c
  5606   001382  6ADA               	clrf	fsr2h,c
  5607   001384  0E02               	movlw	2
  5608   001386  26D9               	addwf	fsr2l,f,c
  5609   001388  CFDE F012          	movff	postinc2,??_getHSVval+2
  5610   00138C  CFDD F013          	movff	postdec2,??_getHSVval+3
  5611   001390  5010               	movf	??_getHSVval^0,w,c
  5612   001392  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5613   001394  6E14               	movwf	(??_getHSVval+4)^0,c
  5614   001396  5011               	movf	(??_getHSVval+1)^0,w,c
  5615   001398  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5616   00139A  6E15               	movwf	(??_getHSVval+5)^0,c
  5617   00139C  6A16               	clrf	(??_getHSVval+6)^0,c
  5618   00139E  6A17               	clrf	(??_getHSVval+7)^0,c
  5619   0013A0  5014               	movf	(??_getHSVval+4)^0,w,c
  5620   0013A2  5E34               	subwf	getHSVval@temp_630^0,f,c
  5621   0013A4  5015               	movf	(??_getHSVval+5)^0,w,c
  5622   0013A6  5A35               	subwfb	(getHSVval@temp_630+1)^0,f,c
  5623   0013A8  5016               	movf	(??_getHSVval+6)^0,w,c
  5624   0013AA  5A36               	subwfb	(getHSVval@temp_630+2)^0,f,c
  5625   0013AC  5017               	movf	(??_getHSVval+7)^0,w,c
  5626   0013AE  5A37               	subwfb	(getHSVval@temp_630+3)^0,f,c
  5627   0013B0                     
  5628                           ;color.c: 208:                 temp *= (unsigned long)Hz;
  5629   0013B0  C034  F001         	movff	getHSVval@temp_630,___lmul@multiplier
  5630   0013B4  C035  F002         	movff	getHSVval@temp_630+1,___lmul@multiplier+1
  5631   0013B8  C036  F003         	movff	getHSVval@temp_630+2,___lmul@multiplier+2
  5632   0013BC  C037  F004         	movff	getHSVval@temp_630+3,___lmul@multiplier+3
  5633   0013C0  0E3C               	movlw	60
  5634   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  5635   0013C4  0E00               	movlw	0
  5636   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5637   0013C8  0E00               	movlw	0
  5638   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5639   0013CC  0E00               	movlw	0
  5640   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5641   0013D0  ECEC  F012         	call	___lmul	;wreg free
  5642   0013D4  C001  F034         	movff	?___lmul,getHSVval@temp_630
  5643   0013D8  C002  F035         	movff	?___lmul+1,getHSVval@temp_630+1
  5644   0013DC  C003  F036         	movff	?___lmul+2,getHSVval@temp_630+2
  5645   0013E0  C004  F037         	movff	?___lmul+3,getHSVval@temp_630+3
  5646   0013E4                     
  5647                           ;color.c: 209:                 temp /= (unsigned long)C;
  5648   0013E4  C034  F001         	movff	getHSVval@temp_630,___lldiv@dividend
  5649   0013E8  C035  F002         	movff	getHSVval@temp_630+1,___lldiv@dividend+1
  5650   0013EC  C036  F003         	movff	getHSVval@temp_630+2,___lldiv@dividend+2
  5651   0013F0  C037  F004         	movff	getHSVval@temp_630+3,___lldiv@dividend+3
  5652   0013F4  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5653   0013F8  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5654   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5655   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5656   001400  ECE3  F011         	call	___lldiv	;wreg free
  5657   001404  C001  F034         	movff	?___lldiv,getHSVval@temp_630
  5658   001408  C002  F035         	movff	?___lldiv+1,getHSVval@temp_630+1
  5659   00140C  C003  F036         	movff	?___lldiv+2,getHSVval@temp_630+2
  5660   001410  C004  F037         	movff	?___lldiv+3,getHSVval@temp_630+3
  5661   001414                     
  5662                           ;color.c: 210:                 H = (unsigned int)temp;
  5663   001414  C034  F01E         	movff	getHSVval@temp_630,getHSVval@H
  5664   001418  C035  F01F         	movff	getHSVval@temp_630+1,getHSVval@H+1
  5665   00141C                     l3736:
  5666                           
  5667                           ;color.c: 215:     if (M == 0) {
  5668   00141C  503C               	movf	getHSVval@M^0,w,c
  5669   00141E  103D               	iorwf	(getHSVval@M+1)^0,w,c
  5670   001420  A4D8               	btfss	status,2,c
  5671   001422  EF15  F00A         	goto	u2851
  5672   001426  EF17  F00A         	goto	u2850
  5673   00142A                     u2851:
  5674   00142A  EF1D  F00A         	goto	l3740
  5675   00142E                     u2850:
  5676   00142E                     
  5677                           ;color.c: 216:         S = 0;
  5678   00142E  0E00               	movlw	0
  5679   001430  6E1D               	movwf	(getHSVval@S+1)^0,c
  5680   001432  0E00               	movlw	0
  5681   001434  6E1C               	movwf	getHSVval@S^0,c
  5682                           
  5683                           ;color.c: 217:     } else {
  5684   001436  EF59  F00A         	goto	l3748
  5685   00143A                     l3740:
  5686                           
  5687                           ;color.c: 219:         unsigned long temp;;color.c: 220:         temp = (unsigned long)C
      +                          ;
  5688   00143A  C03E  F020         	movff	getHSVval@C,getHSVval@temp_631
  5689   00143E  C03F  F021         	movff	getHSVval@C+1,getHSVval@temp_631+1
  5690   001442  6A22               	clrf	(getHSVval@temp_631+2)^0,c
  5691   001444  6A23               	clrf	(getHSVval@temp_631+3)^0,c
  5692   001446                     
  5693                           ;color.c: 221:         temp *= (unsigned long)Sz;
  5694   001446  C020  F001         	movff	getHSVval@temp_631,___lmul@multiplier
  5695   00144A  C021  F002         	movff	getHSVval@temp_631+1,___lmul@multiplier+1
  5696   00144E  C022  F003         	movff	getHSVval@temp_631+2,___lmul@multiplier+2
  5697   001452  C023  F004         	movff	getHSVval@temp_631+3,___lmul@multiplier+3
  5698   001456  0E64               	movlw	100
  5699   001458  6E05               	movwf	___lmul@multiplicand^0,c
  5700   00145A  0E00               	movlw	0
  5701   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5702   00145E  0E00               	movlw	0
  5703   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5704   001462  0E00               	movlw	0
  5705   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5706   001466  ECEC  F012         	call	___lmul	;wreg free
  5707   00146A  C001  F020         	movff	?___lmul,getHSVval@temp_631
  5708   00146E  C002  F021         	movff	?___lmul+1,getHSVval@temp_631+1
  5709   001472  C003  F022         	movff	?___lmul+2,getHSVval@temp_631+2
  5710   001476  C004  F023         	movff	?___lmul+3,getHSVval@temp_631+3
  5711   00147A                     
  5712                           ;color.c: 222:         temp /= (unsigned long)M;
  5713   00147A  C020  F001         	movff	getHSVval@temp_631,___lldiv@dividend
  5714   00147E  C021  F002         	movff	getHSVval@temp_631+1,___lldiv@dividend+1
  5715   001482  C022  F003         	movff	getHSVval@temp_631+2,___lldiv@dividend+2
  5716   001486  C023  F004         	movff	getHSVval@temp_631+3,___lldiv@dividend+3
  5717   00148A  C03C  F005         	movff	getHSVval@M,___lldiv@divisor
  5718   00148E  C03D  F006         	movff	getHSVval@M+1,___lldiv@divisor+1
  5719   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5720   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5721   001496  ECE3  F011         	call	___lldiv	;wreg free
  5722   00149A  C001  F020         	movff	?___lldiv,getHSVval@temp_631
  5723   00149E  C002  F021         	movff	?___lldiv+1,getHSVval@temp_631+1
  5724   0014A2  C003  F022         	movff	?___lldiv+2,getHSVval@temp_631+2
  5725   0014A6  C004  F023         	movff	?___lldiv+3,getHSVval@temp_631+3
  5726   0014AA                     
  5727                           ;color.c: 223:         S = (unsigned int)temp;
  5728   0014AA  C020  F01C         	movff	getHSVval@temp_631,getHSVval@S
  5729   0014AE  C021  F01D         	movff	getHSVval@temp_631+1,getHSVval@S+1
  5730   0014B2                     l3748:
  5731                           
  5732                           ;color.c: 226:     p1->H = H;
  5733   0014B2  500E               	movf	getHSVval@p1^0,w,c
  5734   0014B4  6ED9               	movwf	fsr2l,c
  5735   0014B6  6ADA               	clrf	fsr2h,c
  5736   0014B8  C01E  FFDE         	movff	getHSVval@H,postinc2
  5737   0014BC  C01F  FFDD         	movff	getHSVval@H+1,postdec2
  5738   0014C0                     
  5739                           ;color.c: 227:     p1->S = S;
  5740   0014C0  500E               	movf	getHSVval@p1^0,w,c
  5741   0014C2  6ED9               	movwf	fsr2l,c
  5742   0014C4  6ADA               	clrf	fsr2h,c
  5743   0014C6  0E02               	movlw	2
  5744   0014C8  26D9               	addwf	fsr2l,f,c
  5745   0014CA  C01C  FFDE         	movff	getHSVval@S,postinc2
  5746   0014CE  C01D  FFDD         	movff	getHSVval@S+1,postdec2
  5747   0014D2                     
  5748                           ;color.c: 228:     p1->V = M;
  5749   0014D2  500E               	movf	getHSVval@p1^0,w,c
  5750   0014D4  6ED9               	movwf	fsr2l,c
  5751   0014D6  6ADA               	clrf	fsr2h,c
  5752   0014D8  0E04               	movlw	4
  5753   0014DA  26D9               	addwf	fsr2l,f,c
  5754   0014DC  C03C  FFDE         	movff	getHSVval@M,postinc2
  5755   0014E0  C03D  FFDD         	movff	getHSVval@M+1,postdec2
  5756   0014E4  0012               	return		;funcret
  5757   0014E6                     __end_of_getHSVval:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _minRGB *****************
  5761 ;; Defined at:
  5762 ;;		line 123 in file "color.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  p               1    6[COMRAM] PTR struct RGBC_val
  5765 ;;		 -> main@measured_colour(8), 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2    6[COMRAM] unsigned int 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5781 ;;Total ram usage:        4 bytes
  5782 ;; Hardware stack levels used: 1
  5783 ;; Hardware stack levels required when called: 2
  5784 ;; This function calls:
  5785 ;;		_min
  5786 ;; This function is called by:
  5787 ;;		_getHSVval
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text30
  5792   002812                     __ptext30:
  5793                           	callstack 0
  5794   002812                     _minRGB:
  5795                           	callstack 27
  5796   002812                     
  5797                           ;color.c: 123: unsigned int minRGB(struct RGBC_val *p);color.c: 124: {;color.c: 125:    
      +                           return(min(min(p->R,p->G),p->B));
  5798   002812  5007               	movf	minRGB@p^0,w,c
  5799   002814  6ED9               	movwf	fsr2l,c
  5800   002816  6ADA               	clrf	fsr2h,c
  5801   002818  CFDE F001          	movff	postinc2,min@a
  5802   00281C  CFDD F002          	movff	postdec2,min@a+1
  5803   002820  5007               	movf	minRGB@p^0,w,c
  5804   002822  6ED9               	movwf	fsr2l,c
  5805   002824  6ADA               	clrf	fsr2h,c
  5806   002826  0E02               	movlw	2
  5807   002828  26D9               	addwf	fsr2l,f,c
  5808   00282A  CFDE F003          	movff	postinc2,min@b
  5809   00282E  CFDD F004          	movff	postdec2,min@b+1
  5810   002832  EC9E  F015         	call	_min	;wreg free
  5811   002836  C001  F009         	movff	?_min,_minRGB$3165
  5812   00283A  C002  F00A         	movff	?_min+1,_minRGB$3165+1
  5813                           
  5814                           ;color.c: 123: unsigned int minRGB(struct RGBC_val *p);color.c: 124: {;color.c: 125:    
      +                           return(min(min(p->R,p->G),p->B));
  5815   00283E  C009  F001         	movff	_minRGB$3165,min@a
  5816   002842  C00A  F002         	movff	_minRGB$3165+1,min@a+1
  5817   002846  5007               	movf	minRGB@p^0,w,c
  5818   002848  6ED9               	movwf	fsr2l,c
  5819   00284A  6ADA               	clrf	fsr2h,c
  5820   00284C  0E04               	movlw	4
  5821   00284E  26D9               	addwf	fsr2l,f,c
  5822   002850  CFDE F003          	movff	postinc2,min@b
  5823   002854  CFDD F004          	movff	postdec2,min@b+1
  5824   002858  EC9E  F015         	call	_min	;wreg free
  5825   00285C  C001  F007         	movff	?_min,?_minRGB
  5826   002860  C002  F008         	movff	?_min+1,?_minRGB+1
  5827   002864  0012               	return		;funcret
  5828   002866                     __end_of_minRGB:
  5829                           	callstack 0
  5830                           
  5831 ;; *************** function _min *****************
  5832 ;; Defined at:
  5833 ;;		line 111 in file "color.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  a               2    0[COMRAM] unsigned int 
  5836 ;;  b               2    2[COMRAM] unsigned int 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  min_val         2    4[COMRAM] unsigned int 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  2    0[COMRAM] unsigned int 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;Total ram usage:        6 bytes
  5853 ;; Hardware stack levels used: 1
  5854 ;; Hardware stack levels required when called: 1
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_minRGB
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text31
  5863   002B3C                     __ptext31:
  5864                           	callstack 0
  5865   002B3C                     _min:
  5866                           	callstack 27
  5867   002B3C                     
  5868                           ;color.c: 111: unsigned int min(unsigned int a, unsigned int b);color.c: 112: {;color.c:
      +                           113:     unsigned int min_val = b;
  5869   002B3C  C003  F005         	movff	min@b,min@min_val
  5870   002B40  C004  F006         	movff	min@b+1,min@min_val+1
  5871   002B44                     
  5872                           ;color.c: 114:     if (a < b) {min_val = a;}
  5873   002B44  5003               	movf	min@b^0,w,c
  5874   002B46  5C01               	subwf	min@a^0,w,c
  5875   002B48  5004               	movf	(min@b+1)^0,w,c
  5876   002B4A  5802               	subwfb	(min@a+1)^0,w,c
  5877   002B4C  B0D8               	btfsc	status,0,c
  5878   002B4E  EFAB  F015         	goto	u2141
  5879   002B52  EFAD  F015         	goto	u2140
  5880   002B56                     u2141:
  5881   002B56  EFB1  F015         	goto	l97
  5882   002B5A                     u2140:
  5883   002B5A  C001  F005         	movff	min@a,min@min_val
  5884   002B5E  C002  F006         	movff	min@a+1,min@min_val+1
  5885   002B62                     l97:
  5886                           
  5887                           ;color.c: 115:     return min_val;
  5888   002B62  C005  F001         	movff	min@min_val,?_min
  5889   002B66  C006  F002         	movff	min@min_val+1,?_min+1
  5890   002B6A  0012               	return		;funcret
  5891   002B6C                     __end_of_min:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _maxRGB *****************
  5895 ;; Defined at:
  5896 ;;		line 118 in file "color.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  p               1    6[COMRAM] PTR struct RGBC_val
  5899 ;;		 -> main@measured_colour(8), 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  2    6[COMRAM] unsigned int 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5915 ;;Total ram usage:        4 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; Hardware stack levels required when called: 2
  5918 ;; This function calls:
  5919 ;;		_max
  5920 ;; This function is called by:
  5921 ;;		_getHSVval
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text32
  5926   002866                     __ptext32:
  5927                           	callstack 0
  5928   002866                     _maxRGB:
  5929                           	callstack 27
  5930   002866                     
  5931                           ;color.c: 118: unsigned int maxRGB(struct RGBC_val *p);color.c: 119: {;color.c: 120:    
      +                           return(max(max(p->R,p->G),p->B));
  5932   002866  5007               	movf	maxRGB@p^0,w,c
  5933   002868  6ED9               	movwf	fsr2l,c
  5934   00286A  6ADA               	clrf	fsr2h,c
  5935   00286C  CFDE F001          	movff	postinc2,max@a
  5936   002870  CFDD F002          	movff	postdec2,max@a+1
  5937   002874  5007               	movf	maxRGB@p^0,w,c
  5938   002876  6ED9               	movwf	fsr2l,c
  5939   002878  6ADA               	clrf	fsr2h,c
  5940   00287A  0E02               	movlw	2
  5941   00287C  26D9               	addwf	fsr2l,f,c
  5942   00287E  CFDE F003          	movff	postinc2,max@b
  5943   002882  CFDD F004          	movff	postdec2,max@b+1
  5944   002886  ECB6  F015         	call	_max	;wreg free
  5945   00288A  C001  F009         	movff	?_max,_maxRGB$3164
  5946   00288E  C002  F00A         	movff	?_max+1,_maxRGB$3164+1
  5947                           
  5948                           ;color.c: 118: unsigned int maxRGB(struct RGBC_val *p);color.c: 119: {;color.c: 120:    
      +                           return(max(max(p->R,p->G),p->B));
  5949   002892  C009  F001         	movff	_maxRGB$3164,max@a
  5950   002896  C00A  F002         	movff	_maxRGB$3164+1,max@a+1
  5951   00289A  5007               	movf	maxRGB@p^0,w,c
  5952   00289C  6ED9               	movwf	fsr2l,c
  5953   00289E  6ADA               	clrf	fsr2h,c
  5954   0028A0  0E04               	movlw	4
  5955   0028A2  26D9               	addwf	fsr2l,f,c
  5956   0028A4  CFDE F003          	movff	postinc2,max@b
  5957   0028A8  CFDD F004          	movff	postdec2,max@b+1
  5958   0028AC  ECB6  F015         	call	_max	;wreg free
  5959   0028B0  C001  F007         	movff	?_max,?_maxRGB
  5960   0028B4  C002  F008         	movff	?_max+1,?_maxRGB+1
  5961   0028B8  0012               	return		;funcret
  5962   0028BA                     __end_of_maxRGB:
  5963                           	callstack 0
  5964                           
  5965 ;; *************** function _max *****************
  5966 ;; Defined at:
  5967 ;;		line 104 in file "color.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  a               2    0[COMRAM] unsigned int 
  5970 ;;  b               2    2[COMRAM] unsigned int 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  max_val         2    4[COMRAM] unsigned int 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  2    0[COMRAM] unsigned int 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;Total ram usage:        6 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 1
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_maxRGB
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text33
  5997   002B6C                     __ptext33:
  5998                           	callstack 0
  5999   002B6C                     _max:
  6000                           	callstack 27
  6001   002B6C                     
  6002                           ;color.c: 104: unsigned int max(unsigned int a, unsigned int b);color.c: 105: {;color.c:
      +                           106:     unsigned int max_val = b;
  6003   002B6C  C003  F005         	movff	max@b,max@max_val
  6004   002B70  C004  F006         	movff	max@b+1,max@max_val+1
  6005   002B74                     
  6006                           ;color.c: 107:     if (a > b) {max_val = a;}
  6007   002B74  5001               	movf	max@a^0,w,c
  6008   002B76  5C03               	subwf	max@b^0,w,c
  6009   002B78  5002               	movf	(max@a+1)^0,w,c
  6010   002B7A  5804               	subwfb	(max@b+1)^0,w,c
  6011   002B7C  B0D8               	btfsc	status,0,c
  6012   002B7E  EFC3  F015         	goto	u2131
  6013   002B82  EFC5  F015         	goto	u2130
  6014   002B86                     u2131:
  6015   002B86  EFC9  F015         	goto	l93
  6016   002B8A                     u2130:
  6017   002B8A  C001  F005         	movff	max@a,max@max_val
  6018   002B8E  C002  F006         	movff	max@a+1,max@max_val+1
  6019   002B92                     l93:
  6020                           
  6021                           ;color.c: 108:     return max_val;
  6022   002B92  C005  F001         	movff	max@max_val,?_max
  6023   002B96  C006  F002         	movff	max@max_val+1,?_max+1
  6024   002B9A  0012               	return		;funcret
  6025   002B9C                     __end_of_max:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function ___lmul *****************
  6029 ;; Defined at:
  6030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  multiplier      4    0[COMRAM] unsigned long 
  6033 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  product         4    8[COMRAM] unsigned long 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  4    0[COMRAM] unsigned long 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6045 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6048 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;Total ram usage:       12 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 1
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_getHSVval
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text34
  6060   0025D8                     __ptext34:
  6061                           	callstack 0
  6062   0025D8                     ___lmul:
  6063                           	callstack 28
  6064   0025D8  0E00               	movlw	0
  6065   0025DA  6E09               	movwf	___lmul@product^0,c
  6066   0025DC  0E00               	movlw	0
  6067   0025DE  6E0A               	movwf	(___lmul@product+1)^0,c
  6068   0025E0  0E00               	movlw	0
  6069   0025E2  6E0B               	movwf	(___lmul@product+2)^0,c
  6070   0025E4  0E00               	movlw	0
  6071   0025E6  6E0C               	movwf	(___lmul@product+3)^0,c
  6072   0025E8                     l3364:
  6073   0025E8  A001               	btfss	___lmul@multiplier^0,0,c
  6074   0025EA  EFF9  F012         	goto	u2201
  6075   0025EE  EFFB  F012         	goto	u2200
  6076   0025F2                     u2201:
  6077   0025F2  EF03  F013         	goto	l3368
  6078   0025F6                     u2200:
  6079   0025F6  5005               	movf	___lmul@multiplicand^0,w,c
  6080   0025F8  2609               	addwf	___lmul@product^0,f,c
  6081   0025FA  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6082   0025FC  220A               	addwfc	(___lmul@product+1)^0,f,c
  6083   0025FE  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6084   002600  220B               	addwfc	(___lmul@product+2)^0,f,c
  6085   002602  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6086   002604  220C               	addwfc	(___lmul@product+3)^0,f,c
  6087   002606                     l3368:
  6088   002606  90D8               	bcf	status,0,c
  6089   002608  3605               	rlcf	___lmul@multiplicand^0,f,c
  6090   00260A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6091   00260C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6092   00260E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6093   002610  90D8               	bcf	status,0,c
  6094   002612  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6095   002614  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6096   002616  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6097   002618  3201               	rrcf	___lmul@multiplier^0,f,c
  6098   00261A  5001               	movf	___lmul@multiplier^0,w,c
  6099   00261C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6100   00261E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6101   002620  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6102   002622  A4D8               	btfss	status,2,c
  6103   002624  EF16  F013         	goto	u2211
  6104   002628  EF18  F013         	goto	u2210
  6105   00262C                     u2211:
  6106   00262C  EFF4  F012         	goto	l3364
  6107   002630                     u2210:
  6108   002630  C009  F001         	movff	___lmul@product,?___lmul
  6109   002634  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6110   002638  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6111   00263C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6112   002640  0012               	return		;funcret
  6113   002642                     __end_of___lmul:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function ___lldiv *****************
  6117 ;; Defined at:
  6118 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  dividend        4    0[COMRAM] unsigned long 
  6121 ;;  divisor         4    4[COMRAM] unsigned long 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  quotient        4    8[COMRAM] unsigned long 
  6124 ;;  counter         1   12[COMRAM] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  4    0[COMRAM] unsigned long 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6134 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6137 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6138 ;;Total ram usage:       13 bytes
  6139 ;; Hardware stack levels used: 1
  6140 ;; Hardware stack levels required when called: 1
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_getHSVval
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text35
  6149   0023C6                     __ptext35:
  6150                           	callstack 0
  6151   0023C6                     ___lldiv:
  6152                           	callstack 28
  6153   0023C6  0E00               	movlw	0
  6154   0023C8  6E09               	movwf	___lldiv@quotient^0,c
  6155   0023CA  0E00               	movlw	0
  6156   0023CC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6157   0023CE  0E00               	movlw	0
  6158   0023D0  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6159   0023D2  0E00               	movlw	0
  6160   0023D4  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6161   0023D6  5005               	movf	___lldiv@divisor^0,w,c
  6162   0023D8  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6163   0023DA  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6164   0023DC  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6165   0023DE  B4D8               	btfsc	status,2,c
  6166   0023E0  EFF4  F011         	goto	u2221
  6167   0023E4  EFF6  F011         	goto	u2220
  6168   0023E8                     u2221:
  6169   0023E8  EF2C  F012         	goto	l730
  6170   0023EC                     u2220:
  6171   0023EC  0E01               	movlw	1
  6172   0023EE  6E0D               	movwf	___lldiv@counter^0,c
  6173   0023F0  EF00  F012         	goto	l3380
  6174   0023F4                     l3378:
  6175   0023F4  90D8               	bcf	status,0,c
  6176   0023F6  3605               	rlcf	___lldiv@divisor^0,f,c
  6177   0023F8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6178   0023FA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6179   0023FC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6180   0023FE  2A0D               	incf	___lldiv@counter^0,f,c
  6181   002400                     l3380:
  6182   002400  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6183   002402  EF05  F012         	goto	u2231
  6184   002406  EF07  F012         	goto	u2230
  6185   00240A                     u2231:
  6186   00240A  EFFA  F011         	goto	l3378
  6187   00240E                     u2230:
  6188   00240E                     l3382:
  6189   00240E  90D8               	bcf	status,0,c
  6190   002410  3609               	rlcf	___lldiv@quotient^0,f,c
  6191   002412  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6192   002414  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6193   002416  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6194   002418  5005               	movf	___lldiv@divisor^0,w,c
  6195   00241A  5C01               	subwf	___lldiv@dividend^0,w,c
  6196   00241C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6197   00241E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6198   002420  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6199   002422  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6200   002424  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6201   002426  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6202   002428  A0D8               	btfss	status,0,c
  6203   00242A  EF19  F012         	goto	u2241
  6204   00242E  EF1B  F012         	goto	u2240
  6205   002432                     u2241:
  6206   002432  EF24  F012         	goto	l3390
  6207   002436                     u2240:
  6208   002436  5005               	movf	___lldiv@divisor^0,w,c
  6209   002438  5E01               	subwf	___lldiv@dividend^0,f,c
  6210   00243A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6211   00243C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6212   00243E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6213   002440  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6214   002442  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6215   002444  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6216   002446  8009               	bsf	___lldiv@quotient^0,0,c
  6217   002448                     l3390:
  6218   002448  90D8               	bcf	status,0,c
  6219   00244A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6220   00244C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6221   00244E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6222   002450  3205               	rrcf	___lldiv@divisor^0,f,c
  6223   002452  2E0D               	decfsz	___lldiv@counter^0,f,c
  6224   002454  EF07  F012         	goto	l3382
  6225   002458                     l730:
  6226   002458  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6227   00245C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6228   002460  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6229   002464  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6230   002468  0012               	return		;funcret
  6231   00246A                     __end_of___lldiv:
  6232                           	callstack 0
  6233                           
  6234 ;; *************** function _color_click_init *****************
  6235 ;; Defined at:
  6236 ;;		line 4 in file "color.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;		None
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  1    wreg      void 
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0, cstack
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;Total ram usage:        1 bytes
  6255 ;; Hardware stack levels used: 1
  6256 ;; Hardware stack levels required when called: 4
  6257 ;; This function calls:
  6258 ;;		_I2C_2_Master_Init
  6259 ;;		_color_writetoaddr
  6260 ;; This function is called by:
  6261 ;;		_main
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text36
  6266   002B08                     __ptext36:
  6267                           	callstack 0
  6268   002B08                     _color_click_init:
  6269                           	callstack 26
  6270   002B08                     
  6271                           ;color.c: 7:     I2C_2_Master_Init();
  6272   002B08  ECE5  F015         	call	_I2C_2_Master_Init	;wreg free
  6273   002B0C                     
  6274                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  6275   002B0C  0E01               	movlw	1
  6276   002B0E  6E03               	movwf	color_writetoaddr@value^0,c
  6277   002B10  0E00               	movlw	0
  6278   002B12  EC20  F016         	call	_color_writetoaddr
  6279   002B16                     
  6280                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6281   002B16  0E3F               	movlw	63
  6282   002B18  6E05               	movwf	??_color_click_init^0,c
  6283   002B1A  0E55               	movlw	85
  6284   002B1C                     u3017:
  6285   002B1C  2EE8               	decfsz	wreg,f,c
  6286   002B1E  D7FE               	bra	u3017
  6287   002B20  2E05               	decfsz	??_color_click_init^0,f,c
  6288   002B22  D7FC               	bra	u3017
  6289   002B24  0000               	nop	
  6290   002B26                     
  6291                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  6292   002B26  0E03               	movlw	3
  6293   002B28  6E03               	movwf	color_writetoaddr@value^0,c
  6294   002B2A  0E00               	movlw	0
  6295   002B2C  EC20  F016         	call	_color_writetoaddr
  6296   002B30                     
  6297                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6298   002B30  0ED5               	movlw	213
  6299   002B32  6E03               	movwf	color_writetoaddr@value^0,c
  6300   002B34  0E01               	movlw	1
  6301   002B36  EC20  F016         	call	_color_writetoaddr
  6302   002B3A  0012               	return		;funcret
  6303   002B3C                     __end_of_color_click_init:
  6304                           	callstack 0
  6305                           
  6306 ;; *************** function _color_writetoaddr *****************
  6307 ;; Defined at:
  6308 ;;		line 20 in file "color.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  address         1    wreg     unsigned char 
  6311 ;;  value           1    2[COMRAM] unsigned char 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  address         1    3[COMRAM] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6323 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; Hardware stack levels required when called: 3
  6330 ;; This function calls:
  6331 ;;		_I2C_2_Master_Start
  6332 ;;		_I2C_2_Master_Stop
  6333 ;;		_I2C_2_Master_Write
  6334 ;; This function is called by:
  6335 ;;		_color_click_init
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text37
  6340   002C40                     __ptext37:
  6341                           	callstack 0
  6342   002C40                     _color_writetoaddr:
  6343                           	callstack 26
  6344                           
  6345                           ;incstack = 0
  6346                           ;color_writetoaddr@address stored from wreg
  6347   002C40  6E04               	movwf	color_writetoaddr@address^0,c
  6348   002C42                     
  6349                           ;color.c: 21:     I2C_2_Master_Start();
  6350   002C42  EC71  F016         	call	_I2C_2_Master_Start	;wreg free
  6351                           
  6352                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  6353   002C46  0E52               	movlw	82
  6354   002C48  EC55  F016         	call	_I2C_2_Master_Write
  6355                           
  6356                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  6357   002C4C  5004               	movf	color_writetoaddr@address^0,w,c
  6358   002C4E  0980               	iorlw	128
  6359   002C50  EC55  F016         	call	_I2C_2_Master_Write
  6360                           
  6361                           ;color.c: 24:     I2C_2_Master_Write(value);
  6362   002C54  5003               	movf	color_writetoaddr@value^0,w,c
  6363   002C56  EC55  F016         	call	_I2C_2_Master_Write
  6364                           
  6365                           ;color.c: 25:     I2C_2_Master_Stop();
  6366   002C5A  EC6C  F016         	call	_I2C_2_Master_Stop	;wreg free
  6367   002C5E  0012               	return		;funcret
  6368   002C60                     __end_of_color_writetoaddr:
  6369                           	callstack 0
  6370                           
  6371 ;; *************** function _I2C_2_Master_Write *****************
  6372 ;; Defined at:
  6373 ;;		line 45 in file "i2c.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  data_byte       1    wreg     unsigned char 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  data_byte       1    1[COMRAM] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      void 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;Total ram usage:        1 bytes
  6392 ;; Hardware stack levels used: 1
  6393 ;; Hardware stack levels required when called: 2
  6394 ;; This function calls:
  6395 ;;		_I2C_2_Master_Idle
  6396 ;; This function is called by:
  6397 ;;		_color_writetoaddr
  6398 ;;		_color_read_Red
  6399 ;;		_color_read_Green
  6400 ;;		_color_read_Blue
  6401 ;;		_color_read_Clear
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text38
  6406   002CAA                     __ptext38:
  6407                           	callstack 0
  6408   002CAA                     _I2C_2_Master_Write:
  6409                           	callstack 26
  6410                           
  6411                           ;incstack = 0
  6412                           ;I2C_2_Master_Write@data_byte stored from wreg
  6413   002CAA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6414   002CAC                     
  6415                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6416   002CAC  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  6417   002CB0                     
  6418                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6419   002CB0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6420   002CB4  0012               	return		;funcret
  6421   002CB6                     __end_of_I2C_2_Master_Write:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function _I2C_2_Master_Stop *****************
  6425 ;; Defined at:
  6426 ;;		line 39 in file "i2c.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;Total ram usage:        0 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 2
  6447 ;; This function calls:
  6448 ;;		_I2C_2_Master_Idle
  6449 ;; This function is called by:
  6450 ;;		_color_writetoaddr
  6451 ;;		_color_read_Red
  6452 ;;		_color_read_Green
  6453 ;;		_color_read_Blue
  6454 ;;		_color_read_Clear
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text39
  6459   002CD8                     __ptext39:
  6460                           	callstack 0
  6461   002CD8                     _I2C_2_Master_Stop:
  6462                           	callstack 26
  6463   002CD8                     
  6464                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6465   002CD8  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  6466   002CDC                     
  6467                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6468   002CDC  010E               	movlb	14	; () banked
  6469   002CDE  85DA               	bsf	218,2,b	;volatile
  6470   002CE0                     
  6471                           ; BSR set to: 14
  6472   002CE0  0012               	return		;funcret
  6473   002CE2                     __end_of_I2C_2_Master_Stop:
  6474                           	callstack 0
  6475                           
  6476 ;; *************** function _I2C_2_Master_Start *****************
  6477 ;; Defined at:
  6478 ;;		line 27 in file "i2c.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;		None
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6496 ;;Total ram usage:        0 bytes
  6497 ;; Hardware stack levels used: 1
  6498 ;; Hardware stack levels required when called: 2
  6499 ;; This function calls:
  6500 ;;		_I2C_2_Master_Idle
  6501 ;; This function is called by:
  6502 ;;		_color_writetoaddr
  6503 ;;		_color_read_Red
  6504 ;;		_color_read_Green
  6505 ;;		_color_read_Blue
  6506 ;;		_color_read_Clear
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text40
  6511   002CE2                     __ptext40:
  6512                           	callstack 0
  6513   002CE2                     _I2C_2_Master_Start:
  6514                           	callstack 26
  6515   002CE2                     
  6516                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6517   002CE2  ECFA  F015         	call	_I2C_2_Master_Idle	;wreg free
  6518   002CE6                     
  6519                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6520   002CE6  010E               	movlb	14	; () banked
  6521   002CE8  81DA               	bsf	218,0,b	;volatile
  6522   002CEA                     
  6523                           ; BSR set to: 14
  6524   002CEA  0012               	return		;funcret
  6525   002CEC                     __end_of_I2C_2_Master_Start:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _I2C_2_Master_Idle *****************
  6529 ;; Defined at:
  6530 ;;		line 22 in file "i2c.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6548 ;;Total ram usage:        1 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; Hardware stack levels required when called: 1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_I2C_2_Master_Start
  6555 ;;		_I2C_2_Master_RepStart
  6556 ;;		_I2C_2_Master_Stop
  6557 ;;		_I2C_2_Master_Write
  6558 ;;		_I2C_2_Master_Read
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text41
  6563   002BF4                     __ptext41:
  6564                           	callstack 0
  6565   002BF4                     _I2C_2_Master_Idle:
  6566                           	callstack 26
  6567   002BF4                     l294:
  6568   002BF4  010E               	movlb	14	; () banked
  6569   002BF6  B5D8               	btfsc	216,2,b	;volatile
  6570   002BF8  EF00  F016         	goto	u1951
  6571   002BFC  EF02  F016         	goto	u1950
  6572   002C00                     u1951:
  6573   002C00  EFFA  F015         	goto	l294
  6574   002C04                     u1950:
  6575   002C04                     
  6576                           ; BSR set to: 14
  6577   002C04  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6578   002C08  0E1F               	movlw	31
  6579   002C0A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6580   002C0C  A4D8               	btfss	status,2,c
  6581   002C0E  EF0B  F016         	goto	u1961
  6582   002C12  EF0D  F016         	goto	u1960
  6583   002C16                     u1961:
  6584   002C16  EFFA  F015         	goto	l294
  6585   002C1A                     u1960:
  6586   002C1A                     
  6587                           ; BSR set to: 14
  6588   002C1A  0012               	return		;funcret
  6589   002C1C                     __end_of_I2C_2_Master_Idle:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _I2C_2_Master_Init *****************
  6593 ;; Defined at:
  6594 ;;		line 4 in file "i2c.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_color_click_init
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text42
  6623   002BCA                     __ptext42:
  6624                           	callstack 0
  6625   002BCA                     _I2C_2_Master_Init:
  6626                           	callstack 28
  6627   002BCA                     
  6628                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6629   002BCA  010E               	movlb	14	; () banked
  6630   002BCC  51D9               	movf	217,w,b	;volatile
  6631   002BCE  0BF0               	andlw	-16
  6632   002BD0  0908               	iorlw	8
  6633   002BD2  6FD9               	movwf	217,b	;volatile
  6634   002BD4                     
  6635                           ; BSR set to: 14
  6636                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6637   002BD4  8BD9               	bsf	217,5,b	;volatile
  6638                           
  6639                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6640   002BD6  0E9F               	movlw	159
  6641   002BD8  6FD6               	movwf	214,b	;volatile
  6642   002BDA                     
  6643                           ; BSR set to: 14
  6644                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6645   002BDA  8A84               	bsf	132,5,c	;volatile
  6646   002BDC                     
  6647                           ; BSR set to: 14
  6648                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6649   002BDC  8C84               	bsf	132,6,c	;volatile
  6650   002BDE                     
  6651                           ; BSR set to: 14
  6652                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6653   002BDE  9BA7               	bcf	167,5,b	;volatile
  6654   002BE0                     
  6655                           ; BSR set to: 14
  6656                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6657   002BE0  9DA7               	bcf	167,6,b	;volatile
  6658                           
  6659                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6660   002BE2  0E1D               	movlw	29
  6661   002BE4  6F1D               	movwf	29,b	;volatile
  6662                           
  6663                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6664   002BE6  0E1E               	movlw	30
  6665   002BE8  6F1C               	movwf	28,b	;volatile
  6666                           
  6667                           ;i2c.c: 18:   RD5PPS=0x1C;
  6668   002BEA  0E1C               	movlw	28
  6669   002BEC  6F6F               	movwf	111,b	;volatile
  6670                           
  6671                           ;i2c.c: 19:   RD6PPS=0x1B;
  6672   002BEE  0E1B               	movlw	27
  6673   002BF0  6F70               	movwf	112,b	;volatile
  6674   002BF2                     
  6675                           ; BSR set to: 14
  6676   002BF2  0012               	return		;funcret
  6677   002BF4                     __end_of_I2C_2_Master_Init:
  6678                           	callstack 0
  6679                           
  6680 ;; *************** function _buggy_lights_init *****************
  6681 ;; Defined at:
  6682 ;;		line 4 in file "buggy_lights.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		None
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 1
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_main
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text43
  6711   002B9C                     __ptext43:
  6712                           	callstack 0
  6713   002B9C                     _buggy_lights_init:
  6714                           	callstack 29
  6715   002B9C                     
  6716                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  6717   002B9C  9884               	bcf	132,4,c	;volatile
  6718                           
  6719                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  6720   002B9E  9288               	bcf	136,1,c	;volatile
  6721                           
  6722                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  6723   002BA0  9684               	bcf	132,3,c	;volatile
  6724                           
  6725                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  6726   002BA2  9086               	bcf	134,0,c	;volatile
  6727                           
  6728                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  6729   002BA4  9088               	bcf	136,0,c	;volatile
  6730                           
  6731                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  6732   002BA6  987C               	bcf	124,4,c	;volatile
  6733                           
  6734                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  6735   002BA8  9280               	bcf	128,1,c	;volatile
  6736                           
  6737                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  6738   002BAA  967C               	bcf	124,3,c	;volatile
  6739                           
  6740                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  6741   002BAC  907E               	bcf	126,0,c	;volatile
  6742                           
  6743                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  6744   002BAE  9080               	bcf	128,0,c	;volatile
  6745                           
  6746                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  6747   002BB0  9287               	bcf	135,1,c	;volatile
  6748                           
  6749                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  6750   002BB2  9881               	bcf	129,4,c	;volatile
  6751                           
  6752                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  6753   002BB4  9E86               	bcf	134,7,c	;volatile
  6754                           
  6755                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  6756   002BB6  927F               	bcf	127,1,c	;volatile
  6757                           
  6758                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  6759   002BB8  9879               	bcf	121,4,c	;volatile
  6760                           
  6761                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  6762   002BBA  9E7E               	bcf	126,7,c	;volatile
  6763                           
  6764                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  6765   002BBC  9087               	bcf	135,0,c	;volatile
  6766                           
  6767                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  6768   002BBE  9E85               	bcf	133,7,c	;volatile
  6769                           
  6770                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  6771   002BC0  9681               	bcf	129,3,c	;volatile
  6772                           
  6773                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  6774   002BC2  907F               	bcf	127,0,c	;volatile
  6775                           
  6776                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  6777   002BC4  9E7D               	bcf	125,7,c	;volatile
  6778                           
  6779                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  6780   002BC6  9679               	bcf	121,3,c	;volatile
  6781   002BC8  0012               	return		;funcret
  6782   002BCA                     __end_of_buggy_lights_init:
  6783                           	callstack 0
  6784                           
  6785 ;; *************** function _Timer0_init *****************
  6786 ;; Defined at:
  6787 ;;		line 7 in file "timers.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;Total ram usage:        0 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 3
  6808 ;; This function calls:
  6809 ;;		_reset_timer
  6810 ;; This function is called by:
  6811 ;;		_main
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text44
  6816   002C1C                     __ptext44:
  6817                           	callstack 0
  6818   002C1C                     _Timer0_init:
  6819                           	callstack 27
  6820   002C1C                     
  6821                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  6822   002C1C  50D6               	movf	214,w,c	;volatile
  6823   002C1E  0B1F               	andlw	-225
  6824   002C20  0940               	iorlw	64
  6825   002C22  6ED6               	movwf	214,c	;volatile
  6826   002C24                     
  6827                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  6828   002C24  88D6               	bsf	214,4,c	;volatile
  6829   002C26                     
  6830                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  6831   002C26  88D5               	bsf	213,4,c	;volatile
  6832                           
  6833                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  6834   002C28  50D6               	movf	214,w,c	;volatile
  6835   002C2A  0BF0               	andlw	-16
  6836   002C2C  090E               	iorlw	14
  6837   002C2E  6ED6               	movwf	214,c	;volatile
  6838   002C30                     
  6839                           ;timers.c: 18:     reset_timer();
  6840   002C30  EC5B  F016         	call	_reset_timer	;wreg free
  6841   002C34                     
  6842                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  6843   002C34  8ED5               	bsf	213,7,c	;volatile
  6844   002C36                     
  6845                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  6846   002C36  010E               	movlb	14	; () banked
  6847   002C38  8B29               	bsf	41,5,b	;volatile
  6848   002C3A                     
  6849                           ; BSR set to: 14
  6850                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  6851   002C3A  8CF2               	bsf	242,6,c	;volatile
  6852   002C3C                     
  6853                           ; BSR set to: 14
  6854                           ;timers.c: 23:     INTCONbits.GIE = 1;
  6855   002C3C  8EF2               	bsf	242,7,c	;volatile
  6856   002C3E                     
  6857                           ; BSR set to: 14
  6858   002C3E  0012               	return		;funcret
  6859   002C40                     __end_of_Timer0_init:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function _reset_timer *****************
  6863 ;; Defined at:
  6864 ;;		line 44 in file "timers.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 2
  6885 ;; This function calls:
  6886 ;;		_write_timer
  6887 ;; This function is called by:
  6888 ;;		_Timer0_init
  6889 ;;		_forward_navigation
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text45
  6894   002CB6                     __ptext45:
  6895                           	callstack 0
  6896   002CB6                     _reset_timer:
  6897                           	callstack 27
  6898   002CB6                     
  6899                           ;timers.c: 46:     write_timer(0, 0);
  6900   002CB6  0E00               	movlw	0
  6901   002CB8  6E01               	movwf	write_timer@tL^0,c
  6902   002CBA  0E00               	movlw	0
  6903   002CBC  EC61  F016         	call	_write_timer
  6904   002CC0  0012               	return		;funcret
  6905   002CC2                     __end_of_reset_timer:
  6906                           	callstack 0
  6907                           
  6908 ;; *************** function _write_timer *****************
  6909 ;; Defined at:
  6910 ;;		line 35 in file "timers.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  tH              1    wreg     unsigned char 
  6913 ;;  tL              1    0[COMRAM] unsigned char 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  tH              1    1[COMRAM] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;Total ram usage:        2 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_reset_timer
  6936 ;;		_return_to_sender
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text46
  6941   002CC2                     __ptext46:
  6942                           	callstack 0
  6943   002CC2                     _write_timer:
  6944                           	callstack 27
  6945                           
  6946                           ;incstack = 0
  6947                           ;write_timer@tH stored from wreg
  6948   002CC2  6E02               	movwf	write_timer@tH^0,c
  6949   002CC4                     
  6950                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  6951   002CC4  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  6952   002CC8                     
  6953                           ;timers.c: 41:     TMR0L = tL;
  6954   002CC8  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  6955   002CCC  0012               	return		;funcret
  6956   002CCE                     __end_of_write_timer:
  6957                           	callstack 0
  6958                           
  6959 ;; *************** function _ISR *****************
  6960 ;; Defined at:
  6961 ;;		line 116 in file "timers.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;Total ram usage:        0 bytes
  6980 ;; Hardware stack levels used: 1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		Interrupt level 2
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	intcode
  6989   000008                     __pintcode:
  6990                           	callstack 0
  6991   000008                     _ISR:
  6992                           	callstack 24
  6993                           
  6994                           ;incstack = 0
  6995   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6996   00000A                     
  6997                           ;timers.c: 119:     if (PIR0bits.TMR0IF) {
  6998   00000A  010E               	movlb	14	; () banked
  6999   00000C  AB33               	btfss	51,5,b	;volatile
  7000   00000E  EF0B  F000         	goto	i2u152_41
  7001   000012  EF0D  F000         	goto	i2u152_40
  7002   000016                     i2u152_41:
  7003   000016  EF18  F000         	goto	i2l673
  7004   00001A                     i2u152_40:
  7005   00001A                     
  7006                           ; BSR set to: 14
  7007                           ;timers.c: 120:         if (returning) {
  7008   00001A  505D               	movf	_returning^0,w,c
  7009   00001C  B4D8               	btfsc	status,2,c
  7010   00001E  EF13  F000         	goto	i2u153_41
  7011   000022  EF15  F000         	goto	i2u153_40
  7012   000026                     i2u153_41:
  7013   000026  EF17  F000         	goto	i2l672
  7014   00002A                     i2u153_40:
  7015   00002A                     
  7016                           ; BSR set to: 14
  7017                           ;timers.c: 121:             return_flag = 1;
  7018   00002A  0E01               	movlw	1
  7019   00002C  6E5C               	movwf	_return_flag^0,c
  7020   00002E                     i2l672:
  7021                           
  7022                           ; BSR set to: 14
  7023                           ;timers.c: 126:         PIR0bits.TMR0IF = 0;
  7024   00002E  9B33               	bcf	51,5,b	;volatile
  7025   000030                     i2l673:
  7026                           
  7027                           ; BSR set to: 14
  7028   000030  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7029   000032  0011               	retfie		f
  7030   000034                     __end_of_ISR:
  7031                           	callstack 0
  7032                           
  7033                           	psect	rparam
  7034   000000                     
  7035                           	psect	temp
  7036   00005E                     btemp:
  7037                           	callstack 0
  7038   00005E                     	ds	1
  7039   000000                     int$flags	set	btemp
  7040   000000                     wtemp8	set	btemp+1
  7041   000000                     ttemp5	set	btemp+1
  7042   000000                     ttemp6	set	btemp+4
  7043   000000                     ttemp7	set	btemp+8
  7044                           
  7045                           	psect	idloc
  7046                           
  7047                           ;Config register IDLOC0 @ 0x200000
  7048                           ;	unspecified, using default values
  7049   200000                     	org	2097152
  7050   200000  FFFF               	dw	65535
  7051                           
  7052                           ;Config register IDLOC1 @ 0x200002
  7053                           ;	unspecified, using default values
  7054   200002                     	org	2097154
  7055   200002  FFFF               	dw	65535
  7056                           
  7057                           ;Config register IDLOC2 @ 0x200004
  7058                           ;	unspecified, using default values
  7059   200004                     	org	2097156
  7060   200004  FFFF               	dw	65535
  7061                           
  7062                           ;Config register IDLOC3 @ 0x200006
  7063                           ;	unspecified, using default values
  7064   200006                     	org	2097158
  7065   200006  FFFF               	dw	65535
  7066                           
  7067                           ;Config register IDLOC4 @ 0x200008
  7068                           ;	unspecified, using default values
  7069   200008                     	org	2097160
  7070   200008  FFFF               	dw	65535
  7071                           
  7072                           ;Config register IDLOC5 @ 0x20000A
  7073                           ;	unspecified, using default values
  7074   20000A                     	org	2097162
  7075   20000A  FFFF               	dw	65535
  7076                           
  7077                           ;Config register IDLOC6 @ 0x20000C
  7078                           ;	unspecified, using default values
  7079   20000C                     	org	2097164
  7080   20000C  FFFF               	dw	65535
  7081                           
  7082                           ;Config register IDLOC7 @ 0x20000E
  7083                           ;	unspecified, using default values
  7084   20000E                     	org	2097166
  7085   20000E  FFFF               	dw	65535
  7086                           
  7087                           	psect	config
  7088                           
  7089                           ;Config register CONFIG1L @ 0x300000
  7090                           ;	External Oscillator mode Selection bits
  7091                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7092                           ;	Power-up default value for COSC bits
  7093                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7094   300000                     	org	3145728
  7095   300000  AA                 	db	170
  7096                           
  7097                           ;Config register CONFIG1H @ 0x300001
  7098                           ;	unspecified, using default values
  7099                           ;	Clock Out Enable bit
  7100                           ;	CLKOUTEN = 0x1, unprogrammed default
  7101                           ;	Clock Switch Enable bit
  7102                           ;	CSWEN = 0x1, unprogrammed default
  7103                           ;	Fail-Safe Clock Monitor Enable bit
  7104                           ;	FCMEN = 0x1, unprogrammed default
  7105   300001                     	org	3145729
  7106   300001  FF                 	db	255
  7107                           
  7108                           ;Config register CONFIG2L @ 0x300002
  7109                           ;	unspecified, using default values
  7110                           ;	Master Clear Enable bit
  7111                           ;	MCLRE = 0x1, unprogrammed default
  7112                           ;	Power-up Timer Enable bit
  7113                           ;	PWRTE = 0x1, unprogrammed default
  7114                           ;	Low-power BOR enable bit
  7115                           ;	LPBOREN = 0x1, unprogrammed default
  7116                           ;	Brown-out Reset Enable bits
  7117                           ;	BOREN = 0x3, unprogrammed default
  7118   300002                     	org	3145730
  7119   300002  FF                 	db	255
  7120                           
  7121                           ;Config register CONFIG2H @ 0x300003
  7122                           ;	unspecified, using default values
  7123                           ;	Brown Out Reset Voltage selection bits
  7124                           ;	BORV = 0x3, unprogrammed default
  7125                           ;	ZCD Disable bit
  7126                           ;	ZCD = 0x1, unprogrammed default
  7127                           ;	PPSLOCK bit One-Way Set Enable bit
  7128                           ;	PPS1WAY = 0x1, unprogrammed default
  7129                           ;	Stack Full/Underflow Reset Enable bit
  7130                           ;	STVREN = 0x1, unprogrammed default
  7131                           ;	Debugger Enable bit
  7132                           ;	DEBUG = 0x1, unprogrammed default
  7133                           ;	Extended Instruction Set Enable bit
  7134                           ;	XINST = 0x1, unprogrammed default
  7135   300003                     	org	3145731
  7136   300003  FF                 	db	255
  7137                           
  7138                           ;Config register CONFIG3L @ 0x300004
  7139                           ;	WDT Period Select bits
  7140                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7141                           ;	WDT operating mode
  7142                           ;	WDTE = OFF, WDT Disabled
  7143   300004                     	org	3145732
  7144   300004  9F                 	db	159
  7145                           
  7146                           ;Config register CONFIG3H @ 0x300005
  7147                           ;	unspecified, using default values
  7148                           ;	WDT Window Select bits
  7149                           ;	WDTCWS = 0x7, unprogrammed default
  7150                           ;	WDT input clock selector
  7151                           ;	WDTCCS = 0x7, unprogrammed default
  7152   300005                     	org	3145733
  7153   300005  FF                 	db	255
  7154                           
  7155                           ;Config register CONFIG4L @ 0x300006
  7156                           ;	unspecified, using default values
  7157                           ;	Write Protection Block 0
  7158                           ;	WRT0 = 0x1, unprogrammed default
  7159                           ;	Write Protection Block 1
  7160                           ;	WRT1 = 0x1, unprogrammed default
  7161                           ;	Write Protection Block 2
  7162                           ;	WRT2 = 0x1, unprogrammed default
  7163                           ;	Write Protection Block 3
  7164                           ;	WRT3 = 0x1, unprogrammed default
  7165                           ;	Write Protection Block 3
  7166                           ;	WRT4 = 0x1, unprogrammed default
  7167                           ;	Write Protection Block 3
  7168                           ;	WRT5 = 0x1, unprogrammed default
  7169                           ;	Write Protection Block 3
  7170                           ;	WRT6 = 0x1, unprogrammed default
  7171                           ;	Write Protection Block 3
  7172                           ;	WRT7 = 0x1, unprogrammed default
  7173   300006                     	org	3145734
  7174   300006  FF                 	db	255
  7175                           
  7176                           ;Config register CONFIG4H @ 0x300007
  7177                           ;	unspecified, using default values
  7178                           ;	Configuration Register Write Protection bit
  7179                           ;	WRTC = 0x1, unprogrammed default
  7180                           ;	Boot Block Write Protection bit
  7181                           ;	WRTB = 0x1, unprogrammed default
  7182                           ;	Data EEPROM Write Protection bit
  7183                           ;	WRTD = 0x1, unprogrammed default
  7184                           ;	Scanner Enable bit
  7185                           ;	SCANE = 0x1, unprogrammed default
  7186                           ;	Low Voltage Programming Enable bit
  7187                           ;	LVP = 0x1, unprogrammed default
  7188   300007                     	org	3145735
  7189   300007  FF                 	db	255
  7190                           
  7191                           ;Config register CONFIG5L @ 0x300008
  7192                           ;	unspecified, using default values
  7193                           ;	UserNVM Program Memory Code Protection bit
  7194                           ;	CP = 0x1, unprogrammed default
  7195                           ;	DataNVM Memory Code Protection bit
  7196                           ;	CPD = 0x1, unprogrammed default
  7197   300008                     	org	3145736
  7198   300008  FF                 	db	255
  7199                           
  7200                           ;Config register CONFIG5H @ 0x300009
  7201                           ;	unspecified, using default values
  7202   300009                     	org	3145737
  7203   300009  FF                 	db	255
  7204                           
  7205                           ;Config register CONFIG6L @ 0x30000A
  7206                           ;	unspecified, using default values
  7207                           ;	Table Read Protection Block 0
  7208                           ;	EBTR0 = 0x1, unprogrammed default
  7209                           ;	Table Read Protection Block 1
  7210                           ;	EBTR1 = 0x1, unprogrammed default
  7211                           ;	Table Read Protection Block 2
  7212                           ;	EBTR2 = 0x1, unprogrammed default
  7213                           ;	Table Read Protection Block 3
  7214                           ;	EBTR3 = 0x1, unprogrammed default
  7215                           ;	Table Read Protection Block 4
  7216                           ;	EBTR4 = 0x1, unprogrammed default
  7217                           ;	Table Read Protection Block 5
  7218                           ;	EBTR5 = 0x1, unprogrammed default
  7219                           ;	Table Read Protection Block 6
  7220                           ;	EBTR6 = 0x1, unprogrammed default
  7221                           ;	Table Read Protection Block 7
  7222                           ;	EBTR7 = 0x1, unprogrammed default
  7223   30000A                     	org	3145738
  7224   30000A  FF                 	db	255
  7225                           
  7226                           ;Config register CONFIG6H @ 0x30000B
  7227                           ;	unspecified, using default values
  7228                           ;	Boot Block Table Read Protection bit
  7229                           ;	EBTRB = 0x1, unprogrammed default
  7230   30000B                     	org	3145739
  7231   30000B  FF                 	db	255
  7232                           tosu	equ	0xFFF
  7233                           tosh	equ	0xFFE
  7234                           tosl	equ	0xFFD
  7235                           stkptr	equ	0xFFC
  7236                           pclatu	equ	0xFFB
  7237                           pclath	equ	0xFFA
  7238                           pcl	equ	0xFF9
  7239                           tblptru	equ	0xFF8
  7240                           tblptrh	equ	0xFF7
  7241                           tblptrl	equ	0xFF6
  7242                           tablat	equ	0xFF5
  7243                           prodh	equ	0xFF4
  7244                           prodl	equ	0xFF3
  7245                           indf0	equ	0xFEF
  7246                           postinc0	equ	0xFEE
  7247                           postdec0	equ	0xFED
  7248                           preinc0	equ	0xFEC
  7249                           plusw0	equ	0xFEB
  7250                           fsr0h	equ	0xFEA
  7251                           fsr0l	equ	0xFE9
  7252                           wreg	equ	0xFE8
  7253                           indf1	equ	0xFE7
  7254                           postinc1	equ	0xFE6
  7255                           postdec1	equ	0xFE5
  7256                           preinc1	equ	0xFE4
  7257                           plusw1	equ	0xFE3
  7258                           fsr1h	equ	0xFE2
  7259                           fsr1l	equ	0xFE1
  7260                           bsr	equ	0xFE0
  7261                           indf2	equ	0xFDF
  7262                           postinc2	equ	0xFDE
  7263                           postdec2	equ	0xFDD
  7264                           preinc2	equ	0xFDC
  7265                           plusw2	equ	0xFDB
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        26
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      93
    BANK0           160     32      90
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getHSVval@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    getHSVval@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    maxRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    minRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1149DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1149DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2726$buffer	PTR unsigned char  size(2) Largest target is 0

    S2726$source	PTR const unsigned char  size(2) Largest target is 0

    scaleRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _scaleRGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _getHSVval->___lldiv
    _minRGB->_min
    _maxRGB->_max
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   25285
                                             81 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                          _getHSVval
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                           _scaleRGB
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5843
                                             54 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5821
                                             54 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5182
                                             28 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4357
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    4005
                                             10 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scaleRGB                                             3     2      1    5963
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _getHSVval                                           52    50      2    5761
                                             13 COMRAM    50    48      2
                            ___lldiv
                             ___lmul
                             _maxRGB
                             _minRGB
 ---------------------------------------------------------------------------------
 (2) _minRGB                                               4     2      2     581
                                              6 COMRAM     4     2      2
                                _min
 ---------------------------------------------------------------------------------
 (3) _min                                                  6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _maxRGB                                               4     2      2     581
                                              6 COMRAM     4     2      2
                                _max
 ---------------------------------------------------------------------------------
 (3) _max                                                  6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1226
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getHSVval
     ___lldiv
     ___lmul
     _maxRGB
       _max
     _minRGB
       _min
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _scaleRGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sendHSVvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      5A       5       56.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      60        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 08 10:08:15 2024

                 _turn180Delay 00AE                 _color_read_Red 28BA                _color_read_Blue 29AA  
              _trail_timer_low 0114                             l42 2196                             l27 2BC8  
                           l71 2908                             l80 29A8                             l65 2B3A  
                           l74 2958                             l83 2810                             l68 2C5E  
                           l93 2B92                             l77 29F8                             l94 2B9A  
                           l97 2B62                             l98 2B6A                   ___awdiv@sign 0006  
             _trail_timer_high 0128               _color_read_Clear 295A               _color_read_Green 290A  
                          l101 28B8                            l104 2864                            l123 14E4  
                          l107 20CE                            l300 2CEA                            l303 2CD6  
                          l312 2AD2                            l306 2CE0                            l309 2CB4  
                          l433 2C7C                            l442 2C80                            l291 2BF2  
                          l451 2706                            l196 24F8                            l445 2C94  
                          l294 2BF4                            l462 2764                            l297 2C1A  
                          l465 2A44                            l730 2458                            l714 2630  
                          l643 2CCC                            l715 2640                            l637 2C3E  
                          l646 2CC0                            l737 2468                            l934 225A  
                          l947 23C4                            _ISR 0008         ??_toggle_tricolour_LED 0001  
                          _abs 2AD4                            _max 2B6C                            _min 2B3C  
                 ___awmod@sign 0006                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                    _squareDelay 00AA                           ?_ISR 0001  
                 ___fltol@exp1 0031                           l1000 1FF8                           l1201 256C  
                         l1211 26A4                           ?_abs 0007                           l1204 269C  
                         l3000 1918                           l1321 190E                           l3010 1962  
                         l3002 193E                           l3100 2CD8                           l1324 17A0  
                         l3020 19DC                           l3012 1982                           l3004 1946  
                         l1317 15AA                           l3102 2CDC                           l3110 2A98  
                         l1334 18D0                           l1326 1818                           l1422 1AB2  
                         l3030 1A4E                           l3022 1A0C                           l3014 19A2  
                         l3006 1954                           l1327 1806                           l1423 1C1A  
                         l3200 2BDE                           l3112 2AA0                           l3104 2CCE  
                         l3040 1A9E                           l3032 1A5E                           l3024 1A28  
                         l3016 19BA                           l3008 1958                           l1361 1DCE  
                         l1441 27B2                           l3202 2BE0                           l3122 2B6C  
                         l3130 2B44                           l3114 2AA8                           l3106 2CD2  
                         l1194 2564                           l3050 1B04                           l3034 1A6E  
                         l3042 1AA0                           l3026 1A2C                           l3018 19C4  
                         l1442 27BA                           l3204 2C42                           l3124 2B74  
                         l3132 2B5A                           l3116 2ACE                           l3108 2A94  
                         l3220 29F0                           l3212 290A                           l1372 1D66  
                         l3060 1B5E                           l3052 1B08                           l3036 1A7C  
                         l3028 1A3E                           l3044 1ABE                           l1365 1D0A  
                         l1461 2314                           l1381 2A90                           l3126 2B8A  
                         l3230 2866                           l3118 2AD0                           l3214 2950  
                         l3206 28BA                           l1358 1C72                           l1446 2AEE  
                         l3062 1B72                           l3054 1B2C                           l3070 1BA4  
                         l3046 1ADE                           l3038 1A84                           l3128 2B3C  
                         l3224 295A                           l3208 2900                           l3400 1502  
                         l3240 26AA                           l1472 2CF2                           l3080 1C0A  
                         l3064 1B8C                           l3056 1B48                           l3048 1AF6  
                         l3072 1BD4                           l1449 2B06                           l3234 2812  
                         l3218 29AA                           l3226 29A0                           l3410 1548  
                         l3402 1512                           l3242 26D0                           l3082 1C12  
                         l3074 1BDC                           l3066 1B8E                           l3058 1B4C  
                         l3250 2A5A                           l3180 2CC4                           l3092 2CE2  
                         l3500 186C                           l3420 1574                           l3412 154E  
                         l3404 1522                           l3244 26D4                           l4140 1BC6  
                         l3252 2A62                           l3182 2CC8                           l3094 2CE6  
                         l3510 18D4                           l3502 1870                           l3430 15CA  
                         l3422 1584                           l3414 1554                           l3406 1532  
                         l3238 26A6                           l3078 1BE8                           l3190 2792  
                         l3254 2A7A                           l3246 2A46                           l3360 2CB6  
                         l3192 2BCA                           l3096 2CAC                           l3520 18FE  
                         l3512 18E4                           l3504 188A                           l3440 160A  
                         l3424 1594                           l3416 1562                           l3408 1538  
                         l3600 1D76                           l3176 2C80                           l2800 2224  
                         l3184 2766                           l3256 2A88                           l3248 2A52  
                         l3194 2BD4                           l3098 2CB0                           l3370 2610  
                         l3362 25D8                           l3514 18F2                           l3506 189E  
                         l3450 1654                           l3442 1616                           l3434 15DE  
                         l3426 159A                           l3418 1564                           l3530 1F1E  
                         l3610 1DBE                           l3602 1D7A                           l3178 2C90  
                         l2810 224A                           l2802 222C                           l3186 276A  
                         l3196 2BDA                           l3620 2B0C                           l3380 2400  
                         l3372 23C6                           l3364 25E8                           l3700 1194  
                         l3516 18F4                           l3508 18B8                           l3460 16A6  
                         l3452 1660                           l3444 162E                           l3436 15EA  
                         l3428 15BA                           l3540 1F6C                           l3532 1F48  
                         l3524 1EF4                           l3604 1D9E                           l2812 2252  
                         l2804 222E                           l2820 2328                           l2900 22D4  
                         l3188 2778                           l3614 2B9C                           l3198 2BDC  
                         l3622 2B16                           l3390 2448                           l3382 240E  
                         l3374 23D6                           l3366 25F6                           l3710 1262  
                         l3702 11D4                           l3518 18FA                           l3470 1724  
                         l3462 16B6                           l3454 1670                           l3446 163A  
                         l3438 15F4                           l3550 1F98                           l3534 1F4A  
                         l3526 1F0A                           l3606 1DAE                           l2806 2234  
                         l2830 235C                           l2822 2330                           l3624 2B26  
                         l3392 2452                           l3384 2418                           l3376 23EC  
                         l3368 2606                           l3720 1316                           l3712 1288  
                         l3704 1208                           l3640 0E1A                           l3800 2C60  
                         l3480 179E                           l3472 175A                           l3464 16D2  
                         l3456 167C                           l3448 1646                           l3560 1FC8  
                         l3536 1F5A                           l3608 1DBC                           l2808 223A  
                         l2840 2398                           l2832 2364                           l2824 2334  
                         l2816 2316                           l2904 2AD4                           l3616 20D0  
                         l3626 2B30                           l3618 2B08                           l3386 2436  
                         l3378 23F4                           l3730 13B0                           l3722 1346  
                         l3714 1294                           l3706 1238                           l3650 0E70  
                         l3642 0E32                           l3810 2C7A                           l3802 2C6A  
                         l3490 17FE                           l3482 17B0                           l3474 1768  
                         l3466 16DE                           l3458 168C                           l3394 14E6  
                         l3562 1FD8                           l3546 1F84                           l3538 1F5E  
                         l3570 1C2E                           l2842 239E                           l2834 236C  
                         l2826 2342                           l2818 231A                           l2906 2AE2  
                         l3820 2C34                           l3812 2C1C                           l3388 2446  
                         l3740 143A                           l3732 13E4                           l3716 12A6  
                         l3724 1352                           l3708 1240                           l3660 0ED4  
                         l3652 0E7C                           l3644 0E42                           l3628 27BC  
                         l3804 2C6C                           l3484 17BE                           l3476 1786  
                         l3468 16FA                           l3396 14F2                           l3564 1FE8  
                         l3556 1FAC                           l3548 1F8E                           l3580 1CAC  
                         l3572 1C3C                           l2780 21B6                           l2772 2198  
                         l2836 237A                           l2844 23A4                           l2828 234A  
                         l2860 2524                           l2852 24FA                           l3822 2C36  
                         l3814 2C24                           l3750 14C0                           l3742 1446  
                         l3734 1414                           l3726 135E                           l3718 12E2  
                         l3670 0F90                           l3662 0F14                           l3654 0E9A  
                         l3646 0E52                           l3806 2C76                           l3494 1828  
                         l3486 17C2                           l3478 1790                           l3398 1500  
                         l3558 1FB8                           l3590 1D00                           l3582 1CB4  
                         l3574 1C82                           l3638 1FFA                           l2790 21EA  
                         l2782 21C4                           l2774 219C                           l2846 23B4  
                         l2838 2390                           l2870 2558                           l2862 2532  
                         l2854 2502                           l3830 275A                           l3910 1E3A  
                         l3902 1DD0                           l3824 2C3A                           l3816 2C26  
                         l3752 14D2                           l3744 147A                           l3728 1370  
                         l3672 0FC4                           l3664 0F48                           l3656 0EC4  
                         l3680 1074                           l3736 141C                           l3648 0E5E  
                         l3760 24A4                           l3808 2C78                           l3496 1834  
                         l3488 17D0                           l3592 1D3C                           l3584 1CC0  
                         l3576 1C98                           l3568 1C1E                           l2792 21F2  
                         l2784 21CC                           l2776 21AA                           l2848 23BC  
                         l2872 255E                           l2864 2538                           l2856 2514  
                         l2880 2664                           l3832 29FA                           l3920 1E66  
                         l3912 1E42                           l3904 1E16                           l3826 2C3C  
                         l3818 2C30                           l3746 14AA                           l3738 142E  
                         l3690 110E                           l3682 1096                           l3674 1008  
                         l3666 0F78                           l3658 0EC4                           l3770 24E0  
                         l3762 24C8                           l3754 246A                           l3498 1842  
                         l3594 1D48                           l3586 1CF2                           l2794 21FA  
                         l2786 21D0                           l2778 21B2                           l2866 254E  
                         l2858 251C                           l2882 2672                           l2874 2642  
                         l2890 225C                           l3834 2A3A                           l3930 1E74  
                         l3922 1E6A                           l3914 1E4A                           l3906 1E1E  
                         l3748 14B2                           l3692 1142                           l3684 10BC  
                         l3676 103C                           l3668 0F84                           l3772 24EA  
                         l3764 24D2                           l3756 247A                           l3596 1D56  
                         l3588 1CF4                           l2796 2208                           l2788 21D8  
                         l2868 2556                           l2884 2688                           l2876 2654  
                         l2892 226C                           l3828 2708                           l3940 1EA4  
                         l3932 1E76                           l3924 1E6E                           l3916 1E52  
                         l3908 1E26                           l3694 1172                           l3686 10C8  
                         l3678 106C                           l3774 24EC                           l3766 24D4  
                         l3758 24A0                           l3598 1D74                           l2798 220E  
                         l2886 2690                           l2878 265C                           l2894 227C  
                         l3950 1ECC                           l3942 1EA8                           l3934 1E78  
                         l3926 1E70                           l3918 1E62                           ?_max 0001  
                         l3688 10D2                           l3696 117E                           l3776 24F6  
                         l3768 24DE                           l2888 2696                           l2896 2286  
                         l3952 1ED4                           l3944 1EB0                           l3936 1E7A  
                         l3928 1E72                           l2994 2BF4                           l3698 118A  
                         l2898 22A2                           l3946 1EB8                           l3938 1E7E  
                         l2996 2C04                           l3948 1EC4                           ?_min 0001  
                         l2998 1910                           STR_1 0E0F                           STR_2 0E14  
                         STR_5 0E01                           STR_6 0E04                           u2000 19D8  
                         u2001 19D2                           u2010 19DA                           u2100 1BA0  
                         u2020 1A3E                           u2101 1B9C                           u2021 1A3A  
                         u2110 2ABC                           u2030 1A4E                           u2111 2AB4  
                         u2031 1A4A                           u2200 25F6                           u2040 1A5E  
                         u2201 25F2                           u2041 1A5A                           u2210 2630  
                         u2130 2B8A                           u2050 1A6E                           u2211 262C  
                         u2131 2B86                           u2051 1A6A                           u2220 23EC  
                         u2140 2B5A                           u2300 1584                           u2060 1AB2  
                         u2221 23E8                           u2141 2B56                           u2301 1580  
                         u2061 1AAE                           u2230 240E                           u2310 15BA  
                         u2150 2C90                           u2070 1ADE                           u2231 240A  
                         u2311 15B6                           u2151 2C8C                           u2071 1ADA  
                         u3007 1EDE                           u2240 2436                           u2128 2ABE  
                         u2400 1842                           u2320 15CA                           u1600 2224  
                         u2080 1B5E                           u2160 27B2                   _BAUD4CONbits 0EE9  
                         u3017 2B1C                           u2241 2432                           u2401 183E  
                         u2321 15C6                           u1601 2220                           u2081 1B5A  
                         u2161 27AE                           u2410 188A                           u2330 1744  
                         u2250 1500                           u2170 26CC                           u1610 224A  
                         u2090 1B6E                           u2411 1886                           u2251 14FC  
                         u1611 2246                           u2091 1B6A                           u2420 18B8  
                         u2340 179E                           u2260 1512                           u2500 1FD8  
                         u2180 26F6                           u1620 2328                           u1700 254E  
                         u2421 18B4                           u2341 179A                           u2261 150E  
                         u2501 1FD4                           u1621 2324                           u1701 254A  
                         u2430 18F2                           u2350 17BE                           u2270 1522  
                         u2510 1C2E                           u2190 2706                           u1630 2342  
                         u1710 2654                           u2431 18EE                           u2351 17BA  
                         u2335 173A                           u2271 151E                           u2511 1C2A  
                         u2191 2702                           u1631 233E                           u1711 2650  
                         u2360 17D0                           u2280 1562                           u2440 1F0A  
                         u2600 1DBC                           u2520 1C3C                           u1560 21AA  
                         u1640 235C                           u1720 2672                           u2361 17CC  
                         u2281 155E                           u2441 1F06                           u2601 1DB8  
                         u2521 1C38                           u2177 26C2                           u1561 21A6  
                         u1641 2358                           u1721 266E                           u2370 17FE  
                         u2290 1574                           u2450 1F3E                           u2530 1C98  
                         u1570 21C4                           u1650 237A                           u1730 2688  
                         u2610 20E2                           _T2PR 0FBC                           u2371 17FA  
                         u2291 1570                           u2531 1C94                           u2187 26EC  
                         u1571 21C0                           u1651 2376                           u1731 2684  
                         u2611 20DA                           u2380 1814                           u2460 1F6C  
                         u2540 1CEE                           u1580 21EA                           u1660 2390  
                         u1740 226C                           u2381 1810                           u2461 1F68  
                         u2541 1CEA                           u1581 21E6                           u1661 238C  
                         u1741 2268                           u2390 1828                           u2470 1F80  
                         u2550 1D38                           u1590 2208                           u1670 23B4  
                         u1750 227C                           u2710 2184                           u2630 2102  
                         u2391 1824                           u2471 1F7C                           u2455 1F34  
                         u2551 1D34                           u1591 2204                           u1671 23B0  
                         u1751 2278                           u2711 217C                           u2631 20FA  
                         u2800 10BC                           u2480 1FA8                           u2560 1D56  
                         u1680 2514                           u1760 22A2                           u2801 10B8  
                         u2481 1FA4                           u2561 1D52                           u1681 2510  
                         u1761 229E                           u2810 1262                           u2490 1FC8  
                         u2570 1D66                           u1690 2532                           u1770 22D4  
                         u2650 2122                           u2811 125E                           u2491 1FC4  
                         u2571 1D62                           u1691 252E                           u1771 22D0  
                         u2651 211A                           u2820 1288                           u2580 1D74  
                         u1780 2AE2                           u2708 2164                           u2628 20E4  
                         u2821 1284                           u2581 1D70                           u1781 2ADE  
                         u1950 2C04                           u2590 1DAE                           u2670 2144  
                         u2910 1E92                           u1951 2C00                           u2591 1DAA  
                         u2671 213C                           u2911 1E8A                           u1960 2C1A  
                         u2760 0E70                           u2728 2186                           u2648 2104  
                         u1961 2C16                           u2761 0E6C                           u2850 142E  
                         u2770 0E9A                           u1970 193E                           u2690 2162  
                         u2851 142A                           u2835 1296                           u2771 0E96  
                         u1971 193A                           u2691 215A                           u2780 0EC4  
                         u1980 1982                           u2668 2124                           u2845 1360  
                         u2781 0EC0                           u1981 197E                           u2790 1096  
                         u1990 19A2                           u2791 1092                           u1991 199E  
                         u2688 2146                           u2928 1E94                           abs@a 0007  
                         _dbuf 0060                           _main 1DD0                           _prec 0084  
                         _nout 0080                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         max@a 0001                           max@b 0003                           btemp 005E  
                         min@a 0001                           min@b 0003             _sendRGBCvalSerial4 2708  
                         prodh 0FF4                           prodl 0FF3                           start 0034  
       __end_of_color_read_Red 290A                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 0037                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                          ??_max 0005                          ??_min 0005  
                ___fltol@sign1 0030                          ?_main 0001             _timer_high_pointer 0054  
              __end_of___awdiv 225C                __end_of___awmod 23C6                __end_of___flmul 1910  
              __end_of___fltol 1FFA                __end_of___lldiv 246A                ___awdiv@divisor 0003  
              __end_of___lwdiv 256E                __end_of___lwmod 26A6                          i2l672 002E  
                        i2l673 0030                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0011  
                 vfpfcnvrt@fmt 000C                          _TMR0H 0FD4                          _TMR0L 0FD3  
          ___lmul@multiplicand 0005        __end_of_sendCharSerial4 2C96     __end_of_I2C_2_Master_Start 2CEC  
                  _write_timer 2CC2     __end_of_I2C_2_Master_Write 2CB6                    _turningGear 0056  
                        _flags 005A           ??_sendRGBCvalSerial4 0038                          _fputc 225C  
                        _width 0082                          _putch 2CF2              _turnRight135Delay 00B0  
                        tablat 0FF5                _turnLeft90Delay 00B6                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 2A92        __end_of_color_read_Blue 29FA  
        _I2C_2_Master_RepStart 2CCE                ?_color_read_Red 0005                __initialization 256E  
                 __end_of_main 1EF4                         ??_main 0052                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2730 001A  
                       i2l2732 002A                         i2l2728 000A                         _RG6PPS 0E88  
                vfpfcnvrt@done 0010       __end_of_color_click_init 2B3C                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 1DD0               _turnLeft135Delay 00B2  
                ??_Timer0_init 0003                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001C                         ___lmul 25D8                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___flmul 0017                      ??___fltol 002C  
                    ??___lldiv 0009                      ??___lwdiv 0005                      ??___lwmod 0005  
                       _maxRGB 2866                         _minRGB 2812               __end_of_scaleRGB 20D0  
                       clear_0 25B4                         clear_1 25C0               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       fputc@c 0001                   __pdataCOMRAM 0054              _timer_low_pointer 00A8  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 27BC              ??_initDCmotorsPWM 0003                      ??_sprintf 0028  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
            _buggy_lights_init 2B9C                     __accesstop 0060        __end_of__initialization 25CE  
     __end_of_color_read_Clear 29AA       __end_of_color_read_Green 295A         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001                     ___fltol@f1 0028  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 2C96  
            getHSVval@temp_630 0034              getHSVval@temp_631 0020              getHSVval@temp_626 0038  
            getHSVval@temp_627 0028              getHSVval@temp_628 002C              getHSVval@temp_629 0030  
          ??_buggy_lights_init 0001                  __end_of_fputc 2316                  __end_of_putch 2CF4  
          __end_of_Timer0_init 2C40                        ??_fputc 0004      __end_of_buggy_lights_init 2BCA  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 27BC              _color_writetoaddr 2C40                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003                        ?___lmul 0001                        ?_maxRGB 0007  
                      ?_minRGB 0007                 ___lmul@product 0009            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                 ?_write_timer 0001                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
            __end_of_getHSVval 14E6         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                    ?_scaleRGB 0032      __end_of_color_writetoaddr 2C60             _I2C_2_Master_Start 2CE2  
                   _initUSART4 2C60             _I2C_2_Master_Write 2CAA                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 2C1C  
      sendStringSerial4@string 0002                        ___awdiv 2198                        ___awmod 2316  
                      ___flmul 14E6                        ___fltol 1EF4                        ___lldiv 23C6  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 24FA            ?_I2C_2_Master_Write 0001  
                      ___lwmod 2642                      ?_vfprintf 0019                   __psmallconst 0E00  
                      __pcinit 256E                        __ramtop 0E00                        __ptext0 1DD0  
                      __ptext1 20D0                        __ptext2 2708                        __ptext3 29FA  
                      __ptext4 2A46                        __ptext5 2766                        __ptext6 1910  
                      __ptext7 225C                        __ptext8 2CF2                        __ptext9 2AD4  
                    _T2CONbits 0FBD                     ??___xxtofl 0005               ___awmod@dividend 0001  
                   getHSVval@C 003E                     getHSVval@H 001E                     getHSVval@M 003C  
                    _T2HLTbits 0FBE                     getHSVval@S 001C                     getHSVval@m 001A  
                      maxRGB@p 0007                        _sprintf 2A46                        minRGB@p 0007  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 25CE  
            _sendHSVvalSerial4 29FA                    ?_getRGBCval 000C                        fputc@fp 0003  
                   ??_scaleRGB 0033              ?_color_click_init 0001                  getHSVval@temp 0024  
           ?_sendHSVvalSerial4 0037                ___lldiv@divisor 0005             ??_color_click_init 0005  
              ___lldiv@counter 000D              __end_of_vfpfcnvrt 1C1C            ??_sendHSVvalSerial4 0038  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0014  
                   ??_vfprintf 001C                _initDCmotorsPWM 246A                  ___xxtofl@sign 0009  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88      __end_of_sendHSVvalSerial4 2A46       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 008C                     main@motorR 0095  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                     max@max_val 0005  
               __end_of___lmul 2642                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0013  
                  vfpfcnvrt@fp 000B                  __pidataCOMRAM 2CEC                 __end_of_maxRGB 28BA  
               __end_of_minRGB 2866      sendRGBCvalSerial4@col_val 0037       sendHSVvalSerial4@col_val 0037  
                   min@min_val 0005            color_read_Clear@tmp 000A            start_initialization 256E  
                  __end_of_ISR 0034                    __end_of_abs 2B08                    __end_of_max 2B9C  
                  __end_of_min 2B6C               _turnRight90Delay 00B4      sendRGBCvalSerial4@tempStr 0038  
     sendHSVvalSerial4@tempStr 0038            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 24FA  
                  vfprintf@fmt 001A                       ??___lmul 0009                       ??_maxRGB 0009  
                     ??_minRGB 0009                    __pdataBANK0 00A6                      ___flmul@a 0013  
                    ___flmul@b 000F                    __pbssCOMRAM 005A                  __pcstackBANK0 0086  
               _wall_threshold 00B8   __end_of_toggle_tricolour_LED 2198                      _getHSVval 0E1A  
             ___lwdiv@dividend 0001                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___flmul 000F  
                     ?___fltol 0028                       ?___lldiv 0001                       ?___lwdiv 0001  
                     ?___lwmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 2BF4              _I2C_2_Master_Init 2BCA  
            _I2C_2_Master_Read 2A92              _I2C_2_Master_Stop 2CD8                    _maxRGB$3164 0009  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 0005                  _headbuttDelay 00AC  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001D                      _rampDelay 0059  
                 ??_getRGBCval 000D              _sendStringSerial4 26A6            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                    _minRGB$3165 0009                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                     ?_getHSVval 000E                  ??_reset_timer 0003  
                     i2u152_40 001A                       i2u152_41 0016                       i2u153_40 002A  
                     i2u153_41 0026                       _PIR0bits 0E33                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 005D  
                    _vfpfcnvrt 1910      __end_of_I2C_2_Master_Idle 2C1C      __end_of_I2C_2_Master_Init 2BF4  
    __end_of_I2C_2_Master_Read 2AD4      __end_of_I2C_2_Master_Stop 2CE2    I2C_2_Master_Write@data_byte 0002  
           __end_of_getRGBCval 2812     __end_of_sendRGBCvalSerial4 2766              ??_color_read_Blue 0007  
                   vfpfcnvrt@c 0018              ___lmul@multiplier 0001                      copy_data0 2582  
                    copy_data1 25A2      __end_of_sendStringSerial4 2708  __end_of_I2C_2_Master_RepStart 2CD8  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 001B                       __Lrparam 0000                     vfprintf@fp 0019  
                    scaleRGB@p 0032                     ?_vfpfcnvrt 000B            __end_of_reset_timer 2CC2  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001F  
                   sprintf@ret 0028                       ___xxtofl 1C1C                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6           _toggle_tricolour_LED 20D0                ___lwdiv@divisor 0003  
           __end_of_initUSART4 2C7E                ___lwdiv@counter 0007                       __ptext10 2642  
                     __ptext11 24FA                       __ptext20 2C60                       __ptext12 2316  
                     __ptext21 246A                       __ptext13 2198                       __ptext30 2812  
                     __ptext22 27BC                       __ptext14 26A6                       __ptext31 2B3C  
                     __ptext23 28BA                       __ptext15 2C7E                       __ptext40 2CE2  
                     __ptext32 2866                       __ptext24 290A                       __ptext16 1FFA  
                     __ptext41 2BF4                       __ptext33 2B6C                       __ptext25 295A  
                     __ptext17 1C1C                       __ptext42 2BCA                       __ptext34 25D8  
                     __ptext26 29AA                       __ptext18 1EF4                       __ptext43 2B9C  
                     __ptext35 23C6                       __ptext27 2CCE                       __ptext19 14E6  
                     __ptext44 2C1C                       __ptext36 2B08                       __ptext28 2A92  
                     __ptext45 2CB6                       __ptext37 2C40                       __ptext29 0E1A  
                     __ptext46 2CC2                       __ptext38 2CAA                       __ptext39 2CD8  
                  getRGBCval@p 000C            main@measured_colour 009E                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                       _scaleRGB 1FFA                    ??_getHSVval 0010  
                  getHSVval@p1 000E                    getHSVval@p2 000F                    getHSVval@Sz 0018  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 2766                     _INTCONbits 0FF2          ?_toggle_tricolour_LED 0001  
                ??_write_timer 0002                       intlevel2 0000                      sprintf@ap 002A  
                 _topGearRight 0057              _manoeuvre_pointer 00A6               ___lwmod@dividend 0001  
             ___lldiv@dividend 0001                 main@HSV_colour 0086                    _reset_timer 2CB6  
                  ??_vfpfcnvrt 000E               _color_click_init 2B08                    _topGearLeft 0058  
                     sprintf@f 002B                       sprintf@s 001D                     _SSP2DATPPS 0E1D  
             ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C                ___lwmod@divisor 0003  
              ___lwmod@counter 0005                _trail_manoeuvre 0100                    _return_flag 005C  
              _manoeuvre_count 005B                     _TX4STAbits 0EE8                _sendCharSerial4 2C7E  
          __end_of_write_timer 2CCE  
