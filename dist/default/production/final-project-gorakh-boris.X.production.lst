

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 18:43:45 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 18/08/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataBANK0
    86   00176A                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for _squareDelay
    90   00176A  012C               	dw	300
    91                           
    92                           ;initializer for _headbuttDelay
    93   00176C  0046               	dw	70
    94                           
    95                           ;initializer for _turn180Delay
    96   00176E  01FE               	dw	510
    97                           
    98                           ;initializer for _turnRight135Delay
    99   001770  012C               	dw	300
   100                           
   101                           ;initializer for _turnLeft135Delay
   102   001772  012C               	dw	300
   103                           
   104                           ;initializer for _turnRight90Delay
   105   001774  00AF               	dw	175
   106                           
   107                           ;initializer for _turnLeft90Delay
   108   001776  00AF               	dw	175
   109                           
   110                           ;initializer for _manoeuvre_pointer
   111   001778  A2                 	db	low _trail_manoeuvre
   112                           
   113                           ;initializer for _timer_low_pointer
   114   001779  B6                 	db	low _trail_timer_low
   115                           
   116                           ;initializer for _timer_high_pointer
   117   00177A  DF                 	db	low _trail_timer_high
   118                           
   119                           ;initializer for _turningGear
   120   00177B  2A                 	db	42
   121                           
   122                           ;initializer for _topGearRight
   123   00177C  14                 	db	20
   124                           
   125                           ;initializer for _topGearLeft
   126   00177D  14                 	db	20
   127                           
   128                           ;initializer for _rampDelay
   129   00177E  08                 	db	8
   130                           
   131                           ;initializer for _trail_timer_high
   132   00177F  03                 	db	3
   133   001780  06                 	db	6
   134   001781  03                 	db	3
   135   001782  06                 	db	6
   136   001783  03                 	db	3
   137   001784  06                 	db	6
   138   001785  03                 	db	3
   139   001786  06                 	db	6
   140   001787  03                 	db	3
   141   001788  06                 	db	6
   142   001789  03                 	db	3
   143   00178A  06                 	db	6
   144   00178B  03                 	db	3
   145   00178C  06                 	db	6
   146   00178D  03                 	db	3
   147   00178E  06                 	db	6
   148   00178F  03                 	db	3
   149   001790  06                 	db	6
   150   001791  03                 	db	3
   151   001792  06                 	db	6
   152   000000                     _TX4REG	set	3812
   153   000000                     _RC4STAbits	set	3815
   154   000000                     _SP4BRGH	set	3814
   155   000000                     _LATEbits	set	3965
   156   000000                     _TRISEbits	set	3973
   157   000000                     _LATGbits	set	3967
   158   000000                     _TRISGbits	set	3975
   159   000000                     _LATFbits	set	3966
   160   000000                     _LATHbits	set	3968
   161   000000                     _TRISFbits	set	3974
   162   000000                     _TRISHbits	set	3976
   163   000000                     _SSP2CON2bits	set	3802
   164   000000                     _RX4PPS	set	3605
   165   000000                     _SSP2CLKPPS	set	3612
   166   000000                     _SSP2DATPPS	set	3613
   167   000000                     _RC7PPS	set	3689
   168   000000                     _RE2PPS	set	3700
   169   000000                     _LATAbits	set	3961
   170   000000                     _LATDbits	set	3964
   171   000000                     _TRISDbits	set	3972
   172   000000                     _T2PR	set	4028
   173   000000                     _T2CONbits	set	4029
   174   000000                     _CCPR2H	set	4006
   175   000000                     _CCPR1H	set	4010
   176   000000                     _TRISCbits	set	3971
   177   000000                     _TRISAbits	set	3969
   178   000000                     _LATCbits	set	3963
   179   000000                     _RE4PPS	set	3702
   180   000000                     _RG6PPS	set	3720
   181   000000                     _RD5PPS	set	3695
   182   000000                     _ANSELDbits	set	3751
   183   000000                     _SSP2ADD	set	3798
   184   000000                     _SSP2CON1bits	set	3801
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _CCP2CONbits	set	4007
   196   000000                     _CCP3CONbits	set	3878
   197   000000                     _CCP4CONbits	set	3874
   198   000000                     _RC4REG	set	3811
   199   000000                     _SP4BRGL	set	3813
   200   000000                     _TX4STAbits	set	3816
   201   000000                     _BAUD4CONbits	set	3817
   202   000000                     _SSP2CON2	set	3802
   203   000000                     _SSP2STAT	set	3800
   204   000000                     _ANSELFbits	set	3764
   205   000000                     _SSP2BUF	set	3797
   206   000000                     _PIE0bits	set	3625
   207   000000                     _PIE4bits	set	3629
   208   000000                     _PIR4bits	set	3639
   209   000000                     _RC0PPS	set	3682
   210   000000                     _RD6PPS	set	3696
   211   000000                     _PIR0bits	set	3635
   212   000000                     _INTCONbits	set	4082
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_1:
   219                           
   220                           ; BSR set to: 14
   221   000E01  25                 	db	37
   222   000E02  64                 	db	100	;'d'
   223   000E03  20                 	db	32
   224   000E04  0D                 	db	13
   225   000E05  00                 	db	0
   226   000E06                     STR_2:
   227                           
   228                           ; BSR set to: 14
   229   000E06  25                 	db	37
   230   000E07  64                 	db	100	;'d'
   231   000E08  20                 	db	32
   232   000E09  00                 	db	0
   233   000E0A  00                 	db	0	; dummy byte at the end
   234   000000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238   001626                     __pcinit:
   239                           	callstack 0
   240   001626                     start_initialization:
   241                           	callstack 0
   242   001626                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK0 (41 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247   001626  0E6A               	movlw	low __pidataBANK0
   248   001628  6EF6               	movwf	tblptrl,c
   249   00162A  0E17               	movlw	high __pidataBANK0
   250   00162C  6EF7               	movwf	tblptrh,c
   251   00162E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252   001630  6EF8               	movwf	tblptru,c
   253   001632  EE00  F0CA         	lfsr	0,__pdataBANK0
   254   001636  EE10 F029          	lfsr	1,41
   255   00163A                     copy_data0:
   256   00163A  0009               	tblrd		*+
   257   00163C  CFF5 FFEE          	movff	tablat,postinc0
   258   001640  50E5               	movf	postdec1,w,c
   259   001642  50E1               	movf	fsr1l,w,c
   260   001644  E1FA               	bnz	copy_data0
   261                           
   262                           ; Clear objects allocated to BANK1 (60 bytes)
   263   001646  EE01  F000         	lfsr	0,__pbssBANK1
   264   00164A  0E3C               	movlw	60
   265   00164C                     clear_0:
   266   00164C  6AEE               	clrf	postinc0,c
   267   00164E  06E8               	decf	wreg,f,c
   268   001650  E1FD               	bnz	clear_0
   269                           
   270                           ; Clear objects allocated to BANK0 (106 bytes)
   271   001652  EE00  F060         	lfsr	0,__pbssBANK0
   272   001656  0E6A               	movlw	106
   273   001658                     clear_1:
   274   001658  6AEE               	clrf	postinc0,c
   275   00165A  06E8               	decf	wreg,f,c
   276   00165C  E1FD               	bnz	clear_1
   277   00165E                     end_of_initialization:
   278                           	callstack 0
   279   00165E                     __end_of__initialization:
   280                           	callstack 0
   281   00165E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282   001660  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283   001662  0100               	movlb	0
   284   001664  EF01  F008         	goto	_main	;jump to C main() function
   285                           
   286                           	psect	bssBANK0
   287   000060                     __pbssBANK0:
   288                           	callstack 0
   289   000060                     _dbuf:
   290                           	callstack 0
   291   000060                     	ds	32
   292   000080                     _EUSART4RXbuf:
   293                           	callstack 0
   294   000080                     	ds	20
   295   000094                     _nout:
   296                           	callstack 0
   297   000094                     	ds	2
   298   000096                     _width:
   299                           	callstack 0
   300   000096                     	ds	2
   301   000098                     _prec:
   302                           	callstack 0
   303   000098                     	ds	2
   304   00009A                     _flags:
   305                           	callstack 0
   306   00009A                     	ds	1
   307   00009B                     _manoeuvre_count:
   308                           	callstack 0
   309   00009B                     	ds	1
   310   00009C                     _return_flag:
   311                           	callstack 0
   312   00009C                     	ds	1
   313   00009D                     _returning:
   314                           	callstack 0
   315   00009D                     	ds	1
   316   00009E                     _TxBufReadCnt:
   317                           	callstack 0
   318   00009E                     	ds	1
   319   00009F                     _TxBufWriteCnt:
   320                           	callstack 0
   321   00009F                     	ds	1
   322   0000A0                     _RxBufReadCnt:
   323                           	callstack 0
   324   0000A0                     	ds	1
   325   0000A1                     _RxBufWriteCnt:
   326                           	callstack 0
   327   0000A1                     	ds	1
   328   0000A2                     _trail_manoeuvre:
   329                           	callstack 0
   330   0000A2                     	ds	20
   331   0000B6                     _trail_timer_low:
   332                           	callstack 0
   333   0000B6                     	ds	20
   334                           
   335                           	psect	dataBANK0
   336   0000CA                     __pdataBANK0:
   337                           	callstack 0
   338   0000CA                     _squareDelay:
   339                           	callstack 0
   340   0000CA                     	ds	2
   341   0000CC                     _headbuttDelay:
   342                           	callstack 0
   343   0000CC                     	ds	2
   344   0000CE                     _turn180Delay:
   345                           	callstack 0
   346   0000CE                     	ds	2
   347   0000D0                     _turnRight135Delay:
   348                           	callstack 0
   349   0000D0                     	ds	2
   350   0000D2                     _turnLeft135Delay:
   351                           	callstack 0
   352   0000D2                     	ds	2
   353   0000D4                     _turnRight90Delay:
   354                           	callstack 0
   355   0000D4                     	ds	2
   356   0000D6                     _turnLeft90Delay:
   357                           	callstack 0
   358   0000D6                     	ds	2
   359   0000D8                     _manoeuvre_pointer:
   360                           	callstack 0
   361   0000D8                     	ds	1
   362   0000D9                     _timer_low_pointer:
   363                           	callstack 0
   364   0000D9                     	ds	1
   365   0000DA                     _timer_high_pointer:
   366                           	callstack 0
   367   0000DA                     	ds	1
   368   0000DB                     _turningGear:
   369                           	callstack 0
   370   0000DB                     	ds	1
   371   0000DC                     _topGearRight:
   372                           	callstack 0
   373   0000DC                     	ds	1
   374   0000DD                     _topGearLeft:
   375                           	callstack 0
   376   0000DD                     	ds	1
   377   0000DE                     _rampDelay:
   378                           	callstack 0
   379   0000DE                     	ds	1
   380   0000DF                     _trail_timer_high:
   381                           	callstack 0
   382   0000DF                     	ds	20
   383                           
   384                           	psect	bssBANK1
   385   000100                     __pbssBANK1:
   386                           	callstack 0
   387   000100                     _EUSART4TXbuf:
   388                           	callstack 0
   389   000100                     	ds	60
   390                           
   391                           	psect	cstackCOMRAM
   392   000001                     __pcstackCOMRAM:
   393                           	callstack 0
   394   000001                     ??_I2C_2_Master_Idle:
   395   000001                     ?___awdiv:
   396                           	callstack 0
   397   000001                     ?___awmod:
   398                           	callstack 0
   399   000001                     sendCharSerial4@charToSend:
   400                           	callstack 0
   401   000001                     initDCmotorsPWM@PWMperiod:
   402                           	callstack 0
   403   000001                     ___awdiv@dividend:
   404                           	callstack 0
   405   000001                     ___awmod@dividend:
   406                           	callstack 0
   407   000001                     fputc@c:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411   000001                     	ds	1
   412   000002                     ??_I2C_2_Master_Read:
   413   000002                     I2C_2_Master_Write@data_byte:
   414                           	callstack 0
   415   000002                     sendStringSerial4@string:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1
   419   000002                     	ds	1
   420   000003                     color_writetoaddr@value:
   421                           	callstack 0
   422   000003                     I2C_2_Master_Read@ack:
   423                           	callstack 0
   424   000003                     fputc@fp:
   425                           	callstack 0
   426   000003                     ___awdiv@divisor:
   427                           	callstack 0
   428   000003                     ___awmod@divisor:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x2
   432   000003                     	ds	1
   433   000004                     ??_fputc:
   434   000004                     color_writetoaddr@address:
   435                           	callstack 0
   436   000004                     I2C_2_Master_Read@tmp:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x3
   440   000004                     	ds	1
   441   000005                     ??_color_click_init:
   442   000005                     ?_color_read_Red:
   443                           	callstack 0
   444   000005                     ?_color_read_Blue:
   445                           	callstack 0
   446   000005                     ?_color_read_Green:
   447                           	callstack 0
   448   000005                     ?_color_read_Clear:
   449                           	callstack 0
   450   000005                     ___awdiv@counter:
   451                           	callstack 0
   452   000005                     ___awmod@counter:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x4
   456   000005                     	ds	1
   457   000006                     ___awdiv@sign:
   458                           	callstack 0
   459   000006                     ___awmod@sign:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x5
   463   000006                     	ds	1
   464   000007                     ??_color_read_Red:
   465   000007                     ??_color_read_Blue:
   466   000007                     ??_color_read_Green:
   467   000007                     ??_color_read_Clear:
   468   000007                     ?_abs:
   469                           	callstack 0
   470   000007                     ___awdiv@quotient:
   471                           	callstack 0
   472   000007                     abs@a:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x6
   476   000007                     	ds	2
   477   000009                     ??_abs:
   478                           
   479                           ; 1 bytes @ 0x8
   480   000009                     	ds	1
   481   00000A                     color_read_Red@tmp:
   482                           	callstack 0
   483   00000A                     color_read_Blue@tmp:
   484                           	callstack 0
   485   00000A                     color_read_Green@tmp:
   486                           	callstack 0
   487   00000A                     color_read_Clear@tmp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x9
   491   00000A                     	ds	1
   492   00000B                     ?_vfpfcnvrt:
   493                           	callstack 0
   494   00000B                     vfpfcnvrt@fp:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xA
   498   00000B                     	ds	1
   499   00000C                     getRGBCval@p:
   500                           	callstack 0
   501   00000C                     vfpfcnvrt@fmt:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xB
   505   00000C                     	ds	1
   506   00000D                     vfpfcnvrt@ap:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0xC
   510   00000D                     	ds	1
   511   00000E                     ??_vfpfcnvrt:
   512                           
   513                           ; 1 bytes @ 0xD
   514   00000E                     	ds	1
   515   00000F                     vfpfcnvrt@done:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0xE
   519   00000F                     	ds	1
   520   000010                     vfpfcnvrt@cnt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xF
   524   000010                     	ds	2
   525   000012                     vfpfcnvrt@cp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x11
   529   000012                     	ds	1
   530   000013                     vfpfcnvrt@convarg:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x12
   534   000013                     	ds	4
   535   000017                     vfpfcnvrt@c:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x16
   539   000017                     	ds	1
   540   000018                     ?_vfprintf:
   541                           	callstack 0
   542   000018                     vfprintf@fp:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x17
   546   000018                     	ds	1
   547   000019                     vfprintf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x18
   551   000019                     	ds	1
   552   00001A                     vfprintf@ap:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x19
   556   00001A                     	ds	1
   557   00001B                     vfprintf@cfmt:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x1A
   561   00001B                     	ds	1
   562   00001C                     ?_sprintf:
   563                           	callstack 0
   564   00001C                     sprintf@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x1B
   568   00001C                     	ds	2
   569   00001E                     sprintf@fmt:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x1D
   573   00001E                     	ds	3
   574   000021                     sprintf@ret:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578   000021                     	ds	2
   579   000023                     sprintf@ap:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x22
   583   000023                     	ds	1
   584   000024                     sprintf@f:
   585                           	callstack 0
   586                           
   587                           ; 12 bytes @ 0x23
   588   000024                     	ds	12
   589   000030                     sendIntSerial4@integer:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2F
   593   000030                     	ds	2
   594   000032                     sendIntSerial4@string:
   595                           	callstack 0
   596                           
   597                           ; 17 bytes @ 0x31
   598   000032                     	ds	17
   599   000043                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x42
   602   000043                     	ds	2
   603   000045                     main@measured_colour:
   604                           	callstack 0
   605                           
   606                           ; 8 bytes @ 0x44
   607   000045                     	ds	8
   608   00004D                     main@motorL:
   609                           	callstack 0
   610                           
   611                           ; 9 bytes @ 0x4C
   612   00004D                     	ds	9
   613   000056                     main@motorR:
   614                           	callstack 0
   615                           
   616                           ; 9 bytes @ 0x55
   617   000056                     	ds	9
   618                           
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 26 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  motorR          9   85[COMRAM] struct DC_motor
   629 ;;  motorL          9   76[COMRAM] struct DC_motor
   630 ;;  measured_col    8   68[COMRAM] struct RGBC_val
   631 ;;  PWMcycle        2    0        unsigned int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;Total ram usage:       28 bytes
   646 ;; Hardware stack levels required when called: 7
   647 ;; This function calls:
   648 ;;		_Timer0_init
   649 ;;		_buggy_lights_init
   650 ;;		_color_click_init
   651 ;;		_getRGBCval
   652 ;;		_initDCmotorsPWM
   653 ;;		_initUSART4
   654 ;;		_sendIntSerial4
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661   001002                     __ptext0:
   662                           	callstack 0
   663   001002                     _main:
   664                           	callstack 24
   665   001002                     
   666                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   667   001002  0E00               	movlw	0
   668   001004  6E4D               	movwf	main@motorL^0,c
   669                           
   670                           ;main.c: 33:     motorL.direction = 1;
   671   001006  0E01               	movlw	1
   672   001008  6E4E               	movwf	(main@motorL+1)^0,c
   673                           
   674                           ;main.c: 34:     motorL.brakemode = 1;
   675   00100A  0E01               	movlw	1
   676   00100C  6E4F               	movwf	(main@motorL+2)^0,c
   677   00100E                     
   678                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   679   00100E  0E00               	movlw	0
   680   001010  6E51               	movwf	(main@motorL+4)^0,c
   681   001012  0E63               	movlw	99
   682   001014  6E50               	movwf	(main@motorL+3)^0,c
   683   001016                     
   684                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   685   001016  0EAA               	movlw	170
   686   001018  6E52               	movwf	(main@motorL+5)^0,c
   687   00101A  0E0F               	movlw	15
   688   00101C  6E53               	movwf	(main@motorL+6)^0,c
   689   00101E                     
   690                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   691   00101E  0EA6               	movlw	166
   692   001020  6E54               	movwf	(main@motorL+7)^0,c
   693   001022  0E0F               	movlw	15
   694   001024  6E55               	movwf	(main@motorL+8)^0,c
   695                           
   696                           ;main.c: 39:     motorR.power = 0;
   697   001026  0E00               	movlw	0
   698   001028  6E56               	movwf	main@motorR^0,c
   699                           
   700                           ;main.c: 40:     motorR.direction = 1;
   701   00102A  0E01               	movlw	1
   702   00102C  6E57               	movwf	(main@motorR+1)^0,c
   703                           
   704                           ;main.c: 41:     motorR.brakemode = 1;
   705   00102E  0E01               	movlw	1
   706   001030  6E58               	movwf	(main@motorR+2)^0,c
   707   001032                     
   708                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   709   001032  0E00               	movlw	0
   710   001034  6E5A               	movwf	(main@motorR+4)^0,c
   711   001036  0E63               	movlw	99
   712   001038  6E59               	movwf	(main@motorR+3)^0,c
   713   00103A                     
   714                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   715   00103A  0E25               	movlw	37
   716   00103C  6E5B               	movwf	(main@motorR+5)^0,c
   717   00103E  0E0F               	movlw	15
   718   001040  6E5C               	movwf	(main@motorR+6)^0,c
   719   001042                     
   720                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   721   001042  0E21               	movlw	33
   722   001044  6E5D               	movwf	(main@motorR+7)^0,c
   723   001046  0E0F               	movlw	15
   724   001048  6E5E               	movwf	(main@motorR+8)^0,c
   725   00104A                     
   726                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   727   00104A  0E00               	movlw	0
   728   00104C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   729   00104E  0E63               	movlw	99
   730   001050  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   731   001052  EC7E  F009         	call	_initDCmotorsPWM	;wreg free
   732                           
   733                           ;main.c: 47:     buggy_lights_init();
   734   001056  EC89  F00B         	call	_buggy_lights_init	;wreg free
   735   00105A                     
   736                           ;main.c: 48:     color_click_init();
   737   00105A  EC6F  F00B         	call	_color_click_init	;wreg free
   738   00105E                     
   739                           ;main.c: 49:     initUSART4();
   740   00105E  EC11  F00C         	call	_initUSART4	;wreg free
   741   001062                     
   742                           ;main.c: 50:     Timer0_init();
   743   001062  ECDE  F00B         	call	_Timer0_init	;wreg free
   744   001066                     
   745                           ;main.c: 54:         TRISDbits.TRISD7 = 0;
   746   001066  9E84               	bcf	132,7,c	;volatile
   747   001068                     
   748                           ;main.c: 55:         TRISHbits.TRISH3 = 0;
   749   001068  9688               	bcf	136,3,c	;volatile
   750   00106A                     
   751                           ;main.c: 57:         LATDbits.LATD7 = 1;
   752   00106A  8E7C               	bsf	124,7,c	;volatile
   753   00106C                     
   754                           ;main.c: 58:         LATHbits.LATH3 = 1;
   755   00106C  8680               	bsf	128,3,c	;volatile
   756   00106E                     
   757                           ;main.c: 62:         TRISFbits.TRISF2 = 1;
   758   00106E  8486               	bsf	134,2,c	;volatile
   759   001070                     
   760                           ;main.c: 63:         TRISFbits.TRISF3 = 1;
   761   001070  8686               	bsf	134,3,c	;volatile
   762   001072                     
   763                           ;main.c: 65:         ANSELFbits.ANSELF2 = 0;
   764   001072  010E               	movlb	14	; () banked
   765   001074  95B4               	bcf	180,2,b	;volatile
   766   001076                     
   767                           ; BSR set to: 14
   768                           ;main.c: 66:         ANSELFbits.ANSELF3 = 0;
   769   001076  97B4               	bcf	180,3,b	;volatile
   770   001078                     l2851:
   771                           
   772                           ;main.c: 85:         getRGBCval(&measured_colour);
   773   001078  0E45               	movlw	low main@measured_colour
   774   00107A  6E0C               	movwf	getRGBCval@p^0,c
   775   00107C  EC22  F00A         	call	_getRGBCval	;wreg free
   776   001080                     
   777                           ;main.c: 86:         sendIntSerial4((int)measured_colour.C);
   778   001080  C04B  F030         	movff	main@measured_colour+6,sendIntSerial4@integer
   779   001084  C04C  F031         	movff	main@measured_colour+7,sendIntSerial4@integer+1
   780   001088  ECF0  F00B         	call	_sendIntSerial4	;wreg free
   781   00108C                     
   782                           ;main.c: 87:         LATDbits.LATD7 = !LATDbits.LATD7;
   783   00108C  AE7C               	btfss	124,7,c	;volatile
   784   00108E  EF4B  F008         	goto	u1541
   785   001092  EF4F  F008         	goto	u1540
   786   001096                     u1541:
   787   001096  6A43               	clrf	??_main^0,c
   788   001098  2A43               	incf	??_main^0,f,c
   789   00109A  EF50  F008         	goto	u1558
   790   00109E                     u1540:
   791   00109E  6A43               	clrf	??_main^0,c
   792   0010A0                     u1558:
   793   0010A0  3243               	rrcf	??_main^0,f,c
   794   0010A2  3243               	rrcf	??_main^0,f,c
   795   0010A4  507C               	movf	124,w,c	;volatile
   796   0010A6  1843               	xorwf	??_main^0,w,c
   797   0010A8  0B7F               	andlw	-129
   798   0010AA  1843               	xorwf	??_main^0,w,c
   799   0010AC  6E7C               	movwf	124,c	;volatile
   800   0010AE                     
   801                           ;main.c: 88:         _delay((unsigned long)((200)*(64000000/4000.0)));
   802   0010AE  0E11               	movlw	17
   803   0010B0  6E44               	movwf	(??_main+1)^0,c
   804   0010B2  0E3C               	movlw	60
   805   0010B4  6E43               	movwf	??_main^0,c
   806   0010B6  0ECB               	movlw	203
   807   0010B8                     u2087:
   808   0010B8  2EE8               	decfsz	wreg,f,c
   809   0010BA  D7FE               	bra	u2087
   810   0010BC  2E43               	decfsz	??_main^0,f,c
   811   0010BE  D7FC               	bra	u2087
   812   0010C0  2E44               	decfsz	(??_main+1)^0,f,c
   813   0010C2  D7FA               	bra	u2087
   814   0010C4  0000               	nop	
   815   0010C6  EF3C  F008         	goto	l2851
   816   0010CA  EF1C  F000         	goto	start
   817   0010CE                     __end_of_main:
   818                           	callstack 0
   819                           
   820 ;; *************** function _sendIntSerial4 *****************
   821 ;; Defined at:
   822 ;;		line 43 in file "serial.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  integer         2   47[COMRAM] int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  string         17   49[COMRAM] unsigned char [17]
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   837 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   839 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   840 ;;Total ram usage:       19 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 6
   843 ;; This function calls:
   844 ;;		_sendStringSerial4
   845 ;;		_sprintf
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text1
   852   0017E0                     __ptext1:
   853                           	callstack 0
   854   0017E0                     _sendIntSerial4:
   855                           	callstack 24
   856   0017E0                     
   857                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   858   0017E0  0E32               	movlw	low sendIntSerial4@string
   859   0017E2  6E1C               	movwf	sprintf@s^0,c
   860   0017E4  6A1D               	clrf	(sprintf@s+1)^0,c
   861   0017E6  0E01               	movlw	low STR_1
   862   0017E8  6E1E               	movwf	sprintf@fmt^0,c
   863   0017EA  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   864   0017EE  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   865   0017F2  ECED  F00A         	call	_sprintf	;wreg free
   866   0017F6                     
   867                           ;serial.c: 46:     sendStringSerial4(string);
   868   0017F6  0E32               	movlw	low sendIntSerial4@string
   869   0017F8  6E02               	movwf	sendStringSerial4@string^0,c
   870   0017FA  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   871   0017FC  ECC6  F009         	call	_sendStringSerial4	;wreg free
   872   001800  0012               	return		;funcret
   873   001802                     __end_of_sendIntSerial4:
   874                           	callstack 0
   875                           
   876 ;; *************** function _sprintf *****************
   877 ;; Defined at:
   878 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  s               2   27[COMRAM] PTR unsigned char 
   881 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   882 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   883 ;;		 -> STR_3(4), STR_1(5), 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  f              12   35[COMRAM] struct _IO_FILE
   886 ;;  ret             2   32[COMRAM] int 
   887 ;;  ap              1   34[COMRAM] PTR void [1]
   888 ;;		 -> ?_sprintf(2), 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2   27[COMRAM] int 
   891 ;; Registers used:
   892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   898 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   899 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;Total ram usage:       20 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 5
   905 ;; This function calls:
   906 ;;		_vfprintf
   907 ;; This function is called by:
   908 ;;		_sendIntSerial4
   909 ;;		_sendArrayCharSerial4
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text2
   914   0015DA                     __ptext2:
   915                           	callstack 0
   916   0015DA                     _sprintf:
   917                           	callstack 24
   918   0015DA  0E1F               	movlw	low (?_sprintf+3)
   919   0015DC  6E23               	movwf	sprintf@ap^0,c
   920   0015DE  C01C  F024         	movff	sprintf@s,sprintf@f
   921   0015E2  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
   922   0015E6  0E00               	movlw	0
   923   0015E8  6E28               	movwf	(sprintf@f+4)^0,c
   924   0015EA  0E00               	movlw	0
   925   0015EC  6E27               	movwf	(sprintf@f+3)^0,c
   926   0015EE  0E00               	movlw	0
   927   0015F0  6E2F               	movwf	(sprintf@f+11)^0,c
   928   0015F2  0E00               	movlw	0
   929   0015F4  6E2E               	movwf	(sprintf@f+10)^0,c
   930   0015F6  0E24               	movlw	low sprintf@f
   931   0015F8  6E18               	movwf	vfprintf@fp^0,c
   932   0015FA  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
   933   0015FE  0E23               	movlw	low sprintf@ap
   934   001600  6E1A               	movwf	vfprintf@ap^0,c
   935   001602  ECF7  F009         	call	_vfprintf	;wreg free
   936   001606  C018  F021         	movff	?_vfprintf,sprintf@ret
   937   00160A  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
   938   00160E  5027               	movf	(sprintf@f+3)^0,w,c
   939   001610  241C               	addwf	sprintf@s^0,w,c
   940   001612  6ED9               	movwf	fsr2l,c
   941   001614  5028               	movf	(sprintf@f+4)^0,w,c
   942   001616  201D               	addwfc	(sprintf@s+1)^0,w,c
   943   001618  6EDA               	movwf	fsr2h,c
   944   00161A  6ADF               	clrf	indf2,c
   945   00161C  C021  F01C         	movff	sprintf@ret,?_sprintf
   946   001620  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
   947   001624  0012               	return		;funcret
   948   001626                     __end_of_sprintf:
   949                           	callstack 0
   950                           
   951 ;; *************** function _vfprintf *****************
   952 ;; Defined at:
   953 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
   956 ;;		 -> sprintf@f(12), 
   957 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
   958 ;;		 -> STR_3(4), STR_1(5), 
   959 ;;  ap              1   25[COMRAM] PTR PTR void 
   960 ;;		 -> sprintf@ap(1), 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
   963 ;;		 -> STR_3(4), STR_1(5), 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2   23[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   973 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   977 ;;Total ram usage:        4 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 4
   980 ;; This function calls:
   981 ;;		_vfpfcnvrt
   982 ;; This function is called by:
   983 ;;		_sprintf
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text3
   988   0013EE                     __ptext3:
   989                           	callstack 0
   990   0013EE                     _vfprintf:
   991                           	callstack 24
   992   0013EE                     
   993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   994   0013EE  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
   995   0013F2                     
   996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
   997   0013F2  0E00               	movlw	0
   998   0013F4  0100               	movlb	0	; () banked
   999   0013F6  6F95               	movwf	(_nout+1)& (0+255),b
  1000   0013F8  0E00               	movlw	0
  1001   0013FA  6F94               	movwf	_nout& (0+255),b
  1002                           
  1003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1004   0013FC  EF0D  F00A         	goto	l2553
  1005   001400                     l2551:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1009   001400  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1010   001404  0E1B               	movlw	low vfprintf@cfmt
  1011   001406  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1012   001408  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1013   00140C  EC06  F007         	call	_vfpfcnvrt	;wreg free
  1014   001410  500B               	movf	?_vfpfcnvrt^0,w,c
  1015   001412  0100               	movlb	0	; () banked
  1016   001414  2794               	addwf	_nout& (0+255),f,b
  1017   001416  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1018   001418  2395               	addwfc	(_nout+1)& (0+255),f,b
  1019   00141A                     l2553:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1023   00141A  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1024   00141E                     	if	1	;There is more than 1 active tblptr byte
  1025   00141E  0E0E               	movlw	high __smallconst
  1026   001420  6EF7               	movwf	tblptrh,c
  1027   001422                     	endif
  1028   001422                     	if	0	;tblptru may be non-zero
  1029   001422                     	endif
  1030   001422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1031   001422  0E00               	movlw	low (__smallconst shr (0+16))
  1032   001424  6EF8               	movwf	tblptru,c
  1033   001426                     	endif
  1034   001426  0008               	tblrd		*
  1035   001428  50F5               	movf	tablat,w,c
  1036   00142A  0900               	iorlw	0
  1037   00142C  A4D8               	btfss	status,2,c
  1038   00142E  EF1B  F00A         	goto	u1431
  1039   001432  EF1D  F00A         	goto	u1430
  1040   001436                     u1431:
  1041   001436  EF00  F00A         	goto	l2551
  1042   00143A                     u1430:
  1043   00143A                     
  1044                           ; BSR set to: 0
  1045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1046   00143A  C094  F018         	movff	_nout,?_vfprintf
  1047   00143E  C095  F019         	movff	_nout+1,?_vfprintf+1
  1048   001442                     
  1049                           ; BSR set to: 0
  1050   001442  0012               	return		;funcret
  1051   001444                     __end_of_vfprintf:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _vfpfcnvrt *****************
  1055 ;; Defined at:
  1056 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1059 ;;		 -> sprintf@f(12), 
  1060 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1061 ;;		 -> vfprintf@cfmt(1), 
  1062 ;;  ap              1   12[COMRAM] PTR PTR void 
  1063 ;;		 -> sprintf@ap(1), 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  convarg         4   18[COMRAM] struct .
  1066 ;;  cnt             2   15[COMRAM] int 
  1067 ;;  c               1   22[COMRAM] unsigned char 
  1068 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1069 ;;		 -> STR_3(4), STR_1(5), 
  1070 ;;  done            1   14[COMRAM] _Bool 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2   10[COMRAM] int 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1080 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;Total ram usage:       13 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 3
  1087 ;; This function calls:
  1088 ;;		___awdiv
  1089 ;;		___awmod
  1090 ;;		_abs
  1091 ;;		_fputc
  1092 ;; This function is called by:
  1093 ;;		_vfprintf
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text4
  1098   000E0C                     __ptext4:
  1099                           	callstack 0
  1100   000E0C                     _vfpfcnvrt:
  1101                           	callstack 24
  1102   000E0C                     
  1103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1104   000E0C  0E00               	movlw	0
  1105   000E0E  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1106   000E10  0E00               	movlw	0
  1107   000E12  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1108   000E14                     
  1109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1110   000E14  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1111   000E16  6ED9               	movwf	fsr2l,c
  1112   000E18  6ADA               	clrf	fsr2h,c
  1113   000E1A  CFDF FFF6          	movff	indf2,tblptrl
  1114   000E1E                     	if	1	;There is more than 1 active tblptr byte
  1115   000E1E  0E0E               	movlw	high __smallconst
  1116   000E20  6EF7               	movwf	tblptrh,c
  1117   000E22                     	endif
  1118   000E22                     	if	0	;tblptru may be non-zero
  1119   000E22                     	endif
  1120   000E22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1121   000E22  0E00               	movlw	low (__smallconst shr (0+16))
  1122   000E24  6EF8               	movwf	tblptru,c
  1123   000E26                     	endif
  1124   000E26  0008               	tblrd		*
  1125   000E28  50F5               	movf	tablat,w,c
  1126   000E2A  0A25               	xorlw	37
  1127   000E2C  A4D8               	btfss	status,2,c
  1128   000E2E  EF1B  F007         	goto	u1331
  1129   000E32  EF1D  F007         	goto	u1330
  1130   000E36                     u1331:
  1131   000E36  EFE7  F007         	goto	l2497
  1132   000E3A                     u1330:
  1133   000E3A                     
  1134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1135   000E3A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1136   000E3C  6ED9               	movwf	fsr2l,c
  1137   000E3E  6ADA               	clrf	fsr2h,c
  1138   000E40  2ADF               	incf	indf2,f,c
  1139   000E42                     
  1140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1141   000E42  0E00               	movlw	0
  1142   000E44  0100               	movlb	0	; () banked
  1143   000E46  6F97               	movwf	(_width+1)& (0+255),b
  1144   000E48  0E00               	movlw	0
  1145   000E4A  6F96               	movwf	_width& (0+255),b
  1146   000E4C  C096  F09A         	movff	_width,_flags
  1147   000E50                     
  1148                           ; BSR set to: 0
  1149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1150   000E50  6998               	setf	_prec& (0+255),b
  1151   000E52  6999               	setf	(_prec+1)& (0+255),b
  1152   000E54                     
  1153                           ; BSR set to: 0
  1154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1155   000E54  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1156   000E56  6ED9               	movwf	fsr2l,c
  1157   000E58  6ADA               	clrf	fsr2h,c
  1158   000E5A  50DF               	movf	indf2,w,c
  1159   000E5C  6E12               	movwf	vfpfcnvrt@cp^0,c
  1160   000E5E                     
  1161                           ; BSR set to: 0
  1162                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1163   000E5E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1164   000E62                     	if	1	;There is more than 1 active tblptr byte
  1165   000E62  0E0E               	movlw	high __smallconst
  1166   000E64  6EF7               	movwf	tblptrh,c
  1167   000E66                     	endif
  1168   000E66                     	if	0	;tblptru may be non-zero
  1169   000E66                     	endif
  1170   000E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1171   000E66  0E00               	movlw	low (__smallconst shr (0+16))
  1172   000E68  6EF8               	movwf	tblptru,c
  1173   000E6A                     	endif
  1174   000E6A  0008               	tblrd		*
  1175   000E6C  50F5               	movf	tablat,w,c
  1176   000E6E  0A64               	xorlw	100
  1177   000E70  B4D8               	btfsc	status,2,c
  1178   000E72  EF3D  F007         	goto	u1341
  1179   000E76  EF3F  F007         	goto	u1340
  1180   000E7A                     u1341:
  1181   000E7A  EF4F  F007         	goto	l2461
  1182   000E7E                     u1340:
  1183   000E7E                     
  1184                           ; BSR set to: 0
  1185   000E7E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1186   000E82                     	if	1	;There is more than 1 active tblptr byte
  1187   000E82  0E0E               	movlw	high __smallconst
  1188   000E84  6EF7               	movwf	tblptrh,c
  1189   000E86                     	endif
  1190   000E86                     	if	0	;tblptru may be non-zero
  1191   000E86                     	endif
  1192   000E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1193   000E86  0E00               	movlw	low (__smallconst shr (0+16))
  1194   000E88  6EF8               	movwf	tblptru,c
  1195   000E8A                     	endif
  1196   000E8A  0008               	tblrd		*
  1197   000E8C  50F5               	movf	tablat,w,c
  1198   000E8E  0A69               	xorlw	105
  1199   000E90  A4D8               	btfss	status,2,c
  1200   000E92  EF4D  F007         	goto	u1351
  1201   000E96  EF4F  F007         	goto	u1350
  1202   000E9A                     u1351:
  1203   000E9A  EFDD  F007         	goto	l2491
  1204   000E9E                     u1350:
  1205   000E9E                     l2461:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1209   000E9E  500D               	movf	vfpfcnvrt@ap^0,w,c
  1210   000EA0  6ED9               	movwf	fsr2l,c
  1211   000EA2  6ADA               	clrf	fsr2h,c
  1212   000EA4  0E02               	movlw	2
  1213   000EA6  26DF               	addwf	indf2,f,c
  1214   000EA8  5CDF               	subwf	indf2,w,c
  1215   000EAA  6ED9               	movwf	fsr2l,c
  1216   000EAC  6ADA               	clrf	fsr2h,c
  1217   000EAE  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1218   000EB2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1219   000EB6                     
  1220                           ; BSR set to: 0
  1221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1222   000EB6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1223   000EB8  6ED9               	movwf	fsr2l,c
  1224   000EBA  6ADA               	clrf	fsr2h,c
  1225   000EBC  2812               	incf	vfpfcnvrt@cp^0,w,c
  1226   000EBE  6EDF               	movwf	indf2,c
  1227   000EC0                     
  1228                           ; BSR set to: 0
  1229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1230   000EC0  0E20               	movlw	32
  1231   000EC2  6E17               	movwf	vfpfcnvrt@c^0,c
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1234   000EC4  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1235   000EC6  EF67  F007         	goto	u1361
  1236   000ECA  EF6A  F007         	goto	u1360
  1237   000ECE                     u1361:
  1238   000ECE  0E01               	movlw	1
  1239   000ED0  EF6B  F007         	goto	u1370
  1240   000ED4                     u1360:
  1241   000ED4  0E00               	movlw	0
  1242   000ED6                     u1370:
  1243   000ED6  6E0F               	movwf	vfpfcnvrt@done^0,c
  1244   000ED8                     l2467:
  1245                           
  1246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1247   000ED8  0617               	decf	vfpfcnvrt@c^0,f,c
  1248   000EDA  5017               	movf	vfpfcnvrt@c^0,w,c
  1249   000EDC  0F60               	addlw	low _dbuf
  1250   000EDE  6ED9               	movwf	fsr2l,c
  1251   000EE0  6ADA               	clrf	fsr2h,c
  1252   000EE2  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1253   000EE6  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1254   000EEA  0E00               	movlw	0
  1255   000EEC  6E04               	movwf	(___awmod@divisor+1)^0,c
  1256   000EEE  0E0A               	movlw	10
  1257   000EF0  6E03               	movwf	___awmod@divisor^0,c
  1258   000EF2  EC26  F009         	call	___awmod	;wreg free
  1259   000EF6  C001  F007         	movff	?___awmod,abs@a
  1260   000EFA  C002  F008         	movff	?___awmod+1,abs@a+1
  1261   000EFE  EC55  F00B         	call	_abs	;wreg free
  1262   000F02  5007               	movf	?_abs^0,w,c
  1263   000F04  0F30               	addlw	48
  1264   000F06  6EDF               	movwf	indf2,c
  1265   000F08                     
  1266                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1267   000F08  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1268   000F0C  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1269   000F10  0E00               	movlw	0
  1270   000F12  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1271   000F14  0E0A               	movlw	10
  1272   000F16  6E03               	movwf	___awdiv@divisor^0,c
  1273   000F18  EC67  F008         	call	___awdiv	;wreg free
  1274   000F1C  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1275   000F20  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1276   000F24                     
  1277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1278   000F24  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1279   000F26  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1280   000F28                     
  1281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1282   000F28  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1283   000F2A  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1284   000F2C  B4D8               	btfsc	status,2,c
  1285   000F2E  EF9B  F007         	goto	u1381
  1286   000F32  EF9D  F007         	goto	u1380
  1287   000F36                     u1381:
  1288   000F36  EFA5  F007         	goto	l2477
  1289   000F3A                     u1380:
  1290   000F3A  5017               	movf	vfpfcnvrt@c^0,w,c
  1291   000F3C  A4D8               	btfss	status,2,c
  1292   000F3E  EFA3  F007         	goto	u1391
  1293   000F42  EFA5  F007         	goto	u1390
  1294   000F46                     u1391:
  1295   000F46  EF6C  F007         	goto	l2467
  1296   000F4A                     u1390:
  1297   000F4A                     l2477:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1300   000F4A  5017               	movf	vfpfcnvrt@c^0,w,c
  1301   000F4C  B4D8               	btfsc	status,2,c
  1302   000F4E  EFAB  F007         	goto	u1401
  1303   000F52  EFAD  F007         	goto	u1400
  1304   000F56                     u1401:
  1305   000F56  EFCE  F007         	goto	l2489
  1306   000F5A                     u1400:
  1307   000F5A  500F               	movf	vfpfcnvrt@done^0,w,c
  1308   000F5C  B4D8               	btfsc	status,2,c
  1309   000F5E  EFB3  F007         	goto	u1411
  1310   000F62  EFB5  F007         	goto	u1410
  1311   000F66                     u1411:
  1312   000F66  EFCE  F007         	goto	l2489
  1313   000F6A                     u1410:
  1314   000F6A                     
  1315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1316   000F6A  0617               	decf	vfpfcnvrt@c^0,f,c
  1317   000F6C  5017               	movf	vfpfcnvrt@c^0,w,c
  1318   000F6E  0F60               	addlw	low _dbuf
  1319   000F70  6ED9               	movwf	fsr2l,c
  1320   000F72  6ADA               	clrf	fsr2h,c
  1321   000F74  0E2D               	movlw	45
  1322   000F76  6EDF               	movwf	indf2,c
  1323   000F78                     
  1324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1325   000F78  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1326   000F7A  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1327   000F7C  EFCE  F007         	goto	l2489
  1328   000F80                     l2485:
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1331   000F80  5017               	movf	vfpfcnvrt@c^0,w,c
  1332   000F82  0F60               	addlw	low _dbuf
  1333   000F84  6ED9               	movwf	fsr2l,c
  1334   000F86  6ADA               	clrf	fsr2h,c
  1335   000F88  50DF               	movf	indf2,w,c
  1336   000F8A  6E0E               	movwf	??_vfpfcnvrt^0,c
  1337   000F8C  500E               	movf	??_vfpfcnvrt^0,w,c
  1338   000F8E  6E01               	movwf	fputc@c^0,c
  1339   000F90  6A02               	clrf	(fputc@c+1)^0,c
  1340   000F92  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1341   000F96  ECC9  F008         	call	_fputc	;wreg free
  1342   000F9A  2A17               	incf	vfpfcnvrt@c^0,f,c
  1343   000F9C                     l2489:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1346   000F9C  0E20               	movlw	32
  1347   000F9E  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1348   000FA0  A4D8               	btfss	status,2,c
  1349   000FA2  EFD5  F007         	goto	u1421
  1350   000FA6  EFD7  F007         	goto	u1420
  1351   000FAA                     u1421:
  1352   000FAA  EFC0  F007         	goto	l2485
  1353   000FAE                     u1420:
  1354   000FAE                     
  1355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1356   000FAE  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1357   000FB2  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1358   000FB6  EF00  F008         	goto	l1391
  1359   000FBA                     l2491:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1363   000FBA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1364   000FBC  6ED9               	movwf	fsr2l,c
  1365   000FBE  6ADA               	clrf	fsr2h,c
  1366   000FC0  2ADF               	incf	indf2,f,c
  1367   000FC2                     
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1370   000FC2  0E00               	movlw	0
  1371   000FC4  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1372   000FC6  0E00               	movlw	0
  1373   000FC8  6E0B               	movwf	?_vfpfcnvrt^0,c
  1374   000FCA  EF00  F008         	goto	l1391
  1375   000FCE                     l2497:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1378   000FCE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1379   000FD0  6ED9               	movwf	fsr2l,c
  1380   000FD2  6ADA               	clrf	fsr2h,c
  1381   000FD4  CFDF FFF6          	movff	indf2,tblptrl
  1382   000FD8                     	if	1	;There is more than 1 active tblptr byte
  1383   000FD8  0E0E               	movlw	high __smallconst
  1384   000FDA  6EF7               	movwf	tblptrh,c
  1385   000FDC                     	endif
  1386   000FDC                     	if	0	;tblptru may be non-zero
  1387   000FDC                     	endif
  1388   000FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1389   000FDC  0E00               	movlw	low (__smallconst shr (0+16))
  1390   000FDE  6EF8               	movwf	tblptru,c
  1391   000FE0                     	endif
  1392   000FE0  0008               	tblrd		*
  1393   000FE2  50F5               	movf	tablat,w,c
  1394   000FE4  6E01               	movwf	fputc@c^0,c
  1395   000FE6  6A02               	clrf	(fputc@c+1)^0,c
  1396   000FE8  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1397   000FEC  ECC9  F008         	call	_fputc	;wreg free
  1398   000FF0                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1400   000FF0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1401   000FF2  6ED9               	movwf	fsr2l,c
  1402   000FF4  6ADA               	clrf	fsr2h,c
  1403   000FF6  2ADF               	incf	indf2,f,c
  1404   000FF8                     
  1405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1406   000FF8  0E00               	movlw	0
  1407   000FFA  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1408   000FFC  0E01               	movlw	1
  1409   000FFE  6E0B               	movwf	?_vfpfcnvrt^0,c
  1410   001000                     l1391:
  1411   001000  0012               	return		;funcret
  1412   001002                     __end_of_vfpfcnvrt:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _fputc *****************
  1416 ;; Defined at:
  1417 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  c               2    0[COMRAM] int 
  1420 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1421 ;;		 -> sprintf@f(12), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    0[COMRAM] int 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1433 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1435 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;Total ram usage:        8 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 2
  1440 ;; This function calls:
  1441 ;;		_putch
  1442 ;; This function is called by:
  1443 ;;		_vfpfcnvrt
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text5
  1448   001192                     __ptext5:
  1449                           	callstack 0
  1450   001192                     _fputc:
  1451                           	callstack 24
  1452   001192  5003               	movf	fputc@fp^0,w,c
  1453   001194  B4D8               	btfsc	status,2,c
  1454   001196  EFCF  F008         	goto	u1121
  1455   00119A  EFD1  F008         	goto	u1120
  1456   00119E                     u1121:
  1457   00119E  EFD9  F008         	goto	l2345
  1458   0011A2                     u1120:
  1459   0011A2  5003               	movf	fputc@fp^0,w,c
  1460   0011A4  A4D8               	btfss	status,2,c
  1461   0011A6  EFD7  F008         	goto	u1131
  1462   0011AA  EFD9  F008         	goto	u1130
  1463   0011AE                     u1131:
  1464   0011AE  EFDE  F008         	goto	l2347
  1465   0011B2                     u1130:
  1466   0011B2                     l2345:
  1467   0011B2  5001               	movf	fputc@c^0,w,c
  1468   0011B4  EC46  F00C         	call	_putch
  1469   0011B8  EF25  F009         	goto	l1416
  1470   0011BC                     l2347:
  1471   0011BC  5003               	movf	fputc@fp^0,w,c
  1472   0011BE  6ED9               	movwf	fsr2l,c
  1473   0011C0  6ADA               	clrf	fsr2h,c
  1474   0011C2  0E0A               	movlw	10
  1475   0011C4  26D9               	addwf	fsr2l,f,c
  1476   0011C6  50DE               	movf	postinc2,w,c
  1477   0011C8  10DE               	iorwf	postinc2,w,c
  1478   0011CA  B4D8               	btfsc	status,2,c
  1479   0011CC  EFEA  F008         	goto	u1141
  1480   0011D0  EFEC  F008         	goto	u1140
  1481   0011D4                     u1141:
  1482   0011D4  EF05  F009         	goto	l2351
  1483   0011D8                     u1140:
  1484   0011D8  5003               	movf	fputc@fp^0,w,c
  1485   0011DA  6ED9               	movwf	fsr2l,c
  1486   0011DC  6ADA               	clrf	fsr2h,c
  1487   0011DE  0E0A               	movlw	10
  1488   0011E0  26D9               	addwf	fsr2l,f,c
  1489   0011E2  5003               	movf	fputc@fp^0,w,c
  1490   0011E4  6EE1               	movwf	fsr1l,c
  1491   0011E6  6AE2               	clrf	fsr1h,c
  1492   0011E8  0E03               	movlw	3
  1493   0011EA  26E1               	addwf	fsr1l,f,c
  1494   0011EC  50DE               	movf	postinc2,w,c
  1495   0011EE  5CE6               	subwf	postinc1,w,c
  1496   0011F0  50E6               	movf	postinc1,w,c
  1497   0011F2  0A80               	xorlw	128
  1498   0011F4  6E08               	movwf	(??_fputc+4)^0,c
  1499   0011F6  50DE               	movf	postinc2,w,c
  1500   0011F8  0A80               	xorlw	128
  1501   0011FA  5808               	subwfb	(??_fputc+4)^0,w,c
  1502   0011FC  B0D8               	btfsc	status,0,c
  1503   0011FE  EF03  F009         	goto	u1151
  1504   001202  EF05  F009         	goto	u1150
  1505   001206                     u1151:
  1506   001206  EF25  F009         	goto	l1416
  1507   00120A                     u1150:
  1508   00120A                     l2351:
  1509   00120A  5003               	movf	fputc@fp^0,w,c
  1510   00120C  6ED9               	movwf	fsr2l,c
  1511   00120E  6ADA               	clrf	fsr2h,c
  1512   001210  0E03               	movlw	3
  1513   001212  26D9               	addwf	fsr2l,f,c
  1514   001214  CFDE F004          	movff	postinc2,??_fputc
  1515   001218  CFDD F005          	movff	postdec2,??_fputc+1
  1516   00121C  5003               	movf	fputc@fp^0,w,c
  1517   00121E  6ED9               	movwf	fsr2l,c
  1518   001220  6ADA               	clrf	fsr2h,c
  1519   001222  CFDE F006          	movff	postinc2,??_fputc+2
  1520   001226  CFDD F007          	movff	postdec2,??_fputc+3
  1521   00122A  5004               	movf	??_fputc^0,w,c
  1522   00122C  2406               	addwf	(??_fputc+2)^0,w,c
  1523   00122E  6ED9               	movwf	fsr2l,c
  1524   001230  5005               	movf	(??_fputc+1)^0,w,c
  1525   001232  2007               	addwfc	(??_fputc+3)^0,w,c
  1526   001234  6EDA               	movwf	fsr2h,c
  1527   001236  C001  FFDF         	movff	fputc@c,indf2
  1528   00123A  5003               	movf	fputc@fp^0,w,c
  1529   00123C  6ED9               	movwf	fsr2l,c
  1530   00123E  6ADA               	clrf	fsr2h,c
  1531   001240  0E03               	movlw	3
  1532   001242  26D9               	addwf	fsr2l,f,c
  1533   001244  2ADE               	incf	postinc2,f,c
  1534   001246  0E00               	movlw	0
  1535   001248  22DD               	addwfc	postdec2,f,c
  1536   00124A                     l1416:
  1537   00124A  0012               	return		;funcret
  1538   00124C                     __end_of_fputc:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _putch *****************
  1542 ;; Defined at:
  1543 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  c               1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  c               1    0[COMRAM] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_fputc
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572   00188C                     __ptext6:
  1573                           	callstack 0
  1574   00188C                     _putch:
  1575                           	callstack 24
  1576   00188C  0012               	return		;funcret
  1577   00188E                     __end_of_putch:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _abs *****************
  1581 ;; Defined at:
  1582 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  a               2    6[COMRAM] int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  2    6[COMRAM] int 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;Total ram usage:        4 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_vfpfcnvrt
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text7
  1611   0016AA                     __ptext7:
  1612                           	callstack 0
  1613   0016AA                     _abs:
  1614                           	callstack 25
  1615   0016AA  BE08               	btfsc	(abs@a+1)^0,7,c
  1616   0016AC  EF5A  F00B         	goto	u1161
  1617   0016B0  EF5C  F00B         	goto	u1160
  1618   0016B4                     u1161:
  1619   0016B4  EF62  F00B         	goto	l1401
  1620   0016B8                     u1160:
  1621   0016B8  C007  F007         	movff	abs@a,?_abs
  1622   0016BC  C008  F008         	movff	abs@a+1,?_abs+1
  1623   0016C0  EF6E  F00B         	goto	l1404
  1624   0016C4                     l1401:
  1625   0016C4  C007  F009         	movff	abs@a,??_abs
  1626   0016C8  C008  F00A         	movff	abs@a+1,??_abs+1
  1627   0016CC  1E09               	comf	??_abs^0,f,c
  1628   0016CE  1E0A               	comf	(??_abs+1)^0,f,c
  1629   0016D0  4A09               	infsnz	??_abs^0,f,c
  1630   0016D2  2A0A               	incf	(??_abs+1)^0,f,c
  1631   0016D4  C009  F007         	movff	??_abs,?_abs
  1632   0016D8  C00A  F008         	movff	??_abs+1,?_abs+1
  1633   0016DC                     l1404:
  1634   0016DC  0012               	return		;funcret
  1635   0016DE                     __end_of_abs:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function ___awmod *****************
  1639 ;; Defined at:
  1640 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  dividend        2    0[COMRAM] int 
  1643 ;;  divisor         2    2[COMRAM] int 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  sign            1    5[COMRAM] unsigned char 
  1646 ;;  counter         1    4[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2    0[COMRAM] int 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;Total ram usage:        6 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_vfpfcnvrt
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text8
  1671   00124C                     __ptext8:
  1672                           	callstack 0
  1673   00124C                     ___awmod:
  1674                           	callstack 25
  1675   00124C  0E00               	movlw	0
  1676   00124E  6E06               	movwf	___awmod@sign^0,c
  1677   001250  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1678   001252  EF2F  F009         	goto	u1060
  1679   001256  EF2D  F009         	goto	u1061
  1680   00125A                     u1061:
  1681   00125A  EF35  F009         	goto	l2313
  1682   00125E                     u1060:
  1683   00125E  6C01               	negf	___awmod@dividend^0,c
  1684   001260  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1685   001262  B0D8               	btfsc	status,0,c
  1686   001264  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1687   001266  0E01               	movlw	1
  1688   001268  6E06               	movwf	___awmod@sign^0,c
  1689   00126A                     l2313:
  1690   00126A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1691   00126C  EF3C  F009         	goto	u1070
  1692   001270  EF3A  F009         	goto	u1071
  1693   001274                     u1071:
  1694   001274  EF40  F009         	goto	l2317
  1695   001278                     u1070:
  1696   001278  6C03               	negf	___awmod@divisor^0,c
  1697   00127A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1698   00127C  B0D8               	btfsc	status,0,c
  1699   00127E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1700   001280                     l2317:
  1701   001280  5003               	movf	___awmod@divisor^0,w,c
  1702   001282  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1703   001284  B4D8               	btfsc	status,2,c
  1704   001286  EF47  F009         	goto	u1081
  1705   00128A  EF49  F009         	goto	u1080
  1706   00128E                     u1081:
  1707   00128E  EF6D  F009         	goto	l2333
  1708   001292                     u1080:
  1709   001292  0E01               	movlw	1
  1710   001294  6E05               	movwf	___awmod@counter^0,c
  1711   001296  EF51  F009         	goto	l2323
  1712   00129A                     l2321:
  1713   00129A  90D8               	bcf	status,0,c
  1714   00129C  3603               	rlcf	___awmod@divisor^0,f,c
  1715   00129E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1716   0012A0  2A05               	incf	___awmod@counter^0,f,c
  1717   0012A2                     l2323:
  1718   0012A2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1719   0012A4  EF56  F009         	goto	u1091
  1720   0012A8  EF58  F009         	goto	u1090
  1721   0012AC                     u1091:
  1722   0012AC  EF4D  F009         	goto	l2321
  1723   0012B0                     u1090:
  1724   0012B0                     l2325:
  1725   0012B0  5003               	movf	___awmod@divisor^0,w,c
  1726   0012B2  5C01               	subwf	___awmod@dividend^0,w,c
  1727   0012B4  5004               	movf	(___awmod@divisor+1)^0,w,c
  1728   0012B6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1729   0012B8  A0D8               	btfss	status,0,c
  1730   0012BA  EF61  F009         	goto	u1101
  1731   0012BE  EF63  F009         	goto	u1100
  1732   0012C2                     u1101:
  1733   0012C2  EF67  F009         	goto	l2329
  1734   0012C6                     u1100:
  1735   0012C6  5003               	movf	___awmod@divisor^0,w,c
  1736   0012C8  5E01               	subwf	___awmod@dividend^0,f,c
  1737   0012CA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1738   0012CC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1739   0012CE                     l2329:
  1740   0012CE  90D8               	bcf	status,0,c
  1741   0012D0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1742   0012D2  3203               	rrcf	___awmod@divisor^0,f,c
  1743   0012D4  2E05               	decfsz	___awmod@counter^0,f,c
  1744   0012D6  EF58  F009         	goto	l2325
  1745   0012DA                     l2333:
  1746   0012DA  5006               	movf	___awmod@sign^0,w,c
  1747   0012DC  B4D8               	btfsc	status,2,c
  1748   0012DE  EF73  F009         	goto	u1111
  1749   0012E2  EF75  F009         	goto	u1110
  1750   0012E6                     u1111:
  1751   0012E6  EF79  F009         	goto	l2337
  1752   0012EA                     u1110:
  1753   0012EA  6C01               	negf	___awmod@dividend^0,c
  1754   0012EC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1755   0012EE  B0D8               	btfsc	status,0,c
  1756   0012F0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1757   0012F2                     l2337:
  1758   0012F2  C001  F001         	movff	___awmod@dividend,?___awmod
  1759   0012F6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1760   0012FA  0012               	return		;funcret
  1761   0012FC                     __end_of___awmod:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function ___awdiv *****************
  1765 ;; Defined at:
  1766 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  dividend        2    0[COMRAM] int 
  1769 ;;  divisor         2    2[COMRAM] int 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  quotient        2    6[COMRAM] int 
  1772 ;;  sign            1    5[COMRAM] unsigned char 
  1773 ;;  counter         1    4[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  2    0[COMRAM] int 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;Total ram usage:        8 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_vfpfcnvrt
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text9
  1798   0010CE                     __ptext9:
  1799                           	callstack 0
  1800   0010CE                     ___awdiv:
  1801                           	callstack 25
  1802   0010CE  0E00               	movlw	0
  1803   0010D0  6E06               	movwf	___awdiv@sign^0,c
  1804   0010D2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1805   0010D4  EF70  F008         	goto	u1000
  1806   0010D8  EF6E  F008         	goto	u1001
  1807   0010DC                     u1001:
  1808   0010DC  EF76  F008         	goto	l2269
  1809   0010E0                     u1000:
  1810   0010E0  6C03               	negf	___awdiv@divisor^0,c
  1811   0010E2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1812   0010E4  B0D8               	btfsc	status,0,c
  1813   0010E6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1814   0010E8  0E01               	movlw	1
  1815   0010EA  6E06               	movwf	___awdiv@sign^0,c
  1816   0010EC                     l2269:
  1817   0010EC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1818   0010EE  EF7D  F008         	goto	u1010
  1819   0010F2  EF7B  F008         	goto	u1011
  1820   0010F6                     u1011:
  1821   0010F6  EF83  F008         	goto	l2275
  1822   0010FA                     u1010:
  1823   0010FA  6C01               	negf	___awdiv@dividend^0,c
  1824   0010FC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1825   0010FE  B0D8               	btfsc	status,0,c
  1826   001100  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1827   001102  0E01               	movlw	1
  1828   001104  1A06               	xorwf	___awdiv@sign^0,f,c
  1829   001106                     l2275:
  1830   001106  0E00               	movlw	0
  1831   001108  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1832   00110A  0E00               	movlw	0
  1833   00110C  6E07               	movwf	___awdiv@quotient^0,c
  1834   00110E  5003               	movf	___awdiv@divisor^0,w,c
  1835   001110  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1836   001112  B4D8               	btfsc	status,2,c
  1837   001114  EF8E  F008         	goto	u1021
  1838   001118  EF90  F008         	goto	u1020
  1839   00111C                     u1021:
  1840   00111C  EFB8  F008         	goto	l2297
  1841   001120                     u1020:
  1842   001120  0E01               	movlw	1
  1843   001122  6E05               	movwf	___awdiv@counter^0,c
  1844   001124  EF98  F008         	goto	l2283
  1845   001128                     l2281:
  1846   001128  90D8               	bcf	status,0,c
  1847   00112A  3603               	rlcf	___awdiv@divisor^0,f,c
  1848   00112C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1849   00112E  2A05               	incf	___awdiv@counter^0,f,c
  1850   001130                     l2283:
  1851   001130  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1852   001132  EF9D  F008         	goto	u1031
  1853   001136  EF9F  F008         	goto	u1030
  1854   00113A                     u1031:
  1855   00113A  EF94  F008         	goto	l2281
  1856   00113E                     u1030:
  1857   00113E                     l2285:
  1858   00113E  90D8               	bcf	status,0,c
  1859   001140  3607               	rlcf	___awdiv@quotient^0,f,c
  1860   001142  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1861   001144  5003               	movf	___awdiv@divisor^0,w,c
  1862   001146  5C01               	subwf	___awdiv@dividend^0,w,c
  1863   001148  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1864   00114A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1865   00114C  A0D8               	btfss	status,0,c
  1866   00114E  EFAB  F008         	goto	u1041
  1867   001152  EFAD  F008         	goto	u1040
  1868   001156                     u1041:
  1869   001156  EFB2  F008         	goto	l2293
  1870   00115A                     u1040:
  1871   00115A  5003               	movf	___awdiv@divisor^0,w,c
  1872   00115C  5E01               	subwf	___awdiv@dividend^0,f,c
  1873   00115E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1874   001160  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1875   001162  8007               	bsf	___awdiv@quotient^0,0,c
  1876   001164                     l2293:
  1877   001164  90D8               	bcf	status,0,c
  1878   001166  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1879   001168  3203               	rrcf	___awdiv@divisor^0,f,c
  1880   00116A  2E05               	decfsz	___awdiv@counter^0,f,c
  1881   00116C  EF9F  F008         	goto	l2285
  1882   001170                     l2297:
  1883   001170  5006               	movf	___awdiv@sign^0,w,c
  1884   001172  B4D8               	btfsc	status,2,c
  1885   001174  EFBE  F008         	goto	u1051
  1886   001178  EFC0  F008         	goto	u1050
  1887   00117C                     u1051:
  1888   00117C  EFC4  F008         	goto	l2301
  1889   001180                     u1050:
  1890   001180  6C07               	negf	___awdiv@quotient^0,c
  1891   001182  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1892   001184  B0D8               	btfsc	status,0,c
  1893   001186  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1894   001188                     l2301:
  1895   001188  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1896   00118C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1897   001190  0012               	return		;funcret
  1898   001192                     __end_of___awdiv:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _sendStringSerial4 *****************
  1902 ;; Defined at:
  1903 ;;		line 35 in file "serial.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  string          2    1[COMRAM] PTR unsigned char 
  1906 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 2
  1925 ;; This function calls:
  1926 ;;		_sendCharSerial4
  1927 ;; This function is called by:
  1928 ;;		_sendIntSerial4
  1929 ;;		_sendArrayCharSerial4
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text10
  1934   00138C                     __ptext10:
  1935                           	callstack 0
  1936   00138C                     _sendStringSerial4:
  1937                           	callstack 27
  1938   00138C                     
  1939                           ;serial.c: 37:     while(*string != 0){
  1940   00138C  EFDD  F009         	goto	l2587
  1941   001390                     l2583:
  1942                           
  1943                           ;serial.c: 38:   sendCharSerial4(*string++);
  1944   001390  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1945   001394  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1946   001398  0E00               	movlw	low (__smallconst shr (0+16))
  1947   00139A  6EF8               	movwf	tblptru,c
  1948   00139C  0E0D               	movlw	(high __ramtop+-1)
  1949   00139E  64F7               	cpfsgt	tblptrh,c
  1950   0013A0  D003               	bra	u1447
  1951   0013A2  0008               	tblrd		*
  1952   0013A4  50F5               	movf	tablat,w,c
  1953   0013A6  D005               	bra	u1440
  1954   0013A8                     u1447:
  1955   0013A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1956   0013AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1957   0013B0  50EF               	movf	indf0,w,c
  1958   0013B2                     u1440:
  1959   0013B2  EC20  F00C         	call	_sendCharSerial4
  1960   0013B6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1961   0013B8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1962   0013BA                     l2587:
  1963                           
  1964                           ;serial.c: 37:     while(*string != 0){
  1965   0013BA  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1966   0013BE  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1967   0013C2  0E00               	movlw	low (__smallconst shr (0+16))
  1968   0013C4  6EF8               	movwf	tblptru,c
  1969   0013C6  0E0D               	movlw	(high __ramtop+-1)
  1970   0013C8  64F7               	cpfsgt	tblptrh,c
  1971   0013CA  D003               	bra	u1457
  1972   0013CC  0008               	tblrd		*
  1973   0013CE  50F5               	movf	tablat,w,c
  1974   0013D0  D005               	bra	u1450
  1975   0013D2                     u1457:
  1976   0013D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1977   0013D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1978   0013DA  50EF               	movf	indf0,w,c
  1979   0013DC                     u1450:
  1980   0013DC  0900               	iorlw	0
  1981   0013DE  A4D8               	btfss	status,2,c
  1982   0013E0  EFF4  F009         	goto	u1461
  1983   0013E4  EFF6  F009         	goto	u1460
  1984   0013E8                     u1461:
  1985   0013E8  EFC8  F009         	goto	l2583
  1986   0013EC                     u1460:
  1987   0013EC  0012               	return		;funcret
  1988   0013EE                     __end_of_sendStringSerial4:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _sendCharSerial4 *****************
  1992 ;; Defined at:
  1993 ;;		line 29 in file "serial.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  charToSend      1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  charToSend      1    0[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_sendStringSerial4
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text11
  2022   001840                     __ptext11:
  2023                           	callstack 0
  2024   001840                     _sendCharSerial4:
  2025                           	callstack 27
  2026                           
  2027                           ;incstack = 0
  2028                           ;sendCharSerial4@charToSend stored from wreg
  2029   001840  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2030   001842                     l412:
  2031   001842  010E               	movlb	14	; () banked
  2032   001844  A537               	btfss	55,2,b	;volatile
  2033   001846  EF27  F00C         	goto	u501
  2034   00184A  EF29  F00C         	goto	u500
  2035   00184E                     u501:
  2036   00184E  EF21  F00C         	goto	l412
  2037   001852                     u500:
  2038   001852                     
  2039                           ; BSR set to: 14
  2040                           ;serial.c: 31:     TX4REG = charToSend;
  2041   001852  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2042   001856                     
  2043                           ; BSR set to: 14
  2044   001856  0012               	return		;funcret
  2045   001858                     __end_of_sendCharSerial4:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _initUSART4 *****************
  2049 ;; Defined at:
  2050 ;;		line 5 in file "serial.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text12
  2079   001822                     __ptext12:
  2080                           	callstack 0
  2081   001822                     _initUSART4:
  2082                           	callstack 29
  2083   001822                     
  2084                           ;serial.c: 9:     RC0PPS = 0x12;
  2085   001822  0E12               	movlw	18
  2086   001824  010E               	movlb	14	; () banked
  2087   001826  6F62               	movwf	98,b	;volatile
  2088                           
  2089                           ;serial.c: 10:     RX4PPS = 0x11;
  2090   001828  0E11               	movlw	17
  2091   00182A  6F15               	movwf	21,b	;volatile
  2092   00182C                     
  2093                           ; BSR set to: 14
  2094                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2095   00182C  97E9               	bcf	233,3,b	;volatile
  2096   00182E                     
  2097                           ; BSR set to: 14
  2098                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2099   00182E  95E8               	bcf	232,2,b	;volatile
  2100                           
  2101                           ;serial.c: 14:     SP4BRGL = 51;
  2102   001830  0E33               	movlw	51
  2103   001832  6FE5               	movwf	229,b	;volatile
  2104                           
  2105                           ;serial.c: 15:     SP4BRGH = 0;
  2106   001834  0E00               	movlw	0
  2107   001836  6FE6               	movwf	230,b	;volatile
  2108   001838                     
  2109                           ; BSR set to: 14
  2110                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2111   001838  89E7               	bsf	231,4,b	;volatile
  2112   00183A                     
  2113                           ; BSR set to: 14
  2114                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2115   00183A  8BE8               	bsf	232,5,b	;volatile
  2116   00183C                     
  2117                           ; BSR set to: 14
  2118                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2119   00183C  8FE7               	bsf	231,7,b	;volatile
  2120   00183E                     
  2121                           ; BSR set to: 14
  2122   00183E  0012               	return		;funcret
  2123   001840                     __end_of_initUSART4:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _initDCmotorsPWM *****************
  2127 ;; Defined at:
  2128 ;;		line 5 in file "dc_motor.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;Total ram usage:        2 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text13
  2157   0012FC                     __ptext13:
  2158                           	callstack 0
  2159   0012FC                     _initDCmotorsPWM:
  2160                           	callstack 29
  2161   0012FC                     
  2162                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2163   0012FC  9485               	bcf	133,2,c	;volatile
  2164                           
  2165                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2166   0012FE  9885               	bcf	133,4,c	;volatile
  2167                           
  2168                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2169   001300  9E83               	bcf	131,7,c	;volatile
  2170                           
  2171                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2172   001302  9C87               	bcf	135,6,c	;volatile
  2173                           
  2174                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2175   001304  947D               	bcf	125,2,c	;volatile
  2176                           
  2177                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2178   001306  987D               	bcf	125,4,c	;volatile
  2179                           
  2180                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2181   001308  9E7B               	bcf	123,7,c	;volatile
  2182                           
  2183                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2184   00130A  9C7F               	bcf	127,6,c	;volatile
  2185   00130C                     
  2186                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2187   00130C  0E05               	movlw	5
  2188   00130E  010E               	movlb	14	; () banked
  2189   001310  6F74               	movwf	116,b	;volatile
  2190                           
  2191                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2192   001312  0E06               	movlw	6
  2193   001314  6F76               	movwf	118,b	;volatile
  2194                           
  2195                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2196   001316  0E07               	movlw	7
  2197   001318  6F69               	movwf	105,b	;volatile
  2198                           
  2199                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2200   00131A  0E08               	movlw	8
  2201   00131C  6F88               	movwf	136,b	;volatile
  2202                           
  2203                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2204   00131E  50BD               	movf	189,w,c	;volatile
  2205   001320  0B8F               	andlw	-113
  2206   001322  0940               	iorlw	64
  2207   001324  6EBD               	movwf	189,c	;volatile
  2208                           
  2209                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2210   001326  0EE0               	movlw	-32
  2211   001328  16BE               	andwf	190,f,c	;volatile
  2212                           
  2213                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2214   00132A  50BF               	movf	191,w,c	;volatile
  2215   00132C  0BF0               	andlw	-16
  2216   00132E  0901               	iorlw	1
  2217   001330  6EBF               	movwf	191,c	;volatile
  2218   001332                     
  2219                           ; BSR set to: 14
  2220                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2221   001332  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2222   001336                     
  2223                           ; BSR set to: 14
  2224                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2225   001336  8EBD               	bsf	189,7,c	;volatile
  2226                           
  2227                           ;dc_motor.c: 35:     CCPR1H=0;
  2228   001338  0E00               	movlw	0
  2229   00133A  6EAA               	movwf	170,c	;volatile
  2230                           
  2231                           ;dc_motor.c: 36:     CCPR2H=0;
  2232   00133C  0E00               	movlw	0
  2233   00133E  6EA6               	movwf	166,c	;volatile
  2234                           
  2235                           ;dc_motor.c: 37:     CCPR3H=0;
  2236   001340  0E00               	movlw	0
  2237   001342  010F               	movlb	15	; () banked
  2238   001344  6F25               	movwf	37,b	;volatile
  2239                           
  2240                           ;dc_motor.c: 38:     CCPR4H=0;
  2241   001346  0E00               	movlw	0
  2242   001348  6F21               	movwf	33,b	;volatile
  2243                           
  2244                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2245   00134A  0EFC               	movlw	-4
  2246   00134C  16AD               	andwf	173,f,c	;volatile
  2247                           
  2248                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2249   00134E  0EF3               	movlw	-13
  2250   001350  16AD               	andwf	173,f,c	;volatile
  2251                           
  2252                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2253   001352  0ECF               	movlw	-49
  2254   001354  16AD               	andwf	173,f,c	;volatile
  2255                           
  2256                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2257   001356  0E3F               	movlw	-193
  2258   001358  16AD               	andwf	173,f,c	;volatile
  2259   00135A                     
  2260                           ; BSR set to: 15
  2261                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2262   00135A  88AB               	bsf	171,4,c	;volatile
  2263                           
  2264                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2265   00135C  50AB               	movf	171,w,c	;volatile
  2266   00135E  0BF0               	andlw	-16
  2267   001360  090C               	iorlw	12
  2268   001362  6EAB               	movwf	171,c	;volatile
  2269   001364                     
  2270                           ; BSR set to: 15
  2271                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2272   001364  8EAB               	bsf	171,7,c	;volatile
  2273   001366                     
  2274                           ; BSR set to: 15
  2275                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2276   001366  88A7               	bsf	167,4,c	;volatile
  2277                           
  2278                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2279   001368  50A7               	movf	167,w,c	;volatile
  2280   00136A  0BF0               	andlw	-16
  2281   00136C  090C               	iorlw	12
  2282   00136E  6EA7               	movwf	167,c	;volatile
  2283   001370                     
  2284                           ; BSR set to: 15
  2285                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2286   001370  8EA7               	bsf	167,7,c	;volatile
  2287   001372                     
  2288                           ; BSR set to: 15
  2289                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2290   001372  8926               	bsf	38,4,b	;volatile
  2291                           
  2292                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2293   001374  5126               	movf	38,w,b	;volatile
  2294   001376  0BF0               	andlw	-16
  2295   001378  090C               	iorlw	12
  2296   00137A  6F26               	movwf	38,b	;volatile
  2297   00137C                     
  2298                           ; BSR set to: 15
  2299                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2300   00137C  8F26               	bsf	38,7,b	;volatile
  2301   00137E                     
  2302                           ; BSR set to: 15
  2303                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2304   00137E  8922               	bsf	34,4,b	;volatile
  2305                           
  2306                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2307   001380  5122               	movf	34,w,b	;volatile
  2308   001382  0BF0               	andlw	-16
  2309   001384  090C               	iorlw	12
  2310   001386  6F22               	movwf	34,b	;volatile
  2311   001388                     
  2312                           ; BSR set to: 15
  2313                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2314   001388  8F22               	bsf	34,7,b	;volatile
  2315   00138A                     
  2316                           ; BSR set to: 15
  2317   00138A  0012               	return		;funcret
  2318   00138C                     __end_of_initDCmotorsPWM:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _getRGBCval *****************
  2322 ;; Defined at:
  2323 ;;		line 84 in file "color.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2326 ;;		 -> main@measured_colour(8), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;Total ram usage:        1 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 4
  2345 ;; This function calls:
  2346 ;;		_color_read_Blue
  2347 ;;		_color_read_Clear
  2348 ;;		_color_read_Green
  2349 ;;		_color_read_Red
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text14
  2356   001444                     __ptext14:
  2357                           	callstack 0
  2358   001444                     _getRGBCval:
  2359                           	callstack 26
  2360   001444                     
  2361                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2362   001444  EC4D  F00A         	call	_color_read_Red	;wreg free
  2363   001448  500C               	movf	getRGBCval@p^0,w,c
  2364   00144A  6ED9               	movwf	fsr2l,c
  2365   00144C  6ADA               	clrf	fsr2h,c
  2366   00144E  C005  FFDE         	movff	?_color_read_Red,postinc2
  2367   001452  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2368                           
  2369                           ;color.c: 87:     p->B = color_read_Blue();
  2370   001456  ECC5  F00A         	call	_color_read_Blue	;wreg free
  2371   00145A  500C               	movf	getRGBCval@p^0,w,c
  2372   00145C  6ED9               	movwf	fsr2l,c
  2373   00145E  6ADA               	clrf	fsr2h,c
  2374   001460  0E04               	movlw	4
  2375   001462  26D9               	addwf	fsr2l,f,c
  2376   001464  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2377   001468  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2378                           
  2379                           ;color.c: 88:     p->G = color_read_Green();
  2380   00146C  EC75  F00A         	call	_color_read_Green	;wreg free
  2381   001470  500C               	movf	getRGBCval@p^0,w,c
  2382   001472  6ED9               	movwf	fsr2l,c
  2383   001474  6ADA               	clrf	fsr2h,c
  2384   001476  0E02               	movlw	2
  2385   001478  26D9               	addwf	fsr2l,f,c
  2386   00147A  C005  FFDE         	movff	?_color_read_Green,postinc2
  2387   00147E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2388                           
  2389                           ;color.c: 89:     p->C = color_read_Clear();
  2390   001482  EC9D  F00A         	call	_color_read_Clear	;wreg free
  2391   001486  500C               	movf	getRGBCval@p^0,w,c
  2392   001488  6ED9               	movwf	fsr2l,c
  2393   00148A  6ADA               	clrf	fsr2h,c
  2394   00148C  0E06               	movlw	6
  2395   00148E  26D9               	addwf	fsr2l,f,c
  2396   001490  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2397   001494  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2398   001498  0012               	return		;funcret
  2399   00149A                     __end_of_getRGBCval:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _color_read_Red *****************
  2403 ;; Defined at:
  2404 ;;		line 28 in file "color.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  tmp             2    9[COMRAM] unsigned int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    4[COMRAM] unsigned int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        7 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 3
  2425 ;; This function calls:
  2426 ;;		_I2C_2_Master_Read
  2427 ;;		_I2C_2_Master_RepStart
  2428 ;;		_I2C_2_Master_Start
  2429 ;;		_I2C_2_Master_Stop
  2430 ;;		_I2C_2_Master_Write
  2431 ;; This function is called by:
  2432 ;;		_getRGBCval
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text15
  2437   00149A                     __ptext15:
  2438                           	callstack 0
  2439   00149A                     _color_read_Red:
  2440                           	callstack 26
  2441   00149A                     
  2442                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2443   00149A  EC3C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2444                           
  2445                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2446   00149E  0E52               	movlw	82
  2447   0014A0  EC2C  F00C         	call	_I2C_2_Master_Write
  2448                           
  2449                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2450   0014A4  0EB6               	movlw	182
  2451   0014A6  EC2C  F00C         	call	_I2C_2_Master_Write
  2452                           
  2453                           ;color.c: 34:  I2C_2_Master_RepStart();
  2454   0014AA  EC32  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2455                           
  2456                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2457   0014AE  0E53               	movlw	83
  2458   0014B0  EC2C  F00C         	call	_I2C_2_Master_Write
  2459                           
  2460                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2461   0014B4  0E01               	movlw	1
  2462   0014B6  EC34  F00B         	call	_I2C_2_Master_Read
  2463   0014BA  6E07               	movwf	??_color_read_Red^0,c
  2464   0014BC  5007               	movf	??_color_read_Red^0,w,c
  2465   0014BE  6E0A               	movwf	color_read_Red@tmp^0,c
  2466   0014C0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2467                           
  2468                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2469   0014C2  0E00               	movlw	0
  2470   0014C4  EC34  F00B         	call	_I2C_2_Master_Read
  2471   0014C8  6E07               	movwf	??_color_read_Red^0,c
  2472   0014CA  5007               	movf	??_color_read_Red^0,w,c
  2473   0014CC  6E09               	movwf	(??_color_read_Red+2)^0,c
  2474   0014CE  6A08               	clrf	(??_color_read_Red+1)^0,c
  2475   0014D0  500A               	movf	color_read_Red@tmp^0,w,c
  2476   0014D2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2477   0014D4  6E0A               	movwf	color_read_Red@tmp^0,c
  2478   0014D6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2479   0014D8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2480   0014DA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2481                           
  2482                           ;color.c: 38:  I2C_2_Master_Stop();
  2483   0014DC  EC37  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2484   0014E0                     
  2485                           ;color.c: 39:  return tmp;
  2486   0014E0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2487   0014E4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2488   0014E8  0012               	return		;funcret
  2489   0014EA                     __end_of_color_read_Red:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _color_read_Green *****************
  2493 ;; Defined at:
  2494 ;;		line 56 in file "color.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  tmp             2    9[COMRAM] unsigned int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2    4[COMRAM] unsigned int 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;Total ram usage:        7 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 3
  2515 ;; This function calls:
  2516 ;;		_I2C_2_Master_Read
  2517 ;;		_I2C_2_Master_RepStart
  2518 ;;		_I2C_2_Master_Start
  2519 ;;		_I2C_2_Master_Stop
  2520 ;;		_I2C_2_Master_Write
  2521 ;; This function is called by:
  2522 ;;		_getRGBCval
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text16
  2527   0014EA                     __ptext16:
  2528                           	callstack 0
  2529   0014EA                     _color_read_Green:
  2530                           	callstack 26
  2531   0014EA                     
  2532                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2533   0014EA  EC3C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2534                           
  2535                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2536   0014EE  0E52               	movlw	82
  2537   0014F0  EC2C  F00C         	call	_I2C_2_Master_Write
  2538                           
  2539                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2540   0014F4  0EB8               	movlw	184
  2541   0014F6  EC2C  F00C         	call	_I2C_2_Master_Write
  2542                           
  2543                           ;color.c: 62:  I2C_2_Master_RepStart();
  2544   0014FA  EC32  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2545                           
  2546                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2547   0014FE  0E53               	movlw	83
  2548   001500  EC2C  F00C         	call	_I2C_2_Master_Write
  2549                           
  2550                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2551   001504  0E01               	movlw	1
  2552   001506  EC34  F00B         	call	_I2C_2_Master_Read
  2553   00150A  6E07               	movwf	??_color_read_Green^0,c
  2554   00150C  5007               	movf	??_color_read_Green^0,w,c
  2555   00150E  6E0A               	movwf	color_read_Green@tmp^0,c
  2556   001510  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2557                           
  2558                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2559   001512  0E00               	movlw	0
  2560   001514  EC34  F00B         	call	_I2C_2_Master_Read
  2561   001518  6E07               	movwf	??_color_read_Green^0,c
  2562   00151A  5007               	movf	??_color_read_Green^0,w,c
  2563   00151C  6E09               	movwf	(??_color_read_Green+2)^0,c
  2564   00151E  6A08               	clrf	(??_color_read_Green+1)^0,c
  2565   001520  500A               	movf	color_read_Green@tmp^0,w,c
  2566   001522  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2567   001524  6E0A               	movwf	color_read_Green@tmp^0,c
  2568   001526  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2569   001528  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2570   00152A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2571                           
  2572                           ;color.c: 66:  I2C_2_Master_Stop();
  2573   00152C  EC37  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2574   001530                     
  2575                           ;color.c: 67:  return tmp;
  2576   001530  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2577   001534  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2578   001538  0012               	return		;funcret
  2579   00153A                     __end_of_color_read_Green:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _color_read_Clear *****************
  2583 ;; Defined at:
  2584 ;;		line 70 in file "color.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  tmp             2    9[COMRAM] unsigned int 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2    4[COMRAM] unsigned int 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;Total ram usage:        7 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 3
  2605 ;; This function calls:
  2606 ;;		_I2C_2_Master_Read
  2607 ;;		_I2C_2_Master_RepStart
  2608 ;;		_I2C_2_Master_Start
  2609 ;;		_I2C_2_Master_Stop
  2610 ;;		_I2C_2_Master_Write
  2611 ;; This function is called by:
  2612 ;;		_getRGBCval
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text17
  2617   00153A                     __ptext17:
  2618                           	callstack 0
  2619   00153A                     _color_read_Clear:
  2620                           	callstack 26
  2621   00153A                     
  2622                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2623   00153A  EC3C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2624                           
  2625                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2626   00153E  0E52               	movlw	82
  2627   001540  EC2C  F00C         	call	_I2C_2_Master_Write
  2628                           
  2629                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2630   001544  0EB4               	movlw	180
  2631   001546  EC2C  F00C         	call	_I2C_2_Master_Write
  2632                           
  2633                           ;color.c: 76:  I2C_2_Master_RepStart();
  2634   00154A  EC32  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2635                           
  2636                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2637   00154E  0E53               	movlw	83
  2638   001550  EC2C  F00C         	call	_I2C_2_Master_Write
  2639                           
  2640                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2641   001554  0E01               	movlw	1
  2642   001556  EC34  F00B         	call	_I2C_2_Master_Read
  2643   00155A  6E07               	movwf	??_color_read_Clear^0,c
  2644   00155C  5007               	movf	??_color_read_Clear^0,w,c
  2645   00155E  6E0A               	movwf	color_read_Clear@tmp^0,c
  2646   001560  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2647                           
  2648                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2649   001562  0E00               	movlw	0
  2650   001564  EC34  F00B         	call	_I2C_2_Master_Read
  2651   001568  6E07               	movwf	??_color_read_Clear^0,c
  2652   00156A  5007               	movf	??_color_read_Clear^0,w,c
  2653   00156C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2654   00156E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2655   001570  500A               	movf	color_read_Clear@tmp^0,w,c
  2656   001572  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2657   001574  6E0A               	movwf	color_read_Clear@tmp^0,c
  2658   001576  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2659   001578  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2660   00157A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2661                           
  2662                           ;color.c: 80:  I2C_2_Master_Stop();
  2663   00157C  EC37  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2664   001580                     
  2665                           ;color.c: 81:  return tmp;
  2666   001580  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2667   001584  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2668   001588  0012               	return		;funcret
  2669   00158A                     __end_of_color_read_Clear:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _color_read_Blue *****************
  2673 ;; Defined at:
  2674 ;;		line 42 in file "color.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  tmp             2    9[COMRAM] unsigned int 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2    4[COMRAM] unsigned int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;Total ram usage:        7 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 3
  2695 ;; This function calls:
  2696 ;;		_I2C_2_Master_Read
  2697 ;;		_I2C_2_Master_RepStart
  2698 ;;		_I2C_2_Master_Start
  2699 ;;		_I2C_2_Master_Stop
  2700 ;;		_I2C_2_Master_Write
  2701 ;; This function is called by:
  2702 ;;		_getRGBCval
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text18
  2707   00158A                     __ptext18:
  2708                           	callstack 0
  2709   00158A                     _color_read_Blue:
  2710                           	callstack 26
  2711   00158A                     
  2712                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2713   00158A  EC3C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2714                           
  2715                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2716   00158E  0E52               	movlw	82
  2717   001590  EC2C  F00C         	call	_I2C_2_Master_Write
  2718                           
  2719                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2720   001594  0EBA               	movlw	186
  2721   001596  EC2C  F00C         	call	_I2C_2_Master_Write
  2722                           
  2723                           ;color.c: 48:  I2C_2_Master_RepStart();
  2724   00159A  EC32  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2725                           
  2726                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2727   00159E  0E53               	movlw	83
  2728   0015A0  EC2C  F00C         	call	_I2C_2_Master_Write
  2729                           
  2730                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2731   0015A4  0E01               	movlw	1
  2732   0015A6  EC34  F00B         	call	_I2C_2_Master_Read
  2733   0015AA  6E07               	movwf	??_color_read_Blue^0,c
  2734   0015AC  5007               	movf	??_color_read_Blue^0,w,c
  2735   0015AE  6E0A               	movwf	color_read_Blue@tmp^0,c
  2736   0015B0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2737                           
  2738                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2739   0015B2  0E00               	movlw	0
  2740   0015B4  EC34  F00B         	call	_I2C_2_Master_Read
  2741   0015B8  6E07               	movwf	??_color_read_Blue^0,c
  2742   0015BA  5007               	movf	??_color_read_Blue^0,w,c
  2743   0015BC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2744   0015BE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2745   0015C0  500A               	movf	color_read_Blue@tmp^0,w,c
  2746   0015C2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2747   0015C4  6E0A               	movwf	color_read_Blue@tmp^0,c
  2748   0015C6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2749   0015C8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2750   0015CA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2751                           
  2752                           ;color.c: 52:  I2C_2_Master_Stop();
  2753   0015CC  EC37  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2754   0015D0                     
  2755                           ;color.c: 53:  return tmp;
  2756   0015D0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2757   0015D4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2758   0015D8  0012               	return		;funcret
  2759   0015DA                     __end_of_color_read_Blue:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _I2C_2_Master_RepStart *****************
  2763 ;; Defined at:
  2764 ;;		line 33 in file "i2c.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 2
  2785 ;; This function calls:
  2786 ;;		_I2C_2_Master_Idle
  2787 ;; This function is called by:
  2788 ;;		_color_read_Red
  2789 ;;		_color_read_Blue
  2790 ;;		_color_read_Green
  2791 ;;		_color_read_Clear
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text19
  2796   001864                     __ptext19:
  2797                           	callstack 0
  2798   001864                     _I2C_2_Master_RepStart:
  2799                           	callstack 26
  2800   001864                     
  2801                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2802   001864  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2803   001868                     
  2804                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2805   001868  010E               	movlb	14	; () banked
  2806   00186A  83DA               	bsf	218,1,b	;volatile
  2807   00186C                     
  2808                           ; BSR set to: 14
  2809   00186C  0012               	return		;funcret
  2810   00186E                     __end_of_I2C_2_Master_RepStart:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _I2C_2_Master_Read *****************
  2814 ;; Defined at:
  2815 ;;		line 51 in file "i2c.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  ack             1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  ack             1    2[COMRAM] unsigned char 
  2820 ;;  tmp             1    3[COMRAM] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      unsigned char 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;Total ram usage:        3 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 2
  2837 ;; This function calls:
  2838 ;;		_I2C_2_Master_Idle
  2839 ;; This function is called by:
  2840 ;;		_color_read_Red
  2841 ;;		_color_read_Blue
  2842 ;;		_color_read_Green
  2843 ;;		_color_read_Clear
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text20
  2848   001668                     __ptext20:
  2849                           	callstack 0
  2850   001668                     _I2C_2_Master_Read:
  2851                           	callstack 26
  2852                           
  2853                           ; BSR set to: 14
  2854                           ;incstack = 0
  2855                           ;I2C_2_Master_Read@ack stored from wreg
  2856   001668  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2857   00166A                     
  2858                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2859   00166A  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2860   00166E                     
  2861                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2862   00166E  010E               	movlb	14	; () banked
  2863   001670  87DA               	bsf	218,3,b	;volatile
  2864                           
  2865                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2866   001672  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2867   001676                     
  2868                           ;i2c.c: 57:   tmp = SSP2BUF;
  2869   001676  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2870                           
  2871                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2872   00167A  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2873   00167E                     
  2874                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2875   00167E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2876   001680  B4D8               	btfsc	status,2,c
  2877   001682  EF45  F00B         	goto	u481
  2878   001686  EF49  F00B         	goto	u480
  2879   00168A                     u481:
  2880   00168A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2881   00168C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2882   00168E  EF4A  F00B         	goto	u498
  2883   001692                     u480:
  2884   001692  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2885   001694                     u498:
  2886   001694  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2887   001696  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2888   001698  010E               	movlb	14	; () banked
  2889   00169A  51DA               	movf	218,w,b	;volatile
  2890   00169C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2891   00169E  0BDF               	andlw	-33
  2892   0016A0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2893   0016A2  6FDA               	movwf	218,b	;volatile
  2894   0016A4                     
  2895                           ; BSR set to: 14
  2896                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2897   0016A4  89DA               	bsf	218,4,b	;volatile
  2898   0016A6                     
  2899                           ; BSR set to: 14
  2900                           ;i2c.c: 61:   return tmp;
  2901   0016A6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2902   0016A8                     
  2903                           ; BSR set to: 14
  2904   0016A8  0012               	return		;funcret
  2905   0016AA                     __end_of_I2C_2_Master_Read:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _color_click_init *****************
  2909 ;; Defined at:
  2910 ;;		line 4 in file "color.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;Total ram usage:        1 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 4
  2931 ;; This function calls:
  2932 ;;		_I2C_2_Master_Init
  2933 ;;		_color_writetoaddr
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text21
  2940   0016DE                     __ptext21:
  2941                           	callstack 0
  2942   0016DE                     _color_click_init:
  2943                           	callstack 26
  2944   0016DE                     
  2945                           ;color.c: 7:     I2C_2_Master_Init();
  2946   0016DE  ECA0  F00B         	call	_I2C_2_Master_Init	;wreg free
  2947   0016E2                     
  2948                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  2949   0016E2  0E01               	movlw	1
  2950   0016E4  6E03               	movwf	color_writetoaddr@value^0,c
  2951   0016E6  0E00               	movlw	0
  2952   0016E8  EC01  F00C         	call	_color_writetoaddr
  2953   0016EC                     
  2954                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2955   0016EC  0E3F               	movlw	63
  2956   0016EE  6E05               	movwf	??_color_click_init^0,c
  2957   0016F0  0E55               	movlw	85
  2958   0016F2                     u2097:
  2959   0016F2  2EE8               	decfsz	wreg,f,c
  2960   0016F4  D7FE               	bra	u2097
  2961   0016F6  2E05               	decfsz	??_color_click_init^0,f,c
  2962   0016F8  D7FC               	bra	u2097
  2963   0016FA  0000               	nop	
  2964   0016FC                     
  2965                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  2966   0016FC  0E03               	movlw	3
  2967   0016FE  6E03               	movwf	color_writetoaddr@value^0,c
  2968   001700  0E00               	movlw	0
  2969   001702  EC01  F00C         	call	_color_writetoaddr
  2970   001706                     
  2971                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  2972   001706  0ED5               	movlw	213
  2973   001708  6E03               	movwf	color_writetoaddr@value^0,c
  2974   00170A  0E01               	movlw	1
  2975   00170C  EC01  F00C         	call	_color_writetoaddr
  2976   001710  0012               	return		;funcret
  2977   001712                     __end_of_color_click_init:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _color_writetoaddr *****************
  2981 ;; Defined at:
  2982 ;;		line 20 in file "color.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  address         1    wreg     unsigned char 
  2985 ;;  value           1    2[COMRAM] unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  address         1    3[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 3
  3004 ;; This function calls:
  3005 ;;		_I2C_2_Master_Start
  3006 ;;		_I2C_2_Master_Stop
  3007 ;;		_I2C_2_Master_Write
  3008 ;; This function is called by:
  3009 ;;		_color_click_init
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text22
  3014   001802                     __ptext22:
  3015                           	callstack 0
  3016   001802                     _color_writetoaddr:
  3017                           	callstack 26
  3018                           
  3019                           ;incstack = 0
  3020                           ;color_writetoaddr@address stored from wreg
  3021   001802  6E04               	movwf	color_writetoaddr@address^0,c
  3022   001804                     
  3023                           ;color.c: 21:     I2C_2_Master_Start();
  3024   001804  EC3C  F00C         	call	_I2C_2_Master_Start	;wreg free
  3025                           
  3026                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3027   001808  0E52               	movlw	82
  3028   00180A  EC2C  F00C         	call	_I2C_2_Master_Write
  3029                           
  3030                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3031   00180E  5004               	movf	color_writetoaddr@address^0,w,c
  3032   001810  0980               	iorlw	128
  3033   001812  EC2C  F00C         	call	_I2C_2_Master_Write
  3034                           
  3035                           ;color.c: 24:     I2C_2_Master_Write(value);
  3036   001816  5003               	movf	color_writetoaddr@value^0,w,c
  3037   001818  EC2C  F00C         	call	_I2C_2_Master_Write
  3038                           
  3039                           ;color.c: 25:     I2C_2_Master_Stop();
  3040   00181C  EC37  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3041   001820  0012               	return		;funcret
  3042   001822                     __end_of_color_writetoaddr:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _I2C_2_Master_Write *****************
  3046 ;; Defined at:
  3047 ;;		line 45 in file "i2c.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  data_byte       1    wreg     unsigned char 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  data_byte       1    1[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;Total ram usage:        1 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 2
  3068 ;; This function calls:
  3069 ;;		_I2C_2_Master_Idle
  3070 ;; This function is called by:
  3071 ;;		_color_writetoaddr
  3072 ;;		_color_read_Red
  3073 ;;		_color_read_Blue
  3074 ;;		_color_read_Green
  3075 ;;		_color_read_Clear
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text23
  3080   001858                     __ptext23:
  3081                           	callstack 0
  3082   001858                     _I2C_2_Master_Write:
  3083                           	callstack 26
  3084                           
  3085                           ;incstack = 0
  3086                           ;I2C_2_Master_Write@data_byte stored from wreg
  3087   001858  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3088   00185A                     
  3089                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3090   00185A  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3091   00185E                     
  3092                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3093   00185E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3094   001862  0012               	return		;funcret
  3095   001864                     __end_of_I2C_2_Master_Write:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _I2C_2_Master_Stop *****************
  3099 ;; Defined at:
  3100 ;;		line 39 in file "i2c.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 2
  3121 ;; This function calls:
  3122 ;;		_I2C_2_Master_Idle
  3123 ;; This function is called by:
  3124 ;;		_color_writetoaddr
  3125 ;;		_color_read_Red
  3126 ;;		_color_read_Blue
  3127 ;;		_color_read_Green
  3128 ;;		_color_read_Clear
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text24
  3133   00186E                     __ptext24:
  3134                           	callstack 0
  3135   00186E                     _I2C_2_Master_Stop:
  3136                           	callstack 26
  3137   00186E                     
  3138                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3139   00186E  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3140   001872                     
  3141                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3142   001872  010E               	movlb	14	; () banked
  3143   001874  85DA               	bsf	218,2,b	;volatile
  3144   001876                     
  3145                           ; BSR set to: 14
  3146   001876  0012               	return		;funcret
  3147   001878                     __end_of_I2C_2_Master_Stop:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _I2C_2_Master_Start *****************
  3151 ;; Defined at:
  3152 ;;		line 27 in file "i2c.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 2
  3173 ;; This function calls:
  3174 ;;		_I2C_2_Master_Idle
  3175 ;; This function is called by:
  3176 ;;		_color_writetoaddr
  3177 ;;		_color_read_Red
  3178 ;;		_color_read_Blue
  3179 ;;		_color_read_Green
  3180 ;;		_color_read_Clear
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text25
  3185   001878                     __ptext25:
  3186                           	callstack 0
  3187   001878                     _I2C_2_Master_Start:
  3188                           	callstack 26
  3189   001878                     
  3190                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3191   001878  ECCA  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3192   00187C                     
  3193                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3194   00187C  010E               	movlb	14	; () banked
  3195   00187E  81DA               	bsf	218,0,b	;volatile
  3196   001880                     
  3197                           ; BSR set to: 14
  3198   001880  0012               	return		;funcret
  3199   001882                     __end_of_I2C_2_Master_Start:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _I2C_2_Master_Idle *****************
  3203 ;; Defined at:
  3204 ;;		line 22 in file "i2c.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 1
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_I2C_2_Master_Start
  3229 ;;		_I2C_2_Master_RepStart
  3230 ;;		_I2C_2_Master_Stop
  3231 ;;		_I2C_2_Master_Write
  3232 ;;		_I2C_2_Master_Read
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text26
  3237   001794                     __ptext26:
  3238                           	callstack 0
  3239   001794                     _I2C_2_Master_Idle:
  3240                           	callstack 26
  3241   001794                     l250:
  3242   001794  010E               	movlb	14	; () banked
  3243   001796  B5D8               	btfsc	216,2,b	;volatile
  3244   001798  EFD0  F00B         	goto	u361
  3245   00179C  EFD2  F00B         	goto	u360
  3246   0017A0                     u361:
  3247   0017A0  EFCA  F00B         	goto	l250
  3248   0017A4                     u360:
  3249   0017A4                     
  3250                           ; BSR set to: 14
  3251   0017A4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3252   0017A8  0E1F               	movlw	31
  3253   0017AA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3254   0017AC  A4D8               	btfss	status,2,c
  3255   0017AE  EFDB  F00B         	goto	u371
  3256   0017B2  EFDD  F00B         	goto	u370
  3257   0017B6                     u371:
  3258   0017B6  EFCA  F00B         	goto	l250
  3259   0017BA                     u370:
  3260   0017BA                     
  3261                           ; BSR set to: 14
  3262   0017BA  0012               	return		;funcret
  3263   0017BC                     __end_of_I2C_2_Master_Idle:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _I2C_2_Master_Init *****************
  3267 ;; Defined at:
  3268 ;;		line 4 in file "i2c.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_color_click_init
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text27
  3297   001740                     __ptext27:
  3298                           	callstack 0
  3299   001740                     _I2C_2_Master_Init:
  3300                           	callstack 28
  3301   001740                     
  3302                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3303   001740  010E               	movlb	14	; () banked
  3304   001742  51D9               	movf	217,w,b	;volatile
  3305   001744  0BF0               	andlw	-16
  3306   001746  0908               	iorlw	8
  3307   001748  6FD9               	movwf	217,b	;volatile
  3308   00174A                     
  3309                           ; BSR set to: 14
  3310                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3311   00174A  8BD9               	bsf	217,5,b	;volatile
  3312                           
  3313                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3314   00174C  0E9F               	movlw	159
  3315   00174E  6FD6               	movwf	214,b	;volatile
  3316   001750                     
  3317                           ; BSR set to: 14
  3318                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3319   001750  8A84               	bsf	132,5,c	;volatile
  3320   001752                     
  3321                           ; BSR set to: 14
  3322                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3323   001752  8C84               	bsf	132,6,c	;volatile
  3324   001754                     
  3325                           ; BSR set to: 14
  3326                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3327   001754  9BA7               	bcf	167,5,b	;volatile
  3328   001756                     
  3329                           ; BSR set to: 14
  3330                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3331   001756  9DA7               	bcf	167,6,b	;volatile
  3332                           
  3333                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3334   001758  0E1D               	movlw	29
  3335   00175A  6F1D               	movwf	29,b	;volatile
  3336                           
  3337                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3338   00175C  0E1E               	movlw	30
  3339   00175E  6F1C               	movwf	28,b	;volatile
  3340                           
  3341                           ;i2c.c: 18:   RD5PPS=0x1C;
  3342   001760  0E1C               	movlw	28
  3343   001762  6F6F               	movwf	111,b	;volatile
  3344                           
  3345                           ;i2c.c: 19:   RD6PPS=0x1B;
  3346   001764  0E1B               	movlw	27
  3347   001766  6F70               	movwf	112,b	;volatile
  3348   001768                     
  3349                           ; BSR set to: 14
  3350   001768  0012               	return		;funcret
  3351   00176A                     __end_of_I2C_2_Master_Init:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _buggy_lights_init *****************
  3355 ;; Defined at:
  3356 ;;		line 4 in file "buggy_lights.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		None
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text28
  3385   001712                     __ptext28:
  3386                           	callstack 0
  3387   001712                     _buggy_lights_init:
  3388                           	callstack 29
  3389   001712                     
  3390                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3391   001712  9884               	bcf	132,4,c	;volatile
  3392                           
  3393                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3394   001714  9288               	bcf	136,1,c	;volatile
  3395                           
  3396                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3397   001716  9684               	bcf	132,3,c	;volatile
  3398                           
  3399                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3400   001718  9086               	bcf	134,0,c	;volatile
  3401                           
  3402                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3403   00171A  9088               	bcf	136,0,c	;volatile
  3404                           
  3405                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  3406   00171C  987C               	bcf	124,4,c	;volatile
  3407                           
  3408                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  3409   00171E  9280               	bcf	128,1,c	;volatile
  3410                           
  3411                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  3412   001720  967C               	bcf	124,3,c	;volatile
  3413                           
  3414                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  3415   001722  907E               	bcf	126,0,c	;volatile
  3416                           
  3417                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  3418   001724  9080               	bcf	128,0,c	;volatile
  3419                           
  3420                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  3421   001726  9287               	bcf	135,1,c	;volatile
  3422                           
  3423                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  3424   001728  9881               	bcf	129,4,c	;volatile
  3425                           
  3426                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  3427   00172A  9E86               	bcf	134,7,c	;volatile
  3428                           
  3429                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  3430   00172C  927F               	bcf	127,1,c	;volatile
  3431                           
  3432                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  3433   00172E  9879               	bcf	121,4,c	;volatile
  3434                           
  3435                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  3436   001730  9E7E               	bcf	126,7,c	;volatile
  3437                           
  3438                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  3439   001732  9087               	bcf	135,0,c	;volatile
  3440                           
  3441                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  3442   001734  9E85               	bcf	133,7,c	;volatile
  3443                           
  3444                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  3445   001736  9681               	bcf	129,3,c	;volatile
  3446                           
  3447                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  3448   001738  907F               	bcf	127,0,c	;volatile
  3449                           
  3450                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  3451   00173A  9E7D               	bcf	125,7,c	;volatile
  3452                           
  3453                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  3454   00173C  9679               	bcf	121,3,c	;volatile
  3455   00173E  0012               	return		;funcret
  3456   001740                     __end_of_buggy_lights_init:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _Timer0_init *****************
  3460 ;; Defined at:
  3461 ;;		line 7 in file "timers.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 2
  3482 ;; This function calls:
  3483 ;;		_reset_timer
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text29
  3490   0017BC                     __ptext29:
  3491                           	callstack 0
  3492   0017BC                     _Timer0_init:
  3493                           	callstack 28
  3494   0017BC                     
  3495                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3496   0017BC  50D6               	movf	214,w,c	;volatile
  3497   0017BE  0B1F               	andlw	-225
  3498   0017C0  0940               	iorlw	64
  3499   0017C2  6ED6               	movwf	214,c	;volatile
  3500   0017C4                     
  3501                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3502   0017C4  88D6               	bsf	214,4,c	;volatile
  3503   0017C6                     
  3504                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3505   0017C6  88D5               	bsf	213,4,c	;volatile
  3506                           
  3507                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3508   0017C8  50D6               	movf	214,w,c	;volatile
  3509   0017CA  0BF0               	andlw	-16
  3510   0017CC  090E               	iorlw	14
  3511   0017CE  6ED6               	movwf	214,c	;volatile
  3512   0017D0                     
  3513                           ;timers.c: 18:     reset_timer();
  3514   0017D0  EC41  F00C         	call	_reset_timer	;wreg free
  3515   0017D4                     
  3516                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  3517   0017D4  8ED5               	bsf	213,7,c	;volatile
  3518   0017D6                     
  3519                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  3520   0017D6  010E               	movlb	14	; () banked
  3521   0017D8  8B29               	bsf	41,5,b	;volatile
  3522   0017DA                     
  3523                           ; BSR set to: 14
  3524                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  3525   0017DA  8CF2               	bsf	242,6,c	;volatile
  3526   0017DC                     
  3527                           ; BSR set to: 14
  3528                           ;timers.c: 23:     INTCONbits.GIE = 1;
  3529   0017DC  8EF2               	bsf	242,7,c	;volatile
  3530   0017DE                     
  3531                           ; BSR set to: 14
  3532   0017DE  0012               	return		;funcret
  3533   0017E0                     __end_of_Timer0_init:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _reset_timer *****************
  3537 ;; Defined at:
  3538 ;;		line 26 in file "timers.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_Timer0_init
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text30
  3567   001882                     __ptext30:
  3568                           	callstack 0
  3569   001882                     _reset_timer:
  3570                           	callstack 28
  3571   001882                     
  3572                           ;timers.c: 31:     TMR0H = 0;
  3573   001882  0E00               	movlw	0
  3574   001884  6ED4               	movwf	212,c	;volatile
  3575                           
  3576                           ;timers.c: 32:     TMR0L = 0;
  3577   001886  0E00               	movlw	0
  3578   001888  6ED3               	movwf	211,c	;volatile
  3579   00188A  0012               	return		;funcret
  3580   00188C                     __end_of_reset_timer:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _ISR *****************
  3584 ;; Defined at:
  3585 ;;		line 84 in file "timers.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		Interrupt level 2
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	intcode
  3613   000008                     __pintcode:
  3614                           	callstack 0
  3615   000008                     _ISR:
  3616                           	callstack 24
  3617                           
  3618                           ;incstack = 0
  3619   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3620   00000A                     
  3621                           ;timers.c: 87:     if (PIR0bits.TMR0IF) {
  3622   00000A  010E               	movlb	14	; () banked
  3623   00000C  AB33               	btfss	51,5,b	;volatile
  3624   00000E  EF0B  F000         	goto	i2u167_41
  3625   000012  EF0D  F000         	goto	i2u167_40
  3626   000016                     i2u167_41:
  3627   000016  EF1A  F000         	goto	i2l668
  3628   00001A                     i2u167_40:
  3629   00001A                     
  3630                           ; BSR set to: 14
  3631                           ;timers.c: 88:         if (returning) {
  3632   00001A  0100               	movlb	0	; () banked
  3633   00001C  519D               	movf	_returning& (0+255),w,b
  3634   00001E  B4D8               	btfsc	status,2,c
  3635   000020  EF14  F000         	goto	i2u168_41
  3636   000024  EF16  F000         	goto	i2u168_40
  3637   000028                     i2u168_41:
  3638   000028  EF18  F000         	goto	i2l667
  3639   00002C                     i2u168_40:
  3640   00002C                     
  3641                           ; BSR set to: 0
  3642                           ;timers.c: 91:             return_flag = 1;
  3643   00002C  0E01               	movlw	1
  3644   00002E  6F9C               	movwf	_return_flag& (0+255),b
  3645   000030                     i2l667:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;timers.c: 96:         PIR0bits.TMR0IF = 0;
  3649   000030  010E               	movlb	14	; () banked
  3650   000032  9B33               	bcf	51,5,b	;volatile
  3651   000034                     i2l668:
  3652                           
  3653                           ; BSR set to: 14
  3654   000034  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3655   000036  0011               	retfie		f
  3656   000038                     __end_of_ISR:
  3657                           	callstack 0
  3658                           
  3659                           	psect	rparam
  3660   000000                     
  3661                           	psect	temp
  3662   00005F                     btemp:
  3663                           	callstack 0
  3664   00005F                     	ds	1
  3665   000000                     int$flags	set	btemp
  3666   000000                     wtemp8	set	btemp+1
  3667   000000                     ttemp5	set	btemp+1
  3668   000000                     ttemp6	set	btemp+4
  3669   000000                     ttemp7	set	btemp+8
  3670                           
  3671                           	psect	idloc
  3672                           
  3673                           ;Config register IDLOC0 @ 0x200000
  3674                           ;	unspecified, using default values
  3675   200000                     	org	2097152
  3676   200000  FFFF               	dw	65535
  3677                           
  3678                           ;Config register IDLOC1 @ 0x200002
  3679                           ;	unspecified, using default values
  3680   200002                     	org	2097154
  3681   200002  FFFF               	dw	65535
  3682                           
  3683                           ;Config register IDLOC2 @ 0x200004
  3684                           ;	unspecified, using default values
  3685   200004                     	org	2097156
  3686   200004  FFFF               	dw	65535
  3687                           
  3688                           ;Config register IDLOC3 @ 0x200006
  3689                           ;	unspecified, using default values
  3690   200006                     	org	2097158
  3691   200006  FFFF               	dw	65535
  3692                           
  3693                           ;Config register IDLOC4 @ 0x200008
  3694                           ;	unspecified, using default values
  3695   200008                     	org	2097160
  3696   200008  FFFF               	dw	65535
  3697                           
  3698                           ;Config register IDLOC5 @ 0x20000A
  3699                           ;	unspecified, using default values
  3700   20000A                     	org	2097162
  3701   20000A  FFFF               	dw	65535
  3702                           
  3703                           ;Config register IDLOC6 @ 0x20000C
  3704                           ;	unspecified, using default values
  3705   20000C                     	org	2097164
  3706   20000C  FFFF               	dw	65535
  3707                           
  3708                           ;Config register IDLOC7 @ 0x20000E
  3709                           ;	unspecified, using default values
  3710   20000E                     	org	2097166
  3711   20000E  FFFF               	dw	65535
  3712                           
  3713                           	psect	config
  3714                           
  3715                           ;Config register CONFIG1L @ 0x300000
  3716                           ;	External Oscillator mode Selection bits
  3717                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3718                           ;	Power-up default value for COSC bits
  3719                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3720   300000                     	org	3145728
  3721   300000  AA                 	db	170
  3722                           
  3723                           ;Config register CONFIG1H @ 0x300001
  3724                           ;	unspecified, using default values
  3725                           ;	Clock Out Enable bit
  3726                           ;	CLKOUTEN = 0x1, unprogrammed default
  3727                           ;	Clock Switch Enable bit
  3728                           ;	CSWEN = 0x1, unprogrammed default
  3729                           ;	Fail-Safe Clock Monitor Enable bit
  3730                           ;	FCMEN = 0x1, unprogrammed default
  3731   300001                     	org	3145729
  3732   300001  FF                 	db	255
  3733                           
  3734                           ;Config register CONFIG2L @ 0x300002
  3735                           ;	unspecified, using default values
  3736                           ;	Master Clear Enable bit
  3737                           ;	MCLRE = 0x1, unprogrammed default
  3738                           ;	Power-up Timer Enable bit
  3739                           ;	PWRTE = 0x1, unprogrammed default
  3740                           ;	Low-power BOR enable bit
  3741                           ;	LPBOREN = 0x1, unprogrammed default
  3742                           ;	Brown-out Reset Enable bits
  3743                           ;	BOREN = 0x3, unprogrammed default
  3744   300002                     	org	3145730
  3745   300002  FF                 	db	255
  3746                           
  3747                           ;Config register CONFIG2H @ 0x300003
  3748                           ;	unspecified, using default values
  3749                           ;	Brown Out Reset Voltage selection bits
  3750                           ;	BORV = 0x3, unprogrammed default
  3751                           ;	ZCD Disable bit
  3752                           ;	ZCD = 0x1, unprogrammed default
  3753                           ;	PPSLOCK bit One-Way Set Enable bit
  3754                           ;	PPS1WAY = 0x1, unprogrammed default
  3755                           ;	Stack Full/Underflow Reset Enable bit
  3756                           ;	STVREN = 0x1, unprogrammed default
  3757                           ;	Debugger Enable bit
  3758                           ;	DEBUG = 0x1, unprogrammed default
  3759                           ;	Extended Instruction Set Enable bit
  3760                           ;	XINST = 0x1, unprogrammed default
  3761   300003                     	org	3145731
  3762   300003  FF                 	db	255
  3763                           
  3764                           ;Config register CONFIG3L @ 0x300004
  3765                           ;	WDT Period Select bits
  3766                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3767                           ;	WDT operating mode
  3768                           ;	WDTE = OFF, WDT Disabled
  3769   300004                     	org	3145732
  3770   300004  9F                 	db	159
  3771                           
  3772                           ;Config register CONFIG3H @ 0x300005
  3773                           ;	unspecified, using default values
  3774                           ;	WDT Window Select bits
  3775                           ;	WDTCWS = 0x7, unprogrammed default
  3776                           ;	WDT input clock selector
  3777                           ;	WDTCCS = 0x7, unprogrammed default
  3778   300005                     	org	3145733
  3779   300005  FF                 	db	255
  3780                           
  3781                           ;Config register CONFIG4L @ 0x300006
  3782                           ;	unspecified, using default values
  3783                           ;	Write Protection Block 0
  3784                           ;	WRT0 = 0x1, unprogrammed default
  3785                           ;	Write Protection Block 1
  3786                           ;	WRT1 = 0x1, unprogrammed default
  3787                           ;	Write Protection Block 2
  3788                           ;	WRT2 = 0x1, unprogrammed default
  3789                           ;	Write Protection Block 3
  3790                           ;	WRT3 = 0x1, unprogrammed default
  3791                           ;	Write Protection Block 3
  3792                           ;	WRT4 = 0x1, unprogrammed default
  3793                           ;	Write Protection Block 3
  3794                           ;	WRT5 = 0x1, unprogrammed default
  3795                           ;	Write Protection Block 3
  3796                           ;	WRT6 = 0x1, unprogrammed default
  3797                           ;	Write Protection Block 3
  3798                           ;	WRT7 = 0x1, unprogrammed default
  3799   300006                     	org	3145734
  3800   300006  FF                 	db	255
  3801                           
  3802                           ;Config register CONFIG4H @ 0x300007
  3803                           ;	unspecified, using default values
  3804                           ;	Configuration Register Write Protection bit
  3805                           ;	WRTC = 0x1, unprogrammed default
  3806                           ;	Boot Block Write Protection bit
  3807                           ;	WRTB = 0x1, unprogrammed default
  3808                           ;	Data EEPROM Write Protection bit
  3809                           ;	WRTD = 0x1, unprogrammed default
  3810                           ;	Scanner Enable bit
  3811                           ;	SCANE = 0x1, unprogrammed default
  3812                           ;	Low Voltage Programming Enable bit
  3813                           ;	LVP = 0x1, unprogrammed default
  3814   300007                     	org	3145735
  3815   300007  FF                 	db	255
  3816                           
  3817                           ;Config register CONFIG5L @ 0x300008
  3818                           ;	unspecified, using default values
  3819                           ;	UserNVM Program Memory Code Protection bit
  3820                           ;	CP = 0x1, unprogrammed default
  3821                           ;	DataNVM Memory Code Protection bit
  3822                           ;	CPD = 0x1, unprogrammed default
  3823   300008                     	org	3145736
  3824   300008  FF                 	db	255
  3825                           
  3826                           ;Config register CONFIG5H @ 0x300009
  3827                           ;	unspecified, using default values
  3828   300009                     	org	3145737
  3829   300009  FF                 	db	255
  3830                           
  3831                           ;Config register CONFIG6L @ 0x30000A
  3832                           ;	unspecified, using default values
  3833                           ;	Table Read Protection Block 0
  3834                           ;	EBTR0 = 0x1, unprogrammed default
  3835                           ;	Table Read Protection Block 1
  3836                           ;	EBTR1 = 0x1, unprogrammed default
  3837                           ;	Table Read Protection Block 2
  3838                           ;	EBTR2 = 0x1, unprogrammed default
  3839                           ;	Table Read Protection Block 3
  3840                           ;	EBTR3 = 0x1, unprogrammed default
  3841                           ;	Table Read Protection Block 4
  3842                           ;	EBTR4 = 0x1, unprogrammed default
  3843                           ;	Table Read Protection Block 5
  3844                           ;	EBTR5 = 0x1, unprogrammed default
  3845                           ;	Table Read Protection Block 6
  3846                           ;	EBTR6 = 0x1, unprogrammed default
  3847                           ;	Table Read Protection Block 7
  3848                           ;	EBTR7 = 0x1, unprogrammed default
  3849   30000A                     	org	3145738
  3850   30000A  FF                 	db	255
  3851                           
  3852                           ;Config register CONFIG6H @ 0x30000B
  3853                           ;	unspecified, using default values
  3854                           ;	Boot Block Table Read Protection bit
  3855                           ;	EBTRB = 0x1, unprogrammed default
  3856   30000B                     	org	3145739
  3857   30000B  FF                 	db	255
  3858                           tosu	equ	0xFFF
  3859                           tosh	equ	0xFFE
  3860                           tosl	equ	0xFFD
  3861                           stkptr	equ	0xFFC
  3862                           pclatu	equ	0xFFB
  3863                           pclath	equ	0xFFA
  3864                           pcl	equ	0xFF9
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           indf0	equ	0xFEF
  3872                           postinc0	equ	0xFEE
  3873                           postdec0	equ	0xFED
  3874                           preinc0	equ	0xFEC
  3875                           plusw0	equ	0xFEB
  3876                           fsr0h	equ	0xFEA
  3877                           fsr0l	equ	0xFE9
  3878                           wreg	equ	0xFE8
  3879                           indf1	equ	0xFE7
  3880                           postinc1	equ	0xFE6
  3881                           postdec1	equ	0xFE5
  3882                           preinc1	equ	0xFE4
  3883                           plusw1	equ	0xFE3
  3884                           fsr1h	equ	0xFE2
  3885                           fsr1l	equ	0xFE1
  3886                           bsr	equ	0xFE0
  3887                           indf2	equ	0xFDF
  3888                           postinc2	equ	0xFDE
  3889                           postdec2	equ	0xFDD
  3890                           preinc2	equ	0xFDC
  3891                           plusw2	equ	0xFDB
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        41
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160      0     147
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2627$buffer	PTR unsigned char  size(2) Largest target is 0

    S2627$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5191
                                             66 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3916
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     288
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     528
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      61        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 18:43:45 2024

                 _turn180Delay 00CE                 _color_read_Red 149A                _color_read_Blue 158A  
              _trail_timer_low 00B6                             l27 173E                             l61 1710  
                           l70 15D8                             l64 1820                             l73 1538  
                           l67 14E8                             l76 1588                             l79 1498  
                 ___awdiv@sign 0006               _trail_timer_high 00DF               _color_read_Clear 153A  
             _color_read_Green 14EA                            l152 138A                            l250 1794  
                          l403 183E                            l412 1842                            l253 17BA  
                          l421 13EC                            l262 1876                            l247 1768  
                          l415 1856                            l256 1880                            l424 1800  
                          l265 1862                            l259 186C                            l268 16A8  
                          l641 17DE                            l644 188A                            l902 1190  
                          l915 12FA                            u500 1852                            u501 184E  
                          u360 17A4                            u361 17A0                            u370 17BA  
                          u371 17B6                            _ISR 0008                            u480 1692  
                          u481 168A                            u498 1694                            _abs 16AA  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00CA  
                         ?_ISR 0001                           l2011 1838                           ?_abs 0007  
                         l2021 17C6                           l2013 183A                           l2005 1822  
                         l2031 17DC                           l2023 17D0                           l2015 183C  
                         l2007 182C                           l2025 17D4                           l2017 17BC  
                         l2009 182E                           l1401 16C4                           l2027 17D6  
                         l2019 17C4                           l1404 16DC                           l2029 17DA  
                         l2301 1188                           l2311 1266                           l1416 124A  
                         l2321 129A                           l2313 126A                           l2305 124C  
                         l2331 12D4                           l2323 12A2                           l2315 1278  
                         l2307 1250                           l1427 188C                           l1701 187C  
                         l2261 10CE                           l2325 12B0                           l2333 12DA  
                         l2317 1280                           l2309 125E                           l2341 1192  
                         l2501 0FF8                           l1349 1624                           l1390 0FAE  
                         l1703 185A                           l1711 1864                           l2271 10FA  
                         l2263 10D2                           l2335 12EA                           l2327 12C6  
                         l2319 1292                           l2351 120A                           l2343 11A2  
                         l1391 1000                           l1705 185E                           l1721 167E  
                         l1713 1868                           l2281 1128                           l2273 1102  
                         l2265 10E0                           l2337 12F2                           l2329 12CE  
                         l2345 11B2                           l1635 1794                           l1707 186E  
                         l1723 16A4                           l1715 166A                           l2291 1162  
                         l2283 1130                           l2275 1106                           l2267 10E8  
                         l2355 16AA                           l2347 11BC                           l2451 0E42  
                         l1396 143A                           l1637 17A4                           l1709 1872  
                         l1725 16A6                           l1717 166E                           l2293 1164  
                         l2285 113E                           l2277 110E                           l2269 10EC  
                         l2357 16B8                           l2349 11D8                           l2461 0E9E  
                         l2453 0E50                           l2445 0E0C                           l1397 1442  
                         l2711 1706                           l2703 16DE                           l1719 1676  
                         l2295 116A                           l2287 1144                           l2279 1120  
                         l2471 0F24                           l2463 0EB6                           l2455 0E54  
                         l2447 0E14                           l2551 1400                           l2705 16E2  
                         l2713 1444                           l2721 1336                           l2289 115A  
                         l2297 1170                           l2481 0F6A                           l2473 0F28  
                         l2465 0EC0                           l2457 0E5E                           l2449 0E3A  
                         l2553 141A                           l2555 1804                           l2707 16EC  
                         l2563 158A                           l2571 1530                           l2731 1372  
                         l2723 135A                           l2715 12FC                           l1771 1842  
                         l2299 1180                           l2483 0F78                           l2475 0F3A  
                         l2467 0ED8                           l2491 0FBA                           l2459 0E7E  
                         l2547 13EE                           l2709 16FC                           l2565 15D0  
                         l2557 149A                           l2733 137C                           l2725 1364  
                         l2717 130C                           l1773 1852                           l2581 138C  
                         l2493 0FC2                           l2485 0F80                           l2477 0F4A  
                         l2469 0F08                           l2549 13F2                           l2821 1032  
                         l2813 1002                           l1943 1882                           l1791 1754  
                         l1783 1740                           l2575 153A                           l2559 14E0  
                         l2735 137E                           l2727 1366                           l2719 1332  
                         l2583 1390                           l2487 0F9A                           l2479 0F5A  
                         l2591 15E6                           l2831 105E                           l2823 103A  
                         l2815 100E                           l1945 1712                           l1793 1756  
                         l1785 174A                           l2577 1580                           l2569 14EA  
                         l2737 1388                           l2729 1370                           l2585 13B6  
                         l2489 0F9C                           l2497 0FCE                           l2593 15EE  
                         l2761 17E0                           l2841 106C                           l2833 1062  
                         l2825 1042                           l2817 1016                           l1787 1750  
                         l1699 1878                           l2587 13BA                           l2499 0FF0  
                         l2595 15F6                           l2763 17F6                           l2851 1078  
                         l2843 106E                           l2835 1066                           l2827 104A  
                         l2819 101E                           l1789 1752                           l2597 160E  
                         l2589 15DA                           l2853 1080                           l2845 1070  
                         l2837 1068                           l2829 105A                           l2599 161C  
                         l2855 108C                           l2847 1072                           l2839 106A  
                         l2857 10AE                           l2849 1076                           STR_1 0E01  
                         STR_2 0E06                           u1000 10E0                           u1001 10DC  
                         u1010 10FA                           u1011 10F6                           u1020 1120  
                         u1100 12C6                           u1021 111C                           u1101 12C2  
                         u1030 113E                           u1110 12EA                           u1031 113A  
                         u1111 12E6                           u1040 115A                           u1120 11A2  
                         u1041 1156                           u1121 119E                           u1050 1180  
                         u1130 11B2                           u1051 117C                           u1131 11AE  
                         u1060 125E                           u1140 11D8                           u1061 125A  
                         u1141 11D4                           u1070 1278                           u1150 120A  
                         u1071 1274                           u1151 1206                           u1080 1292  
                         u1160 16B8                           u1400 0F5A                           u1081 128E  
                         u1161 16B4                           u1401 0F56                           u1090 12B0  
                         u1410 0F6A                           u1330 0E3A                           u1091 12AC  
                         u1411 0F66                           u1331 0E36                           u1420 0FAE  
                         u1340 0E7E                           u1421 0FAA                           u1341 0E7A  
                         u1350 0E9E                           u1430 143A                           u1351 0E9A  
                         u1431 1436                           u1440 13B2                           u1360 0ED4  
                 _BAUD4CONbits 0EE9                           u1361 0ECE                           u1450 13DC  
                         u1370 0ED6                           u1460 13EC                           u1380 0F3A  
                         u1540 109E                           u1461 13E8                           u1381 0F36  
                         u1541 1096                           u1390 0F4A                           u1447 13A8  
                         u1391 0F46                           u2087 10B8                           u2097 16F2  
                         u1457 13D2                           _T2PR 0FBC                           u1558 10A0  
                         abs@a 0007                           _dbuf 0060                           _main 1002  
                         _prec 0098                           _nout 0094                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F                           start 0038  
       __end_of_color_read_Red 14EA                   ___param_bank 0000                          ??_ISR 0001  
                        ??_abs 0009                 _sendIntSerial4 17E0                          ?_main 0001  
           _timer_high_pointer 00DA                __end_of___awdiv 1192                __end_of___awmod 12FC  
              ___awdiv@divisor 0003                          i2l667 0030                          i2l668 0034  
              ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 1858  
   __end_of_I2C_2_Master_Start 1882     __end_of_I2C_2_Master_Write 1864                    _turningGear 00DB  
                        _flags 009A                          _fputc 1192                          _width 0096  
                        _putch 188C              _turnRight135Delay 00D0                          tablat 0FF5  
              _turnLeft90Delay 00D6                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
              __end_of_sprintf 1626        __end_of_color_read_Blue 15DA          _I2C_2_Master_RepStart 1864  
              ?_color_read_Red 0005                __initialization 1626                   __end_of_main 10CE  
       __end_of_sendIntSerial4 1802                         ??_main 0043                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2951 001A  
                       i2l2953 002C                         _RG6PPS 0E88                         i2l2949 000A  
                vfpfcnvrt@done 000F       __end_of_color_click_init 1712                         _RX4PPS 0E15  
                       _TX4REG 0EE4               _turnLeft135Delay 00D2                  ??_Timer0_init 0001  
                 ?_reset_timer 0001                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001B  
                    ??___awdiv 0005                      ??___awmod 0005                ?_sendIntSerial4 0030  
                       clear_0 164C                         clear_1 1658               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       fputc@c 0001              _timer_low_pointer 00D9                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1444  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0021              _buggy_lights_init 1712  
                   __accesstop 0060        __end_of__initialization 165E       __end_of_color_read_Clear 158A  
     __end_of_color_read_Green 153A         ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001  
                ___rparam_used 0001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 176A            ??_buggy_lights_init 0001                  __end_of_fputc 124C  
                __end_of_putch 188E            __end_of_Timer0_init 17E0                        ??_fputc 0004  
    __end_of_buggy_lights_init 1740                        ??_putch 0001                     __pbssBANK0 0060  
                   __pbssBANK1 0100                     _getRGBCval 1444              _color_writetoaddr 1802  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003            ??_color_writetoaddr 0004  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 1822             _I2C_2_Master_Start 1878                     _initUSART4 1822  
           _I2C_2_Master_Write 1858                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 17BC        sendStringSerial4@string 0002  
                      ___awdiv 10CE                        ___awmod 124C            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0018                   __psmallconst 0E00  
                      __pcinit 1626                        __ramtop 0E00                        __ptext0 1002  
                      __ptext1 17E0                        __ptext2 15DA                        __ptext3 13EE  
                      __ptext4 0E0C                        __ptext5 1192                        __ptext6 188C  
                      __ptext7 16AA                        __ptext8 124C                        __ptext9 10CE  
                    _T2CONbits 0FBD               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 00A1                        _sprintf 15DA           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 165E                    ?_getRGBCval 000C  
                      fputc@fp 0003              ?_color_click_init 0001             ??_color_click_init 0005  
             ??_sendIntSerial4 0032              __end_of_vfpfcnvrt 1002                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0013                     ??_vfprintf 001B  
              _initDCmotorsPWM 12FC           sendIntSerial4@string 0032                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 0080                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
                   main@motorL 004D                     main@motorR 0056             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0012  
                  vfpfcnvrt@fp 000B            color_read_Clear@tmp 000A            start_initialization 1626  
                  __end_of_ISR 0038                    __end_of_abs 16DE                  _TxBufWriteCnt 009F  
             _turnRight90Delay 00D4            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 138C  
                  vfprintf@fmt 0019                    __pdataBANK0 00CA                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 1794              _I2C_2_Master_Init 1740              _I2C_2_Master_Read 1668  
            _I2C_2_Master_Stop 186E                   _RxBufReadCnt 00A0             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _headbuttDelay 00CC       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C  
                    _rampDelay 00DE                   ??_getRGBCval 000D              _sendStringSerial4 138C  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                  ??_reset_timer 0001  
                     i2u167_40 001A                       i2u167_41 0016                       _PIR0bits 0E33  
                     i2u168_40 002C                       i2u168_41 0028                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 009D  
                    _vfpfcnvrt 0E0C      __end_of_I2C_2_Master_Idle 17BC      __end_of_I2C_2_Master_Init 176A  
    __end_of_I2C_2_Master_Read 16AA      __end_of_I2C_2_Master_Stop 1878    I2C_2_Master_Write@data_byte 0002  
           __end_of_getRGBCval 149A              ??_color_read_Blue 0007                   _TxBufReadCnt 009E  
                   vfpfcnvrt@c 0017                      copy_data0 163A      __end_of_sendStringSerial4 13EE  
__end_of_I2C_2_Master_RepStart 186E             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 001A                       __Lrparam 0000  
                   vfprintf@fp 0018                     ?_vfpfcnvrt 000B            __end_of_reset_timer 188C  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001E  
                   sprintf@ret 0021                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
           __end_of_initUSART4 1840                       __ptext10 138C                       __ptext11 1840  
                     __ptext20 1668                       __ptext12 1822                       __ptext21 16DE  
                     __ptext13 12FC                       __ptext30 1882                       __ptext22 1802  
                     __ptext14 1444                       __ptext23 1858                       __ptext15 149A  
                     __ptext24 186E                       __ptext16 14EA                       __ptext25 1878  
                     __ptext17 153A                       __ptext26 1794                       __ptext18 158A  
                     __ptext27 1740                       __ptext19 1864                       __ptext28 1712  
                     __ptext29 17BC                    getRGBCval@p 000C            main@measured_colour 0045  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005F                       _vfprintf 13EE  
                   _INTCONbits 0FF2                       intlevel2 0000                      sprintf@ap 0023  
                 _topGearRight 00DC              _manoeuvre_pointer 00D8                    _reset_timer 1882  
                  ??_vfpfcnvrt 000E               _color_click_init 16DE          sendIntSerial4@integer 0030  
                  _topGearLeft 00DD                       sprintf@f 0024                       sprintf@s 001C  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                _trail_manoeuvre 00A2  
                  _return_flag 009C                _manoeuvre_count 009B                     _TX4STAbits 0EE8  
              _sendCharSerial4 1840  
