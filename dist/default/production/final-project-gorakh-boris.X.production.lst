

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 18:22:48 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 18/08/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F67K40 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   001684                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _turnRight90Delay
    85   001684  00AF               	dw	175
    86                           
    87                           ;initializer for _turnLeft90Delay
    88   001686  00AF               	dw	175
    89                           
    90                           ;initializer for _turningGear
    91   001688  2A                 	db	42
    92                           
    93                           ;initializer for _topGearRight
    94   001689  20                 	db	32
    95                           
    96                           ;initializer for _topGearLeft
    97   00168A  1E                 	db	30
    98                           
    99                           ;initializer for _rampDelay
   100   00168B  08                 	db	8
   101                           
   102                           	psect	idataBANK0
   103   001666                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _squareDelay
   107   001666  012C               	dw	300
   108                           
   109                           ;initializer for _headbuttDelay
   110   001668  0046               	dw	70
   111                           
   112                           ;initializer for _turn180Delay
   113   00166A  01FE               	dw	510
   114                           
   115                           ;initializer for _turnRight135Delay
   116   00166C  012C               	dw	300
   117                           
   118                           ;initializer for _turnLeft135Delay
   119   00166E  012C               	dw	300
   120   000000                     _T0CON0bits	set	4053
   121   000000                     _T0CON1bits	set	4054
   122   000000                     _TX4REG	set	3812
   123   000000                     _RC4STAbits	set	3815
   124   000000                     _SP4BRGH	set	3814
   125   000000                     _TMR0H	set	4052
   126   000000                     _LATEbits	set	3965
   127   000000                     _TRISEbits	set	3973
   128   000000                     _LATGbits	set	3967
   129   000000                     _TRISGbits	set	3975
   130   000000                     _LATFbits	set	3966
   131   000000                     _LATHbits	set	3968
   132   000000                     _TRISFbits	set	3974
   133   000000                     _TRISHbits	set	3976
   134   000000                     _SSP2CON2bits	set	3802
   135   000000                     _RX4PPS	set	3605
   136   000000                     _SSP2CLKPPS	set	3612
   137   000000                     _SSP2DATPPS	set	3613
   138   000000                     _RC7PPS	set	3689
   139   000000                     _RE2PPS	set	3700
   140   000000                     _LATAbits	set	3961
   141   000000                     _LATDbits	set	3964
   142   000000                     _TRISDbits	set	3972
   143   000000                     _T2PR	set	4028
   144   000000                     _T2CONbits	set	4029
   145   000000                     _CCPR2H	set	4006
   146   000000                     _CCPR1H	set	4010
   147   000000                     _TRISCbits	set	3971
   148   000000                     _TRISAbits	set	3969
   149   000000                     _LATCbits	set	3963
   150   000000                     _RE4PPS	set	3702
   151   000000                     _RG6PPS	set	3720
   152   000000                     _RD5PPS	set	3695
   153   000000                     _ANSELDbits	set	3751
   154   000000                     _SSP2ADD	set	3798
   155   000000                     _SSP2CON1bits	set	3801
   156   000000                     _CCPR4H	set	3873
   157   000000                     _CCPR3H	set	3877
   158   000000                     _TMR0L	set	4051
   159   000000                     _T2CLKCONbits	set	4031
   160   000000                     _T2HLTbits	set	4030
   161   000000                     _CCP1CONbits	set	4011
   162   000000                     _CCPTMRS0bits	set	4013
   163   000000                     _CCP2CONbits	set	4007
   164   000000                     _CCP3CONbits	set	3878
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _RC4REG	set	3811
   167   000000                     _SP4BRGL	set	3813
   168   000000                     _TX4STAbits	set	3816
   169   000000                     _BAUD4CONbits	set	3817
   170   000000                     _SSP2CON2	set	3802
   171   000000                     _SSP2STAT	set	3800
   172   000000                     _SSP2BUF	set	3797
   173   000000                     _PIE0bits	set	3625
   174   000000                     _PIE4bits	set	3629
   175   000000                     _PIR4bits	set	3639
   176   000000                     _RC0PPS	set	3682
   177   000000                     _RD6PPS	set	3696
   178   000000                     _PIR0bits	set	3635
   179   000000                     _INTCONbits	set	4082
   180                           
   181                           	psect	smallconst
   182   000E00                     __psmallconst:
   183                           	callstack 0
   184   000E00  00                 	db	0
   185   000E01                     STR_1:
   186                           
   187                           ; BSR set to: 14
   188   000E01  25                 	db	37
   189   000E02  64                 	db	100	;'d'
   190   000E03  20                 	db	32
   191   000E04  0D                 	db	13
   192   000E05  00                 	db	0
   193   000E06  00                 	db	0	; dummy byte at the end
   194   000000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198   0013B6                     __pcinit:
   199                           	callstack 0
   200   0013B6                     start_initialization:
   201                           	callstack 0
   202   0013B6                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to BANK0 (10 bytes)
   206                           ; load TBLPTR registers with __pidataBANK0
   207   0013B6  0E66               	movlw	low __pidataBANK0
   208   0013B8  6EF6               	movwf	tblptrl,c
   209   0013BA  0E16               	movlw	high __pidataBANK0
   210   0013BC  6EF7               	movwf	tblptrh,c
   211   0013BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   212   0013C0  6EF8               	movwf	tblptru,c
   213   0013C2  EE00  F0D4         	lfsr	0,__pdataBANK0
   214   0013C6  EE10 F00A          	lfsr	1,10
   215   0013CA                     copy_data0:
   216   0013CA  0009               	tblrd		*+
   217   0013CC  CFF5 FFEE          	movff	tablat,postinc0
   218   0013D0  50E5               	movf	postdec1,w,c
   219   0013D2  50E1               	movf	fsr1l,w,c
   220   0013D4  E1FA               	bnz	copy_data0
   221                           
   222                           ; Initialize objects allocated to COMRAM (8 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224   0013D6  0E84               	movlw	low __pidataCOMRAM
   225   0013D8  6EF6               	movwf	tblptrl,c
   226   0013DA  0E16               	movlw	high __pidataCOMRAM
   227   0013DC  6EF7               	movwf	tblptrh,c
   228   0013DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229   0013E0  6EF8               	movwf	tblptru,c
   230   0013E2  EE00  F052         	lfsr	0,__pdataCOMRAM
   231   0013E6  EE10 F008          	lfsr	1,8
   232   0013EA                     copy_data1:
   233   0013EA  0009               	tblrd		*+
   234   0013EC  CFF5 FFEE          	movff	tablat,postinc0
   235   0013F0  50E5               	movf	postdec1,w,c
   236   0013F2  50E1               	movf	fsr1l,w,c
   237   0013F4  E1FA               	bnz	copy_data1
   238                           
   239                           ; Clear objects allocated to BANK0 (116 bytes)
   240   0013F6  EE00  F060         	lfsr	0,__pbssBANK0
   241   0013FA  0E74               	movlw	116
   242   0013FC                     clear_0:
   243   0013FC  6AEE               	clrf	postinc0,c
   244   0013FE  06E8               	decf	wreg,f,c
   245   001400  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to COMRAM (5 bytes)
   248   001402  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   249   001404  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   250   001406  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   251   001408  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   252   00140A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   253   00140C                     end_of_initialization:
   254                           	callstack 0
   255   00140C                     __end_of__initialization:
   256                           	callstack 0
   257   00140C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   258   00140E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   259   001410  0100               	movlb	0
   260   001412  EFF8  F008         	goto	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMRAM
   263   00005A                     __pbssCOMRAM:
   264                           	callstack 0
   265   00005A                     _flags:
   266                           	callstack 0
   267   00005A                     	ds	1
   268   00005B                     _TxBufReadCnt:
   269                           	callstack 0
   270   00005B                     	ds	1
   271   00005C                     _TxBufWriteCnt:
   272                           	callstack 0
   273   00005C                     	ds	1
   274   00005D                     _RxBufReadCnt:
   275                           	callstack 0
   276   00005D                     	ds	1
   277   00005E                     _RxBufWriteCnt:
   278                           	callstack 0
   279   00005E                     	ds	1
   280                           
   281                           	psect	dataCOMRAM
   282   000052                     __pdataCOMRAM:
   283                           	callstack 0
   284   000052                     _turnRight90Delay:
   285                           	callstack 0
   286   000052                     	ds	2
   287   000054                     _turnLeft90Delay:
   288                           	callstack 0
   289   000054                     	ds	2
   290   000056                     _turningGear:
   291                           	callstack 0
   292   000056                     	ds	1
   293   000057                     _topGearRight:
   294                           	callstack 0
   295   000057                     	ds	1
   296   000058                     _topGearLeft:
   297                           	callstack 0
   298   000058                     	ds	1
   299   000059                     _rampDelay:
   300                           	callstack 0
   301   000059                     	ds	1
   302                           
   303                           	psect	bssBANK0
   304   000060                     __pbssBANK0:
   305                           	callstack 0
   306   000060                     _EUSART4TXbuf:
   307                           	callstack 0
   308   000060                     	ds	60
   309   00009C                     _dbuf:
   310                           	callstack 0
   311   00009C                     	ds	32
   312   0000BC                     _EUSART4RXbuf:
   313                           	callstack 0
   314   0000BC                     	ds	20
   315   0000D0                     _width:
   316                           	callstack 0
   317   0000D0                     	ds	2
   318   0000D2                     _prec:
   319                           	callstack 0
   320   0000D2                     	ds	2
   321                           
   322                           	psect	dataBANK0
   323   0000D4                     __pdataBANK0:
   324                           	callstack 0
   325   0000D4                     _squareDelay:
   326                           	callstack 0
   327   0000D4                     	ds	2
   328   0000D6                     _headbuttDelay:
   329                           	callstack 0
   330   0000D6                     	ds	2
   331   0000D8                     _turn180Delay:
   332                           	callstack 0
   333   0000D8                     	ds	2
   334   0000DA                     _turnRight135Delay:
   335                           	callstack 0
   336   0000DA                     	ds	2
   337   0000DC                     _turnLeft135Delay:
   338                           	callstack 0
   339   0000DC                     	ds	2
   340                           
   341                           	psect	cstackCOMRAM
   342   000001                     __pcstackCOMRAM:
   343                           	callstack 0
   344   000001                     ??_lights_flashing:
   345   000001                     ??_I2C_2_Master_Idle:
   346   000001                     ?___awdiv:
   347                           	callstack 0
   348   000001                     ?___awmod:
   349                           	callstack 0
   350   000001                     sendCharSerial4@charToSend:
   351                           	callstack 0
   352   000001                     initDCmotorsPWM@PWMperiod:
   353                           	callstack 0
   354   000001                     ___awdiv@dividend:
   355                           	callstack 0
   356   000001                     ___awmod@dividend:
   357                           	callstack 0
   358   000001                     fputc@c:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362   000001                     	ds	1
   363   000002                     I2C_2_Master_Write@data_byte:
   364                           	callstack 0
   365   000002                     sendStringSerial4@string:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x1
   369   000002                     	ds	1
   370   000003                     color_writetoaddr@value:
   371                           	callstack 0
   372   000003                     fputc@fp:
   373                           	callstack 0
   374   000003                     ___awdiv@divisor:
   375                           	callstack 0
   376   000003                     ___awmod@divisor:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380   000003                     	ds	1
   381   000004                     ??_fputc:
   382   000004                     color_writetoaddr@address:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x3
   386   000004                     	ds	1
   387   000005                     ??_color_click_init:
   388   000005                     ___awdiv@counter:
   389                           	callstack 0
   390   000005                     ___awmod@counter:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394   000005                     	ds	1
   395   000006                     ___awdiv@sign:
   396                           	callstack 0
   397   000006                     ___awmod@sign:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x5
   401   000006                     	ds	1
   402   000007                     ?_abs:
   403                           	callstack 0
   404   000007                     ___awdiv@quotient:
   405                           	callstack 0
   406   000007                     abs@a:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x6
   410   000007                     	ds	2
   411   000009                     ??_abs:
   412                           
   413                           ; 1 bytes @ 0x8
   414   000009                     	ds	2
   415   00000B                     vfpfcnvrt@fp:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xA
   419   00000B                     	ds	1
   420   00000C                     vfpfcnvrt@fmt:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xB
   424   00000C                     	ds	1
   425   00000D                     vfpfcnvrt@ap:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xC
   429   00000D                     	ds	1
   430   00000E                     ??_vfpfcnvrt:
   431                           
   432                           ; 1 bytes @ 0xD
   433   00000E                     	ds	1
   434   00000F                     vfpfcnvrt@done:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0xE
   438   00000F                     	ds	1
   439   000010                     vfpfcnvrt@cp:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0xF
   443   000010                     	ds	1
   444   000011                     vfpfcnvrt@convarg:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x10
   448   000011                     	ds	4
   449   000015                     vfpfcnvrt@c:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x14
   453   000015                     	ds	1
   454   000016                     ?_vfprintf:
   455                           	callstack 0
   456   000016                     vfprintf@fp:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x15
   460   000016                     	ds	1
   461   000017                     vfprintf@fmt:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x16
   465   000017                     	ds	1
   466   000018                     vfprintf@ap:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x17
   470   000018                     	ds	1
   471   000019                     vfprintf@cfmt:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x18
   475   000019                     	ds	1
   476   00001A                     ?_sprintf:
   477                           	callstack 0
   478   00001A                     sprintf@s:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x19
   482   00001A                     	ds	1
   483   00001B                     sprintf@fmt:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1A
   487   00001B                     	ds	3
   488   00001E                     sprintf@ap:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x1D
   492   00001E                     	ds	1
   493   00001F                     sprintf@f:
   494                           	callstack 0
   495                           
   496                           ; 12 bytes @ 0x1E
   497   00001F                     	ds	12
   498   00002B                     sendIntSerial4@integer:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x2A
   502   00002B                     	ds	2
   503   00002D                     sendIntSerial4@string:
   504                           	callstack 0
   505                           
   506                           ; 17 bytes @ 0x2C
   507   00002D                     	ds	17
   508   00003E                     ??_main:
   509                           
   510                           ; 1 bytes @ 0x3D
   511   00003E                     	ds	2
   512   000040                     main@motorL:
   513                           	callstack 0
   514                           
   515                           ; 9 bytes @ 0x3F
   516   000040                     	ds	9
   517   000049                     main@motorR:
   518                           	callstack 0
   519                           
   520                           ; 9 bytes @ 0x48
   521   000049                     	ds	9
   522                           
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 26 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  motorR          9   72[COMRAM] struct DC_motor
   533 ;;  motorL          9   63[COMRAM] struct DC_motor
   534 ;;  PWMcycle        2    0        unsigned int 
   535 ;;  backtrack       1    0        unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   546 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   548 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   549 ;;Total ram usage:       20 bytes
   550 ;; Hardware stack levels required when called: 7
   551 ;; This function calls:
   552 ;;		_Timer0_init
   553 ;;		_buggy_lights_init
   554 ;;		_color_click_init
   555 ;;		_initDCmotorsPWM
   556 ;;		_initUSART4
   557 ;;		_lights_flashing
   558 ;;		_sendIntSerial4
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565   0011F0                     __ptext0:
   566                           	callstack 0
   567   0011F0                     _main:
   568                           	callstack 24
   569   0011F0                     
   570                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   571   0011F0  0E52               	movlw	82
   572   0011F2  6E3F               	movwf	(??_main+1)^0,c
   573   0011F4  0E2B               	movlw	43
   574   0011F6  6E3E               	movwf	??_main^0,c
   575   0011F8  0E00               	movlw	0
   576   0011FA                     u1707:
   577   0011FA  2EE8               	decfsz	wreg,f,c
   578   0011FC  D7FE               	bra	u1707
   579   0011FE  2E3E               	decfsz	??_main^0,f,c
   580   001200  D7FC               	bra	u1707
   581   001202  2E3F               	decfsz	(??_main+1)^0,f,c
   582   001204  D7FA               	bra	u1707
   583   001206  D000               	nop2	
   584   001208                     
   585                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   586   001208  0E00               	movlw	0
   587   00120A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   588   00120C  0E63               	movlw	99
   589   00120E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   590   001210  EC93  F009         	call	_initDCmotorsPWM	;wreg free
   591   001214                     
   592                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   593   001214  0E00               	movlw	0
   594   001216  6E40               	movwf	main@motorL^0,c
   595   001218                     
   596                           ;main.c: 35:     motorL.direction = 1;
   597   001218  0E01               	movlw	1
   598   00121A  6E41               	movwf	(main@motorL+1)^0,c
   599   00121C                     
   600                           ;main.c: 36:     motorL.brakemode = 1;
   601   00121C  0E01               	movlw	1
   602   00121E  6E42               	movwf	(main@motorL+2)^0,c
   603   001220                     
   604                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   605   001220  0E00               	movlw	0
   606   001222  6E44               	movwf	(main@motorL+4)^0,c
   607   001224  0E63               	movlw	99
   608   001226  6E43               	movwf	(main@motorL+3)^0,c
   609   001228                     
   610                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   611   001228  0EAA               	movlw	170
   612   00122A  6E45               	movwf	(main@motorL+5)^0,c
   613   00122C  0E0F               	movlw	15
   614   00122E  6E46               	movwf	(main@motorL+6)^0,c
   615   001230                     
   616                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   617   001230  0EA6               	movlw	166
   618   001232  6E47               	movwf	(main@motorL+7)^0,c
   619   001234  0E0F               	movlw	15
   620   001236  6E48               	movwf	(main@motorL+8)^0,c
   621   001238                     
   622                           ;main.c: 41:     motorR.power = 0;
   623   001238  0E00               	movlw	0
   624   00123A  6E49               	movwf	main@motorR^0,c
   625   00123C                     
   626                           ;main.c: 42:     motorR.direction = 1;
   627   00123C  0E01               	movlw	1
   628   00123E  6E4A               	movwf	(main@motorR+1)^0,c
   629   001240                     
   630                           ;main.c: 43:     motorR.brakemode = 1;
   631   001240  0E01               	movlw	1
   632   001242  6E4B               	movwf	(main@motorR+2)^0,c
   633   001244                     
   634                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   635   001244  0E00               	movlw	0
   636   001246  6E4D               	movwf	(main@motorR+4)^0,c
   637   001248  0E63               	movlw	99
   638   00124A  6E4C               	movwf	(main@motorR+3)^0,c
   639   00124C                     
   640                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   641   00124C  0E25               	movlw	37
   642   00124E  6E4E               	movwf	(main@motorR+5)^0,c
   643   001250  0E0F               	movlw	15
   644   001252  6E4F               	movwf	(main@motorR+6)^0,c
   645   001254                     
   646                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   647   001254  0E21               	movlw	33
   648   001256  6E50               	movwf	(main@motorR+7)^0,c
   649   001258  0E0F               	movlw	15
   650   00125A  6E51               	movwf	(main@motorR+8)^0,c
   651   00125C                     
   652                           ;main.c: 48:     buggy_lights_init();
   653   00125C  EC0B  F00A         	call	_buggy_lights_init	;wreg free
   654   001260                     
   655                           ;main.c: 49:     color_click_init();
   656   001260  EC87  F00A         	call	_color_click_init	;wreg free
   657   001264                     
   658                           ;main.c: 50:     initUSART4();
   659   001264  EC12  F00B         	call	_initUSART4	;wreg free
   660   001268                     
   661                           ;main.c: 51:     Timer0_init();
   662   001268  ECDF  F00A         	call	_Timer0_init	;wreg free
   663   00126C                     l2454:
   664                           
   665                           ;main.c: 65:         sendIntSerial4((int)TMR0L);
   666   00126C  CFD3 F02B          	movff	4051,sendIntSerial4@integer	;volatile
   667   001270  6A2C               	clrf	(sendIntSerial4@integer+1)^0,c
   668   001272  EC03  F00B         	call	_sendIntSerial4	;wreg free
   669   001276                     
   670                           ;main.c: 66:         sendIntSerial4((int)TMR0H);
   671   001276  CFD4 F02B          	movff	4052,sendIntSerial4@integer	;volatile
   672   00127A  6A2C               	clrf	(sendIntSerial4@integer+1)^0,c
   673   00127C  EC03  F00B         	call	_sendIntSerial4	;wreg free
   674   001280                     
   675                           ;main.c: 67:         lights_flashing();
   676   001280  EC46  F009         	call	_lights_flashing	;wreg free
   677   001284  EF36  F009         	goto	l2454
   678   001288  EF10  F000         	goto	start
   679   00128C                     __end_of_main:
   680                           	callstack 0
   681                           
   682 ;; *************** function _sendIntSerial4 *****************
   683 ;; Defined at:
   684 ;;		line 44 in file "serial.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  integer         2   42[COMRAM] int 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  string         17   44[COMRAM] unsigned char [17]
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;Total ram usage:       19 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 6
   705 ;; This function calls:
   706 ;;		_sendStringSerial4
   707 ;;		_sprintf
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text1
   714   001606                     __ptext1:
   715                           	callstack 0
   716   001606                     _sendIntSerial4:
   717                           	callstack 24
   718   001606                     
   719                           ;serial.c: 45:     char string[sizeof(int) * 8 + 1];;serial.c: 46:     sprintf(string, "
      +                          %d \r", integer);
   720   001606  0E2D               	movlw	low sendIntSerial4@string
   721   001608  6E1A               	movwf	sprintf@s^0,c
   722   00160A  0E01               	movlw	low STR_1
   723   00160C  6E1B               	movwf	sprintf@fmt^0,c
   724   00160E  C02B  F01C         	movff	sendIntSerial4@integer,?_sprintf+2
   725   001612  C02C  F01D         	movff	sendIntSerial4@integer+1,?_sprintf+3
   726   001616  EC53  F00A         	call	_sprintf	;wreg free
   727   00161A                     
   728                           ;serial.c: 47:     sendStringSerial4(string);
   729   00161A  0E2D               	movlw	low sendIntSerial4@string
   730   00161C  6E02               	movwf	sendStringSerial4@string^0,c
   731   00161E  ECA1  F00A         	call	_sendStringSerial4	;wreg free
   732   001622  0012               	return		;funcret
   733   001624                     __end_of_sendIntSerial4:
   734                           	callstack 0
   735                           
   736 ;; *************** function _sprintf *****************
   737 ;; Defined at:
   738 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  s               1   25[COMRAM] PTR unsigned char 
   741 ;;		 -> sendIntSerial4@string(17), 
   742 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   743 ;;		 -> STR_1(5), 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  f              12   30[COMRAM] struct _IO_FILE
   746 ;;  ret             2    0        int 
   747 ;;  ap              1   29[COMRAM] PTR void [1]
   748 ;;		 -> ?_sprintf(2), 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  2   25[COMRAM] int 
   751 ;; Registers used:
   752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   761 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   762 ;;Total ram usage:       17 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 5
   765 ;; This function calls:
   766 ;;		_vfprintf
   767 ;; This function is called by:
   768 ;;		_sendIntSerial4
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text2
   773   0014A6                     __ptext2:
   774                           	callstack 0
   775   0014A6                     _sprintf:
   776                           	callstack 24
   777   0014A6  0E1C               	movlw	low (?_sprintf+2)
   778   0014A8  6E1E               	movwf	sprintf@ap^0,c
   779   0014AA  C01A  F01F         	movff	sprintf@s,sprintf@f
   780   0014AE  0E00               	movlw	0
   781   0014B0  6E23               	movwf	(sprintf@f+4)^0,c
   782   0014B2  0E00               	movlw	0
   783   0014B4  6E22               	movwf	(sprintf@f+3)^0,c
   784   0014B6  0E00               	movlw	0
   785   0014B8  6E2A               	movwf	(sprintf@f+11)^0,c
   786   0014BA  0E00               	movlw	0
   787   0014BC  6E29               	movwf	(sprintf@f+10)^0,c
   788   0014BE  0E1F               	movlw	low sprintf@f
   789   0014C0  6E16               	movwf	vfprintf@fp^0,c
   790   0014C2  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   791   0014C6  0E1E               	movlw	low sprintf@ap
   792   0014C8  6E18               	movwf	vfprintf@ap^0,c
   793   0014CA  EC32  F00A         	call	_vfprintf	;wreg free
   794   0014CE  501A               	movf	sprintf@s^0,w,c
   795   0014D0  2422               	addwf	(sprintf@f+3)^0,w,c
   796   0014D2  6ED9               	movwf	fsr2l,c
   797   0014D4  6ADA               	clrf	fsr2h,c
   798   0014D6  6ADF               	clrf	indf2,c
   799   0014D8  0012               	return		;funcret
   800   0014DA                     __end_of_sprintf:
   801                           	callstack 0
   802                           
   803 ;; *************** function _vfprintf *****************
   804 ;; Defined at:
   805 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
   808 ;;		 -> sprintf@f(12), 
   809 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   810 ;;		 -> STR_1(5), 
   811 ;;  ap              1   23[COMRAM] PTR PTR void 
   812 ;;		 -> sprintf@ap(1), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   815 ;;		 -> STR_1(5), 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2   21[COMRAM] int 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;Total ram usage:        4 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 4
   832 ;; This function calls:
   833 ;;		_vfpfcnvrt
   834 ;; This function is called by:
   835 ;;		_sprintf
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text3
   840   001464                     __ptext3:
   841                           	callstack 0
   842   001464                     _vfprintf:
   843                           	callstack 24
   844   001464                     
   845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   846   001464  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
   847                           
   848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   849   001468  EF3E  F00A         	goto	l2190
   850   00146C                     l2188:
   851                           
   852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   853   00146C  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
   854   001470  0E19               	movlw	low vfprintf@cfmt
   855   001472  6E0C               	movwf	vfpfcnvrt@fmt^0,c
   856   001474  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
   857   001478  EC04  F007         	call	_vfpfcnvrt	;wreg free
   858   00147C                     l2190:
   859                           
   860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   861   00147C  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
   862   001480                     	if	1	;There is more than 1 active tblptr byte
   863   001480  0E0E               	movlw	high __smallconst
   864   001482  6EF7               	movwf	tblptrh,c
   865   001484                     	endif
   866   001484                     	if	0	;tblptru may be non-zero
   867   001484                     	endif
   868   001484                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   869   001484  0E00               	movlw	low (__smallconst shr (0+16))
   870   001486  6EF8               	movwf	tblptru,c
   871   001488                     	endif
   872   001488  0008               	tblrd		*
   873   00148A  50F5               	movf	tablat,w,c
   874   00148C  0900               	iorlw	0
   875   00148E  A4D8               	btfss	status,2,c
   876   001490  EF4C  F00A         	goto	u1041
   877   001494  EF4E  F00A         	goto	u1040
   878   001498                     u1041:
   879   001498  EF36  F00A         	goto	l2188
   880   00149C                     u1040:
   881   00149C                     
   882                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   883   00149C  0E00               	movlw	0
   884   00149E  6E17               	movwf	(?_vfprintf+1)^0,c
   885   0014A0  0E00               	movlw	0
   886   0014A2  6E16               	movwf	?_vfprintf^0,c
   887   0014A4  0012               	return		;funcret
   888   0014A6                     __end_of_vfprintf:
   889                           	callstack 0
   890                           
   891 ;; *************** function _vfpfcnvrt *****************
   892 ;; Defined at:
   893 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
   896 ;;		 -> sprintf@f(12), 
   897 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
   898 ;;		 -> vfprintf@cfmt(1), 
   899 ;;  ap              1   12[COMRAM] PTR PTR void 
   900 ;;		 -> sprintf@ap(1), 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  convarg         4   16[COMRAM] struct .
   903 ;;  c               1   20[COMRAM] unsigned char 
   904 ;;  cp              1   15[COMRAM] PTR unsigned char 
   905 ;;		 -> STR_1(5), 
   906 ;;  done            1   14[COMRAM] _Bool 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;Total ram usage:       11 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 3
   923 ;; This function calls:
   924 ;;		___awdiv
   925 ;;		___awmod
   926 ;;		_abs
   927 ;;		_fputc
   928 ;; This function is called by:
   929 ;;		_vfprintf
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text4
   934   000E08                     __ptext4:
   935                           	callstack 0
   936   000E08                     _vfpfcnvrt:
   937                           	callstack 24
   938   000E08                     
   939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   940   000E08  500C               	movf	vfpfcnvrt@fmt^0,w,c
   941   000E0A  6ED9               	movwf	fsr2l,c
   942   000E0C  6ADA               	clrf	fsr2h,c
   943   000E0E  CFDF FFF6          	movff	indf2,tblptrl
   944   000E12                     	if	1	;There is more than 1 active tblptr byte
   945   000E12  0E0E               	movlw	high __smallconst
   946   000E14  6EF7               	movwf	tblptrh,c
   947   000E16                     	endif
   948   000E16                     	if	0	;tblptru may be non-zero
   949   000E16                     	endif
   950   000E16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   951   000E16  0E00               	movlw	low (__smallconst shr (0+16))
   952   000E18  6EF8               	movwf	tblptru,c
   953   000E1A                     	endif
   954   000E1A  0008               	tblrd		*
   955   000E1C  50F5               	movf	tablat,w,c
   956   000E1E  0A25               	xorlw	37
   957   000E20  A4D8               	btfss	status,2,c
   958   000E22  EF15  F007         	goto	u921
   959   000E26  EF17  F007         	goto	u920
   960   000E2A                     u921:
   961   000E2A  EFD5  F007         	goto	l2164
   962   000E2E                     u920:
   963   000E2E                     
   964                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   965   000E2E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   966   000E30  6ED9               	movwf	fsr2l,c
   967   000E32  6ADA               	clrf	fsr2h,c
   968   000E34  2ADF               	incf	indf2,f,c
   969   000E36                     
   970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   971   000E36  0E00               	movlw	0
   972   000E38  0100               	movlb	0	; () banked
   973   000E3A  6FD1               	movwf	(_width+1)& (0+255),b
   974   000E3C  0E00               	movlw	0
   975   000E3E  6FD0               	movwf	_width& (0+255),b
   976   000E40  C0D0  F05A         	movff	_width,_flags
   977   000E44                     
   978                           ; BSR set to: 0
   979                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   980   000E44  69D2               	setf	_prec& (0+255),b
   981   000E46  69D3               	setf	(_prec+1)& (0+255),b
   982   000E48                     
   983                           ; BSR set to: 0
   984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   985   000E48  500C               	movf	vfpfcnvrt@fmt^0,w,c
   986   000E4A  6ED9               	movwf	fsr2l,c
   987   000E4C  6ADA               	clrf	fsr2h,c
   988   000E4E  50DF               	movf	indf2,w,c
   989   000E50  6E10               	movwf	vfpfcnvrt@cp^0,c
   990   000E52                     
   991                           ; BSR set to: 0
   992                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   993   000E52  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   994   000E56                     	if	1	;There is more than 1 active tblptr byte
   995   000E56  0E0E               	movlw	high __smallconst
   996   000E58  6EF7               	movwf	tblptrh,c
   997   000E5A                     	endif
   998   000E5A                     	if	0	;tblptru may be non-zero
   999   000E5A                     	endif
  1000   000E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1001   000E5A  0E00               	movlw	low (__smallconst shr (0+16))
  1002   000E5C  6EF8               	movwf	tblptru,c
  1003   000E5E                     	endif
  1004   000E5E  0008               	tblrd		*
  1005   000E60  50F5               	movf	tablat,w,c
  1006   000E62  0A64               	xorlw	100
  1007   000E64  B4D8               	btfsc	status,2,c
  1008   000E66  EF37  F007         	goto	u931
  1009   000E6A  EF39  F007         	goto	u930
  1010   000E6E                     u931:
  1011   000E6E  EF49  F007         	goto	l2134
  1012   000E72                     u930:
  1013   000E72                     
  1014                           ; BSR set to: 0
  1015   000E72  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1016   000E76                     	if	1	;There is more than 1 active tblptr byte
  1017   000E76  0E0E               	movlw	high __smallconst
  1018   000E78  6EF7               	movwf	tblptrh,c
  1019   000E7A                     	endif
  1020   000E7A                     	if	0	;tblptru may be non-zero
  1021   000E7A                     	endif
  1022   000E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1023   000E7A  0E00               	movlw	low (__smallconst shr (0+16))
  1024   000E7C  6EF8               	movwf	tblptru,c
  1025   000E7E                     	endif
  1026   000E7E  0008               	tblrd		*
  1027   000E80  50F5               	movf	tablat,w,c
  1028   000E82  0A69               	xorlw	105
  1029   000E84  A4D8               	btfss	status,2,c
  1030   000E86  EF47  F007         	goto	u941
  1031   000E8A  EF49  F007         	goto	u940
  1032   000E8E                     u941:
  1033   000E8E  EFCF  F007         	goto	l2160
  1034   000E92                     u940:
  1035   000E92                     l2134:
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1039   000E92  500D               	movf	vfpfcnvrt@ap^0,w,c
  1040   000E94  6ED9               	movwf	fsr2l,c
  1041   000E96  6ADA               	clrf	fsr2h,c
  1042   000E98  0E02               	movlw	2
  1043   000E9A  26DF               	addwf	indf2,f,c
  1044   000E9C  5CDF               	subwf	indf2,w,c
  1045   000E9E  6ED9               	movwf	fsr2l,c
  1046   000EA0  6ADA               	clrf	fsr2h,c
  1047   000EA2  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1048   000EA6  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1049   000EAA                     
  1050                           ; BSR set to: 0
  1051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1052   000EAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1053   000EAC  6ED9               	movwf	fsr2l,c
  1054   000EAE  6ADA               	clrf	fsr2h,c
  1055   000EB0  2810               	incf	vfpfcnvrt@cp^0,w,c
  1056   000EB2  6EDF               	movwf	indf2,c
  1057   000EB4                     
  1058                           ; BSR set to: 0
  1059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1060   000EB4  0E20               	movlw	32
  1061   000EB6  6E15               	movwf	vfpfcnvrt@c^0,c
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1064   000EB8  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1065   000EBA  EF61  F007         	goto	u951
  1066   000EBE  EF64  F007         	goto	u950
  1067   000EC2                     u951:
  1068   000EC2  0E01               	movlw	1
  1069   000EC4  EF65  F007         	goto	u960
  1070   000EC8                     u950:
  1071   000EC8  0E00               	movlw	0
  1072   000ECA                     u960:
  1073   000ECA  6E0F               	movwf	vfpfcnvrt@done^0,c
  1074   000ECC                     l2140:
  1075                           
  1076                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1077   000ECC  0615               	decf	vfpfcnvrt@c^0,f,c
  1078   000ECE  5015               	movf	vfpfcnvrt@c^0,w,c
  1079   000ED0  0F9C               	addlw	low _dbuf
  1080   000ED2  6ED9               	movwf	fsr2l,c
  1081   000ED4  6ADA               	clrf	fsr2h,c
  1082   000ED6  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1083   000EDA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1084   000EDE  0E00               	movlw	0
  1085   000EE0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1086   000EE2  0E0A               	movlw	10
  1087   000EE4  6E03               	movwf	___awmod@divisor^0,c
  1088   000EE6  EC4B  F008         	call	___awmod	;wreg free
  1089   000EEA  C001  F007         	movff	?___awmod,abs@a
  1090   000EEE  C002  F008         	movff	?___awmod+1,abs@a+1
  1091   000EF2  EC6D  F00A         	call	_abs	;wreg free
  1092   000EF6  5007               	movf	?_abs^0,w,c
  1093   000EF8  0F30               	addlw	48
  1094   000EFA  6EDF               	movwf	indf2,c
  1095   000EFC                     
  1096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1097   000EFC  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1098   000F00  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1099   000F04  0E00               	movlw	0
  1100   000F06  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1101   000F08  0E0A               	movlw	10
  1102   000F0A  6E03               	movwf	___awdiv@divisor^0,c
  1103   000F0C  ECE9  F007         	call	___awdiv	;wreg free
  1104   000F10  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1105   000F14  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1106   000F18                     
  1107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1108   000F18  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1109   000F1A  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1110   000F1C  B4D8               	btfsc	status,2,c
  1111   000F1E  EF93  F007         	goto	u971
  1112   000F22  EF95  F007         	goto	u970
  1113   000F26                     u971:
  1114   000F26  EF9D  F007         	goto	l2148
  1115   000F2A                     u970:
  1116   000F2A  5015               	movf	vfpfcnvrt@c^0,w,c
  1117   000F2C  A4D8               	btfss	status,2,c
  1118   000F2E  EF9B  F007         	goto	u981
  1119   000F32  EF9D  F007         	goto	u980
  1120   000F36                     u981:
  1121   000F36  EF66  F007         	goto	l2140
  1122   000F3A                     u980:
  1123   000F3A                     l2148:
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1126   000F3A  5015               	movf	vfpfcnvrt@c^0,w,c
  1127   000F3C  B4D8               	btfsc	status,2,c
  1128   000F3E  EFA3  F007         	goto	u991
  1129   000F42  EFA5  F007         	goto	u990
  1130   000F46                     u991:
  1131   000F46  EFC4  F007         	goto	l2158
  1132   000F4A                     u990:
  1133   000F4A  500F               	movf	vfpfcnvrt@done^0,w,c
  1134   000F4C  B4D8               	btfsc	status,2,c
  1135   000F4E  EFAB  F007         	goto	u1001
  1136   000F52  EFAD  F007         	goto	u1000
  1137   000F56                     u1001:
  1138   000F56  EFC4  F007         	goto	l2158
  1139   000F5A                     u1000:
  1140   000F5A                     
  1141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1142   000F5A  0615               	decf	vfpfcnvrt@c^0,f,c
  1143   000F5C  5015               	movf	vfpfcnvrt@c^0,w,c
  1144   000F5E  0F9C               	addlw	low _dbuf
  1145   000F60  6ED9               	movwf	fsr2l,c
  1146   000F62  6ADA               	clrf	fsr2h,c
  1147   000F64  0E2D               	movlw	45
  1148   000F66  6EDF               	movwf	indf2,c
  1149   000F68  EFC4  F007         	goto	l2158
  1150   000F6C                     l2154:
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1153   000F6C  5015               	movf	vfpfcnvrt@c^0,w,c
  1154   000F6E  0F9C               	addlw	low _dbuf
  1155   000F70  6ED9               	movwf	fsr2l,c
  1156   000F72  6ADA               	clrf	fsr2h,c
  1157   000F74  50DF               	movf	indf2,w,c
  1158   000F76  6E0E               	movwf	??_vfpfcnvrt^0,c
  1159   000F78  500E               	movf	??_vfpfcnvrt^0,w,c
  1160   000F7A  6E01               	movwf	fputc@c^0,c
  1161   000F7C  6A02               	clrf	(fputc@c+1)^0,c
  1162   000F7E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1163   000F82  ECA3  F008         	call	_fputc	;wreg free
  1164   000F86  2A15               	incf	vfpfcnvrt@c^0,f,c
  1165   000F88                     l2158:
  1166                           
  1167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1168   000F88  0E20               	movlw	32
  1169   000F8A  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1170   000F8C  A4D8               	btfss	status,2,c
  1171   000F8E  EFCB  F007         	goto	u1011
  1172   000F92  EFCD  F007         	goto	u1010
  1173   000F96                     u1011:
  1174   000F96  EFB6  F007         	goto	l2154
  1175   000F9A                     u1010:
  1176   000F9A  EFE8  F007         	goto	l1254
  1177   000F9E                     l2160:
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1180   000F9E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1181   000FA0  6ED9               	movwf	fsr2l,c
  1182   000FA2  6ADA               	clrf	fsr2h,c
  1183   000FA4  2ADF               	incf	indf2,f,c
  1184   000FA6  EFE8  F007         	goto	l1254
  1185   000FAA                     l2164:
  1186                           
  1187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1188   000FAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1189   000FAC  6ED9               	movwf	fsr2l,c
  1190   000FAE  6ADA               	clrf	fsr2h,c
  1191   000FB0  CFDF FFF6          	movff	indf2,tblptrl
  1192   000FB4                     	if	1	;There is more than 1 active tblptr byte
  1193   000FB4  0E0E               	movlw	high __smallconst
  1194   000FB6  6EF7               	movwf	tblptrh,c
  1195   000FB8                     	endif
  1196   000FB8                     	if	0	;tblptru may be non-zero
  1197   000FB8                     	endif
  1198   000FB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1199   000FB8  0E00               	movlw	low (__smallconst shr (0+16))
  1200   000FBA  6EF8               	movwf	tblptru,c
  1201   000FBC                     	endif
  1202   000FBC  0008               	tblrd		*
  1203   000FBE  50F5               	movf	tablat,w,c
  1204   000FC0  6E01               	movwf	fputc@c^0,c
  1205   000FC2  6A02               	clrf	(fputc@c+1)^0,c
  1206   000FC4  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1207   000FC8  ECA3  F008         	call	_fputc	;wreg free
  1208   000FCC  EFCF  F007         	goto	l2160
  1209   000FD0                     l1254:
  1210   000FD0  0012               	return		;funcret
  1211   000FD2                     __end_of_vfpfcnvrt:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _fputc *****************
  1215 ;; Defined at:
  1216 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  c               2    0[COMRAM] int 
  1219 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1220 ;;		 -> sprintf@f(12), 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  2    0[COMRAM] int 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1232 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;Total ram usage:        8 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 2
  1239 ;; This function calls:
  1240 ;;		_putch
  1241 ;; This function is called by:
  1242 ;;		_vfpfcnvrt
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text5
  1247   001146                     __ptext5:
  1248                           	callstack 0
  1249   001146                     _fputc:
  1250                           	callstack 24
  1251   001146  5003               	movf	fputc@fp^0,w,c
  1252   001148  B4D8               	btfsc	status,2,c
  1253   00114A  EFA9  F008         	goto	u871
  1254   00114E  EFAB  F008         	goto	u870
  1255   001152                     u871:
  1256   001152  EFB3  F008         	goto	l2106
  1257   001156                     u870:
  1258   001156  5003               	movf	fputc@fp^0,w,c
  1259   001158  A4D8               	btfss	status,2,c
  1260   00115A  EFB1  F008         	goto	u881
  1261   00115E  EFB3  F008         	goto	u880
  1262   001162                     u881:
  1263   001162  EFB8  F008         	goto	l2108
  1264   001166                     u880:
  1265   001166                     l2106:
  1266   001166  5001               	movf	fputc@c^0,w,c
  1267   001168  EC46  F00B         	call	_putch
  1268   00116C  EFF7  F008         	goto	l1279
  1269   001170                     l2108:
  1270   001170  5003               	movf	fputc@fp^0,w,c
  1271   001172  6ED9               	movwf	fsr2l,c
  1272   001174  6ADA               	clrf	fsr2h,c
  1273   001176  0E0A               	movlw	10
  1274   001178  26D9               	addwf	fsr2l,f,c
  1275   00117A  50DE               	movf	postinc2,w,c
  1276   00117C  10DE               	iorwf	postinc2,w,c
  1277   00117E  B4D8               	btfsc	status,2,c
  1278   001180  EFC4  F008         	goto	u891
  1279   001184  EFC6  F008         	goto	u890
  1280   001188                     u891:
  1281   001188  EFDF  F008         	goto	l2112
  1282   00118C                     u890:
  1283   00118C  5003               	movf	fputc@fp^0,w,c
  1284   00118E  6ED9               	movwf	fsr2l,c
  1285   001190  6ADA               	clrf	fsr2h,c
  1286   001192  0E0A               	movlw	10
  1287   001194  26D9               	addwf	fsr2l,f,c
  1288   001196  5003               	movf	fputc@fp^0,w,c
  1289   001198  6EE1               	movwf	fsr1l,c
  1290   00119A  6AE2               	clrf	fsr1h,c
  1291   00119C  0E03               	movlw	3
  1292   00119E  26E1               	addwf	fsr1l,f,c
  1293   0011A0  50DE               	movf	postinc2,w,c
  1294   0011A2  5CE6               	subwf	postinc1,w,c
  1295   0011A4  50E6               	movf	postinc1,w,c
  1296   0011A6  0A80               	xorlw	128
  1297   0011A8  6E08               	movwf	(??_fputc+4)^0,c
  1298   0011AA  50DE               	movf	postinc2,w,c
  1299   0011AC  0A80               	xorlw	128
  1300   0011AE  5808               	subwfb	(??_fputc+4)^0,w,c
  1301   0011B0  B0D8               	btfsc	status,0,c
  1302   0011B2  EFDD  F008         	goto	u901
  1303   0011B6  EFDF  F008         	goto	u900
  1304   0011BA                     u901:
  1305   0011BA  EFF7  F008         	goto	l1279
  1306   0011BE                     u900:
  1307   0011BE                     l2112:
  1308   0011BE  5003               	movf	fputc@fp^0,w,c
  1309   0011C0  6ED9               	movwf	fsr2l,c
  1310   0011C2  6ADA               	clrf	fsr2h,c
  1311   0011C4  0E03               	movlw	3
  1312   0011C6  26D9               	addwf	fsr2l,f,c
  1313   0011C8  50DF               	movf	indf2,w,c
  1314   0011CA  6E04               	movwf	??_fputc^0,c
  1315   0011CC  5003               	movf	fputc@fp^0,w,c
  1316   0011CE  6ED9               	movwf	fsr2l,c
  1317   0011D0  6ADA               	clrf	fsr2h,c
  1318   0011D2  50DF               	movf	indf2,w,c
  1319   0011D4  2404               	addwf	??_fputc^0,w,c
  1320   0011D6  6ED9               	movwf	fsr2l,c
  1321   0011D8  6ADA               	clrf	fsr2h,c
  1322   0011DA  C001  FFDF         	movff	fputc@c,indf2
  1323   0011DE  5003               	movf	fputc@fp^0,w,c
  1324   0011E0  6ED9               	movwf	fsr2l,c
  1325   0011E2  6ADA               	clrf	fsr2h,c
  1326   0011E4  0E03               	movlw	3
  1327   0011E6  26D9               	addwf	fsr2l,f,c
  1328   0011E8  2ADE               	incf	postinc2,f,c
  1329   0011EA  0E00               	movlw	0
  1330   0011EC  22DD               	addwfc	postdec2,f,c
  1331   0011EE                     l1279:
  1332   0011EE  0012               	return		;funcret
  1333   0011F0                     __end_of_fputc:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _putch *****************
  1337 ;; Defined at:
  1338 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  c               1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  c               1    0[COMRAM] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_fputc
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text6
  1367   00168C                     __ptext6:
  1368                           	callstack 0
  1369   00168C                     _putch:
  1370                           	callstack 24
  1371   00168C  0012               	return		;funcret
  1372   00168E                     __end_of_putch:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _abs *****************
  1376 ;; Defined at:
  1377 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  a               2    6[COMRAM] int 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    6[COMRAM] int 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;Total ram usage:        4 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_vfpfcnvrt
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text7
  1406   0014DA                     __ptext7:
  1407                           	callstack 0
  1408   0014DA                     _abs:
  1409                           	callstack 25
  1410   0014DA  BE08               	btfsc	(abs@a+1)^0,7,c
  1411   0014DC  EF72  F00A         	goto	u911
  1412   0014E0  EF74  F00A         	goto	u910
  1413   0014E4                     u911:
  1414   0014E4  EF7A  F00A         	goto	l1264
  1415   0014E8                     u910:
  1416   0014E8  C007  F007         	movff	abs@a,?_abs
  1417   0014EC  C008  F008         	movff	abs@a+1,?_abs+1
  1418   0014F0  EF86  F00A         	goto	l1267
  1419   0014F4                     l1264:
  1420   0014F4  C007  F009         	movff	abs@a,??_abs
  1421   0014F8  C008  F00A         	movff	abs@a+1,??_abs+1
  1422   0014FC  1E09               	comf	??_abs^0,f,c
  1423   0014FE  1E0A               	comf	(??_abs+1)^0,f,c
  1424   001500  4A09               	infsnz	??_abs^0,f,c
  1425   001502  2A0A               	incf	(??_abs+1)^0,f,c
  1426   001504  C009  F007         	movff	??_abs,?_abs
  1427   001508  C00A  F008         	movff	??_abs+1,?_abs+1
  1428   00150C                     l1267:
  1429   00150C  0012               	return		;funcret
  1430   00150E                     __end_of_abs:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function ___awmod *****************
  1434 ;; Defined at:
  1435 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  dividend        2    0[COMRAM] int 
  1438 ;;  divisor         2    2[COMRAM] int 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  sign            1    5[COMRAM] unsigned char 
  1441 ;;  counter         1    4[COMRAM] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2    0[COMRAM] int 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;Total ram usage:        6 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_vfpfcnvrt
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text8
  1466   001096                     __ptext8:
  1467                           	callstack 0
  1468   001096                     ___awmod:
  1469                           	callstack 25
  1470   001096  0E00               	movlw	0
  1471   001098  6E06               	movwf	___awmod@sign^0,c
  1472   00109A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1473   00109C  EF54  F008         	goto	u810
  1474   0010A0  EF52  F008         	goto	u811
  1475   0010A4                     u811:
  1476   0010A4  EF5A  F008         	goto	l2074
  1477   0010A8                     u810:
  1478   0010A8  6C01               	negf	___awmod@dividend^0,c
  1479   0010AA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1480   0010AC  B0D8               	btfsc	status,0,c
  1481   0010AE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1482   0010B0  0E01               	movlw	1
  1483   0010B2  6E06               	movwf	___awmod@sign^0,c
  1484   0010B4                     l2074:
  1485   0010B4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1486   0010B6  EF61  F008         	goto	u820
  1487   0010BA  EF5F  F008         	goto	u821
  1488   0010BE                     u821:
  1489   0010BE  EF65  F008         	goto	l2078
  1490   0010C2                     u820:
  1491   0010C2  6C03               	negf	___awmod@divisor^0,c
  1492   0010C4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1493   0010C6  B0D8               	btfsc	status,0,c
  1494   0010C8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1495   0010CA                     l2078:
  1496   0010CA  5003               	movf	___awmod@divisor^0,w,c
  1497   0010CC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1498   0010CE  B4D8               	btfsc	status,2,c
  1499   0010D0  EF6C  F008         	goto	u831
  1500   0010D4  EF6E  F008         	goto	u830
  1501   0010D8                     u831:
  1502   0010D8  EF92  F008         	goto	l2094
  1503   0010DC                     u830:
  1504   0010DC  0E01               	movlw	1
  1505   0010DE  6E05               	movwf	___awmod@counter^0,c
  1506   0010E0  EF76  F008         	goto	l2084
  1507   0010E4                     l2082:
  1508   0010E4  90D8               	bcf	status,0,c
  1509   0010E6  3603               	rlcf	___awmod@divisor^0,f,c
  1510   0010E8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1511   0010EA  2A05               	incf	___awmod@counter^0,f,c
  1512   0010EC                     l2084:
  1513   0010EC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1514   0010EE  EF7B  F008         	goto	u841
  1515   0010F2  EF7D  F008         	goto	u840
  1516   0010F6                     u841:
  1517   0010F6  EF72  F008         	goto	l2082
  1518   0010FA                     u840:
  1519   0010FA                     l2086:
  1520   0010FA  5003               	movf	___awmod@divisor^0,w,c
  1521   0010FC  5C01               	subwf	___awmod@dividend^0,w,c
  1522   0010FE  5004               	movf	(___awmod@divisor+1)^0,w,c
  1523   001100  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1524   001102  A0D8               	btfss	status,0,c
  1525   001104  EF86  F008         	goto	u851
  1526   001108  EF88  F008         	goto	u850
  1527   00110C                     u851:
  1528   00110C  EF8C  F008         	goto	l2090
  1529   001110                     u850:
  1530   001110  5003               	movf	___awmod@divisor^0,w,c
  1531   001112  5E01               	subwf	___awmod@dividend^0,f,c
  1532   001114  5004               	movf	(___awmod@divisor+1)^0,w,c
  1533   001116  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1534   001118                     l2090:
  1535   001118  90D8               	bcf	status,0,c
  1536   00111A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1537   00111C  3203               	rrcf	___awmod@divisor^0,f,c
  1538   00111E  2E05               	decfsz	___awmod@counter^0,f,c
  1539   001120  EF7D  F008         	goto	l2086
  1540   001124                     l2094:
  1541   001124  5006               	movf	___awmod@sign^0,w,c
  1542   001126  B4D8               	btfsc	status,2,c
  1543   001128  EF98  F008         	goto	u861
  1544   00112C  EF9A  F008         	goto	u860
  1545   001130                     u861:
  1546   001130  EF9E  F008         	goto	l2098
  1547   001134                     u860:
  1548   001134  6C01               	negf	___awmod@dividend^0,c
  1549   001136  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1550   001138  B0D8               	btfsc	status,0,c
  1551   00113A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1552   00113C                     l2098:
  1553   00113C  C001  F001         	movff	___awmod@dividend,?___awmod
  1554   001140  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1555   001144  0012               	return		;funcret
  1556   001146                     __end_of___awmod:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function ___awdiv *****************
  1560 ;; Defined at:
  1561 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  dividend        2    0[COMRAM] int 
  1564 ;;  divisor         2    2[COMRAM] int 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  quotient        2    6[COMRAM] int 
  1567 ;;  sign            1    5[COMRAM] unsigned char 
  1568 ;;  counter         1    4[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2    0[COMRAM] int 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;Total ram usage:        8 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_vfpfcnvrt
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text9
  1593   000FD2                     __ptext9:
  1594                           	callstack 0
  1595   000FD2                     ___awdiv:
  1596                           	callstack 25
  1597   000FD2  0E00               	movlw	0
  1598   000FD4  6E06               	movwf	___awdiv@sign^0,c
  1599   000FD6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1600   000FD8  EFF2  F007         	goto	u750
  1601   000FDC  EFF0  F007         	goto	u751
  1602   000FE0                     u751:
  1603   000FE0  EFF8  F007         	goto	l2030
  1604   000FE4                     u750:
  1605   000FE4  6C03               	negf	___awdiv@divisor^0,c
  1606   000FE6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1607   000FE8  B0D8               	btfsc	status,0,c
  1608   000FEA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1609   000FEC  0E01               	movlw	1
  1610   000FEE  6E06               	movwf	___awdiv@sign^0,c
  1611   000FF0                     l2030:
  1612   000FF0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1613   000FF2  EFFF  F007         	goto	u760
  1614   000FF6  EFFD  F007         	goto	u761
  1615   000FFA                     u761:
  1616   000FFA  EF05  F008         	goto	l2036
  1617   000FFE                     u760:
  1618   000FFE  6C01               	negf	___awdiv@dividend^0,c
  1619   001000  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1620   001002  B0D8               	btfsc	status,0,c
  1621   001004  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1622   001006  0E01               	movlw	1
  1623   001008  1A06               	xorwf	___awdiv@sign^0,f,c
  1624   00100A                     l2036:
  1625   00100A  0E00               	movlw	0
  1626   00100C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1627   00100E  0E00               	movlw	0
  1628   001010  6E07               	movwf	___awdiv@quotient^0,c
  1629   001012  5003               	movf	___awdiv@divisor^0,w,c
  1630   001014  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1631   001016  B4D8               	btfsc	status,2,c
  1632   001018  EF10  F008         	goto	u771
  1633   00101C  EF12  F008         	goto	u770
  1634   001020                     u771:
  1635   001020  EF3A  F008         	goto	l2058
  1636   001024                     u770:
  1637   001024  0E01               	movlw	1
  1638   001026  6E05               	movwf	___awdiv@counter^0,c
  1639   001028  EF1A  F008         	goto	l2044
  1640   00102C                     l2042:
  1641   00102C  90D8               	bcf	status,0,c
  1642   00102E  3603               	rlcf	___awdiv@divisor^0,f,c
  1643   001030  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1644   001032  2A05               	incf	___awdiv@counter^0,f,c
  1645   001034                     l2044:
  1646   001034  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1647   001036  EF1F  F008         	goto	u781
  1648   00103A  EF21  F008         	goto	u780
  1649   00103E                     u781:
  1650   00103E  EF16  F008         	goto	l2042
  1651   001042                     u780:
  1652   001042                     l2046:
  1653   001042  90D8               	bcf	status,0,c
  1654   001044  3607               	rlcf	___awdiv@quotient^0,f,c
  1655   001046  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1656   001048  5003               	movf	___awdiv@divisor^0,w,c
  1657   00104A  5C01               	subwf	___awdiv@dividend^0,w,c
  1658   00104C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1659   00104E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1660   001050  A0D8               	btfss	status,0,c
  1661   001052  EF2D  F008         	goto	u791
  1662   001056  EF2F  F008         	goto	u790
  1663   00105A                     u791:
  1664   00105A  EF34  F008         	goto	l2054
  1665   00105E                     u790:
  1666   00105E  5003               	movf	___awdiv@divisor^0,w,c
  1667   001060  5E01               	subwf	___awdiv@dividend^0,f,c
  1668   001062  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1669   001064  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1670   001066  8007               	bsf	___awdiv@quotient^0,0,c
  1671   001068                     l2054:
  1672   001068  90D8               	bcf	status,0,c
  1673   00106A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1674   00106C  3203               	rrcf	___awdiv@divisor^0,f,c
  1675   00106E  2E05               	decfsz	___awdiv@counter^0,f,c
  1676   001070  EF21  F008         	goto	l2046
  1677   001074                     l2058:
  1678   001074  5006               	movf	___awdiv@sign^0,w,c
  1679   001076  B4D8               	btfsc	status,2,c
  1680   001078  EF40  F008         	goto	u801
  1681   00107C  EF42  F008         	goto	u800
  1682   001080                     u801:
  1683   001080  EF46  F008         	goto	l2062
  1684   001084                     u800:
  1685   001084  6C07               	negf	___awdiv@quotient^0,c
  1686   001086  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1687   001088  B0D8               	btfsc	status,0,c
  1688   00108A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1689   00108C                     l2062:
  1690   00108C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1691   001090  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1692   001094  0012               	return		;funcret
  1693   001096                     __end_of___awdiv:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _sendStringSerial4 *****************
  1697 ;; Defined at:
  1698 ;;		line 36 in file "serial.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  string          1    1[COMRAM] PTR unsigned char 
  1701 ;;		 -> sendIntSerial4@string(17), 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1713 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 2
  1720 ;; This function calls:
  1721 ;;		_sendCharSerial4
  1722 ;; This function is called by:
  1723 ;;		_sendIntSerial4
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text10
  1728   001542                     __ptext10:
  1729                           	callstack 0
  1730   001542                     _sendStringSerial4:
  1731                           	callstack 27
  1732   001542                     
  1733                           ;serial.c: 38:     while(*string != 0){
  1734   001542  EFAA  F00A         	goto	l2290
  1735   001546                     l2286:
  1736                           
  1737                           ;serial.c: 39:   sendCharSerial4(*string++);
  1738   001546  5002               	movf	sendStringSerial4@string^0,w,c
  1739   001548  6ED9               	movwf	fsr2l,c
  1740   00154A  6ADA               	clrf	fsr2h,c
  1741   00154C  50DF               	movf	indf2,w,c
  1742   00154E  EC21  F00B         	call	_sendCharSerial4
  1743   001552  2A02               	incf	sendStringSerial4@string^0,f,c
  1744   001554                     l2290:
  1745                           
  1746                           ;serial.c: 38:     while(*string != 0){
  1747   001554  5002               	movf	sendStringSerial4@string^0,w,c
  1748   001556  6ED9               	movwf	fsr2l,c
  1749   001558  6ADA               	clrf	fsr2h,c
  1750   00155A  50DF               	movf	indf2,w,c
  1751   00155C  A4D8               	btfss	status,2,c
  1752   00155E  EFB3  F00A         	goto	u1211
  1753   001562  EFB5  F00A         	goto	u1210
  1754   001566                     u1211:
  1755   001566  EFA3  F00A         	goto	l2286
  1756   00156A                     u1210:
  1757   00156A  0012               	return		;funcret
  1758   00156C                     __end_of_sendStringSerial4:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _sendCharSerial4 *****************
  1762 ;; Defined at:
  1763 ;;		line 30 in file "serial.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  charToSend      1    wreg     unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  charToSend      1    0[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;Total ram usage:        1 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_sendStringSerial4
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text11
  1792   001642                     __ptext11:
  1793                           	callstack 0
  1794   001642                     _sendCharSerial4:
  1795                           	callstack 27
  1796                           
  1797                           ;incstack = 0
  1798                           ;sendCharSerial4@charToSend stored from wreg
  1799   001642  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1800   001644                     l380:
  1801   001644  010E               	movlb	14	; () banked
  1802   001646  A537               	btfss	55,2,b	;volatile
  1803   001648  EF28  F00B         	goto	u321
  1804   00164C  EF2A  F00B         	goto	u320
  1805   001650                     u321:
  1806   001650  EF22  F00B         	goto	l380
  1807   001654                     u320:
  1808   001654                     
  1809                           ; BSR set to: 14
  1810                           ;serial.c: 32:     TX4REG = charToSend;
  1811   001654  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1812   001658                     
  1813                           ; BSR set to: 14
  1814   001658  0012               	return		;funcret
  1815   00165A                     __end_of_sendCharSerial4:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _lights_flashing *****************
  1819 ;; Defined at:
  1820 ;;		line 71 in file "buggy_lights.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text12
  1849   00128C                     __ptext12:
  1850                           	callstack 0
  1851   00128C                     _lights_flashing:
  1852                           	callstack 29
  1853   00128C                     
  1854                           ;buggy_lights.c: 73:     LATDbits.LATD4 = !LATDbits.LATD4;
  1855   00128C  A87C               	btfss	124,4,c	;volatile
  1856   00128E  EF4B  F009         	goto	u511
  1857   001292  EF4F  F009         	goto	u510
  1858   001296                     u511:
  1859   001296  6A01               	clrf	??_lights_flashing^0,c
  1860   001298  2A01               	incf	??_lights_flashing^0,f,c
  1861   00129A  EF50  F009         	goto	u528
  1862   00129E                     u510:
  1863   00129E  6A01               	clrf	??_lights_flashing^0,c
  1864   0012A0                     u528:
  1865   0012A0  3A01               	swapf	??_lights_flashing^0,f,c
  1866   0012A2  507C               	movf	124,w,c	;volatile
  1867   0012A4  1801               	xorwf	??_lights_flashing^0,w,c
  1868   0012A6  0BEF               	andlw	-17
  1869   0012A8  1801               	xorwf	??_lights_flashing^0,w,c
  1870   0012AA  6E7C               	movwf	124,c	;volatile
  1871                           
  1872                           ;buggy_lights.c: 74:     LATDbits.LATD3 = !LATDbits.LATD3;
  1873   0012AC  A67C               	btfss	124,3,c	;volatile
  1874   0012AE  EF5B  F009         	goto	u531
  1875   0012B2  EF5F  F009         	goto	u530
  1876   0012B6                     u531:
  1877   0012B6  6A01               	clrf	??_lights_flashing^0,c
  1878   0012B8  2A01               	incf	??_lights_flashing^0,f,c
  1879   0012BA  EF60  F009         	goto	u548
  1880   0012BE                     u530:
  1881   0012BE  6A01               	clrf	??_lights_flashing^0,c
  1882   0012C0                     u548:
  1883   0012C0  4601               	rlncf	??_lights_flashing^0,f,c
  1884   0012C2  4601               	rlncf	??_lights_flashing^0,f,c
  1885   0012C4  4601               	rlncf	??_lights_flashing^0,f,c
  1886   0012C6  507C               	movf	124,w,c	;volatile
  1887   0012C8  1801               	xorwf	??_lights_flashing^0,w,c
  1888   0012CA  0BF7               	andlw	-9
  1889   0012CC  1801               	xorwf	??_lights_flashing^0,w,c
  1890   0012CE  6E7C               	movwf	124,c	;volatile
  1891   0012D0                     
  1892                           ;buggy_lights.c: 75:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1893   0012D0  0E29               	movlw	41
  1894   0012D2  6E02               	movwf	(??_lights_flashing+1)^0,c
  1895   0012D4  0E96               	movlw	150
  1896   0012D6  6E01               	movwf	??_lights_flashing^0,c
  1897   0012D8  0E7F               	movlw	127
  1898   0012DA                     u1717:
  1899   0012DA  2EE8               	decfsz	wreg,f,c
  1900   0012DC  D7FE               	bra	u1717
  1901   0012DE  2E01               	decfsz	??_lights_flashing^0,f,c
  1902   0012E0  D7FC               	bra	u1717
  1903   0012E2  2E02               	decfsz	(??_lights_flashing+1)^0,f,c
  1904   0012E4  D7FA               	bra	u1717
  1905   0012E6  0000               	nop	
  1906   0012E8                     
  1907                           ;buggy_lights.c: 76:     LATFbits.LATF0 = !LATFbits.LATF0;
  1908   0012E8  A07E               	btfss	126,0,c	;volatile
  1909   0012EA  EF79  F009         	goto	u551
  1910   0012EE  EF7D  F009         	goto	u550
  1911   0012F2                     u551:
  1912   0012F2  6A01               	clrf	??_lights_flashing^0,c
  1913   0012F4  2A01               	incf	??_lights_flashing^0,f,c
  1914   0012F6  EF7E  F009         	goto	u568
  1915   0012FA                     u550:
  1916   0012FA  6A01               	clrf	??_lights_flashing^0,c
  1917   0012FC                     u568:
  1918   0012FC  507E               	movf	126,w,c	;volatile
  1919   0012FE  1801               	xorwf	??_lights_flashing^0,w,c
  1920   001300  0BFE               	andlw	-2
  1921   001302  1801               	xorwf	??_lights_flashing^0,w,c
  1922   001304  6E7E               	movwf	126,c	;volatile
  1923   001306                     
  1924                           ;buggy_lights.c: 77:     LATHbits.LATH0 = !LATHbits.LATH0;
  1925   001306  A080               	btfss	128,0,c	;volatile
  1926   001308  EF88  F009         	goto	u571
  1927   00130C  EF8C  F009         	goto	u570
  1928   001310                     u571:
  1929   001310  6A01               	clrf	??_lights_flashing^0,c
  1930   001312  2A01               	incf	??_lights_flashing^0,f,c
  1931   001314  EF8D  F009         	goto	u588
  1932   001318                     u570:
  1933   001318  6A01               	clrf	??_lights_flashing^0,c
  1934   00131A                     u588:
  1935   00131A  5080               	movf	128,w,c	;volatile
  1936   00131C  1801               	xorwf	??_lights_flashing^0,w,c
  1937   00131E  0BFE               	andlw	-2
  1938   001320  1801               	xorwf	??_lights_flashing^0,w,c
  1939   001322  6E80               	movwf	128,c	;volatile
  1940   001324  0012               	return		;funcret
  1941   001326                     __end_of_lights_flashing:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _initUSART4 *****************
  1945 ;; Defined at:
  1946 ;;		line 5 in file "serial.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text13
  1975   001624                     __ptext13:
  1976                           	callstack 0
  1977   001624                     _initUSART4:
  1978                           	callstack 29
  1979   001624                     
  1980                           ;serial.c: 9:     RC0PPS = 0x12;
  1981   001624  0E12               	movlw	18
  1982   001626  010E               	movlb	14	; () banked
  1983   001628  6F62               	movwf	98,b	;volatile
  1984                           
  1985                           ;serial.c: 10:     RX4PPS = 0x11;
  1986   00162A  0E11               	movlw	17
  1987   00162C  6F15               	movwf	21,b	;volatile
  1988   00162E                     
  1989                           ; BSR set to: 14
  1990                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1991   00162E  97E9               	bcf	233,3,b	;volatile
  1992   001630                     
  1993                           ; BSR set to: 14
  1994                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1995   001630  95E8               	bcf	232,2,b	;volatile
  1996                           
  1997                           ;serial.c: 15:     SP4BRGL = 51;
  1998   001632  0E33               	movlw	51
  1999   001634  6FE5               	movwf	229,b	;volatile
  2000                           
  2001                           ;serial.c: 16:     SP4BRGH = 0;
  2002   001636  0E00               	movlw	0
  2003   001638  6FE6               	movwf	230,b	;volatile
  2004   00163A                     
  2005                           ; BSR set to: 14
  2006                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  2007   00163A  89E7               	bsf	231,4,b	;volatile
  2008   00163C                     
  2009                           ; BSR set to: 14
  2010                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  2011   00163C  8BE8               	bsf	232,5,b	;volatile
  2012   00163E                     
  2013                           ; BSR set to: 14
  2014                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  2015   00163E  8FE7               	bsf	231,7,b	;volatile
  2016   001640                     
  2017                           ; BSR set to: 14
  2018   001640  0012               	return		;funcret
  2019   001642                     __end_of_initUSART4:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _initDCmotorsPWM *****************
  2023 ;; Defined at:
  2024 ;;		line 5 in file "dc_motor.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text14
  2053   001326                     __ptext14:
  2054                           	callstack 0
  2055   001326                     _initDCmotorsPWM:
  2056                           	callstack 29
  2057   001326                     
  2058                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2059   001326  9485               	bcf	133,2,c	;volatile
  2060                           
  2061                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2062   001328  9885               	bcf	133,4,c	;volatile
  2063                           
  2064                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2065   00132A  9E83               	bcf	131,7,c	;volatile
  2066                           
  2067                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2068   00132C  9C87               	bcf	135,6,c	;volatile
  2069                           
  2070                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2071   00132E  947D               	bcf	125,2,c	;volatile
  2072                           
  2073                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2074   001330  987D               	bcf	125,4,c	;volatile
  2075                           
  2076                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2077   001332  9E7B               	bcf	123,7,c	;volatile
  2078                           
  2079                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2080   001334  9C7F               	bcf	127,6,c	;volatile
  2081   001336                     
  2082                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2083   001336  0E05               	movlw	5
  2084   001338  010E               	movlb	14	; () banked
  2085   00133A  6F74               	movwf	116,b	;volatile
  2086                           
  2087                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2088   00133C  0E06               	movlw	6
  2089   00133E  6F76               	movwf	118,b	;volatile
  2090                           
  2091                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2092   001340  0E07               	movlw	7
  2093   001342  6F69               	movwf	105,b	;volatile
  2094                           
  2095                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2096   001344  0E08               	movlw	8
  2097   001346  6F88               	movwf	136,b	;volatile
  2098                           
  2099                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2100   001348  50BD               	movf	189,w,c	;volatile
  2101   00134A  0B8F               	andlw	-113
  2102   00134C  0940               	iorlw	64
  2103   00134E  6EBD               	movwf	189,c	;volatile
  2104                           
  2105                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2106   001350  0EE0               	movlw	-32
  2107   001352  16BE               	andwf	190,f,c	;volatile
  2108                           
  2109                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2110   001354  50BF               	movf	191,w,c	;volatile
  2111   001356  0BF0               	andlw	-16
  2112   001358  0901               	iorlw	1
  2113   00135A  6EBF               	movwf	191,c	;volatile
  2114   00135C                     
  2115                           ; BSR set to: 14
  2116                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2117   00135C  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2118   001360                     
  2119                           ; BSR set to: 14
  2120                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2121   001360  8EBD               	bsf	189,7,c	;volatile
  2122                           
  2123                           ;dc_motor.c: 35:     CCPR1H=0;
  2124   001362  0E00               	movlw	0
  2125   001364  6EAA               	movwf	170,c	;volatile
  2126                           
  2127                           ;dc_motor.c: 36:     CCPR2H=0;
  2128   001366  0E00               	movlw	0
  2129   001368  6EA6               	movwf	166,c	;volatile
  2130                           
  2131                           ;dc_motor.c: 37:     CCPR3H=0;
  2132   00136A  0E00               	movlw	0
  2133   00136C  010F               	movlb	15	; () banked
  2134   00136E  6F25               	movwf	37,b	;volatile
  2135                           
  2136                           ;dc_motor.c: 38:     CCPR4H=0;
  2137   001370  0E00               	movlw	0
  2138   001372  6F21               	movwf	33,b	;volatile
  2139                           
  2140                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2141   001374  0EFC               	movlw	-4
  2142   001376  16AD               	andwf	173,f,c	;volatile
  2143                           
  2144                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2145   001378  0EF3               	movlw	-13
  2146   00137A  16AD               	andwf	173,f,c	;volatile
  2147                           
  2148                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2149   00137C  0ECF               	movlw	-49
  2150   00137E  16AD               	andwf	173,f,c	;volatile
  2151                           
  2152                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2153   001380  0E3F               	movlw	-193
  2154   001382  16AD               	andwf	173,f,c	;volatile
  2155   001384                     
  2156                           ; BSR set to: 15
  2157                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2158   001384  88AB               	bsf	171,4,c	;volatile
  2159                           
  2160                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2161   001386  50AB               	movf	171,w,c	;volatile
  2162   001388  0BF0               	andlw	-16
  2163   00138A  090C               	iorlw	12
  2164   00138C  6EAB               	movwf	171,c	;volatile
  2165   00138E                     
  2166                           ; BSR set to: 15
  2167                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2168   00138E  8EAB               	bsf	171,7,c	;volatile
  2169   001390                     
  2170                           ; BSR set to: 15
  2171                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2172   001390  88A7               	bsf	167,4,c	;volatile
  2173                           
  2174                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2175   001392  50A7               	movf	167,w,c	;volatile
  2176   001394  0BF0               	andlw	-16
  2177   001396  090C               	iorlw	12
  2178   001398  6EA7               	movwf	167,c	;volatile
  2179   00139A                     
  2180                           ; BSR set to: 15
  2181                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2182   00139A  8EA7               	bsf	167,7,c	;volatile
  2183   00139C                     
  2184                           ; BSR set to: 15
  2185                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2186   00139C  8926               	bsf	38,4,b	;volatile
  2187                           
  2188                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2189   00139E  5126               	movf	38,w,b	;volatile
  2190   0013A0  0BF0               	andlw	-16
  2191   0013A2  090C               	iorlw	12
  2192   0013A4  6F26               	movwf	38,b	;volatile
  2193   0013A6                     
  2194                           ; BSR set to: 15
  2195                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2196   0013A6  8F26               	bsf	38,7,b	;volatile
  2197   0013A8                     
  2198                           ; BSR set to: 15
  2199                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2200   0013A8  8922               	bsf	34,4,b	;volatile
  2201                           
  2202                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2203   0013AA  5122               	movf	34,w,b	;volatile
  2204   0013AC  0BF0               	andlw	-16
  2205   0013AE  090C               	iorlw	12
  2206   0013B0  6F22               	movwf	34,b	;volatile
  2207   0013B2                     
  2208                           ; BSR set to: 15
  2209                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2210   0013B2  8F22               	bsf	34,7,b	;volatile
  2211   0013B4                     
  2212                           ; BSR set to: 15
  2213   0013B4  0012               	return		;funcret
  2214   0013B6                     __end_of_initDCmotorsPWM:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _color_click_init *****************
  2218 ;; Defined at:
  2219 ;;		line 5 in file "color.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;Total ram usage:        1 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 4
  2240 ;; This function calls:
  2241 ;;		_I2C_2_Master_Init
  2242 ;;		_color_writetoaddr
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text15
  2249   00150E                     __ptext15:
  2250                           	callstack 0
  2251   00150E                     _color_click_init:
  2252                           	callstack 26
  2253   00150E                     
  2254                           ;color.c: 8:     I2C_2_Master_Init();
  2255   00150E  ECB6  F00A         	call	_I2C_2_Master_Init	;wreg free
  2256   001512                     
  2257                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2258   001512  0E01               	movlw	1
  2259   001514  6E03               	movwf	color_writetoaddr@value^0,c
  2260   001516  0E00               	movlw	0
  2261   001518  ECF3  F00A         	call	_color_writetoaddr
  2262   00151C                     
  2263                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2264   00151C  0E3F               	movlw	63
  2265   00151E  6E05               	movwf	??_color_click_init^0,c
  2266   001520  0E55               	movlw	85
  2267   001522                     u1727:
  2268   001522  2EE8               	decfsz	wreg,f,c
  2269   001524  D7FE               	bra	u1727
  2270   001526  2E05               	decfsz	??_color_click_init^0,f,c
  2271   001528  D7FC               	bra	u1727
  2272   00152A  0000               	nop	
  2273   00152C                     
  2274                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2275   00152C  0E03               	movlw	3
  2276   00152E  6E03               	movwf	color_writetoaddr@value^0,c
  2277   001530  0E00               	movlw	0
  2278   001532  ECF3  F00A         	call	_color_writetoaddr
  2279   001536                     
  2280                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2281   001536  0ED5               	movlw	213
  2282   001538  6E03               	movwf	color_writetoaddr@value^0,c
  2283   00153A  0E01               	movlw	1
  2284   00153C  ECF3  F00A         	call	_color_writetoaddr
  2285   001540  0012               	return		;funcret
  2286   001542                     __end_of_color_click_init:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _color_writetoaddr *****************
  2290 ;; Defined at:
  2291 ;;		line 21 in file "color.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  address         1    wreg     unsigned char 
  2294 ;;  value           1    2[COMRAM] unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  address         1    3[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2306 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 3
  2313 ;; This function calls:
  2314 ;;		_I2C_2_Master_Start
  2315 ;;		_I2C_2_Master_Stop
  2316 ;;		_I2C_2_Master_Write
  2317 ;; This function is called by:
  2318 ;;		_color_click_init
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text16
  2323   0015E6                     __ptext16:
  2324                           	callstack 0
  2325   0015E6                     _color_writetoaddr:
  2326                           	callstack 26
  2327                           
  2328                           ;incstack = 0
  2329                           ;color_writetoaddr@address stored from wreg
  2330   0015E6  6E04               	movwf	color_writetoaddr@address^0,c
  2331   0015E8                     
  2332                           ;color.c: 22:     I2C_2_Master_Start();
  2333   0015E8  EC3D  F00B         	call	_I2C_2_Master_Start	;wreg free
  2334                           
  2335                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2336   0015EC  0E52               	movlw	82
  2337   0015EE  EC2D  F00B         	call	_I2C_2_Master_Write
  2338                           
  2339                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2340   0015F2  5004               	movf	color_writetoaddr@address^0,w,c
  2341   0015F4  0980               	iorlw	128
  2342   0015F6  EC2D  F00B         	call	_I2C_2_Master_Write
  2343                           
  2344                           ;color.c: 25:     I2C_2_Master_Write(value);
  2345   0015FA  5003               	movf	color_writetoaddr@value^0,w,c
  2346   0015FC  EC2D  F00B         	call	_I2C_2_Master_Write
  2347                           
  2348                           ;color.c: 26:     I2C_2_Master_Stop();
  2349   001600  EC38  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2350   001604  0012               	return		;funcret
  2351   001606                     __end_of_color_writetoaddr:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _I2C_2_Master_Write *****************
  2355 ;; Defined at:
  2356 ;;		line 45 in file "i2c.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  data_byte       1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  data_byte       1    1[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 2
  2377 ;; This function calls:
  2378 ;;		_I2C_2_Master_Idle
  2379 ;; This function is called by:
  2380 ;;		_color_writetoaddr
  2381 ;;		_color_read_Red
  2382 ;;		_color_read_Blue
  2383 ;;		_color_read_Green
  2384 ;;		_color_read_Clear
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text17
  2389   00165A                     __ptext17:
  2390                           	callstack 0
  2391   00165A                     _I2C_2_Master_Write:
  2392                           	callstack 26
  2393                           
  2394                           ;incstack = 0
  2395                           ;I2C_2_Master_Write@data_byte stored from wreg
  2396   00165A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2397   00165C                     
  2398                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2399   00165C  ECCB  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2400   001660                     
  2401                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2402   001660  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2403   001664  0012               	return		;funcret
  2404   001666                     __end_of_I2C_2_Master_Write:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _I2C_2_Master_Stop *****************
  2408 ;; Defined at:
  2409 ;;		line 39 in file "i2c.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 2
  2430 ;; This function calls:
  2431 ;;		_I2C_2_Master_Idle
  2432 ;; This function is called by:
  2433 ;;		_color_writetoaddr
  2434 ;;		_color_read_Red
  2435 ;;		_color_read_Blue
  2436 ;;		_color_read_Green
  2437 ;;		_color_read_Clear
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text18
  2442   001670                     __ptext18:
  2443                           	callstack 0
  2444   001670                     _I2C_2_Master_Stop:
  2445                           	callstack 26
  2446   001670                     
  2447                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2448   001670  ECCB  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2449   001674                     
  2450                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2451   001674  010E               	movlb	14	; () banked
  2452   001676  85DA               	bsf	218,2,b	;volatile
  2453   001678                     
  2454                           ; BSR set to: 14
  2455   001678  0012               	return		;funcret
  2456   00167A                     __end_of_I2C_2_Master_Stop:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _I2C_2_Master_Start *****************
  2460 ;; Defined at:
  2461 ;;		line 27 in file "i2c.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 2
  2482 ;; This function calls:
  2483 ;;		_I2C_2_Master_Idle
  2484 ;; This function is called by:
  2485 ;;		_color_writetoaddr
  2486 ;;		_color_read_Red
  2487 ;;		_color_read_Blue
  2488 ;;		_color_read_Green
  2489 ;;		_color_read_Clear
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text19
  2494   00167A                     __ptext19:
  2495                           	callstack 0
  2496   00167A                     _I2C_2_Master_Start:
  2497                           	callstack 26
  2498   00167A                     
  2499                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2500   00167A  ECCB  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2501   00167E                     
  2502                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2503   00167E  010E               	movlb	14	; () banked
  2504   001680  81DA               	bsf	218,0,b	;volatile
  2505   001682                     
  2506                           ; BSR set to: 14
  2507   001682  0012               	return		;funcret
  2508   001684                     __end_of_I2C_2_Master_Start:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _I2C_2_Master_Idle *****************
  2512 ;; Defined at:
  2513 ;;		line 22 in file "i2c.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;Total ram usage:        1 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_I2C_2_Master_Start
  2538 ;;		_I2C_2_Master_Stop
  2539 ;;		_I2C_2_Master_Write
  2540 ;;		_I2C_2_Master_RepStart
  2541 ;;		_I2C_2_Master_Read
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text20
  2546   001596                     __ptext20:
  2547                           	callstack 0
  2548   001596                     _I2C_2_Master_Idle:
  2549                           	callstack 26
  2550   001596                     l244:
  2551   001596  010E               	movlb	14	; () banked
  2552   001598  B5D8               	btfsc	216,2,b	;volatile
  2553   00159A  EFD1  F00A         	goto	u181
  2554   00159E  EFD3  F00A         	goto	u180
  2555   0015A2                     u181:
  2556   0015A2  EFCB  F00A         	goto	l244
  2557   0015A6                     u180:
  2558   0015A6                     
  2559                           ; BSR set to: 14
  2560   0015A6  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2561   0015AA  0E1F               	movlw	31
  2562   0015AC  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2563   0015AE  A4D8               	btfss	status,2,c
  2564   0015B0  EFDC  F00A         	goto	u191
  2565   0015B4  EFDE  F00A         	goto	u190
  2566   0015B8                     u191:
  2567   0015B8  EFCB  F00A         	goto	l244
  2568   0015BC                     u190:
  2569   0015BC                     
  2570                           ; BSR set to: 14
  2571   0015BC  0012               	return		;funcret
  2572   0015BE                     __end_of_I2C_2_Master_Idle:
  2573                           	callstack 0
  2574                           
  2575 ;; *************** function _I2C_2_Master_Init *****************
  2576 ;; Defined at:
  2577 ;;		line 4 in file "i2c.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 1
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_color_click_init
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text21
  2606   00156C                     __ptext21:
  2607                           	callstack 0
  2608   00156C                     _I2C_2_Master_Init:
  2609                           	callstack 28
  2610   00156C                     
  2611                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2612   00156C  010E               	movlb	14	; () banked
  2613   00156E  51D9               	movf	217,w,b	;volatile
  2614   001570  0BF0               	andlw	-16
  2615   001572  0908               	iorlw	8
  2616   001574  6FD9               	movwf	217,b	;volatile
  2617   001576                     
  2618                           ; BSR set to: 14
  2619                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2620   001576  8BD9               	bsf	217,5,b	;volatile
  2621                           
  2622                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2623   001578  0E9F               	movlw	159
  2624   00157A  6FD6               	movwf	214,b	;volatile
  2625   00157C                     
  2626                           ; BSR set to: 14
  2627                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2628   00157C  8A84               	bsf	132,5,c	;volatile
  2629   00157E                     
  2630                           ; BSR set to: 14
  2631                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2632   00157E  8C84               	bsf	132,6,c	;volatile
  2633   001580                     
  2634                           ; BSR set to: 14
  2635                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2636   001580  9BA7               	bcf	167,5,b	;volatile
  2637   001582                     
  2638                           ; BSR set to: 14
  2639                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2640   001582  9DA7               	bcf	167,6,b	;volatile
  2641                           
  2642                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2643   001584  0E1D               	movlw	29
  2644   001586  6F1D               	movwf	29,b	;volatile
  2645                           
  2646                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2647   001588  0E1E               	movlw	30
  2648   00158A  6F1C               	movwf	28,b	;volatile
  2649                           
  2650                           ;i2c.c: 18:   RD5PPS=0x1C;
  2651   00158C  0E1C               	movlw	28
  2652   00158E  6F6F               	movwf	111,b	;volatile
  2653                           
  2654                           ;i2c.c: 19:   RD6PPS=0x1B;
  2655   001590  0E1B               	movlw	27
  2656   001592  6F70               	movwf	112,b	;volatile
  2657   001594                     
  2658                           ; BSR set to: 14
  2659   001594  0012               	return		;funcret
  2660   001596                     __end_of_I2C_2_Master_Init:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _buggy_lights_init *****************
  2664 ;; Defined at:
  2665 ;;		line 4 in file "buggy_lights.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		None
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;Total ram usage:        0 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text22
  2694   001416                     __ptext22:
  2695                           	callstack 0
  2696   001416                     _buggy_lights_init:
  2697                           	callstack 29
  2698   001416                     
  2699                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2700   001416  9884               	bcf	132,4,c	;volatile
  2701                           
  2702                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2703   001418  9288               	bcf	136,1,c	;volatile
  2704                           
  2705                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2706   00141A  9684               	bcf	132,3,c	;volatile
  2707                           
  2708                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2709   00141C  9086               	bcf	134,0,c	;volatile
  2710                           
  2711                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2712   00141E  9088               	bcf	136,0,c	;volatile
  2713                           
  2714                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 0;
  2715   001420  987C               	bcf	124,4,c	;volatile
  2716                           
  2717                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 0;
  2718   001422  9280               	bcf	128,1,c	;volatile
  2719                           
  2720                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 0;
  2721   001424  967C               	bcf	124,3,c	;volatile
  2722                           
  2723                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 0;
  2724   001426  907E               	bcf	126,0,c	;volatile
  2725                           
  2726                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 0;
  2727   001428  9080               	bcf	128,0,c	;volatile
  2728                           
  2729                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2730   00142A  9E84               	bcf	132,7,c	;volatile
  2731                           
  2732                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2733   00142C  9688               	bcf	136,3,c	;volatile
  2734                           
  2735                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2736   00142E  8E7C               	bsf	124,7,c	;volatile
  2737                           
  2738                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2739   001430  8680               	bsf	128,3,c	;volatile
  2740                           
  2741                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  2742   001432  9081               	bcf	129,0,c	;volatile
  2743                           
  2744                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  2745   001434  9483               	bcf	131,2,c	;volatile
  2746                           
  2747                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  2748   001436  9084               	bcf	132,0,c	;volatile
  2749                           
  2750                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 0;
  2751   001438  9079               	bcf	121,0,c	;volatile
  2752                           
  2753                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 0;
  2754   00143A  947B               	bcf	123,2,c	;volatile
  2755                           
  2756                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 0;
  2757   00143C  907C               	bcf	124,0,c	;volatile
  2758                           
  2759                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  2760   00143E  9281               	bcf	129,1,c	;volatile
  2761                           
  2762                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  2763   001440  9C83               	bcf	131,6,c	;volatile
  2764                           
  2765                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  2766   001442  9488               	bcf	136,2,c	;volatile
  2767                           
  2768                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 0;
  2769   001444  9279               	bcf	121,1,c	;volatile
  2770                           
  2771                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 0;
  2772   001446  9C7B               	bcf	123,6,c	;volatile
  2773                           
  2774                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 0;
  2775   001448  9480               	bcf	128,2,c	;volatile
  2776                           
  2777                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  2778   00144A  9287               	bcf	135,1,c	;volatile
  2779                           
  2780                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  2781   00144C  9881               	bcf	129,4,c	;volatile
  2782                           
  2783                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  2784   00144E  9E86               	bcf	134,7,c	;volatile
  2785                           
  2786                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 0;
  2787   001450  927F               	bcf	127,1,c	;volatile
  2788                           
  2789                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 0;
  2790   001452  9879               	bcf	121,4,c	;volatile
  2791                           
  2792                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 0;
  2793   001454  9E7E               	bcf	126,7,c	;volatile
  2794                           
  2795                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  2796   001456  9087               	bcf	135,0,c	;volatile
  2797                           
  2798                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  2799   001458  9E85               	bcf	133,7,c	;volatile
  2800                           
  2801                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  2802   00145A  9681               	bcf	129,3,c	;volatile
  2803                           
  2804                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 0;
  2805   00145C  907F               	bcf	127,0,c	;volatile
  2806                           
  2807                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 0;
  2808   00145E  9E7D               	bcf	125,7,c	;volatile
  2809                           
  2810                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 0;
  2811   001460  9679               	bcf	121,3,c	;volatile
  2812   001462  0012               	return		;funcret
  2813   001464                     __end_of_buggy_lights_init:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _Timer0_init *****************
  2817 ;; Defined at:
  2818 ;;		line 7 in file "timers.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text23
  2847   0015BE                     __ptext23:
  2848                           	callstack 0
  2849   0015BE                     _Timer0_init:
  2850                           	callstack 29
  2851   0015BE                     
  2852                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2853   0015BE  50D6               	movf	214,w,c	;volatile
  2854   0015C0  0B1F               	andlw	-225
  2855   0015C2  0940               	iorlw	64
  2856   0015C4  6ED6               	movwf	214,c	;volatile
  2857   0015C6                     
  2858                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2859   0015C6  88D6               	bsf	214,4,c	;volatile
  2860   0015C8                     
  2861                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  2862   0015C8  88D5               	bsf	213,4,c	;volatile
  2863                           
  2864                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  2865   0015CA  50D6               	movf	214,w,c	;volatile
  2866   0015CC  0BF0               	andlw	-16
  2867   0015CE  090E               	iorlw	14
  2868   0015D0  6ED6               	movwf	214,c	;volatile
  2869                           
  2870                           ;timers.c: 20:     TMR0H = 0;
  2871   0015D2  0E00               	movlw	0
  2872   0015D4  6ED4               	movwf	212,c	;volatile
  2873                           
  2874                           ;timers.c: 21:     TMR0L = 0;
  2875   0015D6  0E00               	movlw	0
  2876   0015D8  6ED3               	movwf	211,c	;volatile
  2877   0015DA                     
  2878                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  2879   0015DA  8ED5               	bsf	213,7,c	;volatile
  2880   0015DC                     
  2881                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  2882   0015DC  010E               	movlb	14	; () banked
  2883   0015DE  8B29               	bsf	41,5,b	;volatile
  2884   0015E0                     
  2885                           ; BSR set to: 14
  2886                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  2887   0015E0  8CF2               	bsf	242,6,c	;volatile
  2888   0015E2                     
  2889                           ; BSR set to: 14
  2890                           ;timers.c: 26:     INTCONbits.GIE = 1;
  2891   0015E2  8EF2               	bsf	242,7,c	;volatile
  2892   0015E4                     
  2893                           ; BSR set to: 14
  2894   0015E4  0012               	return		;funcret
  2895   0015E6                     __end_of_Timer0_init:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _ISR *****************
  2899 ;; Defined at:
  2900 ;;		line 29 in file "timers.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		None
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		Interrupt level 2
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	intcode
  2928   000008                     __pintcode:
  2929                           	callstack 0
  2930   000008                     _ISR:
  2931                           	callstack 24
  2932                           
  2933                           ; BSR set to: 14
  2934                           ;incstack = 0
  2935   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2936   00000A                     
  2937                           ;timers.c: 32:     if (PIR0bits.TMR0IF) {
  2938   00000A  010E               	movlb	14	; () banked
  2939   00000C  AB33               	btfss	51,5,b	;volatile
  2940   00000E  EF0B  F000         	goto	i2u74_41
  2941   000012  EF0D  F000         	goto	i2u74_40
  2942   000016                     i2u74_41:
  2943   000016  EF0E  F000         	goto	i2l535
  2944   00001A                     i2u74_40:
  2945   00001A                     
  2946                           ; BSR set to: 14
  2947                           ;timers.c: 36:         PIR0bits.TMR0IF = 0;
  2948   00001A  9B33               	bcf	51,5,b	;volatile
  2949   00001C                     i2l535:
  2950                           
  2951                           ; BSR set to: 14
  2952   00001C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2953   00001E  0011               	retfie		f
  2954   000020                     __end_of_ISR:
  2955                           	callstack 0
  2956                           
  2957                           	psect	rparam
  2958   000000                     
  2959                           	psect	temp
  2960   00005F                     btemp:
  2961                           	callstack 0
  2962   00005F                     	ds	1
  2963   000000                     int$flags	set	btemp
  2964   000000                     wtemp8	set	btemp+1
  2965   000000                     ttemp5	set	btemp+1
  2966   000000                     ttemp6	set	btemp+4
  2967   000000                     ttemp7	set	btemp+8
  2968                           
  2969                           	psect	idloc
  2970                           
  2971                           ;Config register IDLOC0 @ 0x200000
  2972                           ;	unspecified, using default values
  2973   200000                     	org	2097152
  2974   200000  FFFF               	dw	65535
  2975                           
  2976                           ;Config register IDLOC1 @ 0x200002
  2977                           ;	unspecified, using default values
  2978   200002                     	org	2097154
  2979   200002  FFFF               	dw	65535
  2980                           
  2981                           ;Config register IDLOC2 @ 0x200004
  2982                           ;	unspecified, using default values
  2983   200004                     	org	2097156
  2984   200004  FFFF               	dw	65535
  2985                           
  2986                           ;Config register IDLOC3 @ 0x200006
  2987                           ;	unspecified, using default values
  2988   200006                     	org	2097158
  2989   200006  FFFF               	dw	65535
  2990                           
  2991                           ;Config register IDLOC4 @ 0x200008
  2992                           ;	unspecified, using default values
  2993   200008                     	org	2097160
  2994   200008  FFFF               	dw	65535
  2995                           
  2996                           ;Config register IDLOC5 @ 0x20000A
  2997                           ;	unspecified, using default values
  2998   20000A                     	org	2097162
  2999   20000A  FFFF               	dw	65535
  3000                           
  3001                           ;Config register IDLOC6 @ 0x20000C
  3002                           ;	unspecified, using default values
  3003   20000C                     	org	2097164
  3004   20000C  FFFF               	dw	65535
  3005                           
  3006                           ;Config register IDLOC7 @ 0x20000E
  3007                           ;	unspecified, using default values
  3008   20000E                     	org	2097166
  3009   20000E  FFFF               	dw	65535
  3010                           
  3011                           	psect	config
  3012                           
  3013                           ;Config register CONFIG1L @ 0x300000
  3014                           ;	External Oscillator mode Selection bits
  3015                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3016                           ;	Power-up default value for COSC bits
  3017                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3018   300000                     	org	3145728
  3019   300000  AA                 	db	170
  3020                           
  3021                           ;Config register CONFIG1H @ 0x300001
  3022                           ;	unspecified, using default values
  3023                           ;	Clock Out Enable bit
  3024                           ;	CLKOUTEN = 0x1, unprogrammed default
  3025                           ;	Clock Switch Enable bit
  3026                           ;	CSWEN = 0x1, unprogrammed default
  3027                           ;	Fail-Safe Clock Monitor Enable bit
  3028                           ;	FCMEN = 0x1, unprogrammed default
  3029   300001                     	org	3145729
  3030   300001  FF                 	db	255
  3031                           
  3032                           ;Config register CONFIG2L @ 0x300002
  3033                           ;	unspecified, using default values
  3034                           ;	Master Clear Enable bit
  3035                           ;	MCLRE = 0x1, unprogrammed default
  3036                           ;	Power-up Timer Enable bit
  3037                           ;	PWRTE = 0x1, unprogrammed default
  3038                           ;	Low-power BOR enable bit
  3039                           ;	LPBOREN = 0x1, unprogrammed default
  3040                           ;	Brown-out Reset Enable bits
  3041                           ;	BOREN = 0x3, unprogrammed default
  3042   300002                     	org	3145730
  3043   300002  FF                 	db	255
  3044                           
  3045                           ;Config register CONFIG2H @ 0x300003
  3046                           ;	unspecified, using default values
  3047                           ;	Brown Out Reset Voltage selection bits
  3048                           ;	BORV = 0x3, unprogrammed default
  3049                           ;	ZCD Disable bit
  3050                           ;	ZCD = 0x1, unprogrammed default
  3051                           ;	PPSLOCK bit One-Way Set Enable bit
  3052                           ;	PPS1WAY = 0x1, unprogrammed default
  3053                           ;	Stack Full/Underflow Reset Enable bit
  3054                           ;	STVREN = 0x1, unprogrammed default
  3055                           ;	Debugger Enable bit
  3056                           ;	DEBUG = 0x1, unprogrammed default
  3057                           ;	Extended Instruction Set Enable bit
  3058                           ;	XINST = 0x1, unprogrammed default
  3059   300003                     	org	3145731
  3060   300003  FF                 	db	255
  3061                           
  3062                           ;Config register CONFIG3L @ 0x300004
  3063                           ;	WDT Period Select bits
  3064                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3065                           ;	WDT operating mode
  3066                           ;	WDTE = OFF, WDT Disabled
  3067   300004                     	org	3145732
  3068   300004  9F                 	db	159
  3069                           
  3070                           ;Config register CONFIG3H @ 0x300005
  3071                           ;	unspecified, using default values
  3072                           ;	WDT Window Select bits
  3073                           ;	WDTCWS = 0x7, unprogrammed default
  3074                           ;	WDT input clock selector
  3075                           ;	WDTCCS = 0x7, unprogrammed default
  3076   300005                     	org	3145733
  3077   300005  FF                 	db	255
  3078                           
  3079                           ;Config register CONFIG4L @ 0x300006
  3080                           ;	unspecified, using default values
  3081                           ;	Write Protection Block 0
  3082                           ;	WRT0 = 0x1, unprogrammed default
  3083                           ;	Write Protection Block 1
  3084                           ;	WRT1 = 0x1, unprogrammed default
  3085                           ;	Write Protection Block 2
  3086                           ;	WRT2 = 0x1, unprogrammed default
  3087                           ;	Write Protection Block 3
  3088                           ;	WRT3 = 0x1, unprogrammed default
  3089                           ;	Write Protection Block 3
  3090                           ;	WRT4 = 0x1, unprogrammed default
  3091                           ;	Write Protection Block 3
  3092                           ;	WRT5 = 0x1, unprogrammed default
  3093                           ;	Write Protection Block 3
  3094                           ;	WRT6 = 0x1, unprogrammed default
  3095                           ;	Write Protection Block 3
  3096                           ;	WRT7 = 0x1, unprogrammed default
  3097   300006                     	org	3145734
  3098   300006  FF                 	db	255
  3099                           
  3100                           ;Config register CONFIG4H @ 0x300007
  3101                           ;	unspecified, using default values
  3102                           ;	Configuration Register Write Protection bit
  3103                           ;	WRTC = 0x1, unprogrammed default
  3104                           ;	Boot Block Write Protection bit
  3105                           ;	WRTB = 0x1, unprogrammed default
  3106                           ;	Data EEPROM Write Protection bit
  3107                           ;	WRTD = 0x1, unprogrammed default
  3108                           ;	Scanner Enable bit
  3109                           ;	SCANE = 0x1, unprogrammed default
  3110                           ;	Low Voltage Programming Enable bit
  3111                           ;	LVP = 0x1, unprogrammed default
  3112   300007                     	org	3145735
  3113   300007  FF                 	db	255
  3114                           
  3115                           ;Config register CONFIG5L @ 0x300008
  3116                           ;	unspecified, using default values
  3117                           ;	UserNVM Program Memory Code Protection bit
  3118                           ;	CP = 0x1, unprogrammed default
  3119                           ;	DataNVM Memory Code Protection bit
  3120                           ;	CPD = 0x1, unprogrammed default
  3121   300008                     	org	3145736
  3122   300008  FF                 	db	255
  3123                           
  3124                           ;Config register CONFIG5H @ 0x300009
  3125                           ;	unspecified, using default values
  3126   300009                     	org	3145737
  3127   300009  FF                 	db	255
  3128                           
  3129                           ;Config register CONFIG6L @ 0x30000A
  3130                           ;	unspecified, using default values
  3131                           ;	Table Read Protection Block 0
  3132                           ;	EBTR0 = 0x1, unprogrammed default
  3133                           ;	Table Read Protection Block 1
  3134                           ;	EBTR1 = 0x1, unprogrammed default
  3135                           ;	Table Read Protection Block 2
  3136                           ;	EBTR2 = 0x1, unprogrammed default
  3137                           ;	Table Read Protection Block 3
  3138                           ;	EBTR3 = 0x1, unprogrammed default
  3139                           ;	Table Read Protection Block 4
  3140                           ;	EBTR4 = 0x1, unprogrammed default
  3141                           ;	Table Read Protection Block 5
  3142                           ;	EBTR5 = 0x1, unprogrammed default
  3143                           ;	Table Read Protection Block 6
  3144                           ;	EBTR6 = 0x1, unprogrammed default
  3145                           ;	Table Read Protection Block 7
  3146                           ;	EBTR7 = 0x1, unprogrammed default
  3147   30000A                     	org	3145738
  3148   30000A  FF                 	db	255
  3149                           
  3150                           ;Config register CONFIG6H @ 0x30000B
  3151                           ;	unspecified, using default values
  3152                           ;	Boot Block Table Read Protection bit
  3153                           ;	EBTRB = 0x1, unprogrammed default
  3154   30000B                     	org	3145739
  3155   30000B  FF                 	db	255
  3156                           tosu	equ	0xFFF
  3157                           tosh	equ	0xFFE
  3158                           tosl	equ	0xFFD
  3159                           stkptr	equ	0xFFC
  3160                           pclatu	equ	0xFFB
  3161                           pclath	equ	0xFFA
  3162                           pcl	equ	0xFF9
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           prodh	equ	0xFF4
  3168                           prodl	equ	0xFF3
  3169                           indf0	equ	0xFEF
  3170                           postinc0	equ	0xFEE
  3171                           postdec0	equ	0xFED
  3172                           preinc0	equ	0xFEC
  3173                           plusw0	equ	0xFEB
  3174                           fsr0h	equ	0xFEA
  3175                           fsr0l	equ	0xFE9
  3176                           wreg	equ	0xFE8
  3177                           indf1	equ	0xFE7
  3178                           postinc1	equ	0xFE6
  3179                           postdec1	equ	0xFE5
  3180                           preinc1	equ	0xFE4
  3181                           plusw1	equ	0xFE3
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           bsr	equ	0xFE0
  3185                           indf2	equ	0xFDF
  3186                           postinc2	equ	0xFDE
  3187                           postdec2	equ	0xFDD
  3188                           preinc2	equ	0xFDC
  3189                           plusw2	equ	0xFDB
  3190                           fsr2h	equ	0xFDA
  3191                           fsr2l	equ	0xFD9
  3192                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        18
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160      0     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2423$buffer	PTR unsigned char  size(2) Largest target is 0

    S2423$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    4342
                                             61 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                    _lights_flashing
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3647
                                             42 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3287
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     136
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lights_flashing                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _lights_flashing
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7E       5       78.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllhhh     2D      0       0      46        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      48        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      55        0.0%
BITBIGSFRllllhl      5      0       0      51        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      50        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC      60        0.0%
DATA                 0      0      DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 18:22:48 2024

               _turn180Delay 00D8                           l33 1462                           l36 1324  
                         l55 1540                           l58 1604                 ___awdiv@sign 0006  
                        l241 1594                          l250 1682                          l146 13B4  
                        l244 1596                          l247 15BC                          l256 1678  
                        l259 1664                          l371 1640                          l380 1644  
                        l383 1658                          l392 1622                          l529 15E4  
                        l389 156A                          l782 1144                          l769 1094  
                        u320 1654                          u321 1650                          u180 15A6  
                        u181 15A2                          u190 15BC                          u510 129E  
                        u191 15B8                          u511 1296                          u530 12BE  
                        u531 12B6                          _ISR 0008                          u550 12FA  
                        u551 12F2                          u528 12A0                          u800 1084  
                        u801 1080                          u570 1318                          u810 10A8  
                        u571 1310                          u811 10A4                          u548 12C0  
                        u820 10C2                          u900 11BE                          u821 10BE  
                        u901 11BA                          u750 0FE4                          u830 10DC  
                        u910 14E8                          u751 0FE0                          u831 10D8  
                        u911 14E4                          u568 12FC                          u760 0FFE  
                        u840 10FA                          u920 0E2E                          u761 0FFA  
                        u841 10F6                          u921 0E2A                          u770 1024  
                        u850 1110                          u930 0E72                          u771 1020  
                        u851 110C                          u931 0E6E                          u588 131A  
                        u780 1042                          u860 1134                          u940 0E92  
                        u781 103E                          u861 1130                          u941 0E8E  
                        u790 105E                          u870 1156                          u950 0EC8  
                        u791 105A                          u871 1152                          u951 0EC2  
                        u880 1166                          u960 0ECA                          u881 1162  
                        u890 118C                          u970 0F2A                          u891 1188  
                        u971 0F26                          u980 0F3A                          u981 0F36  
                        u990 0F4A                          u991 0F46                          _abs 14DA  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 00D4  
                       ?_ISR 0001                         ?_abs 0007                         l2030 0FF0  
                       l2022 0FD2                         l2110 118C                         l2102 1146  
                       l2040 1024                         l2032 0FFE                         l2024 0FD6  
                       l2112 11BE                         l2104 1156                         l2120 0E08  
                       l1216 14D8                         l2050 105E                         l2042 102C  
                       l2034 1006                         l2026 0FE4                         l2106 1166  
                       l2130 0E52                         l2122 0E2E                         l2060 1084  
                       l2052 1066                         l2044 1034                         l2036 100A  
                       l2028 0FEC                         l2116 14DA                         l2108 1170  
                       l2140 0ECC                         l2132 0E72                         l2124 0E36  
                       l1260 14A4                         l2300 14CE                         l2310 152C  
                       l2062 108C                         l2054 1068                         l2046 1042  
                       l2038 1012                         l2070 10A8                         l2118 14E8  
                       l1254 0FD0                         l2150 0F4A                         l2142 0EFC  
                       l2134 0E92                         l2126 0E44                         l2312 1536  
                       l2304 150E                         l2320 1360                         l2056 106E  
                       l2048 1048                         l2080 10DC                         l2072 10B0  
                       l1264 14F4                         l2152 0F5A                         l2144 0F18  
                       l2136 0EAA                         l2160 0F9E                         l2128 0E48  
                       l1450 1660                         l2306 1512                         l2330 139C  
                       l2322 1384                         l2314 1326                         l1610 12D0  
                       l2058 1074                         l2090 1118                         l2082 10E4  
                       l2074 10B4                         l2066 1096                         l1290 168C  
                       l2154 0F6C                         l2146 0F2A                         l2138 0EB4  
                       l1267 150C                         l1444 167A                         l1452 1670  
                       l2308 151C                         l2332 13A6                         l2324 138E  
                       l2316 1336                         l1612 12E8                         l2092 111E  
                       l2084 10EC                         l2076 10C2                         l2068 109A  
                       l2156 0F86                         l2148 0F3A                         l2164 0FAA  
                       l2420 1214                         l1606 1416                         l1390 1596  
                       l1446 167E                         l1454 1674                         l2334 13A8  
                       l2326 1390                         l2318 135C                         l1614 1306  
                       l2086 10FA                         l2094 1124                         l2078 10CA  
                       l2158 0F88                         l2190 147C                         l2430 1230  
                       l2422 1218                         l2414 11F0                         l1279 11EE  
                       l1392 15A6                         l1448 165C                         l2336 13B2  
                       l2328 139A                         l1608 128C                         l1472 1644  
                       l2096 1134                         l2088 1110                         l2192 149C  
                       l2440 124C                         l2432 1238                         l2424 121C  
                       l2416 1208                         l1490 157C                         l1474 1654  
                       l2290 1554                         l2098 113C                         l2186 1464  
                       l2450 1268                         l2442 1254                         l2434 123C  
                       l2426 1220                         l2418 1208                         l1492 157E  
                       l2196 15E8                         l1740 1624                         l2284 1542  
                       l2188 146C                         l2292 14A6                         l2380 1606  
                       l2452 126C                         l2444 125C                         l2436 1240  
                       l2428 1228                         l1494 1580                         l1486 156C  
                       l1750 163E                         l1742 162E                         l2286 1546  
                       l2294 14AE                         l2382 161A                         l2454 126C  
                       l2446 1260                         l2438 1244                         l1760 15DC  
                       l1752 15BE                         l1496 1582                         l1488 1576  
                       l1744 1630                         l2288 1552                         l2296 14B6  
                       l2456 1276                         l2448 1264                         l1762 15E0  
                       l1754 15C6                         l1746 163A                         l2298 14BE  
                       l2458 1280                         l1764 15E2                         l1756 15C8  
                       l1748 163C                         l1758 15DA                         STR_1 0E01  
                       u1000 0F5A                         u1001 0F56                         u1010 0F9A  
                       u1011 0F96                         u1040 149C                         u1041 1498  
                       u1210 156A                         u1211 1566                 _BAUD4CONbits 0EE9  
                       _T2PR 0FBC                         u1707 11FA                         u1717 12DA  
                       u1727 1522                         abs@a 0007                         _dbuf 009C  
                       _main 11F0                         _prec 00D2                         fsr1h 0FE2  
                       fsr2h 0FDA                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 005F                         start 0020  
               ___param_bank 0000                        ??_ISR 0001                        ??_abs 0009  
             _sendIntSerial4 1606                        ?_main 0001              __end_of___awdiv 1096  
            __end_of___awmod 1146              ___awdiv@divisor 0003                        i2l535 001C  
            ___awdiv@counter 0005                 vfpfcnvrt@fmt 000C                        _TMR0H 0FD4  
                      _TMR0L 0FD3      __end_of_sendCharSerial4 165A   __end_of_I2C_2_Master_Start 1684  
 __end_of_I2C_2_Master_Write 1666                  _turningGear 0056                        _flags 005A  
                      _fputc 1146                        _width 00D0                        _putch 168C  
          _turnRight135Delay 00DA                        tablat 0FF5              _turnLeft90Delay 0054  
                      ttemp5 0060                        ttemp6 0063                        ttemp7 0067  
                      status 0FD8                        wtemp8 0060              __end_of_sprintf 14DA  
            __initialization 13B6                 __end_of_main 128C       __end_of_sendIntSerial4 1624  
                     ??_main 003E                __activetblptr 0003                       ?_fputc 0001  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0001                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2020 001A                       i2l2018 000A  
                     _RG6PPS 0E88                vfpfcnvrt@done 000F     __end_of_color_click_init 1542  
                     _RX4PPS 0E15                       _TX4REG 0EE4             _turnLeft135Delay 00DC  
              ??_Timer0_init 0001                 _CCPTMRS0bits 0FAD                 vfprintf@cfmt 0019  
            _lights_flashing 128C                    ??___awdiv 0005                    ??___awmod 0005  
            ?_sendIntSerial4 002B                       clear_0 13FC             ___awdiv@quotient 0007  
            ___awmod@divisor 0003                       isa$std 0001              ___awmod@counter 0005  
                     fputc@c 0001                 __pdataCOMRAM 0052                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           ?_sendCharSerial4 0001                       putch@c 0001             __end_of_vfprintf 14A6  
          ??_initDCmotorsPWM 0003                    ??_sprintf 001E            _buggy_lights_init 1416  
                 __accesstop 0060      __end_of__initialization 140C           ?_buggy_lights_init 0001  
              ___rparam_used 0001               __pcstackCOMRAM 0001                 __pidataBANK0 1666  
        ??_buggy_lights_init 0001                __end_of_fputc 11F0                __end_of_putch 168E  
        __end_of_Timer0_init 15E6                      ??_fputc 0004    __end_of_buggy_lights_init 1464  
                    ??_putch 0001                   __pbssBANK0 0060      __end_of_lights_flashing 1326  
          _color_writetoaddr 15E6                 _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003  
        ??_color_writetoaddr 0004                      _SP4BRGH 0EE6                      _SP4BRGL 0EE5  
                    i2u74_40 001A                      i2u74_41 0016                      _SSP2ADD 0ED6  
                    _SSP2BUF 0ED5       color_writetoaddr@value 0003    __end_of_color_writetoaddr 1606  
         _I2C_2_Master_Start 167A                   _initUSART4 1624           _I2C_2_Master_Write 165A  
                    __Hparam 0000                      __Lparam 0000                  _Timer0_init 15BE  
    sendStringSerial4@string 0002                      ___awdiv 0FD2                      ___awmod 1096  
        ?_I2C_2_Master_Start 0001          ?_I2C_2_Master_Write 0001                    ?_vfprintf 0016  
               __psmallconst 0E00                      __pcinit 13B6                      __ramtop 0E00  
                    __ptext0 11F0                      __ptext1 1606                      __ptext2 14A6  
                    __ptext3 1464                      __ptext4 0E08                      __ptext5 1146  
                    __ptext6 168C                      __ptext7 14DA                      __ptext8 1096  
                    __ptext9 0FD2                    _T2CONbits 0FBD             ___awmod@dividend 0001  
                  _T2HLTbits 0FBE                _RxBufWriteCnt 005E                      _sprintf 14A6  
       ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002         end_of_initialization 140C  
                    fputc@fp 0003            ?_color_click_init 0001             ?_lights_flashing 0001  
         ??_color_click_init 0005             ??_sendIntSerial4 002D            __end_of_vfpfcnvrt 0FD2  
                    postdec1 0FE5                      postdec2 0FDD                      postinc0 0FEE  
                    postinc1 0FE6                      postinc2 0FDE             vfpfcnvrt@convarg 0011  
                 ??_vfprintf 0019              _initDCmotorsPWM 1326         sendIntSerial4@string 002D  
                  _TRISAbits 0F81                    _TRISCbits 0F83                    _TRISDbits 0F84  
                  _TRISEbits 0F85                    _TRISFbits 0F86                    _TRISGbits 0F87  
                  _TRISHbits 0F88     color_writetoaddr@address 0004                  _CCP1CONbits 0FAB  
               _EUSART4RXbuf 00BC                 _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7  
                _CCP3CONbits 0F26                  ?_initUSART4 0001                  _CCP4CONbits 0F22  
  sendCharSerial4@charToSend 0001                   main@motorL 0040                   main@motorR 0049  
                vfpfcnvrt@ap 000D                  vfpfcnvrt@cp 0010                  vfpfcnvrt@fp 000B  
              __pidataCOMRAM 1684          start_initialization 13B6                  __end_of_ISR 0020  
                __end_of_abs 150E                _TxBufWriteCnt 005C             _turnRight90Delay 0052  
    __end_of_initDCmotorsPWM 13B6                  vfprintf@fmt 0017                  __pdataBANK0 00D4  
                __pbssCOMRAM 005A                 ?_Timer0_init 0001                    __pintcode 0008  
                   ?___awdiv 0001                     ?___awmod 0001                  __smallconst 0E00  
          _I2C_2_Master_Idle 1596            _I2C_2_Master_Init 156C            _I2C_2_Master_Stop 1670  
               _RxBufReadCnt 005D           ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001  
         ?_I2C_2_Master_Stop 0001                _headbuttDelay 00D6     initDCmotorsPWM@PWMperiod 0001  
                   ?_sprintf 001A                    _rampDelay 0059            _sendStringSerial4 1542  
        ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001                     _LATAbits 0F79  
        ??_I2C_2_Master_Stop 0002                     _LATCbits 0F7B                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0002  
                   _PIE4bits 0E2D                     _PIR0bits 0E33                     _PIR4bits 0E37  
           ?_initDCmotorsPWM 0001            ??_sendCharSerial4 0001                     _SSP2CON2 0EDA  
        ??_sendStringSerial4 0003                     _SSP2STAT 0ED8                    _vfpfcnvrt 0E08  
  __end_of_I2C_2_Master_Idle 15BE    __end_of_I2C_2_Master_Init 1596    __end_of_I2C_2_Master_Stop 167A  
I2C_2_Master_Write@data_byte 0002                 _TxBufReadCnt 005B                   vfpfcnvrt@c 0015  
                  copy_data0 13CA                    copy_data1 13EA    __end_of_sendStringSerial4 156C  
               ??_initUSART4 0001                     __Hrparam 0000                   vfprintf@ap 0018  
                   __Lrparam 0000                   vfprintf@fp 0016                   ?_vfpfcnvrt 000B  
                 _ANSELDbits 0EA7                   sprintf@fmt 001B                   _T0CON0bits 0FD5  
                 _T0CON1bits 0FD6           __end_of_initUSART4 1642                     __ptext10 1542  
                   __ptext11 1642                     __ptext20 1596                     __ptext12 128C  
                   __ptext21 156C                     __ptext13 1624                     __ptext22 1416  
                   __ptext14 1326                     __ptext23 15BE                     __ptext15 150E  
                   __ptext16 15E6                     __ptext17 165A                     __ptext18 1670  
                   __ptext19 167A                 _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA  
                   isa$xinst 0000                   _RC4STAbits 0EE7                     int$flags 005F  
                   _vfprintf 1464                   _INTCONbits 0FF2                     intlevel2 0000  
                  sprintf@ap 001E                 _topGearRight 0057                  ??_vfpfcnvrt 000E  
           _color_click_init 150E        sendIntSerial4@integer 002B                  _topGearLeft 0058  
                   sprintf@f 001F                     sprintf@s 001A                   _SSP2DATPPS 0E1D  
          ??_lights_flashing 0001                   _SSP2CLKPPS 0E1C                   _TX4STAbits 0EE8  
            _sendCharSerial4 1642  
