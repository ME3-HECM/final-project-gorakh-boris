

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 11:22:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Generated 18/08/2023 GMT
    69                           ; 
    70                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F67K40 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     
   103                           	psect	idataCOMRAM
   104   002CDC                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _timer_high_pointer
   108   002CDC  28                 	db	low _trail_timer_high
   109   002CDD  01                 	db	high _trail_timer_high
   110                           
   111                           ;initializer for _turningGear
   112   002CDE  2A                 	db	42
   113                           
   114                           ;initializer for _topGearRight
   115   002CDF  14                 	db	20
   116                           
   117                           ;initializer for _topGearLeft
   118   002CE0  14                 	db	20
   119                           
   120                           ;initializer for _rampDelay
   121   002CE1  08                 	db	8
   122                           
   123                           	psect	idataBANK0
   124   002C86                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _manoeuvre_pointer
   128   002C86  00                 	db	low _trail_manoeuvre
   129   002C87  01                 	db	high _trail_manoeuvre
   130                           
   131                           ;initializer for _timer_low_pointer
   132   002C88  14                 	db	low _trail_timer_low
   133   002C89  01                 	db	high _trail_timer_low
   134                           
   135                           ;initializer for _squareDelay
   136   002C8A  012C               	dw	300
   137                           
   138                           ;initializer for _headbuttDelay
   139   002C8C  0046               	dw	70
   140                           
   141                           ;initializer for _turn180Delay
   142   002C8E  01FE               	dw	510
   143                           
   144                           ;initializer for _turnRight135Delay
   145   002C90  012C               	dw	300
   146                           
   147                           ;initializer for _turnLeft135Delay
   148   002C92  012C               	dw	300
   149                           
   150                           ;initializer for _turnRight90Delay
   151   002C94  00AF               	dw	175
   152                           
   153                           ;initializer for _turnLeft90Delay
   154   002C96  00AF               	dw	175
   155                           
   156                           ;initializer for _wall_threshold
   157   002C98  012C               	dw	300
   158   000000                     _TMR0H	set	4052
   159   000000                     _TX4REG	set	3812
   160   000000                     _RC4STAbits	set	3815
   161   000000                     _SP4BRGH	set	3814
   162   000000                     _LATEbits	set	3965
   163   000000                     _TRISEbits	set	3973
   164   000000                     _LATGbits	set	3967
   165   000000                     _TRISGbits	set	3975
   166   000000                     _LATFbits	set	3966
   167   000000                     _LATHbits	set	3968
   168   000000                     _TRISFbits	set	3974
   169   000000                     _TRISHbits	set	3976
   170   000000                     _SSP2CON2bits	set	3802
   171   000000                     _RX4PPS	set	3605
   172   000000                     _SSP2CLKPPS	set	3612
   173   000000                     _SSP2DATPPS	set	3613
   174   000000                     _RC7PPS	set	3689
   175   000000                     _RE2PPS	set	3700
   176   000000                     _LATAbits	set	3961
   177   000000                     _LATDbits	set	3964
   178   000000                     _TRISDbits	set	3972
   179   000000                     _T2PR	set	4028
   180   000000                     _T2CONbits	set	4029
   181   000000                     _CCPR2H	set	4006
   182   000000                     _CCPR1H	set	4010
   183   000000                     _TRISCbits	set	3971
   184   000000                     _TRISAbits	set	3969
   185   000000                     _LATCbits	set	3963
   186   000000                     _RE4PPS	set	3702
   187   000000                     _RG6PPS	set	3720
   188   000000                     _RD5PPS	set	3695
   189   000000                     _ANSELDbits	set	3751
   190   000000                     _SSP2ADD	set	3798
   191   000000                     _SSP2CON1bits	set	3801
   192   000000                     _CCPR4H	set	3873
   193   000000                     _CCPR3H	set	3877
   194   000000                     _TMR0L	set	4051
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _T0CON1bits	set	4054
   197   000000                     _T2CLKCONbits	set	4031
   198   000000                     _T2HLTbits	set	4030
   199   000000                     _CCP1CONbits	set	4011
   200   000000                     _CCPTMRS0bits	set	4013
   201   000000                     _CCP2CONbits	set	4007
   202   000000                     _CCP3CONbits	set	3878
   203   000000                     _CCP4CONbits	set	3874
   204   000000                     _RC4REG	set	3811
   205   000000                     _SP4BRGL	set	3813
   206   000000                     _TX4STAbits	set	3816
   207   000000                     _BAUD4CONbits	set	3817
   208   000000                     _SSP2CON2	set	3802
   209   000000                     _SSP2STAT	set	3800
   210   000000                     _ANSELFbits	set	3764
   211   000000                     _SSP2BUF	set	3797
   212   000000                     _PIE0bits	set	3625
   213   000000                     _PIR4bits	set	3639
   214   000000                     _RC0PPS	set	3682
   215   000000                     _RD6PPS	set	3696
   216   000000                     _INTCONbits	set	4082
   217   000000                     _PIR0bits	set	3635
   218                           
   219                           	psect	smallconst
   220   000E00                     __psmallconst:
   221                           	callstack 0
   222   000E00  00                 	db	0
   223   000E01                     STR_5:
   224                           
   225                           ; BSR set to: 14
   226   000E01  25                 	db	37
   227   000E02  75                 	db	117	;'u'
   228   000E03  20                 	db	32
   229   000E04  25                 	db	37
   230   000E05  75                 	db	117	;'u'
   231   000E06  20                 	db	32
   232   000E07  25                 	db	37
   233   000E08  75                 	db	117	;'u'
   234   000E09  20                 	db	32
   235   000E0A  25                 	db	37
   236   000E0B  75                 	db	117	;'u'
   237   000E0C  20                 	db	32
   238   000E0D  0D                 	db	13
   239   000E0E  00                 	db	0
   240   000E0F                     STR_1:
   241                           
   242                           ; BSR set to: 14
   243   000E0F  25                 	db	37
   244   000E10  64                 	db	100	;'d'
   245   000E11  20                 	db	32
   246   000E12  0D                 	db	13
   247   000E13  00                 	db	0
   248   000E14                     STR_2:
   249                           
   250                           ; BSR set to: 14
   251   000E14  25                 	db	37
   252   000E15  64                 	db	100	;'d'
   253   000E16  20                 	db	32
   254   000E17  00                 	db	0
   255   000E18  00                 	db	0	; dummy byte at the end
   256   000000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260   002666                     __pcinit:
   261                           	callstack 0
   262   002666                     start_initialization:
   263                           	callstack 0
   264   002666                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (20 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269   002666  0E86               	movlw	low __pidataBANK0
   270   002668  6EF6               	movwf	tblptrl,c
   271   00266A  0E2C               	movlw	high __pidataBANK0
   272   00266C  6EF7               	movwf	tblptrh,c
   273   00266E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274   002670  6EF8               	movwf	tblptru,c
   275   002672  EE00  F0A7         	lfsr	0,__pdataBANK0
   276   002676  EE10 F014          	lfsr	1,20
   277   00267A                     copy_data0:
   278   00267A  0009               	tblrd		*+
   279   00267C  CFF5 FFEE          	movff	tablat,postinc0
   280   002680  50E5               	movf	postdec1,w,c
   281   002682  50E1               	movf	fsr1l,w,c
   282   002684  E1FA               	bnz	copy_data0
   283                           
   284                           ; Initialize objects allocated to COMRAM (6 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286   002686  0EDC               	movlw	low __pidataCOMRAM
   287   002688  6EF6               	movwf	tblptrl,c
   288   00268A  0E2C               	movlw	high __pidataCOMRAM
   289   00268C  6EF7               	movwf	tblptrh,c
   290   00268E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291   002690  6EF8               	movwf	tblptru,c
   292   002692  EE00  F054         	lfsr	0,__pdataCOMRAM
   293   002696  EE10 F006          	lfsr	1,6
   294   00269A                     copy_data1:
   295   00269A  0009               	tblrd		*+
   296   00269C  CFF5 FFEE          	movff	tablat,postinc0
   297   0026A0  50E5               	movf	postdec1,w,c
   298   0026A2  50E1               	movf	fsr1l,w,c
   299   0026A4  E1FA               	bnz	copy_data1
   300                           
   301                           ; Clear objects allocated to BANK1 (60 bytes)
   302   0026A6  EE01  F000         	lfsr	0,__pbssBANK1
   303   0026AA  0E3C               	movlw	60
   304   0026AC                     clear_0:
   305   0026AC  6AEE               	clrf	postinc0,c
   306   0026AE  06E8               	decf	wreg,f,c
   307   0026B0  E1FD               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to BANK0 (39 bytes)
   310   0026B2  EE00  F060         	lfsr	0,__pbssBANK0
   311   0026B6  0E27               	movlw	39
   312   0026B8                     clear_1:
   313   0026B8  6AEE               	clrf	postinc0,c
   314   0026BA  06E8               	decf	wreg,f,c
   315   0026BC  E1FD               	bnz	clear_1
   316                           
   317                           ; Clear objects allocated to COMRAM (4 bytes)
   318   0026BE  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   319   0026C0  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   320   0026C2  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   321   0026C4  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   322   0026C6                     end_of_initialization:
   323                           	callstack 0
   324   0026C6                     __end_of__initialization:
   325                           	callstack 0
   326   0026C6  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   327   0026C8  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   328   0026CA  0100               	movlb	0
   329   0026CC  EFE8  F00E         	goto	_main	;jump to C main() function
   330                           
   331                           	psect	bssCOMRAM
   332   00005A                     __pbssCOMRAM:
   333                           	callstack 0
   334   00005A                     _manoeuvre_count:
   335                           	callstack 0
   336   00005A                     	ds	1
   337   00005B                     _lost_flag:
   338                           	callstack 0
   339   00005B                     	ds	1
   340   00005C                     _return_flag:
   341                           	callstack 0
   342   00005C                     	ds	1
   343   00005D                     _returning:
   344                           	callstack 0
   345   00005D                     	ds	1
   346                           
   347                           	psect	dataCOMRAM
   348   000054                     __pdataCOMRAM:
   349                           	callstack 0
   350   000054                     _timer_high_pointer:
   351                           	callstack 0
   352   000054                     	ds	2
   353   000056                     _turningGear:
   354                           	callstack 0
   355   000056                     	ds	1
   356   000057                     _topGearRight:
   357                           	callstack 0
   358   000057                     	ds	1
   359   000058                     _topGearLeft:
   360                           	callstack 0
   361   000058                     	ds	1
   362   000059                     _rampDelay:
   363                           	callstack 0
   364   000059                     	ds	1
   365                           
   366                           	psect	bssBANK0
   367   000060                     __pbssBANK0:
   368                           	callstack 0
   369   000060                     _dbuf:
   370                           	callstack 0
   371   000060                     	ds	32
   372   000080                     _nout:
   373                           	callstack 0
   374   000080                     	ds	2
   375   000082                     _width:
   376                           	callstack 0
   377   000082                     	ds	2
   378   000084                     _prec:
   379                           	callstack 0
   380   000084                     	ds	2
   381   000086                     _flags:
   382                           	callstack 0
   383   000086                     	ds	1
   384                           
   385                           	psect	dataBANK0
   386   0000A7                     __pdataBANK0:
   387                           	callstack 0
   388   0000A7                     _manoeuvre_pointer:
   389                           	callstack 0
   390   0000A7                     	ds	2
   391   0000A9                     _timer_low_pointer:
   392                           	callstack 0
   393   0000A9                     	ds	2
   394   0000AB                     _squareDelay:
   395                           	callstack 0
   396   0000AB                     	ds	2
   397   0000AD                     _headbuttDelay:
   398                           	callstack 0
   399   0000AD                     	ds	2
   400   0000AF                     _turn180Delay:
   401                           	callstack 0
   402   0000AF                     	ds	2
   403   0000B1                     _turnRight135Delay:
   404                           	callstack 0
   405   0000B1                     	ds	2
   406   0000B3                     _turnLeft135Delay:
   407                           	callstack 0
   408   0000B3                     	ds	2
   409   0000B5                     _turnRight90Delay:
   410                           	callstack 0
   411   0000B5                     	ds	2
   412   0000B7                     _turnLeft90Delay:
   413                           	callstack 0
   414   0000B7                     	ds	2
   415   0000B9                     _wall_threshold:
   416                           	callstack 0
   417   0000B9                     	ds	2
   418                           
   419                           	psect	bssBANK1
   420   000100                     __pbssBANK1:
   421                           	callstack 0
   422   000100                     _trail_manoeuvre:
   423                           	callstack 0
   424   000100                     	ds	20
   425   000114                     _trail_timer_low:
   426                           	callstack 0
   427   000114                     	ds	20
   428   000128                     _trail_timer_high:
   429                           	callstack 0
   430   000128                     	ds	20
   431                           
   432                           	psect	cstackBANK0
   433   000087                     __pcstackBANK0:
   434                           	callstack 0
   435   000087                     main@HSV_colour:
   436                           	callstack 0
   437                           
   438                           ; 6 bytes @ 0x0
   439   000087                     	ds	6
   440   00008D                     main@motorL:
   441                           	callstack 0
   442                           
   443                           ; 9 bytes @ 0x6
   444   00008D                     	ds	9
   445   000096                     main@motorR:
   446                           	callstack 0
   447                           
   448                           ; 9 bytes @ 0xF
   449   000096                     	ds	9
   450   00009F                     main@measured_colour:
   451                           	callstack 0
   452                           
   453                           ; 8 bytes @ 0x18
   454   00009F                     	ds	8
   455                           
   456                           	psect	cstackCOMRAM
   457   000001                     __pcstackCOMRAM:
   458                           	callstack 0
   459   000001                     ??_toggle_tricolour_LED:
   460   000001                     ??_I2C_2_Master_Idle:
   461   000001                     ?_maxRGB:
   462                           	callstack 0
   463   000001                     ?_minRGB:
   464                           	callstack 0
   465   000001                     ?___awdiv:
   466                           	callstack 0
   467   000001                     ?___awmod:
   468                           	callstack 0
   469   000001                     ?___lwdiv:
   470                           	callstack 0
   471   000001                     ?___lwmod:
   472                           	callstack 0
   473   000001                     ?___lmul:
   474                           	callstack 0
   475   000001                     ?___lldiv:
   476                           	callstack 0
   477   000001                     ?___xxtofl:
   478                           	callstack 0
   479   000001                     maxRGB@p:
   480                           	callstack 0
   481   000001                     minRGB@p:
   482                           	callstack 0
   483   000001                     sendCharSerial4@charToSend:
   484                           	callstack 0
   485   000001                     write_timer@tL:
   486                           	callstack 0
   487   000001                     initDCmotorsPWM@PWMperiod:
   488                           	callstack 0
   489   000001                     ___awdiv@dividend:
   490                           	callstack 0
   491   000001                     ___awmod@dividend:
   492                           	callstack 0
   493   000001                     ___lwdiv@dividend:
   494                           	callstack 0
   495   000001                     ___lwmod@dividend:
   496                           	callstack 0
   497   000001                     fputc@c:
   498                           	callstack 0
   499   000001                     ___lmul@multiplier:
   500                           	callstack 0
   501   000001                     ___lldiv@dividend:
   502                           	callstack 0
   503   000001                     ___xxtofl@val:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x0
   507   000001                     	ds	1
   508   000002                     ??_I2C_2_Master_Read:
   509   000002                     I2C_2_Master_Write@data_byte:
   510                           	callstack 0
   511   000002                     write_timer@tH:
   512                           	callstack 0
   513   000002                     sendStringSerial4@string:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x1
   517   000002                     	ds	1
   518   000003                     color_writetoaddr@value:
   519                           	callstack 0
   520   000003                     I2C_2_Master_Read@ack:
   521                           	callstack 0
   522   000003                     fputc@fp:
   523                           	callstack 0
   524   000003                     ___awdiv@divisor:
   525                           	callstack 0
   526   000003                     ___awmod@divisor:
   527                           	callstack 0
   528   000003                     ___lwdiv@divisor:
   529                           	callstack 0
   530   000003                     ___lwmod@divisor:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x2
   534   000003                     	ds	1
   535   000004                     ??_fputc:
   536   000004                     color_writetoaddr@address:
   537                           	callstack 0
   538   000004                     I2C_2_Master_Read@tmp:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x3
   542   000004                     	ds	1
   543   000005                     ??_color_click_init:
   544   000005                     ??___xxtofl:
   545   000005                     ?_color_read_Red:
   546                           	callstack 0
   547   000005                     ?_color_read_Green:
   548                           	callstack 0
   549   000005                     ?_color_read_Blue:
   550                           	callstack 0
   551   000005                     ?_color_read_Clear:
   552                           	callstack 0
   553   000005                     ___awdiv@counter:
   554                           	callstack 0
   555   000005                     ___awmod@counter:
   556                           	callstack 0
   557   000005                     ___lwmod@counter:
   558                           	callstack 0
   559   000005                     maxRGB@max_val:
   560                           	callstack 0
   561   000005                     minRGB@min_val:
   562                           	callstack 0
   563   000005                     ___lwdiv@quotient:
   564                           	callstack 0
   565   000005                     ___lmul@multiplicand:
   566                           	callstack 0
   567   000005                     ___lldiv@divisor:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x4
   571   000005                     	ds	1
   572   000006                     ___awdiv@sign:
   573                           	callstack 0
   574   000006                     ___awmod@sign:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x5
   578   000006                     	ds	1
   579   000007                     ??_color_read_Red:
   580   000007                     ??_color_read_Green:
   581   000007                     ??_color_read_Blue:
   582   000007                     ??_color_read_Clear:
   583   000007                     ?_abs:
   584                           	callstack 0
   585   000007                     ___lwdiv@counter:
   586                           	callstack 0
   587   000007                     ___awdiv@quotient:
   588                           	callstack 0
   589   000007                     abs@a:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x6
   593   000007                     	ds	2
   594   000009                     ??_abs:
   595   000009                     ___xxtofl@sign:
   596                           	callstack 0
   597   000009                     ___lmul@product:
   598                           	callstack 0
   599   000009                     ___lldiv@quotient:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x8
   603   000009                     	ds	1
   604   00000A                     ___xxtofl@exp:
   605                           	callstack 0
   606   00000A                     color_read_Red@tmp:
   607                           	callstack 0
   608   00000A                     color_read_Green@tmp:
   609                           	callstack 0
   610   00000A                     color_read_Blue@tmp:
   611                           	callstack 0
   612   00000A                     color_read_Clear@tmp:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x9
   616   00000A                     	ds	1
   617   00000B                     ?_vfpfcnvrt:
   618                           	callstack 0
   619   00000B                     vfpfcnvrt@fp:
   620                           	callstack 0
   621   00000B                     ___xxtofl@arg:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0xA
   625   00000B                     	ds	1
   626   00000C                     getRGBCval@p:
   627                           	callstack 0
   628   00000C                     vfpfcnvrt@fmt:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0xB
   632   00000C                     	ds	1
   633   00000D                     ___lldiv@counter:
   634                           	callstack 0
   635   00000D                     vfpfcnvrt@ap:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0xC
   639   00000D                     	ds	1
   640   00000E                     ??_vfpfcnvrt:
   641   00000E                     getHSVval@p1:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0xD
   645   00000E                     	ds	1
   646   00000F                     ?___flmul:
   647                           	callstack 0
   648   00000F                     getHSVval@p2:
   649                           	callstack 0
   650   00000F                     ___flmul@b:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0xE
   654   00000F                     	ds	1
   655   000010                     ??_getHSVval:
   656   000010                     vfpfcnvrt@done:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0xF
   660   000010                     	ds	1
   661   000011                     vfpfcnvrt@cnt:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x10
   665   000011                     	ds	2
   666   000013                     vfpfcnvrt@cp:
   667                           	callstack 0
   668   000013                     ___flmul@a:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x12
   672   000013                     	ds	1
   673   000014                     vfpfcnvrt@convarg:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x13
   677   000014                     	ds	3
   678   000017                     ??___flmul:
   679                           
   680                           ; 1 bytes @ 0x16
   681   000017                     	ds	1
   682   000018                     vfpfcnvrt@c:
   683                           	callstack 0
   684   000018                     getHSVval@sat_scale:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x17
   688   000018                     	ds	1
   689   000019                     ?_vfprintf:
   690                           	callstack 0
   691   000019                     vfprintf@fp:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x18
   695   000019                     	ds	1
   696   00001A                     vfprintf@fmt:
   697                           	callstack 0
   698   00001A                     getHSVval@m:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x19
   702   00001A                     	ds	1
   703   00001B                     ___flmul@sign:
   704                           	callstack 0
   705   00001B                     vfprintf@ap:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x1A
   709   00001B                     	ds	1
   710   00001C                     vfprintf@cfmt:
   711                           	callstack 0
   712   00001C                     getHSVval@sat:
   713                           	callstack 0
   714   00001C                     ___flmul@grs:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x1B
   718   00001C                     	ds	1
   719   00001D                     ?_sprintf:
   720                           	callstack 0
   721   00001D                     sprintf@s:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x1C
   725   00001D                     	ds	1
   726   00001E                     getHSVval@hue:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x1D
   730   00001E                     	ds	1
   731   00001F                     sprintf@fmt:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x1E
   735   00001F                     	ds	1
   736   000020                     ___flmul@aexp:
   737                           	callstack 0
   738   000020                     getHSVval@temp_623:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x1F
   742   000020                     	ds	1
   743   000021                     ___flmul@bexp:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x20
   747   000021                     	ds	1
   748   000022                     ___flmul@prod:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x21
   752   000022                     	ds	2
   753   000024                     getHSVval@temp:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x23
   757   000024                     	ds	2
   758   000026                     ___flmul@temp:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x25
   762   000026                     	ds	2
   763   000028                     ?___fltol:
   764                           	callstack 0
   765   000028                     sprintf@ret:
   766                           	callstack 0
   767   000028                     getHSVval@temp_619:
   768                           	callstack 0
   769   000028                     ___fltol@f1:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x27
   773   000028                     	ds	2
   774   00002A                     sprintf@ap:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x29
   778   00002A                     	ds	1
   779   00002B                     sprintf@f:
   780                           	callstack 0
   781                           
   782                           ; 12 bytes @ 0x2A
   783   00002B                     	ds	1
   784   00002C                     ??___fltol:
   785   00002C                     getHSVval@temp_620:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x2B
   789   00002C                     	ds	4
   790   000030                     ___fltol@sign1:
   791                           	callstack 0
   792   000030                     getHSVval@temp_621:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x2F
   796   000030                     	ds	1
   797   000031                     ___fltol@exp1:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x30
   801   000031                     	ds	1
   802   000032                     scaleRGB@p:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x31
   806   000032                     	ds	1
   807   000033                     ??_scaleRGB:
   808                           
   809                           ; 1 bytes @ 0x32
   810   000033                     	ds	1
   811   000034                     getHSVval@temp_622:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x33
   815   000034                     	ds	3
   816   000037                     sendRGBCvalSerial4@col_val:
   817                           	callstack 0
   818   000037                     sendHSVvalSerial4@col_val:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x36
   822   000037                     	ds	1
   823   000038                     getHSVval@temp_618:
   824                           	callstack 0
   825   000038                     sendHSVvalSerial4@tempStr:
   826                           	callstack 0
   827   000038                     sendRGBCvalSerial4@tempStr:
   828                           	callstack 0
   829                           
   830                           ; 26 bytes @ 0x37
   831   000038                     	ds	4
   832   00003C                     getHSVval@hue_scale:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x3B
   836   00003C                     	ds	2
   837   00003E                     getHSVval@M:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x3D
   841   00003E                     	ds	2
   842   000040                     getHSVval@C:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x3F
   846   000040                     	ds	18
   847   000052                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x51
   850   000052                     	ds	2
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 27 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  motorR          9   15[BANK0 ] struct DC_motor
   862 ;;  motorL          9    6[BANK0 ] struct DC_motor
   863 ;;  measured_col    8   24[BANK0 ] struct RGBC_val
   864 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   865 ;;  PWMcycle        2    0        unsigned int 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;Total ram usage:       34 bytes
   880 ;; Hardware stack levels required when called: 7
   881 ;; This function calls:
   882 ;;		_Timer0_init
   883 ;;		_buggy_lights_init
   884 ;;		_color_click_init
   885 ;;		_getHSVval
   886 ;;		_getRGBCval
   887 ;;		_initDCmotorsPWM
   888 ;;		_initUSART4
   889 ;;		_scaleRGB
   890 ;;		_sendHSVvalSerial4
   891 ;;		_sendRGBCvalSerial4
   892 ;;		_toggle_tricolour_LED
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899   001DD0                     __ptext0:
   900                           	callstack 0
   901   001DD0                     _main:
   902                           	callstack 24
   903   001DD0                     
   904                           ;main.c: 28:     struct RGBC_val measured_colour;;main.c: 29:         measured_colour.R 
      +                          = 0;
   905   001DD0  0E00               	movlw	0
   906   001DD2  0100               	movlb	0	; () banked
   907   001DD4  6FA0               	movwf	(main@measured_colour+1)& (0+255),b
   908   001DD6  0E00               	movlw	0
   909   001DD8  6F9F               	movwf	main@measured_colour& (0+255),b
   910                           
   911                           ;main.c: 30:         measured_colour.G = 0;
   912   001DDA  0E00               	movlw	0
   913   001DDC  6FA2               	movwf	(main@measured_colour+3)& (0+255),b
   914   001DDE  0E00               	movlw	0
   915   001DE0  6FA1               	movwf	(main@measured_colour+2)& (0+255),b
   916                           
   917                           ;main.c: 31:         measured_colour.B = 0;
   918   001DE2  0E00               	movlw	0
   919   001DE4  6FA4               	movwf	(main@measured_colour+5)& (0+255),b
   920   001DE6  0E00               	movlw	0
   921   001DE8  6FA3               	movwf	(main@measured_colour+4)& (0+255),b
   922                           
   923                           ;main.c: 32:         measured_colour.C = 0;
   924   001DEA  0E00               	movlw	0
   925   001DEC  6FA6               	movwf	(main@measured_colour+7)& (0+255),b
   926   001DEE  0E00               	movlw	0
   927   001DF0  6FA5               	movwf	(main@measured_colour+6)& (0+255),b
   928                           
   929                           ;main.c: 34:     struct HSV_val HSV_colour;;main.c: 35:         HSV_colour.H = 0;
   930   001DF2  0E00               	movlw	0
   931   001DF4  6F88               	movwf	(main@HSV_colour+1)& (0+255),b
   932   001DF6  0E00               	movlw	0
   933   001DF8  6F87               	movwf	main@HSV_colour& (0+255),b
   934                           
   935                           ;main.c: 36:         HSV_colour.S = 0;
   936   001DFA  0E00               	movlw	0
   937   001DFC  6F8A               	movwf	(main@HSV_colour+3)& (0+255),b
   938   001DFE  0E00               	movlw	0
   939   001E00  6F89               	movwf	(main@HSV_colour+2)& (0+255),b
   940                           
   941                           ;main.c: 37:         HSV_colour.V = 0;
   942   001E02  0E00               	movlw	0
   943   001E04  6F8C               	movwf	(main@HSV_colour+5)& (0+255),b
   944   001E06  0E00               	movlw	0
   945   001E08  6F8B               	movwf	(main@HSV_colour+4)& (0+255),b
   946                           
   947                           ;main.c: 40:     struct DC_motor motorL, motorR;;main.c: 41:         motorL.power = 0;
   948   001E0A  0E00               	movlw	0
   949   001E0C  6F8D               	movwf	main@motorL& (0+255),b
   950                           
   951                           ;main.c: 42:         motorL.direction = 1;
   952   001E0E  0E01               	movlw	1
   953   001E10  6F8E               	movwf	(main@motorL+1)& (0+255),b
   954                           
   955                           ;main.c: 43:         motorL.brakemode = 1;
   956   001E12  0E01               	movlw	1
   957   001E14  6F8F               	movwf	(main@motorL+2)& (0+255),b
   958   001E16                     
   959                           ; BSR set to: 0
   960                           ;main.c: 44:         motorL.PWMperiod = PWMcycle;
   961   001E16  0E00               	movlw	0
   962   001E18  6F91               	movwf	(main@motorL+4)& (0+255),b
   963   001E1A  0E63               	movlw	99
   964   001E1C  6F90               	movwf	(main@motorL+3)& (0+255),b
   965   001E1E                     
   966                           ; BSR set to: 0
   967                           ;main.c: 45:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   968   001E1E  0EAA               	movlw	170
   969   001E20  6F92               	movwf	(main@motorL+5)& (0+255),b
   970   001E22  0E0F               	movlw	15
   971   001E24  6F93               	movwf	(main@motorL+6)& (0+255),b
   972   001E26                     
   973                           ; BSR set to: 0
   974                           ;main.c: 46:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   975   001E26  0EA6               	movlw	166
   976   001E28  6F94               	movwf	(main@motorL+7)& (0+255),b
   977   001E2A  0E0F               	movlw	15
   978   001E2C  6F95               	movwf	(main@motorL+8)& (0+255),b
   979                           
   980                           ;main.c: 47:         motorR.power = 0;
   981   001E2E  0E00               	movlw	0
   982   001E30  6F96               	movwf	main@motorR& (0+255),b
   983                           
   984                           ;main.c: 48:         motorR.direction = 1;
   985   001E32  0E01               	movlw	1
   986   001E34  6F97               	movwf	(main@motorR+1)& (0+255),b
   987                           
   988                           ;main.c: 49:         motorR.brakemode = 1;
   989   001E36  0E01               	movlw	1
   990   001E38  6F98               	movwf	(main@motorR+2)& (0+255),b
   991   001E3A                     
   992                           ; BSR set to: 0
   993                           ;main.c: 50:         motorR.PWMperiod = PWMcycle;
   994   001E3A  0E00               	movlw	0
   995   001E3C  6F9A               	movwf	(main@motorR+4)& (0+255),b
   996   001E3E  0E63               	movlw	99
   997   001E40  6F99               	movwf	(main@motorR+3)& (0+255),b
   998   001E42                     
   999                           ; BSR set to: 0
  1000                           ;main.c: 51:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1001   001E42  0E25               	movlw	37
  1002   001E44  6F9B               	movwf	(main@motorR+5)& (0+255),b
  1003   001E46  0E0F               	movlw	15
  1004   001E48  6F9C               	movwf	(main@motorR+6)& (0+255),b
  1005   001E4A                     
  1006                           ; BSR set to: 0
  1007                           ;main.c: 52:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1008   001E4A  0E21               	movlw	33
  1009   001E4C  6F9D               	movwf	(main@motorR+7)& (0+255),b
  1010   001E4E  0E0F               	movlw	15
  1011   001E50  6F9E               	movwf	(main@motorR+8)& (0+255),b
  1012   001E52                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 55:     initDCmotorsPWM(PWMcycle);
  1015   001E52  0E00               	movlw	0
  1016   001E54  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1017   001E56  0E63               	movlw	99
  1018   001E58  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1019   001E5A  EC35  F012         	call	_initDCmotorsPWM	;wreg free
  1020                           
  1021                           ;main.c: 56:     buggy_lights_init();
  1022   001E5E  ECC6  F015         	call	_buggy_lights_init	;wreg free
  1023   001E62                     
  1024                           ;main.c: 57:     color_click_init();
  1025   001E62  ECAC  F015         	call	_color_click_init	;wreg free
  1026   001E66                     
  1027                           ;main.c: 58:     initUSART4();
  1028   001E66  EC28  F016         	call	_initUSART4	;wreg free
  1029   001E6A                     
  1030                           ;main.c: 59:     Timer0_init();
  1031   001E6A  EC06  F016         	call	_Timer0_init	;wreg free
  1032   001E6E                     
  1033                           ;main.c: 63:         TRISDbits.TRISD7 = 0;
  1034   001E6E  9E84               	bcf	132,7,c	;volatile
  1035   001E70                     
  1036                           ;main.c: 64:         TRISHbits.TRISH3 = 0;
  1037   001E70  9688               	bcf	136,3,c	;volatile
  1038   001E72                     
  1039                           ;main.c: 66:         LATDbits.LATD7 = 0;
  1040   001E72  9E7C               	bcf	124,7,c	;volatile
  1041   001E74                     
  1042                           ;main.c: 67:         LATHbits.LATH3 = 0;
  1043   001E74  9680               	bcf	128,3,c	;volatile
  1044   001E76                     
  1045                           ;main.c: 71:         TRISFbits.TRISF2 = 1;
  1046   001E76  8486               	bsf	134,2,c	;volatile
  1047   001E78                     
  1048                           ;main.c: 72:         TRISFbits.TRISF3 = 1;
  1049   001E78  8686               	bsf	134,3,c	;volatile
  1050   001E7A                     
  1051                           ;main.c: 74:         ANSELFbits.ANSELF2 = 0;
  1052   001E7A  010E               	movlb	14	; () banked
  1053   001E7C  95B4               	bcf	180,2,b	;volatile
  1054   001E7E                     
  1055                           ; BSR set to: 14
  1056                           ;main.c: 75:         ANSELFbits.ANSELF3 = 0;
  1057   001E7E  97B4               	bcf	180,3,b	;volatile
  1058                           
  1059                           ;main.c: 80:     LATHbits.LATH3 = !LATHbits.LATH3;
  1060   001E80  A680               	btfss	128,3,c	;volatile
  1061   001E82  EF45  F00F         	goto	u2951
  1062   001E86  EF49  F00F         	goto	u2950
  1063   001E8A                     u2951:
  1064   001E8A  6A52               	clrf	??_main^0,c
  1065   001E8C  2A52               	incf	??_main^0,f,c
  1066   001E8E  EF4A  F00F         	goto	u2968
  1067   001E92                     u2950:
  1068   001E92  6A52               	clrf	??_main^0,c
  1069   001E94                     u2968:
  1070   001E94  4652               	rlncf	??_main^0,f,c
  1071   001E96  4652               	rlncf	??_main^0,f,c
  1072   001E98  4652               	rlncf	??_main^0,f,c
  1073   001E9A  5080               	movf	128,w,c	;volatile
  1074   001E9C  1852               	xorwf	??_main^0,w,c
  1075   001E9E  0BF7               	andlw	-9
  1076   001EA0  1852               	xorwf	??_main^0,w,c
  1077   001EA2  6E80               	movwf	128,c	;volatile
  1078   001EA4                     
  1079                           ;main.c: 81:     toggle_tricolour_LED();
  1080   001EA4  EC68  F010         	call	_toggle_tricolour_LED	;wreg free
  1081   001EA8                     l3966:
  1082                           
  1083                           ;main.c: 86:         getRGBCval(&measured_colour);
  1084   001EA8  0E9F               	movlw	low main@measured_colour
  1085   001EAA  6E0C               	movwf	getRGBCval@p^0,c
  1086   001EAC  EC5A  F014         	call	_getRGBCval	;wreg free
  1087   001EB0                     
  1088                           ;main.c: 87:         scaleRGB(&measured_colour);
  1089   001EB0  0E9F               	movlw	low main@measured_colour
  1090   001EB2  6E32               	movwf	scaleRGB@p^0,c
  1091   001EB4  ECFD  F00F         	call	_scaleRGB	;wreg free
  1092   001EB8                     
  1093                           ;main.c: 91:         getHSVval(&HSV_colour, &measured_colour);
  1094   001EB8  0E87               	movlw	low main@HSV_colour
  1095   001EBA  6E0E               	movwf	getHSVval@p1^0,c
  1096   001EBC  0E9F               	movlw	low main@measured_colour
  1097   001EBE  6E0F               	movwf	getHSVval@p2^0,c
  1098   001EC0  EC0D  F007         	call	_getHSVval	;wreg free
  1099   001EC4                     
  1100                           ;main.c: 92:         sendRGBCvalSerial4(&measured_colour);
  1101   001EC4  0E9F               	movlw	low main@measured_colour
  1102   001EC6  6E37               	movwf	sendRGBCvalSerial4@col_val^0,c
  1103   001EC8  EC00  F014         	call	_sendRGBCvalSerial4	;wreg free
  1104   001ECC                     
  1105                           ;main.c: 93:         sendHSVvalSerial4(&HSV_colour);
  1106   001ECC  0E87               	movlw	low main@HSV_colour
  1107   001ECE  6E37               	movwf	sendHSVvalSerial4@col_val^0,c
  1108   001ED0  EC25  F015         	call	_sendHSVvalSerial4	;wreg free
  1109   001ED4                     
  1110                           ;main.c: 94:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1111   001ED4  0E52               	movlw	82
  1112   001ED6  6E53               	movwf	(??_main+1)^0,c
  1113   001ED8  0E2B               	movlw	43
  1114   001EDA  6E52               	movwf	??_main^0,c
  1115   001EDC  0E00               	movlw	0
  1116   001EDE                     u3047:
  1117   001EDE  2EE8               	decfsz	wreg,f,c
  1118   001EE0  D7FE               	bra	u3047
  1119   001EE2  2E52               	decfsz	??_main^0,f,c
  1120   001EE4  D7FC               	bra	u3047
  1121   001EE6  2E53               	decfsz	(??_main+1)^0,f,c
  1122   001EE8  D7FA               	bra	u3047
  1123   001EEA  D000               	nop2	
  1124   001EEC  EF54  F00F         	goto	l3966
  1125   001EF0  EF1E  F000         	goto	start
  1126   001EF4                     __end_of_main:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _toggle_tricolour_LED *****************
  1130 ;; Defined at:
  1131 ;;		line 84 in file "buggy_lights.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text1
  1160   0020D0                     __ptext1:
  1161                           	callstack 0
  1162   0020D0                     _toggle_tricolour_LED:
  1163                           	callstack 29
  1164   0020D0                     
  1165                           ;buggy_lights.c: 88:         LATGbits.LATG1 = !LATGbits.LATG1;
  1166   0020D0  A27F               	btfss	127,1,c	;volatile
  1167   0020D2  EF6D  F010         	goto	u2651
  1168   0020D6  EF71  F010         	goto	u2650
  1169   0020DA                     u2651:
  1170   0020DA  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1171   0020DC  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1172   0020DE  EF72  F010         	goto	u2668
  1173   0020E2                     u2650:
  1174   0020E2  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1175   0020E4                     u2668:
  1176   0020E4  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1177   0020E6  507F               	movf	127,w,c	;volatile
  1178   0020E8  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1179   0020EA  0BFD               	andlw	-3
  1180   0020EC  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1181   0020EE  6E7F               	movwf	127,c	;volatile
  1182                           
  1183                           ;buggy_lights.c: 89:         LATAbits.LATA4 = !LATAbits.LATA4;
  1184   0020F0  A879               	btfss	121,4,c	;volatile
  1185   0020F2  EF7D  F010         	goto	u2671
  1186   0020F6  EF81  F010         	goto	u2670
  1187   0020FA                     u2671:
  1188   0020FA  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1189   0020FC  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1190   0020FE  EF82  F010         	goto	u2688
  1191   002102                     u2670:
  1192   002102  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1193   002104                     u2688:
  1194   002104  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1195   002106  5079               	movf	121,w,c	;volatile
  1196   002108  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1197   00210A  0BEF               	andlw	-17
  1198   00210C  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1199   00210E  6E79               	movwf	121,c	;volatile
  1200                           
  1201                           ;buggy_lights.c: 90:         LATFbits.LATF7 = !LATFbits.LATF7;
  1202   002110  AE7E               	btfss	126,7,c	;volatile
  1203   002112  EF8D  F010         	goto	u2691
  1204   002116  EF91  F010         	goto	u2690
  1205   00211A                     u2691:
  1206   00211A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1207   00211C  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1208   00211E  EF92  F010         	goto	u2708
  1209   002122                     u2690:
  1210   002122  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1211   002124                     u2708:
  1212   002124  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1213   002126  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1214   002128  507E               	movf	126,w,c	;volatile
  1215   00212A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1216   00212C  0B7F               	andlw	-129
  1217   00212E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1218   002130  6E7E               	movwf	126,c	;volatile
  1219                           
  1220                           ;buggy_lights.c: 93:         LATGbits.LATG0 = !LATGbits.LATG0;
  1221   002132  A07F               	btfss	127,0,c	;volatile
  1222   002134  EF9E  F010         	goto	u2711
  1223   002138  EFA2  F010         	goto	u2710
  1224   00213C                     u2711:
  1225   00213C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1226   00213E  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1227   002140  EFA3  F010         	goto	u2728
  1228   002144                     u2710:
  1229   002144  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1230   002146                     u2728:
  1231   002146  507F               	movf	127,w,c	;volatile
  1232   002148  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1233   00214A  0BFE               	andlw	-2
  1234   00214C  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1235   00214E  6E7F               	movwf	127,c	;volatile
  1236                           
  1237                           ;buggy_lights.c: 94:         LATEbits.LATE7 = !LATEbits.LATE7;
  1238   002150  AE7D               	btfss	125,7,c	;volatile
  1239   002152  EFAD  F010         	goto	u2731
  1240   002156  EFB1  F010         	goto	u2730
  1241   00215A                     u2731:
  1242   00215A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1243   00215C  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1244   00215E  EFB2  F010         	goto	u2748
  1245   002162                     u2730:
  1246   002162  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1247   002164                     u2748:
  1248   002164  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1249   002166  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1250   002168  507D               	movf	125,w,c	;volatile
  1251   00216A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1252   00216C  0B7F               	andlw	-129
  1253   00216E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1254   002170  6E7D               	movwf	125,c	;volatile
  1255                           
  1256                           ;buggy_lights.c: 95:         LATAbits.LATA3 = !LATAbits.LATA3;
  1257   002172  A679               	btfss	121,3,c	;volatile
  1258   002174  EFBE  F010         	goto	u2751
  1259   002178  EFC2  F010         	goto	u2750
  1260   00217C                     u2751:
  1261   00217C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1262   00217E  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1263   002180  EFC3  F010         	goto	u2768
  1264   002184                     u2750:
  1265   002184  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1266   002186                     u2768:
  1267   002186  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1268   002188  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1269   00218A  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1270   00218C  5079               	movf	121,w,c	;volatile
  1271   00218E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1272   002190  0BF7               	andlw	-9
  1273   002192  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1274   002194  6E79               	movwf	121,c	;volatile
  1275   002196  0012               	return		;funcret
  1276   002198                     __end_of_toggle_tricolour_LED:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _sendRGBCvalSerial4 *****************
  1280 ;; Defined at:
  1281 ;;		line 75 in file "serial.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  col_val         1   54[COMRAM] PTR struct RGBC_val
  1284 ;;		 -> main@measured_colour(8), 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  tempStr        26   55[COMRAM] unsigned char [26]
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1296 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;Total ram usage:       27 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 6
  1303 ;; This function calls:
  1304 ;;		_sendStringSerial4
  1305 ;;		_sprintf
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text2
  1312   002800                     __ptext2:
  1313                           	callstack 0
  1314   002800                     _sendRGBCvalSerial4:
  1315                           	callstack 24
  1316   002800                     
  1317                           ;serial.c: 76:     char tempStr[26];;serial.c: 78:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1318   002800  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1319   002802  6E1D               	movwf	sprintf@s^0,c
  1320   002804  6A1E               	clrf	(sprintf@s+1)^0,c
  1321   002806  0E01               	movlw	low STR_5
  1322   002808  6E1F               	movwf	sprintf@fmt^0,c
  1323   00280A  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1324   00280C  6ED9               	movwf	fsr2l,c
  1325   00280E  6ADA               	clrf	fsr2h,c
  1326   002810  CFDE F020          	movff	postinc2,?_sprintf+3
  1327   002814  CFDD F021          	movff	postdec2,?_sprintf+4
  1328   002818  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1329   00281A  6ED9               	movwf	fsr2l,c
  1330   00281C  6ADA               	clrf	fsr2h,c
  1331   00281E  0E02               	movlw	2
  1332   002820  26D9               	addwf	fsr2l,f,c
  1333   002822  CFDE F022          	movff	postinc2,?_sprintf+5
  1334   002826  CFDD F023          	movff	postdec2,?_sprintf+6
  1335   00282A  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1336   00282C  6ED9               	movwf	fsr2l,c
  1337   00282E  6ADA               	clrf	fsr2h,c
  1338   002830  0E04               	movlw	4
  1339   002832  26D9               	addwf	fsr2l,f,c
  1340   002834  CFDE F024          	movff	postinc2,?_sprintf+7
  1341   002838  CFDD F025          	movff	postdec2,?_sprintf+8
  1342   00283C  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1343   00283E  6ED9               	movwf	fsr2l,c
  1344   002840  6ADA               	clrf	fsr2h,c
  1345   002842  0E06               	movlw	6
  1346   002844  26D9               	addwf	fsr2l,f,c
  1347   002846  CFDE F026          	movff	postinc2,?_sprintf+9
  1348   00284A  CFDD F027          	movff	postdec2,?_sprintf+10
  1349   00284E  EC4B  F015         	call	_sprintf	;wreg free
  1350   002852                     
  1351                           ;serial.c: 79:     sendStringSerial4(tempStr);
  1352   002852  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1353   002854  6E02               	movwf	sendStringSerial4@string^0,c
  1354   002856  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1355   002858  ECCF  F013         	call	_sendStringSerial4	;wreg free
  1356   00285C  0012               	return		;funcret
  1357   00285E                     __end_of_sendRGBCvalSerial4:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _sendHSVvalSerial4 *****************
  1361 ;; Defined at:
  1362 ;;		line 85 in file "serial.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  col_val         1   54[COMRAM] PTR struct HSV_val
  1365 ;;		 -> main@HSV_colour(6), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  tempStr        21   55[COMRAM] unsigned char [21]
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;Total ram usage:       22 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 6
  1384 ;; This function calls:
  1385 ;;		_sendStringSerial4
  1386 ;;		_sprintf
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text3
  1393   002A4A                     __ptext3:
  1394                           	callstack 0
  1395   002A4A                     _sendHSVvalSerial4:
  1396                           	callstack 24
  1397   002A4A                     
  1398                           ;serial.c: 86:     char tempStr[21];;serial.c: 88:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  1399   002A4A  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1400   002A4C  6E1D               	movwf	sprintf@s^0,c
  1401   002A4E  6A1E               	clrf	(sprintf@s+1)^0,c
  1402   002A50  0E04               	movlw	low (STR_5+3)
  1403   002A52  6E1F               	movwf	sprintf@fmt^0,c
  1404   002A54  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1405   002A56  6ED9               	movwf	fsr2l,c
  1406   002A58  6ADA               	clrf	fsr2h,c
  1407   002A5A  CFDE F020          	movff	postinc2,?_sprintf+3
  1408   002A5E  CFDD F021          	movff	postdec2,?_sprintf+4
  1409   002A62  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1410   002A64  6ED9               	movwf	fsr2l,c
  1411   002A66  6ADA               	clrf	fsr2h,c
  1412   002A68  0E02               	movlw	2
  1413   002A6A  26D9               	addwf	fsr2l,f,c
  1414   002A6C  CFDE F022          	movff	postinc2,?_sprintf+5
  1415   002A70  CFDD F023          	movff	postdec2,?_sprintf+6
  1416   002A74  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1417   002A76  6ED9               	movwf	fsr2l,c
  1418   002A78  6ADA               	clrf	fsr2h,c
  1419   002A7A  0E04               	movlw	4
  1420   002A7C  26D9               	addwf	fsr2l,f,c
  1421   002A7E  CFDE F024          	movff	postinc2,?_sprintf+7
  1422   002A82  CFDD F025          	movff	postdec2,?_sprintf+8
  1423   002A86  EC4B  F015         	call	_sprintf	;wreg free
  1424   002A8A                     
  1425                           ;serial.c: 89:     sendStringSerial4(tempStr);
  1426   002A8A  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1427   002A8C  6E02               	movwf	sendStringSerial4@string^0,c
  1428   002A8E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1429   002A90  ECCF  F013         	call	_sendStringSerial4	;wreg free
  1430   002A94  0012               	return		;funcret
  1431   002A96                     __end_of_sendHSVvalSerial4:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _sprintf *****************
  1435 ;; Defined at:
  1436 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  s               2   28[COMRAM] PTR unsigned char 
  1439 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1440 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1441 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  f              12   42[COMRAM] struct _IO_FILE
  1444 ;;  ret             2   39[COMRAM] int 
  1445 ;;  ap              1   41[COMRAM] PTR void [1]
  1446 ;;		 -> ?_sprintf(2), 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2   28[COMRAM] int 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1456 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;Total ram usage:       26 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 5
  1463 ;; This function calls:
  1464 ;;		_vfprintf
  1465 ;; This function is called by:
  1466 ;;		_sendRGBCvalSerial4
  1467 ;;		_sendHSVvalSerial4
  1468 ;;		_sendIntSerial4
  1469 ;;		_sendArrayCharSerial4
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text4
  1474   002A96                     __ptext4:
  1475                           	callstack 0
  1476   002A96                     _sprintf:
  1477                           	callstack 24
  1478   002A96  0E20               	movlw	low (?_sprintf+3)
  1479   002A98  6E2A               	movwf	sprintf@ap^0,c
  1480   002A9A  C01D  F02B         	movff	sprintf@s,sprintf@f
  1481   002A9E  C01E  F02C         	movff	sprintf@s+1,sprintf@f+1
  1482   002AA2  0E00               	movlw	0
  1483   002AA4  6E2F               	movwf	(sprintf@f+4)^0,c
  1484   002AA6  0E00               	movlw	0
  1485   002AA8  6E2E               	movwf	(sprintf@f+3)^0,c
  1486   002AAA  0E00               	movlw	0
  1487   002AAC  6E36               	movwf	(sprintf@f+11)^0,c
  1488   002AAE  0E00               	movlw	0
  1489   002AB0  6E35               	movwf	(sprintf@f+10)^0,c
  1490   002AB2  0E2B               	movlw	low sprintf@f
  1491   002AB4  6E19               	movwf	vfprintf@fp^0,c
  1492   002AB6  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  1493   002ABA  0E2A               	movlw	low sprintf@ap
  1494   002ABC  6E1B               	movwf	vfprintf@ap^0,c
  1495   002ABE  EC2F  F014         	call	_vfprintf	;wreg free
  1496   002AC2  C019  F028         	movff	?_vfprintf,sprintf@ret
  1497   002AC6  C01A  F029         	movff	?_vfprintf+1,sprintf@ret+1
  1498   002ACA  502E               	movf	(sprintf@f+3)^0,w,c
  1499   002ACC  241D               	addwf	sprintf@s^0,w,c
  1500   002ACE  6ED9               	movwf	fsr2l,c
  1501   002AD0  502F               	movf	(sprintf@f+4)^0,w,c
  1502   002AD2  201E               	addwfc	(sprintf@s+1)^0,w,c
  1503   002AD4  6EDA               	movwf	fsr2h,c
  1504   002AD6  6ADF               	clrf	indf2,c
  1505   002AD8  C028  F01D         	movff	sprintf@ret,?_sprintf
  1506   002ADC  C029  F01E         	movff	sprintf@ret+1,?_sprintf+1
  1507   002AE0  0012               	return		;funcret
  1508   002AE2                     __end_of_sprintf:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _vfprintf *****************
  1512 ;; Defined at:
  1513 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1516 ;;		 -> sprintf@f(12), 
  1517 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1518 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1519 ;;  ap              1   26[COMRAM] PTR PTR void 
  1520 ;;		 -> sprintf@ap(1), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1523 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2   24[COMRAM] int 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1533 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;Total ram usage:        4 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 4
  1540 ;; This function calls:
  1541 ;;		_vfpfcnvrt
  1542 ;; This function is called by:
  1543 ;;		_sprintf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text5
  1548   00285E                     __ptext5:
  1549                           	callstack 0
  1550   00285E                     _vfprintf:
  1551                           	callstack 24
  1552   00285E                     
  1553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1554   00285E  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1555   002862                     
  1556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1557   002862  0E00               	movlw	0
  1558   002864  0100               	movlb	0	; () banked
  1559   002866  6F81               	movwf	(_nout+1)& (0+255),b
  1560   002868  0E00               	movlw	0
  1561   00286A  6F80               	movwf	_nout& (0+255),b
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1564   00286C  EF45  F014         	goto	l3196
  1565   002870                     l3194:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1569   002870  C019  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1570   002874  0E1C               	movlw	low vfprintf@cfmt
  1571   002876  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1572   002878  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1573   00287C  EC88  F00C         	call	_vfpfcnvrt	;wreg free
  1574   002880  500B               	movf	?_vfpfcnvrt^0,w,c
  1575   002882  0100               	movlb	0	; () banked
  1576   002884  2780               	addwf	_nout& (0+255),f,b
  1577   002886  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1578   002888  2381               	addwfc	(_nout+1)& (0+255),f,b
  1579   00288A                     l3196:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1583   00288A  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1584   00288E                     	if	1	;There is more than 1 active tblptr byte
  1585   00288E  0E0E               	movlw	high __smallconst
  1586   002890  6EF7               	movwf	tblptrh,c
  1587   002892                     	endif
  1588   002892                     	if	0	;tblptru may be non-zero
  1589   002892                     	endif
  1590   002892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1591   002892  0E00               	movlw	low (__smallconst shr (0+16))
  1592   002894  6EF8               	movwf	tblptru,c
  1593   002896                     	endif
  1594   002896  0008               	tblrd		*
  1595   002898  50F5               	movf	tablat,w,c
  1596   00289A  0900               	iorlw	0
  1597   00289C  A4D8               	btfss	status,2,c
  1598   00289E  EF53  F014         	goto	u2161
  1599   0028A2  EF55  F014         	goto	u2160
  1600   0028A6                     u2161:
  1601   0028A6  EF38  F014         	goto	l3194
  1602   0028AA                     u2160:
  1603   0028AA                     
  1604                           ; BSR set to: 0
  1605                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1606   0028AA  C080  F019         	movff	_nout,?_vfprintf
  1607   0028AE  C081  F01A         	movff	_nout+1,?_vfprintf+1
  1608   0028B2                     
  1609                           ; BSR set to: 0
  1610   0028B2  0012               	return		;funcret
  1611   0028B4                     __end_of_vfprintf:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _vfpfcnvrt *****************
  1615 ;; Defined at:
  1616 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1619 ;;		 -> sprintf@f(12), 
  1620 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1621 ;;		 -> vfprintf@cfmt(1), 
  1622 ;;  ap              1   12[COMRAM] PTR PTR void 
  1623 ;;		 -> sprintf@ap(1), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  convarg         4   19[COMRAM] struct .
  1626 ;;  cnt             2   16[COMRAM] int 
  1627 ;;  c               1   23[COMRAM] unsigned char 
  1628 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1629 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1630 ;;  done            1   15[COMRAM] _Bool 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   10[COMRAM] int 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1640 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;Total ram usage:       14 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 3
  1647 ;; This function calls:
  1648 ;;		___awdiv
  1649 ;;		___awmod
  1650 ;;		___lwdiv
  1651 ;;		___lwmod
  1652 ;;		_abs
  1653 ;;		_fputc
  1654 ;; This function is called by:
  1655 ;;		_vfprintf
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text6
  1660   001910                     __ptext6:
  1661                           	callstack 0
  1662   001910                     _vfpfcnvrt:
  1663                           	callstack 24
  1664   001910                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1666   001910  0E00               	movlw	0
  1667   001912  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1668   001914  0E00               	movlw	0
  1669   001916  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1670   001918                     
  1671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1672   001918  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1673   00191A  6ED9               	movwf	fsr2l,c
  1674   00191C  6ADA               	clrf	fsr2h,c
  1675   00191E  CFDF FFF6          	movff	indf2,tblptrl
  1676   001922                     	if	1	;There is more than 1 active tblptr byte
  1677   001922  0E0E               	movlw	high __smallconst
  1678   001924  6EF7               	movwf	tblptrh,c
  1679   001926                     	endif
  1680   001926                     	if	0	;tblptru may be non-zero
  1681   001926                     	endif
  1682   001926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1683   001926  0E00               	movlw	low (__smallconst shr (0+16))
  1684   001928  6EF8               	movwf	tblptru,c
  1685   00192A                     	endif
  1686   00192A  0008               	tblrd		*
  1687   00192C  50F5               	movf	tablat,w,c
  1688   00192E  0A25               	xorlw	37
  1689   001930  A4D8               	btfss	status,2,c
  1690   001932  EF9D  F00C         	goto	u1991
  1691   001936  EF9F  F00C         	goto	u1990
  1692   00193A                     u1991:
  1693   00193A  EFF4  F00D         	goto	l3096
  1694   00193E                     u1990:
  1695   00193E                     
  1696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1697   00193E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1698   001940  6ED9               	movwf	fsr2l,c
  1699   001942  6ADA               	clrf	fsr2h,c
  1700   001944  2ADF               	incf	indf2,f,c
  1701   001946                     
  1702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1703   001946  0E00               	movlw	0
  1704   001948  0100               	movlb	0	; () banked
  1705   00194A  6F83               	movwf	(_width+1)& (0+255),b
  1706   00194C  0E00               	movlw	0
  1707   00194E  6F82               	movwf	_width& (0+255),b
  1708   001950  C082  F086         	movff	_width,_flags
  1709   001954                     
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1712   001954  6984               	setf	_prec& (0+255),b
  1713   001956  6985               	setf	(_prec+1)& (0+255),b
  1714   001958                     
  1715                           ; BSR set to: 0
  1716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1717   001958  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1718   00195A  6ED9               	movwf	fsr2l,c
  1719   00195C  6ADA               	clrf	fsr2h,c
  1720   00195E  50DF               	movf	indf2,w,c
  1721   001960  6E13               	movwf	vfpfcnvrt@cp^0,c
  1722   001962                     
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1725   001962  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1726   001966                     	if	1	;There is more than 1 active tblptr byte
  1727   001966  0E0E               	movlw	high __smallconst
  1728   001968  6EF7               	movwf	tblptrh,c
  1729   00196A                     	endif
  1730   00196A                     	if	0	;tblptru may be non-zero
  1731   00196A                     	endif
  1732   00196A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1733   00196A  0E00               	movlw	low (__smallconst shr (0+16))
  1734   00196C  6EF8               	movwf	tblptru,c
  1735   00196E                     	endif
  1736   00196E  0008               	tblrd		*
  1737   001970  50F5               	movf	tablat,w,c
  1738   001972  0A64               	xorlw	100
  1739   001974  B4D8               	btfsc	status,2,c
  1740   001976  EFBF  F00C         	goto	u2001
  1741   00197A  EFC1  F00C         	goto	u2000
  1742   00197E                     u2001:
  1743   00197E  EFD1  F00C         	goto	l3032
  1744   001982                     u2000:
  1745   001982                     
  1746                           ; BSR set to: 0
  1747   001982  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1748   001986                     	if	1	;There is more than 1 active tblptr byte
  1749   001986  0E0E               	movlw	high __smallconst
  1750   001988  6EF7               	movwf	tblptrh,c
  1751   00198A                     	endif
  1752   00198A                     	if	0	;tblptru may be non-zero
  1753   00198A                     	endif
  1754   00198A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1755   00198A  0E00               	movlw	low (__smallconst shr (0+16))
  1756   00198C  6EF8               	movwf	tblptru,c
  1757   00198E                     	endif
  1758   00198E  0008               	tblrd		*
  1759   001990  50F5               	movf	tablat,w,c
  1760   001992  0A69               	xorlw	105
  1761   001994  A4D8               	btfss	status,2,c
  1762   001996  EFCF  F00C         	goto	u2011
  1763   00199A  EFD1  F00C         	goto	u2010
  1764   00199E                     u2011:
  1765   00199E  EF5F  F00D         	goto	l3062
  1766   0019A2                     u2010:
  1767   0019A2                     l3032:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1771   0019A2  500D               	movf	vfpfcnvrt@ap^0,w,c
  1772   0019A4  6ED9               	movwf	fsr2l,c
  1773   0019A6  6ADA               	clrf	fsr2h,c
  1774   0019A8  0E02               	movlw	2
  1775   0019AA  26DF               	addwf	indf2,f,c
  1776   0019AC  5CDF               	subwf	indf2,w,c
  1777   0019AE  6ED9               	movwf	fsr2l,c
  1778   0019B0  6ADA               	clrf	fsr2h,c
  1779   0019B2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1780   0019B6  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1781   0019BA                     
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1784   0019BA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1785   0019BC  6ED9               	movwf	fsr2l,c
  1786   0019BE  6ADA               	clrf	fsr2h,c
  1787   0019C0  2813               	incf	vfpfcnvrt@cp^0,w,c
  1788   0019C2  6EDF               	movwf	indf2,c
  1789   0019C4                     
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1792   0019C4  0E20               	movlw	32
  1793   0019C6  6E18               	movwf	vfpfcnvrt@c^0,c
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1796   0019C8  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1797   0019CA  EFE9  F00C         	goto	u2021
  1798   0019CE  EFEC  F00C         	goto	u2020
  1799   0019D2                     u2021:
  1800   0019D2  0E01               	movlw	1
  1801   0019D4  EFED  F00C         	goto	u2030
  1802   0019D8                     u2020:
  1803   0019D8  0E00               	movlw	0
  1804   0019DA                     u2030:
  1805   0019DA  6E10               	movwf	vfpfcnvrt@done^0,c
  1806   0019DC                     l3038:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1809   0019DC  0618               	decf	vfpfcnvrt@c^0,f,c
  1810   0019DE  5018               	movf	vfpfcnvrt@c^0,w,c
  1811   0019E0  0F60               	addlw	low _dbuf
  1812   0019E2  6ED9               	movwf	fsr2l,c
  1813   0019E4  6ADA               	clrf	fsr2h,c
  1814   0019E6  C014  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1815   0019EA  C015  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1816   0019EE  0E00               	movlw	0
  1817   0019F0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1818   0019F2  0E0A               	movlw	10
  1819   0019F4  6E03               	movwf	___awmod@divisor^0,c
  1820   0019F6  EC8B  F011         	call	___awmod	;wreg free
  1821   0019FA  C001  F007         	movff	?___awmod,abs@a
  1822   0019FE  C002  F008         	movff	?___awmod+1,abs@a+1
  1823   001A02  EC92  F015         	call	_abs	;wreg free
  1824   001A06  5007               	movf	?_abs^0,w,c
  1825   001A08  0F30               	addlw	48
  1826   001A0A  6EDF               	movwf	indf2,c
  1827   001A0C                     
  1828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1829   001A0C  C014  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1830   001A10  C015  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1831   001A14  0E00               	movlw	0
  1832   001A16  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1833   001A18  0E0A               	movlw	10
  1834   001A1A  6E03               	movwf	___awdiv@divisor^0,c
  1835   001A1C  ECCC  F010         	call	___awdiv	;wreg free
  1836   001A20  C001  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1837   001A24  C002  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1838   001A28                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1840   001A28  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1841   001A2A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1842   001A2C                     
  1843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1844   001A2C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1845   001A2E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1846   001A30  B4D8               	btfsc	status,2,c
  1847   001A32  EF1D  F00D         	goto	u2041
  1848   001A36  EF1F  F00D         	goto	u2040
  1849   001A3A                     u2041:
  1850   001A3A  EF27  F00D         	goto	l3048
  1851   001A3E                     u2040:
  1852   001A3E  5018               	movf	vfpfcnvrt@c^0,w,c
  1853   001A40  A4D8               	btfss	status,2,c
  1854   001A42  EF25  F00D         	goto	u2051
  1855   001A46  EF27  F00D         	goto	u2050
  1856   001A4A                     u2051:
  1857   001A4A  EFEE  F00C         	goto	l3038
  1858   001A4E                     u2050:
  1859   001A4E                     l3048:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1862   001A4E  5018               	movf	vfpfcnvrt@c^0,w,c
  1863   001A50  B4D8               	btfsc	status,2,c
  1864   001A52  EF2D  F00D         	goto	u2061
  1865   001A56  EF2F  F00D         	goto	u2060
  1866   001A5A                     u2061:
  1867   001A5A  EF50  F00D         	goto	l3060
  1868   001A5E                     u2060:
  1869   001A5E  5010               	movf	vfpfcnvrt@done^0,w,c
  1870   001A60  B4D8               	btfsc	status,2,c
  1871   001A62  EF35  F00D         	goto	u2071
  1872   001A66  EF37  F00D         	goto	u2070
  1873   001A6A                     u2071:
  1874   001A6A  EF50  F00D         	goto	l3060
  1875   001A6E                     u2070:
  1876   001A6E                     
  1877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1878   001A6E  0618               	decf	vfpfcnvrt@c^0,f,c
  1879   001A70  5018               	movf	vfpfcnvrt@c^0,w,c
  1880   001A72  0F60               	addlw	low _dbuf
  1881   001A74  6ED9               	movwf	fsr2l,c
  1882   001A76  6ADA               	clrf	fsr2h,c
  1883   001A78  0E2D               	movlw	45
  1884   001A7A  6EDF               	movwf	indf2,c
  1885   001A7C                     
  1886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1887   001A7C  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1888   001A7E  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1889   001A80  EF50  F00D         	goto	l3060
  1890   001A84                     l3056:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1893   001A84  5018               	movf	vfpfcnvrt@c^0,w,c
  1894   001A86  0F60               	addlw	low _dbuf
  1895   001A88  6ED9               	movwf	fsr2l,c
  1896   001A8A  6ADA               	clrf	fsr2h,c
  1897   001A8C  50DF               	movf	indf2,w,c
  1898   001A8E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1899   001A90  500E               	movf	??_vfpfcnvrt^0,w,c
  1900   001A92  6E01               	movwf	fputc@c^0,c
  1901   001A94  6A02               	clrf	(fputc@c+1)^0,c
  1902   001A96  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1903   001A9A  EC2E  F011         	call	_fputc	;wreg free
  1904   001A9E  2A18               	incf	vfpfcnvrt@c^0,f,c
  1905   001AA0                     l3060:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1908   001AA0  0E20               	movlw	32
  1909   001AA2  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1910   001AA4  A4D8               	btfss	status,2,c
  1911   001AA6  EF57  F00D         	goto	u2081
  1912   001AAA  EF59  F00D         	goto	u2080
  1913   001AAE                     u2081:
  1914   001AAE  EF42  F00D         	goto	l3056
  1915   001AB2                     u2080:
  1916   001AB2                     l1424:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1919   001AB2  C011  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1920   001AB6  C012  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1921   001ABA  EF0D  F00E         	goto	l1425
  1922   001ABE                     l3062:
  1923                           
  1924                           ; BSR set to: 0
  1925   001ABE  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1926   001AC2                     	if	1	;There is more than 1 active tblptr byte
  1927   001AC2  0E0E               	movlw	high __smallconst
  1928   001AC4  6EF7               	movwf	tblptrh,c
  1929   001AC6                     	endif
  1930   001AC6                     	if	0	;tblptru may be non-zero
  1931   001AC6                     	endif
  1932   001AC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1933   001AC6  0E00               	movlw	low (__smallconst shr (0+16))
  1934   001AC8  6EF8               	movwf	tblptru,c
  1935   001ACA                     	endif
  1936   001ACA  0008               	tblrd		*
  1937   001ACC  50F5               	movf	tablat,w,c
  1938   001ACE  0A75               	xorlw	117
  1939   001AD0  A4D8               	btfss	status,2,c
  1940   001AD2  EF6D  F00D         	goto	u2091
  1941   001AD6  EF6F  F00D         	goto	u2090
  1942   001ADA                     u2091:
  1943   001ADA  EFEA  F00D         	goto	l3090
  1944   001ADE                     u2090:
  1945   001ADE                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1948   001ADE  500D               	movf	vfpfcnvrt@ap^0,w,c
  1949   001AE0  6ED9               	movwf	fsr2l,c
  1950   001AE2  6ADA               	clrf	fsr2h,c
  1951   001AE4  0E02               	movlw	2
  1952   001AE6  26DF               	addwf	indf2,f,c
  1953   001AE8  5CDF               	subwf	indf2,w,c
  1954   001AEA  6ED9               	movwf	fsr2l,c
  1955   001AEC  6ADA               	clrf	fsr2h,c
  1956   001AEE  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1957   001AF2  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1958   001AF6                     
  1959                           ; BSR set to: 0
  1960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1961   001AF6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1962   001AF8  6ED9               	movwf	fsr2l,c
  1963   001AFA  6ADA               	clrf	fsr2h,c
  1964   001AFC  2813               	incf	vfpfcnvrt@cp^0,w,c
  1965   001AFE  6EDF               	movwf	indf2,c
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1968   001B00  EFD2  F00D         	goto	l3088
  1969   001B04                     l3068:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1973   001B04  0E20               	movlw	32
  1974   001B06  6E18               	movwf	vfpfcnvrt@c^0,c
  1975   001B08                     l3070:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1978   001B08  0618               	decf	vfpfcnvrt@c^0,f,c
  1979   001B0A  5018               	movf	vfpfcnvrt@c^0,w,c
  1980   001B0C  0F60               	addlw	low _dbuf
  1981   001B0E  6ED9               	movwf	fsr2l,c
  1982   001B10  6ADA               	clrf	fsr2h,c
  1983   001B12  C014  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  1984   001B16  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  1985   001B1A  0E00               	movlw	0
  1986   001B1C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1987   001B1E  0E0A               	movlw	10
  1988   001B20  6E03               	movwf	___lwmod@divisor^0,c
  1989   001B22  EC9D  F013         	call	___lwmod	;wreg free
  1990   001B26  5001               	movf	?___lwmod^0,w,c
  1991   001B28  0F30               	addlw	48
  1992   001B2A  6EDF               	movwf	indf2,c
  1993   001B2C                     
  1994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1995   001B2C  C014  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  1996   001B30  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  1997   001B34  0E00               	movlw	0
  1998   001B36  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1999   001B38  0E0A               	movlw	10
  2000   001B3A  6E03               	movwf	___lwdiv@divisor^0,c
  2001   001B3C  ECF9  F012         	call	___lwdiv	;wreg free
  2002   001B40  C001  F014         	movff	?___lwdiv,vfpfcnvrt@convarg
  2003   001B44  C002  F015         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2004   001B48                     
  2005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2006   001B48  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2007   001B4A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2008   001B4C                     
  2009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2010   001B4C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2011   001B4E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2012   001B50  B4D8               	btfsc	status,2,c
  2013   001B52  EFAD  F00D         	goto	u2101
  2014   001B56  EFAF  F00D         	goto	u2100
  2015   001B5A                     u2101:
  2016   001B5A  EFC7  F00D         	goto	l3084
  2017   001B5E                     u2100:
  2018   001B5E  5018               	movf	vfpfcnvrt@c^0,w,c
  2019   001B60  A4D8               	btfss	status,2,c
  2020   001B62  EFB5  F00D         	goto	u2111
  2021   001B66  EFB7  F00D         	goto	u2110
  2022   001B6A                     u2111:
  2023   001B6A  EF84  F00D         	goto	l3070
  2024   001B6E                     u2110:
  2025   001B6E  EFC7  F00D         	goto	l3084
  2026   001B72                     l3080:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2029   001B72  5018               	movf	vfpfcnvrt@c^0,w,c
  2030   001B74  0F60               	addlw	low _dbuf
  2031   001B76  6ED9               	movwf	fsr2l,c
  2032   001B78  6ADA               	clrf	fsr2h,c
  2033   001B7A  50DF               	movf	indf2,w,c
  2034   001B7C  6E0E               	movwf	??_vfpfcnvrt^0,c
  2035   001B7E  500E               	movf	??_vfpfcnvrt^0,w,c
  2036   001B80  6E01               	movwf	fputc@c^0,c
  2037   001B82  6A02               	clrf	(fputc@c+1)^0,c
  2038   001B84  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2039   001B88  EC2E  F011         	call	_fputc	;wreg free
  2040   001B8C  2A18               	incf	vfpfcnvrt@c^0,f,c
  2041   001B8E                     l3084:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2044   001B8E  0E20               	movlw	32
  2045   001B90  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2046   001B92  A4D8               	btfss	status,2,c
  2047   001B94  EFCE  F00D         	goto	u2121
  2048   001B98  EFD0  F00D         	goto	u2120
  2049   001B9C                     u2121:
  2050   001B9C  EFB9  F00D         	goto	l3080
  2051   001BA0                     u2120:
  2052   001BA0  EF59  F00D         	goto	l1424
  2053   001BA4                     l3088:
  2054                           
  2055                           ; BSR set to: 0
  2056   001BA4  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2057   001BA8                     	if	1	;There is more than 1 active tblptr byte
  2058   001BA8  0E0E               	movlw	high __smallconst
  2059   001BAA  6EF7               	movwf	tblptrh,c
  2060   001BAC                     	endif
  2061   001BAC                     	if	0	;tblptru may be non-zero
  2062   001BAC                     	endif
  2063   001BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2064   001BAC  0E00               	movlw	low (__smallconst shr (0+16))
  2065   001BAE  6EF8               	movwf	tblptru,c
  2066   001BB0                     	endif
  2067   001BB0  0008               	tblrd		*
  2068   001BB2  50F5               	movf	tablat,w,c
  2069   001BB4  6E0E               	movwf	??_vfpfcnvrt^0,c
  2070   001BB6  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2071                           
  2072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2073                           ; Switch size 1, requested type "simple"
  2074                           ; Number of cases is 1, Range of values is 0 to 0
  2075                           ; switch strategies available:
  2076                           ; Name         Instructions Cycles
  2077                           ; simple_byte            4     3 (average)
  2078                           ;	Chosen strategy is simple_byte
  2079   001BB8  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2080   001BBA  0A00               	xorlw	0	; case 0
  2081   001BBC  B4D8               	btfsc	status,2,c
  2082   001BBE  EFE3  F00D         	goto	l4178
  2083   001BC2  EFEA  F00D         	goto	l3090
  2084   001BC6                     l4178:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ; Switch size 1, requested type "simple"
  2088                           ; Number of cases is 1, Range of values is 117 to 117
  2089                           ; switch strategies available:
  2090                           ; Name         Instructions Cycles
  2091                           ; simple_byte            4     3 (average)
  2092                           ;	Chosen strategy is simple_byte
  2093   001BC6  500E               	movf	??_vfpfcnvrt^0,w,c
  2094   001BC8  0A75               	xorlw	117	; case 117
  2095   001BCA  B4D8               	btfsc	status,2,c
  2096   001BCC  EF82  F00D         	goto	l3068
  2097   001BD0  EFEA  F00D         	goto	l3090
  2098   001BD4                     l3090:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2102   001BD4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2103   001BD6  6ED9               	movwf	fsr2l,c
  2104   001BD8  6ADA               	clrf	fsr2h,c
  2105   001BDA  2ADF               	incf	indf2,f,c
  2106   001BDC                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2109   001BDC  0E00               	movlw	0
  2110   001BDE  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2111   001BE0  0E00               	movlw	0
  2112   001BE2  6E0B               	movwf	?_vfpfcnvrt^0,c
  2113   001BE4  EF0D  F00E         	goto	l1425
  2114   001BE8                     l3096:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2117   001BE8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2118   001BEA  6ED9               	movwf	fsr2l,c
  2119   001BEC  6ADA               	clrf	fsr2h,c
  2120   001BEE  CFDF FFF6          	movff	indf2,tblptrl
  2121   001BF2                     	if	1	;There is more than 1 active tblptr byte
  2122   001BF2  0E0E               	movlw	high __smallconst
  2123   001BF4  6EF7               	movwf	tblptrh,c
  2124   001BF6                     	endif
  2125   001BF6                     	if	0	;tblptru may be non-zero
  2126   001BF6                     	endif
  2127   001BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2128   001BF6  0E00               	movlw	low (__smallconst shr (0+16))
  2129   001BF8  6EF8               	movwf	tblptru,c
  2130   001BFA                     	endif
  2131   001BFA  0008               	tblrd		*
  2132   001BFC  50F5               	movf	tablat,w,c
  2133   001BFE  6E01               	movwf	fputc@c^0,c
  2134   001C00  6A02               	clrf	(fputc@c+1)^0,c
  2135   001C02  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2136   001C06  EC2E  F011         	call	_fputc	;wreg free
  2137   001C0A                     
  2138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2139   001C0A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2140   001C0C  6ED9               	movwf	fsr2l,c
  2141   001C0E  6ADA               	clrf	fsr2h,c
  2142   001C10  2ADF               	incf	indf2,f,c
  2143   001C12                     
  2144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2145   001C12  0E00               	movlw	0
  2146   001C14  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2147   001C16  0E01               	movlw	1
  2148   001C18  6E0B               	movwf	?_vfpfcnvrt^0,c
  2149   001C1A                     l1425:
  2150   001C1A  0012               	return		;funcret
  2151   001C1C                     __end_of_vfpfcnvrt:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _fputc *****************
  2155 ;; Defined at:
  2156 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  c               2    0[COMRAM] int 
  2159 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2160 ;;		 -> sprintf@f(12), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    0[COMRAM] int 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;Total ram usage:        8 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 2
  2179 ;; This function calls:
  2180 ;;		_putch
  2181 ;; This function is called by:
  2182 ;;		_vfpfcnvrt
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text7
  2187   00225C                     __ptext7:
  2188                           	callstack 0
  2189   00225C                     _fputc:
  2190                           	callstack 24
  2191   00225C  5003               	movf	fputc@fp^0,w,c
  2192   00225E  B4D8               	btfsc	status,2,c
  2193   002260  EF34  F011         	goto	u1761
  2194   002264  EF36  F011         	goto	u1760
  2195   002268                     u1761:
  2196   002268  EF3E  F011         	goto	l2912
  2197   00226C                     u1760:
  2198   00226C  5003               	movf	fputc@fp^0,w,c
  2199   00226E  A4D8               	btfss	status,2,c
  2200   002270  EF3C  F011         	goto	u1771
  2201   002274  EF3E  F011         	goto	u1770
  2202   002278                     u1771:
  2203   002278  EF43  F011         	goto	l2914
  2204   00227C                     u1770:
  2205   00227C                     l2912:
  2206   00227C  5001               	movf	fputc@c^0,w,c
  2207   00227E  EC71  F016         	call	_putch
  2208   002282  EF8A  F011         	goto	l1463
  2209   002286                     l2914:
  2210   002286  5003               	movf	fputc@fp^0,w,c
  2211   002288  6ED9               	movwf	fsr2l,c
  2212   00228A  6ADA               	clrf	fsr2h,c
  2213   00228C  0E0A               	movlw	10
  2214   00228E  26D9               	addwf	fsr2l,f,c
  2215   002290  50DE               	movf	postinc2,w,c
  2216   002292  10DE               	iorwf	postinc2,w,c
  2217   002294  B4D8               	btfsc	status,2,c
  2218   002296  EF4F  F011         	goto	u1781
  2219   00229A  EF51  F011         	goto	u1780
  2220   00229E                     u1781:
  2221   00229E  EF6A  F011         	goto	l2918
  2222   0022A2                     u1780:
  2223   0022A2  5003               	movf	fputc@fp^0,w,c
  2224   0022A4  6ED9               	movwf	fsr2l,c
  2225   0022A6  6ADA               	clrf	fsr2h,c
  2226   0022A8  0E0A               	movlw	10
  2227   0022AA  26D9               	addwf	fsr2l,f,c
  2228   0022AC  5003               	movf	fputc@fp^0,w,c
  2229   0022AE  6EE1               	movwf	fsr1l,c
  2230   0022B0  6AE2               	clrf	fsr1h,c
  2231   0022B2  0E03               	movlw	3
  2232   0022B4  26E1               	addwf	fsr1l,f,c
  2233   0022B6  50DE               	movf	postinc2,w,c
  2234   0022B8  5CE6               	subwf	postinc1,w,c
  2235   0022BA  50E6               	movf	postinc1,w,c
  2236   0022BC  0A80               	xorlw	128
  2237   0022BE  6E08               	movwf	(??_fputc+4)^0,c
  2238   0022C0  50DE               	movf	postinc2,w,c
  2239   0022C2  0A80               	xorlw	128
  2240   0022C4  5808               	subwfb	(??_fputc+4)^0,w,c
  2241   0022C6  B0D8               	btfsc	status,0,c
  2242   0022C8  EF68  F011         	goto	u1791
  2243   0022CC  EF6A  F011         	goto	u1790
  2244   0022D0                     u1791:
  2245   0022D0  EF8A  F011         	goto	l1463
  2246   0022D4                     u1790:
  2247   0022D4                     l2918:
  2248   0022D4  5003               	movf	fputc@fp^0,w,c
  2249   0022D6  6ED9               	movwf	fsr2l,c
  2250   0022D8  6ADA               	clrf	fsr2h,c
  2251   0022DA  0E03               	movlw	3
  2252   0022DC  26D9               	addwf	fsr2l,f,c
  2253   0022DE  CFDE F004          	movff	postinc2,??_fputc
  2254   0022E2  CFDD F005          	movff	postdec2,??_fputc+1
  2255   0022E6  5003               	movf	fputc@fp^0,w,c
  2256   0022E8  6ED9               	movwf	fsr2l,c
  2257   0022EA  6ADA               	clrf	fsr2h,c
  2258   0022EC  CFDE F006          	movff	postinc2,??_fputc+2
  2259   0022F0  CFDD F007          	movff	postdec2,??_fputc+3
  2260   0022F4  5004               	movf	??_fputc^0,w,c
  2261   0022F6  2406               	addwf	(??_fputc+2)^0,w,c
  2262   0022F8  6ED9               	movwf	fsr2l,c
  2263   0022FA  5005               	movf	(??_fputc+1)^0,w,c
  2264   0022FC  2007               	addwfc	(??_fputc+3)^0,w,c
  2265   0022FE  6EDA               	movwf	fsr2h,c
  2266   002300  C001  FFDF         	movff	fputc@c,indf2
  2267   002304  5003               	movf	fputc@fp^0,w,c
  2268   002306  6ED9               	movwf	fsr2l,c
  2269   002308  6ADA               	clrf	fsr2h,c
  2270   00230A  0E03               	movlw	3
  2271   00230C  26D9               	addwf	fsr2l,f,c
  2272   00230E  2ADE               	incf	postinc2,f,c
  2273   002310  0E00               	movlw	0
  2274   002312  22DD               	addwfc	postdec2,f,c
  2275   002314                     l1463:
  2276   002314  0012               	return		;funcret
  2277   002316                     __end_of_fputc:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _putch *****************
  2281 ;; Defined at:
  2282 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  c               1    wreg     unsigned char 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  c               1    0[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 1
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_fputc
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text8
  2311   002CE2                     __ptext8:
  2312                           	callstack 0
  2313   002CE2                     _putch:
  2314                           	callstack 24
  2315   002CE2  0012               	return		;funcret
  2316   002CE4                     __end_of_putch:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _abs *****************
  2320 ;; Defined at:
  2321 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  a               2    6[COMRAM] int 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2    6[COMRAM] int 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;Total ram usage:        4 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_vfpfcnvrt
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text9
  2350   002B24                     __ptext9:
  2351                           	callstack 0
  2352   002B24                     _abs:
  2353                           	callstack 25
  2354   002B24  BE08               	btfsc	(abs@a+1)^0,7,c
  2355   002B26  EF97  F015         	goto	u1801
  2356   002B2A  EF99  F015         	goto	u1800
  2357   002B2E                     u1801:
  2358   002B2E  EF9F  F015         	goto	l1448
  2359   002B32                     u1800:
  2360   002B32  C007  F007         	movff	abs@a,?_abs
  2361   002B36  C008  F008         	movff	abs@a+1,?_abs+1
  2362   002B3A  EFAB  F015         	goto	l1451
  2363   002B3E                     l1448:
  2364   002B3E  C007  F009         	movff	abs@a,??_abs
  2365   002B42  C008  F00A         	movff	abs@a+1,??_abs+1
  2366   002B46  1E09               	comf	??_abs^0,f,c
  2367   002B48  1E0A               	comf	(??_abs+1)^0,f,c
  2368   002B4A  4A09               	infsnz	??_abs^0,f,c
  2369   002B4C  2A0A               	incf	(??_abs+1)^0,f,c
  2370   002B4E  C009  F007         	movff	??_abs,?_abs
  2371   002B52  C00A  F008         	movff	??_abs+1,?_abs+1
  2372   002B56                     l1451:
  2373   002B56  0012               	return		;funcret
  2374   002B58                     __end_of_abs:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function ___lwmod *****************
  2378 ;; Defined at:
  2379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  dividend        2    0[COMRAM] unsigned int 
  2382 ;;  divisor         2    2[COMRAM] unsigned int 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  counter         1    4[COMRAM] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  2    0[COMRAM] unsigned int 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;Total ram usage:        5 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_vfpfcnvrt
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text10
  2409   00273A                     __ptext10:
  2410                           	callstack 0
  2411   00273A                     ___lwmod:
  2412                           	callstack 25
  2413   00273A  5003               	movf	___lwmod@divisor^0,w,c
  2414   00273C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2415   00273E  B4D8               	btfsc	status,2,c
  2416   002740  EFA4  F013         	goto	u1731
  2417   002744  EFA6  F013         	goto	u1730
  2418   002748                     u1731:
  2419   002748  EFCA  F013         	goto	l1206
  2420   00274C                     u1730:
  2421   00274C  0E01               	movlw	1
  2422   00274E  6E05               	movwf	___lwmod@counter^0,c
  2423   002750  EFAE  F013         	goto	l2898
  2424   002754                     l2896:
  2425   002754  90D8               	bcf	status,0,c
  2426   002756  3603               	rlcf	___lwmod@divisor^0,f,c
  2427   002758  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2428   00275A  2A05               	incf	___lwmod@counter^0,f,c
  2429   00275C                     l2898:
  2430   00275C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2431   00275E  EFB3  F013         	goto	u1741
  2432   002762  EFB5  F013         	goto	u1740
  2433   002766                     u1741:
  2434   002766  EFAA  F013         	goto	l2896
  2435   00276A                     u1740:
  2436   00276A                     l2900:
  2437   00276A  5003               	movf	___lwmod@divisor^0,w,c
  2438   00276C  5C01               	subwf	___lwmod@dividend^0,w,c
  2439   00276E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2440   002770  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2441   002772  A0D8               	btfss	status,0,c
  2442   002774  EFBE  F013         	goto	u1751
  2443   002778  EFC0  F013         	goto	u1750
  2444   00277C                     u1751:
  2445   00277C  EFC4  F013         	goto	l2904
  2446   002780                     u1750:
  2447   002780  5003               	movf	___lwmod@divisor^0,w,c
  2448   002782  5E01               	subwf	___lwmod@dividend^0,f,c
  2449   002784  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2450   002786  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2451   002788                     l2904:
  2452   002788  90D8               	bcf	status,0,c
  2453   00278A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2454   00278C  3203               	rrcf	___lwmod@divisor^0,f,c
  2455   00278E  2E05               	decfsz	___lwmod@counter^0,f,c
  2456   002790  EFB5  F013         	goto	l2900
  2457   002794                     l1206:
  2458   002794  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2459   002798  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2460   00279C  0012               	return		;funcret
  2461   00279E                     __end_of___lwmod:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function ___lwdiv *****************
  2465 ;; Defined at:
  2466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  dividend        2    0[COMRAM] unsigned int 
  2469 ;;  divisor         2    2[COMRAM] unsigned int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  quotient        2    4[COMRAM] unsigned int 
  2472 ;;  counter         1    6[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[COMRAM] unsigned int 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;Total ram usage:        7 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_vfpfcnvrt
  2493 ;;		_setMotorPWM
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text11
  2498   0025F2                     __ptext11:
  2499                           	callstack 0
  2500   0025F2                     ___lwdiv:
  2501                           	callstack 25
  2502   0025F2  0E00               	movlw	0
  2503   0025F4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2504   0025F6  0E00               	movlw	0
  2505   0025F8  6E05               	movwf	___lwdiv@quotient^0,c
  2506   0025FA  5003               	movf	___lwdiv@divisor^0,w,c
  2507   0025FC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2508   0025FE  B4D8               	btfsc	status,2,c
  2509   002600  EF04  F013         	goto	u1701
  2510   002604  EF06  F013         	goto	u1700
  2511   002608                     u1701:
  2512   002608  EF2E  F013         	goto	l1196
  2513   00260C                     u1700:
  2514   00260C  0E01               	movlw	1
  2515   00260E  6E07               	movwf	___lwdiv@counter^0,c
  2516   002610  EF0E  F013         	goto	l2878
  2517   002614                     l2876:
  2518   002614  90D8               	bcf	status,0,c
  2519   002616  3603               	rlcf	___lwdiv@divisor^0,f,c
  2520   002618  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2521   00261A  2A07               	incf	___lwdiv@counter^0,f,c
  2522   00261C                     l2878:
  2523   00261C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2524   00261E  EF13  F013         	goto	u1711
  2525   002622  EF15  F013         	goto	u1710
  2526   002626                     u1711:
  2527   002626  EF0A  F013         	goto	l2876
  2528   00262A                     u1710:
  2529   00262A                     l2880:
  2530   00262A  90D8               	bcf	status,0,c
  2531   00262C  3605               	rlcf	___lwdiv@quotient^0,f,c
  2532   00262E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2533   002630  5003               	movf	___lwdiv@divisor^0,w,c
  2534   002632  5C01               	subwf	___lwdiv@dividend^0,w,c
  2535   002634  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2536   002636  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2537   002638  A0D8               	btfss	status,0,c
  2538   00263A  EF21  F013         	goto	u1721
  2539   00263E  EF23  F013         	goto	u1720
  2540   002642                     u1721:
  2541   002642  EF28  F013         	goto	l2888
  2542   002646                     u1720:
  2543   002646  5003               	movf	___lwdiv@divisor^0,w,c
  2544   002648  5E01               	subwf	___lwdiv@dividend^0,f,c
  2545   00264A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2546   00264C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2547   00264E  8005               	bsf	___lwdiv@quotient^0,0,c
  2548   002650                     l2888:
  2549   002650  90D8               	bcf	status,0,c
  2550   002652  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2551   002654  3203               	rrcf	___lwdiv@divisor^0,f,c
  2552   002656  2E07               	decfsz	___lwdiv@counter^0,f,c
  2553   002658  EF15  F013         	goto	l2880
  2554   00265C                     l1196:
  2555   00265C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2556   002660  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2557   002664  0012               	return		;funcret
  2558   002666                     __end_of___lwdiv:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function ___awmod *****************
  2562 ;; Defined at:
  2563 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  dividend        2    0[COMRAM] int 
  2566 ;;  divisor         2    2[COMRAM] int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  sign            1    5[COMRAM] unsigned char 
  2569 ;;  counter         1    4[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2    0[COMRAM] int 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;Total ram usage:        6 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_vfpfcnvrt
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text12
  2594   002316                     __ptext12:
  2595                           	callstack 0
  2596   002316                     ___awmod:
  2597                           	callstack 25
  2598   002316  0E00               	movlw	0
  2599   002318  6E06               	movwf	___awmod@sign^0,c
  2600   00231A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2601   00231C  EF94  F011         	goto	u1640
  2602   002320  EF92  F011         	goto	u1641
  2603   002324                     u1641:
  2604   002324  EF9A  F011         	goto	l2842
  2605   002328                     u1640:
  2606   002328  6C01               	negf	___awmod@dividend^0,c
  2607   00232A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2608   00232C  B0D8               	btfsc	status,0,c
  2609   00232E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2610   002330  0E01               	movlw	1
  2611   002332  6E06               	movwf	___awmod@sign^0,c
  2612   002334                     l2842:
  2613   002334  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2614   002336  EFA1  F011         	goto	u1650
  2615   00233A  EF9F  F011         	goto	u1651
  2616   00233E                     u1651:
  2617   00233E  EFA5  F011         	goto	l2846
  2618   002342                     u1650:
  2619   002342  6C03               	negf	___awmod@divisor^0,c
  2620   002344  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2621   002346  B0D8               	btfsc	status,0,c
  2622   002348  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2623   00234A                     l2846:
  2624   00234A  5003               	movf	___awmod@divisor^0,w,c
  2625   00234C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2626   00234E  B4D8               	btfsc	status,2,c
  2627   002350  EFAC  F011         	goto	u1661
  2628   002354  EFAE  F011         	goto	u1660
  2629   002358                     u1661:
  2630   002358  EFD2  F011         	goto	l2862
  2631   00235C                     u1660:
  2632   00235C  0E01               	movlw	1
  2633   00235E  6E05               	movwf	___awmod@counter^0,c
  2634   002360  EFB6  F011         	goto	l2852
  2635   002364                     l2850:
  2636   002364  90D8               	bcf	status,0,c
  2637   002366  3603               	rlcf	___awmod@divisor^0,f,c
  2638   002368  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2639   00236A  2A05               	incf	___awmod@counter^0,f,c
  2640   00236C                     l2852:
  2641   00236C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2642   00236E  EFBB  F011         	goto	u1671
  2643   002372  EFBD  F011         	goto	u1670
  2644   002376                     u1671:
  2645   002376  EFB2  F011         	goto	l2850
  2646   00237A                     u1670:
  2647   00237A                     l2854:
  2648   00237A  5003               	movf	___awmod@divisor^0,w,c
  2649   00237C  5C01               	subwf	___awmod@dividend^0,w,c
  2650   00237E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2651   002380  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2652   002382  A0D8               	btfss	status,0,c
  2653   002384  EFC6  F011         	goto	u1681
  2654   002388  EFC8  F011         	goto	u1680
  2655   00238C                     u1681:
  2656   00238C  EFCC  F011         	goto	l2858
  2657   002390                     u1680:
  2658   002390  5003               	movf	___awmod@divisor^0,w,c
  2659   002392  5E01               	subwf	___awmod@dividend^0,f,c
  2660   002394  5004               	movf	(___awmod@divisor+1)^0,w,c
  2661   002396  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2662   002398                     l2858:
  2663   002398  90D8               	bcf	status,0,c
  2664   00239A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2665   00239C  3203               	rrcf	___awmod@divisor^0,f,c
  2666   00239E  2E05               	decfsz	___awmod@counter^0,f,c
  2667   0023A0  EFBD  F011         	goto	l2854
  2668   0023A4                     l2862:
  2669   0023A4  5006               	movf	___awmod@sign^0,w,c
  2670   0023A6  B4D8               	btfsc	status,2,c
  2671   0023A8  EFD8  F011         	goto	u1691
  2672   0023AC  EFDA  F011         	goto	u1690
  2673   0023B0                     u1691:
  2674   0023B0  EFDE  F011         	goto	l2866
  2675   0023B4                     u1690:
  2676   0023B4  6C01               	negf	___awmod@dividend^0,c
  2677   0023B6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2678   0023B8  B0D8               	btfsc	status,0,c
  2679   0023BA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2680   0023BC                     l2866:
  2681   0023BC  C001  F001         	movff	___awmod@dividend,?___awmod
  2682   0023C0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2683   0023C4  0012               	return		;funcret
  2684   0023C6                     __end_of___awmod:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function ___awdiv *****************
  2688 ;; Defined at:
  2689 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  dividend        2    0[COMRAM] int 
  2692 ;;  divisor         2    2[COMRAM] int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  quotient        2    6[COMRAM] int 
  2695 ;;  sign            1    5[COMRAM] unsigned char 
  2696 ;;  counter         1    4[COMRAM] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2    0[COMRAM] int 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;Total ram usage:        8 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_vfpfcnvrt
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text13
  2721   002198                     __ptext13:
  2722                           	callstack 0
  2723   002198                     ___awdiv:
  2724                           	callstack 25
  2725   002198  0E00               	movlw	0
  2726   00219A  6E06               	movwf	___awdiv@sign^0,c
  2727   00219C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2728   00219E  EFD5  F010         	goto	u1580
  2729   0021A2  EFD3  F010         	goto	u1581
  2730   0021A6                     u1581:
  2731   0021A6  EFDB  F010         	goto	l2798
  2732   0021AA                     u1580:
  2733   0021AA  6C03               	negf	___awdiv@divisor^0,c
  2734   0021AC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2735   0021AE  B0D8               	btfsc	status,0,c
  2736   0021B0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2737   0021B2  0E01               	movlw	1
  2738   0021B4  6E06               	movwf	___awdiv@sign^0,c
  2739   0021B6                     l2798:
  2740   0021B6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2741   0021B8  EFE2  F010         	goto	u1590
  2742   0021BC  EFE0  F010         	goto	u1591
  2743   0021C0                     u1591:
  2744   0021C0  EFE8  F010         	goto	l2804
  2745   0021C4                     u1590:
  2746   0021C4  6C01               	negf	___awdiv@dividend^0,c
  2747   0021C6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2748   0021C8  B0D8               	btfsc	status,0,c
  2749   0021CA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2750   0021CC  0E01               	movlw	1
  2751   0021CE  1A06               	xorwf	___awdiv@sign^0,f,c
  2752   0021D0                     l2804:
  2753   0021D0  0E00               	movlw	0
  2754   0021D2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2755   0021D4  0E00               	movlw	0
  2756   0021D6  6E07               	movwf	___awdiv@quotient^0,c
  2757   0021D8  5003               	movf	___awdiv@divisor^0,w,c
  2758   0021DA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2759   0021DC  B4D8               	btfsc	status,2,c
  2760   0021DE  EFF3  F010         	goto	u1601
  2761   0021E2  EFF5  F010         	goto	u1600
  2762   0021E6                     u1601:
  2763   0021E6  EF1D  F011         	goto	l2826
  2764   0021EA                     u1600:
  2765   0021EA  0E01               	movlw	1
  2766   0021EC  6E05               	movwf	___awdiv@counter^0,c
  2767   0021EE  EFFD  F010         	goto	l2812
  2768   0021F2                     l2810:
  2769   0021F2  90D8               	bcf	status,0,c
  2770   0021F4  3603               	rlcf	___awdiv@divisor^0,f,c
  2771   0021F6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2772   0021F8  2A05               	incf	___awdiv@counter^0,f,c
  2773   0021FA                     l2812:
  2774   0021FA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2775   0021FC  EF02  F011         	goto	u1611
  2776   002200  EF04  F011         	goto	u1610
  2777   002204                     u1611:
  2778   002204  EFF9  F010         	goto	l2810
  2779   002208                     u1610:
  2780   002208                     l2814:
  2781   002208  90D8               	bcf	status,0,c
  2782   00220A  3607               	rlcf	___awdiv@quotient^0,f,c
  2783   00220C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2784   00220E  5003               	movf	___awdiv@divisor^0,w,c
  2785   002210  5C01               	subwf	___awdiv@dividend^0,w,c
  2786   002212  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2787   002214  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2788   002216  A0D8               	btfss	status,0,c
  2789   002218  EF10  F011         	goto	u1621
  2790   00221C  EF12  F011         	goto	u1620
  2791   002220                     u1621:
  2792   002220  EF17  F011         	goto	l2822
  2793   002224                     u1620:
  2794   002224  5003               	movf	___awdiv@divisor^0,w,c
  2795   002226  5E01               	subwf	___awdiv@dividend^0,f,c
  2796   002228  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2797   00222A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2798   00222C  8007               	bsf	___awdiv@quotient^0,0,c
  2799   00222E                     l2822:
  2800   00222E  90D8               	bcf	status,0,c
  2801   002230  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2802   002232  3203               	rrcf	___awdiv@divisor^0,f,c
  2803   002234  2E05               	decfsz	___awdiv@counter^0,f,c
  2804   002236  EF04  F011         	goto	l2814
  2805   00223A                     l2826:
  2806   00223A  5006               	movf	___awdiv@sign^0,w,c
  2807   00223C  B4D8               	btfsc	status,2,c
  2808   00223E  EF23  F011         	goto	u1631
  2809   002242  EF25  F011         	goto	u1630
  2810   002246                     u1631:
  2811   002246  EF29  F011         	goto	l2830
  2812   00224A                     u1630:
  2813   00224A  6C07               	negf	___awdiv@quotient^0,c
  2814   00224C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2815   00224E  B0D8               	btfsc	status,0,c
  2816   002250  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2817   002252                     l2830:
  2818   002252  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2819   002256  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2820   00225A  0012               	return		;funcret
  2821   00225C                     __end_of___awdiv:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _sendStringSerial4 *****************
  2825 ;; Defined at:
  2826 ;;		line 41 in file "serial.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  string          2    1[COMRAM] PTR unsigned char 
  2829 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2830 ;;		 -> sendIntSerial4@string(17), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;Total ram usage:        2 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 2
  2849 ;; This function calls:
  2850 ;;		_sendCharSerial4
  2851 ;; This function is called by:
  2852 ;;		_sendRGBCvalSerial4
  2853 ;;		_sendHSVvalSerial4
  2854 ;;		_sendIntSerial4
  2855 ;;		_sendArrayCharSerial4
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text14
  2860   00279E                     __ptext14:
  2861                           	callstack 0
  2862   00279E                     _sendStringSerial4:
  2863                           	callstack 27
  2864   00279E                     
  2865                           ;serial.c: 43:     while(*string != 0){
  2866   00279E  EFE6  F013         	goto	l3266
  2867   0027A2                     l3262:
  2868                           
  2869                           ;serial.c: 44:   sendCharSerial4(*string++);
  2870   0027A2  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2871   0027A6  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2872   0027AA  0E00               	movlw	low (__smallconst shr (0+16))
  2873   0027AC  6EF8               	movwf	tblptru,c
  2874   0027AE  0E0D               	movlw	(high __ramtop+-1)
  2875   0027B0  64F7               	cpfsgt	tblptrh,c
  2876   0027B2  D003               	bra	u2217
  2877   0027B4  0008               	tblrd		*
  2878   0027B6  50F5               	movf	tablat,w,c
  2879   0027B8  D005               	bra	u2210
  2880   0027BA                     u2217:
  2881   0027BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2882   0027BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2883   0027C2  50EF               	movf	indf0,w,c
  2884   0027C4                     u2210:
  2885   0027C4  EC37  F016         	call	_sendCharSerial4
  2886   0027C8  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2887   0027CA  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2888   0027CC                     l3266:
  2889                           
  2890                           ;serial.c: 43:     while(*string != 0){
  2891   0027CC  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2892   0027D0  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2893   0027D4  0E00               	movlw	low (__smallconst shr (0+16))
  2894   0027D6  6EF8               	movwf	tblptru,c
  2895   0027D8  0E0D               	movlw	(high __ramtop+-1)
  2896   0027DA  64F7               	cpfsgt	tblptrh,c
  2897   0027DC  D003               	bra	u2227
  2898   0027DE  0008               	tblrd		*
  2899   0027E0  50F5               	movf	tablat,w,c
  2900   0027E2  D005               	bra	u2220
  2901   0027E4                     u2227:
  2902   0027E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2903   0027E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2904   0027EC  50EF               	movf	indf0,w,c
  2905   0027EE                     u2220:
  2906   0027EE  0900               	iorlw	0
  2907   0027F0  A4D8               	btfss	status,2,c
  2908   0027F2  EFFD  F013         	goto	u2231
  2909   0027F6  EFFF  F013         	goto	u2230
  2910   0027FA                     u2231:
  2911   0027FA  EFD1  F013         	goto	l3262
  2912   0027FE                     u2230:
  2913   0027FE  0012               	return		;funcret
  2914   002800                     __end_of_sendStringSerial4:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _sendCharSerial4 *****************
  2918 ;; Defined at:
  2919 ;;		line 33 in file "serial.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  charToSend      1    wreg     unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  charToSend      1    0[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;Total ram usage:        1 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_sendStringSerial4
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text15
  2948   002C6E                     __ptext15:
  2949                           	callstack 0
  2950   002C6E                     _sendCharSerial4:
  2951                           	callstack 27
  2952                           
  2953                           ;incstack = 0
  2954                           ;sendCharSerial4@charToSend stored from wreg
  2955   002C6E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2956   002C70                     l440:
  2957   002C70  010E               	movlb	14	; () banked
  2958   002C72  A537               	btfss	55,2,b	;volatile
  2959   002C74  EF3E  F016         	goto	u2151
  2960   002C78  EF40  F016         	goto	u2150
  2961   002C7C                     u2151:
  2962   002C7C  EF38  F016         	goto	l440
  2963   002C80                     u2150:
  2964   002C80                     
  2965                           ; BSR set to: 14
  2966                           ;serial.c: 35:     TX4REG = charToSend;
  2967   002C80  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2968   002C84                     
  2969                           ; BSR set to: 14
  2970   002C84  0012               	return		;funcret
  2971   002C86                     __end_of_sendCharSerial4:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _scaleRGB *****************
  2975 ;; Defined at:
  2976 ;;		line 160 in file "color.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  2979 ;;		 -> main@measured_colour(8), 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2991 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;Total ram usage:        3 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 2
  2998 ;; This function calls:
  2999 ;;		___flmul
  3000 ;;		___fltol
  3001 ;;		___xxtofl
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text16
  3008   001FFA                     __ptext16:
  3009                           	callstack 0
  3010   001FFA                     _scaleRGB:
  3011                           	callstack 28
  3012   001FFA                     
  3013                           ;color.c: 160: void scaleRGB(struct RGBC_val *p);color.c: 161: {;color.c: 162:     p->R 
      +                          *= 0.5;
  3014   001FFA  0E00               	movlw	0
  3015   001FFC  6E13               	movwf	___flmul@a^0,c
  3016   001FFE  0E00               	movlw	0
  3017   002000  6E14               	movwf	(___flmul@a+1)^0,c
  3018   002002  0E00               	movlw	0
  3019   002004  6E15               	movwf	(___flmul@a+2)^0,c
  3020   002006  0E3F               	movlw	63
  3021   002008  6E16               	movwf	(___flmul@a+3)^0,c
  3022   00200A  5032               	movf	scaleRGB@p^0,w,c
  3023   00200C  6ED9               	movwf	fsr2l,c
  3024   00200E  6ADA               	clrf	fsr2h,c
  3025   002010  CFDE F033          	movff	postinc2,??_scaleRGB
  3026   002014  CFDD F034          	movff	postdec2,??_scaleRGB+1
  3027   002018  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  3028   00201C  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  3029   002020  6A03               	clrf	(___xxtofl@val+2)^0,c
  3030   002022  6A04               	clrf	(___xxtofl@val+3)^0,c
  3031   002024  0E00               	movlw	0
  3032   002026  EC0E  F00E         	call	___xxtofl
  3033   00202A  C001  F00F         	movff	?___xxtofl,___flmul@b
  3034   00202E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3035   002032  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3036   002036  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3037   00203A  EC73  F00A         	call	___flmul	;wreg free
  3038   00203E  C00F  F028         	movff	?___flmul,___fltol@f1
  3039   002042  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3040   002046  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3041   00204A  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3042   00204E  EC7A  F00F         	call	___fltol	;wreg free
  3043   002052  5032               	movf	scaleRGB@p^0,w,c
  3044   002054  6ED9               	movwf	fsr2l,c
  3045   002056  6ADA               	clrf	fsr2h,c
  3046   002058  C028  FFDE         	movff	?___fltol,postinc2
  3047   00205C  C029  FFDD         	movff	?___fltol+1,postdec2
  3048                           
  3049                           ;color.c: 163:     p->G *= 0.7;
  3050   002060  0E33               	movlw	51
  3051   002062  6E13               	movwf	___flmul@a^0,c
  3052   002064  0E33               	movlw	51
  3053   002066  6E14               	movwf	(___flmul@a+1)^0,c
  3054   002068  0E33               	movlw	51
  3055   00206A  6E15               	movwf	(___flmul@a+2)^0,c
  3056   00206C  0E3F               	movlw	63
  3057   00206E  6E16               	movwf	(___flmul@a+3)^0,c
  3058   002070  5032               	movf	scaleRGB@p^0,w,c
  3059   002072  6ED9               	movwf	fsr2l,c
  3060   002074  6ADA               	clrf	fsr2h,c
  3061   002076  0E02               	movlw	2
  3062   002078  26D9               	addwf	fsr2l,f,c
  3063   00207A  CFDE F033          	movff	postinc2,??_scaleRGB
  3064   00207E  CFDD F034          	movff	postdec2,??_scaleRGB+1
  3065   002082  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  3066   002086  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  3067   00208A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3068   00208C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3069   00208E  0E00               	movlw	0
  3070   002090  EC0E  F00E         	call	___xxtofl
  3071   002094  C001  F00F         	movff	?___xxtofl,___flmul@b
  3072   002098  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3073   00209C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3074   0020A0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3075   0020A4  EC73  F00A         	call	___flmul	;wreg free
  3076   0020A8  C00F  F028         	movff	?___flmul,___fltol@f1
  3077   0020AC  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3078   0020B0  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3079   0020B4  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3080   0020B8  EC7A  F00F         	call	___fltol	;wreg free
  3081   0020BC  5032               	movf	scaleRGB@p^0,w,c
  3082   0020BE  6ED9               	movwf	fsr2l,c
  3083   0020C0  6ADA               	clrf	fsr2h,c
  3084   0020C2  0E02               	movlw	2
  3085   0020C4  26D9               	addwf	fsr2l,f,c
  3086   0020C6  C028  FFDE         	movff	?___fltol,postinc2
  3087   0020CA  C029  FFDD         	movff	?___fltol+1,postdec2
  3088   0020CE  0012               	return		;funcret
  3089   0020D0                     __end_of_scaleRGB:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function ___xxtofl *****************
  3093 ;; Defined at:
  3094 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  sign            1    wreg     unsigned char 
  3097 ;;  val             4    0[COMRAM] long 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  sign            1    8[COMRAM] unsigned char 
  3100 ;;  arg             4   10[COMRAM] unsigned long 
  3101 ;;  exp             1    9[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  4    0[COMRAM] unsigned char 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;Total ram usage:       14 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 1
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_scaleRGB
  3122 ;;		_stop
  3123 ;;		_turnLeft
  3124 ;;		_turnRight
  3125 ;;		_fullSpeedAhead
  3126 ;;		_fullSpeedReverse
  3127 ;;		_turnLeft90
  3128 ;;		_turnRight90
  3129 ;;		_turnLeft135
  3130 ;;		_turnRight135
  3131 ;;		_UTurn
  3132 ;;		_headbuttReverse
  3133 ;;		_squareReverse
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text17
  3138   001C1C                     __ptext17:
  3139                           	callstack 0
  3140   001C1C                     ___xxtofl:
  3141                           	callstack 28
  3142                           
  3143                           ;incstack = 0
  3144                           ;___xxtofl@sign stored from wreg
  3145   001C1C  6E09               	movwf	___xxtofl@sign^0,c
  3146   001C1E  5009               	movf	___xxtofl@sign^0,w,c
  3147   001C20  B4D8               	btfsc	status,2,c
  3148   001C22  EF15  F00E         	goto	u2551
  3149   001C26  EF17  F00E         	goto	u2550
  3150   001C2A                     u2551:
  3151   001C2A  EF39  F00E         	goto	l1360
  3152   001C2E                     u2550:
  3153   001C2E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3154   001C30  EF1E  F00E         	goto	u2560
  3155   001C34  EF1C  F00E         	goto	u2561
  3156   001C38                     u2561:
  3157   001C38  EF39  F00E         	goto	l1360
  3158   001C3C                     u2560:
  3159   001C3C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3160   001C40  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3161   001C44  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3162   001C48  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3163   001C4C  1E05               	comf	??___xxtofl^0,f,c
  3164   001C4E  1E06               	comf	(??___xxtofl+1)^0,f,c
  3165   001C50  1E07               	comf	(??___xxtofl+2)^0,f,c
  3166   001C52  1E08               	comf	(??___xxtofl+3)^0,f,c
  3167   001C54  2A05               	incf	??___xxtofl^0,f,c
  3168   001C56  0E00               	movlw	0
  3169   001C58  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3170   001C5A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3171   001C5C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3172   001C5E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3173   001C62  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3174   001C66  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3175   001C6A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3176   001C6E  EF41  F00E         	goto	l3596
  3177   001C72                     l1360:
  3178   001C72  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3179   001C76  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3180   001C7A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3181   001C7E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3182   001C82                     l3596:
  3183   001C82  5001               	movf	___xxtofl@val^0,w,c
  3184   001C84  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3185   001C86  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3186   001C88  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3187   001C8A  A4D8               	btfss	status,2,c
  3188   001C8C  EF4A  F00E         	goto	u2571
  3189   001C90  EF4C  F00E         	goto	u2570
  3190   001C94                     u2571:
  3191   001C94  EF56  F00E         	goto	l3602
  3192   001C98                     u2570:
  3193   001C98  0E00               	movlw	0
  3194   001C9A  6E01               	movwf	?___xxtofl^0,c
  3195   001C9C  0E00               	movlw	0
  3196   001C9E  6E02               	movwf	(?___xxtofl+1)^0,c
  3197   001CA0  0E00               	movlw	0
  3198   001CA2  6E03               	movwf	(?___xxtofl+2)^0,c
  3199   001CA4  0E00               	movlw	0
  3200   001CA6  6E04               	movwf	(?___xxtofl+3)^0,c
  3201   001CA8  EFE7  F00E         	goto	l1363
  3202   001CAC                     l3602:
  3203   001CAC  0E96               	movlw	150
  3204   001CAE  6E0A               	movwf	___xxtofl@exp^0,c
  3205   001CB0  EF60  F00E         	goto	l3606
  3206   001CB4                     l3604:
  3207   001CB4  2A0A               	incf	___xxtofl@exp^0,f,c
  3208   001CB6  90D8               	bcf	status,0,c
  3209   001CB8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3210   001CBA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3211   001CBC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3212   001CBE  320B               	rrcf	___xxtofl@arg^0,f,c
  3213   001CC0                     l3606:
  3214   001CC0  0E00               	movlw	0
  3215   001CC2  140B               	andwf	___xxtofl@arg^0,w,c
  3216   001CC4  6E05               	movwf	??___xxtofl^0,c
  3217   001CC6  0E00               	movlw	0
  3218   001CC8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3219   001CCA  6E06               	movwf	(??___xxtofl+1)^0,c
  3220   001CCC  0E00               	movlw	0
  3221   001CCE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3222   001CD0  6E07               	movwf	(??___xxtofl+2)^0,c
  3223   001CD2  0EFE               	movlw	254
  3224   001CD4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3225   001CD6  6E08               	movwf	(??___xxtofl+3)^0,c
  3226   001CD8  5005               	movf	??___xxtofl^0,w,c
  3227   001CDA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3228   001CDC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3229   001CDE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3230   001CE0  A4D8               	btfss	status,2,c
  3231   001CE2  EF75  F00E         	goto	u2581
  3232   001CE6  EF77  F00E         	goto	u2580
  3233   001CEA                     u2581:
  3234   001CEA  EF5A  F00E         	goto	l3604
  3235   001CEE                     u2580:
  3236   001CEE  EF85  F00E         	goto	l1367
  3237   001CF2                     l3608:
  3238   001CF2  2A0A               	incf	___xxtofl@exp^0,f,c
  3239   001CF4  0E01               	movlw	1
  3240   001CF6  260B               	addwf	___xxtofl@arg^0,f,c
  3241   001CF8  0E00               	movlw	0
  3242   001CFA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3243   001CFC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3244   001CFE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3245   001D00  90D8               	bcf	status,0,c
  3246   001D02  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3247   001D04  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3248   001D06  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3249   001D08  320B               	rrcf	___xxtofl@arg^0,f,c
  3250   001D0A                     l1367:
  3251   001D0A  0E00               	movlw	0
  3252   001D0C  140B               	andwf	___xxtofl@arg^0,w,c
  3253   001D0E  6E05               	movwf	??___xxtofl^0,c
  3254   001D10  0E00               	movlw	0
  3255   001D12  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3256   001D14  6E06               	movwf	(??___xxtofl+1)^0,c
  3257   001D16  0E00               	movlw	0
  3258   001D18  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3259   001D1A  6E07               	movwf	(??___xxtofl+2)^0,c
  3260   001D1C  0EFF               	movlw	255
  3261   001D1E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3262   001D20  6E08               	movwf	(??___xxtofl+3)^0,c
  3263   001D22  5005               	movf	??___xxtofl^0,w,c
  3264   001D24  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3265   001D26  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3266   001D28  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3267   001D2A  A4D8               	btfss	status,2,c
  3268   001D2C  EF9A  F00E         	goto	u2591
  3269   001D30  EF9C  F00E         	goto	u2590
  3270   001D34                     u2591:
  3271   001D34  EF79  F00E         	goto	l3608
  3272   001D38                     u2590:
  3273   001D38  EFA4  F00E         	goto	l3616
  3274   001D3C                     l3614:
  3275   001D3C  060A               	decf	___xxtofl@exp^0,f,c
  3276   001D3E  90D8               	bcf	status,0,c
  3277   001D40  360B               	rlcf	___xxtofl@arg^0,f,c
  3278   001D42  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3279   001D44  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3280   001D46  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3281   001D48                     l3616:
  3282   001D48  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3283   001D4A  EFA9  F00E         	goto	u2601
  3284   001D4E  EFAB  F00E         	goto	u2600
  3285   001D52                     u2601:
  3286   001D52  EFB3  F00E         	goto	l1374
  3287   001D56                     u2600:
  3288   001D56  0E02               	movlw	2
  3289   001D58  600A               	cpfslt	___xxtofl@exp^0,c
  3290   001D5A  EFB1  F00E         	goto	u2611
  3291   001D5E  EFB3  F00E         	goto	u2610
  3292   001D62                     u2611:
  3293   001D62  EF9E  F00E         	goto	l3614
  3294   001D66                     u2610:
  3295   001D66                     l1374:
  3296   001D66  B00A               	btfsc	___xxtofl@exp^0,0,c
  3297   001D68  EFB8  F00E         	goto	u2621
  3298   001D6C  EFBA  F00E         	goto	u2620
  3299   001D70                     u2621:
  3300   001D70  EFBB  F00E         	goto	l3622
  3301   001D74                     u2620:
  3302   001D74  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3303   001D76                     l3622:
  3304   001D76  90D8               	bcf	status,0,c
  3305   001D78  320A               	rrcf	___xxtofl@exp^0,f,c
  3306   001D7A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3307   001D7E  6A06               	clrf	(??___xxtofl+1)^0,c
  3308   001D80  6A07               	clrf	(??___xxtofl+2)^0,c
  3309   001D82  6A08               	clrf	(??___xxtofl+3)^0,c
  3310   001D84  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3311   001D88  6A07               	clrf	(??___xxtofl+2)^0,c
  3312   001D8A  6A06               	clrf	(??___xxtofl+1)^0,c
  3313   001D8C  6A05               	clrf	??___xxtofl^0,c
  3314   001D8E  5005               	movf	??___xxtofl^0,w,c
  3315   001D90  120B               	iorwf	___xxtofl@arg^0,f,c
  3316   001D92  5006               	movf	(??___xxtofl+1)^0,w,c
  3317   001D94  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3318   001D96  5007               	movf	(??___xxtofl+2)^0,w,c
  3319   001D98  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3320   001D9A  5008               	movf	(??___xxtofl+3)^0,w,c
  3321   001D9C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3322   001D9E  5009               	movf	___xxtofl@sign^0,w,c
  3323   001DA0  B4D8               	btfsc	status,2,c
  3324   001DA2  EFD5  F00E         	goto	u2631
  3325   001DA6  EFD7  F00E         	goto	u2630
  3326   001DAA                     u2631:
  3327   001DAA  EFDF  F00E         	goto	l3632
  3328   001DAE                     u2630:
  3329   001DAE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3330   001DB0  EFDE  F00E         	goto	u2640
  3331   001DB4  EFDC  F00E         	goto	u2641
  3332   001DB8                     u2641:
  3333   001DB8  EFDF  F00E         	goto	l3632
  3334   001DBC                     u2640:
  3335   001DBC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3336   001DBE                     l3632:
  3337   001DBE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3338   001DC2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3339   001DC6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3340   001DCA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3341   001DCE                     l1363:
  3342   001DCE  0012               	return		;funcret
  3343   001DD0                     __end_of___xxtofl:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function ___fltol *****************
  3347 ;; Defined at:
  3348 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  f1              4   39[COMRAM] unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  exp1            1   48[COMRAM] unsigned char 
  3353 ;;  sign1           1   47[COMRAM] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  4   39[COMRAM] long 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;Total ram usage:       10 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_scaleRGB
  3374 ;;		_stop
  3375 ;;		_turnLeft
  3376 ;;		_turnRight
  3377 ;;		_fullSpeedAhead
  3378 ;;		_fullSpeedReverse
  3379 ;;		_turnLeft90
  3380 ;;		_turnRight90
  3381 ;;		_turnLeft135
  3382 ;;		_turnRight135
  3383 ;;		_UTurn
  3384 ;;		_headbuttReverse
  3385 ;;		_squareReverse
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text18
  3390   001EF4                     __ptext18:
  3391                           	callstack 0
  3392   001EF4                     ___fltol:
  3393                           	callstack 28
  3394   001EF4  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3395   001EF6  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3396   001EF8  6E31               	movwf	___fltol@exp1^0,c
  3397   001EFA  5031               	movf	___fltol@exp1^0,w,c
  3398   001EFC  A4D8               	btfss	status,2,c
  3399   001EFE  EF83  F00F         	goto	u2481
  3400   001F02  EF85  F00F         	goto	u2480
  3401   001F06                     u2481:
  3402   001F06  EF8F  F00F         	goto	l3552
  3403   001F0A                     u2480:
  3404   001F0A                     l3548:
  3405   001F0A  0E00               	movlw	0
  3406   001F0C  6E28               	movwf	?___fltol^0,c
  3407   001F0E  0E00               	movlw	0
  3408   001F10  6E29               	movwf	(?___fltol+1)^0,c
  3409   001F12  0E00               	movlw	0
  3410   001F14  6E2A               	movwf	(?___fltol+2)^0,c
  3411   001F16  0E00               	movlw	0
  3412   001F18  6E2B               	movwf	(?___fltol+3)^0,c
  3413   001F1A  EFFC  F00F         	goto	l1002
  3414   001F1E                     l3552:
  3415   001F1E  C028  F02C         	movff	___fltol@f1,??___fltol
  3416   001F22  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3417   001F26  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3418   001F2A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3419   001F2E  0E20               	movlw	32
  3420   001F30  EF9F  F00F         	goto	u2490
  3421   001F34                     u2495:
  3422   001F34  90D8               	bcf	status,0,c
  3423   001F36  322F               	rrcf	(??___fltol+3)^0,f,c
  3424   001F38  322E               	rrcf	(??___fltol+2)^0,f,c
  3425   001F3A  322D               	rrcf	(??___fltol+1)^0,f,c
  3426   001F3C  322C               	rrcf	??___fltol^0,f,c
  3427   001F3E                     u2490:
  3428   001F3E  2EE8               	decfsz	wreg,f,c
  3429   001F40  EF9A  F00F         	goto	u2495
  3430   001F44  502C               	movf	??___fltol^0,w,c
  3431   001F46  6E30               	movwf	___fltol@sign1^0,c
  3432   001F48  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3433   001F4A  0EFF               	movlw	255
  3434   001F4C  1628               	andwf	___fltol@f1^0,f,c
  3435   001F4E  0EFF               	movlw	255
  3436   001F50  1629               	andwf	(___fltol@f1+1)^0,f,c
  3437   001F52  0EFF               	movlw	255
  3438   001F54  162A               	andwf	(___fltol@f1+2)^0,f,c
  3439   001F56  0E00               	movlw	0
  3440   001F58  162B               	andwf	(___fltol@f1+3)^0,f,c
  3441   001F5A  0E96               	movlw	150
  3442   001F5C  5E31               	subwf	___fltol@exp1^0,f,c
  3443   001F5E  BE31               	btfsc	___fltol@exp1^0,7,c
  3444   001F60  EFB6  F00F         	goto	u2500
  3445   001F64  EFB4  F00F         	goto	u2501
  3446   001F68                     u2501:
  3447   001F68  EFCC  F00F         	goto	l3572
  3448   001F6C                     u2500:
  3449   001F6C  5031               	movf	___fltol@exp1^0,w,c
  3450   001F6E  0A80               	xorlw	128
  3451   001F70  0F97               	addlw	151
  3452   001F72  B0D8               	btfsc	status,0,c
  3453   001F74  EFBE  F00F         	goto	u2511
  3454   001F78  EFC0  F00F         	goto	u2510
  3455   001F7C                     u2511:
  3456   001F7C  EFC2  F00F         	goto	l3568
  3457   001F80                     u2510:
  3458   001F80  EF85  F00F         	goto	l3548
  3459   001F84                     l3568:
  3460   001F84  90D8               	bcf	status,0,c
  3461   001F86  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3462   001F88  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3463   001F8A  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3464   001F8C  3228               	rrcf	___fltol@f1^0,f,c
  3465   001F8E  3E31               	incfsz	___fltol@exp1^0,f,c
  3466   001F90  EFC2  F00F         	goto	l3568
  3467   001F94  EFE4  F00F         	goto	l3582
  3468   001F98                     l3572:
  3469   001F98  0E1F               	movlw	31
  3470   001F9A  6431               	cpfsgt	___fltol@exp1^0,c
  3471   001F9C  EFD2  F00F         	goto	u2521
  3472   001FA0  EFD4  F00F         	goto	u2520
  3473   001FA4                     u2521:
  3474   001FA4  EFDC  F00F         	goto	l3580
  3475   001FA8                     u2520:
  3476   001FA8  EF85  F00F         	goto	l3548
  3477   001FAC                     l3578:
  3478   001FAC  90D8               	bcf	status,0,c
  3479   001FAE  3628               	rlcf	___fltol@f1^0,f,c
  3480   001FB0  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3481   001FB2  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3482   001FB4  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3483   001FB6  0631               	decf	___fltol@exp1^0,f,c
  3484   001FB8                     l3580:
  3485   001FB8  5031               	movf	___fltol@exp1^0,w,c
  3486   001FBA  A4D8               	btfss	status,2,c
  3487   001FBC  EFE2  F00F         	goto	u2531
  3488   001FC0  EFE4  F00F         	goto	u2530
  3489   001FC4                     u2531:
  3490   001FC4  EFD6  F00F         	goto	l3578
  3491   001FC8                     u2530:
  3492   001FC8                     l3582:
  3493   001FC8  5030               	movf	___fltol@sign1^0,w,c
  3494   001FCA  B4D8               	btfsc	status,2,c
  3495   001FCC  EFEA  F00F         	goto	u2541
  3496   001FD0  EFEC  F00F         	goto	u2540
  3497   001FD4                     u2541:
  3498   001FD4  EFF4  F00F         	goto	l3586
  3499   001FD8                     u2540:
  3500   001FD8  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3501   001FDA  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3502   001FDC  1E29               	comf	(___fltol@f1+1)^0,f,c
  3503   001FDE  6C28               	negf	___fltol@f1^0,c
  3504   001FE0  0E00               	movlw	0
  3505   001FE2  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3506   001FE4  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3507   001FE6  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3508   001FE8                     l3586:
  3509   001FE8  C028  F028         	movff	___fltol@f1,?___fltol
  3510   001FEC  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3511   001FF0  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3512   001FF4  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3513   001FF8                     l1002:
  3514   001FF8  0012               	return		;funcret
  3515   001FFA                     __end_of___fltol:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function ___flmul *****************
  3519 ;; Defined at:
  3520 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  b               4   14[COMRAM] long 
  3523 ;;  a               4   18[COMRAM] long 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  prod            4   33[COMRAM] struct .
  3526 ;;  grs             4   27[COMRAM] unsigned long 
  3527 ;;  temp            2   37[COMRAM] struct .
  3528 ;;  bexp            1   32[COMRAM] unsigned char 
  3529 ;;  aexp            1   31[COMRAM] unsigned char 
  3530 ;;  sign            1   26[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  4   14[COMRAM] unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, prodl, prodh
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3540 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;Total ram usage:       25 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 1
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_scaleRGB
  3551 ;;		_stop
  3552 ;;		_turnLeft
  3553 ;;		_turnRight
  3554 ;;		_fullSpeedAhead
  3555 ;;		_fullSpeedReverse
  3556 ;;		_turnLeft90
  3557 ;;		_turnRight90
  3558 ;;		_turnLeft135
  3559 ;;		_turnRight135
  3560 ;;		_UTurn
  3561 ;;		_headbuttReverse
  3562 ;;		_squareReverse
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text19
  3567   0014E6                     __ptext19:
  3568                           	callstack 0
  3569   0014E6                     ___flmul:
  3570                           	callstack 28
  3571   0014E6  5012               	movf	(___flmul@b+3)^0,w,c
  3572   0014E8  0B80               	andlw	128
  3573   0014EA  6E1B               	movwf	___flmul@sign^0,c
  3574   0014EC  5012               	movf	(___flmul@b+3)^0,w,c
  3575   0014EE  2412               	addwf	(___flmul@b+3)^0,w,c
  3576   0014F0  6E21               	movwf	___flmul@bexp^0,c
  3577   0014F2  AE11               	btfss	(___flmul@b+2)^0,7,c
  3578   0014F4  EF7E  F00A         	goto	u2291
  3579   0014F8  EF80  F00A         	goto	u2290
  3580   0014FC                     u2291:
  3581   0014FC  EF81  F00A         	goto	l3422
  3582   001500                     u2290:
  3583   001500  8021               	bsf	___flmul@bexp^0,0,c
  3584   001502                     l3422:
  3585   001502  5021               	movf	___flmul@bexp^0,w,c
  3586   001504  B4D8               	btfsc	status,2,c
  3587   001506  EF87  F00A         	goto	u2301
  3588   00150A  EF89  F00A         	goto	u2300
  3589   00150E                     u2301:
  3590   00150E  EF9C  F00A         	goto	l3430
  3591   001512                     u2300:
  3592   001512  2821               	incf	___flmul@bexp^0,w,c
  3593   001514  A4D8               	btfss	status,2,c
  3594   001516  EF8F  F00A         	goto	u2311
  3595   00151A  EF91  F00A         	goto	u2310
  3596   00151E                     u2311:
  3597   00151E  EF99  F00A         	goto	l3428
  3598   001522                     u2310:
  3599   001522  0E00               	movlw	0
  3600   001524  6E0F               	movwf	___flmul@b^0,c
  3601   001526  0E00               	movlw	0
  3602   001528  6E10               	movwf	(___flmul@b+1)^0,c
  3603   00152A  0E00               	movlw	0
  3604   00152C  6E11               	movwf	(___flmul@b+2)^0,c
  3605   00152E  0E00               	movlw	0
  3606   001530  6E12               	movwf	(___flmul@b+3)^0,c
  3607   001532                     l3428:
  3608   001532  8E11               	bsf	(___flmul@b+2)^0,7,c
  3609   001534  EFA4  F00A         	goto	l3432
  3610   001538                     l3430:
  3611   001538  0E00               	movlw	0
  3612   00153A  6E0F               	movwf	___flmul@b^0,c
  3613   00153C  0E00               	movlw	0
  3614   00153E  6E10               	movwf	(___flmul@b+1)^0,c
  3615   001540  0E00               	movlw	0
  3616   001542  6E11               	movwf	(___flmul@b+2)^0,c
  3617   001544  0E00               	movlw	0
  3618   001546  6E12               	movwf	(___flmul@b+3)^0,c
  3619   001548                     l3432:
  3620   001548  5016               	movf	(___flmul@a+3)^0,w,c
  3621   00154A  0B80               	andlw	128
  3622   00154C  1A1B               	xorwf	___flmul@sign^0,f,c
  3623   00154E  5016               	movf	(___flmul@a+3)^0,w,c
  3624   001550  2416               	addwf	(___flmul@a+3)^0,w,c
  3625   001552  6E20               	movwf	___flmul@aexp^0,c
  3626   001554  AE15               	btfss	(___flmul@a+2)^0,7,c
  3627   001556  EFAF  F00A         	goto	u2321
  3628   00155A  EFB1  F00A         	goto	u2320
  3629   00155E                     u2321:
  3630   00155E  EFB2  F00A         	goto	l3440
  3631   001562                     u2320:
  3632   001562  8020               	bsf	___flmul@aexp^0,0,c
  3633   001564                     l3440:
  3634   001564  5020               	movf	___flmul@aexp^0,w,c
  3635   001566  B4D8               	btfsc	status,2,c
  3636   001568  EFB8  F00A         	goto	u2331
  3637   00156C  EFBA  F00A         	goto	u2330
  3638   001570                     u2331:
  3639   001570  EFCD  F00A         	goto	l3448
  3640   001574                     u2330:
  3641   001574  2820               	incf	___flmul@aexp^0,w,c
  3642   001576  A4D8               	btfss	status,2,c
  3643   001578  EFC0  F00A         	goto	u2341
  3644   00157C  EFC2  F00A         	goto	u2340
  3645   001580                     u2341:
  3646   001580  EFCA  F00A         	goto	l3446
  3647   001584                     u2340:
  3648   001584  0E00               	movlw	0
  3649   001586  6E13               	movwf	___flmul@a^0,c
  3650   001588  0E00               	movlw	0
  3651   00158A  6E14               	movwf	(___flmul@a+1)^0,c
  3652   00158C  0E00               	movlw	0
  3653   00158E  6E15               	movwf	(___flmul@a+2)^0,c
  3654   001590  0E00               	movlw	0
  3655   001592  6E16               	movwf	(___flmul@a+3)^0,c
  3656   001594                     l3446:
  3657   001594  8E15               	bsf	(___flmul@a+2)^0,7,c
  3658   001596  EFD5  F00A         	goto	l1319
  3659   00159A                     l3448:
  3660   00159A  0E00               	movlw	0
  3661   00159C  6E13               	movwf	___flmul@a^0,c
  3662   00159E  0E00               	movlw	0
  3663   0015A0  6E14               	movwf	(___flmul@a+1)^0,c
  3664   0015A2  0E00               	movlw	0
  3665   0015A4  6E15               	movwf	(___flmul@a+2)^0,c
  3666   0015A6  0E00               	movlw	0
  3667   0015A8  6E16               	movwf	(___flmul@a+3)^0,c
  3668   0015AA                     l1319:
  3669   0015AA  5020               	movf	___flmul@aexp^0,w,c
  3670   0015AC  B4D8               	btfsc	status,2,c
  3671   0015AE  EFDB  F00A         	goto	u2351
  3672   0015B2  EFDD  F00A         	goto	u2350
  3673   0015B6                     u2351:
  3674   0015B6  EFE5  F00A         	goto	l3452
  3675   0015BA                     u2350:
  3676   0015BA  5021               	movf	___flmul@bexp^0,w,c
  3677   0015BC  A4D8               	btfss	status,2,c
  3678   0015BE  EFE3  F00A         	goto	u2361
  3679   0015C2  EFE5  F00A         	goto	u2360
  3680   0015C6                     u2361:
  3681   0015C6  EFEF  F00A         	goto	l3456
  3682   0015CA                     u2360:
  3683   0015CA                     l3452:
  3684   0015CA  0E00               	movlw	0
  3685   0015CC  6E0F               	movwf	?___flmul^0,c
  3686   0015CE  0E00               	movlw	0
  3687   0015D0  6E10               	movwf	(?___flmul+1)^0,c
  3688   0015D2  0E00               	movlw	0
  3689   0015D4  6E11               	movwf	(?___flmul+2)^0,c
  3690   0015D6  0E00               	movlw	0
  3691   0015D8  6E12               	movwf	(?___flmul+3)^0,c
  3692   0015DA  EF87  F00C         	goto	l1323
  3693   0015DE                     l3456:
  3694   0015DE  5015               	movf	(___flmul@a+2)^0,w,c
  3695   0015E0  020F               	mulwf	___flmul@b^0,c
  3696   0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  3697   0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3698   0015EA  5026               	movf	___flmul@temp^0,w,c
  3699   0015EC  6E1C               	movwf	___flmul@grs^0,c
  3700   0015EE  6A1D               	clrf	(___flmul@grs+1)^0,c
  3701   0015F0  6A1E               	clrf	(___flmul@grs+2)^0,c
  3702   0015F2  6A1F               	clrf	(___flmul@grs+3)^0,c
  3703   0015F4  5027               	movf	(___flmul@temp+1)^0,w,c
  3704   0015F6  6E22               	movwf	___flmul@prod^0,c
  3705   0015F8  6A23               	clrf	(___flmul@prod+1)^0,c
  3706   0015FA  6A24               	clrf	(___flmul@prod+2)^0,c
  3707   0015FC  6A25               	clrf	(___flmul@prod+3)^0,c
  3708   0015FE  5014               	movf	(___flmul@a+1)^0,w,c
  3709   001600  0210               	mulwf	(___flmul@b+1)^0,c
  3710   001602  CFF3 F026          	movff	prodl,___flmul@temp
  3711   001606  CFF4 F027          	movff	prodh,___flmul@temp+1
  3712   00160A  5026               	movf	___flmul@temp^0,w,c
  3713   00160C  261C               	addwf	___flmul@grs^0,f,c
  3714   00160E  0E00               	movlw	0
  3715   001610  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3716   001612  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3717   001614  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3718   001616  5027               	movf	(___flmul@temp+1)^0,w,c
  3719   001618  2622               	addwf	___flmul@prod^0,f,c
  3720   00161A  0E00               	movlw	0
  3721   00161C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3722   00161E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3723   001620  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3724   001622  5013               	movf	___flmul@a^0,w,c
  3725   001624  0211               	mulwf	(___flmul@b+2)^0,c
  3726   001626  CFF3 F026          	movff	prodl,___flmul@temp
  3727   00162A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3728   00162E  5026               	movf	___flmul@temp^0,w,c
  3729   001630  261C               	addwf	___flmul@grs^0,f,c
  3730   001632  0E00               	movlw	0
  3731   001634  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3732   001636  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3733   001638  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3734   00163A  5027               	movf	(___flmul@temp+1)^0,w,c
  3735   00163C  2622               	addwf	___flmul@prod^0,f,c
  3736   00163E  0E00               	movlw	0
  3737   001640  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3738   001642  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3739   001644  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3740   001646  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3741   00164A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3742   00164E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3743   001652  6A1C               	clrf	___flmul@grs^0,c
  3744   001654  5013               	movf	___flmul@a^0,w,c
  3745   001656  0210               	mulwf	(___flmul@b+1)^0,c
  3746   001658  CFF3 F026          	movff	prodl,___flmul@temp
  3747   00165C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3748   001660  5026               	movf	___flmul@temp^0,w,c
  3749   001662  261C               	addwf	___flmul@grs^0,f,c
  3750   001664  5027               	movf	(___flmul@temp+1)^0,w,c
  3751   001666  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3752   001668  0E00               	movlw	0
  3753   00166A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3754   00166C  0E00               	movlw	0
  3755   00166E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3756   001670  5014               	movf	(___flmul@a+1)^0,w,c
  3757   001672  020F               	mulwf	___flmul@b^0,c
  3758   001674  CFF3 F026          	movff	prodl,___flmul@temp
  3759   001678  CFF4 F027          	movff	prodh,___flmul@temp+1
  3760   00167C  5026               	movf	___flmul@temp^0,w,c
  3761   00167E  261C               	addwf	___flmul@grs^0,f,c
  3762   001680  5027               	movf	(___flmul@temp+1)^0,w,c
  3763   001682  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3764   001684  0E00               	movlw	0
  3765   001686  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3766   001688  0E00               	movlw	0
  3767   00168A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3768   00168C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3769   001690  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3770   001694  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3771   001698  6A1C               	clrf	___flmul@grs^0,c
  3772   00169A  5013               	movf	___flmul@a^0,w,c
  3773   00169C  020F               	mulwf	___flmul@b^0,c
  3774   00169E  CFF3 F026          	movff	prodl,___flmul@temp
  3775   0016A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3776   0016A6  5026               	movf	___flmul@temp^0,w,c
  3777   0016A8  261C               	addwf	___flmul@grs^0,f,c
  3778   0016AA  5027               	movf	(___flmul@temp+1)^0,w,c
  3779   0016AC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3780   0016AE  0E00               	movlw	0
  3781   0016B0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3782   0016B2  0E00               	movlw	0
  3783   0016B4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3784   0016B6  5015               	movf	(___flmul@a+2)^0,w,c
  3785   0016B8  0210               	mulwf	(___flmul@b+1)^0,c
  3786   0016BA  CFF3 F026          	movff	prodl,___flmul@temp
  3787   0016BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3788   0016C2  5026               	movf	___flmul@temp^0,w,c
  3789   0016C4  2622               	addwf	___flmul@prod^0,f,c
  3790   0016C6  5027               	movf	(___flmul@temp+1)^0,w,c
  3791   0016C8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3792   0016CA  0E00               	movlw	0
  3793   0016CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3794   0016CE  0E00               	movlw	0
  3795   0016D0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3796   0016D2  5014               	movf	(___flmul@a+1)^0,w,c
  3797   0016D4  0211               	mulwf	(___flmul@b+2)^0,c
  3798   0016D6  CFF3 F026          	movff	prodl,___flmul@temp
  3799   0016DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3800   0016DE  5026               	movf	___flmul@temp^0,w,c
  3801   0016E0  2622               	addwf	___flmul@prod^0,f,c
  3802   0016E2  5027               	movf	(___flmul@temp+1)^0,w,c
  3803   0016E4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3804   0016E6  0E00               	movlw	0
  3805   0016E8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3806   0016EA  0E00               	movlw	0
  3807   0016EC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3808   0016EE  5015               	movf	(___flmul@a+2)^0,w,c
  3809   0016F0  0211               	mulwf	(___flmul@b+2)^0,c
  3810   0016F2  CFF3 F026          	movff	prodl,___flmul@temp
  3811   0016F6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3812   0016FA  5026               	movf	___flmul@temp^0,w,c
  3813   0016FC  6E17               	movwf	??___flmul^0,c
  3814   0016FE  5027               	movf	(___flmul@temp+1)^0,w,c
  3815   001700  6E18               	movwf	(??___flmul+1)^0,c
  3816   001702  6A19               	clrf	(??___flmul+2)^0,c
  3817   001704  6A1A               	clrf	(??___flmul+3)^0,c
  3818   001706  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3819   00170A  C018  F019         	movff	??___flmul+1,??___flmul+2
  3820   00170E  C017  F018         	movff	??___flmul,??___flmul+1
  3821   001712  6A17               	clrf	??___flmul^0,c
  3822   001714  5017               	movf	??___flmul^0,w,c
  3823   001716  2622               	addwf	___flmul@prod^0,f,c
  3824   001718  5018               	movf	(??___flmul+1)^0,w,c
  3825   00171A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3826   00171C  5019               	movf	(??___flmul+2)^0,w,c
  3827   00171E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3828   001720  501A               	movf	(??___flmul+3)^0,w,c
  3829   001722  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3830   001724  C01C  F017         	movff	___flmul@grs,??___flmul
  3831   001728  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3832   00172C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3833   001730  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3834   001734  0E19               	movlw	25
  3835   001736  EFA2  F00B         	goto	u2370
  3836   00173A                     u2375:
  3837   00173A  90D8               	bcf	status,0,c
  3838   00173C  321A               	rrcf	(??___flmul+3)^0,f,c
  3839   00173E  3219               	rrcf	(??___flmul+2)^0,f,c
  3840   001740  3218               	rrcf	(??___flmul+1)^0,f,c
  3841   001742  3217               	rrcf	??___flmul^0,f,c
  3842   001744                     u2370:
  3843   001744  2EE8               	decfsz	wreg,f,c
  3844   001746  EF9D  F00B         	goto	u2375
  3845   00174A  5017               	movf	??___flmul^0,w,c
  3846   00174C  2622               	addwf	___flmul@prod^0,f,c
  3847   00174E  5018               	movf	(??___flmul+1)^0,w,c
  3848   001750  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3849   001752  5019               	movf	(??___flmul+2)^0,w,c
  3850   001754  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3851   001756  501A               	movf	(??___flmul+3)^0,w,c
  3852   001758  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3853   00175A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3854   00175E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3855   001762  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3856   001766  6A1C               	clrf	___flmul@grs^0,c
  3857   001768  5020               	movf	___flmul@aexp^0,w,c
  3858   00176A  C021  F017         	movff	___flmul@bexp,??___flmul
  3859   00176E  6A18               	clrf	(??___flmul+1)^0,c
  3860   001770  2617               	addwf	??___flmul^0,f,c
  3861   001772  0E00               	movlw	0
  3862   001774  2218               	addwfc	(??___flmul+1)^0,f,c
  3863   001776  0E82               	movlw	130
  3864   001778  2417               	addwf	??___flmul^0,w,c
  3865   00177A  6E26               	movwf	___flmul@temp^0,c
  3866   00177C  0EFF               	movlw	255
  3867   00177E  2018               	addwfc	(??___flmul+1)^0,w,c
  3868   001780  6E27               	movwf	(___flmul@temp+1)^0,c
  3869   001782  EFD8  F00B         	goto	l3504
  3870   001786                     l3498:
  3871   001786  90D8               	bcf	status,0,c
  3872   001788  3622               	rlcf	___flmul@prod^0,f,c
  3873   00178A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3874   00178C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3875   00178E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3876   001790  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3877   001792  EFCD  F00B         	goto	u2381
  3878   001796  EFCF  F00B         	goto	u2380
  3879   00179A                     u2381:
  3880   00179A  EFD0  F00B         	goto	l1326
  3881   00179E                     u2380:
  3882   00179E  8022               	bsf	___flmul@prod^0,0,c
  3883   0017A0                     l1326:
  3884   0017A0  90D8               	bcf	status,0,c
  3885   0017A2  361C               	rlcf	___flmul@grs^0,f,c
  3886   0017A4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3887   0017A6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3888   0017A8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3889   0017AA  0626               	decf	___flmul@temp^0,f,c
  3890   0017AC  A0D8               	btfss	status,0,c
  3891   0017AE  0627               	decf	(___flmul@temp+1)^0,f,c
  3892   0017B0                     l3504:
  3893   0017B0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3894   0017B2  EFDD  F00B         	goto	u2391
  3895   0017B6  EFDF  F00B         	goto	u2390
  3896   0017BA                     u2391:
  3897   0017BA  EFC3  F00B         	goto	l3498
  3898   0017BE                     u2390:
  3899   0017BE  0E00               	movlw	0
  3900   0017C0  6E20               	movwf	___flmul@aexp^0,c
  3901   0017C2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3902   0017C4  EFE6  F00B         	goto	u2401
  3903   0017C8  EFE8  F00B         	goto	u2400
  3904   0017CC                     u2401:
  3905   0017CC  EF0C  F00C         	goto	l1328
  3906   0017D0                     u2400:
  3907   0017D0  0EFF               	movlw	255
  3908   0017D2  141C               	andwf	___flmul@grs^0,w,c
  3909   0017D4  6E17               	movwf	??___flmul^0,c
  3910   0017D6  0EFF               	movlw	255
  3911   0017D8  141D               	andwf	(___flmul@grs+1)^0,w,c
  3912   0017DA  6E18               	movwf	(??___flmul+1)^0,c
  3913   0017DC  0EFF               	movlw	255
  3914   0017DE  141E               	andwf	(___flmul@grs+2)^0,w,c
  3915   0017E0  6E19               	movwf	(??___flmul+2)^0,c
  3916   0017E2  0E7F               	movlw	127
  3917   0017E4  141F               	andwf	(___flmul@grs+3)^0,w,c
  3918   0017E6  6E1A               	movwf	(??___flmul+3)^0,c
  3919   0017E8  5017               	movf	??___flmul^0,w,c
  3920   0017EA  1018               	iorwf	(??___flmul+1)^0,w,c
  3921   0017EC  1019               	iorwf	(??___flmul+2)^0,w,c
  3922   0017EE  101A               	iorwf	(??___flmul+3)^0,w,c
  3923   0017F0  B4D8               	btfsc	status,2,c
  3924   0017F2  EFFD  F00B         	goto	u2411
  3925   0017F6  EFFF  F00B         	goto	u2410
  3926   0017FA                     u2411:
  3927   0017FA  EF03  F00C         	goto	l1329
  3928   0017FE                     u2410:
  3929   0017FE                     l3512:
  3930   0017FE  0E01               	movlw	1
  3931   001800  6E20               	movwf	___flmul@aexp^0,c
  3932   001802  EF0C  F00C         	goto	l1328
  3933   001806                     l1329:
  3934   001806  A022               	btfss	___flmul@prod^0,0,c
  3935   001808  EF08  F00C         	goto	u2421
  3936   00180C  EF0A  F00C         	goto	u2420
  3937   001810                     u2421:
  3938   001810  EF0C  F00C         	goto	l1328
  3939   001814                     u2420:
  3940   001814  EFFF  F00B         	goto	l3512
  3941   001818                     l1328:
  3942   001818  5020               	movf	___flmul@aexp^0,w,c
  3943   00181A  B4D8               	btfsc	status,2,c
  3944   00181C  EF12  F00C         	goto	u2431
  3945   001820  EF14  F00C         	goto	u2430
  3946   001824                     u2431:
  3947   001824  EF38  F00C         	goto	l3524
  3948   001828                     u2430:
  3949   001828  0E01               	movlw	1
  3950   00182A  2622               	addwf	___flmul@prod^0,f,c
  3951   00182C  0E00               	movlw	0
  3952   00182E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3953   001830  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3954   001832  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3955   001834  A025               	btfss	(___flmul@prod+3)^0,0,c
  3956   001836  EF1F  F00C         	goto	u2441
  3957   00183A  EF21  F00C         	goto	u2440
  3958   00183E                     u2441:
  3959   00183E  EF38  F00C         	goto	l3524
  3960   001842                     u2440:
  3961   001842  C022  F017         	movff	___flmul@prod,??___flmul
  3962   001846  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3963   00184A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3964   00184E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3965   001852  341A               	rlcf	(??___flmul+3)^0,w,c
  3966   001854  321A               	rrcf	(??___flmul+3)^0,f,c
  3967   001856  3219               	rrcf	(??___flmul+2)^0,f,c
  3968   001858  3218               	rrcf	(??___flmul+1)^0,f,c
  3969   00185A  3217               	rrcf	??___flmul^0,f,c
  3970   00185C  C017  F022         	movff	??___flmul,___flmul@prod
  3971   001860  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3972   001864  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3973   001868  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3974   00186C  4A26               	infsnz	___flmul@temp^0,f,c
  3975   00186E  2A27               	incf	(___flmul@temp+1)^0,f,c
  3976   001870                     l3524:
  3977   001870  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3978   001872  EF43  F00C         	goto	u2451
  3979   001876  5027               	movf	(___flmul@temp+1)^0,w,c
  3980   001878  E108               	bnz	u2450
  3981   00187A  2826               	incf	___flmul@temp^0,w,c
  3982   00187C  A0D8               	btfss	status,0,c
  3983   00187E  EF43  F00C         	goto	u2451
  3984   001882  EF45  F00C         	goto	u2450
  3985   001886                     u2451:
  3986   001886  EF4F  F00C         	goto	l3528
  3987   00188A                     u2450:
  3988   00188A  0E00               	movlw	0
  3989   00188C  6E22               	movwf	___flmul@prod^0,c
  3990   00188E  0E00               	movlw	0
  3991   001890  6E23               	movwf	(___flmul@prod+1)^0,c
  3992   001892  0E80               	movlw	128
  3993   001894  6E24               	movwf	(___flmul@prod+2)^0,c
  3994   001896  0E7F               	movlw	127
  3995   001898  6E25               	movwf	(___flmul@prod+3)^0,c
  3996   00189A  EF7D  F00C         	goto	l3540
  3997   00189E                     l3528:
  3998   00189E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3999   0018A0  EF5C  F00C         	goto	u2460
  4000   0018A4  5027               	movf	(___flmul@temp+1)^0,w,c
  4001   0018A6  E106               	bnz	u2461
  4002   0018A8  0426               	decf	___flmul@temp^0,w,c
  4003   0018AA  B0D8               	btfsc	status,0,c
  4004   0018AC  EF5A  F00C         	goto	u2461
  4005   0018B0  EF5C  F00C         	goto	u2460
  4006   0018B4                     u2461:
  4007   0018B4  EF68  F00C         	goto	l1336
  4008   0018B8                     u2460:
  4009   0018B8  0E00               	movlw	0
  4010   0018BA  6E22               	movwf	___flmul@prod^0,c
  4011   0018BC  0E00               	movlw	0
  4012   0018BE  6E23               	movwf	(___flmul@prod+1)^0,c
  4013   0018C0  0E00               	movlw	0
  4014   0018C2  6E24               	movwf	(___flmul@prod+2)^0,c
  4015   0018C4  0E00               	movlw	0
  4016   0018C6  6E25               	movwf	(___flmul@prod+3)^0,c
  4017   0018C8  0E00               	movlw	0
  4018   0018CA  6E1B               	movwf	___flmul@sign^0,c
  4019   0018CC  EF7D  F00C         	goto	l3540
  4020   0018D0                     l1336:
  4021   0018D0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4022   0018D4  0EFF               	movlw	255
  4023   0018D6  1622               	andwf	___flmul@prod^0,f,c
  4024   0018D8  0EFF               	movlw	255
  4025   0018DA  1623               	andwf	(___flmul@prod+1)^0,f,c
  4026   0018DC  0E7F               	movlw	127
  4027   0018DE  1624               	andwf	(___flmul@prod+2)^0,f,c
  4028   0018E0  0E00               	movlw	0
  4029   0018E2  1625               	andwf	(___flmul@prod+3)^0,f,c
  4030   0018E4  A021               	btfss	___flmul@bexp^0,0,c
  4031   0018E6  EF77  F00C         	goto	u2471
  4032   0018EA  EF79  F00C         	goto	u2470
  4033   0018EE                     u2471:
  4034   0018EE  EF7A  F00C         	goto	l3538
  4035   0018F2                     u2470:
  4036   0018F2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4037   0018F4                     l3538:
  4038   0018F4  90D8               	bcf	status,0,c
  4039   0018F6  3021               	rrcf	___flmul@bexp^0,w,c
  4040   0018F8  6E25               	movwf	(___flmul@prod+3)^0,c
  4041   0018FA                     l3540:
  4042   0018FA  501B               	movf	___flmul@sign^0,w,c
  4043   0018FC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4044   0018FE  C022  F00F         	movff	___flmul@prod,?___flmul
  4045   001902  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4046   001906  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4047   00190A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4048   00190E                     l1323:
  4049   00190E  0012               	return		;funcret
  4050   001910                     __end_of___flmul:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _initUSART4 *****************
  4054 ;; Defined at:
  4055 ;;		line 8 in file "serial.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text20
  4084   002C50                     __ptext20:
  4085                           	callstack 0
  4086   002C50                     _initUSART4:
  4087                           	callstack 29
  4088   002C50                     
  4089                           ;serial.c: 9:     RC0PPS = 0x12;
  4090   002C50  0E12               	movlw	18
  4091   002C52  010E               	movlb	14	; () banked
  4092   002C54  6F62               	movwf	98,b	;volatile
  4093                           
  4094                           ;serial.c: 10:     RX4PPS = 0x11;
  4095   002C56  0E11               	movlw	17
  4096   002C58  6F15               	movwf	21,b	;volatile
  4097   002C5A                     
  4098                           ; BSR set to: 14
  4099                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4100   002C5A  97E9               	bcf	233,3,b	;volatile
  4101   002C5C                     
  4102                           ; BSR set to: 14
  4103                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4104   002C5C  95E8               	bcf	232,2,b	;volatile
  4105                           
  4106                           ;serial.c: 14:     SP4BRGL = 51;
  4107   002C5E  0E33               	movlw	51
  4108   002C60  6FE5               	movwf	229,b	;volatile
  4109                           
  4110                           ;serial.c: 15:     SP4BRGH = 0;
  4111   002C62  0E00               	movlw	0
  4112   002C64  6FE6               	movwf	230,b	;volatile
  4113   002C66                     
  4114                           ; BSR set to: 14
  4115                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4116   002C66  89E7               	bsf	231,4,b	;volatile
  4117   002C68                     
  4118                           ; BSR set to: 14
  4119                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4120   002C68  8BE8               	bsf	232,5,b	;volatile
  4121   002C6A                     
  4122                           ; BSR set to: 14
  4123                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4124   002C6A  8FE7               	bsf	231,7,b	;volatile
  4125   002C6C                     
  4126                           ; BSR set to: 14
  4127   002C6C  0012               	return		;funcret
  4128   002C6E                     __end_of_initUSART4:
  4129                           	callstack 0
  4130                           
  4131 ;; *************** function _initDCmotorsPWM *****************
  4132 ;; Defined at:
  4133 ;;		line 7 in file "dc_motor.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;Total ram usage:        2 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text21
  4162   00246A                     __ptext21:
  4163                           	callstack 0
  4164   00246A                     _initDCmotorsPWM:
  4165                           	callstack 29
  4166   00246A                     
  4167                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  4168   00246A  9485               	bcf	133,2,c	;volatile
  4169                           
  4170                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  4171   00246C  9885               	bcf	133,4,c	;volatile
  4172                           
  4173                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  4174   00246E  9E83               	bcf	131,7,c	;volatile
  4175                           
  4176                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  4177   002470  9C87               	bcf	135,6,c	;volatile
  4178                           
  4179                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  4180   002472  947D               	bcf	125,2,c	;volatile
  4181                           
  4182                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  4183   002474  987D               	bcf	125,4,c	;volatile
  4184                           
  4185                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  4186   002476  9E7B               	bcf	123,7,c	;volatile
  4187                           
  4188                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  4189   002478  9C7F               	bcf	127,6,c	;volatile
  4190   00247A                     
  4191                           ;dc_motor.c: 19:     RE2PPS=0x05;
  4192   00247A  0E05               	movlw	5
  4193   00247C  010E               	movlb	14	; () banked
  4194   00247E  6F74               	movwf	116,b	;volatile
  4195                           
  4196                           ;dc_motor.c: 20:     RE4PPS=0x06;
  4197   002480  0E06               	movlw	6
  4198   002482  6F76               	movwf	118,b	;volatile
  4199                           
  4200                           ;dc_motor.c: 21:     RC7PPS=0x07;
  4201   002484  0E07               	movlw	7
  4202   002486  6F69               	movwf	105,b	;volatile
  4203                           
  4204                           ;dc_motor.c: 22:     RG6PPS=0x08;
  4205   002488  0E08               	movlw	8
  4206   00248A  6F88               	movwf	136,b	;volatile
  4207                           
  4208                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  4209   00248C  50BD               	movf	189,w,c	;volatile
  4210   00248E  0B8F               	andlw	-113
  4211   002490  0940               	iorlw	64
  4212   002492  6EBD               	movwf	189,c	;volatile
  4213                           
  4214                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  4215   002494  0EE0               	movlw	-32
  4216   002496  16BE               	andwf	190,f,c	;volatile
  4217                           
  4218                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  4219   002498  50BF               	movf	191,w,c	;volatile
  4220   00249A  0BF0               	andlw	-16
  4221   00249C  0901               	iorlw	1
  4222   00249E  6EBF               	movwf	191,c	;volatile
  4223   0024A0                     
  4224                           ; BSR set to: 14
  4225                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  4226   0024A0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4227   0024A4                     
  4228                           ; BSR set to: 14
  4229                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  4230   0024A4  8EBD               	bsf	189,7,c	;volatile
  4231                           
  4232                           ;dc_motor.c: 36:         CCPR1H=0;
  4233   0024A6  0E00               	movlw	0
  4234   0024A8  6EAA               	movwf	170,c	;volatile
  4235                           
  4236                           ;dc_motor.c: 37:         CCPR2H=0;
  4237   0024AA  0E00               	movlw	0
  4238   0024AC  6EA6               	movwf	166,c	;volatile
  4239                           
  4240                           ;dc_motor.c: 38:         CCPR3H=0;
  4241   0024AE  0E00               	movlw	0
  4242   0024B0  010F               	movlb	15	; () banked
  4243   0024B2  6F25               	movwf	37,b	;volatile
  4244                           
  4245                           ;dc_motor.c: 39:         CCPR4H=0;
  4246   0024B4  0E00               	movlw	0
  4247   0024B6  6F21               	movwf	33,b	;volatile
  4248                           
  4249                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  4250   0024B8  0EFC               	movlw	-4
  4251   0024BA  16AD               	andwf	173,f,c	;volatile
  4252                           
  4253                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  4254   0024BC  0EF3               	movlw	-13
  4255   0024BE  16AD               	andwf	173,f,c	;volatile
  4256                           
  4257                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  4258   0024C0  0ECF               	movlw	-49
  4259   0024C2  16AD               	andwf	173,f,c	;volatile
  4260                           
  4261                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  4262   0024C4  0E3F               	movlw	-193
  4263   0024C6  16AD               	andwf	173,f,c	;volatile
  4264   0024C8                     
  4265                           ; BSR set to: 15
  4266                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  4267   0024C8  88AB               	bsf	171,4,c	;volatile
  4268                           
  4269                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  4270   0024CA  50AB               	movf	171,w,c	;volatile
  4271   0024CC  0BF0               	andlw	-16
  4272   0024CE  090C               	iorlw	12
  4273   0024D0  6EAB               	movwf	171,c	;volatile
  4274   0024D2                     
  4275                           ; BSR set to: 15
  4276                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  4277   0024D2  8EAB               	bsf	171,7,c	;volatile
  4278   0024D4                     
  4279                           ; BSR set to: 15
  4280                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  4281   0024D4  88A7               	bsf	167,4,c	;volatile
  4282                           
  4283                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  4284   0024D6  50A7               	movf	167,w,c	;volatile
  4285   0024D8  0BF0               	andlw	-16
  4286   0024DA  090C               	iorlw	12
  4287   0024DC  6EA7               	movwf	167,c	;volatile
  4288   0024DE                     
  4289                           ; BSR set to: 15
  4290                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  4291   0024DE  8EA7               	bsf	167,7,c	;volatile
  4292   0024E0                     
  4293                           ; BSR set to: 15
  4294                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  4295   0024E0  8926               	bsf	38,4,b	;volatile
  4296                           
  4297                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  4298   0024E2  5126               	movf	38,w,b	;volatile
  4299   0024E4  0BF0               	andlw	-16
  4300   0024E6  090C               	iorlw	12
  4301   0024E8  6F26               	movwf	38,b	;volatile
  4302   0024EA                     
  4303                           ; BSR set to: 15
  4304                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  4305   0024EA  8F26               	bsf	38,7,b	;volatile
  4306   0024EC                     
  4307                           ; BSR set to: 15
  4308                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  4309   0024EC  8922               	bsf	34,4,b	;volatile
  4310                           
  4311                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  4312   0024EE  5122               	movf	34,w,b	;volatile
  4313   0024F0  0BF0               	andlw	-16
  4314   0024F2  090C               	iorlw	12
  4315   0024F4  6F22               	movwf	34,b	;volatile
  4316   0024F6                     
  4317                           ; BSR set to: 15
  4318                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  4319   0024F6  8F22               	bsf	34,7,b	;volatile
  4320   0024F8                     
  4321                           ; BSR set to: 15
  4322   0024F8  0012               	return		;funcret
  4323   0024FA                     __end_of_initDCmotorsPWM:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _getRGBCval *****************
  4327 ;; Defined at:
  4328 ;;		line 112 in file "color.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  4331 ;;		 -> main@measured_colour(8), 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;Total ram usage:        1 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 4
  4350 ;; This function calls:
  4351 ;;		_color_read_Blue
  4352 ;;		_color_read_Clear
  4353 ;;		_color_read_Green
  4354 ;;		_color_read_Red
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;;		_wait_for_wall
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text22
  4362   0028B4                     __ptext22:
  4363                           	callstack 0
  4364   0028B4                     _getRGBCval:
  4365                           	callstack 26
  4366   0028B4                     
  4367                           ;color.c: 112: void getRGBCval(struct RGBC_val *p);color.c: 113: {;color.c: 114:     p->
      +                          R = color_read_Red();
  4368   0028B4  EC85  F014         	call	_color_read_Red	;wreg free
  4369   0028B8  500C               	movf	getRGBCval@p^0,w,c
  4370   0028BA  6ED9               	movwf	fsr2l,c
  4371   0028BC  6ADA               	clrf	fsr2h,c
  4372   0028BE  C005  FFDE         	movff	?_color_read_Red,postinc2
  4373   0028C2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4374                           
  4375                           ;color.c: 115:     p->G = color_read_Green();
  4376   0028C6  ECAD  F014         	call	_color_read_Green	;wreg free
  4377   0028CA  500C               	movf	getRGBCval@p^0,w,c
  4378   0028CC  6ED9               	movwf	fsr2l,c
  4379   0028CE  6ADA               	clrf	fsr2h,c
  4380   0028D0  0E02               	movlw	2
  4381   0028D2  26D9               	addwf	fsr2l,f,c
  4382   0028D4  C005  FFDE         	movff	?_color_read_Green,postinc2
  4383   0028D8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4384                           
  4385                           ;color.c: 116:     p->B = color_read_Blue();
  4386   0028DC  ECFD  F014         	call	_color_read_Blue	;wreg free
  4387   0028E0  500C               	movf	getRGBCval@p^0,w,c
  4388   0028E2  6ED9               	movwf	fsr2l,c
  4389   0028E4  6ADA               	clrf	fsr2h,c
  4390   0028E6  0E04               	movlw	4
  4391   0028E8  26D9               	addwf	fsr2l,f,c
  4392   0028EA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4393   0028EE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4394                           
  4395                           ;color.c: 117:     p->C = color_read_Clear();
  4396   0028F2  ECD5  F014         	call	_color_read_Clear	;wreg free
  4397   0028F6  500C               	movf	getRGBCval@p^0,w,c
  4398   0028F8  6ED9               	movwf	fsr2l,c
  4399   0028FA  6ADA               	clrf	fsr2h,c
  4400   0028FC  0E06               	movlw	6
  4401   0028FE  26D9               	addwf	fsr2l,f,c
  4402   002900  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4403   002904  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4404   002908  0012               	return		;funcret
  4405   00290A                     __end_of_getRGBCval:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _color_read_Red *****************
  4409 ;; Defined at:
  4410 ;;		line 40 in file "color.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  tmp             2    9[COMRAM] unsigned int 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    4[COMRAM] unsigned int 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;Total ram usage:        7 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 3
  4431 ;; This function calls:
  4432 ;;		_I2C_2_Master_Read
  4433 ;;		_I2C_2_Master_RepStart
  4434 ;;		_I2C_2_Master_Start
  4435 ;;		_I2C_2_Master_Stop
  4436 ;;		_I2C_2_Master_Write
  4437 ;; This function is called by:
  4438 ;;		_getRGBCval
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text23
  4443   00290A                     __ptext23:
  4444                           	callstack 0
  4445   00290A                     _color_read_Red:
  4446                           	callstack 26
  4447   00290A                     
  4448                           ;color.c: 42:  unsigned int tmp;;color.c: 43:  I2C_2_Master_Start();
  4449   00290A  EC69  F016         	call	_I2C_2_Master_Start	;wreg free
  4450                           
  4451                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x00);
  4452   00290E  0E52               	movlw	82
  4453   002910  EC4D  F016         	call	_I2C_2_Master_Write
  4454                           
  4455                           ;color.c: 45:  I2C_2_Master_Write(0xA0 | 0x16);
  4456   002914  0EB6               	movlw	182
  4457   002916  EC4D  F016         	call	_I2C_2_Master_Write
  4458                           
  4459                           ;color.c: 46:  I2C_2_Master_RepStart();
  4460   00291A  EC5F  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4461                           
  4462                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x01);
  4463   00291E  0E53               	movlw	83
  4464   002920  EC4D  F016         	call	_I2C_2_Master_Write
  4465                           
  4466                           ;color.c: 48:  tmp=I2C_2_Master_Read(1);
  4467   002924  0E01               	movlw	1
  4468   002926  EC71  F015         	call	_I2C_2_Master_Read
  4469   00292A  6E07               	movwf	??_color_read_Red^0,c
  4470   00292C  5007               	movf	??_color_read_Red^0,w,c
  4471   00292E  6E0A               	movwf	color_read_Red@tmp^0,c
  4472   002930  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4473                           
  4474                           ;color.c: 49:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4475   002932  0E00               	movlw	0
  4476   002934  EC71  F015         	call	_I2C_2_Master_Read
  4477   002938  6E07               	movwf	??_color_read_Red^0,c
  4478   00293A  5007               	movf	??_color_read_Red^0,w,c
  4479   00293C  6E09               	movwf	(??_color_read_Red+2)^0,c
  4480   00293E  6A08               	clrf	(??_color_read_Red+1)^0,c
  4481   002940  500A               	movf	color_read_Red@tmp^0,w,c
  4482   002942  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4483   002944  6E0A               	movwf	color_read_Red@tmp^0,c
  4484   002946  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4485   002948  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4486   00294A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4487                           
  4488                           ;color.c: 50:  I2C_2_Master_Stop();
  4489   00294C  EC64  F016         	call	_I2C_2_Master_Stop	;wreg free
  4490   002950                     
  4491                           ;color.c: 51:  return tmp;
  4492   002950  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4493   002954  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4494   002958  0012               	return		;funcret
  4495   00295A                     __end_of_color_read_Red:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _color_read_Green *****************
  4499 ;; Defined at:
  4500 ;;		line 58 in file "color.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;		None
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  tmp             2    9[COMRAM] unsigned int 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2    4[COMRAM] unsigned int 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4516 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4518 ;;Total ram usage:        7 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 3
  4521 ;; This function calls:
  4522 ;;		_I2C_2_Master_Read
  4523 ;;		_I2C_2_Master_RepStart
  4524 ;;		_I2C_2_Master_Start
  4525 ;;		_I2C_2_Master_Stop
  4526 ;;		_I2C_2_Master_Write
  4527 ;; This function is called by:
  4528 ;;		_getRGBCval
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text24
  4533   00295A                     __ptext24:
  4534                           	callstack 0
  4535   00295A                     _color_read_Green:
  4536                           	callstack 26
  4537   00295A                     
  4538                           ;color.c: 60:     unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  4539   00295A  EC69  F016         	call	_I2C_2_Master_Start	;wreg free
  4540                           
  4541                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  4542   00295E  0E52               	movlw	82
  4543   002960  EC4D  F016         	call	_I2C_2_Master_Write
  4544                           
  4545                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  4546   002964  0EB8               	movlw	184
  4547   002966  EC4D  F016         	call	_I2C_2_Master_Write
  4548                           
  4549                           ;color.c: 64:  I2C_2_Master_RepStart();
  4550   00296A  EC5F  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4551                           
  4552                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  4553   00296E  0E53               	movlw	83
  4554   002970  EC4D  F016         	call	_I2C_2_Master_Write
  4555                           
  4556                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  4557   002974  0E01               	movlw	1
  4558   002976  EC71  F015         	call	_I2C_2_Master_Read
  4559   00297A  6E07               	movwf	??_color_read_Green^0,c
  4560   00297C  5007               	movf	??_color_read_Green^0,w,c
  4561   00297E  6E0A               	movwf	color_read_Green@tmp^0,c
  4562   002980  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4563                           
  4564                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4565   002982  0E00               	movlw	0
  4566   002984  EC71  F015         	call	_I2C_2_Master_Read
  4567   002988  6E07               	movwf	??_color_read_Green^0,c
  4568   00298A  5007               	movf	??_color_read_Green^0,w,c
  4569   00298C  6E09               	movwf	(??_color_read_Green+2)^0,c
  4570   00298E  6A08               	clrf	(??_color_read_Green+1)^0,c
  4571   002990  500A               	movf	color_read_Green@tmp^0,w,c
  4572   002992  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4573   002994  6E0A               	movwf	color_read_Green@tmp^0,c
  4574   002996  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4575   002998  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4576   00299A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4577                           
  4578                           ;color.c: 68:  I2C_2_Master_Stop();
  4579   00299C  EC64  F016         	call	_I2C_2_Master_Stop	;wreg free
  4580   0029A0                     
  4581                           ;color.c: 69:  return tmp;
  4582   0029A0  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4583   0029A4  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4584   0029A8  0012               	return		;funcret
  4585   0029AA                     __end_of_color_read_Green:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _color_read_Clear *****************
  4589 ;; Defined at:
  4590 ;;		line 94 in file "color.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  tmp             2    9[COMRAM] unsigned int 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    4[COMRAM] unsigned int 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4607 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;Total ram usage:        7 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; Hardware stack levels required when called: 3
  4611 ;; This function calls:
  4612 ;;		_I2C_2_Master_Read
  4613 ;;		_I2C_2_Master_RepStart
  4614 ;;		_I2C_2_Master_Start
  4615 ;;		_I2C_2_Master_Stop
  4616 ;;		_I2C_2_Master_Write
  4617 ;; This function is called by:
  4618 ;;		_getRGBCval
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text25
  4623   0029AA                     __ptext25:
  4624                           	callstack 0
  4625   0029AA                     _color_read_Clear:
  4626                           	callstack 26
  4627   0029AA                     
  4628                           ;color.c: 96:     unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  4629   0029AA  EC69  F016         	call	_I2C_2_Master_Start	;wreg free
  4630                           
  4631                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  4632   0029AE  0E52               	movlw	82
  4633   0029B0  EC4D  F016         	call	_I2C_2_Master_Write
  4634                           
  4635                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x14);
  4636   0029B4  0EB4               	movlw	180
  4637   0029B6  EC4D  F016         	call	_I2C_2_Master_Write
  4638                           
  4639                           ;color.c: 100:  I2C_2_Master_RepStart();
  4640   0029BA  EC5F  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4641                           
  4642                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  4643   0029BE  0E53               	movlw	83
  4644   0029C0  EC4D  F016         	call	_I2C_2_Master_Write
  4645                           
  4646                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  4647   0029C4  0E01               	movlw	1
  4648   0029C6  EC71  F015         	call	_I2C_2_Master_Read
  4649   0029CA  6E07               	movwf	??_color_read_Clear^0,c
  4650   0029CC  5007               	movf	??_color_read_Clear^0,w,c
  4651   0029CE  6E0A               	movwf	color_read_Clear@tmp^0,c
  4652   0029D0  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4653                           
  4654                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4655   0029D2  0E00               	movlw	0
  4656   0029D4  EC71  F015         	call	_I2C_2_Master_Read
  4657   0029D8  6E07               	movwf	??_color_read_Clear^0,c
  4658   0029DA  5007               	movf	??_color_read_Clear^0,w,c
  4659   0029DC  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4660   0029DE  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4661   0029E0  500A               	movf	color_read_Clear@tmp^0,w,c
  4662   0029E2  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4663   0029E4  6E0A               	movwf	color_read_Clear@tmp^0,c
  4664   0029E6  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4665   0029E8  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4666   0029EA  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4667                           
  4668                           ;color.c: 104:  I2C_2_Master_Stop();
  4669   0029EC  EC64  F016         	call	_I2C_2_Master_Stop	;wreg free
  4670   0029F0                     
  4671                           ;color.c: 105:  return tmp;
  4672   0029F0  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4673   0029F4  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4674   0029F8  0012               	return		;funcret
  4675   0029FA                     __end_of_color_read_Clear:
  4676                           	callstack 0
  4677                           
  4678 ;; *************** function _color_read_Blue *****************
  4679 ;; Defined at:
  4680 ;;		line 76 in file "color.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  tmp             2    9[COMRAM] unsigned int 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2    4[COMRAM] unsigned int 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;Total ram usage:        7 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 3
  4701 ;; This function calls:
  4702 ;;		_I2C_2_Master_Read
  4703 ;;		_I2C_2_Master_RepStart
  4704 ;;		_I2C_2_Master_Start
  4705 ;;		_I2C_2_Master_Stop
  4706 ;;		_I2C_2_Master_Write
  4707 ;; This function is called by:
  4708 ;;		_getRGBCval
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text26
  4713   0029FA                     __ptext26:
  4714                           	callstack 0
  4715   0029FA                     _color_read_Blue:
  4716                           	callstack 26
  4717   0029FA                     
  4718                           ;color.c: 78:     unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4719   0029FA  EC69  F016         	call	_I2C_2_Master_Start	;wreg free
  4720                           
  4721                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4722   0029FE  0E52               	movlw	82
  4723   002A00  EC4D  F016         	call	_I2C_2_Master_Write
  4724                           
  4725                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x1A);
  4726   002A04  0EBA               	movlw	186
  4727   002A06  EC4D  F016         	call	_I2C_2_Master_Write
  4728                           
  4729                           ;color.c: 82:  I2C_2_Master_RepStart();
  4730   002A0A  EC5F  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4731                           
  4732                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4733   002A0E  0E53               	movlw	83
  4734   002A10  EC4D  F016         	call	_I2C_2_Master_Write
  4735                           
  4736                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4737   002A14  0E01               	movlw	1
  4738   002A16  EC71  F015         	call	_I2C_2_Master_Read
  4739   002A1A  6E07               	movwf	??_color_read_Blue^0,c
  4740   002A1C  5007               	movf	??_color_read_Blue^0,w,c
  4741   002A1E  6E0A               	movwf	color_read_Blue@tmp^0,c
  4742   002A20  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4743                           
  4744                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4745   002A22  0E00               	movlw	0
  4746   002A24  EC71  F015         	call	_I2C_2_Master_Read
  4747   002A28  6E07               	movwf	??_color_read_Blue^0,c
  4748   002A2A  5007               	movf	??_color_read_Blue^0,w,c
  4749   002A2C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4750   002A2E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4751   002A30  500A               	movf	color_read_Blue@tmp^0,w,c
  4752   002A32  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4753   002A34  6E0A               	movwf	color_read_Blue@tmp^0,c
  4754   002A36  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4755   002A38  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4756   002A3A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4757                           
  4758                           ;color.c: 86:  I2C_2_Master_Stop();
  4759   002A3C  EC64  F016         	call	_I2C_2_Master_Stop	;wreg free
  4760   002A40                     
  4761                           ;color.c: 87:  return tmp;
  4762   002A40  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4763   002A44  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4764   002A48  0012               	return		;funcret
  4765   002A4A                     __end_of_color_read_Blue:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _I2C_2_Master_RepStart *****************
  4769 ;; Defined at:
  4770 ;;		line 33 in file "i2c.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 2
  4791 ;; This function calls:
  4792 ;;		_I2C_2_Master_Idle
  4793 ;; This function is called by:
  4794 ;;		_color_read_Red
  4795 ;;		_color_read_Green
  4796 ;;		_color_read_Blue
  4797 ;;		_color_read_Clear
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text27
  4802   002CBE                     __ptext27:
  4803                           	callstack 0
  4804   002CBE                     _I2C_2_Master_RepStart:
  4805                           	callstack 26
  4806   002CBE                     
  4807                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4808   002CBE  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  4809   002CC2                     
  4810                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4811   002CC2  010E               	movlb	14	; () banked
  4812   002CC4  83DA               	bsf	218,1,b	;volatile
  4813   002CC6                     
  4814                           ; BSR set to: 14
  4815   002CC6  0012               	return		;funcret
  4816   002CC8                     __end_of_I2C_2_Master_RepStart:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _I2C_2_Master_Read *****************
  4820 ;; Defined at:
  4821 ;;		line 51 in file "i2c.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  ack             1    wreg     unsigned char 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  ack             1    2[COMRAM] unsigned char 
  4826 ;;  tmp             1    3[COMRAM] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      unsigned char 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;Total ram usage:        3 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 2
  4843 ;; This function calls:
  4844 ;;		_I2C_2_Master_Idle
  4845 ;; This function is called by:
  4846 ;;		_color_read_Red
  4847 ;;		_color_read_Green
  4848 ;;		_color_read_Blue
  4849 ;;		_color_read_Clear
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text28
  4854   002AE2                     __ptext28:
  4855                           	callstack 0
  4856   002AE2                     _I2C_2_Master_Read:
  4857                           	callstack 26
  4858                           
  4859                           ; BSR set to: 14
  4860                           ;incstack = 0
  4861                           ;I2C_2_Master_Read@ack stored from wreg
  4862   002AE2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4863   002AE4                     
  4864                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4865   002AE4  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  4866   002AE8                     
  4867                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4868   002AE8  010E               	movlb	14	; () banked
  4869   002AEA  87DA               	bsf	218,3,b	;volatile
  4870                           
  4871                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4872   002AEC  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  4873   002AF0                     
  4874                           ;i2c.c: 57:   tmp = SSP2BUF;
  4875   002AF0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4876                           
  4877                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4878   002AF4  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  4879   002AF8                     
  4880                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4881   002AF8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4882   002AFA  B4D8               	btfsc	status,2,c
  4883   002AFC  EF82  F015         	goto	u2131
  4884   002B00  EF86  F015         	goto	u2130
  4885   002B04                     u2131:
  4886   002B04  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4887   002B06  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4888   002B08  EF87  F015         	goto	u2148
  4889   002B0C                     u2130:
  4890   002B0C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4891   002B0E                     u2148:
  4892   002B0E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4893   002B10  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4894   002B12  010E               	movlb	14	; () banked
  4895   002B14  51DA               	movf	218,w,b	;volatile
  4896   002B16  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4897   002B18  0BDF               	andlw	-33
  4898   002B1A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4899   002B1C  6FDA               	movwf	218,b	;volatile
  4900   002B1E                     
  4901                           ; BSR set to: 14
  4902                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4903   002B1E  89DA               	bsf	218,4,b	;volatile
  4904   002B20                     
  4905                           ; BSR set to: 14
  4906                           ;i2c.c: 61:   return tmp;
  4907   002B20  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4908   002B22                     
  4909                           ; BSR set to: 14
  4910   002B22  0012               	return		;funcret
  4911   002B24                     __end_of_I2C_2_Master_Read:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _getHSVval *****************
  4915 ;; Defined at:
  4916 ;;		line 172 in file "color.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  4919 ;;		 -> main@HSV_colour(6), 
  4920 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  4921 ;;		 -> main@measured_colour(8), 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  temp            4   51[COMRAM] unsigned long 
  4924 ;;  temp            4   47[COMRAM] unsigned long 
  4925 ;;  temp            4   43[COMRAM] unsigned long 
  4926 ;;  temp            4   39[COMRAM] unsigned long 
  4927 ;;  temp            4   55[COMRAM] unsigned long 
  4928 ;;  temp            4   35[COMRAM] unsigned long 
  4929 ;;  temp            4   31[COMRAM] unsigned long 
  4930 ;;  C               2   63[COMRAM] unsigned int 
  4931 ;;  M               2   61[COMRAM] unsigned int 
  4932 ;;  hue_scale       2   59[COMRAM] unsigned int 
  4933 ;;  hue             2   29[COMRAM] unsigned int 
  4934 ;;  sat             2   27[COMRAM] unsigned int 
  4935 ;;  m               2   25[COMRAM] unsigned int 
  4936 ;;  sat_scale       2   23[COMRAM] unsigned int 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;Total ram usage:       52 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 2
  4953 ;; This function calls:
  4954 ;;		___lldiv
  4955 ;;		___lmul
  4956 ;;		_maxRGB
  4957 ;;		_minRGB
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text29
  4964   000E1A                     __ptext29:
  4965                           	callstack 0
  4966   000E1A                     _getHSVval:
  4967                           	callstack 28
  4968   000E1A                     
  4969                           ;color.c: 172: void getHSVval(struct HSV_val *p1,struct RGBC_val *p2);color.c: 173: {;co
      +                          lor.c: 174:     unsigned int hue = 0;
  4970   000E1A  0E00               	movlw	0
  4971   000E1C  6E1F               	movwf	(getHSVval@hue+1)^0,c
  4972   000E1E  0E00               	movlw	0
  4973   000E20  6E1E               	movwf	getHSVval@hue^0,c
  4974                           
  4975                           ;color.c: 176:     unsigned int hue_scale = 60;
  4976   000E22  0E00               	movlw	0
  4977   000E24  6E3D               	movwf	(getHSVval@hue_scale+1)^0,c
  4978   000E26  0E3C               	movlw	60
  4979   000E28  6E3C               	movwf	getHSVval@hue_scale^0,c
  4980                           
  4981                           ;color.c: 177:     unsigned int sat_scale = 100;
  4982   000E2A  0E00               	movlw	0
  4983   000E2C  6E19               	movwf	(getHSVval@sat_scale+1)^0,c
  4984   000E2E  0E64               	movlw	100
  4985   000E30  6E18               	movwf	getHSVval@sat_scale^0,c
  4986   000E32                     
  4987                           ;color.c: 179:     unsigned int M = maxRGB(p2);
  4988   000E32  C00F  F001         	movff	getHSVval@p2,maxRGB@p
  4989   000E36  ECBB  F012         	call	_maxRGB	;wreg free
  4990   000E3A  C001  F03E         	movff	?_maxRGB,getHSVval@M
  4991   000E3E  C002  F03F         	movff	?_maxRGB+1,getHSVval@M+1
  4992   000E42                     
  4993                           ;color.c: 180:     unsigned int m = minRGB(p2);
  4994   000E42  C00F  F001         	movff	getHSVval@p2,minRGB@p
  4995   000E46  EC7D  F012         	call	_minRGB	;wreg free
  4996   000E4A  C001  F01A         	movff	?_minRGB,getHSVval@m
  4997   000E4E  C002  F01B         	movff	?_minRGB+1,getHSVval@m+1
  4998   000E52                     
  4999                           ;color.c: 181:     unsigned int C = M - m;
  5000   000E52  501A               	movf	getHSVval@m^0,w,c
  5001   000E54  5C3E               	subwf	getHSVval@M^0,w,c
  5002   000E56  6E40               	movwf	getHSVval@C^0,c
  5003   000E58  501B               	movf	(getHSVval@m+1)^0,w,c
  5004   000E5A  583F               	subwfb	(getHSVval@M+1)^0,w,c
  5005   000E5C  6E41               	movwf	(getHSVval@C+1)^0,c
  5006   000E5E                     
  5007                           ;color.c: 183:     if (C == 0) {
  5008   000E5E  5040               	movf	getHSVval@C^0,w,c
  5009   000E60  1041               	iorwf	(getHSVval@C+1)^0,w,c
  5010   000E62  A4D8               	btfss	status,2,c
  5011   000E64  EF36  F007         	goto	u2801
  5012   000E68  EF38  F007         	goto	u2800
  5013   000E6C                     u2801:
  5014   000E6C  EF3E  F007         	goto	l3674
  5015   000E70                     u2800:
  5016   000E70                     
  5017                           ;color.c: 184:         hue = 0;
  5018   000E70  0E00               	movlw	0
  5019   000E72  6E1F               	movwf	(getHSVval@hue+1)^0,c
  5020   000E74  0E00               	movlw	0
  5021   000E76  6E1E               	movwf	getHSVval@hue^0,c
  5022                           
  5023                           ;color.c: 185:     } else {
  5024   000E78  EF0E  F00A         	goto	l3758
  5025   000E7C                     l3674:
  5026                           
  5027                           ;color.c: 195:         if (M == p2->R) {
  5028   000E7C  500F               	movf	getHSVval@p2^0,w,c
  5029   000E7E  6ED9               	movwf	fsr2l,c
  5030   000E80  6ADA               	clrf	fsr2h,c
  5031   000E82  503E               	movf	getHSVval@M^0,w,c
  5032   000E84  18DE               	xorwf	postinc2,w,c
  5033   000E86  E107               	bnz	u2811
  5034   000E88  503F               	movf	(getHSVval@M+1)^0,w,c
  5035   000E8A  18DE               	xorwf	postinc2,w,c
  5036   000E8C  A4D8               	btfss	status,2,c
  5037   000E8E  EF4B  F007         	goto	u2811
  5038   000E92  EF4D  F007         	goto	u2810
  5039   000E96                     u2811:
  5040   000E96  EF3A  F008         	goto	l3702
  5041   000E9A                     u2810:
  5042   000E9A                     
  5043                           ;color.c: 196:             if (p2->G >= p2->B) {
  5044   000E9A  500F               	movf	getHSVval@p2^0,w,c
  5045   000E9C  6ED9               	movwf	fsr2l,c
  5046   000E9E  6ADA               	clrf	fsr2h,c
  5047   000EA0  0E04               	movlw	4
  5048   000EA2  26D9               	addwf	fsr2l,f,c
  5049   000EA4  500F               	movf	getHSVval@p2^0,w,c
  5050   000EA6  6EE1               	movwf	fsr1l,c
  5051   000EA8  6AE2               	clrf	fsr1h,c
  5052   000EAA  0E02               	movlw	2
  5053   000EAC  26E1               	addwf	fsr1l,f,c
  5054   000EAE  50DE               	movf	postinc2,w,c
  5055   000EB0  5CE6               	subwf	postinc1,w,c
  5056   000EB2  50DE               	movf	postinc2,w,c
  5057   000EB4  58E6               	subwfb	postinc1,w,c
  5058   000EB6  A0D8               	btfss	status,0,c
  5059   000EB8  EF60  F007         	goto	u2821
  5060   000EBC  EF62  F007         	goto	u2820
  5061   000EC0                     u2821:
  5062   000EC0  EFC2  F007         	goto	l3690
  5063   000EC4                     u2820:
  5064   000EC4                     
  5065                           ;color.c: 200:                 temp *= 0;
  5066   000EC4  0E00               	movlw	0
  5067   000EC6  6E24               	movwf	getHSVval@temp^0,c
  5068   000EC8  0E00               	movlw	0
  5069   000ECA  6E25               	movwf	(getHSVval@temp+1)^0,c
  5070   000ECC  0E00               	movlw	0
  5071   000ECE  6E26               	movwf	(getHSVval@temp+2)^0,c
  5072   000ED0  0E00               	movlw	0
  5073   000ED2  6E27               	movwf	(getHSVval@temp+3)^0,c
  5074   000ED4                     
  5075                           ;color.c: 201:                 temp += (unsigned long)(p2->G - p2->B);
  5076   000ED4  500F               	movf	getHSVval@p2^0,w,c
  5077   000ED6  6ED9               	movwf	fsr2l,c
  5078   000ED8  6ADA               	clrf	fsr2h,c
  5079   000EDA  0E04               	movlw	4
  5080   000EDC  26D9               	addwf	fsr2l,f,c
  5081   000EDE  CFDE F010          	movff	postinc2,??_getHSVval
  5082   000EE2  CFDD F011          	movff	postdec2,??_getHSVval+1
  5083   000EE6  500F               	movf	getHSVval@p2^0,w,c
  5084   000EE8  6ED9               	movwf	fsr2l,c
  5085   000EEA  6ADA               	clrf	fsr2h,c
  5086   000EEC  0E02               	movlw	2
  5087   000EEE  26D9               	addwf	fsr2l,f,c
  5088   000EF0  CFDE F012          	movff	postinc2,??_getHSVval+2
  5089   000EF4  CFDD F013          	movff	postdec2,??_getHSVval+3
  5090   000EF8  5010               	movf	??_getHSVval^0,w,c
  5091   000EFA  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5092   000EFC  6E14               	movwf	(??_getHSVval+4)^0,c
  5093   000EFE  5011               	movf	(??_getHSVval+1)^0,w,c
  5094   000F00  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5095   000F02  6E15               	movwf	(??_getHSVval+5)^0,c
  5096   000F04  5014               	movf	(??_getHSVval+4)^0,w,c
  5097   000F06  2624               	addwf	getHSVval@temp^0,f,c
  5098   000F08  5015               	movf	(??_getHSVval+5)^0,w,c
  5099   000F0A  2225               	addwfc	(getHSVval@temp+1)^0,f,c
  5100   000F0C  0E00               	movlw	0
  5101   000F0E  2226               	addwfc	(getHSVval@temp+2)^0,f,c
  5102   000F10  0E00               	movlw	0
  5103   000F12  2227               	addwfc	(getHSVval@temp+3)^0,f,c
  5104   000F14                     
  5105                           ;color.c: 202:                 temp *= (unsigned long)hue_scale;
  5106   000F14  C024  F001         	movff	getHSVval@temp,___lmul@multiplier
  5107   000F18  C025  F002         	movff	getHSVval@temp+1,___lmul@multiplier+1
  5108   000F1C  C026  F003         	movff	getHSVval@temp+2,___lmul@multiplier+2
  5109   000F20  C027  F004         	movff	getHSVval@temp+3,___lmul@multiplier+3
  5110   000F24  0E3C               	movlw	60
  5111   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  5112   000F28  0E00               	movlw	0
  5113   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5114   000F2C  0E00               	movlw	0
  5115   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5116   000F30  0E00               	movlw	0
  5117   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5118   000F34  EC68  F013         	call	___lmul	;wreg free
  5119   000F38  C001  F024         	movff	?___lmul,getHSVval@temp
  5120   000F3C  C002  F025         	movff	?___lmul+1,getHSVval@temp+1
  5121   000F40  C003  F026         	movff	?___lmul+2,getHSVval@temp+2
  5122   000F44  C004  F027         	movff	?___lmul+3,getHSVval@temp+3
  5123   000F48                     
  5124                           ;color.c: 203:                 temp /= (unsigned long)C;
  5125   000F48  C024  F001         	movff	getHSVval@temp,___lldiv@dividend
  5126   000F4C  C025  F002         	movff	getHSVval@temp+1,___lldiv@dividend+1
  5127   000F50  C026  F003         	movff	getHSVval@temp+2,___lldiv@dividend+2
  5128   000F54  C027  F004         	movff	getHSVval@temp+3,___lldiv@dividend+3
  5129   000F58  C040  F005         	movff	getHSVval@C,___lldiv@divisor
  5130   000F5C  C041  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5131   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5132   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5133   000F64  ECE3  F011         	call	___lldiv	;wreg free
  5134   000F68  C001  F024         	movff	?___lldiv,getHSVval@temp
  5135   000F6C  C002  F025         	movff	?___lldiv+1,getHSVval@temp+1
  5136   000F70  C003  F026         	movff	?___lldiv+2,getHSVval@temp+2
  5137   000F74  C004  F027         	movff	?___lldiv+3,getHSVval@temp+3
  5138   000F78                     
  5139                           ;color.c: 204:                 hue = (unsigned int)temp;
  5140   000F78  C024  F01E         	movff	getHSVval@temp,getHSVval@hue
  5141   000F7C  C025  F01F         	movff	getHSVval@temp+1,getHSVval@hue+1
  5142                           
  5143                           ;color.c: 205:             } else {
  5144   000F80  EF3A  F008         	goto	l3702
  5145   000F84                     l3690:
  5146                           
  5147                           ;color.c: 207:                 unsigned long temp;;color.c: 208:                 temp = 
      +                          (unsigned long)C;
  5148   000F84  C040  F038         	movff	getHSVval@C,getHSVval@temp_618
  5149   000F88  C041  F039         	movff	getHSVval@C+1,getHSVval@temp_618+1
  5150   000F8C  6A3A               	clrf	(getHSVval@temp_618+2)^0,c
  5151   000F8E  6A3B               	clrf	(getHSVval@temp_618+3)^0,c
  5152   000F90                     
  5153                           ;color.c: 209:                 temp *= 6;
  5154   000F90  C038  F001         	movff	getHSVval@temp_618,___lmul@multiplier
  5155   000F94  C039  F002         	movff	getHSVval@temp_618+1,___lmul@multiplier+1
  5156   000F98  C03A  F003         	movff	getHSVval@temp_618+2,___lmul@multiplier+2
  5157   000F9C  C03B  F004         	movff	getHSVval@temp_618+3,___lmul@multiplier+3
  5158   000FA0  0E06               	movlw	6
  5159   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  5160   000FA4  0E00               	movlw	0
  5161   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5162   000FA8  0E00               	movlw	0
  5163   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5164   000FAC  0E00               	movlw	0
  5165   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5166   000FB0  EC68  F013         	call	___lmul	;wreg free
  5167   000FB4  C001  F038         	movff	?___lmul,getHSVval@temp_618
  5168   000FB8  C002  F039         	movff	?___lmul+1,getHSVval@temp_618+1
  5169   000FBC  C003  F03A         	movff	?___lmul+2,getHSVval@temp_618+2
  5170   000FC0  C004  F03B         	movff	?___lmul+3,getHSVval@temp_618+3
  5171   000FC4                     
  5172                           ;color.c: 210:                 temp -= (unsigned long)(p2->B - p2->G);
  5173   000FC4  500F               	movf	getHSVval@p2^0,w,c
  5174   000FC6  6ED9               	movwf	fsr2l,c
  5175   000FC8  6ADA               	clrf	fsr2h,c
  5176   000FCA  0E02               	movlw	2
  5177   000FCC  26D9               	addwf	fsr2l,f,c
  5178   000FCE  CFDE F010          	movff	postinc2,??_getHSVval
  5179   000FD2  CFDD F011          	movff	postdec2,??_getHSVval+1
  5180   000FD6  500F               	movf	getHSVval@p2^0,w,c
  5181   000FD8  6ED9               	movwf	fsr2l,c
  5182   000FDA  6ADA               	clrf	fsr2h,c
  5183   000FDC  0E04               	movlw	4
  5184   000FDE  26D9               	addwf	fsr2l,f,c
  5185   000FE0  CFDE F012          	movff	postinc2,??_getHSVval+2
  5186   000FE4  CFDD F013          	movff	postdec2,??_getHSVval+3
  5187   000FE8  5010               	movf	??_getHSVval^0,w,c
  5188   000FEA  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5189   000FEC  6E14               	movwf	(??_getHSVval+4)^0,c
  5190   000FEE  5011               	movf	(??_getHSVval+1)^0,w,c
  5191   000FF0  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5192   000FF2  6E15               	movwf	(??_getHSVval+5)^0,c
  5193   000FF4  6A16               	clrf	(??_getHSVval+6)^0,c
  5194   000FF6  6A17               	clrf	(??_getHSVval+7)^0,c
  5195   000FF8  5014               	movf	(??_getHSVval+4)^0,w,c
  5196   000FFA  5E38               	subwf	getHSVval@temp_618^0,f,c
  5197   000FFC  5015               	movf	(??_getHSVval+5)^0,w,c
  5198   000FFE  5A39               	subwfb	(getHSVval@temp_618+1)^0,f,c
  5199   001000  5016               	movf	(??_getHSVval+6)^0,w,c
  5200   001002  5A3A               	subwfb	(getHSVval@temp_618+2)^0,f,c
  5201   001004  5017               	movf	(??_getHSVval+7)^0,w,c
  5202   001006  5A3B               	subwfb	(getHSVval@temp_618+3)^0,f,c
  5203   001008                     
  5204                           ;color.c: 211:                 temp *= (unsigned long)hue_scale;
  5205   001008  C038  F001         	movff	getHSVval@temp_618,___lmul@multiplier
  5206   00100C  C039  F002         	movff	getHSVval@temp_618+1,___lmul@multiplier+1
  5207   001010  C03A  F003         	movff	getHSVval@temp_618+2,___lmul@multiplier+2
  5208   001014  C03B  F004         	movff	getHSVval@temp_618+3,___lmul@multiplier+3
  5209   001018  0E3C               	movlw	60
  5210   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  5211   00101C  0E00               	movlw	0
  5212   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5213   001020  0E00               	movlw	0
  5214   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5215   001024  0E00               	movlw	0
  5216   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5217   001028  EC68  F013         	call	___lmul	;wreg free
  5218   00102C  C001  F038         	movff	?___lmul,getHSVval@temp_618
  5219   001030  C002  F039         	movff	?___lmul+1,getHSVval@temp_618+1
  5220   001034  C003  F03A         	movff	?___lmul+2,getHSVval@temp_618+2
  5221   001038  C004  F03B         	movff	?___lmul+3,getHSVval@temp_618+3
  5222   00103C                     
  5223                           ;color.c: 212:                 temp /= (unsigned long)C;
  5224   00103C  C038  F001         	movff	getHSVval@temp_618,___lldiv@dividend
  5225   001040  C039  F002         	movff	getHSVval@temp_618+1,___lldiv@dividend+1
  5226   001044  C03A  F003         	movff	getHSVval@temp_618+2,___lldiv@dividend+2
  5227   001048  C03B  F004         	movff	getHSVval@temp_618+3,___lldiv@dividend+3
  5228   00104C  C040  F005         	movff	getHSVval@C,___lldiv@divisor
  5229   001050  C041  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5230   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5231   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5232   001058  ECE3  F011         	call	___lldiv	;wreg free
  5233   00105C  C001  F038         	movff	?___lldiv,getHSVval@temp_618
  5234   001060  C002  F039         	movff	?___lldiv+1,getHSVval@temp_618+1
  5235   001064  C003  F03A         	movff	?___lldiv+2,getHSVval@temp_618+2
  5236   001068  C004  F03B         	movff	?___lldiv+3,getHSVval@temp_618+3
  5237   00106C                     
  5238                           ;color.c: 213:                 hue = (unsigned int)temp;
  5239   00106C  C038  F01E         	movff	getHSVval@temp_618,getHSVval@hue
  5240   001070  C039  F01F         	movff	getHSVval@temp_618+1,getHSVval@hue+1
  5241   001074                     l3702:
  5242                           
  5243                           ;color.c: 216:         if (M == p2->G) {
  5244   001074  500F               	movf	getHSVval@p2^0,w,c
  5245   001076  6ED9               	movwf	fsr2l,c
  5246   001078  6ADA               	clrf	fsr2h,c
  5247   00107A  0E02               	movlw	2
  5248   00107C  26D9               	addwf	fsr2l,f,c
  5249   00107E  503E               	movf	getHSVval@M^0,w,c
  5250   001080  18DE               	xorwf	postinc2,w,c
  5251   001082  E107               	bnz	u2831
  5252   001084  503F               	movf	(getHSVval@M+1)^0,w,c
  5253   001086  18DE               	xorwf	postinc2,w,c
  5254   001088  A4D8               	btfss	status,2,c
  5255   00108A  EF49  F008         	goto	u2831
  5256   00108E  EF4B  F008         	goto	u2830
  5257   001092                     u2831:
  5258   001092  EF20  F009         	goto	l3730
  5259   001096                     u2830:
  5260   001096                     
  5261                           ;color.c: 217:             if (p2->B >= p2->R) {
  5262   001096  500F               	movf	getHSVval@p2^0,w,c
  5263   001098  6ED9               	movwf	fsr2l,c
  5264   00109A  6ADA               	clrf	fsr2h,c
  5265   00109C  500F               	movf	getHSVval@p2^0,w,c
  5266   00109E  6EE1               	movwf	fsr1l,c
  5267   0010A0  6AE2               	clrf	fsr1h,c
  5268   0010A2  0E04               	movlw	4
  5269   0010A4  26E1               	addwf	fsr1l,f,c
  5270   0010A6  50DE               	movf	postinc2,w,c
  5271   0010A8  5CE6               	subwf	postinc1,w,c
  5272   0010AA  50DE               	movf	postinc2,w,c
  5273   0010AC  58E6               	subwfb	postinc1,w,c
  5274   0010AE  A0D8               	btfss	status,0,c
  5275   0010B0  EF5C  F008         	goto	u2841
  5276   0010B4  EF5E  F008         	goto	u2840
  5277   0010B8                     u2841:
  5278   0010B8  EFBF  F008         	goto	l3718
  5279   0010BC                     u2840:
  5280   0010BC                     
  5281                           ;color.c: 219:                 unsigned long temp;;color.c: 220:                 temp = 
      +                          (unsigned long)C;
  5282   0010BC  C040  F028         	movff	getHSVval@C,getHSVval@temp_619
  5283   0010C0  C041  F029         	movff	getHSVval@C+1,getHSVval@temp_619+1
  5284   0010C4  6A2A               	clrf	(getHSVval@temp_619+2)^0,c
  5285   0010C6  6A2B               	clrf	(getHSVval@temp_619+3)^0,c
  5286   0010C8                     
  5287                           ;color.c: 221:                 temp *= 2;
  5288   0010C8  90D8               	bcf	status,0,c
  5289   0010CA  3628               	rlcf	getHSVval@temp_619^0,f,c
  5290   0010CC  3629               	rlcf	(getHSVval@temp_619+1)^0,f,c
  5291   0010CE  362A               	rlcf	(getHSVval@temp_619+2)^0,f,c
  5292   0010D0  362B               	rlcf	(getHSVval@temp_619+3)^0,f,c
  5293   0010D2                     
  5294                           ;color.c: 222:                 temp += (unsigned long)(p2->B - p2->R);
  5295   0010D2  500F               	movf	getHSVval@p2^0,w,c
  5296   0010D4  6ED9               	movwf	fsr2l,c
  5297   0010D6  6ADA               	clrf	fsr2h,c
  5298   0010D8  CFDE F010          	movff	postinc2,??_getHSVval
  5299   0010DC  CFDD F011          	movff	postdec2,??_getHSVval+1
  5300   0010E0  500F               	movf	getHSVval@p2^0,w,c
  5301   0010E2  6ED9               	movwf	fsr2l,c
  5302   0010E4  6ADA               	clrf	fsr2h,c
  5303   0010E6  0E04               	movlw	4
  5304   0010E8  26D9               	addwf	fsr2l,f,c
  5305   0010EA  CFDE F012          	movff	postinc2,??_getHSVval+2
  5306   0010EE  CFDD F013          	movff	postdec2,??_getHSVval+3
  5307   0010F2  5010               	movf	??_getHSVval^0,w,c
  5308   0010F4  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5309   0010F6  6E14               	movwf	(??_getHSVval+4)^0,c
  5310   0010F8  5011               	movf	(??_getHSVval+1)^0,w,c
  5311   0010FA  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5312   0010FC  6E15               	movwf	(??_getHSVval+5)^0,c
  5313   0010FE  5014               	movf	(??_getHSVval+4)^0,w,c
  5314   001100  2628               	addwf	getHSVval@temp_619^0,f,c
  5315   001102  5015               	movf	(??_getHSVval+5)^0,w,c
  5316   001104  2229               	addwfc	(getHSVval@temp_619+1)^0,f,c
  5317   001106  0E00               	movlw	0
  5318   001108  222A               	addwfc	(getHSVval@temp_619+2)^0,f,c
  5319   00110A  0E00               	movlw	0
  5320   00110C  222B               	addwfc	(getHSVval@temp_619+3)^0,f,c
  5321   00110E                     
  5322                           ;color.c: 223:                 temp *= (unsigned long)hue_scale;
  5323   00110E  C028  F001         	movff	getHSVval@temp_619,___lmul@multiplier
  5324   001112  C029  F002         	movff	getHSVval@temp_619+1,___lmul@multiplier+1
  5325   001116  C02A  F003         	movff	getHSVval@temp_619+2,___lmul@multiplier+2
  5326   00111A  C02B  F004         	movff	getHSVval@temp_619+3,___lmul@multiplier+3
  5327   00111E  0E3C               	movlw	60
  5328   001120  6E05               	movwf	___lmul@multiplicand^0,c
  5329   001122  0E00               	movlw	0
  5330   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5331   001126  0E00               	movlw	0
  5332   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5333   00112A  0E00               	movlw	0
  5334   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5335   00112E  EC68  F013         	call	___lmul	;wreg free
  5336   001132  C001  F028         	movff	?___lmul,getHSVval@temp_619
  5337   001136  C002  F029         	movff	?___lmul+1,getHSVval@temp_619+1
  5338   00113A  C003  F02A         	movff	?___lmul+2,getHSVval@temp_619+2
  5339   00113E  C004  F02B         	movff	?___lmul+3,getHSVval@temp_619+3
  5340   001142                     
  5341                           ;color.c: 224:                 temp /= (unsigned long)C;
  5342   001142  C028  F001         	movff	getHSVval@temp_619,___lldiv@dividend
  5343   001146  C029  F002         	movff	getHSVval@temp_619+1,___lldiv@dividend+1
  5344   00114A  C02A  F003         	movff	getHSVval@temp_619+2,___lldiv@dividend+2
  5345   00114E  C02B  F004         	movff	getHSVval@temp_619+3,___lldiv@dividend+3
  5346   001152  C040  F005         	movff	getHSVval@C,___lldiv@divisor
  5347   001156  C041  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5348   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5349   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5350   00115E  ECE3  F011         	call	___lldiv	;wreg free
  5351   001162  C001  F028         	movff	?___lldiv,getHSVval@temp_619
  5352   001166  C002  F029         	movff	?___lldiv+1,getHSVval@temp_619+1
  5353   00116A  C003  F02A         	movff	?___lldiv+2,getHSVval@temp_619+2
  5354   00116E  C004  F02B         	movff	?___lldiv+3,getHSVval@temp_619+3
  5355   001172                     
  5356                           ;color.c: 225:                 hue = (unsigned int)temp;
  5357   001172  C028  F01E         	movff	getHSVval@temp_619,getHSVval@hue
  5358   001176  C029  F01F         	movff	getHSVval@temp_619+1,getHSVval@hue+1
  5359                           
  5360                           ;color.c: 226:             } else {
  5361   00117A  EF20  F009         	goto	l3730
  5362   00117E                     l3718:
  5363                           
  5364                           ;color.c: 228:                 unsigned long temp;;color.c: 229:                 temp = 
      +                          (unsigned long)C;
  5365   00117E  C040  F02C         	movff	getHSVval@C,getHSVval@temp_620
  5366   001182  C041  F02D         	movff	getHSVval@C+1,getHSVval@temp_620+1
  5367   001186  6A2E               	clrf	(getHSVval@temp_620+2)^0,c
  5368   001188  6A2F               	clrf	(getHSVval@temp_620+3)^0,c
  5369   00118A                     
  5370                           ;color.c: 230:                 temp *= 2;
  5371   00118A  90D8               	bcf	status,0,c
  5372   00118C  362C               	rlcf	getHSVval@temp_620^0,f,c
  5373   00118E  362D               	rlcf	(getHSVval@temp_620+1)^0,f,c
  5374   001190  362E               	rlcf	(getHSVval@temp_620+2)^0,f,c
  5375   001192  362F               	rlcf	(getHSVval@temp_620+3)^0,f,c
  5376   001194                     
  5377                           ;color.c: 231:                 temp -= (unsigned long)(p2->R - p2->B);
  5378   001194  500F               	movf	getHSVval@p2^0,w,c
  5379   001196  6ED9               	movwf	fsr2l,c
  5380   001198  6ADA               	clrf	fsr2h,c
  5381   00119A  0E04               	movlw	4
  5382   00119C  26D9               	addwf	fsr2l,f,c
  5383   00119E  CFDE F010          	movff	postinc2,??_getHSVval
  5384   0011A2  CFDD F011          	movff	postdec2,??_getHSVval+1
  5385   0011A6  500F               	movf	getHSVval@p2^0,w,c
  5386   0011A8  6ED9               	movwf	fsr2l,c
  5387   0011AA  6ADA               	clrf	fsr2h,c
  5388   0011AC  CFDE F012          	movff	postinc2,??_getHSVval+2
  5389   0011B0  CFDD F013          	movff	postdec2,??_getHSVval+3
  5390   0011B4  5010               	movf	??_getHSVval^0,w,c
  5391   0011B6  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5392   0011B8  6E14               	movwf	(??_getHSVval+4)^0,c
  5393   0011BA  5011               	movf	(??_getHSVval+1)^0,w,c
  5394   0011BC  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5395   0011BE  6E15               	movwf	(??_getHSVval+5)^0,c
  5396   0011C0  6A16               	clrf	(??_getHSVval+6)^0,c
  5397   0011C2  6A17               	clrf	(??_getHSVval+7)^0,c
  5398   0011C4  5014               	movf	(??_getHSVval+4)^0,w,c
  5399   0011C6  5E2C               	subwf	getHSVval@temp_620^0,f,c
  5400   0011C8  5015               	movf	(??_getHSVval+5)^0,w,c
  5401   0011CA  5A2D               	subwfb	(getHSVval@temp_620+1)^0,f,c
  5402   0011CC  5016               	movf	(??_getHSVval+6)^0,w,c
  5403   0011CE  5A2E               	subwfb	(getHSVval@temp_620+2)^0,f,c
  5404   0011D0  5017               	movf	(??_getHSVval+7)^0,w,c
  5405   0011D2  5A2F               	subwfb	(getHSVval@temp_620+3)^0,f,c
  5406   0011D4                     
  5407                           ;color.c: 232:                 temp *= (unsigned long)hue_scale;
  5408   0011D4  C02C  F001         	movff	getHSVval@temp_620,___lmul@multiplier
  5409   0011D8  C02D  F002         	movff	getHSVval@temp_620+1,___lmul@multiplier+1
  5410   0011DC  C02E  F003         	movff	getHSVval@temp_620+2,___lmul@multiplier+2
  5411   0011E0  C02F  F004         	movff	getHSVval@temp_620+3,___lmul@multiplier+3
  5412   0011E4  0E3C               	movlw	60
  5413   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  5414   0011E8  0E00               	movlw	0
  5415   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5416   0011EC  0E00               	movlw	0
  5417   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5418   0011F0  0E00               	movlw	0
  5419   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5420   0011F4  EC68  F013         	call	___lmul	;wreg free
  5421   0011F8  C001  F02C         	movff	?___lmul,getHSVval@temp_620
  5422   0011FC  C002  F02D         	movff	?___lmul+1,getHSVval@temp_620+1
  5423   001200  C003  F02E         	movff	?___lmul+2,getHSVval@temp_620+2
  5424   001204  C004  F02F         	movff	?___lmul+3,getHSVval@temp_620+3
  5425   001208                     
  5426                           ;color.c: 233:                 temp /= (unsigned long)C;
  5427   001208  C02C  F001         	movff	getHSVval@temp_620,___lldiv@dividend
  5428   00120C  C02D  F002         	movff	getHSVval@temp_620+1,___lldiv@dividend+1
  5429   001210  C02E  F003         	movff	getHSVval@temp_620+2,___lldiv@dividend+2
  5430   001214  C02F  F004         	movff	getHSVval@temp_620+3,___lldiv@dividend+3
  5431   001218  C040  F005         	movff	getHSVval@C,___lldiv@divisor
  5432   00121C  C041  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5433   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5434   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5435   001224  ECE3  F011         	call	___lldiv	;wreg free
  5436   001228  C001  F02C         	movff	?___lldiv,getHSVval@temp_620
  5437   00122C  C002  F02D         	movff	?___lldiv+1,getHSVval@temp_620+1
  5438   001230  C003  F02E         	movff	?___lldiv+2,getHSVval@temp_620+2
  5439   001234  C004  F02F         	movff	?___lldiv+3,getHSVval@temp_620+3
  5440   001238                     
  5441                           ;color.c: 234:                 hue = (unsigned int)temp;
  5442   001238  C02C  F01E         	movff	getHSVval@temp_620,getHSVval@hue
  5443   00123C  C02D  F01F         	movff	getHSVval@temp_620+1,getHSVval@hue+1
  5444   001240                     l3730:
  5445                           
  5446                           ;color.c: 237:         if (M == p2->B) {
  5447   001240  500F               	movf	getHSVval@p2^0,w,c
  5448   001242  6ED9               	movwf	fsr2l,c
  5449   001244  6ADA               	clrf	fsr2h,c
  5450   001246  0E04               	movlw	4
  5451   001248  26D9               	addwf	fsr2l,f,c
  5452   00124A  503E               	movf	getHSVval@M^0,w,c
  5453   00124C  18DE               	xorwf	postinc2,w,c
  5454   00124E  E107               	bnz	u2851
  5455   001250  503F               	movf	(getHSVval@M+1)^0,w,c
  5456   001252  18DE               	xorwf	postinc2,w,c
  5457   001254  A4D8               	btfss	status,2,c
  5458   001256  EF2F  F009         	goto	u2851
  5459   00125A  EF31  F009         	goto	u2850
  5460   00125E                     u2851:
  5461   00125E  EF0E  F00A         	goto	l3758
  5462   001262                     u2850:
  5463   001262                     
  5464                           ;color.c: 238:             if (p2->R >= p2->G) {
  5465   001262  500F               	movf	getHSVval@p2^0,w,c
  5466   001264  6ED9               	movwf	fsr2l,c
  5467   001266  6ADA               	clrf	fsr2h,c
  5468   001268  0E02               	movlw	2
  5469   00126A  26D9               	addwf	fsr2l,f,c
  5470   00126C  500F               	movf	getHSVval@p2^0,w,c
  5471   00126E  6EE1               	movwf	fsr1l,c
  5472   001270  6AE2               	clrf	fsr1h,c
  5473   001272  50DE               	movf	postinc2,w,c
  5474   001274  5CE6               	subwf	postinc1,w,c
  5475   001276  50DE               	movf	postinc2,w,c
  5476   001278  58E6               	subwfb	postinc1,w,c
  5477   00127A  A0D8               	btfss	status,0,c
  5478   00127C  EF42  F009         	goto	u2861
  5479   001280  EF44  F009         	goto	u2860
  5480   001284                     u2861:
  5481   001284  EFA9  F009         	goto	l3746
  5482   001288                     u2860:
  5483   001288                     
  5484                           ;color.c: 240:                 unsigned long temp;;color.c: 241:                 temp = 
      +                          (unsigned long)C;
  5485   001288  C040  F030         	movff	getHSVval@C,getHSVval@temp_621
  5486   00128C  C041  F031         	movff	getHSVval@C+1,getHSVval@temp_621+1
  5487   001290  6A32               	clrf	(getHSVval@temp_621+2)^0,c
  5488   001292  6A33               	clrf	(getHSVval@temp_621+3)^0,c
  5489   001294                     
  5490                           ;color.c: 242:                 temp *= 4;
  5491   001294  0E02               	movlw	2
  5492   001296                     u2875:
  5493   001296  90D8               	bcf	status,0,c
  5494   001298  3630               	rlcf	getHSVval@temp_621^0,f,c
  5495   00129A  3631               	rlcf	(getHSVval@temp_621+1)^0,f,c
  5496   00129C  3632               	rlcf	(getHSVval@temp_621+2)^0,f,c
  5497   00129E  3633               	rlcf	(getHSVval@temp_621+3)^0,f,c
  5498   0012A0  2EE8               	decfsz	wreg,f,c
  5499   0012A2  EF4B  F009         	goto	u2875
  5500   0012A6                     
  5501                           ;color.c: 243:                 temp += (unsigned long)(p2->R - p2->G);
  5502   0012A6  500F               	movf	getHSVval@p2^0,w,c
  5503   0012A8  6ED9               	movwf	fsr2l,c
  5504   0012AA  6ADA               	clrf	fsr2h,c
  5505   0012AC  0E02               	movlw	2
  5506   0012AE  26D9               	addwf	fsr2l,f,c
  5507   0012B0  CFDE F010          	movff	postinc2,??_getHSVval
  5508   0012B4  CFDD F011          	movff	postdec2,??_getHSVval+1
  5509   0012B8  500F               	movf	getHSVval@p2^0,w,c
  5510   0012BA  6ED9               	movwf	fsr2l,c
  5511   0012BC  6ADA               	clrf	fsr2h,c
  5512   0012BE  CFDE F012          	movff	postinc2,??_getHSVval+2
  5513   0012C2  CFDD F013          	movff	postdec2,??_getHSVval+3
  5514   0012C6  5010               	movf	??_getHSVval^0,w,c
  5515   0012C8  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5516   0012CA  6E14               	movwf	(??_getHSVval+4)^0,c
  5517   0012CC  5011               	movf	(??_getHSVval+1)^0,w,c
  5518   0012CE  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5519   0012D0  6E15               	movwf	(??_getHSVval+5)^0,c
  5520   0012D2  5014               	movf	(??_getHSVval+4)^0,w,c
  5521   0012D4  2630               	addwf	getHSVval@temp_621^0,f,c
  5522   0012D6  5015               	movf	(??_getHSVval+5)^0,w,c
  5523   0012D8  2231               	addwfc	(getHSVval@temp_621+1)^0,f,c
  5524   0012DA  0E00               	movlw	0
  5525   0012DC  2232               	addwfc	(getHSVval@temp_621+2)^0,f,c
  5526   0012DE  0E00               	movlw	0
  5527   0012E0  2233               	addwfc	(getHSVval@temp_621+3)^0,f,c
  5528   0012E2                     
  5529                           ;color.c: 244:                 temp *= (unsigned long)hue_scale;
  5530   0012E2  C030  F001         	movff	getHSVval@temp_621,___lmul@multiplier
  5531   0012E6  C031  F002         	movff	getHSVval@temp_621+1,___lmul@multiplier+1
  5532   0012EA  C032  F003         	movff	getHSVval@temp_621+2,___lmul@multiplier+2
  5533   0012EE  C033  F004         	movff	getHSVval@temp_621+3,___lmul@multiplier+3
  5534   0012F2  0E3C               	movlw	60
  5535   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  5536   0012F6  0E00               	movlw	0
  5537   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5538   0012FA  0E00               	movlw	0
  5539   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5540   0012FE  0E00               	movlw	0
  5541   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5542   001302  EC68  F013         	call	___lmul	;wreg free
  5543   001306  C001  F030         	movff	?___lmul,getHSVval@temp_621
  5544   00130A  C002  F031         	movff	?___lmul+1,getHSVval@temp_621+1
  5545   00130E  C003  F032         	movff	?___lmul+2,getHSVval@temp_621+2
  5546   001312  C004  F033         	movff	?___lmul+3,getHSVval@temp_621+3
  5547   001316                     
  5548                           ;color.c: 245:                 temp /= (unsigned long)C;
  5549   001316  C030  F001         	movff	getHSVval@temp_621,___lldiv@dividend
  5550   00131A  C031  F002         	movff	getHSVval@temp_621+1,___lldiv@dividend+1
  5551   00131E  C032  F003         	movff	getHSVval@temp_621+2,___lldiv@dividend+2
  5552   001322  C033  F004         	movff	getHSVval@temp_621+3,___lldiv@dividend+3
  5553   001326  C040  F005         	movff	getHSVval@C,___lldiv@divisor
  5554   00132A  C041  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5555   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5556   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5557   001332  ECE3  F011         	call	___lldiv	;wreg free
  5558   001336  C001  F030         	movff	?___lldiv,getHSVval@temp_621
  5559   00133A  C002  F031         	movff	?___lldiv+1,getHSVval@temp_621+1
  5560   00133E  C003  F032         	movff	?___lldiv+2,getHSVval@temp_621+2
  5561   001342  C004  F033         	movff	?___lldiv+3,getHSVval@temp_621+3
  5562   001346                     
  5563                           ;color.c: 246:                 hue = (unsigned int)temp;
  5564   001346  C030  F01E         	movff	getHSVval@temp_621,getHSVval@hue
  5565   00134A  C031  F01F         	movff	getHSVval@temp_621+1,getHSVval@hue+1
  5566                           
  5567                           ;color.c: 247:             } else {
  5568   00134E  EF0E  F00A         	goto	l3758
  5569   001352                     l3746:
  5570                           
  5571                           ;color.c: 249:                 unsigned long temp;;color.c: 250:                 temp = 
      +                          (unsigned long)C;
  5572   001352  C040  F034         	movff	getHSVval@C,getHSVval@temp_622
  5573   001356  C041  F035         	movff	getHSVval@C+1,getHSVval@temp_622+1
  5574   00135A  6A36               	clrf	(getHSVval@temp_622+2)^0,c
  5575   00135C  6A37               	clrf	(getHSVval@temp_622+3)^0,c
  5576   00135E                     
  5577                           ;color.c: 251:                 temp *= 4;
  5578   00135E  0E02               	movlw	2
  5579   001360                     u2885:
  5580   001360  90D8               	bcf	status,0,c
  5581   001362  3634               	rlcf	getHSVval@temp_622^0,f,c
  5582   001364  3635               	rlcf	(getHSVval@temp_622+1)^0,f,c
  5583   001366  3636               	rlcf	(getHSVval@temp_622+2)^0,f,c
  5584   001368  3637               	rlcf	(getHSVval@temp_622+3)^0,f,c
  5585   00136A  2EE8               	decfsz	wreg,f,c
  5586   00136C  EFB0  F009         	goto	u2885
  5587   001370                     
  5588                           ;color.c: 252:                 temp -= (unsigned long)(p2->G - p2->R);
  5589   001370  500F               	movf	getHSVval@p2^0,w,c
  5590   001372  6ED9               	movwf	fsr2l,c
  5591   001374  6ADA               	clrf	fsr2h,c
  5592   001376  CFDE F010          	movff	postinc2,??_getHSVval
  5593   00137A  CFDD F011          	movff	postdec2,??_getHSVval+1
  5594   00137E  500F               	movf	getHSVval@p2^0,w,c
  5595   001380  6ED9               	movwf	fsr2l,c
  5596   001382  6ADA               	clrf	fsr2h,c
  5597   001384  0E02               	movlw	2
  5598   001386  26D9               	addwf	fsr2l,f,c
  5599   001388  CFDE F012          	movff	postinc2,??_getHSVval+2
  5600   00138C  CFDD F013          	movff	postdec2,??_getHSVval+3
  5601   001390  5010               	movf	??_getHSVval^0,w,c
  5602   001392  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5603   001394  6E14               	movwf	(??_getHSVval+4)^0,c
  5604   001396  5011               	movf	(??_getHSVval+1)^0,w,c
  5605   001398  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5606   00139A  6E15               	movwf	(??_getHSVval+5)^0,c
  5607   00139C  6A16               	clrf	(??_getHSVval+6)^0,c
  5608   00139E  6A17               	clrf	(??_getHSVval+7)^0,c
  5609   0013A0  5014               	movf	(??_getHSVval+4)^0,w,c
  5610   0013A2  5E34               	subwf	getHSVval@temp_622^0,f,c
  5611   0013A4  5015               	movf	(??_getHSVval+5)^0,w,c
  5612   0013A6  5A35               	subwfb	(getHSVval@temp_622+1)^0,f,c
  5613   0013A8  5016               	movf	(??_getHSVval+6)^0,w,c
  5614   0013AA  5A36               	subwfb	(getHSVval@temp_622+2)^0,f,c
  5615   0013AC  5017               	movf	(??_getHSVval+7)^0,w,c
  5616   0013AE  5A37               	subwfb	(getHSVval@temp_622+3)^0,f,c
  5617   0013B0                     
  5618                           ;color.c: 253:                 temp *= (unsigned long)hue_scale;
  5619   0013B0  C034  F001         	movff	getHSVval@temp_622,___lmul@multiplier
  5620   0013B4  C035  F002         	movff	getHSVval@temp_622+1,___lmul@multiplier+1
  5621   0013B8  C036  F003         	movff	getHSVval@temp_622+2,___lmul@multiplier+2
  5622   0013BC  C037  F004         	movff	getHSVval@temp_622+3,___lmul@multiplier+3
  5623   0013C0  0E3C               	movlw	60
  5624   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  5625   0013C4  0E00               	movlw	0
  5626   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5627   0013C8  0E00               	movlw	0
  5628   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5629   0013CC  0E00               	movlw	0
  5630   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5631   0013D0  EC68  F013         	call	___lmul	;wreg free
  5632   0013D4  C001  F034         	movff	?___lmul,getHSVval@temp_622
  5633   0013D8  C002  F035         	movff	?___lmul+1,getHSVval@temp_622+1
  5634   0013DC  C003  F036         	movff	?___lmul+2,getHSVval@temp_622+2
  5635   0013E0  C004  F037         	movff	?___lmul+3,getHSVval@temp_622+3
  5636   0013E4                     
  5637                           ;color.c: 254:                 temp /= (unsigned long)C;
  5638   0013E4  C034  F001         	movff	getHSVval@temp_622,___lldiv@dividend
  5639   0013E8  C035  F002         	movff	getHSVval@temp_622+1,___lldiv@dividend+1
  5640   0013EC  C036  F003         	movff	getHSVval@temp_622+2,___lldiv@dividend+2
  5641   0013F0  C037  F004         	movff	getHSVval@temp_622+3,___lldiv@dividend+3
  5642   0013F4  C040  F005         	movff	getHSVval@C,___lldiv@divisor
  5643   0013F8  C041  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5644   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5645   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5646   001400  ECE3  F011         	call	___lldiv	;wreg free
  5647   001404  C001  F034         	movff	?___lldiv,getHSVval@temp_622
  5648   001408  C002  F035         	movff	?___lldiv+1,getHSVval@temp_622+1
  5649   00140C  C003  F036         	movff	?___lldiv+2,getHSVval@temp_622+2
  5650   001410  C004  F037         	movff	?___lldiv+3,getHSVval@temp_622+3
  5651   001414                     
  5652                           ;color.c: 255:                 hue = (unsigned int)temp;
  5653   001414  C034  F01E         	movff	getHSVval@temp_622,getHSVval@hue
  5654   001418  C035  F01F         	movff	getHSVval@temp_622+1,getHSVval@hue+1
  5655   00141C                     l3758:
  5656                           
  5657                           ;color.c: 260:     if (M == 0) {
  5658   00141C  503E               	movf	getHSVval@M^0,w,c
  5659   00141E  103F               	iorwf	(getHSVval@M+1)^0,w,c
  5660   001420  A4D8               	btfss	status,2,c
  5661   001422  EF15  F00A         	goto	u2891
  5662   001426  EF17  F00A         	goto	u2890
  5663   00142A                     u2891:
  5664   00142A  EF1D  F00A         	goto	l3762
  5665   00142E                     u2890:
  5666   00142E                     
  5667                           ;color.c: 261:         sat = 0;
  5668   00142E  0E00               	movlw	0
  5669   001430  6E1D               	movwf	(getHSVval@sat+1)^0,c
  5670   001432  0E00               	movlw	0
  5671   001434  6E1C               	movwf	getHSVval@sat^0,c
  5672                           
  5673                           ;color.c: 262:     } else {
  5674   001436  EF59  F00A         	goto	l3770
  5675   00143A                     l3762:
  5676                           
  5677                           ;color.c: 264:         unsigned long temp;;color.c: 265:         temp = (unsigned long)C
      +                          ;
  5678   00143A  C040  F020         	movff	getHSVval@C,getHSVval@temp_623
  5679   00143E  C041  F021         	movff	getHSVval@C+1,getHSVval@temp_623+1
  5680   001442  6A22               	clrf	(getHSVval@temp_623+2)^0,c
  5681   001444  6A23               	clrf	(getHSVval@temp_623+3)^0,c
  5682   001446                     
  5683                           ;color.c: 266:         temp *= (unsigned long)sat_scale;
  5684   001446  C020  F001         	movff	getHSVval@temp_623,___lmul@multiplier
  5685   00144A  C021  F002         	movff	getHSVval@temp_623+1,___lmul@multiplier+1
  5686   00144E  C022  F003         	movff	getHSVval@temp_623+2,___lmul@multiplier+2
  5687   001452  C023  F004         	movff	getHSVval@temp_623+3,___lmul@multiplier+3
  5688   001456  0E64               	movlw	100
  5689   001458  6E05               	movwf	___lmul@multiplicand^0,c
  5690   00145A  0E00               	movlw	0
  5691   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5692   00145E  0E00               	movlw	0
  5693   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5694   001462  0E00               	movlw	0
  5695   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5696   001466  EC68  F013         	call	___lmul	;wreg free
  5697   00146A  C001  F020         	movff	?___lmul,getHSVval@temp_623
  5698   00146E  C002  F021         	movff	?___lmul+1,getHSVval@temp_623+1
  5699   001472  C003  F022         	movff	?___lmul+2,getHSVval@temp_623+2
  5700   001476  C004  F023         	movff	?___lmul+3,getHSVval@temp_623+3
  5701   00147A                     
  5702                           ;color.c: 267:         temp /= (unsigned long)M;
  5703   00147A  C020  F001         	movff	getHSVval@temp_623,___lldiv@dividend
  5704   00147E  C021  F002         	movff	getHSVval@temp_623+1,___lldiv@dividend+1
  5705   001482  C022  F003         	movff	getHSVval@temp_623+2,___lldiv@dividend+2
  5706   001486  C023  F004         	movff	getHSVval@temp_623+3,___lldiv@dividend+3
  5707   00148A  C03E  F005         	movff	getHSVval@M,___lldiv@divisor
  5708   00148E  C03F  F006         	movff	getHSVval@M+1,___lldiv@divisor+1
  5709   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5710   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5711   001496  ECE3  F011         	call	___lldiv	;wreg free
  5712   00149A  C001  F020         	movff	?___lldiv,getHSVval@temp_623
  5713   00149E  C002  F021         	movff	?___lldiv+1,getHSVval@temp_623+1
  5714   0014A2  C003  F022         	movff	?___lldiv+2,getHSVval@temp_623+2
  5715   0014A6  C004  F023         	movff	?___lldiv+3,getHSVval@temp_623+3
  5716   0014AA                     
  5717                           ;color.c: 268:         sat = (unsigned int)temp;
  5718   0014AA  C020  F01C         	movff	getHSVval@temp_623,getHSVval@sat
  5719   0014AE  C021  F01D         	movff	getHSVval@temp_623+1,getHSVval@sat+1
  5720   0014B2                     l3770:
  5721                           
  5722                           ;color.c: 271:     p1->H = hue;
  5723   0014B2  500E               	movf	getHSVval@p1^0,w,c
  5724   0014B4  6ED9               	movwf	fsr2l,c
  5725   0014B6  6ADA               	clrf	fsr2h,c
  5726   0014B8  C01E  FFDE         	movff	getHSVval@hue,postinc2
  5727   0014BC  C01F  FFDD         	movff	getHSVval@hue+1,postdec2
  5728   0014C0                     
  5729                           ;color.c: 272:     p1->S = sat;
  5730   0014C0  500E               	movf	getHSVval@p1^0,w,c
  5731   0014C2  6ED9               	movwf	fsr2l,c
  5732   0014C4  6ADA               	clrf	fsr2h,c
  5733   0014C6  0E02               	movlw	2
  5734   0014C8  26D9               	addwf	fsr2l,f,c
  5735   0014CA  C01C  FFDE         	movff	getHSVval@sat,postinc2
  5736   0014CE  C01D  FFDD         	movff	getHSVval@sat+1,postdec2
  5737   0014D2                     
  5738                           ;color.c: 273:     p1->V = M;
  5739   0014D2  500E               	movf	getHSVval@p1^0,w,c
  5740   0014D4  6ED9               	movwf	fsr2l,c
  5741   0014D6  6ADA               	clrf	fsr2h,c
  5742   0014D8  0E04               	movlw	4
  5743   0014DA  26D9               	addwf	fsr2l,f,c
  5744   0014DC  C03E  FFDE         	movff	getHSVval@M,postinc2
  5745   0014E0  C03F  FFDD         	movff	getHSVval@M+1,postdec2
  5746   0014E4  0012               	return		;funcret
  5747   0014E6                     __end_of_getHSVval:
  5748                           	callstack 0
  5749                           
  5750 ;; *************** function _minRGB *****************
  5751 ;; Defined at:
  5752 ;;		line 149 in file "color.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5755 ;;		 -> main@measured_colour(8), 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  min_val         2    4[COMRAM] unsigned int 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  2    0[COMRAM] unsigned int 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;Total ram usage:        6 bytes
  5772 ;; Hardware stack levels used: 1
  5773 ;; Hardware stack levels required when called: 1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_getHSVval
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text30
  5782   0024FA                     __ptext30:
  5783                           	callstack 0
  5784   0024FA                     _minRGB:
  5785                           	callstack 28
  5786   0024FA                     
  5787                           ;color.c: 149: unsigned int minRGB(struct RGBC_val *p);color.c: 150: {;color.c: 151:    
      +                           unsigned int min_val = p->R;
  5788   0024FA  5001               	movf	minRGB@p^0,w,c
  5789   0024FC  6ED9               	movwf	fsr2l,c
  5790   0024FE  6ADA               	clrf	fsr2h,c
  5791   002500  CFDE F005          	movff	postinc2,minRGB@min_val
  5792   002504  CFDD F006          	movff	postdec2,minRGB@min_val+1
  5793   002508                     
  5794                           ;color.c: 152:     if (p->G < min_val) {min_val = p->G;}
  5795   002508  5001               	movf	minRGB@p^0,w,c
  5796   00250A  6ED9               	movwf	fsr2l,c
  5797   00250C  6ADA               	clrf	fsr2h,c
  5798   00250E  0E02               	movlw	2
  5799   002510  26D9               	addwf	fsr2l,f,c
  5800   002512  5005               	movf	minRGB@min_val^0,w,c
  5801   002514  5CDE               	subwf	postinc2,w,c
  5802   002516  5006               	movf	(minRGB@min_val+1)^0,w,c
  5803   002518  58DE               	subwfb	postinc2,w,c
  5804   00251A  B0D8               	btfsc	status,0,c
  5805   00251C  EF92  F012         	goto	u2191
  5806   002520  EF94  F012         	goto	u2190
  5807   002524                     u2191:
  5808   002524  EF9D  F012         	goto	l98
  5809   002528                     u2190:
  5810   002528  5001               	movf	minRGB@p^0,w,c
  5811   00252A  6ED9               	movwf	fsr2l,c
  5812   00252C  6ADA               	clrf	fsr2h,c
  5813   00252E  0E02               	movlw	2
  5814   002530  26D9               	addwf	fsr2l,f,c
  5815   002532  CFDE F005          	movff	postinc2,minRGB@min_val
  5816   002536  CFDD F006          	movff	postdec2,minRGB@min_val+1
  5817   00253A                     l98:
  5818                           
  5819                           ;color.c: 153:     if (p->B < min_val) {min_val = p->B;}
  5820   00253A  5001               	movf	minRGB@p^0,w,c
  5821   00253C  6ED9               	movwf	fsr2l,c
  5822   00253E  6ADA               	clrf	fsr2h,c
  5823   002540  0E04               	movlw	4
  5824   002542  26D9               	addwf	fsr2l,f,c
  5825   002544  5005               	movf	minRGB@min_val^0,w,c
  5826   002546  5CDE               	subwf	postinc2,w,c
  5827   002548  5006               	movf	(minRGB@min_val+1)^0,w,c
  5828   00254A  58DE               	subwfb	postinc2,w,c
  5829   00254C  B0D8               	btfsc	status,0,c
  5830   00254E  EFAB  F012         	goto	u2201
  5831   002552  EFAD  F012         	goto	u2200
  5832   002556                     u2201:
  5833   002556  EFB6  F012         	goto	l3256
  5834   00255A                     u2200:
  5835   00255A  5001               	movf	minRGB@p^0,w,c
  5836   00255C  6ED9               	movwf	fsr2l,c
  5837   00255E  6ADA               	clrf	fsr2h,c
  5838   002560  0E04               	movlw	4
  5839   002562  26D9               	addwf	fsr2l,f,c
  5840   002564  CFDE F005          	movff	postinc2,minRGB@min_val
  5841   002568  CFDD F006          	movff	postdec2,minRGB@min_val+1
  5842   00256C                     l3256:
  5843                           
  5844                           ;color.c: 154:     return min_val;
  5845   00256C  C005  F001         	movff	minRGB@min_val,?_minRGB
  5846   002570  C006  F002         	movff	minRGB@min_val+1,?_minRGB+1
  5847   002574  0012               	return		;funcret
  5848   002576                     __end_of_minRGB:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _maxRGB *****************
  5852 ;; Defined at:
  5853 ;;		line 138 in file "color.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5856 ;;		 -> main@measured_colour(8), 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  max_val         2    4[COMRAM] unsigned int 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    0[COMRAM] unsigned int 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;Total ram usage:        6 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 1
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_getHSVval
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text31
  5883   002576                     __ptext31:
  5884                           	callstack 0
  5885   002576                     _maxRGB:
  5886                           	callstack 28
  5887   002576                     
  5888                           ;color.c: 138: unsigned int maxRGB(struct RGBC_val *p);color.c: 139: {;color.c: 140:    
      +                           unsigned int max_val = p->R;
  5889   002576  5001               	movf	maxRGB@p^0,w,c
  5890   002578  6ED9               	movwf	fsr2l,c
  5891   00257A  6ADA               	clrf	fsr2h,c
  5892   00257C  CFDE F005          	movff	postinc2,maxRGB@max_val
  5893   002580  CFDD F006          	movff	postdec2,maxRGB@max_val+1
  5894   002584                     
  5895                           ;color.c: 141:     if (p->G > max_val) {max_val = p->G;}
  5896   002584  5001               	movf	maxRGB@p^0,w,c
  5897   002586  6ED9               	movwf	fsr2l,c
  5898   002588  6ADA               	clrf	fsr2h,c
  5899   00258A  0E02               	movlw	2
  5900   00258C  26D9               	addwf	fsr2l,f,c
  5901   00258E  50DE               	movf	postinc2,w,c
  5902   002590  5C05               	subwf	maxRGB@max_val^0,w,c
  5903   002592  50DE               	movf	postinc2,w,c
  5904   002594  5806               	subwfb	(maxRGB@max_val+1)^0,w,c
  5905   002596  B0D8               	btfsc	status,0,c
  5906   002598  EFD0  F012         	goto	u2171
  5907   00259C  EFD2  F012         	goto	u2170
  5908   0025A0                     u2171:
  5909   0025A0  EFDB  F012         	goto	l93
  5910   0025A4                     u2170:
  5911   0025A4  5001               	movf	maxRGB@p^0,w,c
  5912   0025A6  6ED9               	movwf	fsr2l,c
  5913   0025A8  6ADA               	clrf	fsr2h,c
  5914   0025AA  0E02               	movlw	2
  5915   0025AC  26D9               	addwf	fsr2l,f,c
  5916   0025AE  CFDE F005          	movff	postinc2,maxRGB@max_val
  5917   0025B2  CFDD F006          	movff	postdec2,maxRGB@max_val+1
  5918   0025B6                     l93:
  5919                           
  5920                           ;color.c: 142:     if (p->B > max_val) {max_val = p->B;}
  5921   0025B6  5001               	movf	maxRGB@p^0,w,c
  5922   0025B8  6ED9               	movwf	fsr2l,c
  5923   0025BA  6ADA               	clrf	fsr2h,c
  5924   0025BC  0E04               	movlw	4
  5925   0025BE  26D9               	addwf	fsr2l,f,c
  5926   0025C0  50DE               	movf	postinc2,w,c
  5927   0025C2  5C05               	subwf	maxRGB@max_val^0,w,c
  5928   0025C4  50DE               	movf	postinc2,w,c
  5929   0025C6  5806               	subwfb	(maxRGB@max_val+1)^0,w,c
  5930   0025C8  B0D8               	btfsc	status,0,c
  5931   0025CA  EFE9  F012         	goto	u2181
  5932   0025CE  EFEB  F012         	goto	u2180
  5933   0025D2                     u2181:
  5934   0025D2  EFF4  F012         	goto	l3244
  5935   0025D6                     u2180:
  5936   0025D6  5001               	movf	maxRGB@p^0,w,c
  5937   0025D8  6ED9               	movwf	fsr2l,c
  5938   0025DA  6ADA               	clrf	fsr2h,c
  5939   0025DC  0E04               	movlw	4
  5940   0025DE  26D9               	addwf	fsr2l,f,c
  5941   0025E0  CFDE F005          	movff	postinc2,maxRGB@max_val
  5942   0025E4  CFDD F006          	movff	postdec2,maxRGB@max_val+1
  5943   0025E8                     l3244:
  5944                           
  5945                           ;color.c: 143:     return max_val;
  5946   0025E8  C005  F001         	movff	maxRGB@max_val,?_maxRGB
  5947   0025EC  C006  F002         	movff	maxRGB@max_val+1,?_maxRGB+1
  5948   0025F0  0012               	return		;funcret
  5949   0025F2                     __end_of_maxRGB:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function ___lmul *****************
  5953 ;; Defined at:
  5954 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  multiplier      4    0[COMRAM] unsigned long 
  5957 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  product         4    8[COMRAM] unsigned long 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  4    0[COMRAM] unsigned long 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5969 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5970 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;Total ram usage:       12 bytes
  5974 ;; Hardware stack levels used: 1
  5975 ;; Hardware stack levels required when called: 1
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_getHSVval
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text32
  5984   0026D0                     __ptext32:
  5985                           	callstack 0
  5986   0026D0                     ___lmul:
  5987                           	callstack 28
  5988   0026D0  0E00               	movlw	0
  5989   0026D2  6E09               	movwf	___lmul@product^0,c
  5990   0026D4  0E00               	movlw	0
  5991   0026D6  6E0A               	movwf	(___lmul@product+1)^0,c
  5992   0026D8  0E00               	movlw	0
  5993   0026DA  6E0B               	movwf	(___lmul@product+2)^0,c
  5994   0026DC  0E00               	movlw	0
  5995   0026DE  6E0C               	movwf	(___lmul@product+3)^0,c
  5996   0026E0                     l3386:
  5997   0026E0  A001               	btfss	___lmul@multiplier^0,0,c
  5998   0026E2  EF75  F013         	goto	u2241
  5999   0026E6  EF77  F013         	goto	u2240
  6000   0026EA                     u2241:
  6001   0026EA  EF7F  F013         	goto	l3390
  6002   0026EE                     u2240:
  6003   0026EE  5005               	movf	___lmul@multiplicand^0,w,c
  6004   0026F0  2609               	addwf	___lmul@product^0,f,c
  6005   0026F2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6006   0026F4  220A               	addwfc	(___lmul@product+1)^0,f,c
  6007   0026F6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6008   0026F8  220B               	addwfc	(___lmul@product+2)^0,f,c
  6009   0026FA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6010   0026FC  220C               	addwfc	(___lmul@product+3)^0,f,c
  6011   0026FE                     l3390:
  6012   0026FE  90D8               	bcf	status,0,c
  6013   002700  3605               	rlcf	___lmul@multiplicand^0,f,c
  6014   002702  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6015   002704  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6016   002706  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6017   002708  90D8               	bcf	status,0,c
  6018   00270A  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6019   00270C  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6020   00270E  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6021   002710  3201               	rrcf	___lmul@multiplier^0,f,c
  6022   002712  5001               	movf	___lmul@multiplier^0,w,c
  6023   002714  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6024   002716  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6025   002718  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6026   00271A  A4D8               	btfss	status,2,c
  6027   00271C  EF92  F013         	goto	u2251
  6028   002720  EF94  F013         	goto	u2250
  6029   002724                     u2251:
  6030   002724  EF70  F013         	goto	l3386
  6031   002728                     u2250:
  6032   002728  C009  F001         	movff	___lmul@product,?___lmul
  6033   00272C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6034   002730  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6035   002734  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6036   002738  0012               	return		;funcret
  6037   00273A                     __end_of___lmul:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function ___lldiv *****************
  6041 ;; Defined at:
  6042 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  dividend        4    0[COMRAM] unsigned long 
  6045 ;;  divisor         4    4[COMRAM] unsigned long 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  quotient        4    8[COMRAM] unsigned long 
  6048 ;;  counter         1   12[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  4    0[COMRAM] unsigned long 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6058 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;Total ram usage:       13 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_getHSVval
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text33
  6073   0023C6                     __ptext33:
  6074                           	callstack 0
  6075   0023C6                     ___lldiv:
  6076                           	callstack 28
  6077   0023C6  0E00               	movlw	0
  6078   0023C8  6E09               	movwf	___lldiv@quotient^0,c
  6079   0023CA  0E00               	movlw	0
  6080   0023CC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6081   0023CE  0E00               	movlw	0
  6082   0023D0  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6083   0023D2  0E00               	movlw	0
  6084   0023D4  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6085   0023D6  5005               	movf	___lldiv@divisor^0,w,c
  6086   0023D8  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6087   0023DA  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6088   0023DC  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6089   0023DE  B4D8               	btfsc	status,2,c
  6090   0023E0  EFF4  F011         	goto	u2261
  6091   0023E4  EFF6  F011         	goto	u2260
  6092   0023E8                     u2261:
  6093   0023E8  EF2C  F012         	goto	l732
  6094   0023EC                     u2260:
  6095   0023EC  0E01               	movlw	1
  6096   0023EE  6E0D               	movwf	___lldiv@counter^0,c
  6097   0023F0  EF00  F012         	goto	l3402
  6098   0023F4                     l3400:
  6099   0023F4  90D8               	bcf	status,0,c
  6100   0023F6  3605               	rlcf	___lldiv@divisor^0,f,c
  6101   0023F8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6102   0023FA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6103   0023FC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6104   0023FE  2A0D               	incf	___lldiv@counter^0,f,c
  6105   002400                     l3402:
  6106   002400  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6107   002402  EF05  F012         	goto	u2271
  6108   002406  EF07  F012         	goto	u2270
  6109   00240A                     u2271:
  6110   00240A  EFFA  F011         	goto	l3400
  6111   00240E                     u2270:
  6112   00240E                     l3404:
  6113   00240E  90D8               	bcf	status,0,c
  6114   002410  3609               	rlcf	___lldiv@quotient^0,f,c
  6115   002412  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6116   002414  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6117   002416  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6118   002418  5005               	movf	___lldiv@divisor^0,w,c
  6119   00241A  5C01               	subwf	___lldiv@dividend^0,w,c
  6120   00241C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6121   00241E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6122   002420  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6123   002422  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6124   002424  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6125   002426  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6126   002428  A0D8               	btfss	status,0,c
  6127   00242A  EF19  F012         	goto	u2281
  6128   00242E  EF1B  F012         	goto	u2280
  6129   002432                     u2281:
  6130   002432  EF24  F012         	goto	l3412
  6131   002436                     u2280:
  6132   002436  5005               	movf	___lldiv@divisor^0,w,c
  6133   002438  5E01               	subwf	___lldiv@dividend^0,f,c
  6134   00243A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6135   00243C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6136   00243E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6137   002440  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6138   002442  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6139   002444  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6140   002446  8009               	bsf	___lldiv@quotient^0,0,c
  6141   002448                     l3412:
  6142   002448  90D8               	bcf	status,0,c
  6143   00244A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6144   00244C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6145   00244E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6146   002450  3205               	rrcf	___lldiv@divisor^0,f,c
  6147   002452  2E0D               	decfsz	___lldiv@counter^0,f,c
  6148   002454  EF07  F012         	goto	l3404
  6149   002458                     l732:
  6150   002458  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6151   00245C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6152   002460  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6153   002464  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6154   002468  0012               	return		;funcret
  6155   00246A                     __end_of___lldiv:
  6156                           	callstack 0
  6157                           
  6158 ;; *************** function _color_click_init *****************
  6159 ;; Defined at:
  6160 ;;		line 7 in file "color.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;Total ram usage:        1 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 4
  6181 ;; This function calls:
  6182 ;;		_I2C_2_Master_Init
  6183 ;;		_color_writetoaddr
  6184 ;; This function is called by:
  6185 ;;		_main
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text34
  6190   002B58                     __ptext34:
  6191                           	callstack 0
  6192   002B58                     _color_click_init:
  6193                           	callstack 26
  6194   002B58                     
  6195                           ;color.c: 10:     I2C_2_Master_Init();
  6196   002B58  ECDD  F015         	call	_I2C_2_Master_Init	;wreg free
  6197   002B5C                     
  6198                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  6199   002B5C  0E01               	movlw	1
  6200   002B5E  6E03               	movwf	color_writetoaddr@value^0,c
  6201   002B60  0E00               	movlw	0
  6202   002B62  EC18  F016         	call	_color_writetoaddr
  6203   002B66                     
  6204                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6205   002B66  0E3F               	movlw	63
  6206   002B68  6E05               	movwf	??_color_click_init^0,c
  6207   002B6A  0E55               	movlw	85
  6208   002B6C                     u3057:
  6209   002B6C  2EE8               	decfsz	wreg,f,c
  6210   002B6E  D7FE               	bra	u3057
  6211   002B70  2E05               	decfsz	??_color_click_init^0,f,c
  6212   002B72  D7FC               	bra	u3057
  6213   002B74  0000               	nop	
  6214   002B76                     
  6215                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  6216   002B76  0E03               	movlw	3
  6217   002B78  6E03               	movwf	color_writetoaddr@value^0,c
  6218   002B7A  0E00               	movlw	0
  6219   002B7C  EC18  F016         	call	_color_writetoaddr
  6220   002B80                     
  6221                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  6222   002B80  0ED5               	movlw	213
  6223   002B82  6E03               	movwf	color_writetoaddr@value^0,c
  6224   002B84  0E01               	movlw	1
  6225   002B86  EC18  F016         	call	_color_writetoaddr
  6226   002B8A  0012               	return		;funcret
  6227   002B8C                     __end_of_color_click_init:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _color_writetoaddr *****************
  6231 ;; Defined at:
  6232 ;;		line 28 in file "color.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  address         1    wreg     unsigned char 
  6235 ;;  value           1    2[COMRAM] unsigned char 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  address         1    3[COMRAM] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0, cstack
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;Total ram usage:        2 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 3
  6254 ;; This function calls:
  6255 ;;		_I2C_2_Master_Start
  6256 ;;		_I2C_2_Master_Stop
  6257 ;;		_I2C_2_Master_Write
  6258 ;; This function is called by:
  6259 ;;		_color_click_init
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text35
  6264   002C30                     __ptext35:
  6265                           	callstack 0
  6266   002C30                     _color_writetoaddr:
  6267                           	callstack 26
  6268                           
  6269                           ;incstack = 0
  6270                           ;color_writetoaddr@address stored from wreg
  6271   002C30  6E04               	movwf	color_writetoaddr@address^0,c
  6272   002C32                     
  6273                           ;color.c: 29:     I2C_2_Master_Start();
  6274   002C32  EC69  F016         	call	_I2C_2_Master_Start	;wreg free
  6275                           
  6276                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  6277   002C36  0E52               	movlw	82
  6278   002C38  EC4D  F016         	call	_I2C_2_Master_Write
  6279                           
  6280                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  6281   002C3C  5004               	movf	color_writetoaddr@address^0,w,c
  6282   002C3E  0980               	iorlw	128
  6283   002C40  EC4D  F016         	call	_I2C_2_Master_Write
  6284                           
  6285                           ;color.c: 32:     I2C_2_Master_Write(value);
  6286   002C44  5003               	movf	color_writetoaddr@value^0,w,c
  6287   002C46  EC4D  F016         	call	_I2C_2_Master_Write
  6288                           
  6289                           ;color.c: 33:     I2C_2_Master_Stop();
  6290   002C4A  EC64  F016         	call	_I2C_2_Master_Stop	;wreg free
  6291   002C4E  0012               	return		;funcret
  6292   002C50                     __end_of_color_writetoaddr:
  6293                           	callstack 0
  6294                           
  6295 ;; *************** function _I2C_2_Master_Write *****************
  6296 ;; Defined at:
  6297 ;;		line 45 in file "i2c.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  data_byte       1    wreg     unsigned char 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  data_byte       1    1[COMRAM] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;Total ram usage:        1 bytes
  6316 ;; Hardware stack levels used: 1
  6317 ;; Hardware stack levels required when called: 2
  6318 ;; This function calls:
  6319 ;;		_I2C_2_Master_Idle
  6320 ;; This function is called by:
  6321 ;;		_color_writetoaddr
  6322 ;;		_color_read_Red
  6323 ;;		_color_read_Green
  6324 ;;		_color_read_Blue
  6325 ;;		_color_read_Clear
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text36
  6330   002C9A                     __ptext36:
  6331                           	callstack 0
  6332   002C9A                     _I2C_2_Master_Write:
  6333                           	callstack 26
  6334                           
  6335                           ;incstack = 0
  6336                           ;I2C_2_Master_Write@data_byte stored from wreg
  6337   002C9A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6338   002C9C                     
  6339                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6340   002C9C  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  6341   002CA0                     
  6342                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6343   002CA0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6344   002CA4  0012               	return		;funcret
  6345   002CA6                     __end_of_I2C_2_Master_Write:
  6346                           	callstack 0
  6347                           
  6348 ;; *************** function _I2C_2_Master_Stop *****************
  6349 ;; Defined at:
  6350 ;;		line 39 in file "i2c.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; Hardware stack levels required when called: 2
  6371 ;; This function calls:
  6372 ;;		_I2C_2_Master_Idle
  6373 ;; This function is called by:
  6374 ;;		_color_writetoaddr
  6375 ;;		_color_read_Red
  6376 ;;		_color_read_Green
  6377 ;;		_color_read_Blue
  6378 ;;		_color_read_Clear
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text37
  6383   002CC8                     __ptext37:
  6384                           	callstack 0
  6385   002CC8                     _I2C_2_Master_Stop:
  6386                           	callstack 26
  6387   002CC8                     
  6388                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6389   002CC8  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  6390   002CCC                     
  6391                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6392   002CCC  010E               	movlb	14	; () banked
  6393   002CCE  85DA               	bsf	218,2,b	;volatile
  6394   002CD0                     
  6395                           ; BSR set to: 14
  6396   002CD0  0012               	return		;funcret
  6397   002CD2                     __end_of_I2C_2_Master_Stop:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _I2C_2_Master_Start *****************
  6401 ;; Defined at:
  6402 ;;		line 27 in file "i2c.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 2
  6423 ;; This function calls:
  6424 ;;		_I2C_2_Master_Idle
  6425 ;; This function is called by:
  6426 ;;		_color_writetoaddr
  6427 ;;		_color_read_Red
  6428 ;;		_color_read_Green
  6429 ;;		_color_read_Blue
  6430 ;;		_color_read_Clear
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text38
  6435   002CD2                     __ptext38:
  6436                           	callstack 0
  6437   002CD2                     _I2C_2_Master_Start:
  6438                           	callstack 26
  6439   002CD2                     
  6440                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6441   002CD2  ECF2  F015         	call	_I2C_2_Master_Idle	;wreg free
  6442   002CD6                     
  6443                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6444   002CD6  010E               	movlb	14	; () banked
  6445   002CD8  81DA               	bsf	218,0,b	;volatile
  6446   002CDA                     
  6447                           ; BSR set to: 14
  6448   002CDA  0012               	return		;funcret
  6449   002CDC                     __end_of_I2C_2_Master_Start:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _I2C_2_Master_Idle *****************
  6453 ;; Defined at:
  6454 ;;		line 22 in file "i2c.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;Total ram usage:        1 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 1
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_I2C_2_Master_Start
  6479 ;;		_I2C_2_Master_RepStart
  6480 ;;		_I2C_2_Master_Stop
  6481 ;;		_I2C_2_Master_Write
  6482 ;;		_I2C_2_Master_Read
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text39
  6487   002BE4                     __ptext39:
  6488                           	callstack 0
  6489   002BE4                     _I2C_2_Master_Idle:
  6490                           	callstack 26
  6491   002BE4                     l290:
  6492   002BE4  010E               	movlb	14	; () banked
  6493   002BE6  B5D8               	btfsc	216,2,b	;volatile
  6494   002BE8  EFF8  F015         	goto	u1971
  6495   002BEC  EFFA  F015         	goto	u1970
  6496   002BF0                     u1971:
  6497   002BF0  EFF2  F015         	goto	l290
  6498   002BF4                     u1970:
  6499   002BF4                     
  6500                           ; BSR set to: 14
  6501   002BF4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6502   002BF8  0E1F               	movlw	31
  6503   002BFA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6504   002BFC  A4D8               	btfss	status,2,c
  6505   002BFE  EF03  F016         	goto	u1981
  6506   002C02  EF05  F016         	goto	u1980
  6507   002C06                     u1981:
  6508   002C06  EFF2  F015         	goto	l290
  6509   002C0A                     u1980:
  6510   002C0A                     
  6511                           ; BSR set to: 14
  6512   002C0A  0012               	return		;funcret
  6513   002C0C                     __end_of_I2C_2_Master_Idle:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function _I2C_2_Master_Init *****************
  6517 ;; Defined at:
  6518 ;;		line 4 in file "i2c.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_color_click_init
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text40
  6547   002BBA                     __ptext40:
  6548                           	callstack 0
  6549   002BBA                     _I2C_2_Master_Init:
  6550                           	callstack 28
  6551   002BBA                     
  6552                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6553   002BBA  010E               	movlb	14	; () banked
  6554   002BBC  51D9               	movf	217,w,b	;volatile
  6555   002BBE  0BF0               	andlw	-16
  6556   002BC0  0908               	iorlw	8
  6557   002BC2  6FD9               	movwf	217,b	;volatile
  6558   002BC4                     
  6559                           ; BSR set to: 14
  6560                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6561   002BC4  8BD9               	bsf	217,5,b	;volatile
  6562                           
  6563                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6564   002BC6  0E9F               	movlw	159
  6565   002BC8  6FD6               	movwf	214,b	;volatile
  6566   002BCA                     
  6567                           ; BSR set to: 14
  6568                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6569   002BCA  8A84               	bsf	132,5,c	;volatile
  6570   002BCC                     
  6571                           ; BSR set to: 14
  6572                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6573   002BCC  8C84               	bsf	132,6,c	;volatile
  6574   002BCE                     
  6575                           ; BSR set to: 14
  6576                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6577   002BCE  9BA7               	bcf	167,5,b	;volatile
  6578   002BD0                     
  6579                           ; BSR set to: 14
  6580                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6581   002BD0  9DA7               	bcf	167,6,b	;volatile
  6582                           
  6583                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6584   002BD2  0E1D               	movlw	29
  6585   002BD4  6F1D               	movwf	29,b	;volatile
  6586                           
  6587                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6588   002BD6  0E1E               	movlw	30
  6589   002BD8  6F1C               	movwf	28,b	;volatile
  6590                           
  6591                           ;i2c.c: 18:   RD5PPS=0x1C;
  6592   002BDA  0E1C               	movlw	28
  6593   002BDC  6F6F               	movwf	111,b	;volatile
  6594                           
  6595                           ;i2c.c: 19:   RD6PPS=0x1B;
  6596   002BDE  0E1B               	movlw	27
  6597   002BE0  6F70               	movwf	112,b	;volatile
  6598   002BE2                     
  6599                           ; BSR set to: 14
  6600   002BE2  0012               	return		;funcret
  6601   002BE4                     __end_of_I2C_2_Master_Init:
  6602                           	callstack 0
  6603                           
  6604 ;; *************** function _buggy_lights_init *****************
  6605 ;; Defined at:
  6606 ;;		line 7 in file "buggy_lights.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		None
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; Hardware stack levels required when called: 1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text41
  6635   002B8C                     __ptext41:
  6636                           	callstack 0
  6637   002B8C                     _buggy_lights_init:
  6638                           	callstack 29
  6639   002B8C                     
  6640                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  6641   002B8C  9884               	bcf	132,4,c	;volatile
  6642                           
  6643                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  6644   002B8E  9288               	bcf	136,1,c	;volatile
  6645                           
  6646                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  6647   002B90  9684               	bcf	132,3,c	;volatile
  6648                           
  6649                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  6650   002B92  9086               	bcf	134,0,c	;volatile
  6651                           
  6652                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  6653   002B94  9088               	bcf	136,0,c	;volatile
  6654                           
  6655                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  6656   002B96  987C               	bcf	124,4,c	;volatile
  6657                           
  6658                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  6659   002B98  9280               	bcf	128,1,c	;volatile
  6660                           
  6661                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  6662   002B9A  967C               	bcf	124,3,c	;volatile
  6663                           
  6664                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  6665   002B9C  907E               	bcf	126,0,c	;volatile
  6666                           
  6667                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  6668   002B9E  9080               	bcf	128,0,c	;volatile
  6669                           
  6670                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  6671   002BA0  9287               	bcf	135,1,c	;volatile
  6672                           
  6673                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  6674   002BA2  9881               	bcf	129,4,c	;volatile
  6675                           
  6676                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  6677   002BA4  9E86               	bcf	134,7,c	;volatile
  6678                           
  6679                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  6680   002BA6  927F               	bcf	127,1,c	;volatile
  6681                           
  6682                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  6683   002BA8  9879               	bcf	121,4,c	;volatile
  6684                           
  6685                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  6686   002BAA  9E7E               	bcf	126,7,c	;volatile
  6687                           
  6688                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  6689   002BAC  9087               	bcf	135,0,c	;volatile
  6690                           
  6691                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  6692   002BAE  9E85               	bcf	133,7,c	;volatile
  6693                           
  6694                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  6695   002BB0  9681               	bcf	129,3,c	;volatile
  6696                           
  6697                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  6698   002BB2  907F               	bcf	127,0,c	;volatile
  6699                           
  6700                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  6701   002BB4  9E7D               	bcf	125,7,c	;volatile
  6702                           
  6703                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  6704   002BB6  9679               	bcf	121,3,c	;volatile
  6705   002BB8  0012               	return		;funcret
  6706   002BBA                     __end_of_buggy_lights_init:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _Timer0_init *****************
  6710 ;; Defined at:
  6711 ;;		line 7 in file "timers.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used: 1
  6731 ;; Hardware stack levels required when called: 3
  6732 ;; This function calls:
  6733 ;;		_reset_timer
  6734 ;; This function is called by:
  6735 ;;		_main
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text42
  6740   002C0C                     __ptext42:
  6741                           	callstack 0
  6742   002C0C                     _Timer0_init:
  6743                           	callstack 27
  6744   002C0C                     
  6745                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  6746   002C0C  50D6               	movf	214,w,c	;volatile
  6747   002C0E  0B1F               	andlw	-225
  6748   002C10  0940               	iorlw	64
  6749   002C12  6ED6               	movwf	214,c	;volatile
  6750   002C14                     
  6751                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  6752   002C14  88D6               	bsf	214,4,c	;volatile
  6753   002C16                     
  6754                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  6755   002C16  88D5               	bsf	213,4,c	;volatile
  6756                           
  6757                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  6758   002C18  50D6               	movf	214,w,c	;volatile
  6759   002C1A  0BF0               	andlw	-16
  6760   002C1C  090E               	iorlw	14
  6761   002C1E  6ED6               	movwf	214,c	;volatile
  6762   002C20                     
  6763                           ;timers.c: 18:     reset_timer();
  6764   002C20  EC53  F016         	call	_reset_timer	;wreg free
  6765   002C24                     
  6766                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  6767   002C24  8ED5               	bsf	213,7,c	;volatile
  6768   002C26                     
  6769                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  6770   002C26  010E               	movlb	14	; () banked
  6771   002C28  8B29               	bsf	41,5,b	;volatile
  6772   002C2A                     
  6773                           ; BSR set to: 14
  6774                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  6775   002C2A  8CF2               	bsf	242,6,c	;volatile
  6776   002C2C                     
  6777                           ; BSR set to: 14
  6778                           ;timers.c: 23:     INTCONbits.GIE = 1;
  6779   002C2C  8EF2               	bsf	242,7,c	;volatile
  6780   002C2E                     
  6781                           ; BSR set to: 14
  6782   002C2E  0012               	return		;funcret
  6783   002C30                     __end_of_Timer0_init:
  6784                           	callstack 0
  6785                           
  6786 ;; *************** function _reset_timer *****************
  6787 ;; Defined at:
  6788 ;;		line 53 in file "timers.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; Hardware stack levels required when called: 2
  6809 ;; This function calls:
  6810 ;;		_write_timer
  6811 ;; This function is called by:
  6812 ;;		_Timer0_init
  6813 ;;		_forward_navigation
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text43
  6818   002CA6                     __ptext43:
  6819                           	callstack 0
  6820   002CA6                     _reset_timer:
  6821                           	callstack 27
  6822   002CA6                     
  6823                           ;timers.c: 55:     write_timer(0, 0);
  6824   002CA6  0E00               	movlw	0
  6825   002CA8  6E01               	movwf	write_timer@tL^0,c
  6826   002CAA  0E00               	movlw	0
  6827   002CAC  EC59  F016         	call	_write_timer
  6828   002CB0  0012               	return		;funcret
  6829   002CB2                     __end_of_reset_timer:
  6830                           	callstack 0
  6831                           
  6832 ;; *************** function _write_timer *****************
  6833 ;; Defined at:
  6834 ;;		line 41 in file "timers.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  tH              1    wreg     unsigned char 
  6837 ;;  tL              1    0[COMRAM] unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  tH              1    1[COMRAM] unsigned char 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1    wreg      void 
  6842 ;; Registers used:
  6843 ;;		wreg
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6849 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;Total ram usage:        2 bytes
  6854 ;; Hardware stack levels used: 1
  6855 ;; Hardware stack levels required when called: 1
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_reset_timer
  6860 ;;		_return_to_sender
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text44
  6865   002CB2                     __ptext44:
  6866                           	callstack 0
  6867   002CB2                     _write_timer:
  6868                           	callstack 27
  6869                           
  6870                           ;incstack = 0
  6871                           ;write_timer@tH stored from wreg
  6872   002CB2  6E02               	movwf	write_timer@tH^0,c
  6873   002CB4                     
  6874                           ;timers.c: 41: void write_timer(unsigned char tH, unsigned char tL);timers.c: 42: {;time
      +                          rs.c: 46:     TMR0H = tH;
  6875   002CB4  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  6876   002CB8                     
  6877                           ;timers.c: 47:     TMR0L = tL;
  6878   002CB8  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  6879   002CBC  0012               	return		;funcret
  6880   002CBE                     __end_of_write_timer:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _ISR *****************
  6884 ;; Defined at:
  6885 ;;		line 145 in file "timers.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		Interrupt level 2
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	intcode
  6913   000008                     __pintcode:
  6914                           	callstack 0
  6915   000008                     _ISR:
  6916                           	callstack 24
  6917                           
  6918                           ;incstack = 0
  6919   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6920   00000A                     
  6921                           ;timers.c: 147:     if (PIR0bits.TMR0IF) {
  6922   00000A  010E               	movlb	14	; () banked
  6923   00000C  AB33               	btfss	51,5,b	;volatile
  6924   00000E  EF0B  F000         	goto	i2u154_41
  6925   000012  EF0D  F000         	goto	i2u154_40
  6926   000016                     i2u154_41:
  6927   000016  EF1C  F000         	goto	i2l675
  6928   00001A                     i2u154_40:
  6929   00001A                     
  6930                           ; BSR set to: 14
  6931                           ;timers.c: 148:         if (returning) {
  6932   00001A  505D               	movf	_returning^0,w,c
  6933   00001C  B4D8               	btfsc	status,2,c
  6934   00001E  EF13  F000         	goto	i2u155_41
  6935   000022  EF15  F000         	goto	i2u155_40
  6936   000026                     i2u155_41:
  6937   000026  EF19  F000         	goto	i2l2748
  6938   00002A                     i2u155_40:
  6939   00002A                     
  6940                           ; BSR set to: 14
  6941                           ;timers.c: 149:             return_flag = 1;
  6942   00002A  0E01               	movlw	1
  6943   00002C  6E5C               	movwf	_return_flag^0,c
  6944                           
  6945                           ;timers.c: 150:         } else {
  6946   00002E  EF1B  F000         	goto	i2l2750
  6947   000032                     i2l2748:
  6948                           
  6949                           ; BSR set to: 14
  6950                           ;timers.c: 151:             lost_flag = 1;
  6951   000032  0E01               	movlw	1
  6952   000034  6E5B               	movwf	_lost_flag^0,c
  6953   000036                     i2l2750:
  6954                           
  6955                           ; BSR set to: 14
  6956                           ;timers.c: 153:         PIR0bits.TMR0IF = 0;
  6957   000036  9B33               	bcf	51,5,b	;volatile
  6958   000038                     i2l675:
  6959                           
  6960                           ; BSR set to: 14
  6961   000038  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6962   00003A  0011               	retfie		f
  6963   00003C                     __end_of_ISR:
  6964                           	callstack 0
  6965                           
  6966                           	psect	rparam
  6967   000000                     
  6968                           	psect	temp
  6969   00005E                     btemp:
  6970                           	callstack 0
  6971   00005E                     	ds	1
  6972   000000                     int$flags	set	btemp
  6973   000000                     wtemp8	set	btemp+1
  6974   000000                     ttemp5	set	btemp+1
  6975   000000                     ttemp6	set	btemp+4
  6976   000000                     ttemp7	set	btemp+8
  6977                           
  6978                           	psect	idloc
  6979                           
  6980                           ;Config register IDLOC0 @ 0x200000
  6981                           ;	unspecified, using default values
  6982   200000                     	org	2097152
  6983   200000  FFFF               	dw	65535
  6984                           
  6985                           ;Config register IDLOC1 @ 0x200002
  6986                           ;	unspecified, using default values
  6987   200002                     	org	2097154
  6988   200002  FFFF               	dw	65535
  6989                           
  6990                           ;Config register IDLOC2 @ 0x200004
  6991                           ;	unspecified, using default values
  6992   200004                     	org	2097156
  6993   200004  FFFF               	dw	65535
  6994                           
  6995                           ;Config register IDLOC3 @ 0x200006
  6996                           ;	unspecified, using default values
  6997   200006                     	org	2097158
  6998   200006  FFFF               	dw	65535
  6999                           
  7000                           ;Config register IDLOC4 @ 0x200008
  7001                           ;	unspecified, using default values
  7002   200008                     	org	2097160
  7003   200008  FFFF               	dw	65535
  7004                           
  7005                           ;Config register IDLOC5 @ 0x20000A
  7006                           ;	unspecified, using default values
  7007   20000A                     	org	2097162
  7008   20000A  FFFF               	dw	65535
  7009                           
  7010                           ;Config register IDLOC6 @ 0x20000C
  7011                           ;	unspecified, using default values
  7012   20000C                     	org	2097164
  7013   20000C  FFFF               	dw	65535
  7014                           
  7015                           ;Config register IDLOC7 @ 0x20000E
  7016                           ;	unspecified, using default values
  7017   20000E                     	org	2097166
  7018   20000E  FFFF               	dw	65535
  7019                           
  7020                           	psect	config
  7021                           
  7022                           ;Config register CONFIG1L @ 0x300000
  7023                           ;	External Oscillator mode Selection bits
  7024                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7025                           ;	Power-up default value for COSC bits
  7026                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7027   300000                     	org	3145728
  7028   300000  AA                 	db	170
  7029                           
  7030                           ;Config register CONFIG1H @ 0x300001
  7031                           ;	unspecified, using default values
  7032                           ;	Clock Out Enable bit
  7033                           ;	CLKOUTEN = 0x1, unprogrammed default
  7034                           ;	Clock Switch Enable bit
  7035                           ;	CSWEN = 0x1, unprogrammed default
  7036                           ;	Fail-Safe Clock Monitor Enable bit
  7037                           ;	FCMEN = 0x1, unprogrammed default
  7038   300001                     	org	3145729
  7039   300001  FF                 	db	255
  7040                           
  7041                           ;Config register CONFIG2L @ 0x300002
  7042                           ;	unspecified, using default values
  7043                           ;	Master Clear Enable bit
  7044                           ;	MCLRE = 0x1, unprogrammed default
  7045                           ;	Power-up Timer Enable bit
  7046                           ;	PWRTE = 0x1, unprogrammed default
  7047                           ;	Low-power BOR enable bit
  7048                           ;	LPBOREN = 0x1, unprogrammed default
  7049                           ;	Brown-out Reset Enable bits
  7050                           ;	BOREN = 0x3, unprogrammed default
  7051   300002                     	org	3145730
  7052   300002  FF                 	db	255
  7053                           
  7054                           ;Config register CONFIG2H @ 0x300003
  7055                           ;	unspecified, using default values
  7056                           ;	Brown Out Reset Voltage selection bits
  7057                           ;	BORV = 0x3, unprogrammed default
  7058                           ;	ZCD Disable bit
  7059                           ;	ZCD = 0x1, unprogrammed default
  7060                           ;	PPSLOCK bit One-Way Set Enable bit
  7061                           ;	PPS1WAY = 0x1, unprogrammed default
  7062                           ;	Stack Full/Underflow Reset Enable bit
  7063                           ;	STVREN = 0x1, unprogrammed default
  7064                           ;	Debugger Enable bit
  7065                           ;	DEBUG = 0x1, unprogrammed default
  7066                           ;	Extended Instruction Set Enable bit
  7067                           ;	XINST = 0x1, unprogrammed default
  7068   300003                     	org	3145731
  7069   300003  FF                 	db	255
  7070                           
  7071                           ;Config register CONFIG3L @ 0x300004
  7072                           ;	WDT Period Select bits
  7073                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7074                           ;	WDT operating mode
  7075                           ;	WDTE = OFF, WDT Disabled
  7076   300004                     	org	3145732
  7077   300004  9F                 	db	159
  7078                           
  7079                           ;Config register CONFIG3H @ 0x300005
  7080                           ;	unspecified, using default values
  7081                           ;	WDT Window Select bits
  7082                           ;	WDTCWS = 0x7, unprogrammed default
  7083                           ;	WDT input clock selector
  7084                           ;	WDTCCS = 0x7, unprogrammed default
  7085   300005                     	org	3145733
  7086   300005  FF                 	db	255
  7087                           
  7088                           ;Config register CONFIG4L @ 0x300006
  7089                           ;	unspecified, using default values
  7090                           ;	Write Protection Block 0
  7091                           ;	WRT0 = 0x1, unprogrammed default
  7092                           ;	Write Protection Block 1
  7093                           ;	WRT1 = 0x1, unprogrammed default
  7094                           ;	Write Protection Block 2
  7095                           ;	WRT2 = 0x1, unprogrammed default
  7096                           ;	Write Protection Block 3
  7097                           ;	WRT3 = 0x1, unprogrammed default
  7098                           ;	Write Protection Block 3
  7099                           ;	WRT4 = 0x1, unprogrammed default
  7100                           ;	Write Protection Block 3
  7101                           ;	WRT5 = 0x1, unprogrammed default
  7102                           ;	Write Protection Block 3
  7103                           ;	WRT6 = 0x1, unprogrammed default
  7104                           ;	Write Protection Block 3
  7105                           ;	WRT7 = 0x1, unprogrammed default
  7106   300006                     	org	3145734
  7107   300006  FF                 	db	255
  7108                           
  7109                           ;Config register CONFIG4H @ 0x300007
  7110                           ;	unspecified, using default values
  7111                           ;	Configuration Register Write Protection bit
  7112                           ;	WRTC = 0x1, unprogrammed default
  7113                           ;	Boot Block Write Protection bit
  7114                           ;	WRTB = 0x1, unprogrammed default
  7115                           ;	Data EEPROM Write Protection bit
  7116                           ;	WRTD = 0x1, unprogrammed default
  7117                           ;	Scanner Enable bit
  7118                           ;	SCANE = 0x1, unprogrammed default
  7119                           ;	Low Voltage Programming Enable bit
  7120                           ;	LVP = 0x1, unprogrammed default
  7121   300007                     	org	3145735
  7122   300007  FF                 	db	255
  7123                           
  7124                           ;Config register CONFIG5L @ 0x300008
  7125                           ;	unspecified, using default values
  7126                           ;	UserNVM Program Memory Code Protection bit
  7127                           ;	CP = 0x1, unprogrammed default
  7128                           ;	DataNVM Memory Code Protection bit
  7129                           ;	CPD = 0x1, unprogrammed default
  7130   300008                     	org	3145736
  7131   300008  FF                 	db	255
  7132                           
  7133                           ;Config register CONFIG5H @ 0x300009
  7134                           ;	unspecified, using default values
  7135   300009                     	org	3145737
  7136   300009  FF                 	db	255
  7137                           
  7138                           ;Config register CONFIG6L @ 0x30000A
  7139                           ;	unspecified, using default values
  7140                           ;	Table Read Protection Block 0
  7141                           ;	EBTR0 = 0x1, unprogrammed default
  7142                           ;	Table Read Protection Block 1
  7143                           ;	EBTR1 = 0x1, unprogrammed default
  7144                           ;	Table Read Protection Block 2
  7145                           ;	EBTR2 = 0x1, unprogrammed default
  7146                           ;	Table Read Protection Block 3
  7147                           ;	EBTR3 = 0x1, unprogrammed default
  7148                           ;	Table Read Protection Block 4
  7149                           ;	EBTR4 = 0x1, unprogrammed default
  7150                           ;	Table Read Protection Block 5
  7151                           ;	EBTR5 = 0x1, unprogrammed default
  7152                           ;	Table Read Protection Block 6
  7153                           ;	EBTR6 = 0x1, unprogrammed default
  7154                           ;	Table Read Protection Block 7
  7155                           ;	EBTR7 = 0x1, unprogrammed default
  7156   30000A                     	org	3145738
  7157   30000A  FF                 	db	255
  7158                           
  7159                           ;Config register CONFIG6H @ 0x30000B
  7160                           ;	unspecified, using default values
  7161                           ;	Boot Block Table Read Protection bit
  7162                           ;	EBTRB = 0x1, unprogrammed default
  7163   30000B                     	org	3145739
  7164   30000B  FF                 	db	255
  7165                           tosu	equ	0xFFF
  7166                           tosh	equ	0xFFE
  7167                           tosl	equ	0xFFD
  7168                           stkptr	equ	0xFFC
  7169                           pclatu	equ	0xFFB
  7170                           pclath	equ	0xFFA
  7171                           pcl	equ	0xFF9
  7172                           tblptru	equ	0xFF8
  7173                           tblptrh	equ	0xFF7
  7174                           tblptrl	equ	0xFF6
  7175                           tablat	equ	0xFF5
  7176                           prodh	equ	0xFF4
  7177                           prodl	equ	0xFF3
  7178                           indf0	equ	0xFEF
  7179                           postinc0	equ	0xFEE
  7180                           postdec0	equ	0xFED
  7181                           preinc0	equ	0xFEC
  7182                           plusw0	equ	0xFEB
  7183                           fsr0h	equ	0xFEA
  7184                           fsr0l	equ	0xFE9
  7185                           wreg	equ	0xFE8
  7186                           indf1	equ	0xFE7
  7187                           postinc1	equ	0xFE6
  7188                           postdec1	equ	0xFE5
  7189                           preinc1	equ	0xFE4
  7190                           plusw1	equ	0xFE3
  7191                           fsr1h	equ	0xFE2
  7192                           fsr1l	equ	0xFE1
  7193                           bsr	equ	0xFE0
  7194                           indf2	equ	0xFDF
  7195                           postinc2	equ	0xFDE
  7196                           postdec2	equ	0xFDD
  7197                           preinc2	equ	0xFDC
  7198                           plusw2	equ	0xFDB
  7199                           fsr2h	equ	0xFDA
  7200                           fsr2l	equ	0xFD9
  7201                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        26
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      93
    BANK0           160     32      91
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getHSVval@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    getHSVval@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    maxRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    minRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1141DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1141DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2722$buffer	PTR unsigned char  size(2) Largest target is 0

    S2722$source	PTR const unsigned char  size(2) Largest target is 0

    scaleRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _scaleRGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _getHSVval->___lldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   24637
                                             81 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                          _getHSVval
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                           _scaleRGB
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5843
                                             54 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5821
                                             54 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5182
                                             28 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4357
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    4005
                                             10 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scaleRGB                                             3     2      1    5963
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _getHSVval                                           52    50      2    5109
                                             13 COMRAM    52    50      2
                            ___lldiv
                             ___lmul
                             _maxRGB
                             _minRGB
 ---------------------------------------------------------------------------------
 (2) _minRGB                                               6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _maxRGB                                               6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1226
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getHSVval
     ___lldiv
     ___lmul
     _maxRGB
     _minRGB
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _scaleRGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sendHSVvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      5B       5       56.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4      60        0.0%
DATA                 0      0      F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 11:22:17 2024

                 _turn180Delay 00AF                 _color_read_Red 290A                _color_read_Blue 29FA  
              _trail_timer_low 0114                             l42 2196                             l27 2BB8  
                           l71 2958                             l80 29F8                             l65 2B8A  
                           l74 29A8                             l83 2908                             l68 2C4E  
                           l93 25B6                             l77 2A48                             l95 25F0  
                           l98 253A                   ___awdiv@sign 0006               _trail_timer_high 0128  
             _color_read_Clear 29AA               _color_read_Green 295A                  maxRGB@max_val 0005  
                          l100 2574                            l103 20CE                            l302 2CD0  
                          l119 14E4                            l305 2CA4                            l308 2B22  
                          l431 2C6C                            l192 24F8                            l440 2C70  
                          l290 2BE4                            l443 2C84                            l460 285C  
                          l293 2C0A                            l287 2BE2                            l463 2A94  
                          l296 2CDA                            l449 27FE                            l299 2CC6  
                          l732 2458                            l716 2728                            l645 2CBC  
                          l717 2738                            l639 2C2E                            l648 2CB0  
                          l739 2468                            l936 225A                            l949 23C4  
                          _ISR 0008         ??_toggle_tricolour_LED 0001                            _abs 2B24  
                 ___awmod@sign 0006                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                    _squareDelay 00AB                           ?_ISR 0001  
                 ___fltol@exp1 0031                           l1002 1FF8                           l1203 2664  
                         ?_abs 0007                           l1213 279C                           l1206 2794  
                         l1323 190E                           l3012 2BE4                           l3100 1C12  
                         l3020 193E                           l3014 2BF4                           l3110 2CD2  
                         l1326 17A0                           l3030 1982                           l3022 1946  
                         l1319 15AA                           l3200 2BC4                           l3112 2CD6  
                         l3120 2CCC                           l1336 18D0                           l1328 1818  
                         l1360 1C72                           l1424 1AB2                           l3040 1A0C  
                         l3032 19A2                           l3024 1954                           l3016 1910  
                         l1329 1806                           l1425 1C1A                           l3202 2BCA  
                         l3114 2C9C                           l3210 2C32                           l3130 2AF0  
                         l3122 2CBE                           l3050 1A5E                           l3042 1A28  
                         l3034 19BA                           l3026 1958                           l3018 1918  
                         l1363 1DCE                           l1451 2B56                           l1443 28AA  
                         l3204 2BCC                           l3116 2CA0                           l3132 2AF8  
                         l3124 2CC2                           l3220 29A0                           l3212 290A  
                         l1196 265C                           l3052 1A6E                           l3060 1AA0  
                         l3044 1A2C                           l3036 19C4                           l3028 1962  
                         l1444 28B2                           l3206 2BCE                           l3118 2CC8  
                         l3134 2B1E                           l3126 2AE4                           l3230 29AA  
                         l3214 2950                           l1374 1D66                           l3070 1B08  
                         l3054 1A7C                           l3046 1A3E                           l3038 19DC  
                         l3062 1ABE                           l1367 1D0A                           l1463 2314  
                         l1383 2AE0                           l3208 2BD0                           l3400 23F4  
                         l3240 25A4                           l3136 2B20                           l3128 2AE8  
                         l3224 29FA                           l3232 29F0                           l1448 2B3E  
                         l3080 1B72                           l3072 1B2C                           l3064 1ADE  
                         l3056 1A84                           l3048 1A4E                           l3410 2446  
                         l3402 2400                           l3242 25D6                           l3250 2508  
                         l3226 2A40                           l3218 295A                           l1474 2CE2  
                         l3082 1B8C                           l3074 1B48                           l3066 1AF6  
                         l3090 1BD4                           l3058 1A9E                           l3412 2448  
                         l3404 240E                           l3244 25E8                           l3236 2576  
                         l3252 2528                           l3500 1790                           l3420 1500  
                         l3260 279E                           l3092 1BDC                           l3084 1B8E  
                         l3076 1B4C                           l3068 1B04                           l3414 2452  
                         l3406 2418                           l3238 2584                           l3254 255A  
                         l3510 17D0                           l3502 179E                           l3430 1538  
                         l3422 1502                           l3182 2C70                           l3262 27A2  
                         l3078 1B5E                           l3190 285E                           l3270 2AA2  
                         l3408 2436                           l3256 256C                           l3248 24FA  
                         l3520 1842                           l3512 17FE                           l3504 17B0  
                         l3440 1564                           l3432 1548                           l3424 1512  
                         l3416 14E6                           l3184 2C80                           l3264 27C8  
                         l2800 21C4                           l3088 1BA4                           l3096 1BE8  
                         l3192 2862                           l3272 2AAA                           l3186 2CB4  
                         l3530 18B8                           l3522 186C                           l3506 17BE  
                         l3450 15BA                           l3442 1574                           l3434 154E  
                         l3426 1522                           l3418 14F2                           l3610 1CF4  
                         l3602 1CAC                           l3266 27CC                           l2810 21F2  
                         l2802 21CC                           l3098 1C0A                           l3194 2870  
                         l3274 2AB2                           l3188 2CB8                           l3700 106C  
                         l3532 18D4                           l3540 18FA                           l3516 1828  
                         l3524 1870                           l3508 17C2                           l3460 15F4  
                         l3452 15CA                           l3444 1584                           l3436 1554  
                         l3428 1532                           l3620 1D74                           l3612 1D00  
                         l3604 1CB4                           l2820 222C                           l2812 21FA  
                         l2804 21D0                           l2900 276A                           l3196 288A  
                         l3276 2ACA                           l3268 2A96                           l3382 2CA6  
                         l3198 2BBA                           l3390 26FE                           l3710 10D2  
                         l3702 1074                           l3542 18FE                           l3534 18E4  
                         l3526 188A                           l3518 1834                           l3470 1646  
                         l3462 160A                           l3446 1594                           l3438 1562  
                         l3630 1DBC                           l3622 1D76                           l3614 1D3C  
                         l3606 1CC0                           l2830 2252                           l2822 222E  
                         l2814 2208                           l2806 21D8                           l2902 2780  
                         l2910 226C                           l3278 2AD8                           l3640 2B58  
                         l3392 2708                           l3384 26D0                           l3720 118A  
                         l3712 110E                           l3704 1096                           l3536 18F2  
                         l3528 189E                           l3480 168C                           l3472 1654  
                         l3464 1616                           l3456 15DE                           l3448 159A  
                         l3560 1F5E                           l3552 1F1E                           l3632 1DBE  
                         l3624 1D7A                           l3616 1D48                           l3608 1CF2  
                         l2824 2234                           l2816 220E                           l2808 21EA  
                         l2840 2330                           l2904 2788                           l2912 227C  
                         l3642 2B5C                           l3394 23C6                           l3386 26E0  
                         l3722 1194                           l3714 1142                           l3706 10BC  
                         l3730 1240                           l3650 28B4                           l3538 18F4  
                         l3490 16FA                           l3482 16A6                           l3474 1660  
                         l3466 162E                           l3458 15EA                           l3570 1F8E  
                         l3562 1F6C                           l3554 1F48                           l3546 1EF4  
                         l3626 1D9E                           l3618 1D56                           l2818 2224  
                         l2826 223A                           l2850 2364                           l2842 2334  
                         l2834 2316                           l2906 278E                           l2922 2B24  
                         l2914 2286                           l4178 1BC6                           l3636 2B8C  
                         l3644 2B66                           l3396 23D6                           l3388 26EE  
                         l3740 12E2                           l3732 1262                           l3724 11D4  
                         l3716 1172                           l3708 10C8                           l3492 1724  
                         l3484 16B6                           l3476 1670                           l3468 163A  
                         l3580 1FB8                           l3572 1F98                           l3556 1F4A  
                         l3548 1F0A                           l3628 1DAE                           l3660 1FFA  
                         l2828 224A                           l2860 239E                           l2852 236C  
                         l2844 2342                           l2836 231A                           l2924 2B32  
                         l2916 22A2                           l2908 225C                           l3646 2B76  
                         l3398 23EC                           l3750 1370                           l3742 1316  
                         l3734 1288                           l3726 1208                           l3718 117E  
                         l3670 0E5E                           l3662 0E1A                           l3830 2C68  
                         l3822 2C50                           l3494 175A                           l3486 16D2  
                         l3478 167C                           l3582 1FC8                           l3558 1F5A  
                         l3590 1C1E                           l2790 2198                           l2854 237A  
                         l2862 23A4                           l2846 234A                           l2838 2328  
                         l2870 25F2                           l2918 22D4                           l3638 20D0  
                         l3840 2C20                           l3648 2B80                           l3760 142E  
                         l3752 13B0                           l3744 1346                           l3736 1294  
                         l3728 1238                           l3680 0EC4                           l3672 0E70  
                         l3664 0E32                           l3832 2C6A                           l3824 2C5A  
                         l3496 1768                           l3488 16DE                           l3584 1FD8  
                         l3568 1F84                           l3592 1C2E                           l2792 219C  
                         l2864 23B4                           l2856 2390                           l2848 235C  
                         l2880 262A                           l2872 25FA                           l3842 2C24  
                         l3834 2C0C                           l3770 14B2                           l3762 143A  
                         l3754 13E4                           l3738 12A6                           l3746 1352  
                         l3682 0ED4                           l3690 0F84                           l3674 0E7C  
                         l3666 0E42                           l3826 2C5C                           l3498 1786  
                         l3586 1FE8                           l3578 1FAC                           l3594 1C3C  
                         l2794 21AA                           l2866 23BC                           l2858 2398  
                         l2890 2656                           l2882 2630                           l2874 260C  
                         l3850 2800                           l3930 1E1E                           l3844 2C26  
                         l3836 2C14                           l3772 14C0                           l3764 1446  
                         l3756 1414                           l3748 135E                           l3692 0F90  
                         l3684 0F14                           l3676 0E9A                           l3668 0E52  
                         l3780 24A0                           l3828 2C66                           l3596 1C82  
                         l2796 21B2                           l2884 2646                           l2876 2614  
                         l2892 273A                           l3852 2852                           l3940 1E52  
                         l3932 1E26                           l3846 2C2A                           l3838 2C16  
                         l3774 14D2                           l3766 147A                           l3694 0FC4  
                         l3686 0F48                           l3678 0EC4                           l3758 141C  
                         l3790 24DE                           l3782 24A4                           l3598 1C98  
                         l2798 21B6                           l2886 264E                           l2878 261C  
                         l2894 274C                           l3854 2A4A                           l3950 1E70  
                         l3942 1E62                           l3934 1E3A                           l3926 1DD0  
                         l3848 2C2C                           l3768 14AA                           l3696 1008  
                         l3688 0F78                           l3792 24E0                           l3784 24C8  
                         l3776 246A                           l2888 2650                           l2896 2754  
                         l3856 2A8A                           l3960 1E7A                           l3952 1E72  
                         l3944 1E66                           l3936 1E42                           l3928 1E16  
                         l3698 103C                           l3794 24EA                           l3786 24D2  
                         l3778 247A                           l2898 275C                           l3970 1EB8  
                         l3962 1E7E                           l3954 1E74                           l3946 1E6A  
                         l3938 1E4A                           l3796 24EC                           l3788 24D4  
                         l3972 1EC4                           l3964 1EA4                           l3956 1E76  
                         l3948 1E6E                           l3798 24F6                           l3974 1ECC  
                         l3966 1EA8                           l3958 1E78                           l3976 1ED4  
                         l3968 1EB0                           STR_1 0E0F                           STR_2 0E14  
                         STR_5 0E01                           STR_6 0E04                           u2000 1982  
                         u2001 197E                           u2010 19A2                           u2011 199E  
                         u2100 1B5E                           u2020 19D8                           u2101 1B5A  
                         u2021 19D2                           u2110 1B6E                           u2030 19DA  
                         u2111 1B6A                           u2200 255A                           u2120 1BA0  
                         u2040 1A3E                           u2201 2556                           u2121 1B9C  
                         u2041 1A3A                           u2130 2B0C                           u2210 27C4  
                         u2050 1A4E                           u2131 2B04                           u2051 1A4A  
                         u2300 1512                           u2220 27EE                           u2060 1A5E  
                         u2301 150E                           u2061 1A5A                           u2310 1522  
                         u2150 2C80                           u2230 27FE                           u2070 1A6E  
                         u2311 151E                           u2151 2C7C                           u2231 27FA  
                         u2071 1A6A                           u2240 26EE                           u2400 17D0  
                         u2320 1562                           u1600 21EA                           u2080 1AB2  
                         u2160 28AA                   _BAUD4CONbits 0EE9                           u2241 26EA  
                         u2401 17CC                           u2321 155E                           u2217 27BA  
                         u1601 21E6                           u2081 1AAE                           u2161 28A6  
                         u2250 2728                           u2170 25A4                           u2410 17FE  
                         u2330 1574                           u1610 2208                           u2090 1ADE  
                         u2251 2724                           u2171 25A0                           u2411 17FA  
                         u2331 1570                           u2227 27E4                           u1611 2204  
                         u2091 1ADA                           u2260 23EC                           u2180 25D6  
                         u2148 2B0E                           u2420 1814                           u2340 1584  
                         u2500 1F6C                           u1620 2224                           u1700 260C  
                         u2261 23E8                           u2181 25D2                           u2421 1810  
                         u2341 1580                           u2501 1F68                           u1621 2220  
                         u1701 2608                           u2270 240E                           u2190 2528  
                         u2430 1828                           u2350 15BA                           u2510 1F80  
                         u1630 224A                           u1710 262A                           u2271 240A  
                         u2191 2524                           u2431 1824                           u2351 15B6  
                         u2511 1F7C                           u1631 2246                           u1711 2626  
                         u3047 1EDE                           u2280 2436                           u2440 1842  
                         u2360 15CA                           u2520 1FA8                           u2600 1D56  
                         u1640 2328                           u1720 2646                           u1800 2B32  
                         u3057 2B6C                           u2281 2432                           u2441 183E  
                         u2361 15C6                           u2521 1FA4                           u2601 1D52  
                         u1641 2324                           u1721 2642                           u1801 2B2E  
                         u2450 188A                           u2370 1744                           u2290 1500  
                         u2530 1FC8                           u2610 1D66                           u1650 2342  
                         u1730 274C                           _T2PR 0FBC                           u2451 1886  
                         u2291 14FC                           u2531 1FC4                           u2611 1D62  
                         u1651 233E                           u1731 2748                           u2460 18B8  
                         u2380 179E                           u2540 1FD8                           u2620 1D74  
                         u1580 21AA                           u1660 235C                           u1740 276A  
                         u2461 18B4                           u2381 179A                           u2541 1FD4  
                         u2621 1D70                           u1581 21A6                           u1661 2358  
                         u1741 2766                           u2470 18F2                           u2390 17BE  
                         u2630 1DAE                           u2550 1C2E                           u1590 21C4  
                         u1670 237A                           u1750 2780                           u2710 2144  
                         u2471 18EE                           u2391 17BA                           u2375 173A  
                         u2631 1DAA                           u2551 1C2A                           u1591 21C0  
                         u1671 2376                           u1751 277C                           u2711 213C  
                         u2800 0E70                           u2480 1F0A                           u2640 1DBC  
                         u2560 1C3C                           u1680 2390                           u1760 226C  
                         u2801 0E6C                           u2481 1F06                           u2641 1DB8  
                         u2561 1C38                           u1681 238C                           u1761 2268  
                         u2810 0E9A                           u2490 1F3E                           u2570 1C98  
                         u1690 23B4                           u1770 227C                           u2730 2162  
                         u2650 20E2                           u2811 0E96                           u2571 1C94  
                         u1691 23B0                           u1771 2278                           u2731 215A  
                         u2651 20DA                           u2820 0EC4                           u2580 1CEE  
                         u1780 22A2                           u2708 2124                           u2821 0EC0  
                         u2581 1CEA                           u1781 229E                           u2830 1096  
                         u2590 1D38                           u1790 22D4                           u2750 2184  
                         u2670 2102                           u2831 1092                           u2495 1F34  
                         u2591 1D34                           u1791 22D0                           u2751 217C  
                         u2671 20FA                           u2840 10BC                           u2728 2146  
                         u2841 10B8                           u1970 2BF4                           u2850 1262  
                         u2690 2122                           u1971 2BF0                           u2851 125E  
                         u2691 211A                           u1980 2C0A                           u2860 1288  
                         u2748 2164                           u2668 20E4                           u1981 2C06  
                         u2861 1284                           u1990 193E                           u2950 1E92  
                         u1991 193A                           u2951 1E8A                           u2768 2186  
                         u2688 2104                           u2890 142E                           u2891 142A  
                         u2875 1296                           u2885 1360                           u2968 1E94  
                         abs@a 0007                           _dbuf 0060                           _main 1DD0  
                         _prec 0084                           _nout 0080                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005E             _sendRGBCvalSerial4 2800  
                         prodh 0FF4                           prodl 0FF3                           start 003C  
       __end_of_color_read_Red 295A                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 0037                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                  ___fltol@sign1 0030                          ?_main 0001  
           _timer_high_pointer 0054                __end_of___awdiv 225C                __end_of___awmod 23C6  
              __end_of___flmul 1910                __end_of___fltol 1FFA                __end_of___lldiv 246A  
              ___awdiv@divisor 0003                __end_of___lwdiv 2666                __end_of___lwmod 279E  
                        i2l675 0038                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0011  
                 vfpfcnvrt@fmt 000C                          _TMR0H 0FD4                          _TMR0L 0FD3  
          ___lmul@multiplicand 0005        __end_of_sendCharSerial4 2C86     __end_of_I2C_2_Master_Start 2CDC  
                  _write_timer 2CB2     __end_of_I2C_2_Master_Write 2CA6                    _turningGear 0056  
                        _flags 0086           ??_sendRGBCvalSerial4 0038                          _fputc 225C  
                        _width 0082                          _putch 2CE2              _turnRight135Delay 00B1  
                        tablat 0FF5                _turnLeft90Delay 00B7                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 2AE2        __end_of_color_read_Blue 2A4A  
        _I2C_2_Master_RepStart 2CBE                ?_color_read_Red 0005                __initialization 2666  
                 __end_of_main 1EF4                         ??_main 0052                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2750 0036  
                       i2l2742 000A                         i2l2744 001A                         i2l2746 002A  
                       i2l2748 0032                         _RG6PPS 0E88                  vfpfcnvrt@done 0010  
     __end_of_color_click_init 2B8C                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 1DD0               _turnLeft135Delay 00B3                  ??_Timer0_init 0003  
                 ?_reset_timer 0001                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001C  
                       ___lmul 26D0                      ??___awdiv 0005                      ??___awmod 0005  
                    ??___flmul 0017                      ??___fltol 002C                      ??___lldiv 0009  
                    ??___lwdiv 0005                      ??___lwmod 0005                         _maxRGB 2576  
                       _minRGB 24FA               __end_of_scaleRGB 20D0                         clear_0 26AC  
                       clear_1 26B8               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       isa$std 0001                ___awmod@counter 0005                  minRGB@min_val 0005  
                       fputc@c 0001                   __pdataCOMRAM 0054              _timer_low_pointer 00A9  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 28B4              ??_initDCmotorsPWM 0003                      ??_sprintf 0028  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
            _buggy_lights_init 2B8C                     __accesstop 0060        __end_of__initialization 26C6  
     __end_of_color_read_Clear 29FA       __end_of_color_read_Green 29AA         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001                     ___fltol@f1 0028  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 2C86  
            getHSVval@temp_620 002C              getHSVval@temp_621 0030              getHSVval@temp_622 0034  
            getHSVval@temp_623 0020              getHSVval@temp_618 0038              getHSVval@temp_619 0028  
          ??_buggy_lights_init 0001                  __end_of_fputc 2316                  __end_of_putch 2CE4  
          __end_of_Timer0_init 2C30                        ??_fputc 0004      __end_of_buggy_lights_init 2BBA  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 28B4              _color_writetoaddr 2C30                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003                        ?___lmul 0001                        ?_maxRGB 0001  
                      ?_minRGB 0001                 ___lmul@product 0009            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                 ?_write_timer 0001                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
            __end_of_getHSVval 14E6         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                    ?_scaleRGB 0032      __end_of_color_writetoaddr 2C50             _I2C_2_Master_Start 2CD2  
                   _initUSART4 2C50             _I2C_2_Master_Write 2C9A                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 2C0C  
      sendStringSerial4@string 0002                        ___awdiv 2198                        ___awmod 2316  
                      ___flmul 14E6                        ___fltol 1EF4                        ___lldiv 23C6  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 25F2            ?_I2C_2_Master_Write 0001  
                      ___lwmod 273A                      ?_vfprintf 0019                   __psmallconst 0E00  
                      __pcinit 2666                        __ramtop 0E00                        __ptext0 1DD0  
                      __ptext1 20D0                        __ptext2 2800                        __ptext3 2A4A  
                      __ptext4 2A96                        __ptext5 285E                        __ptext6 1910  
                      __ptext7 225C                        __ptext8 2CE2                        __ptext9 2B24  
                    _T2CONbits 0FBD                     ??___xxtofl 0005               ___awmod@dividend 0001  
                   getHSVval@C 0040                     getHSVval@M 003E                      _T2HLTbits 0FBE  
                   getHSVval@m 001A                        maxRGB@p 0001                        _sprintf 2A96  
                      minRGB@p 0001           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 26C6              _sendHSVvalSerial4 2A4A                    ?_getRGBCval 000C  
                      fputc@fp 0003                     ??_scaleRGB 0033              ?_color_click_init 0001  
                getHSVval@temp 0024             ?_sendHSVvalSerial4 0037                ___lldiv@divisor 0005  
           ??_color_click_init 0005                ___lldiv@counter 000D              __end_of_vfpfcnvrt 1C1C  
          ??_sendHSVvalSerial4 0038                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0014                     ??_vfprintf 001C                _initDCmotorsPWM 246A  
                ___xxtofl@sign 0009                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88      __end_of_sendHSVvalSerial4 2A96  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001                     main@motorL 008D  
                   main@motorR 0096             getHSVval@hue_scale 003C             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                 __end_of___lmul 273A                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0013                    vfpfcnvrt@fp 000B                  __pidataCOMRAM 2CDC  
           getHSVval@sat_scale 0018                 __end_of_maxRGB 25F2                 __end_of_minRGB 2576  
    sendRGBCvalSerial4@col_val 0037       sendHSVvalSerial4@col_val 0037            color_read_Clear@tmp 000A  
          start_initialization 2666                    __end_of_ISR 003C                    __end_of_abs 2B58  
             _turnRight90Delay 00B5      sendRGBCvalSerial4@tempStr 0038       sendHSVvalSerial4@tempStr 0038  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 24FA                    vfprintf@fmt 001A  
                     ??___lmul 0009                       ??_maxRGB 0003                       ??_minRGB 0003  
                  __pdataBANK0 00A7                      ___flmul@a 0013                      ___flmul@b 000F  
                  __pbssCOMRAM 005A                  __pcstackBANK0 0087                 _wall_threshold 00B9  
 __end_of_toggle_tricolour_LED 2198                      _getHSVval 0E1A               ___lwdiv@dividend 0001  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___flmul 000F                       ?___fltol 0028  
                     ?___lldiv 0001                       ?___lwdiv 0001                       ?___lwmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 2BE4              _I2C_2_Master_Init 2BBA              _I2C_2_Master_Read 2AE2  
            _I2C_2_Master_Stop 2CC8             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 0005  
                _headbuttDelay 00AD       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001D  
                    _rampDelay 0059                   ??_getRGBCval 000D              _sendStringSerial4 279E  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                   getHSVval@hue 001E                   getHSVval@sat 001C  
                   ?_getHSVval 000E                  ??_reset_timer 0003                       i2u154_40 001A  
                     i2u154_41 0016                       i2u155_40 002A                      _lost_flag 005B  
                     i2u155_41 0026                       _PIR0bits 0E33                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 005D  
                    _vfpfcnvrt 1910      __end_of_I2C_2_Master_Idle 2C0C      __end_of_I2C_2_Master_Init 2BE4  
    __end_of_I2C_2_Master_Read 2B24      __end_of_I2C_2_Master_Stop 2CD2    I2C_2_Master_Write@data_byte 0002  
           __end_of_getRGBCval 290A     __end_of_sendRGBCvalSerial4 285E              ??_color_read_Blue 0007  
                   vfpfcnvrt@c 0018              ___lmul@multiplier 0001                      copy_data0 267A  
                    copy_data1 269A      __end_of_sendStringSerial4 2800  __end_of_I2C_2_Master_RepStart 2CC8  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 001B                       __Lrparam 0000                     vfprintf@fp 0019  
                    scaleRGB@p 0032                     ?_vfpfcnvrt 000B            __end_of_reset_timer 2CB2  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001F  
                   sprintf@ret 0028                       ___xxtofl 1C1C                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6           _toggle_tricolour_LED 20D0                ___lwdiv@divisor 0003  
           __end_of_initUSART4 2C6E                ___lwdiv@counter 0007                       __ptext10 273A  
                     __ptext11 25F2                       __ptext20 2C50                       __ptext12 2316  
                     __ptext21 246A                       __ptext13 2198                       __ptext30 24FA  
                     __ptext22 28B4                       __ptext14 279E                       __ptext31 2576  
                     __ptext23 290A                       __ptext15 2C6E                       __ptext40 2BBA  
                     __ptext32 26D0                       __ptext24 295A                       __ptext16 1FFA  
                     __ptext41 2B8C                       __ptext33 23C6                       __ptext25 29AA  
                     __ptext17 1C1C                       __ptext42 2C0C                       __ptext34 2B58  
                     __ptext26 29FA                       __ptext18 1EF4                       __ptext43 2CA6  
                     __ptext35 2C30                       __ptext27 2CBE                       __ptext19 14E6  
                     __ptext44 2CB2                       __ptext36 2C9A                       __ptext28 2AE2  
                     __ptext37 2CC8                       __ptext29 0E1A                       __ptext38 2CD2  
                     __ptext39 2BE4                    getRGBCval@p 000C            main@measured_colour 009F  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       _scaleRGB 1FFA  
                  ??_getHSVval 0010                    getHSVval@p1 000E                    getHSVval@p2 000F  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 285E                     _INTCONbits 0FF2          ?_toggle_tricolour_LED 0001  
                ??_write_timer 0002                       intlevel2 0000                      sprintf@ap 002A  
                 _topGearRight 0057              _manoeuvre_pointer 00A7               ___lwmod@dividend 0001  
             ___lldiv@dividend 0001                 main@HSV_colour 0087                    _reset_timer 2CA6  
                  ??_vfpfcnvrt 000E               _color_click_init 2B58                    _topGearLeft 0058  
                     sprintf@f 002B                       sprintf@s 001D                     _SSP2DATPPS 0E1D  
             ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C                ___lwmod@divisor 0003  
              ___lwmod@counter 0005                _trail_manoeuvre 0100                    _return_flag 005C  
              _manoeuvre_count 005A                     _TX4STAbits 0EE8                _sendCharSerial4 2C6E  
          __end_of_write_timer 2CBE  
