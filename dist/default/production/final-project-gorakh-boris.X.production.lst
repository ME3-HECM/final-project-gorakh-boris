

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Feb 28 14:43:54 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 18/08/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F67K40 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   00165C                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _turnLeft90Delay
    85   00165C  00AF               	dw	175
    86                           
    87                           ;initializer for _turningGear
    88   00165E  2A                 	db	42
    89                           
    90                           ;initializer for _topGearRight
    91   00165F  20                 	db	32
    92                           
    93                           ;initializer for _topGearLeft
    94   001660  1E                 	db	30
    95                           
    96                           ;initializer for _rampDelay
    97   001661  08                 	db	8
    98                           
    99                           	psect	idataBANK0
   100   001630                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _squareDelay
   104   001630  012C               	dw	300
   105                           
   106                           ;initializer for _headbuttDelay
   107   001632  0046               	dw	70
   108                           
   109                           ;initializer for _turn180Delay
   110   001634  01FE               	dw	510
   111                           
   112                           ;initializer for _turnRight135Delay
   113   001636  012C               	dw	300
   114                           
   115                           ;initializer for _turnLeft135Delay
   116   001638  012C               	dw	300
   117                           
   118                           ;initializer for _turnRight90Delay
   119   00163A  00AF               	dw	175
   120   000000                     _TX4REG	set	3812
   121   000000                     _RC4STAbits	set	3815
   122   000000                     _SP4BRGH	set	3814
   123   000000                     _LATEbits	set	3965
   124   000000                     _TRISEbits	set	3973
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _LATFbits	set	3966
   128   000000                     _LATHbits	set	3968
   129   000000                     _TRISFbits	set	3974
   130   000000                     _TRISHbits	set	3976
   131   000000                     _SSP2CON2bits	set	3802
   132   000000                     _RX4PPS	set	3605
   133   000000                     _SSP2CLKPPS	set	3612
   134   000000                     _SSP2DATPPS	set	3613
   135   000000                     _RC7PPS	set	3689
   136   000000                     _RE2PPS	set	3700
   137   000000                     _LATAbits	set	3961
   138   000000                     _LATDbits	set	3964
   139   000000                     _TRISDbits	set	3972
   140   000000                     _T2PR	set	4028
   141   000000                     _T2CONbits	set	4029
   142   000000                     _CCPR2H	set	4006
   143   000000                     _CCPR1H	set	4010
   144   000000                     _TRISCbits	set	3971
   145   000000                     _TRISAbits	set	3969
   146   000000                     _LATCbits	set	3963
   147   000000                     _RE4PPS	set	3702
   148   000000                     _RG6PPS	set	3720
   149   000000                     _RD5PPS	set	3695
   150   000000                     _ANSELDbits	set	3751
   151   000000                     _SSP2ADD	set	3798
   152   000000                     _SSP2CON1bits	set	3801
   153   000000                     _CCPR4H	set	3873
   154   000000                     _CCPR3H	set	3877
   155   000000                     _TMR0L	set	4051
   156   000000                     _TMR0H	set	4052
   157   000000                     _T0CON0bits	set	4053
   158   000000                     _T0CON1bits	set	4054
   159   000000                     _T2CLKCONbits	set	4031
   160   000000                     _T2HLTbits	set	4030
   161   000000                     _CCP1CONbits	set	4011
   162   000000                     _CCPTMRS0bits	set	4013
   163   000000                     _CCP2CONbits	set	4007
   164   000000                     _CCP3CONbits	set	3878
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _RC4REG	set	3811
   167   000000                     _SP4BRGL	set	3813
   168   000000                     _TX4STAbits	set	3816
   169   000000                     _BAUD4CONbits	set	3817
   170   000000                     _SSP2CON2	set	3802
   171   000000                     _SSP2STAT	set	3800
   172   000000                     _SSP2BUF	set	3797
   173   000000                     _PIE0bits	set	3625
   174   000000                     _PIE4bits	set	3629
   175   000000                     _PIR4bits	set	3639
   176   000000                     _RC0PPS	set	3682
   177   000000                     _RD6PPS	set	3696
   178   000000                     _PIR0bits	set	3635
   179   000000                     _INTCONbits	set	4082
   180                           
   181                           	psect	smallconst
   182   000E00                     __psmallconst:
   183                           	callstack 0
   184   000E00  00                 	db	0
   185   000E01                     STR_1:
   186                           
   187                           ; BSR set to: 14
   188   000E01  25                 	db	37
   189   000E02  64                 	db	100	;'d'
   190   000E03  20                 	db	32
   191   000E04  0D                 	db	13
   192   000E05  00                 	db	0
   193   000E06  00                 	db	0	; dummy byte at the end
   194   000000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198   0013AE                     __pcinit:
   199                           	callstack 0
   200   0013AE                     start_initialization:
   201                           	callstack 0
   202   0013AE                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to BANK0 (12 bytes)
   206                           ; load TBLPTR registers with __pidataBANK0
   207   0013AE  0E30               	movlw	low __pidataBANK0
   208   0013B0  6EF6               	movwf	tblptrl,c
   209   0013B2  0E16               	movlw	high __pidataBANK0
   210   0013B4  6EF7               	movwf	tblptrh,c
   211   0013B6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   212   0013B8  6EF8               	movwf	tblptru,c
   213   0013BA  EE00  F0D4         	lfsr	0,__pdataBANK0
   214   0013BE  EE10 F00C          	lfsr	1,12
   215   0013C2                     copy_data0:
   216   0013C2  0009               	tblrd		*+
   217   0013C4  CFF5 FFEE          	movff	tablat,postinc0
   218   0013C8  50E5               	movf	postdec1,w,c
   219   0013CA  50E1               	movf	fsr1l,w,c
   220   0013CC  E1FA               	bnz	copy_data0
   221                           
   222                           ; Initialize objects allocated to COMRAM (6 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224   0013CE  0E5C               	movlw	low __pidataCOMRAM
   225   0013D0  6EF6               	movwf	tblptrl,c
   226   0013D2  0E16               	movlw	high __pidataCOMRAM
   227   0013D4  6EF7               	movwf	tblptrh,c
   228   0013D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229   0013D8  6EF8               	movwf	tblptru,c
   230   0013DA  EE00  F059         	lfsr	0,__pdataCOMRAM
   231   0013DE  EE10 F006          	lfsr	1,6
   232   0013E2                     copy_data1:
   233   0013E2  0009               	tblrd		*+
   234   0013E4  CFF5 FFEE          	movff	tablat,postinc0
   235   0013E8  50E5               	movf	postdec1,w,c
   236   0013EA  50E1               	movf	fsr1l,w,c
   237   0013EC  E1FA               	bnz	copy_data1
   238                           
   239                           ; Clear objects allocated to BANK0 (116 bytes)
   240   0013EE  EE00  F060         	lfsr	0,__pbssBANK0
   241   0013F2  0E74               	movlw	116
   242   0013F4                     clear_0:
   243   0013F4  6AEE               	clrf	postinc0,c
   244   0013F6  06E8               	decf	wreg,f,c
   245   0013F8  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to COMRAM (7 bytes)
   248   0013FA  EE00  F052         	lfsr	0,__pbssCOMRAM
   249   0013FE  0E07               	movlw	7
   250   001400                     clear_1:
   251   001400  6AEE               	clrf	postinc0,c
   252   001402  06E8               	decf	wreg,f,c
   253   001404  E1FD               	bnz	clear_1
   254   001406                     end_of_initialization:
   255                           	callstack 0
   256   001406                     __end_of__initialization:
   257                           	callstack 0
   258   001406  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   259   001408  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   260   00140A  0100               	movlb	0
   261   00140C  EF45  F009         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	bssCOMRAM
   264   000052                     __pbssCOMRAM:
   265                           	callstack 0
   266   000052                     _timer_count:
   267                           	callstack 0
   268   000052                     	ds	2
   269   000054                     _flags:
   270                           	callstack 0
   271   000054                     	ds	1
   272   000055                     _TxBufReadCnt:
   273                           	callstack 0
   274   000055                     	ds	1
   275   000056                     _TxBufWriteCnt:
   276                           	callstack 0
   277   000056                     	ds	1
   278   000057                     _RxBufReadCnt:
   279                           	callstack 0
   280   000057                     	ds	1
   281   000058                     _RxBufWriteCnt:
   282                           	callstack 0
   283   000058                     	ds	1
   284                           
   285                           	psect	dataCOMRAM
   286   000059                     __pdataCOMRAM:
   287                           	callstack 0
   288   000059                     _turnLeft90Delay:
   289                           	callstack 0
   290   000059                     	ds	2
   291   00005B                     _turningGear:
   292                           	callstack 0
   293   00005B                     	ds	1
   294   00005C                     _topGearRight:
   295                           	callstack 0
   296   00005C                     	ds	1
   297   00005D                     _topGearLeft:
   298                           	callstack 0
   299   00005D                     	ds	1
   300   00005E                     _rampDelay:
   301                           	callstack 0
   302   00005E                     	ds	1
   303                           
   304                           	psect	bssBANK0
   305   000060                     __pbssBANK0:
   306                           	callstack 0
   307   000060                     _EUSART4TXbuf:
   308                           	callstack 0
   309   000060                     	ds	60
   310   00009C                     _dbuf:
   311                           	callstack 0
   312   00009C                     	ds	32
   313   0000BC                     _EUSART4RXbuf:
   314                           	callstack 0
   315   0000BC                     	ds	20
   316   0000D0                     _width:
   317                           	callstack 0
   318   0000D0                     	ds	2
   319   0000D2                     _prec:
   320                           	callstack 0
   321   0000D2                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324   0000D4                     __pdataBANK0:
   325                           	callstack 0
   326   0000D4                     _squareDelay:
   327                           	callstack 0
   328   0000D4                     	ds	2
   329   0000D6                     _headbuttDelay:
   330                           	callstack 0
   331   0000D6                     	ds	2
   332   0000D8                     _turn180Delay:
   333                           	callstack 0
   334   0000D8                     	ds	2
   335   0000DA                     _turnRight135Delay:
   336                           	callstack 0
   337   0000DA                     	ds	2
   338   0000DC                     _turnLeft135Delay:
   339                           	callstack 0
   340   0000DC                     	ds	2
   341   0000DE                     _turnRight90Delay:
   342                           	callstack 0
   343   0000DE                     	ds	2
   344                           
   345                           	psect	cstackCOMRAM
   346   000001                     __pcstackCOMRAM:
   347                           	callstack 0
   348   000001                     ??_lights_flashing:
   349   000001                     ??_I2C_2_Master_Idle:
   350   000001                     ?___awdiv:
   351                           	callstack 0
   352   000001                     ?___awmod:
   353                           	callstack 0
   354   000001                     sendCharSerial4@charToSend:
   355                           	callstack 0
   356   000001                     initDCmotorsPWM@PWMperiod:
   357                           	callstack 0
   358   000001                     ___awdiv@dividend:
   359                           	callstack 0
   360   000001                     ___awmod@dividend:
   361                           	callstack 0
   362   000001                     fputc@c:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366   000001                     	ds	1
   367   000002                     I2C_2_Master_Write@data_byte:
   368                           	callstack 0
   369   000002                     sendStringSerial4@string:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x1
   373   000002                     	ds	1
   374   000003                     color_writetoaddr@value:
   375                           	callstack 0
   376   000003                     fputc@fp:
   377                           	callstack 0
   378   000003                     ___awdiv@divisor:
   379                           	callstack 0
   380   000003                     ___awmod@divisor:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384   000003                     	ds	1
   385   000004                     ??_fputc:
   386   000004                     color_writetoaddr@address:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x3
   390   000004                     	ds	1
   391   000005                     ??_color_click_init:
   392   000005                     ___awdiv@counter:
   393                           	callstack 0
   394   000005                     ___awmod@counter:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x4
   398   000005                     	ds	1
   399   000006                     ___awdiv@sign:
   400                           	callstack 0
   401   000006                     ___awmod@sign:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x5
   405   000006                     	ds	1
   406   000007                     ?_abs:
   407                           	callstack 0
   408   000007                     ___awdiv@quotient:
   409                           	callstack 0
   410   000007                     abs@a:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x6
   414   000007                     	ds	2
   415   000009                     ??_abs:
   416                           
   417                           ; 1 bytes @ 0x8
   418   000009                     	ds	2
   419   00000B                     vfpfcnvrt@fp:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0xA
   423   00000B                     	ds	1
   424   00000C                     vfpfcnvrt@fmt:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0xB
   428   00000C                     	ds	1
   429   00000D                     vfpfcnvrt@ap:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0xC
   433   00000D                     	ds	1
   434   00000E                     ??_vfpfcnvrt:
   435                           
   436                           ; 1 bytes @ 0xD
   437   00000E                     	ds	1
   438   00000F                     vfpfcnvrt@done:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0xE
   442   00000F                     	ds	1
   443   000010                     vfpfcnvrt@cp:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xF
   447   000010                     	ds	1
   448   000011                     vfpfcnvrt@convarg:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x10
   452   000011                     	ds	4
   453   000015                     vfpfcnvrt@c:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x14
   457   000015                     	ds	1
   458   000016                     ?_vfprintf:
   459                           	callstack 0
   460   000016                     vfprintf@fp:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x15
   464   000016                     	ds	1
   465   000017                     vfprintf@fmt:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x16
   469   000017                     	ds	1
   470   000018                     vfprintf@ap:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x17
   474   000018                     	ds	1
   475   000019                     vfprintf@cfmt:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x18
   479   000019                     	ds	1
   480   00001A                     ?_sprintf:
   481                           	callstack 0
   482   00001A                     sprintf@s:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x19
   486   00001A                     	ds	1
   487   00001B                     sprintf@fmt:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x1A
   491   00001B                     	ds	3
   492   00001E                     sprintf@ap:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x1D
   496   00001E                     	ds	1
   497   00001F                     sprintf@f:
   498                           	callstack 0
   499                           
   500                           ; 12 bytes @ 0x1E
   501   00001F                     	ds	12
   502   00002B                     sendIntSerial4@integer:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x2A
   506   00002B                     	ds	2
   507   00002D                     sendIntSerial4@string:
   508                           	callstack 0
   509                           
   510                           ; 17 bytes @ 0x2C
   511   00002D                     	ds	17
   512   00003E                     ??_main:
   513                           
   514                           ; 1 bytes @ 0x3D
   515   00003E                     	ds	2
   516   000040                     main@motorL:
   517                           	callstack 0
   518                           
   519                           ; 9 bytes @ 0x3F
   520   000040                     	ds	9
   521   000049                     main@motorR:
   522                           	callstack 0
   523                           
   524                           ; 9 bytes @ 0x48
   525   000049                     	ds	9
   526                           
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 26 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  motorR          9   72[COMRAM] struct DC_motor
   537 ;;  motorL          9   63[COMRAM] struct DC_motor
   538 ;;  PWMcycle        2    0        unsigned int 
   539 ;;  backtrack       1    0        unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   550 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   552 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   553 ;;Total ram usage:       20 bytes
   554 ;; Hardware stack levels required when called: 7
   555 ;; This function calls:
   556 ;;		_Timer0_init
   557 ;;		_buggy_lights_init
   558 ;;		_color_click_init
   559 ;;		_initDCmotorsPWM
   560 ;;		_initUSART4
   561 ;;		_lights_flashing
   562 ;;		_sendIntSerial4
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text0
   569   00128A                     __ptext0:
   570                           	callstack 0
   571   00128A                     _main:
   572                           	callstack 24
   573   00128A                     
   574                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   575   00128A  0E52               	movlw	82
   576   00128C  6E3F               	movwf	(??_main+1)^0,c
   577   00128E  0E2B               	movlw	43
   578   001290  6E3E               	movwf	??_main^0,c
   579   001292  0E00               	movlw	0
   580   001294                     u1707:
   581   001294  2EE8               	decfsz	wreg,f,c
   582   001296  D7FE               	bra	u1707
   583   001298  2E3E               	decfsz	??_main^0,f,c
   584   00129A  D7FC               	bra	u1707
   585   00129C  2E3F               	decfsz	(??_main+1)^0,f,c
   586   00129E  D7FA               	bra	u1707
   587   0012A0  D000               	nop2	
   588   0012A2                     
   589                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   590   0012A2  0E00               	movlw	0
   591   0012A4  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   592   0012A6  0E63               	movlw	99
   593   0012A8  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   594   0012AA  EC8F  F009         	call	_initDCmotorsPWM	;wreg free
   595   0012AE                     
   596                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   597   0012AE  0E00               	movlw	0
   598   0012B0  6E40               	movwf	main@motorL^0,c
   599   0012B2                     
   600                           ;main.c: 35:     motorL.direction = 1;
   601   0012B2  0E01               	movlw	1
   602   0012B4  6E41               	movwf	(main@motorL+1)^0,c
   603   0012B6                     
   604                           ;main.c: 36:     motorL.brakemode = 1;
   605   0012B6  0E01               	movlw	1
   606   0012B8  6E42               	movwf	(main@motorL+2)^0,c
   607   0012BA                     
   608                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   609   0012BA  0E00               	movlw	0
   610   0012BC  6E44               	movwf	(main@motorL+4)^0,c
   611   0012BE  0E63               	movlw	99
   612   0012C0  6E43               	movwf	(main@motorL+3)^0,c
   613   0012C2                     
   614                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   615   0012C2  0EAA               	movlw	170
   616   0012C4  6E45               	movwf	(main@motorL+5)^0,c
   617   0012C6  0E0F               	movlw	15
   618   0012C8  6E46               	movwf	(main@motorL+6)^0,c
   619   0012CA                     
   620                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   621   0012CA  0EA6               	movlw	166
   622   0012CC  6E47               	movwf	(main@motorL+7)^0,c
   623   0012CE  0E0F               	movlw	15
   624   0012D0  6E48               	movwf	(main@motorL+8)^0,c
   625   0012D2                     
   626                           ;main.c: 41:     motorR.power = 0;
   627   0012D2  0E00               	movlw	0
   628   0012D4  6E49               	movwf	main@motorR^0,c
   629   0012D6                     
   630                           ;main.c: 42:     motorR.direction = 1;
   631   0012D6  0E01               	movlw	1
   632   0012D8  6E4A               	movwf	(main@motorR+1)^0,c
   633   0012DA                     
   634                           ;main.c: 43:     motorR.brakemode = 1;
   635   0012DA  0E01               	movlw	1
   636   0012DC  6E4B               	movwf	(main@motorR+2)^0,c
   637   0012DE                     
   638                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   639   0012DE  0E00               	movlw	0
   640   0012E0  6E4D               	movwf	(main@motorR+4)^0,c
   641   0012E2  0E63               	movlw	99
   642   0012E4  6E4C               	movwf	(main@motorR+3)^0,c
   643   0012E6                     
   644                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   645   0012E6  0E25               	movlw	37
   646   0012E8  6E4E               	movwf	(main@motorR+5)^0,c
   647   0012EA  0E0F               	movlw	15
   648   0012EC  6E4F               	movwf	(main@motorR+6)^0,c
   649   0012EE                     
   650                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   651   0012EE  0E21               	movlw	33
   652   0012F0  6E50               	movwf	(main@motorR+7)^0,c
   653   0012F2  0E0F               	movlw	15
   654   0012F4  6E51               	movwf	(main@motorR+8)^0,c
   655   0012F6                     
   656                           ;main.c: 48:     buggy_lights_init();
   657   0012F6  ECA1  F00A         	call	_buggy_lights_init	;wreg free
   658   0012FA                     
   659                           ;main.c: 49:     color_click_init();
   660   0012FA  EC5D  F00A         	call	_color_click_init	;wreg free
   661   0012FE                     
   662                           ;main.c: 50:     initUSART4();
   663   0012FE  ECFD  F00A         	call	_initUSART4	;wreg free
   664   001302                     
   665                           ;main.c: 51:     Timer0_init();
   666   001302  ECCA  F00A         	call	_Timer0_init	;wreg free
   667   001306                     l2450:
   668                           
   669                           ;main.c: 65:         sendIntSerial4((int)timer_count);
   670   001306  C052  F02B         	movff	_timer_count,sendIntSerial4@integer
   671   00130A  C053  F02C         	movff	_timer_count+1,sendIntSerial4@integer+1
   672   00130E  ECEE  F00A         	call	_sendIntSerial4	;wreg free
   673   001312                     
   674                           ;main.c: 66:         lights_flashing();
   675   001312  ECF8  F008         	call	_lights_flashing	;wreg free
   676   001316  EF83  F009         	goto	l2450
   677   00131A  EF16  F000         	goto	start
   678   00131E                     __end_of_main:
   679                           	callstack 0
   680                           
   681 ;; *************** function _sendIntSerial4 *****************
   682 ;; Defined at:
   683 ;;		line 44 in file "serial.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  integer         2   42[COMRAM] int 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  string         17   44[COMRAM] unsigned char [17]
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;Total ram usage:       19 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; Hardware stack levels required when called: 6
   704 ;; This function calls:
   705 ;;		_sendStringSerial4
   706 ;;		_sprintf
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text1
   713   0015DC                     __ptext1:
   714                           	callstack 0
   715   0015DC                     _sendIntSerial4:
   716                           	callstack 24
   717   0015DC                     
   718                           ;serial.c: 45:     char string[sizeof(int) * 8 + 1];;serial.c: 46:     sprintf(string, "
      +                          %d \r", integer);
   719   0015DC  0E2D               	movlw	low sendIntSerial4@string
   720   0015DE  6E1A               	movwf	sprintf@s^0,c
   721   0015E0  0E01               	movlw	low STR_1
   722   0015E2  6E1B               	movwf	sprintf@fmt^0,c
   723   0015E4  C02B  F01C         	movff	sendIntSerial4@integer,?_sprintf+2
   724   0015E8  C02C  F01D         	movff	sendIntSerial4@integer+1,?_sprintf+3
   725   0015EC  EC29  F00A         	call	_sprintf	;wreg free
   726   0015F0                     
   727                           ;serial.c: 47:     sendStringSerial4(string);
   728   0015F0  0E2D               	movlw	low sendIntSerial4@string
   729   0015F2  6E02               	movwf	sendStringSerial4@string^0,c
   730   0015F4  EC77  F00A         	call	_sendStringSerial4	;wreg free
   731   0015F8  0012               	return		;funcret
   732   0015FA                     __end_of_sendIntSerial4:
   733                           	callstack 0
   734                           
   735 ;; *************** function _sprintf *****************
   736 ;; Defined at:
   737 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  s               1   25[COMRAM] PTR unsigned char 
   740 ;;		 -> sendIntSerial4@string(17), 
   741 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   742 ;;		 -> STR_1(5), 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  f              12   30[COMRAM] struct _IO_FILE
   745 ;;  ret             2    0        int 
   746 ;;  ap              1   29[COMRAM] PTR void [1]
   747 ;;		 -> ?_sprintf(2), 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2   25[COMRAM] int 
   750 ;; Registers used:
   751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   761 ;;Total ram usage:       17 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 5
   764 ;; This function calls:
   765 ;;		_vfprintf
   766 ;; This function is called by:
   767 ;;		_sendIntSerial4
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text2
   772   001452                     __ptext2:
   773                           	callstack 0
   774   001452                     _sprintf:
   775                           	callstack 24
   776   001452  0E1C               	movlw	low (?_sprintf+2)
   777   001454  6E1E               	movwf	sprintf@ap^0,c
   778   001456  C01A  F01F         	movff	sprintf@s,sprintf@f
   779   00145A  0E00               	movlw	0
   780   00145C  6E23               	movwf	(sprintf@f+4)^0,c
   781   00145E  0E00               	movlw	0
   782   001460  6E22               	movwf	(sprintf@f+3)^0,c
   783   001462  0E00               	movlw	0
   784   001464  6E2A               	movwf	(sprintf@f+11)^0,c
   785   001466  0E00               	movlw	0
   786   001468  6E29               	movwf	(sprintf@f+10)^0,c
   787   00146A  0E1F               	movlw	low sprintf@f
   788   00146C  6E16               	movwf	vfprintf@fp^0,c
   789   00146E  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   790   001472  0E1E               	movlw	low sprintf@ap
   791   001474  6E18               	movwf	vfprintf@ap^0,c
   792   001476  EC08  F00A         	call	_vfprintf	;wreg free
   793   00147A  501A               	movf	sprintf@s^0,w,c
   794   00147C  2422               	addwf	(sprintf@f+3)^0,w,c
   795   00147E  6ED9               	movwf	fsr2l,c
   796   001480  6ADA               	clrf	fsr2h,c
   797   001482  6ADF               	clrf	indf2,c
   798   001484  0012               	return		;funcret
   799   001486                     __end_of_sprintf:
   800                           	callstack 0
   801                           
   802 ;; *************** function _vfprintf *****************
   803 ;; Defined at:
   804 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
   807 ;;		 -> sprintf@f(12), 
   808 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   809 ;;		 -> STR_1(5), 
   810 ;;  ap              1   23[COMRAM] PTR PTR void 
   811 ;;		 -> sprintf@ap(1), 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   814 ;;		 -> STR_1(5), 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2   21[COMRAM] int 
   817 ;; Registers used:
   818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   824 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;Total ram usage:        4 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 4
   831 ;; This function calls:
   832 ;;		_vfpfcnvrt
   833 ;; This function is called by:
   834 ;;		_sprintf
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text3
   839   001410                     __ptext3:
   840                           	callstack 0
   841   001410                     _vfprintf:
   842                           	callstack 24
   843   001410                     
   844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   845   001410  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
   846                           
   847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   848   001414  EF14  F00A         	goto	l2186
   849   001418                     l2184:
   850                           
   851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   852   001418  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
   853   00141C  0E19               	movlw	low vfprintf@cfmt
   854   00141E  6E0C               	movwf	vfpfcnvrt@fmt^0,c
   855   001420  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
   856   001424  EC04  F007         	call	_vfpfcnvrt	;wreg free
   857   001428                     l2186:
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   860   001428  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
   861   00142C                     	if	1	;There is more than 1 active tblptr byte
   862   00142C  0E0E               	movlw	high __smallconst
   863   00142E  6EF7               	movwf	tblptrh,c
   864   001430                     	endif
   865   001430                     	if	0	;tblptru may be non-zero
   866   001430                     	endif
   867   001430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   868   001430  0E00               	movlw	low (__smallconst shr (0+16))
   869   001432  6EF8               	movwf	tblptru,c
   870   001434                     	endif
   871   001434  0008               	tblrd		*
   872   001436  50F5               	movf	tablat,w,c
   873   001438  0900               	iorlw	0
   874   00143A  A4D8               	btfss	status,2,c
   875   00143C  EF22  F00A         	goto	u1041
   876   001440  EF24  F00A         	goto	u1040
   877   001444                     u1041:
   878   001444  EF0C  F00A         	goto	l2184
   879   001448                     u1040:
   880   001448                     
   881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   882   001448  0E00               	movlw	0
   883   00144A  6E17               	movwf	(?_vfprintf+1)^0,c
   884   00144C  0E00               	movlw	0
   885   00144E  6E16               	movwf	?_vfprintf^0,c
   886   001450  0012               	return		;funcret
   887   001452                     __end_of_vfprintf:
   888                           	callstack 0
   889                           
   890 ;; *************** function _vfpfcnvrt *****************
   891 ;; Defined at:
   892 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
   895 ;;		 -> sprintf@f(12), 
   896 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
   897 ;;		 -> vfprintf@cfmt(1), 
   898 ;;  ap              1   12[COMRAM] PTR PTR void 
   899 ;;		 -> sprintf@ap(1), 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  convarg         4   16[COMRAM] struct .
   902 ;;  c               1   20[COMRAM] unsigned char 
   903 ;;  cp              1   15[COMRAM] PTR unsigned char 
   904 ;;		 -> STR_1(5), 
   905 ;;  done            1   14[COMRAM] _Bool 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;Total ram usage:       11 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 3
   922 ;; This function calls:
   923 ;;		___awdiv
   924 ;;		___awmod
   925 ;;		_abs
   926 ;;		_fputc
   927 ;; This function is called by:
   928 ;;		_vfprintf
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text4
   933   000E08                     __ptext4:
   934                           	callstack 0
   935   000E08                     _vfpfcnvrt:
   936                           	callstack 24
   937   000E08                     
   938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   939   000E08  500C               	movf	vfpfcnvrt@fmt^0,w,c
   940   000E0A  6ED9               	movwf	fsr2l,c
   941   000E0C  6ADA               	clrf	fsr2h,c
   942   000E0E  CFDF FFF6          	movff	indf2,tblptrl
   943   000E12                     	if	1	;There is more than 1 active tblptr byte
   944   000E12  0E0E               	movlw	high __smallconst
   945   000E14  6EF7               	movwf	tblptrh,c
   946   000E16                     	endif
   947   000E16                     	if	0	;tblptru may be non-zero
   948   000E16                     	endif
   949   000E16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   950   000E16  0E00               	movlw	low (__smallconst shr (0+16))
   951   000E18  6EF8               	movwf	tblptru,c
   952   000E1A                     	endif
   953   000E1A  0008               	tblrd		*
   954   000E1C  50F5               	movf	tablat,w,c
   955   000E1E  0A25               	xorlw	37
   956   000E20  A4D8               	btfss	status,2,c
   957   000E22  EF15  F007         	goto	u921
   958   000E26  EF17  F007         	goto	u920
   959   000E2A                     u921:
   960   000E2A  EFD5  F007         	goto	l2160
   961   000E2E                     u920:
   962   000E2E                     
   963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   964   000E2E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   965   000E30  6ED9               	movwf	fsr2l,c
   966   000E32  6ADA               	clrf	fsr2h,c
   967   000E34  2ADF               	incf	indf2,f,c
   968   000E36                     
   969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   970   000E36  0E00               	movlw	0
   971   000E38  0100               	movlb	0	; () banked
   972   000E3A  6FD1               	movwf	(_width+1)& (0+255),b
   973   000E3C  0E00               	movlw	0
   974   000E3E  6FD0               	movwf	_width& (0+255),b
   975   000E40  C0D0  F054         	movff	_width,_flags
   976   000E44                     
   977                           ; BSR set to: 0
   978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   979   000E44  69D2               	setf	_prec& (0+255),b
   980   000E46  69D3               	setf	(_prec+1)& (0+255),b
   981   000E48                     
   982                           ; BSR set to: 0
   983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   984   000E48  500C               	movf	vfpfcnvrt@fmt^0,w,c
   985   000E4A  6ED9               	movwf	fsr2l,c
   986   000E4C  6ADA               	clrf	fsr2h,c
   987   000E4E  50DF               	movf	indf2,w,c
   988   000E50  6E10               	movwf	vfpfcnvrt@cp^0,c
   989   000E52                     
   990                           ; BSR set to: 0
   991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   992   000E52  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   993   000E56                     	if	1	;There is more than 1 active tblptr byte
   994   000E56  0E0E               	movlw	high __smallconst
   995   000E58  6EF7               	movwf	tblptrh,c
   996   000E5A                     	endif
   997   000E5A                     	if	0	;tblptru may be non-zero
   998   000E5A                     	endif
   999   000E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1000   000E5A  0E00               	movlw	low (__smallconst shr (0+16))
  1001   000E5C  6EF8               	movwf	tblptru,c
  1002   000E5E                     	endif
  1003   000E5E  0008               	tblrd		*
  1004   000E60  50F5               	movf	tablat,w,c
  1005   000E62  0A64               	xorlw	100
  1006   000E64  B4D8               	btfsc	status,2,c
  1007   000E66  EF37  F007         	goto	u931
  1008   000E6A  EF39  F007         	goto	u930
  1009   000E6E                     u931:
  1010   000E6E  EF49  F007         	goto	l2130
  1011   000E72                     u930:
  1012   000E72                     
  1013                           ; BSR set to: 0
  1014   000E72  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1015   000E76                     	if	1	;There is more than 1 active tblptr byte
  1016   000E76  0E0E               	movlw	high __smallconst
  1017   000E78  6EF7               	movwf	tblptrh,c
  1018   000E7A                     	endif
  1019   000E7A                     	if	0	;tblptru may be non-zero
  1020   000E7A                     	endif
  1021   000E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1022   000E7A  0E00               	movlw	low (__smallconst shr (0+16))
  1023   000E7C  6EF8               	movwf	tblptru,c
  1024   000E7E                     	endif
  1025   000E7E  0008               	tblrd		*
  1026   000E80  50F5               	movf	tablat,w,c
  1027   000E82  0A69               	xorlw	105
  1028   000E84  A4D8               	btfss	status,2,c
  1029   000E86  EF47  F007         	goto	u941
  1030   000E8A  EF49  F007         	goto	u940
  1031   000E8E                     u941:
  1032   000E8E  EFCF  F007         	goto	l2156
  1033   000E92                     u940:
  1034   000E92                     l2130:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1038   000E92  500D               	movf	vfpfcnvrt@ap^0,w,c
  1039   000E94  6ED9               	movwf	fsr2l,c
  1040   000E96  6ADA               	clrf	fsr2h,c
  1041   000E98  0E02               	movlw	2
  1042   000E9A  26DF               	addwf	indf2,f,c
  1043   000E9C  5CDF               	subwf	indf2,w,c
  1044   000E9E  6ED9               	movwf	fsr2l,c
  1045   000EA0  6ADA               	clrf	fsr2h,c
  1046   000EA2  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1047   000EA6  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1048   000EAA                     
  1049                           ; BSR set to: 0
  1050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1051   000EAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1052   000EAC  6ED9               	movwf	fsr2l,c
  1053   000EAE  6ADA               	clrf	fsr2h,c
  1054   000EB0  2810               	incf	vfpfcnvrt@cp^0,w,c
  1055   000EB2  6EDF               	movwf	indf2,c
  1056   000EB4                     
  1057                           ; BSR set to: 0
  1058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1059   000EB4  0E20               	movlw	32
  1060   000EB6  6E15               	movwf	vfpfcnvrt@c^0,c
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1063   000EB8  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1064   000EBA  EF61  F007         	goto	u951
  1065   000EBE  EF64  F007         	goto	u950
  1066   000EC2                     u951:
  1067   000EC2  0E01               	movlw	1
  1068   000EC4  EF65  F007         	goto	u960
  1069   000EC8                     u950:
  1070   000EC8  0E00               	movlw	0
  1071   000ECA                     u960:
  1072   000ECA  6E0F               	movwf	vfpfcnvrt@done^0,c
  1073   000ECC                     l2136:
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1076   000ECC  0615               	decf	vfpfcnvrt@c^0,f,c
  1077   000ECE  5015               	movf	vfpfcnvrt@c^0,w,c
  1078   000ED0  0F9C               	addlw	low _dbuf
  1079   000ED2  6ED9               	movwf	fsr2l,c
  1080   000ED4  6ADA               	clrf	fsr2h,c
  1081   000ED6  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1082   000EDA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1083   000EDE  0E00               	movlw	0
  1084   000EE0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1085   000EE2  0E0A               	movlw	10
  1086   000EE4  6E03               	movwf	___awmod@divisor^0,c
  1087   000EE6  EC4B  F008         	call	___awmod	;wreg free
  1088   000EEA  C001  F007         	movff	?___awmod,abs@a
  1089   000EEE  C002  F008         	movff	?___awmod+1,abs@a+1
  1090   000EF2  EC43  F00A         	call	_abs	;wreg free
  1091   000EF6  5007               	movf	?_abs^0,w,c
  1092   000EF8  0F30               	addlw	48
  1093   000EFA  6EDF               	movwf	indf2,c
  1094   000EFC                     
  1095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1096   000EFC  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1097   000F00  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1098   000F04  0E00               	movlw	0
  1099   000F06  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1100   000F08  0E0A               	movlw	10
  1101   000F0A  6E03               	movwf	___awdiv@divisor^0,c
  1102   000F0C  ECE9  F007         	call	___awdiv	;wreg free
  1103   000F10  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1104   000F14  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1105   000F18                     
  1106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1107   000F18  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1108   000F1A  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1109   000F1C  B4D8               	btfsc	status,2,c
  1110   000F1E  EF93  F007         	goto	u971
  1111   000F22  EF95  F007         	goto	u970
  1112   000F26                     u971:
  1113   000F26  EF9D  F007         	goto	l2144
  1114   000F2A                     u970:
  1115   000F2A  5015               	movf	vfpfcnvrt@c^0,w,c
  1116   000F2C  A4D8               	btfss	status,2,c
  1117   000F2E  EF9B  F007         	goto	u981
  1118   000F32  EF9D  F007         	goto	u980
  1119   000F36                     u981:
  1120   000F36  EF66  F007         	goto	l2136
  1121   000F3A                     u980:
  1122   000F3A                     l2144:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1125   000F3A  5015               	movf	vfpfcnvrt@c^0,w,c
  1126   000F3C  B4D8               	btfsc	status,2,c
  1127   000F3E  EFA3  F007         	goto	u991
  1128   000F42  EFA5  F007         	goto	u990
  1129   000F46                     u991:
  1130   000F46  EFC4  F007         	goto	l2154
  1131   000F4A                     u990:
  1132   000F4A  500F               	movf	vfpfcnvrt@done^0,w,c
  1133   000F4C  B4D8               	btfsc	status,2,c
  1134   000F4E  EFAB  F007         	goto	u1001
  1135   000F52  EFAD  F007         	goto	u1000
  1136   000F56                     u1001:
  1137   000F56  EFC4  F007         	goto	l2154
  1138   000F5A                     u1000:
  1139   000F5A                     
  1140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1141   000F5A  0615               	decf	vfpfcnvrt@c^0,f,c
  1142   000F5C  5015               	movf	vfpfcnvrt@c^0,w,c
  1143   000F5E  0F9C               	addlw	low _dbuf
  1144   000F60  6ED9               	movwf	fsr2l,c
  1145   000F62  6ADA               	clrf	fsr2h,c
  1146   000F64  0E2D               	movlw	45
  1147   000F66  6EDF               	movwf	indf2,c
  1148   000F68  EFC4  F007         	goto	l2154
  1149   000F6C                     l2150:
  1150                           
  1151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1152   000F6C  5015               	movf	vfpfcnvrt@c^0,w,c
  1153   000F6E  0F9C               	addlw	low _dbuf
  1154   000F70  6ED9               	movwf	fsr2l,c
  1155   000F72  6ADA               	clrf	fsr2h,c
  1156   000F74  50DF               	movf	indf2,w,c
  1157   000F76  6E0E               	movwf	??_vfpfcnvrt^0,c
  1158   000F78  500E               	movf	??_vfpfcnvrt^0,w,c
  1159   000F7A  6E01               	movwf	fputc@c^0,c
  1160   000F7C  6A02               	clrf	(fputc@c+1)^0,c
  1161   000F7E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1162   000F82  ECA3  F008         	call	_fputc	;wreg free
  1163   000F86  2A15               	incf	vfpfcnvrt@c^0,f,c
  1164   000F88                     l2154:
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1167   000F88  0E20               	movlw	32
  1168   000F8A  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1169   000F8C  A4D8               	btfss	status,2,c
  1170   000F8E  EFCB  F007         	goto	u1011
  1171   000F92  EFCD  F007         	goto	u1010
  1172   000F96                     u1011:
  1173   000F96  EFB6  F007         	goto	l2150
  1174   000F9A                     u1010:
  1175   000F9A  EFE8  F007         	goto	l1246
  1176   000F9E                     l2156:
  1177                           
  1178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1179   000F9E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1180   000FA0  6ED9               	movwf	fsr2l,c
  1181   000FA2  6ADA               	clrf	fsr2h,c
  1182   000FA4  2ADF               	incf	indf2,f,c
  1183   000FA6  EFE8  F007         	goto	l1246
  1184   000FAA                     l2160:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1187   000FAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1188   000FAC  6ED9               	movwf	fsr2l,c
  1189   000FAE  6ADA               	clrf	fsr2h,c
  1190   000FB0  CFDF FFF6          	movff	indf2,tblptrl
  1191   000FB4                     	if	1	;There is more than 1 active tblptr byte
  1192   000FB4  0E0E               	movlw	high __smallconst
  1193   000FB6  6EF7               	movwf	tblptrh,c
  1194   000FB8                     	endif
  1195   000FB8                     	if	0	;tblptru may be non-zero
  1196   000FB8                     	endif
  1197   000FB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1198   000FB8  0E00               	movlw	low (__smallconst shr (0+16))
  1199   000FBA  6EF8               	movwf	tblptru,c
  1200   000FBC                     	endif
  1201   000FBC  0008               	tblrd		*
  1202   000FBE  50F5               	movf	tablat,w,c
  1203   000FC0  6E01               	movwf	fputc@c^0,c
  1204   000FC2  6A02               	clrf	(fputc@c+1)^0,c
  1205   000FC4  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1206   000FC8  ECA3  F008         	call	_fputc	;wreg free
  1207   000FCC  EFCF  F007         	goto	l2156
  1208   000FD0                     l1246:
  1209   000FD0  0012               	return		;funcret
  1210   000FD2                     __end_of_vfpfcnvrt:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _fputc *****************
  1214 ;; Defined at:
  1215 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  c               2    0[COMRAM] int 
  1218 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1219 ;;		 -> sprintf@f(12), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    0[COMRAM] int 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1231 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;Total ram usage:        8 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 2
  1238 ;; This function calls:
  1239 ;;		_putch
  1240 ;; This function is called by:
  1241 ;;		_vfpfcnvrt
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text5
  1246   001146                     __ptext5:
  1247                           	callstack 0
  1248   001146                     _fputc:
  1249                           	callstack 24
  1250   001146  5003               	movf	fputc@fp^0,w,c
  1251   001148  B4D8               	btfsc	status,2,c
  1252   00114A  EFA9  F008         	goto	u871
  1253   00114E  EFAB  F008         	goto	u870
  1254   001152                     u871:
  1255   001152  EFB3  F008         	goto	l2102
  1256   001156                     u870:
  1257   001156  5003               	movf	fputc@fp^0,w,c
  1258   001158  A4D8               	btfss	status,2,c
  1259   00115A  EFB1  F008         	goto	u881
  1260   00115E  EFB3  F008         	goto	u880
  1261   001162                     u881:
  1262   001162  EFB8  F008         	goto	l2104
  1263   001166                     u880:
  1264   001166                     l2102:
  1265   001166  5001               	movf	fputc@c^0,w,c
  1266   001168  EC31  F00B         	call	_putch
  1267   00116C  EFF7  F008         	goto	l1271
  1268   001170                     l2104:
  1269   001170  5003               	movf	fputc@fp^0,w,c
  1270   001172  6ED9               	movwf	fsr2l,c
  1271   001174  6ADA               	clrf	fsr2h,c
  1272   001176  0E0A               	movlw	10
  1273   001178  26D9               	addwf	fsr2l,f,c
  1274   00117A  50DE               	movf	postinc2,w,c
  1275   00117C  10DE               	iorwf	postinc2,w,c
  1276   00117E  B4D8               	btfsc	status,2,c
  1277   001180  EFC4  F008         	goto	u891
  1278   001184  EFC6  F008         	goto	u890
  1279   001188                     u891:
  1280   001188  EFDF  F008         	goto	l2108
  1281   00118C                     u890:
  1282   00118C  5003               	movf	fputc@fp^0,w,c
  1283   00118E  6ED9               	movwf	fsr2l,c
  1284   001190  6ADA               	clrf	fsr2h,c
  1285   001192  0E0A               	movlw	10
  1286   001194  26D9               	addwf	fsr2l,f,c
  1287   001196  5003               	movf	fputc@fp^0,w,c
  1288   001198  6EE1               	movwf	fsr1l,c
  1289   00119A  6AE2               	clrf	fsr1h,c
  1290   00119C  0E03               	movlw	3
  1291   00119E  26E1               	addwf	fsr1l,f,c
  1292   0011A0  50DE               	movf	postinc2,w,c
  1293   0011A2  5CE6               	subwf	postinc1,w,c
  1294   0011A4  50E6               	movf	postinc1,w,c
  1295   0011A6  0A80               	xorlw	128
  1296   0011A8  6E08               	movwf	(??_fputc+4)^0,c
  1297   0011AA  50DE               	movf	postinc2,w,c
  1298   0011AC  0A80               	xorlw	128
  1299   0011AE  5808               	subwfb	(??_fputc+4)^0,w,c
  1300   0011B0  B0D8               	btfsc	status,0,c
  1301   0011B2  EFDD  F008         	goto	u901
  1302   0011B6  EFDF  F008         	goto	u900
  1303   0011BA                     u901:
  1304   0011BA  EFF7  F008         	goto	l1271
  1305   0011BE                     u900:
  1306   0011BE                     l2108:
  1307   0011BE  5003               	movf	fputc@fp^0,w,c
  1308   0011C0  6ED9               	movwf	fsr2l,c
  1309   0011C2  6ADA               	clrf	fsr2h,c
  1310   0011C4  0E03               	movlw	3
  1311   0011C6  26D9               	addwf	fsr2l,f,c
  1312   0011C8  50DF               	movf	indf2,w,c
  1313   0011CA  6E04               	movwf	??_fputc^0,c
  1314   0011CC  5003               	movf	fputc@fp^0,w,c
  1315   0011CE  6ED9               	movwf	fsr2l,c
  1316   0011D0  6ADA               	clrf	fsr2h,c
  1317   0011D2  50DF               	movf	indf2,w,c
  1318   0011D4  2404               	addwf	??_fputc^0,w,c
  1319   0011D6  6ED9               	movwf	fsr2l,c
  1320   0011D8  6ADA               	clrf	fsr2h,c
  1321   0011DA  C001  FFDF         	movff	fputc@c,indf2
  1322   0011DE  5003               	movf	fputc@fp^0,w,c
  1323   0011E0  6ED9               	movwf	fsr2l,c
  1324   0011E2  6ADA               	clrf	fsr2h,c
  1325   0011E4  0E03               	movlw	3
  1326   0011E6  26D9               	addwf	fsr2l,f,c
  1327   0011E8  2ADE               	incf	postinc2,f,c
  1328   0011EA  0E00               	movlw	0
  1329   0011EC  22DD               	addwfc	postdec2,f,c
  1330   0011EE                     l1271:
  1331   0011EE  0012               	return		;funcret
  1332   0011F0                     __end_of_fputc:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _putch *****************
  1336 ;; Defined at:
  1337 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  c               1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  c               1    0[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_fputc
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text6
  1366   001662                     __ptext6:
  1367                           	callstack 0
  1368   001662                     _putch:
  1369                           	callstack 24
  1370   001662  0012               	return		;funcret
  1371   001664                     __end_of_putch:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _abs *****************
  1375 ;; Defined at:
  1376 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  a               2    6[COMRAM] int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2    6[COMRAM] int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;Total ram usage:        4 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_vfpfcnvrt
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405   001486                     __ptext7:
  1406                           	callstack 0
  1407   001486                     _abs:
  1408                           	callstack 25
  1409   001486  BE08               	btfsc	(abs@a+1)^0,7,c
  1410   001488  EF48  F00A         	goto	u911
  1411   00148C  EF4A  F00A         	goto	u910
  1412   001490                     u911:
  1413   001490  EF50  F00A         	goto	l1256
  1414   001494                     u910:
  1415   001494  C007  F007         	movff	abs@a,?_abs
  1416   001498  C008  F008         	movff	abs@a+1,?_abs+1
  1417   00149C  EF5C  F00A         	goto	l1259
  1418   0014A0                     l1256:
  1419   0014A0  C007  F009         	movff	abs@a,??_abs
  1420   0014A4  C008  F00A         	movff	abs@a+1,??_abs+1
  1421   0014A8  1E09               	comf	??_abs^0,f,c
  1422   0014AA  1E0A               	comf	(??_abs+1)^0,f,c
  1423   0014AC  4A09               	infsnz	??_abs^0,f,c
  1424   0014AE  2A0A               	incf	(??_abs+1)^0,f,c
  1425   0014B0  C009  F007         	movff	??_abs,?_abs
  1426   0014B4  C00A  F008         	movff	??_abs+1,?_abs+1
  1427   0014B8                     l1259:
  1428   0014B8  0012               	return		;funcret
  1429   0014BA                     __end_of_abs:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function ___awmod *****************
  1433 ;; Defined at:
  1434 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  dividend        2    0[COMRAM] int 
  1437 ;;  divisor         2    2[COMRAM] int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  sign            1    5[COMRAM] unsigned char 
  1440 ;;  counter         1    4[COMRAM] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2    0[COMRAM] int 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;Total ram usage:        6 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_vfpfcnvrt
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text8
  1465   001096                     __ptext8:
  1466                           	callstack 0
  1467   001096                     ___awmod:
  1468                           	callstack 25
  1469   001096  0E00               	movlw	0
  1470   001098  6E06               	movwf	___awmod@sign^0,c
  1471   00109A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1472   00109C  EF54  F008         	goto	u810
  1473   0010A0  EF52  F008         	goto	u811
  1474   0010A4                     u811:
  1475   0010A4  EF5A  F008         	goto	l2070
  1476   0010A8                     u810:
  1477   0010A8  6C01               	negf	___awmod@dividend^0,c
  1478   0010AA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1479   0010AC  B0D8               	btfsc	status,0,c
  1480   0010AE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1481   0010B0  0E01               	movlw	1
  1482   0010B2  6E06               	movwf	___awmod@sign^0,c
  1483   0010B4                     l2070:
  1484   0010B4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1485   0010B6  EF61  F008         	goto	u820
  1486   0010BA  EF5F  F008         	goto	u821
  1487   0010BE                     u821:
  1488   0010BE  EF65  F008         	goto	l2074
  1489   0010C2                     u820:
  1490   0010C2  6C03               	negf	___awmod@divisor^0,c
  1491   0010C4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1492   0010C6  B0D8               	btfsc	status,0,c
  1493   0010C8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1494   0010CA                     l2074:
  1495   0010CA  5003               	movf	___awmod@divisor^0,w,c
  1496   0010CC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1497   0010CE  B4D8               	btfsc	status,2,c
  1498   0010D0  EF6C  F008         	goto	u831
  1499   0010D4  EF6E  F008         	goto	u830
  1500   0010D8                     u831:
  1501   0010D8  EF92  F008         	goto	l2090
  1502   0010DC                     u830:
  1503   0010DC  0E01               	movlw	1
  1504   0010DE  6E05               	movwf	___awmod@counter^0,c
  1505   0010E0  EF76  F008         	goto	l2080
  1506   0010E4                     l2078:
  1507   0010E4  90D8               	bcf	status,0,c
  1508   0010E6  3603               	rlcf	___awmod@divisor^0,f,c
  1509   0010E8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1510   0010EA  2A05               	incf	___awmod@counter^0,f,c
  1511   0010EC                     l2080:
  1512   0010EC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1513   0010EE  EF7B  F008         	goto	u841
  1514   0010F2  EF7D  F008         	goto	u840
  1515   0010F6                     u841:
  1516   0010F6  EF72  F008         	goto	l2078
  1517   0010FA                     u840:
  1518   0010FA                     l2082:
  1519   0010FA  5003               	movf	___awmod@divisor^0,w,c
  1520   0010FC  5C01               	subwf	___awmod@dividend^0,w,c
  1521   0010FE  5004               	movf	(___awmod@divisor+1)^0,w,c
  1522   001100  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1523   001102  A0D8               	btfss	status,0,c
  1524   001104  EF86  F008         	goto	u851
  1525   001108  EF88  F008         	goto	u850
  1526   00110C                     u851:
  1527   00110C  EF8C  F008         	goto	l2086
  1528   001110                     u850:
  1529   001110  5003               	movf	___awmod@divisor^0,w,c
  1530   001112  5E01               	subwf	___awmod@dividend^0,f,c
  1531   001114  5004               	movf	(___awmod@divisor+1)^0,w,c
  1532   001116  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1533   001118                     l2086:
  1534   001118  90D8               	bcf	status,0,c
  1535   00111A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1536   00111C  3203               	rrcf	___awmod@divisor^0,f,c
  1537   00111E  2E05               	decfsz	___awmod@counter^0,f,c
  1538   001120  EF7D  F008         	goto	l2082
  1539   001124                     l2090:
  1540   001124  5006               	movf	___awmod@sign^0,w,c
  1541   001126  B4D8               	btfsc	status,2,c
  1542   001128  EF98  F008         	goto	u861
  1543   00112C  EF9A  F008         	goto	u860
  1544   001130                     u861:
  1545   001130  EF9E  F008         	goto	l2094
  1546   001134                     u860:
  1547   001134  6C01               	negf	___awmod@dividend^0,c
  1548   001136  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1549   001138  B0D8               	btfsc	status,0,c
  1550   00113A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1551   00113C                     l2094:
  1552   00113C  C001  F001         	movff	___awmod@dividend,?___awmod
  1553   001140  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1554   001144  0012               	return		;funcret
  1555   001146                     __end_of___awmod:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function ___awdiv *****************
  1559 ;; Defined at:
  1560 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  dividend        2    0[COMRAM] int 
  1563 ;;  divisor         2    2[COMRAM] int 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  quotient        2    6[COMRAM] int 
  1566 ;;  sign            1    5[COMRAM] unsigned char 
  1567 ;;  counter         1    4[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    0[COMRAM] int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;Total ram usage:        8 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_vfpfcnvrt
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text9
  1592   000FD2                     __ptext9:
  1593                           	callstack 0
  1594   000FD2                     ___awdiv:
  1595                           	callstack 25
  1596   000FD2  0E00               	movlw	0
  1597   000FD4  6E06               	movwf	___awdiv@sign^0,c
  1598   000FD6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1599   000FD8  EFF2  F007         	goto	u750
  1600   000FDC  EFF0  F007         	goto	u751
  1601   000FE0                     u751:
  1602   000FE0  EFF8  F007         	goto	l2026
  1603   000FE4                     u750:
  1604   000FE4  6C03               	negf	___awdiv@divisor^0,c
  1605   000FE6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1606   000FE8  B0D8               	btfsc	status,0,c
  1607   000FEA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1608   000FEC  0E01               	movlw	1
  1609   000FEE  6E06               	movwf	___awdiv@sign^0,c
  1610   000FF0                     l2026:
  1611   000FF0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1612   000FF2  EFFF  F007         	goto	u760
  1613   000FF6  EFFD  F007         	goto	u761
  1614   000FFA                     u761:
  1615   000FFA  EF05  F008         	goto	l2032
  1616   000FFE                     u760:
  1617   000FFE  6C01               	negf	___awdiv@dividend^0,c
  1618   001000  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1619   001002  B0D8               	btfsc	status,0,c
  1620   001004  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1621   001006  0E01               	movlw	1
  1622   001008  1A06               	xorwf	___awdiv@sign^0,f,c
  1623   00100A                     l2032:
  1624   00100A  0E00               	movlw	0
  1625   00100C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1626   00100E  0E00               	movlw	0
  1627   001010  6E07               	movwf	___awdiv@quotient^0,c
  1628   001012  5003               	movf	___awdiv@divisor^0,w,c
  1629   001014  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1630   001016  B4D8               	btfsc	status,2,c
  1631   001018  EF10  F008         	goto	u771
  1632   00101C  EF12  F008         	goto	u770
  1633   001020                     u771:
  1634   001020  EF3A  F008         	goto	l2054
  1635   001024                     u770:
  1636   001024  0E01               	movlw	1
  1637   001026  6E05               	movwf	___awdiv@counter^0,c
  1638   001028  EF1A  F008         	goto	l2040
  1639   00102C                     l2038:
  1640   00102C  90D8               	bcf	status,0,c
  1641   00102E  3603               	rlcf	___awdiv@divisor^0,f,c
  1642   001030  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1643   001032  2A05               	incf	___awdiv@counter^0,f,c
  1644   001034                     l2040:
  1645   001034  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1646   001036  EF1F  F008         	goto	u781
  1647   00103A  EF21  F008         	goto	u780
  1648   00103E                     u781:
  1649   00103E  EF16  F008         	goto	l2038
  1650   001042                     u780:
  1651   001042                     l2042:
  1652   001042  90D8               	bcf	status,0,c
  1653   001044  3607               	rlcf	___awdiv@quotient^0,f,c
  1654   001046  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1655   001048  5003               	movf	___awdiv@divisor^0,w,c
  1656   00104A  5C01               	subwf	___awdiv@dividend^0,w,c
  1657   00104C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1658   00104E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1659   001050  A0D8               	btfss	status,0,c
  1660   001052  EF2D  F008         	goto	u791
  1661   001056  EF2F  F008         	goto	u790
  1662   00105A                     u791:
  1663   00105A  EF34  F008         	goto	l2050
  1664   00105E                     u790:
  1665   00105E  5003               	movf	___awdiv@divisor^0,w,c
  1666   001060  5E01               	subwf	___awdiv@dividend^0,f,c
  1667   001062  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1668   001064  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1669   001066  8007               	bsf	___awdiv@quotient^0,0,c
  1670   001068                     l2050:
  1671   001068  90D8               	bcf	status,0,c
  1672   00106A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1673   00106C  3203               	rrcf	___awdiv@divisor^0,f,c
  1674   00106E  2E05               	decfsz	___awdiv@counter^0,f,c
  1675   001070  EF21  F008         	goto	l2042
  1676   001074                     l2054:
  1677   001074  5006               	movf	___awdiv@sign^0,w,c
  1678   001076  B4D8               	btfsc	status,2,c
  1679   001078  EF40  F008         	goto	u801
  1680   00107C  EF42  F008         	goto	u800
  1681   001080                     u801:
  1682   001080  EF46  F008         	goto	l2058
  1683   001084                     u800:
  1684   001084  6C07               	negf	___awdiv@quotient^0,c
  1685   001086  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1686   001088  B0D8               	btfsc	status,0,c
  1687   00108A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1688   00108C                     l2058:
  1689   00108C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1690   001090  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1691   001094  0012               	return		;funcret
  1692   001096                     __end_of___awdiv:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _sendStringSerial4 *****************
  1696 ;; Defined at:
  1697 ;;		line 36 in file "serial.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  string          1    1[COMRAM] PTR unsigned char 
  1700 ;;		 -> sendIntSerial4@string(17), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;Total ram usage:        1 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 2
  1719 ;; This function calls:
  1720 ;;		_sendCharSerial4
  1721 ;; This function is called by:
  1722 ;;		_sendIntSerial4
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text10
  1727   0014EE                     __ptext10:
  1728                           	callstack 0
  1729   0014EE                     _sendStringSerial4:
  1730                           	callstack 27
  1731   0014EE                     
  1732                           ;serial.c: 38:     while(*string != 0){
  1733   0014EE  EF80  F00A         	goto	l2286
  1734   0014F2                     l2282:
  1735                           
  1736                           ;serial.c: 39:   sendCharSerial4(*string++);
  1737   0014F2  5002               	movf	sendStringSerial4@string^0,w,c
  1738   0014F4  6ED9               	movwf	fsr2l,c
  1739   0014F6  6ADA               	clrf	fsr2h,c
  1740   0014F8  50DF               	movf	indf2,w,c
  1741   0014FA  EC0C  F00B         	call	_sendCharSerial4
  1742   0014FE  2A02               	incf	sendStringSerial4@string^0,f,c
  1743   001500                     l2286:
  1744                           
  1745                           ;serial.c: 38:     while(*string != 0){
  1746   001500  5002               	movf	sendStringSerial4@string^0,w,c
  1747   001502  6ED9               	movwf	fsr2l,c
  1748   001504  6ADA               	clrf	fsr2h,c
  1749   001506  50DF               	movf	indf2,w,c
  1750   001508  A4D8               	btfss	status,2,c
  1751   00150A  EF89  F00A         	goto	u1211
  1752   00150E  EF8B  F00A         	goto	u1210
  1753   001512                     u1211:
  1754   001512  EF79  F00A         	goto	l2282
  1755   001516                     u1210:
  1756   001516  0012               	return		;funcret
  1757   001518                     __end_of_sendStringSerial4:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _sendCharSerial4 *****************
  1761 ;; Defined at:
  1762 ;;		line 30 in file "serial.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  charToSend      1    wreg     unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  charToSend      1    0[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 1
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_sendStringSerial4
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text11
  1791   001618                     __ptext11:
  1792                           	callstack 0
  1793   001618                     _sendCharSerial4:
  1794                           	callstack 27
  1795                           
  1796                           ;incstack = 0
  1797                           ;sendCharSerial4@charToSend stored from wreg
  1798   001618  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1799   00161A                     l370:
  1800   00161A  010E               	movlb	14	; () banked
  1801   00161C  A537               	btfss	55,2,b	;volatile
  1802   00161E  EF13  F00B         	goto	u321
  1803   001622  EF15  F00B         	goto	u320
  1804   001626                     u321:
  1805   001626  EF0D  F00B         	goto	l370
  1806   00162A                     u320:
  1807   00162A                     
  1808                           ; BSR set to: 14
  1809                           ;serial.c: 32:     TX4REG = charToSend;
  1810   00162A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1811   00162E                     
  1812                           ; BSR set to: 14
  1813   00162E  0012               	return		;funcret
  1814   001630                     __end_of_sendCharSerial4:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _lights_flashing *****************
  1818 ;; Defined at:
  1819 ;;		line 39 in file "buggy_lights.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;Total ram usage:        2 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text12
  1848   0011F0                     __ptext12:
  1849                           	callstack 0
  1850   0011F0                     _lights_flashing:
  1851                           	callstack 29
  1852   0011F0                     
  1853                           ;buggy_lights.c: 41:     LATDbits.LATD4 = !LATDbits.LATD4;
  1854   0011F0  A87C               	btfss	124,4,c	;volatile
  1855   0011F2  EFFD  F008         	goto	u511
  1856   0011F6  EF01  F009         	goto	u510
  1857   0011FA                     u511:
  1858   0011FA  6A01               	clrf	??_lights_flashing^0,c
  1859   0011FC  2A01               	incf	??_lights_flashing^0,f,c
  1860   0011FE  EF02  F009         	goto	u528
  1861   001202                     u510:
  1862   001202  6A01               	clrf	??_lights_flashing^0,c
  1863   001204                     u528:
  1864   001204  3A01               	swapf	??_lights_flashing^0,f,c
  1865   001206  507C               	movf	124,w,c	;volatile
  1866   001208  1801               	xorwf	??_lights_flashing^0,w,c
  1867   00120A  0BEF               	andlw	-17
  1868   00120C  1801               	xorwf	??_lights_flashing^0,w,c
  1869   00120E  6E7C               	movwf	124,c	;volatile
  1870                           
  1871                           ;buggy_lights.c: 42:     LATDbits.LATD3 = !LATDbits.LATD3;
  1872   001210  A67C               	btfss	124,3,c	;volatile
  1873   001212  EF0D  F009         	goto	u531
  1874   001216  EF11  F009         	goto	u530
  1875   00121A                     u531:
  1876   00121A  6A01               	clrf	??_lights_flashing^0,c
  1877   00121C  2A01               	incf	??_lights_flashing^0,f,c
  1878   00121E  EF12  F009         	goto	u548
  1879   001222                     u530:
  1880   001222  6A01               	clrf	??_lights_flashing^0,c
  1881   001224                     u548:
  1882   001224  4601               	rlncf	??_lights_flashing^0,f,c
  1883   001226  4601               	rlncf	??_lights_flashing^0,f,c
  1884   001228  4601               	rlncf	??_lights_flashing^0,f,c
  1885   00122A  507C               	movf	124,w,c	;volatile
  1886   00122C  1801               	xorwf	??_lights_flashing^0,w,c
  1887   00122E  0BF7               	andlw	-9
  1888   001230  1801               	xorwf	??_lights_flashing^0,w,c
  1889   001232  6E7C               	movwf	124,c	;volatile
  1890   001234                     
  1891                           ;buggy_lights.c: 43:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1892   001234  0E29               	movlw	41
  1893   001236  6E02               	movwf	(??_lights_flashing+1)^0,c
  1894   001238  0E96               	movlw	150
  1895   00123A  6E01               	movwf	??_lights_flashing^0,c
  1896   00123C  0E7F               	movlw	127
  1897   00123E                     u1717:
  1898   00123E  2EE8               	decfsz	wreg,f,c
  1899   001240  D7FE               	bra	u1717
  1900   001242  2E01               	decfsz	??_lights_flashing^0,f,c
  1901   001244  D7FC               	bra	u1717
  1902   001246  2E02               	decfsz	(??_lights_flashing+1)^0,f,c
  1903   001248  D7FA               	bra	u1717
  1904   00124A  0000               	nop	
  1905   00124C                     
  1906                           ;buggy_lights.c: 44:     LATFbits.LATF0 = !LATFbits.LATF0;
  1907   00124C  A07E               	btfss	126,0,c	;volatile
  1908   00124E  EF2B  F009         	goto	u551
  1909   001252  EF2F  F009         	goto	u550
  1910   001256                     u551:
  1911   001256  6A01               	clrf	??_lights_flashing^0,c
  1912   001258  2A01               	incf	??_lights_flashing^0,f,c
  1913   00125A  EF30  F009         	goto	u568
  1914   00125E                     u550:
  1915   00125E  6A01               	clrf	??_lights_flashing^0,c
  1916   001260                     u568:
  1917   001260  507E               	movf	126,w,c	;volatile
  1918   001262  1801               	xorwf	??_lights_flashing^0,w,c
  1919   001264  0BFE               	andlw	-2
  1920   001266  1801               	xorwf	??_lights_flashing^0,w,c
  1921   001268  6E7E               	movwf	126,c	;volatile
  1922   00126A                     
  1923                           ;buggy_lights.c: 45:     LATHbits.LATH0 = !LATHbits.LATH0;
  1924   00126A  A080               	btfss	128,0,c	;volatile
  1925   00126C  EF3A  F009         	goto	u571
  1926   001270  EF3E  F009         	goto	u570
  1927   001274                     u571:
  1928   001274  6A01               	clrf	??_lights_flashing^0,c
  1929   001276  2A01               	incf	??_lights_flashing^0,f,c
  1930   001278  EF3F  F009         	goto	u588
  1931   00127C                     u570:
  1932   00127C  6A01               	clrf	??_lights_flashing^0,c
  1933   00127E                     u588:
  1934   00127E  5080               	movf	128,w,c	;volatile
  1935   001280  1801               	xorwf	??_lights_flashing^0,w,c
  1936   001282  0BFE               	andlw	-2
  1937   001284  1801               	xorwf	??_lights_flashing^0,w,c
  1938   001286  6E80               	movwf	128,c	;volatile
  1939   001288  0012               	return		;funcret
  1940   00128A                     __end_of_lights_flashing:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _initUSART4 *****************
  1944 ;; Defined at:
  1945 ;;		line 5 in file "serial.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text13
  1974   0015FA                     __ptext13:
  1975                           	callstack 0
  1976   0015FA                     _initUSART4:
  1977                           	callstack 29
  1978   0015FA                     
  1979                           ;serial.c: 9:     RC0PPS = 0x12;
  1980   0015FA  0E12               	movlw	18
  1981   0015FC  010E               	movlb	14	; () banked
  1982   0015FE  6F62               	movwf	98,b	;volatile
  1983                           
  1984                           ;serial.c: 10:     RX4PPS = 0x11;
  1985   001600  0E11               	movlw	17
  1986   001602  6F15               	movwf	21,b	;volatile
  1987   001604                     
  1988                           ; BSR set to: 14
  1989                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1990   001604  97E9               	bcf	233,3,b	;volatile
  1991   001606                     
  1992                           ; BSR set to: 14
  1993                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1994   001606  95E8               	bcf	232,2,b	;volatile
  1995                           
  1996                           ;serial.c: 15:     SP4BRGL = 51;
  1997   001608  0E33               	movlw	51
  1998   00160A  6FE5               	movwf	229,b	;volatile
  1999                           
  2000                           ;serial.c: 16:     SP4BRGH = 0;
  2001   00160C  0E00               	movlw	0
  2002   00160E  6FE6               	movwf	230,b	;volatile
  2003   001610                     
  2004                           ; BSR set to: 14
  2005                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  2006   001610  89E7               	bsf	231,4,b	;volatile
  2007   001612                     
  2008                           ; BSR set to: 14
  2009                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  2010   001612  8BE8               	bsf	232,5,b	;volatile
  2011   001614                     
  2012                           ; BSR set to: 14
  2013                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  2014   001614  8FE7               	bsf	231,7,b	;volatile
  2015   001616                     
  2016                           ; BSR set to: 14
  2017   001616  0012               	return		;funcret
  2018   001618                     __end_of_initUSART4:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _initDCmotorsPWM *****************
  2022 ;; Defined at:
  2023 ;;		line 5 in file "dc_motor.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;Total ram usage:        2 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text14
  2052   00131E                     __ptext14:
  2053                           	callstack 0
  2054   00131E                     _initDCmotorsPWM:
  2055                           	callstack 29
  2056   00131E                     
  2057                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2058   00131E  9485               	bcf	133,2,c	;volatile
  2059                           
  2060                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2061   001320  9885               	bcf	133,4,c	;volatile
  2062                           
  2063                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2064   001322  9E83               	bcf	131,7,c	;volatile
  2065                           
  2066                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2067   001324  9C87               	bcf	135,6,c	;volatile
  2068                           
  2069                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2070   001326  947D               	bcf	125,2,c	;volatile
  2071                           
  2072                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2073   001328  987D               	bcf	125,4,c	;volatile
  2074                           
  2075                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2076   00132A  9E7B               	bcf	123,7,c	;volatile
  2077                           
  2078                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2079   00132C  9C7F               	bcf	127,6,c	;volatile
  2080   00132E                     
  2081                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2082   00132E  0E05               	movlw	5
  2083   001330  010E               	movlb	14	; () banked
  2084   001332  6F74               	movwf	116,b	;volatile
  2085                           
  2086                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2087   001334  0E06               	movlw	6
  2088   001336  6F76               	movwf	118,b	;volatile
  2089                           
  2090                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2091   001338  0E07               	movlw	7
  2092   00133A  6F69               	movwf	105,b	;volatile
  2093                           
  2094                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2095   00133C  0E08               	movlw	8
  2096   00133E  6F88               	movwf	136,b	;volatile
  2097                           
  2098                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2099   001340  50BD               	movf	189,w,c	;volatile
  2100   001342  0B8F               	andlw	-113
  2101   001344  0940               	iorlw	64
  2102   001346  6EBD               	movwf	189,c	;volatile
  2103                           
  2104                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2105   001348  0EE0               	movlw	-32
  2106   00134A  16BE               	andwf	190,f,c	;volatile
  2107                           
  2108                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2109   00134C  50BF               	movf	191,w,c	;volatile
  2110   00134E  0BF0               	andlw	-16
  2111   001350  0901               	iorlw	1
  2112   001352  6EBF               	movwf	191,c	;volatile
  2113   001354                     
  2114                           ; BSR set to: 14
  2115                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  2116   001354  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2117   001358                     
  2118                           ; BSR set to: 14
  2119                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2120   001358  8EBD               	bsf	189,7,c	;volatile
  2121                           
  2122                           ;dc_motor.c: 35:     CCPR1H=0;
  2123   00135A  0E00               	movlw	0
  2124   00135C  6EAA               	movwf	170,c	;volatile
  2125                           
  2126                           ;dc_motor.c: 36:     CCPR2H=0;
  2127   00135E  0E00               	movlw	0
  2128   001360  6EA6               	movwf	166,c	;volatile
  2129                           
  2130                           ;dc_motor.c: 37:     CCPR3H=0;
  2131   001362  0E00               	movlw	0
  2132   001364  010F               	movlb	15	; () banked
  2133   001366  6F25               	movwf	37,b	;volatile
  2134                           
  2135                           ;dc_motor.c: 38:     CCPR4H=0;
  2136   001368  0E00               	movlw	0
  2137   00136A  6F21               	movwf	33,b	;volatile
  2138                           
  2139                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2140   00136C  0EFC               	movlw	-4
  2141   00136E  16AD               	andwf	173,f,c	;volatile
  2142                           
  2143                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2144   001370  0EF3               	movlw	-13
  2145   001372  16AD               	andwf	173,f,c	;volatile
  2146                           
  2147                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2148   001374  0ECF               	movlw	-49
  2149   001376  16AD               	andwf	173,f,c	;volatile
  2150                           
  2151                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2152   001378  0E3F               	movlw	-193
  2153   00137A  16AD               	andwf	173,f,c	;volatile
  2154   00137C                     
  2155                           ; BSR set to: 15
  2156                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2157   00137C  88AB               	bsf	171,4,c	;volatile
  2158                           
  2159                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2160   00137E  50AB               	movf	171,w,c	;volatile
  2161   001380  0BF0               	andlw	-16
  2162   001382  090C               	iorlw	12
  2163   001384  6EAB               	movwf	171,c	;volatile
  2164   001386                     
  2165                           ; BSR set to: 15
  2166                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2167   001386  8EAB               	bsf	171,7,c	;volatile
  2168   001388                     
  2169                           ; BSR set to: 15
  2170                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2171   001388  88A7               	bsf	167,4,c	;volatile
  2172                           
  2173                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2174   00138A  50A7               	movf	167,w,c	;volatile
  2175   00138C  0BF0               	andlw	-16
  2176   00138E  090C               	iorlw	12
  2177   001390  6EA7               	movwf	167,c	;volatile
  2178   001392                     
  2179                           ; BSR set to: 15
  2180                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2181   001392  8EA7               	bsf	167,7,c	;volatile
  2182   001394                     
  2183                           ; BSR set to: 15
  2184                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2185   001394  8926               	bsf	38,4,b	;volatile
  2186                           
  2187                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2188   001396  5126               	movf	38,w,b	;volatile
  2189   001398  0BF0               	andlw	-16
  2190   00139A  090C               	iorlw	12
  2191   00139C  6F26               	movwf	38,b	;volatile
  2192   00139E                     
  2193                           ; BSR set to: 15
  2194                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2195   00139E  8F26               	bsf	38,7,b	;volatile
  2196   0013A0                     
  2197                           ; BSR set to: 15
  2198                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2199   0013A0  8922               	bsf	34,4,b	;volatile
  2200                           
  2201                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2202   0013A2  5122               	movf	34,w,b	;volatile
  2203   0013A4  0BF0               	andlw	-16
  2204   0013A6  090C               	iorlw	12
  2205   0013A8  6F22               	movwf	34,b	;volatile
  2206   0013AA                     
  2207                           ; BSR set to: 15
  2208                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2209   0013AA  8F22               	bsf	34,7,b	;volatile
  2210   0013AC                     
  2211                           ; BSR set to: 15
  2212   0013AC  0012               	return		;funcret
  2213   0013AE                     __end_of_initDCmotorsPWM:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _color_click_init *****************
  2217 ;; Defined at:
  2218 ;;		line 5 in file "color.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;Total ram usage:        1 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 4
  2239 ;; This function calls:
  2240 ;;		_I2C_2_Master_Init
  2241 ;;		_color_writetoaddr
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text15
  2248   0014BA                     __ptext15:
  2249                           	callstack 0
  2250   0014BA                     _color_click_init:
  2251                           	callstack 26
  2252   0014BA                     
  2253                           ;color.c: 8:     I2C_2_Master_Init();
  2254   0014BA  EC8C  F00A         	call	_I2C_2_Master_Init	;wreg free
  2255   0014BE                     
  2256                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2257   0014BE  0E01               	movlw	1
  2258   0014C0  6E03               	movwf	color_writetoaddr@value^0,c
  2259   0014C2  0E00               	movlw	0
  2260   0014C4  ECDE  F00A         	call	_color_writetoaddr
  2261   0014C8                     
  2262                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2263   0014C8  0E3F               	movlw	63
  2264   0014CA  6E05               	movwf	??_color_click_init^0,c
  2265   0014CC  0E55               	movlw	85
  2266   0014CE                     u1727:
  2267   0014CE  2EE8               	decfsz	wreg,f,c
  2268   0014D0  D7FE               	bra	u1727
  2269   0014D2  2E05               	decfsz	??_color_click_init^0,f,c
  2270   0014D4  D7FC               	bra	u1727
  2271   0014D6  0000               	nop	
  2272   0014D8                     
  2273                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2274   0014D8  0E03               	movlw	3
  2275   0014DA  6E03               	movwf	color_writetoaddr@value^0,c
  2276   0014DC  0E00               	movlw	0
  2277   0014DE  ECDE  F00A         	call	_color_writetoaddr
  2278   0014E2                     
  2279                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2280   0014E2  0ED5               	movlw	213
  2281   0014E4  6E03               	movwf	color_writetoaddr@value^0,c
  2282   0014E6  0E01               	movlw	1
  2283   0014E8  ECDE  F00A         	call	_color_writetoaddr
  2284   0014EC  0012               	return		;funcret
  2285   0014EE                     __end_of_color_click_init:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _color_writetoaddr *****************
  2289 ;; Defined at:
  2290 ;;		line 21 in file "color.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  address         1    wreg     unsigned char 
  2293 ;;  value           1    2[COMRAM] unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  address         1    3[COMRAM] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2305 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;Total ram usage:        2 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 3
  2312 ;; This function calls:
  2313 ;;		_I2C_2_Master_Start
  2314 ;;		_I2C_2_Master_Stop
  2315 ;;		_I2C_2_Master_Write
  2316 ;; This function is called by:
  2317 ;;		_color_click_init
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text16
  2322   0015BC                     __ptext16:
  2323                           	callstack 0
  2324   0015BC                     _color_writetoaddr:
  2325                           	callstack 26
  2326                           
  2327                           ;incstack = 0
  2328                           ;color_writetoaddr@address stored from wreg
  2329   0015BC  6E04               	movwf	color_writetoaddr@address^0,c
  2330   0015BE                     
  2331                           ;color.c: 22:     I2C_2_Master_Start();
  2332   0015BE  EC29  F00B         	call	_I2C_2_Master_Start	;wreg free
  2333                           
  2334                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2335   0015C2  0E52               	movlw	82
  2336   0015C4  EC1E  F00B         	call	_I2C_2_Master_Write
  2337                           
  2338                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2339   0015C8  5004               	movf	color_writetoaddr@address^0,w,c
  2340   0015CA  0980               	iorlw	128
  2341   0015CC  EC1E  F00B         	call	_I2C_2_Master_Write
  2342                           
  2343                           ;color.c: 25:     I2C_2_Master_Write(value);
  2344   0015D0  5003               	movf	color_writetoaddr@value^0,w,c
  2345   0015D2  EC1E  F00B         	call	_I2C_2_Master_Write
  2346                           
  2347                           ;color.c: 26:     I2C_2_Master_Stop();
  2348   0015D6  EC24  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2349   0015DA  0012               	return		;funcret
  2350   0015DC                     __end_of_color_writetoaddr:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _I2C_2_Master_Write *****************
  2354 ;; Defined at:
  2355 ;;		line 45 in file "i2c.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  data_byte       1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  data_byte       1    1[COMRAM] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:        1 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 2
  2376 ;; This function calls:
  2377 ;;		_I2C_2_Master_Idle
  2378 ;; This function is called by:
  2379 ;;		_color_writetoaddr
  2380 ;;		_color_read_Red
  2381 ;;		_color_read_Blue
  2382 ;;		_color_read_Green
  2383 ;;		_color_read_Clear
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text17
  2388   00163C                     __ptext17:
  2389                           	callstack 0
  2390   00163C                     _I2C_2_Master_Write:
  2391                           	callstack 26
  2392                           
  2393                           ;incstack = 0
  2394                           ;I2C_2_Master_Write@data_byte stored from wreg
  2395   00163C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2396   00163E                     
  2397                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2398   00163E  ECB6  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2399   001642                     
  2400                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2401   001642  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2402   001646  0012               	return		;funcret
  2403   001648                     __end_of_I2C_2_Master_Write:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _I2C_2_Master_Stop *****************
  2407 ;; Defined at:
  2408 ;;		line 39 in file "i2c.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 2
  2429 ;; This function calls:
  2430 ;;		_I2C_2_Master_Idle
  2431 ;; This function is called by:
  2432 ;;		_color_writetoaddr
  2433 ;;		_color_read_Red
  2434 ;;		_color_read_Blue
  2435 ;;		_color_read_Green
  2436 ;;		_color_read_Clear
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text18
  2441   001648                     __ptext18:
  2442                           	callstack 0
  2443   001648                     _I2C_2_Master_Stop:
  2444                           	callstack 26
  2445   001648                     
  2446                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2447   001648  ECB6  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2448   00164C                     
  2449                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2450   00164C  010E               	movlb	14	; () banked
  2451   00164E  85DA               	bsf	218,2,b	;volatile
  2452   001650                     
  2453                           ; BSR set to: 14
  2454   001650  0012               	return		;funcret
  2455   001652                     __end_of_I2C_2_Master_Stop:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _I2C_2_Master_Start *****************
  2459 ;; Defined at:
  2460 ;;		line 27 in file "i2c.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		_I2C_2_Master_Idle
  2483 ;; This function is called by:
  2484 ;;		_color_writetoaddr
  2485 ;;		_color_read_Red
  2486 ;;		_color_read_Blue
  2487 ;;		_color_read_Green
  2488 ;;		_color_read_Clear
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text19
  2493   001652                     __ptext19:
  2494                           	callstack 0
  2495   001652                     _I2C_2_Master_Start:
  2496                           	callstack 26
  2497   001652                     
  2498                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2499   001652  ECB6  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2500   001656                     
  2501                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2502   001656  010E               	movlb	14	; () banked
  2503   001658  81DA               	bsf	218,0,b	;volatile
  2504   00165A                     
  2505                           ; BSR set to: 14
  2506   00165A  0012               	return		;funcret
  2507   00165C                     __end_of_I2C_2_Master_Start:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _I2C_2_Master_Idle *****************
  2511 ;; Defined at:
  2512 ;;		line 22 in file "i2c.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;Total ram usage:        1 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_I2C_2_Master_Start
  2537 ;;		_I2C_2_Master_Stop
  2538 ;;		_I2C_2_Master_Write
  2539 ;;		_I2C_2_Master_RepStart
  2540 ;;		_I2C_2_Master_Read
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text20
  2545   00156C                     __ptext20:
  2546                           	callstack 0
  2547   00156C                     _I2C_2_Master_Idle:
  2548                           	callstack 26
  2549   00156C                     l236:
  2550   00156C  010E               	movlb	14	; () banked
  2551   00156E  B5D8               	btfsc	216,2,b	;volatile
  2552   001570  EFBC  F00A         	goto	u181
  2553   001574  EFBE  F00A         	goto	u180
  2554   001578                     u181:
  2555   001578  EFB6  F00A         	goto	l236
  2556   00157C                     u180:
  2557   00157C                     
  2558                           ; BSR set to: 14
  2559   00157C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2560   001580  0E1F               	movlw	31
  2561   001582  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2562   001584  A4D8               	btfss	status,2,c
  2563   001586  EFC7  F00A         	goto	u191
  2564   00158A  EFC9  F00A         	goto	u190
  2565   00158E                     u191:
  2566   00158E  EFB6  F00A         	goto	l236
  2567   001592                     u190:
  2568   001592                     
  2569                           ; BSR set to: 14
  2570   001592  0012               	return		;funcret
  2571   001594                     __end_of_I2C_2_Master_Idle:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _I2C_2_Master_Init *****************
  2575 ;; Defined at:
  2576 ;;		line 4 in file "i2c.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_color_click_init
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text21
  2605   001518                     __ptext21:
  2606                           	callstack 0
  2607   001518                     _I2C_2_Master_Init:
  2608                           	callstack 28
  2609   001518                     
  2610                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2611   001518  010E               	movlb	14	; () banked
  2612   00151A  51D9               	movf	217,w,b	;volatile
  2613   00151C  0BF0               	andlw	-16
  2614   00151E  0908               	iorlw	8
  2615   001520  6FD9               	movwf	217,b	;volatile
  2616   001522                     
  2617                           ; BSR set to: 14
  2618                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2619   001522  8BD9               	bsf	217,5,b	;volatile
  2620                           
  2621                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2622   001524  0E9F               	movlw	159
  2623   001526  6FD6               	movwf	214,b	;volatile
  2624   001528                     
  2625                           ; BSR set to: 14
  2626                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2627   001528  8A84               	bsf	132,5,c	;volatile
  2628   00152A                     
  2629                           ; BSR set to: 14
  2630                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2631   00152A  8C84               	bsf	132,6,c	;volatile
  2632   00152C                     
  2633                           ; BSR set to: 14
  2634                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2635   00152C  9BA7               	bcf	167,5,b	;volatile
  2636   00152E                     
  2637                           ; BSR set to: 14
  2638                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2639   00152E  9DA7               	bcf	167,6,b	;volatile
  2640                           
  2641                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2642   001530  0E1D               	movlw	29
  2643   001532  6F1D               	movwf	29,b	;volatile
  2644                           
  2645                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2646   001534  0E1E               	movlw	30
  2647   001536  6F1C               	movwf	28,b	;volatile
  2648                           
  2649                           ;i2c.c: 18:   RD5PPS=0x1C;
  2650   001538  0E1C               	movlw	28
  2651   00153A  6F6F               	movwf	111,b	;volatile
  2652                           
  2653                           ;i2c.c: 19:   RD6PPS=0x1B;
  2654   00153C  0E1B               	movlw	27
  2655   00153E  6F70               	movwf	112,b	;volatile
  2656   001540                     
  2657                           ; BSR set to: 14
  2658   001540  0012               	return		;funcret
  2659   001542                     __end_of_I2C_2_Master_Init:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _buggy_lights_init *****************
  2663 ;; Defined at:
  2664 ;;		line 4 in file "buggy_lights.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		None
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text22
  2693   001542                     __ptext22:
  2694                           	callstack 0
  2695   001542                     _buggy_lights_init:
  2696                           	callstack 29
  2697   001542                     
  2698                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2699   001542  9884               	bcf	132,4,c	;volatile
  2700                           
  2701                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2702   001544  9288               	bcf	136,1,c	;volatile
  2703                           
  2704                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2705   001546  9684               	bcf	132,3,c	;volatile
  2706                           
  2707                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2708   001548  9086               	bcf	134,0,c	;volatile
  2709                           
  2710                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2711   00154A  9088               	bcf	136,0,c	;volatile
  2712                           
  2713                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  2714   00154C  887C               	bsf	124,4,c	;volatile
  2715                           
  2716                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  2717   00154E  8280               	bsf	128,1,c	;volatile
  2718                           
  2719                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  2720   001550  867C               	bsf	124,3,c	;volatile
  2721                           
  2722                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  2723   001552  807E               	bsf	126,0,c	;volatile
  2724                           
  2725                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  2726   001554  8080               	bsf	128,0,c	;volatile
  2727                           
  2728                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2729   001556  9E84               	bcf	132,7,c	;volatile
  2730                           
  2731                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2732   001558  9688               	bcf	136,3,c	;volatile
  2733                           
  2734                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2735   00155A  8E7C               	bsf	124,7,c	;volatile
  2736                           
  2737                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2738   00155C  8680               	bsf	128,3,c	;volatile
  2739                           
  2740                           ;buggy_lights.c: 30:     TRISGbits.TRISG1 = 0;
  2741   00155E  9287               	bcf	135,1,c	;volatile
  2742                           
  2743                           ;buggy_lights.c: 31:     TRISAbits.TRISA4 = 0;
  2744   001560  9881               	bcf	129,4,c	;volatile
  2745                           
  2746                           ;buggy_lights.c: 32:     TRISFbits.TRISF7 = 0;
  2747   001562  9E86               	bcf	134,7,c	;volatile
  2748                           
  2749                           ;buggy_lights.c: 34:     LATGbits.LATG1 = 1;
  2750   001564  827F               	bsf	127,1,c	;volatile
  2751                           
  2752                           ;buggy_lights.c: 35:     LATAbits.LATA4 = 1;
  2753   001566  8879               	bsf	121,4,c	;volatile
  2754                           
  2755                           ;buggy_lights.c: 36:     LATFbits.LATF7 = 1;
  2756   001568  8E7E               	bsf	126,7,c	;volatile
  2757   00156A  0012               	return		;funcret
  2758   00156C                     __end_of_buggy_lights_init:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _Timer0_init *****************
  2762 ;; Defined at:
  2763 ;;		line 7 in file "timers.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text23
  2792   001594                     __ptext23:
  2793                           	callstack 0
  2794   001594                     _Timer0_init:
  2795                           	callstack 29
  2796   001594                     
  2797                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2798   001594  50D6               	movf	214,w,c	;volatile
  2799   001596  0B1F               	andlw	-225
  2800   001598  0940               	iorlw	64
  2801   00159A  6ED6               	movwf	214,c	;volatile
  2802   00159C                     
  2803                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2804   00159C  88D6               	bsf	214,4,c	;volatile
  2805   00159E                     
  2806                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  2807   00159E  88D5               	bsf	213,4,c	;volatile
  2808                           
  2809                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  2810   0015A0  50D6               	movf	214,w,c	;volatile
  2811   0015A2  0BF0               	andlw	-16
  2812   0015A4  0908               	iorlw	8
  2813   0015A6  6ED6               	movwf	214,c	;volatile
  2814                           
  2815                           ;timers.c: 14:     TMR0H=0b00001011;
  2816   0015A8  0E0B               	movlw	11
  2817   0015AA  6ED4               	movwf	212,c	;volatile
  2818                           
  2819                           ;timers.c: 15:     TMR0L=0b11011100;
  2820   0015AC  0EDC               	movlw	220
  2821   0015AE  6ED3               	movwf	211,c	;volatile
  2822   0015B0                     
  2823                           ;timers.c: 39:     T0CON0bits.T0EN=1;
  2824   0015B0  8ED5               	bsf	213,7,c	;volatile
  2825   0015B2                     
  2826                           ;timers.c: 40:     PIE0bits.TMR0IE = 1;
  2827   0015B2  010E               	movlb	14	; () banked
  2828   0015B4  8B29               	bsf	41,5,b	;volatile
  2829   0015B6                     
  2830                           ; BSR set to: 14
  2831                           ;timers.c: 41:     INTCONbits.PEIE = 1;
  2832   0015B6  8CF2               	bsf	242,6,c	;volatile
  2833   0015B8                     
  2834                           ; BSR set to: 14
  2835                           ;timers.c: 42:     INTCONbits.GIE = 1;
  2836   0015B8  8EF2               	bsf	242,7,c	;volatile
  2837   0015BA                     
  2838                           ; BSR set to: 14
  2839   0015BA  0012               	return		;funcret
  2840   0015BC                     __end_of_Timer0_init:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _ISR *****************
  2844 ;; Defined at:
  2845 ;;		line 45 in file "timers.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		Interrupt level 2
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	intcode
  2873   000008                     __pintcode:
  2874                           	callstack 0
  2875   000008                     _ISR:
  2876                           	callstack 24
  2877                           
  2878                           ; BSR set to: 14
  2879                           ;incstack = 0
  2880   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2881   00000A                     
  2882                           ;timers.c: 48:     if (PIR0bits.TMR0IF) {
  2883   00000A  010E               	movlb	14	; () banked
  2884   00000C  AB33               	btfss	51,5,b	;volatile
  2885   00000E  EF0B  F000         	goto	i2u74_41
  2886   000012  EF0D  F000         	goto	i2u74_40
  2887   000016                     i2u74_41:
  2888   000016  EF14  F000         	goto	i2l527
  2889   00001A                     i2u74_40:
  2890   00001A                     
  2891                           ; BSR set to: 14
  2892                           ;timers.c: 67:         timer_count++;
  2893   00001A  4A52               	infsnz	_timer_count^0,f,c
  2894   00001C  2A53               	incf	(_timer_count+1)^0,f,c
  2895   00001E                     
  2896                           ; BSR set to: 14
  2897                           ;timers.c: 68:         TMR0H=0b00001011;
  2898   00001E  0E0B               	movlw	11
  2899   000020  6ED4               	movwf	212,c	;volatile
  2900   000022                     
  2901                           ; BSR set to: 14
  2902                           ;timers.c: 69:         TMR0L=0b11011100;
  2903   000022  0EDC               	movlw	220
  2904   000024  6ED3               	movwf	211,c	;volatile
  2905   000026                     
  2906                           ; BSR set to: 14
  2907                           ;timers.c: 70:         PIR0bits.TMR0IF = 0;
  2908   000026  9B33               	bcf	51,5,b	;volatile
  2909   000028                     i2l527:
  2910                           
  2911                           ; BSR set to: 14
  2912   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2913   00002A  0011               	retfie		f
  2914   00002C                     __end_of_ISR:
  2915                           	callstack 0
  2916                           
  2917                           	psect	rparam
  2918   000000                     
  2919                           	psect	temp
  2920   00005F                     btemp:
  2921                           	callstack 0
  2922   00005F                     	ds	1
  2923   000000                     int$flags	set	btemp
  2924   000000                     wtemp8	set	btemp+1
  2925   000000                     ttemp5	set	btemp+1
  2926   000000                     ttemp6	set	btemp+4
  2927   000000                     ttemp7	set	btemp+8
  2928                           
  2929                           	psect	idloc
  2930                           
  2931                           ;Config register IDLOC0 @ 0x200000
  2932                           ;	unspecified, using default values
  2933   200000                     	org	2097152
  2934   200000  FFFF               	dw	65535
  2935                           
  2936                           ;Config register IDLOC1 @ 0x200002
  2937                           ;	unspecified, using default values
  2938   200002                     	org	2097154
  2939   200002  FFFF               	dw	65535
  2940                           
  2941                           ;Config register IDLOC2 @ 0x200004
  2942                           ;	unspecified, using default values
  2943   200004                     	org	2097156
  2944   200004  FFFF               	dw	65535
  2945                           
  2946                           ;Config register IDLOC3 @ 0x200006
  2947                           ;	unspecified, using default values
  2948   200006                     	org	2097158
  2949   200006  FFFF               	dw	65535
  2950                           
  2951                           ;Config register IDLOC4 @ 0x200008
  2952                           ;	unspecified, using default values
  2953   200008                     	org	2097160
  2954   200008  FFFF               	dw	65535
  2955                           
  2956                           ;Config register IDLOC5 @ 0x20000A
  2957                           ;	unspecified, using default values
  2958   20000A                     	org	2097162
  2959   20000A  FFFF               	dw	65535
  2960                           
  2961                           ;Config register IDLOC6 @ 0x20000C
  2962                           ;	unspecified, using default values
  2963   20000C                     	org	2097164
  2964   20000C  FFFF               	dw	65535
  2965                           
  2966                           ;Config register IDLOC7 @ 0x20000E
  2967                           ;	unspecified, using default values
  2968   20000E                     	org	2097166
  2969   20000E  FFFF               	dw	65535
  2970                           
  2971                           	psect	config
  2972                           
  2973                           ;Config register CONFIG1L @ 0x300000
  2974                           ;	External Oscillator mode Selection bits
  2975                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2976                           ;	Power-up default value for COSC bits
  2977                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2978   300000                     	org	3145728
  2979   300000  AA                 	db	170
  2980                           
  2981                           ;Config register CONFIG1H @ 0x300001
  2982                           ;	unspecified, using default values
  2983                           ;	Clock Out Enable bit
  2984                           ;	CLKOUTEN = 0x1, unprogrammed default
  2985                           ;	Clock Switch Enable bit
  2986                           ;	CSWEN = 0x1, unprogrammed default
  2987                           ;	Fail-Safe Clock Monitor Enable bit
  2988                           ;	FCMEN = 0x1, unprogrammed default
  2989   300001                     	org	3145729
  2990   300001  FF                 	db	255
  2991                           
  2992                           ;Config register CONFIG2L @ 0x300002
  2993                           ;	unspecified, using default values
  2994                           ;	Master Clear Enable bit
  2995                           ;	MCLRE = 0x1, unprogrammed default
  2996                           ;	Power-up Timer Enable bit
  2997                           ;	PWRTE = 0x1, unprogrammed default
  2998                           ;	Low-power BOR enable bit
  2999                           ;	LPBOREN = 0x1, unprogrammed default
  3000                           ;	Brown-out Reset Enable bits
  3001                           ;	BOREN = 0x3, unprogrammed default
  3002   300002                     	org	3145730
  3003   300002  FF                 	db	255
  3004                           
  3005                           ;Config register CONFIG2H @ 0x300003
  3006                           ;	unspecified, using default values
  3007                           ;	Brown Out Reset Voltage selection bits
  3008                           ;	BORV = 0x3, unprogrammed default
  3009                           ;	ZCD Disable bit
  3010                           ;	ZCD = 0x1, unprogrammed default
  3011                           ;	PPSLOCK bit One-Way Set Enable bit
  3012                           ;	PPS1WAY = 0x1, unprogrammed default
  3013                           ;	Stack Full/Underflow Reset Enable bit
  3014                           ;	STVREN = 0x1, unprogrammed default
  3015                           ;	Debugger Enable bit
  3016                           ;	DEBUG = 0x1, unprogrammed default
  3017                           ;	Extended Instruction Set Enable bit
  3018                           ;	XINST = 0x1, unprogrammed default
  3019   300003                     	org	3145731
  3020   300003  FF                 	db	255
  3021                           
  3022                           ;Config register CONFIG3L @ 0x300004
  3023                           ;	WDT Period Select bits
  3024                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3025                           ;	WDT operating mode
  3026                           ;	WDTE = OFF, WDT Disabled
  3027   300004                     	org	3145732
  3028   300004  9F                 	db	159
  3029                           
  3030                           ;Config register CONFIG3H @ 0x300005
  3031                           ;	unspecified, using default values
  3032                           ;	WDT Window Select bits
  3033                           ;	WDTCWS = 0x7, unprogrammed default
  3034                           ;	WDT input clock selector
  3035                           ;	WDTCCS = 0x7, unprogrammed default
  3036   300005                     	org	3145733
  3037   300005  FF                 	db	255
  3038                           
  3039                           ;Config register CONFIG4L @ 0x300006
  3040                           ;	unspecified, using default values
  3041                           ;	Write Protection Block 0
  3042                           ;	WRT0 = 0x1, unprogrammed default
  3043                           ;	Write Protection Block 1
  3044                           ;	WRT1 = 0x1, unprogrammed default
  3045                           ;	Write Protection Block 2
  3046                           ;	WRT2 = 0x1, unprogrammed default
  3047                           ;	Write Protection Block 3
  3048                           ;	WRT3 = 0x1, unprogrammed default
  3049                           ;	Write Protection Block 3
  3050                           ;	WRT4 = 0x1, unprogrammed default
  3051                           ;	Write Protection Block 3
  3052                           ;	WRT5 = 0x1, unprogrammed default
  3053                           ;	Write Protection Block 3
  3054                           ;	WRT6 = 0x1, unprogrammed default
  3055                           ;	Write Protection Block 3
  3056                           ;	WRT7 = 0x1, unprogrammed default
  3057   300006                     	org	3145734
  3058   300006  FF                 	db	255
  3059                           
  3060                           ;Config register CONFIG4H @ 0x300007
  3061                           ;	unspecified, using default values
  3062                           ;	Configuration Register Write Protection bit
  3063                           ;	WRTC = 0x1, unprogrammed default
  3064                           ;	Boot Block Write Protection bit
  3065                           ;	WRTB = 0x1, unprogrammed default
  3066                           ;	Data EEPROM Write Protection bit
  3067                           ;	WRTD = 0x1, unprogrammed default
  3068                           ;	Scanner Enable bit
  3069                           ;	SCANE = 0x1, unprogrammed default
  3070                           ;	Low Voltage Programming Enable bit
  3071                           ;	LVP = 0x1, unprogrammed default
  3072   300007                     	org	3145735
  3073   300007  FF                 	db	255
  3074                           
  3075                           ;Config register CONFIG5L @ 0x300008
  3076                           ;	unspecified, using default values
  3077                           ;	UserNVM Program Memory Code Protection bit
  3078                           ;	CP = 0x1, unprogrammed default
  3079                           ;	DataNVM Memory Code Protection bit
  3080                           ;	CPD = 0x1, unprogrammed default
  3081   300008                     	org	3145736
  3082   300008  FF                 	db	255
  3083                           
  3084                           ;Config register CONFIG5H @ 0x300009
  3085                           ;	unspecified, using default values
  3086   300009                     	org	3145737
  3087   300009  FF                 	db	255
  3088                           
  3089                           ;Config register CONFIG6L @ 0x30000A
  3090                           ;	unspecified, using default values
  3091                           ;	Table Read Protection Block 0
  3092                           ;	EBTR0 = 0x1, unprogrammed default
  3093                           ;	Table Read Protection Block 1
  3094                           ;	EBTR1 = 0x1, unprogrammed default
  3095                           ;	Table Read Protection Block 2
  3096                           ;	EBTR2 = 0x1, unprogrammed default
  3097                           ;	Table Read Protection Block 3
  3098                           ;	EBTR3 = 0x1, unprogrammed default
  3099                           ;	Table Read Protection Block 4
  3100                           ;	EBTR4 = 0x1, unprogrammed default
  3101                           ;	Table Read Protection Block 5
  3102                           ;	EBTR5 = 0x1, unprogrammed default
  3103                           ;	Table Read Protection Block 6
  3104                           ;	EBTR6 = 0x1, unprogrammed default
  3105                           ;	Table Read Protection Block 7
  3106                           ;	EBTR7 = 0x1, unprogrammed default
  3107   30000A                     	org	3145738
  3108   30000A  FF                 	db	255
  3109                           
  3110                           ;Config register CONFIG6H @ 0x30000B
  3111                           ;	unspecified, using default values
  3112                           ;	Boot Block Table Read Protection bit
  3113                           ;	EBTRB = 0x1, unprogrammed default
  3114   30000B                     	org	3145739
  3115   30000B  FF                 	db	255
  3116                           tosu	equ	0xFFF
  3117                           tosh	equ	0xFFE
  3118                           tosl	equ	0xFFD
  3119                           stkptr	equ	0xFFC
  3120                           pclatu	equ	0xFFB
  3121                           pclath	equ	0xFFA
  3122                           pcl	equ	0xFF9
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodh	equ	0xFF4
  3128                           prodl	equ	0xFF3
  3129                           indf0	equ	0xFEF
  3130                           postinc0	equ	0xFEE
  3131                           postdec0	equ	0xFED
  3132                           preinc0	equ	0xFEC
  3133                           plusw0	equ	0xFEB
  3134                           fsr0h	equ	0xFEA
  3135                           fsr0l	equ	0xFE9
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           postinc1	equ	0xFE6
  3139                           postdec1	equ	0xFE5
  3140                           preinc1	equ	0xFE4
  3141                           plusw1	equ	0xFE3
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           bsr	equ	0xFE0
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           preinc2	equ	0xFDC
  3149                           plusw2	equ	0xFDB
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        18
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1009DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1009DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2355$buffer	PTR unsigned char  size(2) Largest target is 0

    S2355$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    4266
                                             61 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                    _lights_flashing
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3571
                                             42 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3287
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     136
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lights_flashing                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _lights_flashing
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllhhh     2D      0       0      46        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      48        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      55        0.0%
BITBIGSFRllllhl      5      0       0      51        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      50        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      60        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Feb 28 14:43:54 2024

               _turn180Delay 00D8                           l25 156A                           l50 15DA  
                         l28 1288                           l47 14EC                 ___awdiv@sign 0006  
                        l233 1540                          l242 165A                          l138 13AC  
                        l251 1646                          l236 156C                          l239 1592  
                        l248 1650                          l521 15BA                          l361 1616  
                        l370 161A                          l373 162E                          l382 15F8  
                        l379 1516                          l761 1094                          l774 1144  
                        u320 162A                          u321 1626                          u180 157C  
                        u181 1578                          u190 1592                          u510 1202  
                        u191 158E                          u511 11FA                          u530 1222  
                        u531 121A                          _ISR 0008                          u550 125E  
                        u551 1256                          u528 1204                          u800 1084  
                        u801 1080                          u570 127C                          u810 10A8  
                        u571 1274                          u811 10A4                          u548 1224  
                        u820 10C2                          u900 11BE                          u821 10BE  
                        u901 11BA                          u750 0FE4                          u830 10DC  
                        u910 1494                          u751 0FE0                          u831 10D8  
                        u911 1490                          u568 1260                          u760 0FFE  
                        u840 10FA                          u920 0E2E                          u761 0FFA  
                        u841 10F6                          u921 0E2A                          u770 1024  
                        u850 1110                          u930 0E72                          u771 1020  
                        u851 110C                          u931 0E6E                          u588 127E  
                        u780 1042                          u860 1134                          u940 0E92  
                        u781 103E                          u861 1130                          u941 0E8E  
                        u790 105E                          u870 1156                          u950 0EC8  
                        u791 105A                          u871 1152                          u951 0EC2  
                        u880 1166                          u960 0ECA                          u881 1162  
                        u890 118C                          u970 0F2A                          u891 1188  
                        u971 0F26                          u980 0F3A                          u981 0F36  
                        u990 0F4A                          u991 0F46                          _abs 1486  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 00D4  
                       ?_ISR 0001                         ?_abs 0007                         l2020 0FD6  
                       l2100 1156                         l2030 1006                         l2022 0FE4  
                       l2102 1166                         l2040 1034                         l2032 100A  
                       l2024 0FEC                         l2112 1486                         l2104 1170  
                       l2120 0E36                         l1208 1484                         l2050 1068  
                       l2042 1042                         l2034 1012                         l2026 0FF0  
                       l2018 0FD2                         l2114 1494                         l2106 118C  
                       l2130 0E92                         l2122 0E44                         l2300 14BA  
                       l2052 106E                         l2044 1048                         l2036 1024  
                       l2028 0FFE                         l2108 11BE                         l2140 0F18  
                       l2132 0EAA                         l2124 0E48                         l2116 0E08  
                       l1252 1450                         l2302 14BE                         l2310 131E  
                       l2046 105E                         l2038 102C                         l2054 1074  
                       l2070 10B4                         l2062 1096                         l1246 0FD0  
                       l2150 0F6C                         l2142 0F2A                         l2134 0EB4  
                       l2126 0E52                         l2118 0E2E                         l1271 11EE  
                       l1440 163E                         l2304 14C8                         l2320 1386  
                       l2312 132E                         l1600 11F0                         l2056 1084  
                       l2048 1066                         l2080 10EC                         l2072 10C2  
                       l2064 109A                         l1256 14A0                         l2152 0F86  
                       l2144 0F3A                         l2136 0ECC                         l2128 0E72  
                       l2160 0FAA                         l1442 1642                         l2306 14D8  
                       l2330 13A0                         l2322 1388                         l2314 1354  
                       l1602 1234                         l2058 108C                         l2082 10FA  
                       l2090 1124                         l2074 10CA                         l2066 10A8  
                       l1282 1662                         l2146 0F4A                         l2154 0F88  
                       l2138 0EFC                         l2410 128A                         l1259 14B8  
                       l1436 1652                         l1444 1648                         l2308 14E2  
                       l2332 13AA                         l2324 1392                         l2316 1358  
                       l1604 124C                         l2092 1134                         l2084 1110  
                       l2076 10DC                         l2068 10B0                         l2148 0F5A  
                       l2156 0F9E                         l2420 12B6                         l2412 12A2  
                       l1382 156C                         l1438 1656                         l1446 164C  
                       l2326 1394                         l2318 137C                         l1606 126A  
                       l2094 113C                         l2086 1118                         l2078 10E4  
                       l2182 1410                         l2430 12D6                         l2422 12BA  
                       l2414 12A2                         l1480 1522                         l1384 157C  
                       l2192 15BE                         l2328 139E                         l1464 161A  
                       l2280 14EE                         l2088 111E                         l2184 1418  
                       l2440 12F6                         l2432 12DA                         l2424 12C2  
                       l2416 12AE                         l1482 1528                         l1466 162A  
                       l2282 14F2                         l2098 1146                         l2186 1428  
                       l2290 145A                         l2450 1306                         l2442 12FA  
                       l2434 12DE                         l2426 12CA                         l2418 12B2  
                       l1484 152A                         l1740 1612                         l1732 15FA  
                       l2284 14FE                         l2188 1448                         l2292 1462  
                       l2452 1312                         l2444 12FE                         l2436 12E6  
                       l2428 12D2                         l1750 15B0                         l1486 152C  
                       l1478 1518                         l1742 1614                         l1734 1604  
                       l2286 1500                         l2294 146A                         l2446 1302  
                       l2438 12EE                         l1752 15B2                         l1744 1594  
                       l1488 152E                         l1736 1606                         l2296 147A  
                       l2288 1452                         l2376 15DC                         l2448 1306  
                       l1754 15B6                         l1746 159C                         l1738 1610  
                       l2378 15F0                         l1756 15B8                         l1748 159E  
                       l1598 1542                         STR_1 0E01                         u1000 0F5A  
                       u1001 0F56                         u1010 0F9A                         u1011 0F96  
                       u1040 1448                         u1041 1444                         u1210 1516  
                       u1211 1512                 _BAUD4CONbits 0EE9                         _T2PR 0FBC  
                       u1707 1294                         u1717 123E                         u1727 14CE  
                       abs@a 0007                         _dbuf 009C                         _main 128A  
                       _prec 00D2                         fsr1h 0FE2                         fsr2h 0FDA  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 005F                         start 002C                 ___param_bank 0000  
                      ??_ISR 0001                        ??_abs 0009               _sendIntSerial4 15DC  
                      ?_main 0001              __end_of___awdiv 1096              __end_of___awmod 1146  
            ___awdiv@divisor 0003                        i2l527 0028              ___awdiv@counter 0005  
               vfpfcnvrt@fmt 000C                        _TMR0H 0FD4                        _TMR0L 0FD3  
    __end_of_sendCharSerial4 1630   __end_of_I2C_2_Master_Start 165C   __end_of_I2C_2_Master_Write 1648  
                _turningGear 005B                        _flags 0054                        _fputc 1146  
                      _width 00D0                        _putch 1662            _turnRight135Delay 00DA  
                      tablat 0FF5              _turnLeft90Delay 0059                        ttemp5 0060  
                      ttemp6 0063                        ttemp7 0067                        status 0FD8  
                      wtemp8 0060              __end_of_sprintf 1486              __initialization 13AE  
               __end_of_main 131E       __end_of_sendIntSerial4 15FA                       ??_main 003E  
              __activetblptr 0003                       ?_fputc 0001                       _CCPR1H 0FAA  
                     _CCPR2H 0FA6                       _CCPR3H 0F25                       _CCPR4H 0F21  
           ___awdiv@dividend 0001                       ?_putch 0001                       _RC0PPS 0E62  
                     _RC4REG 0EE3                       _RE2PPS 0E74                       _RD5PPS 0E6F  
                     _RC7PPS 0E69                       i2l2010 001A                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2012 001E                       i2l2014 0022  
                     i2l2016 0026                       i2l2008 000A                       _RG6PPS 0E88  
              vfpfcnvrt@done 000F     __end_of_color_click_init 14EE                       _RX4PPS 0E15  
                     _TX4REG 0EE4             _turnLeft135Delay 00DC                ??_Timer0_init 0001  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 0019              _lights_flashing 11F0  
                  ??___awdiv 0005                    ??___awmod 0005              ?_sendIntSerial4 002B  
                     clear_0 13F4                       clear_1 1400             ___awdiv@quotient 0007  
            ___awmod@divisor 0003                       isa$std 0001              ___awmod@counter 0005  
                     fputc@c 0001                 __pdataCOMRAM 0059                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           ?_sendCharSerial4 0001                       putch@c 0001             __end_of_vfprintf 1452  
          ??_initDCmotorsPWM 0003                    ??_sprintf 001E            _buggy_lights_init 1542  
                 __accesstop 0060      __end_of__initialization 1406           ?_buggy_lights_init 0001  
              ___rparam_used 0001               __pcstackCOMRAM 0001                 __pidataBANK0 1630  
        ??_buggy_lights_init 0001                __end_of_fputc 11F0                __end_of_putch 1664  
        __end_of_Timer0_init 15BC                      ??_fputc 0004    __end_of_buggy_lights_init 156C  
                    ??_putch 0001                   __pbssBANK0 0060      __end_of_lights_flashing 128A  
          _color_writetoaddr 15BC                 _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003  
        ??_color_writetoaddr 0004                      _SP4BRGH 0EE6                      _SP4BRGL 0EE5  
                    i2u74_40 001A                      i2u74_41 0016                      _SSP2ADD 0ED6  
                    _SSP2BUF 0ED5       color_writetoaddr@value 0003    __end_of_color_writetoaddr 15DC  
         _I2C_2_Master_Start 1652                   _initUSART4 15FA           _I2C_2_Master_Write 163C  
                    __Hparam 0000                      __Lparam 0000                  _Timer0_init 1594  
    sendStringSerial4@string 0002                      ___awdiv 0FD2                      ___awmod 1096  
        ?_I2C_2_Master_Start 0001          ?_I2C_2_Master_Write 0001                    ?_vfprintf 0016  
               __psmallconst 0E00                      __pcinit 13AE                      __ramtop 0E00  
                    __ptext0 128A                      __ptext1 15DC                      __ptext2 1452  
                    __ptext3 1410                      __ptext4 0E08                      __ptext5 1146  
                    __ptext6 1662                      __ptext7 1486                      __ptext8 1096  
                    __ptext9 0FD2                    _T2CONbits 0FBD             ___awmod@dividend 0001  
                  _T2HLTbits 0FBE                _RxBufWriteCnt 0058                      _sprintf 1452  
       ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002         end_of_initialization 1406  
                    fputc@fp 0003            ?_color_click_init 0001             ?_lights_flashing 0001  
         ??_color_click_init 0005             ??_sendIntSerial4 002D            __end_of_vfpfcnvrt 0FD2  
                    postdec1 0FE5                      postdec2 0FDD                      postinc0 0FEE  
                    postinc1 0FE6                      postinc2 0FDE             vfpfcnvrt@convarg 0011  
                 ??_vfprintf 0019              _initDCmotorsPWM 131E         sendIntSerial4@string 002D  
                  _TRISAbits 0F81                    _TRISCbits 0F83                    _TRISDbits 0F84  
                  _TRISEbits 0F85                    _TRISFbits 0F86                    _TRISGbits 0F87  
                  _TRISHbits 0F88     color_writetoaddr@address 0004                  _CCP1CONbits 0FAB  
               _EUSART4RXbuf 00BC                 _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7  
                _CCP3CONbits 0F26                  ?_initUSART4 0001                  _CCP4CONbits 0F22  
  sendCharSerial4@charToSend 0001                   main@motorL 0040                   main@motorR 0049  
                vfpfcnvrt@ap 000D                  vfpfcnvrt@cp 0010                  vfpfcnvrt@fp 000B  
              __pidataCOMRAM 165C          start_initialization 13AE                  __end_of_ISR 002C  
                __end_of_abs 14BA                _TxBufWriteCnt 0056             _turnRight90Delay 00DE  
    __end_of_initDCmotorsPWM 13AE                  vfprintf@fmt 0017                  __pdataBANK0 00D4  
                __pbssCOMRAM 0052                 ?_Timer0_init 0001                    __pintcode 0008  
                   ?___awdiv 0001                     ?___awmod 0001                  __smallconst 0E00  
          _I2C_2_Master_Idle 156C            _I2C_2_Master_Init 1518            _I2C_2_Master_Stop 1648  
               _RxBufReadCnt 0057           ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001  
         ?_I2C_2_Master_Stop 0001                _headbuttDelay 00D6     initDCmotorsPWM@PWMperiod 0001  
                   ?_sprintf 001A                    _rampDelay 005E            _sendStringSerial4 14EE  
        ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001                     _LATAbits 0F79  
        ??_I2C_2_Master_Stop 0002                     _LATCbits 0F7B                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0002  
                   _PIE4bits 0E2D                     _PIR0bits 0E33                     _PIR4bits 0E37  
           ?_initDCmotorsPWM 0001            ??_sendCharSerial4 0001                     _SSP2CON2 0EDA  
        ??_sendStringSerial4 0003                     _SSP2STAT 0ED8                    _vfpfcnvrt 0E08  
  __end_of_I2C_2_Master_Idle 1594    __end_of_I2C_2_Master_Init 1542    __end_of_I2C_2_Master_Stop 1652  
I2C_2_Master_Write@data_byte 0002                 _TxBufReadCnt 0055                   vfpfcnvrt@c 0015  
                  copy_data0 13C2                    copy_data1 13E2    __end_of_sendStringSerial4 1518  
               ??_initUSART4 0001                     __Hrparam 0000                   vfprintf@ap 0018  
                   __Lrparam 0000                   vfprintf@fp 0016                   ?_vfpfcnvrt 000B  
                 _ANSELDbits 0EA7                   sprintf@fmt 001B                   _T0CON0bits 0FD5  
                 _T0CON1bits 0FD6           __end_of_initUSART4 1618                     __ptext10 14EE  
                   __ptext11 1618                     __ptext20 156C                     __ptext12 11F0  
                   __ptext21 1518                     __ptext13 15FA                     __ptext22 1542  
                   __ptext14 131E                     __ptext23 1594                     __ptext15 14BA  
                   __ptext16 15BC                     __ptext17 163C                     __ptext18 1648  
                   __ptext19 1652                 _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA  
                   isa$xinst 0000                   _RC4STAbits 0EE7                     int$flags 005F  
                   _vfprintf 1410                   _INTCONbits 0FF2                     intlevel2 0000  
                  sprintf@ap 001E                 _topGearRight 005C                  ??_vfpfcnvrt 000E  
           _color_click_init 14BA        sendIntSerial4@integer 002B                  _topGearLeft 005D  
                   sprintf@f 001F                     sprintf@s 001A                   _SSP2DATPPS 0E1D  
          ??_lights_flashing 0001                   _SSP2CLKPPS 0E1C                  _timer_count 0052  
                 _TX4STAbits 0EE8              _sendCharSerial4 1618  
