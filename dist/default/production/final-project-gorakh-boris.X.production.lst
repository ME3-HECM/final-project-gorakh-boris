

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 12:00:07 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 18/08/2023 GMT
    72                           ; 
    73                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   00339C                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _timer_high_pointer
   111   00339C  28                 	db	low _trail_timer_high
   112   00339D  01                 	db	high _trail_timer_high
   113                           
   114                           ;initializer for _topGearRight
   115   00339E  14                 	db	20
   116                           
   117                           ;initializer for _topGearLeft
   118   00339F  14                 	db	20
   119                           
   120                           ;initializer for _rampDelay
   121   0033A0  08                 	db	8
   122                           
   123                           ;initializer for _sample_count
   124   0033A1  14                 	db	20
   125                           
   126                           	psect	idataBANK0
   127   003344                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _manoeuvre_pointer
   131   003344  00                 	db	low _trail_manoeuvre
   132   003345  01                 	db	high _trail_manoeuvre
   133                           
   134                           ;initializer for _timer_low_pointer
   135   003346  14                 	db	low _trail_timer_low
   136   003347  01                 	db	high _trail_timer_low
   137                           
   138                           ;initializer for _squareDelay
   139   003348  012C               	dw	300
   140                           
   141                           ;initializer for _headbuttDelay
   142   00334A  0046               	dw	70
   143                           
   144                           ;initializer for _turn180Delay
   145   00334C  01FE               	dw	510
   146                           
   147                           ;initializer for _turnRight135Delay
   148   00334E  012C               	dw	300
   149                           
   150                           ;initializer for _turnLeft135Delay
   151   003350  012C               	dw	300
   152                           
   153                           ;initializer for _turnRight90Delay
   154   003352  00AF               	dw	175
   155                           
   156                           ;initializer for _turnLeft90Delay
   157   003354  00AF               	dw	175
   158                           
   159                           ;initializer for _wall_threshold
   160   003356  012C               	dw	300
   161                           
   162                           ;initializer for _turningGear
   163   003358  2A                 	db	42
   164   000000                     _TMR0H	set	4052
   165   000000                     _TX4REG	set	3812
   166   000000                     _RC4STAbits	set	3815
   167   000000                     _SP4BRGH	set	3814
   168   000000                     _LATEbits	set	3965
   169   000000                     _TRISEbits	set	3973
   170   000000                     _LATGbits	set	3967
   171   000000                     _TRISGbits	set	3975
   172   000000                     _LATFbits	set	3966
   173   000000                     _LATHbits	set	3968
   174   000000                     _TRISFbits	set	3974
   175   000000                     _TRISHbits	set	3976
   176   000000                     _SSP2CON2bits	set	3802
   177   000000                     _RX4PPS	set	3605
   178   000000                     _SSP2CLKPPS	set	3612
   179   000000                     _SSP2DATPPS	set	3613
   180   000000                     _RC7PPS	set	3689
   181   000000                     _RE2PPS	set	3700
   182   000000                     _LATAbits	set	3961
   183   000000                     _LATDbits	set	3964
   184   000000                     _TRISDbits	set	3972
   185   000000                     _T2PR	set	4028
   186   000000                     _T2CONbits	set	4029
   187   000000                     _CCPR2H	set	4006
   188   000000                     _CCPR1H	set	4010
   189   000000                     _TRISCbits	set	3971
   190   000000                     _TRISAbits	set	3969
   191   000000                     _LATCbits	set	3963
   192   000000                     _RE4PPS	set	3702
   193   000000                     _RG6PPS	set	3720
   194   000000                     _RD5PPS	set	3695
   195   000000                     _ANSELDbits	set	3751
   196   000000                     _SSP2ADD	set	3798
   197   000000                     _SSP2CON1bits	set	3801
   198   000000                     _CCPR4H	set	3873
   199   000000                     _CCPR3H	set	3877
   200   000000                     _TMR0L	set	4051
   201   000000                     _T0CON0bits	set	4053
   202   000000                     _T0CON1bits	set	4054
   203   000000                     _T2CLKCONbits	set	4031
   204   000000                     _T2HLTbits	set	4030
   205   000000                     _CCP1CONbits	set	4011
   206   000000                     _CCPTMRS0bits	set	4013
   207   000000                     _CCP2CONbits	set	4007
   208   000000                     _CCP3CONbits	set	3878
   209   000000                     _CCP4CONbits	set	3874
   210   000000                     _RC4REG	set	3811
   211   000000                     _SP4BRGL	set	3813
   212   000000                     _TX4STAbits	set	3816
   213   000000                     _BAUD4CONbits	set	3817
   214   000000                     _SSP2CON2	set	3802
   215   000000                     _SSP2STAT	set	3800
   216   000000                     _ANSELFbits	set	3764
   217   000000                     _SSP2BUF	set	3797
   218   000000                     _PIE0bits	set	3625
   219   000000                     _PIR4bits	set	3639
   220   000000                     _RC0PPS	set	3682
   221   000000                     _RD6PPS	set	3696
   222   000000                     _INTCONbits	set	4082
   223   000000                     _PIR0bits	set	3635
   224                           
   225                           	psect	smallconst
   226   000E00                     __psmallconst:
   227                           	callstack 0
   228   000E00  00                 	db	0
   229   000E01                     STR_5:
   230                           
   231                           ; BSR set to: 14
   232   000E01  25                 	db	37
   233   000E02  75                 	db	117	;'u'
   234   000E03  20                 	db	32
   235   000E04  25                 	db	37
   236   000E05  75                 	db	117	;'u'
   237   000E06  20                 	db	32
   238   000E07  25                 	db	37
   239   000E08  75                 	db	117	;'u'
   240   000E09  20                 	db	32
   241   000E0A  25                 	db	37
   242   000E0B  75                 	db	117	;'u'
   243   000E0C  20                 	db	32
   244   000E0D  0D                 	db	13
   245   000E0E  00                 	db	0
   246   000E0F                     STR_1:
   247                           
   248                           ; BSR set to: 14
   249   000E0F  25                 	db	37
   250   000E10  64                 	db	100	;'d'
   251   000E11  20                 	db	32
   252   000E12  0D                 	db	13
   253   000E13  00                 	db	0
   254   000E14                     STR_2:
   255                           
   256                           ; BSR set to: 14
   257   000E14  25                 	db	37
   258   000E15  64                 	db	100	;'d'
   259   000E16  20                 	db	32
   260   000E17  00                 	db	0
   261   000E18  00                 	db	0	; dummy byte at the end
   262   000000                     
   263                           ; #config settings
   264                           
   265                           	psect	cinit
   266   002D02                     __pcinit:
   267                           	callstack 0
   268   002D02                     start_initialization:
   269                           	callstack 0
   270   002D02                     __initialization:
   271                           	callstack 0
   272                           
   273                           ; Initialize objects allocated to BANK0 (21 bytes)
   274                           ; load TBLPTR registers with __pidataBANK0
   275   002D02  0E44               	movlw	low __pidataBANK0
   276   002D04  6EF6               	movwf	tblptrl,c
   277   002D06  0E33               	movlw	high __pidataBANK0
   278   002D08  6EF7               	movwf	tblptrh,c
   279   002D0A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   280   002D0C  6EF8               	movwf	tblptru,c
   281   002D0E  EE00  F0A8         	lfsr	0,__pdataBANK0
   282   002D12  EE10 F015          	lfsr	1,21
   283   002D16                     copy_data0:
   284   002D16  0009               	tblrd		*+
   285   002D18  CFF5 FFEE          	movff	tablat,postinc0
   286   002D1C  50E5               	movf	postdec1,w,c
   287   002D1E  50E1               	movf	fsr1l,w,c
   288   002D20  E1FA               	bnz	copy_data0
   289                           
   290                           ; Initialize objects allocated to COMRAM (6 bytes)
   291                           ; load TBLPTR registers with __pidataCOMRAM
   292   002D22  0E9C               	movlw	low __pidataCOMRAM
   293   002D24  6EF6               	movwf	tblptrl,c
   294   002D26  0E33               	movlw	high __pidataCOMRAM
   295   002D28  6EF7               	movwf	tblptrh,c
   296   002D2A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   297   002D2C  6EF8               	movwf	tblptru,c
   298   002D2E  EE00  F054         	lfsr	0,__pdataCOMRAM
   299   002D32  EE10 F006          	lfsr	1,6
   300   002D36                     copy_data1:
   301   002D36  0009               	tblrd		*+
   302   002D38  CFF5 FFEE          	movff	tablat,postinc0
   303   002D3C  50E5               	movf	postdec1,w,c
   304   002D3E  50E1               	movf	fsr1l,w,c
   305   002D40  E1FA               	bnz	copy_data1
   306                           
   307                           ; Clear objects allocated to BANK1 (60 bytes)
   308   002D42  EE01  F000         	lfsr	0,__pbssBANK1
   309   002D46  0E3C               	movlw	60
   310   002D48                     clear_0:
   311   002D48  6AEE               	clrf	postinc0,c
   312   002D4A  06E8               	decf	wreg,f,c
   313   002D4C  E1FD               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK0 (39 bytes)
   316   002D4E  EE00  F060         	lfsr	0,__pbssBANK0
   317   002D52  0E27               	movlw	39
   318   002D54                     clear_1:
   319   002D54  6AEE               	clrf	postinc0,c
   320   002D56  06E8               	decf	wreg,f,c
   321   002D58  E1FD               	bnz	clear_1
   322                           
   323                           ; Clear objects allocated to COMRAM (4 bytes)
   324   002D5A  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   325   002D5C  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   326   002D5E  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   327   002D60  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   328   002D62                     end_of_initialization:
   329                           	callstack 0
   330   002D62                     __end_of__initialization:
   331                           	callstack 0
   332   002D62  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333   002D64  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334   002D66  0100               	movlb	0
   335   002D68  EF18  F012         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338   00005A                     __pbssCOMRAM:
   339                           	callstack 0
   340   00005A                     _manoeuvre_count:
   341                           	callstack 0
   342   00005A                     	ds	1
   343   00005B                     _lost_flag:
   344                           	callstack 0
   345   00005B                     	ds	1
   346   00005C                     _return_flag:
   347                           	callstack 0
   348   00005C                     	ds	1
   349   00005D                     _returning:
   350                           	callstack 0
   351   00005D                     	ds	1
   352                           
   353                           	psect	dataCOMRAM
   354   000054                     __pdataCOMRAM:
   355                           	callstack 0
   356   000054                     _timer_high_pointer:
   357                           	callstack 0
   358   000054                     	ds	2
   359   000056                     _topGearRight:
   360                           	callstack 0
   361   000056                     	ds	1
   362   000057                     _topGearLeft:
   363                           	callstack 0
   364   000057                     	ds	1
   365   000058                     _rampDelay:
   366                           	callstack 0
   367   000058                     	ds	1
   368   000059                     _sample_count:
   369                           	callstack 0
   370   000059                     	ds	1
   371                           
   372                           	psect	bssBANK0
   373   000060                     __pbssBANK0:
   374                           	callstack 0
   375   000060                     _dbuf:
   376                           	callstack 0
   377   000060                     	ds	32
   378   000080                     _nout:
   379                           	callstack 0
   380   000080                     	ds	2
   381   000082                     _width:
   382                           	callstack 0
   383   000082                     	ds	2
   384   000084                     _prec:
   385                           	callstack 0
   386   000084                     	ds	2
   387   000086                     _flags:
   388                           	callstack 0
   389   000086                     	ds	1
   390                           
   391                           	psect	dataBANK0
   392   0000A8                     __pdataBANK0:
   393                           	callstack 0
   394   0000A8                     _manoeuvre_pointer:
   395                           	callstack 0
   396   0000A8                     	ds	2
   397   0000AA                     _timer_low_pointer:
   398                           	callstack 0
   399   0000AA                     	ds	2
   400   0000AC                     _squareDelay:
   401                           	callstack 0
   402   0000AC                     	ds	2
   403   0000AE                     _headbuttDelay:
   404                           	callstack 0
   405   0000AE                     	ds	2
   406   0000B0                     _turn180Delay:
   407                           	callstack 0
   408   0000B0                     	ds	2
   409   0000B2                     _turnRight135Delay:
   410                           	callstack 0
   411   0000B2                     	ds	2
   412   0000B4                     _turnLeft135Delay:
   413                           	callstack 0
   414   0000B4                     	ds	2
   415   0000B6                     _turnRight90Delay:
   416                           	callstack 0
   417   0000B6                     	ds	2
   418   0000B8                     _turnLeft90Delay:
   419                           	callstack 0
   420   0000B8                     	ds	2
   421   0000BA                     _wall_threshold:
   422                           	callstack 0
   423   0000BA                     	ds	2
   424   0000BC                     _turningGear:
   425                           	callstack 0
   426   0000BC                     	ds	1
   427                           
   428                           	psect	bssBANK1
   429   000100                     __pbssBANK1:
   430                           	callstack 0
   431   000100                     _trail_manoeuvre:
   432                           	callstack 0
   433   000100                     	ds	20
   434   000114                     _trail_timer_low:
   435                           	callstack 0
   436   000114                     	ds	20
   437   000128                     _trail_timer_high:
   438                           	callstack 0
   439   000128                     	ds	20
   440                           
   441                           	psect	cstackBANK0
   442   000087                     __pcstackBANK0:
   443                           	callstack 0
   444   000087                     main@k:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x0
   448   000087                     	ds	1
   449   000088                     main@motorL:
   450                           	callstack 0
   451                           
   452                           ; 9 bytes @ 0x1
   453   000088                     	ds	9
   454   000091                     main@motorR:
   455                           	callstack 0
   456                           
   457                           ; 9 bytes @ 0xA
   458   000091                     	ds	9
   459   00009A                     main@HSV_colour:
   460                           	callstack 0
   461                           
   462                           ; 6 bytes @ 0x13
   463   00009A                     	ds	6
   464   0000A0                     main@RGBC_colour:
   465                           	callstack 0
   466                           
   467                           ; 8 bytes @ 0x19
   468   0000A0                     	ds	8
   469                           
   470                           	psect	cstackCOMRAM
   471   000001                     __pcstackCOMRAM:
   472                           	callstack 0
   473   000001                     ??_toggle_tricolour_LED:
   474   000001                     ??_I2C_2_Master_Idle:
   475   000001                     ?_max_RGB:
   476                           	callstack 0
   477   000001                     ?_min_RGB:
   478                           	callstack 0
   479   000001                     ?___awdiv:
   480                           	callstack 0
   481   000001                     ?___awmod:
   482                           	callstack 0
   483   000001                     ?___lwdiv:
   484                           	callstack 0
   485   000001                     ?___lwmod:
   486                           	callstack 0
   487   000001                     ?___lmul:
   488                           	callstack 0
   489   000001                     ?___lldiv:
   490                           	callstack 0
   491   000001                     ?___xxtofl:
   492                           	callstack 0
   493   000001                     max_RGB@p:
   494                           	callstack 0
   495   000001                     min_RGB@p:
   496                           	callstack 0
   497   000001                     colour_to_key@p1:
   498                           	callstack 0
   499   000001                     sendCharSerial4@charToSend:
   500                           	callstack 0
   501   000001                     write_timer@tL:
   502                           	callstack 0
   503   000001                     initDCmotorsPWM@PWMperiod:
   504                           	callstack 0
   505   000001                     ___awdiv@dividend:
   506                           	callstack 0
   507   000001                     ___awmod@dividend:
   508                           	callstack 0
   509   000001                     ___lwdiv@dividend:
   510                           	callstack 0
   511   000001                     ___lwmod@dividend:
   512                           	callstack 0
   513   000001                     fputc@c:
   514                           	callstack 0
   515   000001                     ___lmul@multiplier:
   516                           	callstack 0
   517   000001                     ___lldiv@dividend:
   518                           	callstack 0
   519   000001                     ___xxtofl@val:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x0
   523   000001                     	ds	1
   524   000002                     ??_I2C_2_Master_Read:
   525   000002                     colour_to_key@p2:
   526                           	callstack 0
   527   000002                     I2C_2_Master_Write@data_byte:
   528                           	callstack 0
   529   000002                     write_timer@tH:
   530                           	callstack 0
   531   000002                     sendStringSerial4@string:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x1
   535   000002                     	ds	1
   536   000003                     color_writetoaddr@value:
   537                           	callstack 0
   538   000003                     I2C_2_Master_Read@ack:
   539                           	callstack 0
   540   000003                     fputc@fp:
   541                           	callstack 0
   542   000003                     ___awdiv@divisor:
   543                           	callstack 0
   544   000003                     ___awmod@divisor:
   545                           	callstack 0
   546   000003                     ___lwdiv@divisor:
   547                           	callstack 0
   548   000003                     ___lwmod@divisor:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x2
   552   000003                     	ds	1
   553   000004                     ??_fputc:
   554   000004                     color_writetoaddr@address:
   555                           	callstack 0
   556   000004                     I2C_2_Master_Read@tmp:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x3
   560   000004                     	ds	1
   561   000005                     ??_color_click_init:
   562   000005                     ??___xxtofl:
   563   000005                     ?_color_read_Red:
   564                           	callstack 0
   565   000005                     ?_color_read_Green:
   566                           	callstack 0
   567   000005                     ?_color_read_Blue:
   568                           	callstack 0
   569   000005                     ?_color_read_Clear:
   570                           	callstack 0
   571   000005                     colour_to_key@key:
   572                           	callstack 0
   573   000005                     ___awdiv@counter:
   574                           	callstack 0
   575   000005                     ___awmod@counter:
   576                           	callstack 0
   577   000005                     ___lwmod@counter:
   578                           	callstack 0
   579   000005                     max_RGB@max_val:
   580                           	callstack 0
   581   000005                     min_RGB@min_val:
   582                           	callstack 0
   583   000005                     ___lwdiv@quotient:
   584                           	callstack 0
   585   000005                     ___lmul@multiplicand:
   586                           	callstack 0
   587   000005                     ___lldiv@divisor:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x4
   591   000005                     	ds	1
   592   000006                     ___awdiv@sign:
   593                           	callstack 0
   594   000006                     ___awmod@sign:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x5
   598   000006                     	ds	1
   599   000007                     ??_color_read_Red:
   600   000007                     ??_color_read_Green:
   601   000007                     ??_color_read_Blue:
   602   000007                     ??_color_read_Clear:
   603   000007                     ?_abs:
   604                           	callstack 0
   605   000007                     ___lwdiv@counter:
   606                           	callstack 0
   607   000007                     ___awdiv@quotient:
   608                           	callstack 0
   609   000007                     abs@a:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613   000007                     	ds	2
   614   000009                     ??_abs:
   615   000009                     ___xxtofl@sign:
   616                           	callstack 0
   617   000009                     ___lmul@product:
   618                           	callstack 0
   619   000009                     ___lldiv@quotient:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x8
   623   000009                     	ds	1
   624   00000A                     ___xxtofl@exp:
   625                           	callstack 0
   626   00000A                     color_read_Red@tmp:
   627                           	callstack 0
   628   00000A                     color_read_Green@tmp:
   629                           	callstack 0
   630   00000A                     color_read_Blue@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Clear@tmp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x9
   636   00000A                     	ds	1
   637   00000B                     ?_vfpfcnvrt:
   638                           	callstack 0
   639   00000B                     vfpfcnvrt@fp:
   640                           	callstack 0
   641   00000B                     ___xxtofl@arg:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0xA
   645   00000B                     	ds	1
   646   00000C                     getRGBCval@p:
   647                           	callstack 0
   648   00000C                     vfpfcnvrt@fmt:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0xB
   652   00000C                     	ds	1
   653   00000D                     ___lldiv@counter:
   654                           	callstack 0
   655   00000D                     vfpfcnvrt@ap:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0xC
   659   00000D                     	ds	1
   660   00000E                     ??_vfpfcnvrt:
   661   00000E                     average_RGBC@p:
   662                           	callstack 0
   663   00000E                     convert_HSV@p1:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0xD
   667   00000E                     	ds	1
   668   00000F                     ??_average_RGBC:
   669   00000F                     ?___flmul:
   670                           	callstack 0
   671   00000F                     convert_HSV@p2:
   672                           	callstack 0
   673   00000F                     ___flmul@b:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0xE
   677   00000F                     	ds	1
   678   000010                     ??_convert_HSV:
   679   000010                     vfpfcnvrt@done:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0xF
   683   000010                     	ds	1
   684   000011                     average_RGBC@i:
   685                           	callstack 0
   686   000011                     vfpfcnvrt@cnt:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x10
   690   000011                     	ds	1
   691   000012                     average_RGBC@temp_R:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x11
   695   000012                     	ds	1
   696   000013                     vfpfcnvrt@cp:
   697                           	callstack 0
   698   000013                     ___flmul@a:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x12
   702   000013                     	ds	1
   703   000014                     vfpfcnvrt@convarg:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x13
   707   000014                     	ds	2
   708   000016                     average_RGBC@temp_G:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x15
   712   000016                     	ds	1
   713   000017                     ??___flmul:
   714                           
   715                           ; 1 bytes @ 0x16
   716   000017                     	ds	1
   717   000018                     vfpfcnvrt@c:
   718                           	callstack 0
   719   000018                     convert_HSV@sat_scale:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x17
   723   000018                     	ds	1
   724   000019                     ?_vfprintf:
   725                           	callstack 0
   726   000019                     vfprintf@fp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x18
   730   000019                     	ds	1
   731   00001A                     vfprintf@fmt:
   732                           	callstack 0
   733   00001A                     convert_HSV@m:
   734                           	callstack 0
   735   00001A                     average_RGBC@temp_B:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x19
   739   00001A                     	ds	1
   740   00001B                     ___flmul@sign:
   741                           	callstack 0
   742   00001B                     vfprintf@ap:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x1A
   746   00001B                     	ds	1
   747   00001C                     vfprintf@cfmt:
   748                           	callstack 0
   749   00001C                     convert_HSV@sat:
   750                           	callstack 0
   751   00001C                     ___flmul@grs:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x1B
   755   00001C                     	ds	1
   756   00001D                     ?_sprintf:
   757                           	callstack 0
   758   00001D                     sprintf@s:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x1C
   762   00001D                     	ds	1
   763   00001E                     convert_HSV@hue:
   764                           	callstack 0
   765   00001E                     average_RGBC@temp_C:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x1D
   769   00001E                     	ds	1
   770   00001F                     sprintf@fmt:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x1E
   774   00001F                     	ds	1
   775   000020                     ___flmul@aexp:
   776                           	callstack 0
   777   000020                     convert_HSV@temp_614:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x1F
   781   000020                     	ds	1
   782   000021                     ___flmul@bexp:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x20
   786   000021                     	ds	1
   787   000022                     ___flmul@prod:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x21
   791   000022                     	ds	2
   792   000024                     convert_HSV@temp:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x23
   796   000024                     	ds	2
   797   000026                     ___flmul@temp:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x25
   801   000026                     	ds	2
   802   000028                     ?___fltol:
   803                           	callstack 0
   804   000028                     sprintf@ret:
   805                           	callstack 0
   806   000028                     convert_HSV@temp_610:
   807                           	callstack 0
   808   000028                     ___fltol@f1:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x27
   812   000028                     	ds	2
   813   00002A                     sprintf@ap:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x29
   817   00002A                     	ds	1
   818   00002B                     sprintf@f:
   819                           	callstack 0
   820                           
   821                           ; 12 bytes @ 0x2A
   822   00002B                     	ds	1
   823   00002C                     ??___fltol:
   824   00002C                     convert_HSV@temp_611:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x2B
   828   00002C                     	ds	4
   829   000030                     ___fltol@sign1:
   830                           	callstack 0
   831   000030                     convert_HSV@temp_612:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x2F
   835   000030                     	ds	1
   836   000031                     ___fltol@exp1:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x30
   840   000031                     	ds	1
   841   000032                     scale_RGB@p:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x31
   845   000032                     	ds	1
   846   000033                     ??_scale_RGB:
   847                           
   848                           ; 1 bytes @ 0x32
   849   000033                     	ds	1
   850   000034                     convert_HSV@temp_613:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x33
   854   000034                     	ds	3
   855   000037                     sendRGBCvalSerial4@col_val:
   856                           	callstack 0
   857   000037                     sendHSVvalSerial4@col_val:
   858                           	callstack 0
   859   000037                     sendIntSerial4@integer:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x36
   863   000037                     	ds	1
   864   000038                     convert_HSV@temp_609:
   865                           	callstack 0
   866   000038                     sendHSVvalSerial4@tempStr:
   867                           	callstack 0
   868   000038                     sendRGBCvalSerial4@tempStr:
   869                           	callstack 0
   870                           
   871                           ; 26 bytes @ 0x37
   872   000038                     	ds	1
   873   000039                     sendIntSerial4@string:
   874                           	callstack 0
   875                           
   876                           ; 17 bytes @ 0x38
   877   000039                     	ds	3
   878   00003C                     convert_HSV@hue_scale:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x3B
   882   00003C                     	ds	2
   883   00003E                     convert_HSV@M:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x3D
   887   00003E                     	ds	2
   888   000040                     convert_HSV@C:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x3F
   892   000040                     	ds	18
   893   000052                     ??_main:
   894                           
   895                           ; 1 bytes @ 0x51
   896   000052                     	ds	2
   897                           
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 27 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  k               1    0[BANK0 ] unsigned char 
   908 ;;  motorR          9   10[BANK0 ] struct DC_motor
   909 ;;  motorL          9    1[BANK0 ] struct DC_motor
   910 ;;  RGBC_colour     8   25[BANK0 ] struct RGBC_val
   911 ;;  HSV_colour      6   19[BANK0 ] struct HSV_val
   912 ;;  PWMcycle        2    0        unsigned int 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;      Totals:         2      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   926 ;;Total ram usage:       35 bytes
   927 ;; Hardware stack levels required when called: 7
   928 ;; This function calls:
   929 ;;		_Timer0_init
   930 ;;		_average_RGBC
   931 ;;		_buggy_lights_init
   932 ;;		_color_click_init
   933 ;;		_colour_to_key
   934 ;;		_convert_HSV
   935 ;;		_initDCmotorsPWM
   936 ;;		_initUSART4
   937 ;;		_scale_RGB
   938 ;;		_sendHSVvalSerial4
   939 ;;		_sendIntSerial4
   940 ;;		_sendRGBCvalSerial4
   941 ;;		_toggle_tricolour_LED
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text0
   948   002430                     __ptext0:
   949                           	callstack 0
   950   002430                     _main:
   951                           	callstack 24
   952   002430                     
   953                           ;main.c: 28:     struct RGBC_val RGBC_colour;;main.c: 29:         RGBC_colour.R = 0;
   954   002430  0E00               	movlw	0
   955   002432  0100               	movlb	0	; () banked
   956   002434  6FA1               	movwf	(main@RGBC_colour+1)& (0+255),b
   957   002436  0E00               	movlw	0
   958   002438  6FA0               	movwf	main@RGBC_colour& (0+255),b
   959                           
   960                           ;main.c: 30:         RGBC_colour.G = 0;
   961   00243A  0E00               	movlw	0
   962   00243C  6FA3               	movwf	(main@RGBC_colour+3)& (0+255),b
   963   00243E  0E00               	movlw	0
   964   002440  6FA2               	movwf	(main@RGBC_colour+2)& (0+255),b
   965                           
   966                           ;main.c: 31:         RGBC_colour.B = 0;
   967   002442  0E00               	movlw	0
   968   002444  6FA5               	movwf	(main@RGBC_colour+5)& (0+255),b
   969   002446  0E00               	movlw	0
   970   002448  6FA4               	movwf	(main@RGBC_colour+4)& (0+255),b
   971                           
   972                           ;main.c: 32:         RGBC_colour.C = 0;
   973   00244A  0E00               	movlw	0
   974   00244C  6FA7               	movwf	(main@RGBC_colour+7)& (0+255),b
   975   00244E  0E00               	movlw	0
   976   002450  6FA6               	movwf	(main@RGBC_colour+6)& (0+255),b
   977                           
   978                           ;main.c: 34:     struct HSV_val HSV_colour;;main.c: 35:         HSV_colour.H = 0;
   979   002452  0E00               	movlw	0
   980   002454  6F9B               	movwf	(main@HSV_colour+1)& (0+255),b
   981   002456  0E00               	movlw	0
   982   002458  6F9A               	movwf	main@HSV_colour& (0+255),b
   983                           
   984                           ;main.c: 36:         HSV_colour.S = 0;
   985   00245A  0E00               	movlw	0
   986   00245C  6F9D               	movwf	(main@HSV_colour+3)& (0+255),b
   987   00245E  0E00               	movlw	0
   988   002460  6F9C               	movwf	(main@HSV_colour+2)& (0+255),b
   989                           
   990                           ;main.c: 37:         HSV_colour.V = 0;
   991   002462  0E00               	movlw	0
   992   002464  6F9F               	movwf	(main@HSV_colour+5)& (0+255),b
   993   002466  0E00               	movlw	0
   994   002468  6F9E               	movwf	(main@HSV_colour+4)& (0+255),b
   995                           
   996                           ;main.c: 40:     struct DC_motor motorL, motorR;;main.c: 41:         motorL.power = 0;
   997   00246A  0E00               	movlw	0
   998   00246C  6F88               	movwf	main@motorL& (0+255),b
   999                           
  1000                           ;main.c: 42:         motorL.direction = 1;
  1001   00246E  0E01               	movlw	1
  1002   002470  6F89               	movwf	(main@motorL+1)& (0+255),b
  1003                           
  1004                           ;main.c: 43:         motorL.brakemode = 1;
  1005   002472  0E01               	movlw	1
  1006   002474  6F8A               	movwf	(main@motorL+2)& (0+255),b
  1007   002476                     
  1008                           ; BSR set to: 0
  1009                           ;main.c: 44:         motorL.PWMperiod = PWMcycle;
  1010   002476  0E00               	movlw	0
  1011   002478  6F8C               	movwf	(main@motorL+4)& (0+255),b
  1012   00247A  0E63               	movlw	99
  1013   00247C  6F8B               	movwf	(main@motorL+3)& (0+255),b
  1014   00247E                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 45:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1017   00247E  0EAA               	movlw	170
  1018   002480  6F8D               	movwf	(main@motorL+5)& (0+255),b
  1019   002482  0E0F               	movlw	15
  1020   002484  6F8E               	movwf	(main@motorL+6)& (0+255),b
  1021   002486                     
  1022                           ; BSR set to: 0
  1023                           ;main.c: 46:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1024   002486  0EA6               	movlw	166
  1025   002488  6F8F               	movwf	(main@motorL+7)& (0+255),b
  1026   00248A  0E0F               	movlw	15
  1027   00248C  6F90               	movwf	(main@motorL+8)& (0+255),b
  1028                           
  1029                           ;main.c: 47:         motorR.power = 0;
  1030   00248E  0E00               	movlw	0
  1031   002490  6F91               	movwf	main@motorR& (0+255),b
  1032                           
  1033                           ;main.c: 48:         motorR.direction = 1;
  1034   002492  0E01               	movlw	1
  1035   002494  6F92               	movwf	(main@motorR+1)& (0+255),b
  1036                           
  1037                           ;main.c: 49:         motorR.brakemode = 1;
  1038   002496  0E01               	movlw	1
  1039   002498  6F93               	movwf	(main@motorR+2)& (0+255),b
  1040   00249A                     
  1041                           ; BSR set to: 0
  1042                           ;main.c: 50:         motorR.PWMperiod = PWMcycle;
  1043   00249A  0E00               	movlw	0
  1044   00249C  6F95               	movwf	(main@motorR+4)& (0+255),b
  1045   00249E  0E63               	movlw	99
  1046   0024A0  6F94               	movwf	(main@motorR+3)& (0+255),b
  1047   0024A2                     
  1048                           ; BSR set to: 0
  1049                           ;main.c: 51:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1050   0024A2  0E25               	movlw	37
  1051   0024A4  6F96               	movwf	(main@motorR+5)& (0+255),b
  1052   0024A6  0E0F               	movlw	15
  1053   0024A8  6F97               	movwf	(main@motorR+6)& (0+255),b
  1054   0024AA                     
  1055                           ; BSR set to: 0
  1056                           ;main.c: 52:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1057   0024AA  0E21               	movlw	33
  1058   0024AC  6F98               	movwf	(main@motorR+7)& (0+255),b
  1059   0024AE  0E0F               	movlw	15
  1060   0024B0  6F99               	movwf	(main@motorR+8)& (0+255),b
  1061   0024B2                     
  1062                           ; BSR set to: 0
  1063                           ;main.c: 55:     initDCmotorsPWM(PWMcycle);
  1064   0024B2  0E00               	movlw	0
  1065   0024B4  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1066   0024B6  0E63               	movlw	99
  1067   0024B8  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1068   0024BA  EC83  F015         	call	_initDCmotorsPWM	;wreg free
  1069                           
  1070                           ;main.c: 56:     buggy_lights_init();
  1071   0024BE  EC14  F019         	call	_buggy_lights_init	;wreg free
  1072   0024C2                     
  1073                           ;main.c: 57:     color_click_init();
  1074   0024C2  ECFA  F018         	call	_color_click_init	;wreg free
  1075   0024C6                     
  1076                           ;main.c: 58:     initUSART4();
  1077   0024C6  EC87  F019         	call	_initUSART4	;wreg free
  1078   0024CA                     
  1079                           ;main.c: 59:     Timer0_init();
  1080   0024CA  EC54  F019         	call	_Timer0_init	;wreg free
  1081   0024CE                     
  1082                           ;main.c: 63:         TRISDbits.TRISD7 = 0;
  1083   0024CE  9E84               	bcf	132,7,c	;volatile
  1084   0024D0                     
  1085                           ;main.c: 64:         TRISHbits.TRISH3 = 0;
  1086   0024D0  9688               	bcf	136,3,c	;volatile
  1087   0024D2                     
  1088                           ;main.c: 66:         LATDbits.LATD7 = 0;
  1089   0024D2  9E7C               	bcf	124,7,c	;volatile
  1090   0024D4                     
  1091                           ;main.c: 67:         LATHbits.LATH3 = 0;
  1092   0024D4  9680               	bcf	128,3,c	;volatile
  1093   0024D6                     
  1094                           ;main.c: 71:         TRISFbits.TRISF2 = 1;
  1095   0024D6  8486               	bsf	134,2,c	;volatile
  1096   0024D8                     
  1097                           ;main.c: 72:         TRISFbits.TRISF3 = 1;
  1098   0024D8  8686               	bsf	134,3,c	;volatile
  1099   0024DA                     
  1100                           ;main.c: 74:         ANSELFbits.ANSELF2 = 0;
  1101   0024DA  010E               	movlb	14	; () banked
  1102   0024DC  95B4               	bcf	180,2,b	;volatile
  1103   0024DE                     
  1104                           ; BSR set to: 14
  1105                           ;main.c: 75:         ANSELFbits.ANSELF3 = 0;
  1106   0024DE  97B4               	bcf	180,3,b	;volatile
  1107                           
  1108                           ;main.c: 80:     LATDbits.LATD7 = !LATDbits.LATD7;
  1109   0024E0  AE7C               	btfss	124,7,c	;volatile
  1110   0024E2  EF75  F012         	goto	u3691
  1111   0024E6  EF79  F012         	goto	u3690
  1112   0024EA                     u3691:
  1113   0024EA  6A52               	clrf	??_main^0,c
  1114   0024EC  2A52               	incf	??_main^0,f,c
  1115   0024EE  EF7A  F012         	goto	u3708
  1116   0024F2                     u3690:
  1117   0024F2  6A52               	clrf	??_main^0,c
  1118   0024F4                     u3708:
  1119   0024F4  3252               	rrcf	??_main^0,f,c
  1120   0024F6  3252               	rrcf	??_main^0,f,c
  1121   0024F8  507C               	movf	124,w,c	;volatile
  1122   0024FA  1852               	xorwf	??_main^0,w,c
  1123   0024FC  0B7F               	andlw	-129
  1124   0024FE  1852               	xorwf	??_main^0,w,c
  1125   002500  6E7C               	movwf	124,c	;volatile
  1126                           
  1127                           ;main.c: 81:     LATHbits.LATH3 = !LATHbits.LATH3;
  1128   002502  A680               	btfss	128,3,c	;volatile
  1129   002504  EF86  F012         	goto	u3711
  1130   002508  EF8A  F012         	goto	u3710
  1131   00250C                     u3711:
  1132   00250C  6A52               	clrf	??_main^0,c
  1133   00250E  2A52               	incf	??_main^0,f,c
  1134   002510  EF8B  F012         	goto	u3728
  1135   002514                     u3710:
  1136   002514  6A52               	clrf	??_main^0,c
  1137   002516                     u3728:
  1138   002516  4652               	rlncf	??_main^0,f,c
  1139   002518  4652               	rlncf	??_main^0,f,c
  1140   00251A  4652               	rlncf	??_main^0,f,c
  1141   00251C  5080               	movf	128,w,c	;volatile
  1142   00251E  1852               	xorwf	??_main^0,w,c
  1143   002520  0BF7               	andlw	-9
  1144   002522  1852               	xorwf	??_main^0,w,c
  1145   002524  6E80               	movwf	128,c	;volatile
  1146   002526                     
  1147                           ;main.c: 82:     toggle_tricolour_LED();
  1148   002526  ECB6  F013         	call	_toggle_tricolour_LED	;wreg free
  1149   00252A                     l4280:
  1150                           
  1151                           ;main.c: 87:         average_RGBC(&RGBC_colour);
  1152   00252A  0EA0               	movlw	low main@RGBC_colour
  1153   00252C  6E0E               	movwf	average_RGBC@p^0,c
  1154   00252E  EC40  F010         	call	_average_RGBC	;wreg free
  1155   002532                     
  1156                           ;main.c: 88:         scale_RGB(&RGBC_colour);
  1157   002532  0EA0               	movlw	low main@RGBC_colour
  1158   002534  6E32               	movwf	scale_RGB@p^0,c
  1159   002536  EC4B  F013         	call	_scale_RGB	;wreg free
  1160   00253A                     
  1161                           ;main.c: 89:         convert_HSV(&HSV_colour, &RGBC_colour);
  1162   00253A  0E9A               	movlw	low main@HSV_colour
  1163   00253C  6E0E               	movwf	convert_HSV@p1^0,c
  1164   00253E  0EA0               	movlw	low main@RGBC_colour
  1165   002540  6E0F               	movwf	convert_HSV@p2^0,c
  1166   002542  EC0D  F007         	call	_convert_HSV	;wreg free
  1167   002546                     
  1168                           ;main.c: 91:         unsigned char k = colour_to_key(&HSV_colour, &RGBC_colour);
  1169   002546  0E9A               	movlw	low main@HSV_colour
  1170   002548  6E01               	movwf	colour_to_key@p1^0,c
  1171   00254A  0EA0               	movlw	low main@RGBC_colour
  1172   00254C  6E02               	movwf	colour_to_key@p2^0,c
  1173   00254E  EC73  F00A         	call	_colour_to_key	;wreg free
  1174   002552  0100               	movlb	0	; () banked
  1175   002554  6F87               	movwf	main@k& (0+255),b
  1176   002556                     
  1177                           ; BSR set to: 0
  1178                           ;main.c: 93:         sendRGBCvalSerial4(&RGBC_colour);
  1179   002556  0EA0               	movlw	low main@RGBC_colour
  1180   002558  6E37               	movwf	sendRGBCvalSerial4@col_val^0,c
  1181   00255A  EC4E  F017         	call	_sendRGBCvalSerial4	;wreg free
  1182   00255E                     
  1183                           ;main.c: 94:         sendHSVvalSerial4(&HSV_colour);
  1184   00255E  0E9A               	movlw	low main@HSV_colour
  1185   002560  6E37               	movwf	sendHSVvalSerial4@col_val^0,c
  1186   002562  EC73  F018         	call	_sendHSVvalSerial4	;wreg free
  1187   002566                     
  1188                           ;main.c: 95:         sendIntSerial4((int)k);
  1189   002566  C087  F037         	movff	main@k,sendIntSerial4@integer
  1190   00256A  6A38               	clrf	(sendIntSerial4@integer+1)^0,c
  1191   00256C  EC66  F019         	call	_sendIntSerial4	;wreg free
  1192   002570                     
  1193                           ;main.c: 97:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1194   002570  0E29               	movlw	41
  1195   002572  6E53               	movwf	(??_main+1)^0,c
  1196   002574  0E96               	movlw	150
  1197   002576  6E52               	movwf	??_main^0,c
  1198   002578  0E7F               	movlw	127
  1199   00257A                     u3887:
  1200   00257A  2EE8               	decfsz	wreg,f,c
  1201   00257C  D7FE               	bra	u3887
  1202   00257E  2E52               	decfsz	??_main^0,f,c
  1203   002580  D7FC               	bra	u3887
  1204   002582  2E53               	decfsz	(??_main+1)^0,f,c
  1205   002584  D7FA               	bra	u3887
  1206   002586  0000               	nop	
  1207   002588  EF95  F012         	goto	l4280
  1208   00258C  EF1E  F000         	goto	start
  1209   002590                     __end_of_main:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _toggle_tricolour_LED *****************
  1213 ;; Defined at:
  1214 ;;		line 84 in file "buggy_lights.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;Total ram usage:        1 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text1
  1243   00276C                     __ptext1:
  1244                           	callstack 0
  1245   00276C                     _toggle_tricolour_LED:
  1246                           	callstack 29
  1247   00276C                     
  1248                           ;buggy_lights.c: 88:         LATGbits.LATG1 = !LATGbits.LATG1;
  1249   00276C  A27F               	btfss	127,1,c	;volatile
  1250   00276E  EFBB  F013         	goto	u3051
  1251   002772  EFBF  F013         	goto	u3050
  1252   002776                     u3051:
  1253   002776  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1254   002778  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1255   00277A  EFC0  F013         	goto	u3068
  1256   00277E                     u3050:
  1257   00277E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1258   002780                     u3068:
  1259   002780  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1260   002782  507F               	movf	127,w,c	;volatile
  1261   002784  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1262   002786  0BFD               	andlw	-3
  1263   002788  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1264   00278A  6E7F               	movwf	127,c	;volatile
  1265                           
  1266                           ;buggy_lights.c: 89:         LATAbits.LATA4 = !LATAbits.LATA4;
  1267   00278C  A879               	btfss	121,4,c	;volatile
  1268   00278E  EFCB  F013         	goto	u3071
  1269   002792  EFCF  F013         	goto	u3070
  1270   002796                     u3071:
  1271   002796  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1272   002798  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1273   00279A  EFD0  F013         	goto	u3088
  1274   00279E                     u3070:
  1275   00279E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1276   0027A0                     u3088:
  1277   0027A0  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1278   0027A2  5079               	movf	121,w,c	;volatile
  1279   0027A4  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1280   0027A6  0BEF               	andlw	-17
  1281   0027A8  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1282   0027AA  6E79               	movwf	121,c	;volatile
  1283                           
  1284                           ;buggy_lights.c: 90:         LATFbits.LATF7 = !LATFbits.LATF7;
  1285   0027AC  AE7E               	btfss	126,7,c	;volatile
  1286   0027AE  EFDB  F013         	goto	u3091
  1287   0027B2  EFDF  F013         	goto	u3090
  1288   0027B6                     u3091:
  1289   0027B6  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1290   0027B8  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1291   0027BA  EFE0  F013         	goto	u3108
  1292   0027BE                     u3090:
  1293   0027BE  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1294   0027C0                     u3108:
  1295   0027C0  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1296   0027C2  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1297   0027C4  507E               	movf	126,w,c	;volatile
  1298   0027C6  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1299   0027C8  0B7F               	andlw	-129
  1300   0027CA  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1301   0027CC  6E7E               	movwf	126,c	;volatile
  1302                           
  1303                           ;buggy_lights.c: 93:         LATGbits.LATG0 = !LATGbits.LATG0;
  1304   0027CE  A07F               	btfss	127,0,c	;volatile
  1305   0027D0  EFEC  F013         	goto	u3111
  1306   0027D4  EFF0  F013         	goto	u3110
  1307   0027D8                     u3111:
  1308   0027D8  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1309   0027DA  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1310   0027DC  EFF1  F013         	goto	u3128
  1311   0027E0                     u3110:
  1312   0027E0  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1313   0027E2                     u3128:
  1314   0027E2  507F               	movf	127,w,c	;volatile
  1315   0027E4  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1316   0027E6  0BFE               	andlw	-2
  1317   0027E8  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1318   0027EA  6E7F               	movwf	127,c	;volatile
  1319                           
  1320                           ;buggy_lights.c: 94:         LATEbits.LATE7 = !LATEbits.LATE7;
  1321   0027EC  AE7D               	btfss	125,7,c	;volatile
  1322   0027EE  EFFB  F013         	goto	u3131
  1323   0027F2  EFFF  F013         	goto	u3130
  1324   0027F6                     u3131:
  1325   0027F6  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1326   0027F8  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1327   0027FA  EF00  F014         	goto	u3148
  1328   0027FE                     u3130:
  1329   0027FE  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1330   002800                     u3148:
  1331   002800  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1332   002802  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1333   002804  507D               	movf	125,w,c	;volatile
  1334   002806  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1335   002808  0B7F               	andlw	-129
  1336   00280A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1337   00280C  6E7D               	movwf	125,c	;volatile
  1338                           
  1339                           ;buggy_lights.c: 95:         LATAbits.LATA3 = !LATAbits.LATA3;
  1340   00280E  A679               	btfss	121,3,c	;volatile
  1341   002810  EF0C  F014         	goto	u3151
  1342   002814  EF10  F014         	goto	u3150
  1343   002818                     u3151:
  1344   002818  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1345   00281A  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1346   00281C  EF11  F014         	goto	u3168
  1347   002820                     u3150:
  1348   002820  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1349   002822                     u3168:
  1350   002822  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1351   002824  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1352   002826  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1353   002828  5079               	movf	121,w,c	;volatile
  1354   00282A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1355   00282C  0BF7               	andlw	-9
  1356   00282E  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1357   002830  6E79               	movwf	121,c	;volatile
  1358   002832  0012               	return		;funcret
  1359   002834                     __end_of_toggle_tricolour_LED:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _sendRGBCvalSerial4 *****************
  1363 ;; Defined at:
  1364 ;;		line 75 in file "serial.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  col_val         1   54[COMRAM] PTR struct RGBC_val
  1367 ;;		 -> main@RGBC_colour(8), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  tempStr        26   55[COMRAM] unsigned char [26]
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1379 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;Total ram usage:       27 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 6
  1386 ;; This function calls:
  1387 ;;		_sendStringSerial4
  1388 ;;		_sprintf
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;;		_forward_navigation
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text2
  1396   002E9C                     __ptext2:
  1397                           	callstack 0
  1398   002E9C                     _sendRGBCvalSerial4:
  1399                           	callstack 24
  1400   002E9C                     
  1401                           ;serial.c: 76:     char tempStr[26];;serial.c: 78:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1402   002E9C  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1403   002E9E  6E1D               	movwf	sprintf@s^0,c
  1404   002EA0  6A1E               	clrf	(sprintf@s+1)^0,c
  1405   002EA2  0E01               	movlw	low STR_5
  1406   002EA4  6E1F               	movwf	sprintf@fmt^0,c
  1407   002EA6  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1408   002EA8  6ED9               	movwf	fsr2l,c
  1409   002EAA  6ADA               	clrf	fsr2h,c
  1410   002EAC  CFDE F020          	movff	postinc2,?_sprintf+3
  1411   002EB0  CFDD F021          	movff	postdec2,?_sprintf+4
  1412   002EB4  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1413   002EB6  6ED9               	movwf	fsr2l,c
  1414   002EB8  6ADA               	clrf	fsr2h,c
  1415   002EBA  0E02               	movlw	2
  1416   002EBC  26D9               	addwf	fsr2l,f,c
  1417   002EBE  CFDE F022          	movff	postinc2,?_sprintf+5
  1418   002EC2  CFDD F023          	movff	postdec2,?_sprintf+6
  1419   002EC6  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1420   002EC8  6ED9               	movwf	fsr2l,c
  1421   002ECA  6ADA               	clrf	fsr2h,c
  1422   002ECC  0E04               	movlw	4
  1423   002ECE  26D9               	addwf	fsr2l,f,c
  1424   002ED0  CFDE F024          	movff	postinc2,?_sprintf+7
  1425   002ED4  CFDD F025          	movff	postdec2,?_sprintf+8
  1426   002ED8  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1427   002EDA  6ED9               	movwf	fsr2l,c
  1428   002EDC  6ADA               	clrf	fsr2h,c
  1429   002EDE  0E06               	movlw	6
  1430   002EE0  26D9               	addwf	fsr2l,f,c
  1431   002EE2  CFDE F026          	movff	postinc2,?_sprintf+9
  1432   002EE6  CFDD F027          	movff	postdec2,?_sprintf+10
  1433   002EEA  EC99  F018         	call	_sprintf	;wreg free
  1434   002EEE                     
  1435                           ;serial.c: 79:     sendStringSerial4(tempStr);
  1436   002EEE  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1437   002EF0  6E02               	movwf	sendStringSerial4@string^0,c
  1438   002EF2  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1439   002EF4  EC1D  F017         	call	_sendStringSerial4	;wreg free
  1440   002EF8  0012               	return		;funcret
  1441   002EFA                     __end_of_sendRGBCvalSerial4:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _sendIntSerial4 *****************
  1445 ;; Defined at:
  1446 ;;		line 51 in file "serial.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  integer         2   54[COMRAM] int 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  string         17   56[COMRAM] unsigned char [17]
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;Total ram usage:       19 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 6
  1467 ;; This function calls:
  1468 ;;		_sendStringSerial4
  1469 ;;		_sprintf
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;;		_return_to_sender
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text3
  1477   0032CC                     __ptext3:
  1478                           	callstack 0
  1479   0032CC                     _sendIntSerial4:
  1480                           	callstack 24
  1481   0032CC                     
  1482                           ;serial.c: 53:     char string[sizeof(int) * 8 + 1];;serial.c: 54:     sprintf(string, "
      +                          %d \r", integer);
  1483   0032CC  0E39               	movlw	low sendIntSerial4@string
  1484   0032CE  6E1D               	movwf	sprintf@s^0,c
  1485   0032D0  6A1E               	clrf	(sprintf@s+1)^0,c
  1486   0032D2  0E0F               	movlw	low STR_1
  1487   0032D4  6E1F               	movwf	sprintf@fmt^0,c
  1488   0032D6  C037  F020         	movff	sendIntSerial4@integer,?_sprintf+3
  1489   0032DA  C038  F021         	movff	sendIntSerial4@integer+1,?_sprintf+4
  1490   0032DE  EC99  F018         	call	_sprintf	;wreg free
  1491   0032E2                     
  1492                           ;serial.c: 55:     sendStringSerial4(string);
  1493   0032E2  0E39               	movlw	low sendIntSerial4@string
  1494   0032E4  6E02               	movwf	sendStringSerial4@string^0,c
  1495   0032E6  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1496   0032E8  EC1D  F017         	call	_sendStringSerial4	;wreg free
  1497   0032EC  0012               	return		;funcret
  1498   0032EE                     __end_of_sendIntSerial4:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _sendHSVvalSerial4 *****************
  1502 ;; Defined at:
  1503 ;;		line 85 in file "serial.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  col_val         1   54[COMRAM] PTR struct HSV_val
  1506 ;;		 -> main@HSV_colour(6), 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  tempStr        21   55[COMRAM] unsigned char [21]
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1518 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;Total ram usage:       22 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 6
  1525 ;; This function calls:
  1526 ;;		_sendStringSerial4
  1527 ;;		_sprintf
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;;		_forward_navigation
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text4
  1535   0030E6                     __ptext4:
  1536                           	callstack 0
  1537   0030E6                     _sendHSVvalSerial4:
  1538                           	callstack 24
  1539   0030E6                     
  1540                           ;serial.c: 86:     char tempStr[21];;serial.c: 88:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  1541   0030E6  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1542   0030E8  6E1D               	movwf	sprintf@s^0,c
  1543   0030EA  6A1E               	clrf	(sprintf@s+1)^0,c
  1544   0030EC  0E04               	movlw	low (STR_5+3)
  1545   0030EE  6E1F               	movwf	sprintf@fmt^0,c
  1546   0030F0  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1547   0030F2  6ED9               	movwf	fsr2l,c
  1548   0030F4  6ADA               	clrf	fsr2h,c
  1549   0030F6  CFDE F020          	movff	postinc2,?_sprintf+3
  1550   0030FA  CFDD F021          	movff	postdec2,?_sprintf+4
  1551   0030FE  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1552   003100  6ED9               	movwf	fsr2l,c
  1553   003102  6ADA               	clrf	fsr2h,c
  1554   003104  0E02               	movlw	2
  1555   003106  26D9               	addwf	fsr2l,f,c
  1556   003108  CFDE F022          	movff	postinc2,?_sprintf+5
  1557   00310C  CFDD F023          	movff	postdec2,?_sprintf+6
  1558   003110  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1559   003112  6ED9               	movwf	fsr2l,c
  1560   003114  6ADA               	clrf	fsr2h,c
  1561   003116  0E04               	movlw	4
  1562   003118  26D9               	addwf	fsr2l,f,c
  1563   00311A  CFDE F024          	movff	postinc2,?_sprintf+7
  1564   00311E  CFDD F025          	movff	postdec2,?_sprintf+8
  1565   003122  EC99  F018         	call	_sprintf	;wreg free
  1566   003126                     
  1567                           ;serial.c: 89:     sendStringSerial4(tempStr);
  1568   003126  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1569   003128  6E02               	movwf	sendStringSerial4@string^0,c
  1570   00312A  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1571   00312C  EC1D  F017         	call	_sendStringSerial4	;wreg free
  1572   003130  0012               	return		;funcret
  1573   003132                     __end_of_sendHSVvalSerial4:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _sprintf *****************
  1577 ;; Defined at:
  1578 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  s               2   28[COMRAM] PTR unsigned char 
  1581 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1582 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1583 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  f              12   42[COMRAM] struct _IO_FILE
  1586 ;;  ret             2   39[COMRAM] int 
  1587 ;;  ap              1   41[COMRAM] PTR void [1]
  1588 ;;		 -> ?_sprintf(2), 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2   28[COMRAM] int 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1598 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;Total ram usage:       26 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 5
  1605 ;; This function calls:
  1606 ;;		_vfprintf
  1607 ;; This function is called by:
  1608 ;;		_sendIntSerial4
  1609 ;;		_sendRGBCvalSerial4
  1610 ;;		_sendHSVvalSerial4
  1611 ;;		_sendArrayCharSerial4
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text5
  1616   003132                     __ptext5:
  1617                           	callstack 0
  1618   003132                     _sprintf:
  1619                           	callstack 24
  1620   003132  0E20               	movlw	low (?_sprintf+3)
  1621   003134  6E2A               	movwf	sprintf@ap^0,c
  1622   003136  C01D  F02B         	movff	sprintf@s,sprintf@f
  1623   00313A  C01E  F02C         	movff	sprintf@s+1,sprintf@f+1
  1624   00313E  0E00               	movlw	0
  1625   003140  6E2F               	movwf	(sprintf@f+4)^0,c
  1626   003142  0E00               	movlw	0
  1627   003144  6E2E               	movwf	(sprintf@f+3)^0,c
  1628   003146  0E00               	movlw	0
  1629   003148  6E36               	movwf	(sprintf@f+11)^0,c
  1630   00314A  0E00               	movlw	0
  1631   00314C  6E35               	movwf	(sprintf@f+10)^0,c
  1632   00314E  0E2B               	movlw	low sprintf@f
  1633   003150  6E19               	movwf	vfprintf@fp^0,c
  1634   003152  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  1635   003156  0E2A               	movlw	low sprintf@ap
  1636   003158  6E1B               	movwf	vfprintf@ap^0,c
  1637   00315A  EC7D  F017         	call	_vfprintf	;wreg free
  1638   00315E  C019  F028         	movff	?_vfprintf,sprintf@ret
  1639   003162  C01A  F029         	movff	?_vfprintf+1,sprintf@ret+1
  1640   003166  502E               	movf	(sprintf@f+3)^0,w,c
  1641   003168  241D               	addwf	sprintf@s^0,w,c
  1642   00316A  6ED9               	movwf	fsr2l,c
  1643   00316C  502F               	movf	(sprintf@f+4)^0,w,c
  1644   00316E  201E               	addwfc	(sprintf@s+1)^0,w,c
  1645   003170  6EDA               	movwf	fsr2h,c
  1646   003172  6ADF               	clrf	indf2,c
  1647   003174  C028  F01D         	movff	sprintf@ret,?_sprintf
  1648   003178  C029  F01E         	movff	sprintf@ret+1,?_sprintf+1
  1649   00317C  0012               	return		;funcret
  1650   00317E                     __end_of_sprintf:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _vfprintf *****************
  1654 ;; Defined at:
  1655 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1658 ;;		 -> sprintf@f(12), 
  1659 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1660 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1661 ;;  ap              1   26[COMRAM] PTR PTR void 
  1662 ;;		 -> sprintf@ap(1), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1665 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2   24[COMRAM] int 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;Total ram usage:        4 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 4
  1682 ;; This function calls:
  1683 ;;		_vfpfcnvrt
  1684 ;; This function is called by:
  1685 ;;		_sprintf
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text6
  1690   002EFA                     __ptext6:
  1691                           	callstack 0
  1692   002EFA                     _vfprintf:
  1693                           	callstack 24
  1694   002EFA                     
  1695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1696   002EFA  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1697   002EFE                     
  1698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1699   002EFE  0E00               	movlw	0
  1700   002F00  0100               	movlb	0	; () banked
  1701   002F02  6F81               	movwf	(_nout+1)& (0+255),b
  1702   002F04  0E00               	movlw	0
  1703   002F06  6F80               	movwf	_nout& (0+255),b
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1706   002F08  EF93  F017         	goto	l3416
  1707   002F0C                     l3414:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1711   002F0C  C019  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1712   002F10  0E1C               	movlw	low vfprintf@cfmt
  1713   002F12  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1714   002F14  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1715   002F18  ECBA  F00E         	call	_vfpfcnvrt	;wreg free
  1716   002F1C  500B               	movf	?_vfpfcnvrt^0,w,c
  1717   002F1E  0100               	movlb	0	; () banked
  1718   002F20  2780               	addwf	_nout& (0+255),f,b
  1719   002F22  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1720   002F24  2381               	addwfc	(_nout+1)& (0+255),f,b
  1721   002F26                     l3416:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1725   002F26  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1726   002F2A                     	if	1	;There is more than 1 active tblptr byte
  1727   002F2A  0E0E               	movlw	high __smallconst
  1728   002F2C  6EF7               	movwf	tblptrh,c
  1729   002F2E                     	endif
  1730   002F2E                     	if	0	;tblptru may be non-zero
  1731   002F2E                     	endif
  1732   002F2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1733   002F2E  0E00               	movlw	low (__smallconst shr (0+16))
  1734   002F30  6EF8               	movwf	tblptru,c
  1735   002F32                     	endif
  1736   002F32  0008               	tblrd		*
  1737   002F34  50F5               	movf	tablat,w,c
  1738   002F36  0900               	iorlw	0
  1739   002F38  A4D8               	btfss	status,2,c
  1740   002F3A  EFA1  F017         	goto	u2561
  1741   002F3E  EFA3  F017         	goto	u2560
  1742   002F42                     u2561:
  1743   002F42  EF86  F017         	goto	l3414
  1744   002F46                     u2560:
  1745   002F46                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1748   002F46  C080  F019         	movff	_nout,?_vfprintf
  1749   002F4A  C081  F01A         	movff	_nout+1,?_vfprintf+1
  1750   002F4E                     
  1751                           ; BSR set to: 0
  1752   002F4E  0012               	return		;funcret
  1753   002F50                     __end_of_vfprintf:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _vfpfcnvrt *****************
  1757 ;; Defined at:
  1758 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1761 ;;		 -> sprintf@f(12), 
  1762 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1763 ;;		 -> vfprintf@cfmt(1), 
  1764 ;;  ap              1   12[COMRAM] PTR PTR void 
  1765 ;;		 -> sprintf@ap(1), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  convarg         4   19[COMRAM] struct .
  1768 ;;  cnt             2   16[COMRAM] int 
  1769 ;;  c               1   23[COMRAM] unsigned char 
  1770 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1771 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1772 ;;  done            1   15[COMRAM] _Bool 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2   10[COMRAM] int 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;Total ram usage:       14 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 3
  1789 ;; This function calls:
  1790 ;;		___awdiv
  1791 ;;		___awmod
  1792 ;;		___lwdiv
  1793 ;;		___lwmod
  1794 ;;		_abs
  1795 ;;		_fputc
  1796 ;; This function is called by:
  1797 ;;		_vfprintf
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text7
  1802   001D74                     __ptext7:
  1803                           	callstack 0
  1804   001D74                     _vfpfcnvrt:
  1805                           	callstack 24
  1806   001D74                     
  1807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1808   001D74  0E00               	movlw	0
  1809   001D76  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1810   001D78  0E00               	movlw	0
  1811   001D7A  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1812   001D7C                     
  1813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1814   001D7C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1815   001D7E  6ED9               	movwf	fsr2l,c
  1816   001D80  6ADA               	clrf	fsr2h,c
  1817   001D82  CFDF FFF6          	movff	indf2,tblptrl
  1818   001D86                     	if	1	;There is more than 1 active tblptr byte
  1819   001D86  0E0E               	movlw	high __smallconst
  1820   001D88  6EF7               	movwf	tblptrh,c
  1821   001D8A                     	endif
  1822   001D8A                     	if	0	;tblptru may be non-zero
  1823   001D8A                     	endif
  1824   001D8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1825   001D8A  0E00               	movlw	low (__smallconst shr (0+16))
  1826   001D8C  6EF8               	movwf	tblptru,c
  1827   001D8E                     	endif
  1828   001D8E  0008               	tblrd		*
  1829   001D90  50F5               	movf	tablat,w,c
  1830   001D92  0A25               	xorlw	37
  1831   001D94  A4D8               	btfss	status,2,c
  1832   001D96  EFCF  F00E         	goto	u2411
  1833   001D9A  EFD1  F00E         	goto	u2410
  1834   001D9E                     u2411:
  1835   001D9E  EF26  F010         	goto	l3322
  1836   001DA2                     u2410:
  1837   001DA2                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1839   001DA2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1840   001DA4  6ED9               	movwf	fsr2l,c
  1841   001DA6  6ADA               	clrf	fsr2h,c
  1842   001DA8  2ADF               	incf	indf2,f,c
  1843   001DAA                     
  1844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1845   001DAA  0E00               	movlw	0
  1846   001DAC  0100               	movlb	0	; () banked
  1847   001DAE  6F83               	movwf	(_width+1)& (0+255),b
  1848   001DB0  0E00               	movlw	0
  1849   001DB2  6F82               	movwf	_width& (0+255),b
  1850   001DB4  C082  F086         	movff	_width,_flags
  1851   001DB8                     
  1852                           ; BSR set to: 0
  1853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1854   001DB8  6984               	setf	_prec& (0+255),b
  1855   001DBA  6985               	setf	(_prec+1)& (0+255),b
  1856   001DBC                     
  1857                           ; BSR set to: 0
  1858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1859   001DBC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1860   001DBE  6ED9               	movwf	fsr2l,c
  1861   001DC0  6ADA               	clrf	fsr2h,c
  1862   001DC2  50DF               	movf	indf2,w,c
  1863   001DC4  6E13               	movwf	vfpfcnvrt@cp^0,c
  1864   001DC6                     
  1865                           ; BSR set to: 0
  1866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1867   001DC6  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1868   001DCA                     	if	1	;There is more than 1 active tblptr byte
  1869   001DCA  0E0E               	movlw	high __smallconst
  1870   001DCC  6EF7               	movwf	tblptrh,c
  1871   001DCE                     	endif
  1872   001DCE                     	if	0	;tblptru may be non-zero
  1873   001DCE                     	endif
  1874   001DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1875   001DCE  0E00               	movlw	low (__smallconst shr (0+16))
  1876   001DD0  6EF8               	movwf	tblptru,c
  1877   001DD2                     	endif
  1878   001DD2  0008               	tblrd		*
  1879   001DD4  50F5               	movf	tablat,w,c
  1880   001DD6  0A64               	xorlw	100
  1881   001DD8  B4D8               	btfsc	status,2,c
  1882   001DDA  EFF1  F00E         	goto	u2421
  1883   001DDE  EFF3  F00E         	goto	u2420
  1884   001DE2                     u2421:
  1885   001DE2  EF03  F00F         	goto	l3258
  1886   001DE6                     u2420:
  1887   001DE6                     
  1888                           ; BSR set to: 0
  1889   001DE6  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1890   001DEA                     	if	1	;There is more than 1 active tblptr byte
  1891   001DEA  0E0E               	movlw	high __smallconst
  1892   001DEC  6EF7               	movwf	tblptrh,c
  1893   001DEE                     	endif
  1894   001DEE                     	if	0	;tblptru may be non-zero
  1895   001DEE                     	endif
  1896   001DEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1897   001DEE  0E00               	movlw	low (__smallconst shr (0+16))
  1898   001DF0  6EF8               	movwf	tblptru,c
  1899   001DF2                     	endif
  1900   001DF2  0008               	tblrd		*
  1901   001DF4  50F5               	movf	tablat,w,c
  1902   001DF6  0A69               	xorlw	105
  1903   001DF8  A4D8               	btfss	status,2,c
  1904   001DFA  EF01  F00F         	goto	u2431
  1905   001DFE  EF03  F00F         	goto	u2430
  1906   001E02                     u2431:
  1907   001E02  EF91  F00F         	goto	l3288
  1908   001E06                     u2430:
  1909   001E06                     l3258:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1913   001E06  500D               	movf	vfpfcnvrt@ap^0,w,c
  1914   001E08  6ED9               	movwf	fsr2l,c
  1915   001E0A  6ADA               	clrf	fsr2h,c
  1916   001E0C  0E02               	movlw	2
  1917   001E0E  26DF               	addwf	indf2,f,c
  1918   001E10  5CDF               	subwf	indf2,w,c
  1919   001E12  6ED9               	movwf	fsr2l,c
  1920   001E14  6ADA               	clrf	fsr2h,c
  1921   001E16  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1922   001E1A  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1923   001E1E                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1926   001E1E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1927   001E20  6ED9               	movwf	fsr2l,c
  1928   001E22  6ADA               	clrf	fsr2h,c
  1929   001E24  2813               	incf	vfpfcnvrt@cp^0,w,c
  1930   001E26  6EDF               	movwf	indf2,c
  1931   001E28                     
  1932                           ; BSR set to: 0
  1933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1934   001E28  0E20               	movlw	32
  1935   001E2A  6E18               	movwf	vfpfcnvrt@c^0,c
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1938   001E2C  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1939   001E2E  EF1B  F00F         	goto	u2441
  1940   001E32  EF1E  F00F         	goto	u2440
  1941   001E36                     u2441:
  1942   001E36  0E01               	movlw	1
  1943   001E38  EF1F  F00F         	goto	u2450
  1944   001E3C                     u2440:
  1945   001E3C  0E00               	movlw	0
  1946   001E3E                     u2450:
  1947   001E3E  6E10               	movwf	vfpfcnvrt@done^0,c
  1948   001E40                     l3264:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1951   001E40  0618               	decf	vfpfcnvrt@c^0,f,c
  1952   001E42  5018               	movf	vfpfcnvrt@c^0,w,c
  1953   001E44  0F60               	addlw	low _dbuf
  1954   001E46  6ED9               	movwf	fsr2l,c
  1955   001E48  6ADA               	clrf	fsr2h,c
  1956   001E4A  C014  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1957   001E4E  C015  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1958   001E52  0E00               	movlw	0
  1959   001E54  6E04               	movwf	(___awmod@divisor+1)^0,c
  1960   001E56  0E0A               	movlw	10
  1961   001E58  6E03               	movwf	___awmod@divisor^0,c
  1962   001E5A  ECD9  F014         	call	___awmod	;wreg free
  1963   001E5E  C001  F007         	movff	?___awmod,abs@a
  1964   001E62  C002  F008         	movff	?___awmod+1,abs@a+1
  1965   001E66  ECE0  F018         	call	_abs	;wreg free
  1966   001E6A  5007               	movf	?_abs^0,w,c
  1967   001E6C  0F30               	addlw	48
  1968   001E6E  6EDF               	movwf	indf2,c
  1969   001E70                     
  1970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1971   001E70  C014  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1972   001E74  C015  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1973   001E78  0E00               	movlw	0
  1974   001E7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1975   001E7C  0E0A               	movlw	10
  1976   001E7E  6E03               	movwf	___awdiv@divisor^0,c
  1977   001E80  EC1A  F014         	call	___awdiv	;wreg free
  1978   001E84  C001  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1979   001E88  C002  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1980   001E8C                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1982   001E8C  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1983   001E8E  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1984   001E90                     
  1985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1986   001E90  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1987   001E92  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1988   001E94  B4D8               	btfsc	status,2,c
  1989   001E96  EF4F  F00F         	goto	u2461
  1990   001E9A  EF51  F00F         	goto	u2460
  1991   001E9E                     u2461:
  1992   001E9E  EF59  F00F         	goto	l3274
  1993   001EA2                     u2460:
  1994   001EA2  5018               	movf	vfpfcnvrt@c^0,w,c
  1995   001EA4  A4D8               	btfss	status,2,c
  1996   001EA6  EF57  F00F         	goto	u2471
  1997   001EAA  EF59  F00F         	goto	u2470
  1998   001EAE                     u2471:
  1999   001EAE  EF20  F00F         	goto	l3264
  2000   001EB2                     u2470:
  2001   001EB2                     l3274:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2004   001EB2  5018               	movf	vfpfcnvrt@c^0,w,c
  2005   001EB4  B4D8               	btfsc	status,2,c
  2006   001EB6  EF5F  F00F         	goto	u2481
  2007   001EBA  EF61  F00F         	goto	u2480
  2008   001EBE                     u2481:
  2009   001EBE  EF82  F00F         	goto	l3286
  2010   001EC2                     u2480:
  2011   001EC2  5010               	movf	vfpfcnvrt@done^0,w,c
  2012   001EC4  B4D8               	btfsc	status,2,c
  2013   001EC6  EF67  F00F         	goto	u2491
  2014   001ECA  EF69  F00F         	goto	u2490
  2015   001ECE                     u2491:
  2016   001ECE  EF82  F00F         	goto	l3286
  2017   001ED2                     u2490:
  2018   001ED2                     
  2019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2020   001ED2  0618               	decf	vfpfcnvrt@c^0,f,c
  2021   001ED4  5018               	movf	vfpfcnvrt@c^0,w,c
  2022   001ED6  0F60               	addlw	low _dbuf
  2023   001ED8  6ED9               	movwf	fsr2l,c
  2024   001EDA  6ADA               	clrf	fsr2h,c
  2025   001EDC  0E2D               	movlw	45
  2026   001EDE  6EDF               	movwf	indf2,c
  2027   001EE0                     
  2028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  2029   001EE0  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2030   001EE2  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2031   001EE4  EF82  F00F         	goto	l3286
  2032   001EE8                     l3282:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2035   001EE8  5018               	movf	vfpfcnvrt@c^0,w,c
  2036   001EEA  0F60               	addlw	low _dbuf
  2037   001EEC  6ED9               	movwf	fsr2l,c
  2038   001EEE  6ADA               	clrf	fsr2h,c
  2039   001EF0  50DF               	movf	indf2,w,c
  2040   001EF2  6E0E               	movwf	??_vfpfcnvrt^0,c
  2041   001EF4  500E               	movf	??_vfpfcnvrt^0,w,c
  2042   001EF6  6E01               	movwf	fputc@c^0,c
  2043   001EF8  6A02               	clrf	(fputc@c+1)^0,c
  2044   001EFA  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2045   001EFE  EC7C  F014         	call	_fputc	;wreg free
  2046   001F02  2A18               	incf	vfpfcnvrt@c^0,f,c
  2047   001F04                     l3286:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2050   001F04  0E20               	movlw	32
  2051   001F06  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2052   001F08  A4D8               	btfss	status,2,c
  2053   001F0A  EF89  F00F         	goto	u2501
  2054   001F0E  EF8B  F00F         	goto	u2500
  2055   001F12                     u2501:
  2056   001F12  EF74  F00F         	goto	l3282
  2057   001F16                     u2500:
  2058   001F16                     l1470:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  2061   001F16  C011  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  2062   001F1A  C012  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  2063   001F1E  EF3F  F010         	goto	l1471
  2064   001F22                     l3288:
  2065                           
  2066                           ; BSR set to: 0
  2067   001F22  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2068   001F26                     	if	1	;There is more than 1 active tblptr byte
  2069   001F26  0E0E               	movlw	high __smallconst
  2070   001F28  6EF7               	movwf	tblptrh,c
  2071   001F2A                     	endif
  2072   001F2A                     	if	0	;tblptru may be non-zero
  2073   001F2A                     	endif
  2074   001F2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2075   001F2A  0E00               	movlw	low (__smallconst shr (0+16))
  2076   001F2C  6EF8               	movwf	tblptru,c
  2077   001F2E                     	endif
  2078   001F2E  0008               	tblrd		*
  2079   001F30  50F5               	movf	tablat,w,c
  2080   001F32  0A75               	xorlw	117
  2081   001F34  A4D8               	btfss	status,2,c
  2082   001F36  EF9F  F00F         	goto	u2511
  2083   001F3A  EFA1  F00F         	goto	u2510
  2084   001F3E                     u2511:
  2085   001F3E  EF1C  F010         	goto	l3316
  2086   001F42                     u2510:
  2087   001F42                     
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2090   001F42  500D               	movf	vfpfcnvrt@ap^0,w,c
  2091   001F44  6ED9               	movwf	fsr2l,c
  2092   001F46  6ADA               	clrf	fsr2h,c
  2093   001F48  0E02               	movlw	2
  2094   001F4A  26DF               	addwf	indf2,f,c
  2095   001F4C  5CDF               	subwf	indf2,w,c
  2096   001F4E  6ED9               	movwf	fsr2l,c
  2097   001F50  6ADA               	clrf	fsr2h,c
  2098   001F52  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  2099   001F56  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  2100   001F5A                     
  2101                           ; BSR set to: 0
  2102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2103   001F5A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2104   001F5C  6ED9               	movwf	fsr2l,c
  2105   001F5E  6ADA               	clrf	fsr2h,c
  2106   001F60  2813               	incf	vfpfcnvrt@cp^0,w,c
  2107   001F62  6EDF               	movwf	indf2,c
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2110   001F64  EF04  F010         	goto	l3314
  2111   001F68                     l3294:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2115   001F68  0E20               	movlw	32
  2116   001F6A  6E18               	movwf	vfpfcnvrt@c^0,c
  2117   001F6C                     l3296:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2120   001F6C  0618               	decf	vfpfcnvrt@c^0,f,c
  2121   001F6E  5018               	movf	vfpfcnvrt@c^0,w,c
  2122   001F70  0F60               	addlw	low _dbuf
  2123   001F72  6ED9               	movwf	fsr2l,c
  2124   001F74  6ADA               	clrf	fsr2h,c
  2125   001F76  C014  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2126   001F7A  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2127   001F7E  0E00               	movlw	0
  2128   001F80  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2129   001F82  0E0A               	movlw	10
  2130   001F84  6E03               	movwf	___lwmod@divisor^0,c
  2131   001F86  ECEB  F016         	call	___lwmod	;wreg free
  2132   001F8A  5001               	movf	?___lwmod^0,w,c
  2133   001F8C  0F30               	addlw	48
  2134   001F8E  6EDF               	movwf	indf2,c
  2135   001F90                     
  2136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2137   001F90  C014  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2138   001F94  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2139   001F98  0E00               	movlw	0
  2140   001F9A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2141   001F9C  0E0A               	movlw	10
  2142   001F9E  6E03               	movwf	___lwdiv@divisor^0,c
  2143   001FA0  EC47  F016         	call	___lwdiv	;wreg free
  2144   001FA4  C001  F014         	movff	?___lwdiv,vfpfcnvrt@convarg
  2145   001FA8  C002  F015         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2146   001FAC                     
  2147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2148   001FAC  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2149   001FAE  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2150   001FB0                     
  2151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2152   001FB0  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2153   001FB2  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2154   001FB4  B4D8               	btfsc	status,2,c
  2155   001FB6  EFDF  F00F         	goto	u2521
  2156   001FBA  EFE1  F00F         	goto	u2520
  2157   001FBE                     u2521:
  2158   001FBE  EFF9  F00F         	goto	l3310
  2159   001FC2                     u2520:
  2160   001FC2  5018               	movf	vfpfcnvrt@c^0,w,c
  2161   001FC4  A4D8               	btfss	status,2,c
  2162   001FC6  EFE7  F00F         	goto	u2531
  2163   001FCA  EFE9  F00F         	goto	u2530
  2164   001FCE                     u2531:
  2165   001FCE  EFB6  F00F         	goto	l3296
  2166   001FD2                     u2530:
  2167   001FD2  EFF9  F00F         	goto	l3310
  2168   001FD6                     l3306:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2171   001FD6  5018               	movf	vfpfcnvrt@c^0,w,c
  2172   001FD8  0F60               	addlw	low _dbuf
  2173   001FDA  6ED9               	movwf	fsr2l,c
  2174   001FDC  6ADA               	clrf	fsr2h,c
  2175   001FDE  50DF               	movf	indf2,w,c
  2176   001FE0  6E0E               	movwf	??_vfpfcnvrt^0,c
  2177   001FE2  500E               	movf	??_vfpfcnvrt^0,w,c
  2178   001FE4  6E01               	movwf	fputc@c^0,c
  2179   001FE6  6A02               	clrf	(fputc@c+1)^0,c
  2180   001FE8  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2181   001FEC  EC7C  F014         	call	_fputc	;wreg free
  2182   001FF0  2A18               	incf	vfpfcnvrt@c^0,f,c
  2183   001FF2                     l3310:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2186   001FF2  0E20               	movlw	32
  2187   001FF4  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2188   001FF6  A4D8               	btfss	status,2,c
  2189   001FF8  EF00  F010         	goto	u2541
  2190   001FFC  EF02  F010         	goto	u2540
  2191   002000                     u2541:
  2192   002000  EFEB  F00F         	goto	l3306
  2193   002004                     u2540:
  2194   002004  EF8B  F00F         	goto	l1470
  2195   002008                     l3314:
  2196                           
  2197                           ; BSR set to: 0
  2198   002008  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2199   00200C                     	if	1	;There is more than 1 active tblptr byte
  2200   00200C  0E0E               	movlw	high __smallconst
  2201   00200E  6EF7               	movwf	tblptrh,c
  2202   002010                     	endif
  2203   002010                     	if	0	;tblptru may be non-zero
  2204   002010                     	endif
  2205   002010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2206   002010  0E00               	movlw	low (__smallconst shr (0+16))
  2207   002012  6EF8               	movwf	tblptru,c
  2208   002014                     	endif
  2209   002014  0008               	tblrd		*
  2210   002016  50F5               	movf	tablat,w,c
  2211   002018  6E0E               	movwf	??_vfpfcnvrt^0,c
  2212   00201A  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2213                           
  2214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 1, Range of values is 0 to 0
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte            4     3 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221   00201C  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2222   00201E  0A00               	xorlw	0	; case 0
  2223   002020  B4D8               	btfsc	status,2,c
  2224   002022  EF15  F010         	goto	l4552
  2225   002026  EF1C  F010         	goto	l3316
  2226   00202A                     l4552:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ; Switch size 1, requested type "simple"
  2230                           ; Number of cases is 1, Range of values is 117 to 117
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte            4     3 (average)
  2234                           ;	Chosen strategy is simple_byte
  2235   00202A  500E               	movf	??_vfpfcnvrt^0,w,c
  2236   00202C  0A75               	xorlw	117	; case 117
  2237   00202E  B4D8               	btfsc	status,2,c
  2238   002030  EFB4  F00F         	goto	l3294
  2239   002034  EF1C  F010         	goto	l3316
  2240   002038                     l3316:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2244   002038  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2245   00203A  6ED9               	movwf	fsr2l,c
  2246   00203C  6ADA               	clrf	fsr2h,c
  2247   00203E  2ADF               	incf	indf2,f,c
  2248   002040                     
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2251   002040  0E00               	movlw	0
  2252   002042  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2253   002044  0E00               	movlw	0
  2254   002046  6E0B               	movwf	?_vfpfcnvrt^0,c
  2255   002048  EF3F  F010         	goto	l1471
  2256   00204C                     l3322:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2259   00204C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2260   00204E  6ED9               	movwf	fsr2l,c
  2261   002050  6ADA               	clrf	fsr2h,c
  2262   002052  CFDF FFF6          	movff	indf2,tblptrl
  2263   002056                     	if	1	;There is more than 1 active tblptr byte
  2264   002056  0E0E               	movlw	high __smallconst
  2265   002058  6EF7               	movwf	tblptrh,c
  2266   00205A                     	endif
  2267   00205A                     	if	0	;tblptru may be non-zero
  2268   00205A                     	endif
  2269   00205A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2270   00205A  0E00               	movlw	low (__smallconst shr (0+16))
  2271   00205C  6EF8               	movwf	tblptru,c
  2272   00205E                     	endif
  2273   00205E  0008               	tblrd		*
  2274   002060  50F5               	movf	tablat,w,c
  2275   002062  6E01               	movwf	fputc@c^0,c
  2276   002064  6A02               	clrf	(fputc@c+1)^0,c
  2277   002066  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2278   00206A  EC7C  F014         	call	_fputc	;wreg free
  2279   00206E                     
  2280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2281   00206E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2282   002070  6ED9               	movwf	fsr2l,c
  2283   002072  6ADA               	clrf	fsr2h,c
  2284   002074  2ADF               	incf	indf2,f,c
  2285   002076                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2287   002076  0E00               	movlw	0
  2288   002078  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2289   00207A  0E01               	movlw	1
  2290   00207C  6E0B               	movwf	?_vfpfcnvrt^0,c
  2291   00207E                     l1471:
  2292   00207E  0012               	return		;funcret
  2293   002080                     __end_of_vfpfcnvrt:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _fputc *****************
  2297 ;; Defined at:
  2298 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  c               2    0[COMRAM] int 
  2301 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2302 ;;		 -> sprintf@f(12), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  2    0[COMRAM] int 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2314 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2316 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2317 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2318 ;;Total ram usage:        8 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 2
  2321 ;; This function calls:
  2322 ;;		_putch
  2323 ;; This function is called by:
  2324 ;;		_vfpfcnvrt
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text8
  2329   0028F8                     __ptext8:
  2330                           	callstack 0
  2331   0028F8                     _fputc:
  2332                           	callstack 24
  2333   0028F8  5003               	movf	fputc@fp^0,w,c
  2334   0028FA  B4D8               	btfsc	status,2,c
  2335   0028FC  EF82  F014         	goto	u2181
  2336   002900  EF84  F014         	goto	u2180
  2337   002904                     u2181:
  2338   002904  EF8C  F014         	goto	l3112
  2339   002908                     u2180:
  2340   002908  5003               	movf	fputc@fp^0,w,c
  2341   00290A  A4D8               	btfss	status,2,c
  2342   00290C  EF8A  F014         	goto	u2191
  2343   002910  EF8C  F014         	goto	u2190
  2344   002914                     u2191:
  2345   002914  EF91  F014         	goto	l3114
  2346   002918                     u2190:
  2347   002918                     l3112:
  2348   002918  5001               	movf	fputc@c^0,w,c
  2349   00291A  ECD1  F019         	call	_putch
  2350   00291E  EFD8  F014         	goto	l1509
  2351   002922                     l3114:
  2352   002922  5003               	movf	fputc@fp^0,w,c
  2353   002924  6ED9               	movwf	fsr2l,c
  2354   002926  6ADA               	clrf	fsr2h,c
  2355   002928  0E0A               	movlw	10
  2356   00292A  26D9               	addwf	fsr2l,f,c
  2357   00292C  50DE               	movf	postinc2,w,c
  2358   00292E  10DE               	iorwf	postinc2,w,c
  2359   002930  B4D8               	btfsc	status,2,c
  2360   002932  EF9D  F014         	goto	u2201
  2361   002936  EF9F  F014         	goto	u2200
  2362   00293A                     u2201:
  2363   00293A  EFB8  F014         	goto	l3118
  2364   00293E                     u2200:
  2365   00293E  5003               	movf	fputc@fp^0,w,c
  2366   002940  6ED9               	movwf	fsr2l,c
  2367   002942  6ADA               	clrf	fsr2h,c
  2368   002944  0E0A               	movlw	10
  2369   002946  26D9               	addwf	fsr2l,f,c
  2370   002948  5003               	movf	fputc@fp^0,w,c
  2371   00294A  6EE1               	movwf	fsr1l,c
  2372   00294C  6AE2               	clrf	fsr1h,c
  2373   00294E  0E03               	movlw	3
  2374   002950  26E1               	addwf	fsr1l,f,c
  2375   002952  50DE               	movf	postinc2,w,c
  2376   002954  5CE6               	subwf	postinc1,w,c
  2377   002956  50E6               	movf	postinc1,w,c
  2378   002958  0A80               	xorlw	128
  2379   00295A  6E08               	movwf	(??_fputc+4)^0,c
  2380   00295C  50DE               	movf	postinc2,w,c
  2381   00295E  0A80               	xorlw	128
  2382   002960  5808               	subwfb	(??_fputc+4)^0,w,c
  2383   002962  B0D8               	btfsc	status,0,c
  2384   002964  EFB6  F014         	goto	u2211
  2385   002968  EFB8  F014         	goto	u2210
  2386   00296C                     u2211:
  2387   00296C  EFD8  F014         	goto	l1509
  2388   002970                     u2210:
  2389   002970                     l3118:
  2390   002970  5003               	movf	fputc@fp^0,w,c
  2391   002972  6ED9               	movwf	fsr2l,c
  2392   002974  6ADA               	clrf	fsr2h,c
  2393   002976  0E03               	movlw	3
  2394   002978  26D9               	addwf	fsr2l,f,c
  2395   00297A  CFDE F004          	movff	postinc2,??_fputc
  2396   00297E  CFDD F005          	movff	postdec2,??_fputc+1
  2397   002982  5003               	movf	fputc@fp^0,w,c
  2398   002984  6ED9               	movwf	fsr2l,c
  2399   002986  6ADA               	clrf	fsr2h,c
  2400   002988  CFDE F006          	movff	postinc2,??_fputc+2
  2401   00298C  CFDD F007          	movff	postdec2,??_fputc+3
  2402   002990  5004               	movf	??_fputc^0,w,c
  2403   002992  2406               	addwf	(??_fputc+2)^0,w,c
  2404   002994  6ED9               	movwf	fsr2l,c
  2405   002996  5005               	movf	(??_fputc+1)^0,w,c
  2406   002998  2007               	addwfc	(??_fputc+3)^0,w,c
  2407   00299A  6EDA               	movwf	fsr2h,c
  2408   00299C  C001  FFDF         	movff	fputc@c,indf2
  2409   0029A0  5003               	movf	fputc@fp^0,w,c
  2410   0029A2  6ED9               	movwf	fsr2l,c
  2411   0029A4  6ADA               	clrf	fsr2h,c
  2412   0029A6  0E03               	movlw	3
  2413   0029A8  26D9               	addwf	fsr2l,f,c
  2414   0029AA  2ADE               	incf	postinc2,f,c
  2415   0029AC  0E00               	movlw	0
  2416   0029AE  22DD               	addwfc	postdec2,f,c
  2417   0029B0                     l1509:
  2418   0029B0  0012               	return		;funcret
  2419   0029B2                     __end_of_fputc:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _putch *****************
  2423 ;; Defined at:
  2424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  c               1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  c               1    0[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 1
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_fputc
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text9
  2453   0033A2                     __ptext9:
  2454                           	callstack 0
  2455   0033A2                     _putch:
  2456                           	callstack 24
  2457   0033A2  0012               	return		;funcret
  2458   0033A4                     __end_of_putch:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _abs *****************
  2462 ;; Defined at:
  2463 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  a               2    6[COMRAM] int 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    6[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;Total ram usage:        4 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_vfpfcnvrt
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text10
  2492   0031C0                     __ptext10:
  2493                           	callstack 0
  2494   0031C0                     _abs:
  2495                           	callstack 25
  2496   0031C0  BE08               	btfsc	(abs@a+1)^0,7,c
  2497   0031C2  EFE5  F018         	goto	u2221
  2498   0031C6  EFE7  F018         	goto	u2220
  2499   0031CA                     u2221:
  2500   0031CA  EFED  F018         	goto	l1494
  2501   0031CE                     u2220:
  2502   0031CE  C007  F007         	movff	abs@a,?_abs
  2503   0031D2  C008  F008         	movff	abs@a+1,?_abs+1
  2504   0031D6  EFF9  F018         	goto	l1497
  2505   0031DA                     l1494:
  2506   0031DA  C007  F009         	movff	abs@a,??_abs
  2507   0031DE  C008  F00A         	movff	abs@a+1,??_abs+1
  2508   0031E2  1E09               	comf	??_abs^0,f,c
  2509   0031E4  1E0A               	comf	(??_abs+1)^0,f,c
  2510   0031E6  4A09               	infsnz	??_abs^0,f,c
  2511   0031E8  2A0A               	incf	(??_abs+1)^0,f,c
  2512   0031EA  C009  F007         	movff	??_abs,?_abs
  2513   0031EE  C00A  F008         	movff	??_abs+1,?_abs+1
  2514   0031F2                     l1497:
  2515   0031F2  0012               	return		;funcret
  2516   0031F4                     __end_of_abs:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function ___lwmod *****************
  2520 ;; Defined at:
  2521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  dividend        2    0[COMRAM] unsigned int 
  2524 ;;  divisor         2    2[COMRAM] unsigned int 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  counter         1    4[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[COMRAM] unsigned int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;Total ram usage:        5 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_vfpfcnvrt
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text11
  2551   002DD6                     __ptext11:
  2552                           	callstack 0
  2553   002DD6                     ___lwmod:
  2554                           	callstack 25
  2555   002DD6  5003               	movf	___lwmod@divisor^0,w,c
  2556   002DD8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2557   002DDA  B4D8               	btfsc	status,2,c
  2558   002DDC  EFF2  F016         	goto	u2151
  2559   002DE0  EFF4  F016         	goto	u2150
  2560   002DE4                     u2151:
  2561   002DE4  EF18  F017         	goto	l1252
  2562   002DE8                     u2150:
  2563   002DE8  0E01               	movlw	1
  2564   002DEA  6E05               	movwf	___lwmod@counter^0,c
  2565   002DEC  EFFC  F016         	goto	l3098
  2566   002DF0                     l3096:
  2567   002DF0  90D8               	bcf	status,0,c
  2568   002DF2  3603               	rlcf	___lwmod@divisor^0,f,c
  2569   002DF4  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2570   002DF6  2A05               	incf	___lwmod@counter^0,f,c
  2571   002DF8                     l3098:
  2572   002DF8  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2573   002DFA  EF01  F017         	goto	u2161
  2574   002DFE  EF03  F017         	goto	u2160
  2575   002E02                     u2161:
  2576   002E02  EFF8  F016         	goto	l3096
  2577   002E06                     u2160:
  2578   002E06                     l3100:
  2579   002E06  5003               	movf	___lwmod@divisor^0,w,c
  2580   002E08  5C01               	subwf	___lwmod@dividend^0,w,c
  2581   002E0A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2582   002E0C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2583   002E0E  A0D8               	btfss	status,0,c
  2584   002E10  EF0C  F017         	goto	u2171
  2585   002E14  EF0E  F017         	goto	u2170
  2586   002E18                     u2171:
  2587   002E18  EF12  F017         	goto	l3104
  2588   002E1C                     u2170:
  2589   002E1C  5003               	movf	___lwmod@divisor^0,w,c
  2590   002E1E  5E01               	subwf	___lwmod@dividend^0,f,c
  2591   002E20  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2592   002E22  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2593   002E24                     l3104:
  2594   002E24  90D8               	bcf	status,0,c
  2595   002E26  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2596   002E28  3203               	rrcf	___lwmod@divisor^0,f,c
  2597   002E2A  2E05               	decfsz	___lwmod@counter^0,f,c
  2598   002E2C  EF03  F017         	goto	l3100
  2599   002E30                     l1252:
  2600   002E30  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2601   002E34  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2602   002E38  0012               	return		;funcret
  2603   002E3A                     __end_of___lwmod:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function ___lwdiv *****************
  2607 ;; Defined at:
  2608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  dividend        2    0[COMRAM] unsigned int 
  2611 ;;  divisor         2    2[COMRAM] unsigned int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  quotient        2    4[COMRAM] unsigned int 
  2614 ;;  counter         1    6[COMRAM] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2    0[COMRAM] unsigned int 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;Total ram usage:        7 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_vfpfcnvrt
  2635 ;;		_setMotorPWM
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text12
  2640   002C8E                     __ptext12:
  2641                           	callstack 0
  2642   002C8E                     ___lwdiv:
  2643                           	callstack 25
  2644   002C8E  0E00               	movlw	0
  2645   002C90  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2646   002C92  0E00               	movlw	0
  2647   002C94  6E05               	movwf	___lwdiv@quotient^0,c
  2648   002C96  5003               	movf	___lwdiv@divisor^0,w,c
  2649   002C98  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2650   002C9A  B4D8               	btfsc	status,2,c
  2651   002C9C  EF52  F016         	goto	u2121
  2652   002CA0  EF54  F016         	goto	u2120
  2653   002CA4                     u2121:
  2654   002CA4  EF7C  F016         	goto	l1242
  2655   002CA8                     u2120:
  2656   002CA8  0E01               	movlw	1
  2657   002CAA  6E07               	movwf	___lwdiv@counter^0,c
  2658   002CAC  EF5C  F016         	goto	l3078
  2659   002CB0                     l3076:
  2660   002CB0  90D8               	bcf	status,0,c
  2661   002CB2  3603               	rlcf	___lwdiv@divisor^0,f,c
  2662   002CB4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2663   002CB6  2A07               	incf	___lwdiv@counter^0,f,c
  2664   002CB8                     l3078:
  2665   002CB8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2666   002CBA  EF61  F016         	goto	u2131
  2667   002CBE  EF63  F016         	goto	u2130
  2668   002CC2                     u2131:
  2669   002CC2  EF58  F016         	goto	l3076
  2670   002CC6                     u2130:
  2671   002CC6                     l3080:
  2672   002CC6  90D8               	bcf	status,0,c
  2673   002CC8  3605               	rlcf	___lwdiv@quotient^0,f,c
  2674   002CCA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2675   002CCC  5003               	movf	___lwdiv@divisor^0,w,c
  2676   002CCE  5C01               	subwf	___lwdiv@dividend^0,w,c
  2677   002CD0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2678   002CD2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2679   002CD4  A0D8               	btfss	status,0,c
  2680   002CD6  EF6F  F016         	goto	u2141
  2681   002CDA  EF71  F016         	goto	u2140
  2682   002CDE                     u2141:
  2683   002CDE  EF76  F016         	goto	l3088
  2684   002CE2                     u2140:
  2685   002CE2  5003               	movf	___lwdiv@divisor^0,w,c
  2686   002CE4  5E01               	subwf	___lwdiv@dividend^0,f,c
  2687   002CE6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2688   002CE8  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2689   002CEA  8005               	bsf	___lwdiv@quotient^0,0,c
  2690   002CEC                     l3088:
  2691   002CEC  90D8               	bcf	status,0,c
  2692   002CEE  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2693   002CF0  3203               	rrcf	___lwdiv@divisor^0,f,c
  2694   002CF2  2E07               	decfsz	___lwdiv@counter^0,f,c
  2695   002CF4  EF63  F016         	goto	l3080
  2696   002CF8                     l1242:
  2697   002CF8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2698   002CFC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2699   002D00  0012               	return		;funcret
  2700   002D02                     __end_of___lwdiv:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function ___awmod *****************
  2704 ;; Defined at:
  2705 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  dividend        2    0[COMRAM] int 
  2708 ;;  divisor         2    2[COMRAM] int 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  sign            1    5[COMRAM] unsigned char 
  2711 ;;  counter         1    4[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2    0[COMRAM] int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2725 ;;Total ram usage:        6 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_vfpfcnvrt
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text13
  2736   0029B2                     __ptext13:
  2737                           	callstack 0
  2738   0029B2                     ___awmod:
  2739                           	callstack 25
  2740   0029B2  0E00               	movlw	0
  2741   0029B4  6E06               	movwf	___awmod@sign^0,c
  2742   0029B6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2743   0029B8  EFE2  F014         	goto	u2060
  2744   0029BC  EFE0  F014         	goto	u2061
  2745   0029C0                     u2061:
  2746   0029C0  EFE8  F014         	goto	l3042
  2747   0029C4                     u2060:
  2748   0029C4  6C01               	negf	___awmod@dividend^0,c
  2749   0029C6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2750   0029C8  B0D8               	btfsc	status,0,c
  2751   0029CA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2752   0029CC  0E01               	movlw	1
  2753   0029CE  6E06               	movwf	___awmod@sign^0,c
  2754   0029D0                     l3042:
  2755   0029D0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2756   0029D2  EFEF  F014         	goto	u2070
  2757   0029D6  EFED  F014         	goto	u2071
  2758   0029DA                     u2071:
  2759   0029DA  EFF3  F014         	goto	l3046
  2760   0029DE                     u2070:
  2761   0029DE  6C03               	negf	___awmod@divisor^0,c
  2762   0029E0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2763   0029E2  B0D8               	btfsc	status,0,c
  2764   0029E4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2765   0029E6                     l3046:
  2766   0029E6  5003               	movf	___awmod@divisor^0,w,c
  2767   0029E8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2768   0029EA  B4D8               	btfsc	status,2,c
  2769   0029EC  EFFA  F014         	goto	u2081
  2770   0029F0  EFFC  F014         	goto	u2080
  2771   0029F4                     u2081:
  2772   0029F4  EF20  F015         	goto	l3062
  2773   0029F8                     u2080:
  2774   0029F8  0E01               	movlw	1
  2775   0029FA  6E05               	movwf	___awmod@counter^0,c
  2776   0029FC  EF04  F015         	goto	l3052
  2777   002A00                     l3050:
  2778   002A00  90D8               	bcf	status,0,c
  2779   002A02  3603               	rlcf	___awmod@divisor^0,f,c
  2780   002A04  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2781   002A06  2A05               	incf	___awmod@counter^0,f,c
  2782   002A08                     l3052:
  2783   002A08  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2784   002A0A  EF09  F015         	goto	u2091
  2785   002A0E  EF0B  F015         	goto	u2090
  2786   002A12                     u2091:
  2787   002A12  EF00  F015         	goto	l3050
  2788   002A16                     u2090:
  2789   002A16                     l3054:
  2790   002A16  5003               	movf	___awmod@divisor^0,w,c
  2791   002A18  5C01               	subwf	___awmod@dividend^0,w,c
  2792   002A1A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2793   002A1C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2794   002A1E  A0D8               	btfss	status,0,c
  2795   002A20  EF14  F015         	goto	u2101
  2796   002A24  EF16  F015         	goto	u2100
  2797   002A28                     u2101:
  2798   002A28  EF1A  F015         	goto	l3058
  2799   002A2C                     u2100:
  2800   002A2C  5003               	movf	___awmod@divisor^0,w,c
  2801   002A2E  5E01               	subwf	___awmod@dividend^0,f,c
  2802   002A30  5004               	movf	(___awmod@divisor+1)^0,w,c
  2803   002A32  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2804   002A34                     l3058:
  2805   002A34  90D8               	bcf	status,0,c
  2806   002A36  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2807   002A38  3203               	rrcf	___awmod@divisor^0,f,c
  2808   002A3A  2E05               	decfsz	___awmod@counter^0,f,c
  2809   002A3C  EF0B  F015         	goto	l3054
  2810   002A40                     l3062:
  2811   002A40  5006               	movf	___awmod@sign^0,w,c
  2812   002A42  B4D8               	btfsc	status,2,c
  2813   002A44  EF26  F015         	goto	u2111
  2814   002A48  EF28  F015         	goto	u2110
  2815   002A4C                     u2111:
  2816   002A4C  EF2C  F015         	goto	l3066
  2817   002A50                     u2110:
  2818   002A50  6C01               	negf	___awmod@dividend^0,c
  2819   002A52  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2820   002A54  B0D8               	btfsc	status,0,c
  2821   002A56  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2822   002A58                     l3066:
  2823   002A58  C001  F001         	movff	___awmod@dividend,?___awmod
  2824   002A5C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2825   002A60  0012               	return		;funcret
  2826   002A62                     __end_of___awmod:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function ___awdiv *****************
  2830 ;; Defined at:
  2831 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  dividend        2    0[COMRAM] int 
  2834 ;;  divisor         2    2[COMRAM] int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  quotient        2    6[COMRAM] int 
  2837 ;;  sign            1    5[COMRAM] unsigned char 
  2838 ;;  counter         1    4[COMRAM] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  2    0[COMRAM] int 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;Total ram usage:        8 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_vfpfcnvrt
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text14
  2863   002834                     __ptext14:
  2864                           	callstack 0
  2865   002834                     ___awdiv:
  2866                           	callstack 25
  2867   002834  0E00               	movlw	0
  2868   002836  6E06               	movwf	___awdiv@sign^0,c
  2869   002838  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2870   00283A  EF23  F014         	goto	u2000
  2871   00283E  EF21  F014         	goto	u2001
  2872   002842                     u2001:
  2873   002842  EF29  F014         	goto	l2998
  2874   002846                     u2000:
  2875   002846  6C03               	negf	___awdiv@divisor^0,c
  2876   002848  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2877   00284A  B0D8               	btfsc	status,0,c
  2878   00284C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2879   00284E  0E01               	movlw	1
  2880   002850  6E06               	movwf	___awdiv@sign^0,c
  2881   002852                     l2998:
  2882   002852  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2883   002854  EF30  F014         	goto	u2010
  2884   002858  EF2E  F014         	goto	u2011
  2885   00285C                     u2011:
  2886   00285C  EF36  F014         	goto	l3004
  2887   002860                     u2010:
  2888   002860  6C01               	negf	___awdiv@dividend^0,c
  2889   002862  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2890   002864  B0D8               	btfsc	status,0,c
  2891   002866  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2892   002868  0E01               	movlw	1
  2893   00286A  1A06               	xorwf	___awdiv@sign^0,f,c
  2894   00286C                     l3004:
  2895   00286C  0E00               	movlw	0
  2896   00286E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2897   002870  0E00               	movlw	0
  2898   002872  6E07               	movwf	___awdiv@quotient^0,c
  2899   002874  5003               	movf	___awdiv@divisor^0,w,c
  2900   002876  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2901   002878  B4D8               	btfsc	status,2,c
  2902   00287A  EF41  F014         	goto	u2021
  2903   00287E  EF43  F014         	goto	u2020
  2904   002882                     u2021:
  2905   002882  EF6B  F014         	goto	l3026
  2906   002886                     u2020:
  2907   002886  0E01               	movlw	1
  2908   002888  6E05               	movwf	___awdiv@counter^0,c
  2909   00288A  EF4B  F014         	goto	l3012
  2910   00288E                     l3010:
  2911   00288E  90D8               	bcf	status,0,c
  2912   002890  3603               	rlcf	___awdiv@divisor^0,f,c
  2913   002892  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2914   002894  2A05               	incf	___awdiv@counter^0,f,c
  2915   002896                     l3012:
  2916   002896  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2917   002898  EF50  F014         	goto	u2031
  2918   00289C  EF52  F014         	goto	u2030
  2919   0028A0                     u2031:
  2920   0028A0  EF47  F014         	goto	l3010
  2921   0028A4                     u2030:
  2922   0028A4                     l3014:
  2923   0028A4  90D8               	bcf	status,0,c
  2924   0028A6  3607               	rlcf	___awdiv@quotient^0,f,c
  2925   0028A8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2926   0028AA  5003               	movf	___awdiv@divisor^0,w,c
  2927   0028AC  5C01               	subwf	___awdiv@dividend^0,w,c
  2928   0028AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2929   0028B0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2930   0028B2  A0D8               	btfss	status,0,c
  2931   0028B4  EF5E  F014         	goto	u2041
  2932   0028B8  EF60  F014         	goto	u2040
  2933   0028BC                     u2041:
  2934   0028BC  EF65  F014         	goto	l3022
  2935   0028C0                     u2040:
  2936   0028C0  5003               	movf	___awdiv@divisor^0,w,c
  2937   0028C2  5E01               	subwf	___awdiv@dividend^0,f,c
  2938   0028C4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2939   0028C6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2940   0028C8  8007               	bsf	___awdiv@quotient^0,0,c
  2941   0028CA                     l3022:
  2942   0028CA  90D8               	bcf	status,0,c
  2943   0028CC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2944   0028CE  3203               	rrcf	___awdiv@divisor^0,f,c
  2945   0028D0  2E05               	decfsz	___awdiv@counter^0,f,c
  2946   0028D2  EF52  F014         	goto	l3014
  2947   0028D6                     l3026:
  2948   0028D6  5006               	movf	___awdiv@sign^0,w,c
  2949   0028D8  B4D8               	btfsc	status,2,c
  2950   0028DA  EF71  F014         	goto	u2051
  2951   0028DE  EF73  F014         	goto	u2050
  2952   0028E2                     u2051:
  2953   0028E2  EF77  F014         	goto	l3030
  2954   0028E6                     u2050:
  2955   0028E6  6C07               	negf	___awdiv@quotient^0,c
  2956   0028E8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2957   0028EA  B0D8               	btfsc	status,0,c
  2958   0028EC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2959   0028EE                     l3030:
  2960   0028EE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2961   0028F2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2962   0028F6  0012               	return		;funcret
  2963   0028F8                     __end_of___awdiv:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _sendStringSerial4 *****************
  2967 ;; Defined at:
  2968 ;;		line 41 in file "serial.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  string          2    1[COMRAM] PTR unsigned char 
  2971 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2972 ;;		 -> sendIntSerial4@string(17), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;Total ram usage:        2 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 2
  2991 ;; This function calls:
  2992 ;;		_sendCharSerial4
  2993 ;; This function is called by:
  2994 ;;		_sendIntSerial4
  2995 ;;		_sendRGBCvalSerial4
  2996 ;;		_sendHSVvalSerial4
  2997 ;;		_sendArrayCharSerial4
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text15
  3002   002E3A                     __ptext15:
  3003                           	callstack 0
  3004   002E3A                     _sendStringSerial4:
  3005                           	callstack 27
  3006   002E3A                     
  3007                           ;serial.c: 43:     while(*string != 0){
  3008   002E3A  EF34  F017         	goto	l3464
  3009   002E3E                     l3460:
  3010                           
  3011                           ;serial.c: 44:   sendCharSerial4(*string++);
  3012   002E3E  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  3013   002E42  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  3014   002E46  0E00               	movlw	low (__smallconst shr (0+16))
  3015   002E48  6EF8               	movwf	tblptru,c
  3016   002E4A  0E0D               	movlw	(high __ramtop+-1)
  3017   002E4C  64F7               	cpfsgt	tblptrh,c
  3018   002E4E  D003               	bra	u2617
  3019   002E50  0008               	tblrd		*
  3020   002E52  50F5               	movf	tablat,w,c
  3021   002E54  D005               	bra	u2610
  3022   002E56                     u2617:
  3023   002E56  CFF6 FFE9          	movff	tblptrl,fsr0l
  3024   002E5A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3025   002E5E  50EF               	movf	indf0,w,c
  3026   002E60                     u2610:
  3027   002E60  EC96  F019         	call	_sendCharSerial4
  3028   002E64  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3029   002E66  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3030   002E68                     l3464:
  3031                           
  3032                           ;serial.c: 43:     while(*string != 0){
  3033   002E68  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  3034   002E6C  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  3035   002E70  0E00               	movlw	low (__smallconst shr (0+16))
  3036   002E72  6EF8               	movwf	tblptru,c
  3037   002E74  0E0D               	movlw	(high __ramtop+-1)
  3038   002E76  64F7               	cpfsgt	tblptrh,c
  3039   002E78  D003               	bra	u2627
  3040   002E7A  0008               	tblrd		*
  3041   002E7C  50F5               	movf	tablat,w,c
  3042   002E7E  D005               	bra	u2620
  3043   002E80                     u2627:
  3044   002E80  CFF6 FFE9          	movff	tblptrl,fsr0l
  3045   002E84  CFF7 FFEA          	movff	tblptrh,fsr0h
  3046   002E88  50EF               	movf	indf0,w,c
  3047   002E8A                     u2620:
  3048   002E8A  0900               	iorlw	0
  3049   002E8C  A4D8               	btfss	status,2,c
  3050   002E8E  EF4B  F017         	goto	u2631
  3051   002E92  EF4D  F017         	goto	u2630
  3052   002E96                     u2631:
  3053   002E96  EF1F  F017         	goto	l3460
  3054   002E9A                     u2630:
  3055   002E9A  0012               	return		;funcret
  3056   002E9C                     __end_of_sendStringSerial4:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _sendCharSerial4 *****************
  3060 ;; Defined at:
  3061 ;;		line 33 in file "serial.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  charToSend      1    wreg     unsigned char 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  charToSend      1    0[COMRAM] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;Total ram usage:        1 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 1
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_sendStringSerial4
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text16
  3090   00332C                     __ptext16:
  3091                           	callstack 0
  3092   00332C                     _sendCharSerial4:
  3093                           	callstack 27
  3094                           
  3095                           ;incstack = 0
  3096                           ;sendCharSerial4@charToSend stored from wreg
  3097   00332C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3098   00332E                     l466:
  3099   00332E  010E               	movlb	14	; () banked
  3100   003330  A537               	btfss	55,2,b	;volatile
  3101   003332  EF9D  F019         	goto	u2551
  3102   003336  EF9F  F019         	goto	u2550
  3103   00333A                     u2551:
  3104   00333A  EF97  F019         	goto	l466
  3105   00333E                     u2550:
  3106   00333E                     
  3107                           ; BSR set to: 14
  3108                           ;serial.c: 35:     TX4REG = charToSend;
  3109   00333E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3110   003342                     
  3111                           ; BSR set to: 14
  3112   003342  0012               	return		;funcret
  3113   003344                     __end_of_sendCharSerial4:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _scale_RGB *****************
  3117 ;; Defined at:
  3118 ;;		line 197 in file "color.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  3121 ;;		 -> main@RGBC_colour(8), 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;Total ram usage:        3 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 2
  3140 ;; This function calls:
  3141 ;;		___flmul
  3142 ;;		___fltol
  3143 ;;		___xxtofl
  3144 ;; This function is called by:
  3145 ;;		_main
  3146 ;;		_forward_navigation
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text17
  3151   002696                     __ptext17:
  3152                           	callstack 0
  3153   002696                     _scale_RGB:
  3154                           	callstack 28
  3155   002696                     
  3156                           ;color.c: 197: void scale_RGB(struct RGBC_val *p);color.c: 198: {;color.c: 199:     p->R
      +                           *= 0.5;
  3157   002696  0E00               	movlw	0
  3158   002698  6E13               	movwf	___flmul@a^0,c
  3159   00269A  0E00               	movlw	0
  3160   00269C  6E14               	movwf	(___flmul@a+1)^0,c
  3161   00269E  0E00               	movlw	0
  3162   0026A0  6E15               	movwf	(___flmul@a+2)^0,c
  3163   0026A2  0E3F               	movlw	63
  3164   0026A4  6E16               	movwf	(___flmul@a+3)^0,c
  3165   0026A6  5032               	movf	scale_RGB@p^0,w,c
  3166   0026A8  6ED9               	movwf	fsr2l,c
  3167   0026AA  6ADA               	clrf	fsr2h,c
  3168   0026AC  CFDE F033          	movff	postinc2,??_scale_RGB
  3169   0026B0  CFDD F034          	movff	postdec2,??_scale_RGB+1
  3170   0026B4  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  3171   0026B8  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  3172   0026BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3173   0026BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3174   0026C0  0E00               	movlw	0
  3175   0026C2  EC3E  F011         	call	___xxtofl
  3176   0026C6  C001  F00F         	movff	?___xxtofl,___flmul@b
  3177   0026CA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3178   0026CE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3179   0026D2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3180   0026D6  ECA5  F00C         	call	___flmul	;wreg free
  3181   0026DA  C00F  F028         	movff	?___flmul,___fltol@f1
  3182   0026DE  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3183   0026E2  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3184   0026E6  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3185   0026EA  ECC8  F012         	call	___fltol	;wreg free
  3186   0026EE  5032               	movf	scale_RGB@p^0,w,c
  3187   0026F0  6ED9               	movwf	fsr2l,c
  3188   0026F2  6ADA               	clrf	fsr2h,c
  3189   0026F4  C028  FFDE         	movff	?___fltol,postinc2
  3190   0026F8  C029  FFDD         	movff	?___fltol+1,postdec2
  3191                           
  3192                           ;color.c: 200:     p->G *= 0.7;
  3193   0026FC  0E33               	movlw	51
  3194   0026FE  6E13               	movwf	___flmul@a^0,c
  3195   002700  0E33               	movlw	51
  3196   002702  6E14               	movwf	(___flmul@a+1)^0,c
  3197   002704  0E33               	movlw	51
  3198   002706  6E15               	movwf	(___flmul@a+2)^0,c
  3199   002708  0E3F               	movlw	63
  3200   00270A  6E16               	movwf	(___flmul@a+3)^0,c
  3201   00270C  5032               	movf	scale_RGB@p^0,w,c
  3202   00270E  6ED9               	movwf	fsr2l,c
  3203   002710  6ADA               	clrf	fsr2h,c
  3204   002712  0E02               	movlw	2
  3205   002714  26D9               	addwf	fsr2l,f,c
  3206   002716  CFDE F033          	movff	postinc2,??_scale_RGB
  3207   00271A  CFDD F034          	movff	postdec2,??_scale_RGB+1
  3208   00271E  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  3209   002722  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  3210   002726  6A03               	clrf	(___xxtofl@val+2)^0,c
  3211   002728  6A04               	clrf	(___xxtofl@val+3)^0,c
  3212   00272A  0E00               	movlw	0
  3213   00272C  EC3E  F011         	call	___xxtofl
  3214   002730  C001  F00F         	movff	?___xxtofl,___flmul@b
  3215   002734  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3216   002738  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3217   00273C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3218   002740  ECA5  F00C         	call	___flmul	;wreg free
  3219   002744  C00F  F028         	movff	?___flmul,___fltol@f1
  3220   002748  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3221   00274C  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3222   002750  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3223   002754  ECC8  F012         	call	___fltol	;wreg free
  3224   002758  5032               	movf	scale_RGB@p^0,w,c
  3225   00275A  6ED9               	movwf	fsr2l,c
  3226   00275C  6ADA               	clrf	fsr2h,c
  3227   00275E  0E02               	movlw	2
  3228   002760  26D9               	addwf	fsr2l,f,c
  3229   002762  C028  FFDE         	movff	?___fltol,postinc2
  3230   002766  C029  FFDD         	movff	?___fltol+1,postdec2
  3231   00276A  0012               	return		;funcret
  3232   00276C                     __end_of_scale_RGB:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function ___xxtofl *****************
  3236 ;; Defined at:
  3237 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  sign            1    wreg     unsigned char 
  3240 ;;  val             4    0[COMRAM] long 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  sign            1    8[COMRAM] unsigned char 
  3243 ;;  arg             4   10[COMRAM] unsigned long 
  3244 ;;  exp             1    9[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  4    0[COMRAM] unsigned char 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;Total ram usage:       14 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_scale_RGB
  3265 ;;		_stop
  3266 ;;		_turnLeft
  3267 ;;		_turnRight
  3268 ;;		_fullSpeedAhead
  3269 ;;		_fullSpeedReverse
  3270 ;;		_turnLeft90
  3271 ;;		_turnRight90
  3272 ;;		_turnLeft135
  3273 ;;		_turnRight135
  3274 ;;		_UTurn
  3275 ;;		_headbuttReverse
  3276 ;;		_squareReverse
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text18
  3281   00227C                     __ptext18:
  3282                           	callstack 0
  3283   00227C                     ___xxtofl:
  3284                           	callstack 28
  3285                           
  3286                           ;incstack = 0
  3287                           ;___xxtofl@sign stored from wreg
  3288   00227C  6E09               	movwf	___xxtofl@sign^0,c
  3289   00227E  5009               	movf	___xxtofl@sign^0,w,c
  3290   002280  B4D8               	btfsc	status,2,c
  3291   002282  EF45  F011         	goto	u2951
  3292   002286  EF47  F011         	goto	u2950
  3293   00228A                     u2951:
  3294   00228A  EF69  F011         	goto	l1406
  3295   00228E                     u2950:
  3296   00228E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3297   002290  EF4E  F011         	goto	u2960
  3298   002294  EF4C  F011         	goto	u2961
  3299   002298                     u2961:
  3300   002298  EF69  F011         	goto	l1406
  3301   00229C                     u2960:
  3302   00229C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3303   0022A0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3304   0022A4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3305   0022A8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3306   0022AC  1E05               	comf	??___xxtofl^0,f,c
  3307   0022AE  1E06               	comf	(??___xxtofl+1)^0,f,c
  3308   0022B0  1E07               	comf	(??___xxtofl+2)^0,f,c
  3309   0022B2  1E08               	comf	(??___xxtofl+3)^0,f,c
  3310   0022B4  2A05               	incf	??___xxtofl^0,f,c
  3311   0022B6  0E00               	movlw	0
  3312   0022B8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3313   0022BA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3314   0022BC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3315   0022BE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3316   0022C2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3317   0022C6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3318   0022CA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3319   0022CE  EF71  F011         	goto	l3794
  3320   0022D2                     l1406:
  3321   0022D2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3322   0022D6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3323   0022DA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3324   0022DE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3325   0022E2                     l3794:
  3326   0022E2  5001               	movf	___xxtofl@val^0,w,c
  3327   0022E4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3328   0022E6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3329   0022E8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3330   0022EA  A4D8               	btfss	status,2,c
  3331   0022EC  EF7A  F011         	goto	u2971
  3332   0022F0  EF7C  F011         	goto	u2970
  3333   0022F4                     u2971:
  3334   0022F4  EF86  F011         	goto	l3800
  3335   0022F8                     u2970:
  3336   0022F8  0E00               	movlw	0
  3337   0022FA  6E01               	movwf	?___xxtofl^0,c
  3338   0022FC  0E00               	movlw	0
  3339   0022FE  6E02               	movwf	(?___xxtofl+1)^0,c
  3340   002300  0E00               	movlw	0
  3341   002302  6E03               	movwf	(?___xxtofl+2)^0,c
  3342   002304  0E00               	movlw	0
  3343   002306  6E04               	movwf	(?___xxtofl+3)^0,c
  3344   002308  EF17  F012         	goto	l1409
  3345   00230C                     l3800:
  3346   00230C  0E96               	movlw	150
  3347   00230E  6E0A               	movwf	___xxtofl@exp^0,c
  3348   002310  EF90  F011         	goto	l3804
  3349   002314                     l3802:
  3350   002314  2A0A               	incf	___xxtofl@exp^0,f,c
  3351   002316  90D8               	bcf	status,0,c
  3352   002318  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3353   00231A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3354   00231C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3355   00231E  320B               	rrcf	___xxtofl@arg^0,f,c
  3356   002320                     l3804:
  3357   002320  0E00               	movlw	0
  3358   002322  140B               	andwf	___xxtofl@arg^0,w,c
  3359   002324  6E05               	movwf	??___xxtofl^0,c
  3360   002326  0E00               	movlw	0
  3361   002328  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3362   00232A  6E06               	movwf	(??___xxtofl+1)^0,c
  3363   00232C  0E00               	movlw	0
  3364   00232E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3365   002330  6E07               	movwf	(??___xxtofl+2)^0,c
  3366   002332  0EFE               	movlw	254
  3367   002334  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3368   002336  6E08               	movwf	(??___xxtofl+3)^0,c
  3369   002338  5005               	movf	??___xxtofl^0,w,c
  3370   00233A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3371   00233C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3372   00233E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3373   002340  A4D8               	btfss	status,2,c
  3374   002342  EFA5  F011         	goto	u2981
  3375   002346  EFA7  F011         	goto	u2980
  3376   00234A                     u2981:
  3377   00234A  EF8A  F011         	goto	l3802
  3378   00234E                     u2980:
  3379   00234E  EFB5  F011         	goto	l1413
  3380   002352                     l3806:
  3381   002352  2A0A               	incf	___xxtofl@exp^0,f,c
  3382   002354  0E01               	movlw	1
  3383   002356  260B               	addwf	___xxtofl@arg^0,f,c
  3384   002358  0E00               	movlw	0
  3385   00235A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3386   00235C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3387   00235E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3388   002360  90D8               	bcf	status,0,c
  3389   002362  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3390   002364  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3391   002366  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3392   002368  320B               	rrcf	___xxtofl@arg^0,f,c
  3393   00236A                     l1413:
  3394   00236A  0E00               	movlw	0
  3395   00236C  140B               	andwf	___xxtofl@arg^0,w,c
  3396   00236E  6E05               	movwf	??___xxtofl^0,c
  3397   002370  0E00               	movlw	0
  3398   002372  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3399   002374  6E06               	movwf	(??___xxtofl+1)^0,c
  3400   002376  0E00               	movlw	0
  3401   002378  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3402   00237A  6E07               	movwf	(??___xxtofl+2)^0,c
  3403   00237C  0EFF               	movlw	255
  3404   00237E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3405   002380  6E08               	movwf	(??___xxtofl+3)^0,c
  3406   002382  5005               	movf	??___xxtofl^0,w,c
  3407   002384  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3408   002386  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3409   002388  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3410   00238A  A4D8               	btfss	status,2,c
  3411   00238C  EFCA  F011         	goto	u2991
  3412   002390  EFCC  F011         	goto	u2990
  3413   002394                     u2991:
  3414   002394  EFA9  F011         	goto	l3806
  3415   002398                     u2990:
  3416   002398  EFD4  F011         	goto	l3814
  3417   00239C                     l3812:
  3418   00239C  060A               	decf	___xxtofl@exp^0,f,c
  3419   00239E  90D8               	bcf	status,0,c
  3420   0023A0  360B               	rlcf	___xxtofl@arg^0,f,c
  3421   0023A2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3422   0023A4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3423   0023A6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3424   0023A8                     l3814:
  3425   0023A8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3426   0023AA  EFD9  F011         	goto	u3001
  3427   0023AE  EFDB  F011         	goto	u3000
  3428   0023B2                     u3001:
  3429   0023B2  EFE3  F011         	goto	l1420
  3430   0023B6                     u3000:
  3431   0023B6  0E02               	movlw	2
  3432   0023B8  600A               	cpfslt	___xxtofl@exp^0,c
  3433   0023BA  EFE1  F011         	goto	u3011
  3434   0023BE  EFE3  F011         	goto	u3010
  3435   0023C2                     u3011:
  3436   0023C2  EFCE  F011         	goto	l3812
  3437   0023C6                     u3010:
  3438   0023C6                     l1420:
  3439   0023C6  B00A               	btfsc	___xxtofl@exp^0,0,c
  3440   0023C8  EFE8  F011         	goto	u3021
  3441   0023CC  EFEA  F011         	goto	u3020
  3442   0023D0                     u3021:
  3443   0023D0  EFEB  F011         	goto	l3820
  3444   0023D4                     u3020:
  3445   0023D4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3446   0023D6                     l3820:
  3447   0023D6  90D8               	bcf	status,0,c
  3448   0023D8  320A               	rrcf	___xxtofl@exp^0,f,c
  3449   0023DA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3450   0023DE  6A06               	clrf	(??___xxtofl+1)^0,c
  3451   0023E0  6A07               	clrf	(??___xxtofl+2)^0,c
  3452   0023E2  6A08               	clrf	(??___xxtofl+3)^0,c
  3453   0023E4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3454   0023E8  6A07               	clrf	(??___xxtofl+2)^0,c
  3455   0023EA  6A06               	clrf	(??___xxtofl+1)^0,c
  3456   0023EC  6A05               	clrf	??___xxtofl^0,c
  3457   0023EE  5005               	movf	??___xxtofl^0,w,c
  3458   0023F0  120B               	iorwf	___xxtofl@arg^0,f,c
  3459   0023F2  5006               	movf	(??___xxtofl+1)^0,w,c
  3460   0023F4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3461   0023F6  5007               	movf	(??___xxtofl+2)^0,w,c
  3462   0023F8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3463   0023FA  5008               	movf	(??___xxtofl+3)^0,w,c
  3464   0023FC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3465   0023FE  5009               	movf	___xxtofl@sign^0,w,c
  3466   002400  B4D8               	btfsc	status,2,c
  3467   002402  EF05  F012         	goto	u3031
  3468   002406  EF07  F012         	goto	u3030
  3469   00240A                     u3031:
  3470   00240A  EF0F  F012         	goto	l3830
  3471   00240E                     u3030:
  3472   00240E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3473   002410  EF0E  F012         	goto	u3040
  3474   002414  EF0C  F012         	goto	u3041
  3475   002418                     u3041:
  3476   002418  EF0F  F012         	goto	l3830
  3477   00241C                     u3040:
  3478   00241C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3479   00241E                     l3830:
  3480   00241E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3481   002422  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3482   002426  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3483   00242A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3484   00242E                     l1409:
  3485   00242E  0012               	return		;funcret
  3486   002430                     __end_of___xxtofl:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function ___fltol *****************
  3490 ;; Defined at:
  3491 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  f1              4   39[COMRAM] unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  exp1            1   48[COMRAM] unsigned char 
  3496 ;;  sign1           1   47[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  4   39[COMRAM] long 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3510 ;;Total ram usage:       10 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_scale_RGB
  3517 ;;		_stop
  3518 ;;		_turnLeft
  3519 ;;		_turnRight
  3520 ;;		_fullSpeedAhead
  3521 ;;		_fullSpeedReverse
  3522 ;;		_turnLeft90
  3523 ;;		_turnRight90
  3524 ;;		_turnLeft135
  3525 ;;		_turnRight135
  3526 ;;		_UTurn
  3527 ;;		_headbuttReverse
  3528 ;;		_squareReverse
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text19
  3533   002590                     __ptext19:
  3534                           	callstack 0
  3535   002590                     ___fltol:
  3536                           	callstack 28
  3537   002590  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3538   002592  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3539   002594  6E31               	movwf	___fltol@exp1^0,c
  3540   002596  5031               	movf	___fltol@exp1^0,w,c
  3541   002598  A4D8               	btfss	status,2,c
  3542   00259A  EFD1  F012         	goto	u2881
  3543   00259E  EFD3  F012         	goto	u2880
  3544   0025A2                     u2881:
  3545   0025A2  EFDD  F012         	goto	l3750
  3546   0025A6                     u2880:
  3547   0025A6                     l3746:
  3548   0025A6  0E00               	movlw	0
  3549   0025A8  6E28               	movwf	?___fltol^0,c
  3550   0025AA  0E00               	movlw	0
  3551   0025AC  6E29               	movwf	(?___fltol+1)^0,c
  3552   0025AE  0E00               	movlw	0
  3553   0025B0  6E2A               	movwf	(?___fltol+2)^0,c
  3554   0025B2  0E00               	movlw	0
  3555   0025B4  6E2B               	movwf	(?___fltol+3)^0,c
  3556   0025B6  EF4A  F013         	goto	l1048
  3557   0025BA                     l3750:
  3558   0025BA  C028  F02C         	movff	___fltol@f1,??___fltol
  3559   0025BE  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3560   0025C2  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3561   0025C6  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3562   0025CA  0E20               	movlw	32
  3563   0025CC  EFED  F012         	goto	u2890
  3564   0025D0                     u2895:
  3565   0025D0  90D8               	bcf	status,0,c
  3566   0025D2  322F               	rrcf	(??___fltol+3)^0,f,c
  3567   0025D4  322E               	rrcf	(??___fltol+2)^0,f,c
  3568   0025D6  322D               	rrcf	(??___fltol+1)^0,f,c
  3569   0025D8  322C               	rrcf	??___fltol^0,f,c
  3570   0025DA                     u2890:
  3571   0025DA  2EE8               	decfsz	wreg,f,c
  3572   0025DC  EFE8  F012         	goto	u2895
  3573   0025E0  502C               	movf	??___fltol^0,w,c
  3574   0025E2  6E30               	movwf	___fltol@sign1^0,c
  3575   0025E4  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3576   0025E6  0EFF               	movlw	255
  3577   0025E8  1628               	andwf	___fltol@f1^0,f,c
  3578   0025EA  0EFF               	movlw	255
  3579   0025EC  1629               	andwf	(___fltol@f1+1)^0,f,c
  3580   0025EE  0EFF               	movlw	255
  3581   0025F0  162A               	andwf	(___fltol@f1+2)^0,f,c
  3582   0025F2  0E00               	movlw	0
  3583   0025F4  162B               	andwf	(___fltol@f1+3)^0,f,c
  3584   0025F6  0E96               	movlw	150
  3585   0025F8  5E31               	subwf	___fltol@exp1^0,f,c
  3586   0025FA  BE31               	btfsc	___fltol@exp1^0,7,c
  3587   0025FC  EF04  F013         	goto	u2900
  3588   002600  EF02  F013         	goto	u2901
  3589   002604                     u2901:
  3590   002604  EF1A  F013         	goto	l3770
  3591   002608                     u2900:
  3592   002608  5031               	movf	___fltol@exp1^0,w,c
  3593   00260A  0A80               	xorlw	128
  3594   00260C  0F97               	addlw	151
  3595   00260E  B0D8               	btfsc	status,0,c
  3596   002610  EF0C  F013         	goto	u2911
  3597   002614  EF0E  F013         	goto	u2910
  3598   002618                     u2911:
  3599   002618  EF10  F013         	goto	l3766
  3600   00261C                     u2910:
  3601   00261C  EFD3  F012         	goto	l3746
  3602   002620                     l3766:
  3603   002620  90D8               	bcf	status,0,c
  3604   002622  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3605   002624  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3606   002626  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3607   002628  3228               	rrcf	___fltol@f1^0,f,c
  3608   00262A  3E31               	incfsz	___fltol@exp1^0,f,c
  3609   00262C  EF10  F013         	goto	l3766
  3610   002630  EF32  F013         	goto	l3780
  3611   002634                     l3770:
  3612   002634  0E1F               	movlw	31
  3613   002636  6431               	cpfsgt	___fltol@exp1^0,c
  3614   002638  EF20  F013         	goto	u2921
  3615   00263C  EF22  F013         	goto	u2920
  3616   002640                     u2921:
  3617   002640  EF2A  F013         	goto	l3778
  3618   002644                     u2920:
  3619   002644  EFD3  F012         	goto	l3746
  3620   002648                     l3776:
  3621   002648  90D8               	bcf	status,0,c
  3622   00264A  3628               	rlcf	___fltol@f1^0,f,c
  3623   00264C  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3624   00264E  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3625   002650  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3626   002652  0631               	decf	___fltol@exp1^0,f,c
  3627   002654                     l3778:
  3628   002654  5031               	movf	___fltol@exp1^0,w,c
  3629   002656  A4D8               	btfss	status,2,c
  3630   002658  EF30  F013         	goto	u2931
  3631   00265C  EF32  F013         	goto	u2930
  3632   002660                     u2931:
  3633   002660  EF24  F013         	goto	l3776
  3634   002664                     u2930:
  3635   002664                     l3780:
  3636   002664  5030               	movf	___fltol@sign1^0,w,c
  3637   002666  B4D8               	btfsc	status,2,c
  3638   002668  EF38  F013         	goto	u2941
  3639   00266C  EF3A  F013         	goto	u2940
  3640   002670                     u2941:
  3641   002670  EF42  F013         	goto	l3784
  3642   002674                     u2940:
  3643   002674  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3644   002676  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3645   002678  1E29               	comf	(___fltol@f1+1)^0,f,c
  3646   00267A  6C28               	negf	___fltol@f1^0,c
  3647   00267C  0E00               	movlw	0
  3648   00267E  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3649   002680  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3650   002682  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3651   002684                     l3784:
  3652   002684  C028  F028         	movff	___fltol@f1,?___fltol
  3653   002688  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3654   00268C  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3655   002690  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3656   002694                     l1048:
  3657   002694  0012               	return		;funcret
  3658   002696                     __end_of___fltol:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function ___flmul *****************
  3662 ;; Defined at:
  3663 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  b               4   14[COMRAM] long 
  3666 ;;  a               4   18[COMRAM] long 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  prod            4   33[COMRAM] struct .
  3669 ;;  grs             4   27[COMRAM] unsigned long 
  3670 ;;  temp            2   37[COMRAM] struct .
  3671 ;;  bexp            1   32[COMRAM] unsigned char 
  3672 ;;  aexp            1   31[COMRAM] unsigned char 
  3673 ;;  sign            1   26[COMRAM] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  4   14[COMRAM] unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, prodl, prodh
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3683 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;Total ram usage:       25 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_scale_RGB
  3694 ;;		_stop
  3695 ;;		_turnLeft
  3696 ;;		_turnRight
  3697 ;;		_fullSpeedAhead
  3698 ;;		_fullSpeedReverse
  3699 ;;		_turnLeft90
  3700 ;;		_turnRight90
  3701 ;;		_turnLeft135
  3702 ;;		_turnRight135
  3703 ;;		_UTurn
  3704 ;;		_headbuttReverse
  3705 ;;		_squareReverse
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text20
  3710   00194A                     __ptext20:
  3711                           	callstack 0
  3712   00194A                     ___flmul:
  3713                           	callstack 28
  3714   00194A  5012               	movf	(___flmul@b+3)^0,w,c
  3715   00194C  0B80               	andlw	128
  3716   00194E  6E1B               	movwf	___flmul@sign^0,c
  3717   001950  5012               	movf	(___flmul@b+3)^0,w,c
  3718   001952  2412               	addwf	(___flmul@b+3)^0,w,c
  3719   001954  6E21               	movwf	___flmul@bexp^0,c
  3720   001956  AE11               	btfss	(___flmul@b+2)^0,7,c
  3721   001958  EFB0  F00C         	goto	u2691
  3722   00195C  EFB2  F00C         	goto	u2690
  3723   001960                     u2691:
  3724   001960  EFB3  F00C         	goto	l3620
  3725   001964                     u2690:
  3726   001964  8021               	bsf	___flmul@bexp^0,0,c
  3727   001966                     l3620:
  3728   001966  5021               	movf	___flmul@bexp^0,w,c
  3729   001968  B4D8               	btfsc	status,2,c
  3730   00196A  EFB9  F00C         	goto	u2701
  3731   00196E  EFBB  F00C         	goto	u2700
  3732   001972                     u2701:
  3733   001972  EFCE  F00C         	goto	l3628
  3734   001976                     u2700:
  3735   001976  2821               	incf	___flmul@bexp^0,w,c
  3736   001978  A4D8               	btfss	status,2,c
  3737   00197A  EFC1  F00C         	goto	u2711
  3738   00197E  EFC3  F00C         	goto	u2710
  3739   001982                     u2711:
  3740   001982  EFCB  F00C         	goto	l3626
  3741   001986                     u2710:
  3742   001986  0E00               	movlw	0
  3743   001988  6E0F               	movwf	___flmul@b^0,c
  3744   00198A  0E00               	movlw	0
  3745   00198C  6E10               	movwf	(___flmul@b+1)^0,c
  3746   00198E  0E00               	movlw	0
  3747   001990  6E11               	movwf	(___flmul@b+2)^0,c
  3748   001992  0E00               	movlw	0
  3749   001994  6E12               	movwf	(___flmul@b+3)^0,c
  3750   001996                     l3626:
  3751   001996  8E11               	bsf	(___flmul@b+2)^0,7,c
  3752   001998  EFD6  F00C         	goto	l3630
  3753   00199C                     l3628:
  3754   00199C  0E00               	movlw	0
  3755   00199E  6E0F               	movwf	___flmul@b^0,c
  3756   0019A0  0E00               	movlw	0
  3757   0019A2  6E10               	movwf	(___flmul@b+1)^0,c
  3758   0019A4  0E00               	movlw	0
  3759   0019A6  6E11               	movwf	(___flmul@b+2)^0,c
  3760   0019A8  0E00               	movlw	0
  3761   0019AA  6E12               	movwf	(___flmul@b+3)^0,c
  3762   0019AC                     l3630:
  3763   0019AC  5016               	movf	(___flmul@a+3)^0,w,c
  3764   0019AE  0B80               	andlw	128
  3765   0019B0  1A1B               	xorwf	___flmul@sign^0,f,c
  3766   0019B2  5016               	movf	(___flmul@a+3)^0,w,c
  3767   0019B4  2416               	addwf	(___flmul@a+3)^0,w,c
  3768   0019B6  6E20               	movwf	___flmul@aexp^0,c
  3769   0019B8  AE15               	btfss	(___flmul@a+2)^0,7,c
  3770   0019BA  EFE1  F00C         	goto	u2721
  3771   0019BE  EFE3  F00C         	goto	u2720
  3772   0019C2                     u2721:
  3773   0019C2  EFE4  F00C         	goto	l3638
  3774   0019C6                     u2720:
  3775   0019C6  8020               	bsf	___flmul@aexp^0,0,c
  3776   0019C8                     l3638:
  3777   0019C8  5020               	movf	___flmul@aexp^0,w,c
  3778   0019CA  B4D8               	btfsc	status,2,c
  3779   0019CC  EFEA  F00C         	goto	u2731
  3780   0019D0  EFEC  F00C         	goto	u2730
  3781   0019D4                     u2731:
  3782   0019D4  EFFF  F00C         	goto	l3646
  3783   0019D8                     u2730:
  3784   0019D8  2820               	incf	___flmul@aexp^0,w,c
  3785   0019DA  A4D8               	btfss	status,2,c
  3786   0019DC  EFF2  F00C         	goto	u2741
  3787   0019E0  EFF4  F00C         	goto	u2740
  3788   0019E4                     u2741:
  3789   0019E4  EFFC  F00C         	goto	l3644
  3790   0019E8                     u2740:
  3791   0019E8  0E00               	movlw	0
  3792   0019EA  6E13               	movwf	___flmul@a^0,c
  3793   0019EC  0E00               	movlw	0
  3794   0019EE  6E14               	movwf	(___flmul@a+1)^0,c
  3795   0019F0  0E00               	movlw	0
  3796   0019F2  6E15               	movwf	(___flmul@a+2)^0,c
  3797   0019F4  0E00               	movlw	0
  3798   0019F6  6E16               	movwf	(___flmul@a+3)^0,c
  3799   0019F8                     l3644:
  3800   0019F8  8E15               	bsf	(___flmul@a+2)^0,7,c
  3801   0019FA  EF07  F00D         	goto	l1365
  3802   0019FE                     l3646:
  3803   0019FE  0E00               	movlw	0
  3804   001A00  6E13               	movwf	___flmul@a^0,c
  3805   001A02  0E00               	movlw	0
  3806   001A04  6E14               	movwf	(___flmul@a+1)^0,c
  3807   001A06  0E00               	movlw	0
  3808   001A08  6E15               	movwf	(___flmul@a+2)^0,c
  3809   001A0A  0E00               	movlw	0
  3810   001A0C  6E16               	movwf	(___flmul@a+3)^0,c
  3811   001A0E                     l1365:
  3812   001A0E  5020               	movf	___flmul@aexp^0,w,c
  3813   001A10  B4D8               	btfsc	status,2,c
  3814   001A12  EF0D  F00D         	goto	u2751
  3815   001A16  EF0F  F00D         	goto	u2750
  3816   001A1A                     u2751:
  3817   001A1A  EF17  F00D         	goto	l3650
  3818   001A1E                     u2750:
  3819   001A1E  5021               	movf	___flmul@bexp^0,w,c
  3820   001A20  A4D8               	btfss	status,2,c
  3821   001A22  EF15  F00D         	goto	u2761
  3822   001A26  EF17  F00D         	goto	u2760
  3823   001A2A                     u2761:
  3824   001A2A  EF21  F00D         	goto	l3654
  3825   001A2E                     u2760:
  3826   001A2E                     l3650:
  3827   001A2E  0E00               	movlw	0
  3828   001A30  6E0F               	movwf	?___flmul^0,c
  3829   001A32  0E00               	movlw	0
  3830   001A34  6E10               	movwf	(?___flmul+1)^0,c
  3831   001A36  0E00               	movlw	0
  3832   001A38  6E11               	movwf	(?___flmul+2)^0,c
  3833   001A3A  0E00               	movlw	0
  3834   001A3C  6E12               	movwf	(?___flmul+3)^0,c
  3835   001A3E  EFB9  F00E         	goto	l1369
  3836   001A42                     l3654:
  3837   001A42  5015               	movf	(___flmul@a+2)^0,w,c
  3838   001A44  020F               	mulwf	___flmul@b^0,c
  3839   001A46  CFF3 F026          	movff	prodl,___flmul@temp
  3840   001A4A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3841   001A4E  5026               	movf	___flmul@temp^0,w,c
  3842   001A50  6E1C               	movwf	___flmul@grs^0,c
  3843   001A52  6A1D               	clrf	(___flmul@grs+1)^0,c
  3844   001A54  6A1E               	clrf	(___flmul@grs+2)^0,c
  3845   001A56  6A1F               	clrf	(___flmul@grs+3)^0,c
  3846   001A58  5027               	movf	(___flmul@temp+1)^0,w,c
  3847   001A5A  6E22               	movwf	___flmul@prod^0,c
  3848   001A5C  6A23               	clrf	(___flmul@prod+1)^0,c
  3849   001A5E  6A24               	clrf	(___flmul@prod+2)^0,c
  3850   001A60  6A25               	clrf	(___flmul@prod+3)^0,c
  3851   001A62  5014               	movf	(___flmul@a+1)^0,w,c
  3852   001A64  0210               	mulwf	(___flmul@b+1)^0,c
  3853   001A66  CFF3 F026          	movff	prodl,___flmul@temp
  3854   001A6A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3855   001A6E  5026               	movf	___flmul@temp^0,w,c
  3856   001A70  261C               	addwf	___flmul@grs^0,f,c
  3857   001A72  0E00               	movlw	0
  3858   001A74  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3859   001A76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3860   001A78  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3861   001A7A  5027               	movf	(___flmul@temp+1)^0,w,c
  3862   001A7C  2622               	addwf	___flmul@prod^0,f,c
  3863   001A7E  0E00               	movlw	0
  3864   001A80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3865   001A82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3866   001A84  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3867   001A86  5013               	movf	___flmul@a^0,w,c
  3868   001A88  0211               	mulwf	(___flmul@b+2)^0,c
  3869   001A8A  CFF3 F026          	movff	prodl,___flmul@temp
  3870   001A8E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3871   001A92  5026               	movf	___flmul@temp^0,w,c
  3872   001A94  261C               	addwf	___flmul@grs^0,f,c
  3873   001A96  0E00               	movlw	0
  3874   001A98  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3875   001A9A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3876   001A9C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3877   001A9E  5027               	movf	(___flmul@temp+1)^0,w,c
  3878   001AA0  2622               	addwf	___flmul@prod^0,f,c
  3879   001AA2  0E00               	movlw	0
  3880   001AA4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3881   001AA6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3882   001AA8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3883   001AAA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3884   001AAE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3885   001AB2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3886   001AB6  6A1C               	clrf	___flmul@grs^0,c
  3887   001AB8  5013               	movf	___flmul@a^0,w,c
  3888   001ABA  0210               	mulwf	(___flmul@b+1)^0,c
  3889   001ABC  CFF3 F026          	movff	prodl,___flmul@temp
  3890   001AC0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3891   001AC4  5026               	movf	___flmul@temp^0,w,c
  3892   001AC6  261C               	addwf	___flmul@grs^0,f,c
  3893   001AC8  5027               	movf	(___flmul@temp+1)^0,w,c
  3894   001ACA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3895   001ACC  0E00               	movlw	0
  3896   001ACE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3897   001AD0  0E00               	movlw	0
  3898   001AD2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3899   001AD4  5014               	movf	(___flmul@a+1)^0,w,c
  3900   001AD6  020F               	mulwf	___flmul@b^0,c
  3901   001AD8  CFF3 F026          	movff	prodl,___flmul@temp
  3902   001ADC  CFF4 F027          	movff	prodh,___flmul@temp+1
  3903   001AE0  5026               	movf	___flmul@temp^0,w,c
  3904   001AE2  261C               	addwf	___flmul@grs^0,f,c
  3905   001AE4  5027               	movf	(___flmul@temp+1)^0,w,c
  3906   001AE6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3907   001AE8  0E00               	movlw	0
  3908   001AEA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3909   001AEC  0E00               	movlw	0
  3910   001AEE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3911   001AF0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3912   001AF4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3913   001AF8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3914   001AFC  6A1C               	clrf	___flmul@grs^0,c
  3915   001AFE  5013               	movf	___flmul@a^0,w,c
  3916   001B00  020F               	mulwf	___flmul@b^0,c
  3917   001B02  CFF3 F026          	movff	prodl,___flmul@temp
  3918   001B06  CFF4 F027          	movff	prodh,___flmul@temp+1
  3919   001B0A  5026               	movf	___flmul@temp^0,w,c
  3920   001B0C  261C               	addwf	___flmul@grs^0,f,c
  3921   001B0E  5027               	movf	(___flmul@temp+1)^0,w,c
  3922   001B10  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3923   001B12  0E00               	movlw	0
  3924   001B14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3925   001B16  0E00               	movlw	0
  3926   001B18  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3927   001B1A  5015               	movf	(___flmul@a+2)^0,w,c
  3928   001B1C  0210               	mulwf	(___flmul@b+1)^0,c
  3929   001B1E  CFF3 F026          	movff	prodl,___flmul@temp
  3930   001B22  CFF4 F027          	movff	prodh,___flmul@temp+1
  3931   001B26  5026               	movf	___flmul@temp^0,w,c
  3932   001B28  2622               	addwf	___flmul@prod^0,f,c
  3933   001B2A  5027               	movf	(___flmul@temp+1)^0,w,c
  3934   001B2C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3935   001B2E  0E00               	movlw	0
  3936   001B30  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3937   001B32  0E00               	movlw	0
  3938   001B34  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3939   001B36  5014               	movf	(___flmul@a+1)^0,w,c
  3940   001B38  0211               	mulwf	(___flmul@b+2)^0,c
  3941   001B3A  CFF3 F026          	movff	prodl,___flmul@temp
  3942   001B3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3943   001B42  5026               	movf	___flmul@temp^0,w,c
  3944   001B44  2622               	addwf	___flmul@prod^0,f,c
  3945   001B46  5027               	movf	(___flmul@temp+1)^0,w,c
  3946   001B48  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3947   001B4A  0E00               	movlw	0
  3948   001B4C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3949   001B4E  0E00               	movlw	0
  3950   001B50  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3951   001B52  5015               	movf	(___flmul@a+2)^0,w,c
  3952   001B54  0211               	mulwf	(___flmul@b+2)^0,c
  3953   001B56  CFF3 F026          	movff	prodl,___flmul@temp
  3954   001B5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3955   001B5E  5026               	movf	___flmul@temp^0,w,c
  3956   001B60  6E17               	movwf	??___flmul^0,c
  3957   001B62  5027               	movf	(___flmul@temp+1)^0,w,c
  3958   001B64  6E18               	movwf	(??___flmul+1)^0,c
  3959   001B66  6A19               	clrf	(??___flmul+2)^0,c
  3960   001B68  6A1A               	clrf	(??___flmul+3)^0,c
  3961   001B6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3962   001B6E  C018  F019         	movff	??___flmul+1,??___flmul+2
  3963   001B72  C017  F018         	movff	??___flmul,??___flmul+1
  3964   001B76  6A17               	clrf	??___flmul^0,c
  3965   001B78  5017               	movf	??___flmul^0,w,c
  3966   001B7A  2622               	addwf	___flmul@prod^0,f,c
  3967   001B7C  5018               	movf	(??___flmul+1)^0,w,c
  3968   001B7E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3969   001B80  5019               	movf	(??___flmul+2)^0,w,c
  3970   001B82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3971   001B84  501A               	movf	(??___flmul+3)^0,w,c
  3972   001B86  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3973   001B88  C01C  F017         	movff	___flmul@grs,??___flmul
  3974   001B8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3975   001B90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3976   001B94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3977   001B98  0E19               	movlw	25
  3978   001B9A  EFD4  F00D         	goto	u2770
  3979   001B9E                     u2775:
  3980   001B9E  90D8               	bcf	status,0,c
  3981   001BA0  321A               	rrcf	(??___flmul+3)^0,f,c
  3982   001BA2  3219               	rrcf	(??___flmul+2)^0,f,c
  3983   001BA4  3218               	rrcf	(??___flmul+1)^0,f,c
  3984   001BA6  3217               	rrcf	??___flmul^0,f,c
  3985   001BA8                     u2770:
  3986   001BA8  2EE8               	decfsz	wreg,f,c
  3987   001BAA  EFCF  F00D         	goto	u2775
  3988   001BAE  5017               	movf	??___flmul^0,w,c
  3989   001BB0  2622               	addwf	___flmul@prod^0,f,c
  3990   001BB2  5018               	movf	(??___flmul+1)^0,w,c
  3991   001BB4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3992   001BB6  5019               	movf	(??___flmul+2)^0,w,c
  3993   001BB8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3994   001BBA  501A               	movf	(??___flmul+3)^0,w,c
  3995   001BBC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3996   001BBE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3997   001BC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3998   001BC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3999   001BCA  6A1C               	clrf	___flmul@grs^0,c
  4000   001BCC  5020               	movf	___flmul@aexp^0,w,c
  4001   001BCE  C021  F017         	movff	___flmul@bexp,??___flmul
  4002   001BD2  6A18               	clrf	(??___flmul+1)^0,c
  4003   001BD4  2617               	addwf	??___flmul^0,f,c
  4004   001BD6  0E00               	movlw	0
  4005   001BD8  2218               	addwfc	(??___flmul+1)^0,f,c
  4006   001BDA  0E82               	movlw	130
  4007   001BDC  2417               	addwf	??___flmul^0,w,c
  4008   001BDE  6E26               	movwf	___flmul@temp^0,c
  4009   001BE0  0EFF               	movlw	255
  4010   001BE2  2018               	addwfc	(??___flmul+1)^0,w,c
  4011   001BE4  6E27               	movwf	(___flmul@temp+1)^0,c
  4012   001BE6  EF0A  F00E         	goto	l3702
  4013   001BEA                     l3696:
  4014   001BEA  90D8               	bcf	status,0,c
  4015   001BEC  3622               	rlcf	___flmul@prod^0,f,c
  4016   001BEE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4017   001BF0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4018   001BF2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4019   001BF4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4020   001BF6  EFFF  F00D         	goto	u2781
  4021   001BFA  EF01  F00E         	goto	u2780
  4022   001BFE                     u2781:
  4023   001BFE  EF02  F00E         	goto	l1372
  4024   001C02                     u2780:
  4025   001C02  8022               	bsf	___flmul@prod^0,0,c
  4026   001C04                     l1372:
  4027   001C04  90D8               	bcf	status,0,c
  4028   001C06  361C               	rlcf	___flmul@grs^0,f,c
  4029   001C08  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4030   001C0A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4031   001C0C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4032   001C0E  0626               	decf	___flmul@temp^0,f,c
  4033   001C10  A0D8               	btfss	status,0,c
  4034   001C12  0627               	decf	(___flmul@temp+1)^0,f,c
  4035   001C14                     l3702:
  4036   001C14  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4037   001C16  EF0F  F00E         	goto	u2791
  4038   001C1A  EF11  F00E         	goto	u2790
  4039   001C1E                     u2791:
  4040   001C1E  EFF5  F00D         	goto	l3696
  4041   001C22                     u2790:
  4042   001C22  0E00               	movlw	0
  4043   001C24  6E20               	movwf	___flmul@aexp^0,c
  4044   001C26  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4045   001C28  EF18  F00E         	goto	u2801
  4046   001C2C  EF1A  F00E         	goto	u2800
  4047   001C30                     u2801:
  4048   001C30  EF3E  F00E         	goto	l1374
  4049   001C34                     u2800:
  4050   001C34  0EFF               	movlw	255
  4051   001C36  141C               	andwf	___flmul@grs^0,w,c
  4052   001C38  6E17               	movwf	??___flmul^0,c
  4053   001C3A  0EFF               	movlw	255
  4054   001C3C  141D               	andwf	(___flmul@grs+1)^0,w,c
  4055   001C3E  6E18               	movwf	(??___flmul+1)^0,c
  4056   001C40  0EFF               	movlw	255
  4057   001C42  141E               	andwf	(___flmul@grs+2)^0,w,c
  4058   001C44  6E19               	movwf	(??___flmul+2)^0,c
  4059   001C46  0E7F               	movlw	127
  4060   001C48  141F               	andwf	(___flmul@grs+3)^0,w,c
  4061   001C4A  6E1A               	movwf	(??___flmul+3)^0,c
  4062   001C4C  5017               	movf	??___flmul^0,w,c
  4063   001C4E  1018               	iorwf	(??___flmul+1)^0,w,c
  4064   001C50  1019               	iorwf	(??___flmul+2)^0,w,c
  4065   001C52  101A               	iorwf	(??___flmul+3)^0,w,c
  4066   001C54  B4D8               	btfsc	status,2,c
  4067   001C56  EF2F  F00E         	goto	u2811
  4068   001C5A  EF31  F00E         	goto	u2810
  4069   001C5E                     u2811:
  4070   001C5E  EF35  F00E         	goto	l1375
  4071   001C62                     u2810:
  4072   001C62                     l3710:
  4073   001C62  0E01               	movlw	1
  4074   001C64  6E20               	movwf	___flmul@aexp^0,c
  4075   001C66  EF3E  F00E         	goto	l1374
  4076   001C6A                     l1375:
  4077   001C6A  A022               	btfss	___flmul@prod^0,0,c
  4078   001C6C  EF3A  F00E         	goto	u2821
  4079   001C70  EF3C  F00E         	goto	u2820
  4080   001C74                     u2821:
  4081   001C74  EF3E  F00E         	goto	l1374
  4082   001C78                     u2820:
  4083   001C78  EF31  F00E         	goto	l3710
  4084   001C7C                     l1374:
  4085   001C7C  5020               	movf	___flmul@aexp^0,w,c
  4086   001C7E  B4D8               	btfsc	status,2,c
  4087   001C80  EF44  F00E         	goto	u2831
  4088   001C84  EF46  F00E         	goto	u2830
  4089   001C88                     u2831:
  4090   001C88  EF6A  F00E         	goto	l3722
  4091   001C8C                     u2830:
  4092   001C8C  0E01               	movlw	1
  4093   001C8E  2622               	addwf	___flmul@prod^0,f,c
  4094   001C90  0E00               	movlw	0
  4095   001C92  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4096   001C94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4097   001C96  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4098   001C98  A025               	btfss	(___flmul@prod+3)^0,0,c
  4099   001C9A  EF51  F00E         	goto	u2841
  4100   001C9E  EF53  F00E         	goto	u2840
  4101   001CA2                     u2841:
  4102   001CA2  EF6A  F00E         	goto	l3722
  4103   001CA6                     u2840:
  4104   001CA6  C022  F017         	movff	___flmul@prod,??___flmul
  4105   001CAA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4106   001CAE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4107   001CB2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4108   001CB6  341A               	rlcf	(??___flmul+3)^0,w,c
  4109   001CB8  321A               	rrcf	(??___flmul+3)^0,f,c
  4110   001CBA  3219               	rrcf	(??___flmul+2)^0,f,c
  4111   001CBC  3218               	rrcf	(??___flmul+1)^0,f,c
  4112   001CBE  3217               	rrcf	??___flmul^0,f,c
  4113   001CC0  C017  F022         	movff	??___flmul,___flmul@prod
  4114   001CC4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4115   001CC8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4116   001CCC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4117   001CD0  4A26               	infsnz	___flmul@temp^0,f,c
  4118   001CD2  2A27               	incf	(___flmul@temp+1)^0,f,c
  4119   001CD4                     l3722:
  4120   001CD4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4121   001CD6  EF75  F00E         	goto	u2851
  4122   001CDA  5027               	movf	(___flmul@temp+1)^0,w,c
  4123   001CDC  E108               	bnz	u2850
  4124   001CDE  2826               	incf	___flmul@temp^0,w,c
  4125   001CE0  A0D8               	btfss	status,0,c
  4126   001CE2  EF75  F00E         	goto	u2851
  4127   001CE6  EF77  F00E         	goto	u2850
  4128   001CEA                     u2851:
  4129   001CEA  EF81  F00E         	goto	l3726
  4130   001CEE                     u2850:
  4131   001CEE  0E00               	movlw	0
  4132   001CF0  6E22               	movwf	___flmul@prod^0,c
  4133   001CF2  0E00               	movlw	0
  4134   001CF4  6E23               	movwf	(___flmul@prod+1)^0,c
  4135   001CF6  0E80               	movlw	128
  4136   001CF8  6E24               	movwf	(___flmul@prod+2)^0,c
  4137   001CFA  0E7F               	movlw	127
  4138   001CFC  6E25               	movwf	(___flmul@prod+3)^0,c
  4139   001CFE  EFAF  F00E         	goto	l3738
  4140   001D02                     l3726:
  4141   001D02  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4142   001D04  EF8E  F00E         	goto	u2860
  4143   001D08  5027               	movf	(___flmul@temp+1)^0,w,c
  4144   001D0A  E106               	bnz	u2861
  4145   001D0C  0426               	decf	___flmul@temp^0,w,c
  4146   001D0E  B0D8               	btfsc	status,0,c
  4147   001D10  EF8C  F00E         	goto	u2861
  4148   001D14  EF8E  F00E         	goto	u2860
  4149   001D18                     u2861:
  4150   001D18  EF9A  F00E         	goto	l1382
  4151   001D1C                     u2860:
  4152   001D1C  0E00               	movlw	0
  4153   001D1E  6E22               	movwf	___flmul@prod^0,c
  4154   001D20  0E00               	movlw	0
  4155   001D22  6E23               	movwf	(___flmul@prod+1)^0,c
  4156   001D24  0E00               	movlw	0
  4157   001D26  6E24               	movwf	(___flmul@prod+2)^0,c
  4158   001D28  0E00               	movlw	0
  4159   001D2A  6E25               	movwf	(___flmul@prod+3)^0,c
  4160   001D2C  0E00               	movlw	0
  4161   001D2E  6E1B               	movwf	___flmul@sign^0,c
  4162   001D30  EFAF  F00E         	goto	l3738
  4163   001D34                     l1382:
  4164   001D34  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4165   001D38  0EFF               	movlw	255
  4166   001D3A  1622               	andwf	___flmul@prod^0,f,c
  4167   001D3C  0EFF               	movlw	255
  4168   001D3E  1623               	andwf	(___flmul@prod+1)^0,f,c
  4169   001D40  0E7F               	movlw	127
  4170   001D42  1624               	andwf	(___flmul@prod+2)^0,f,c
  4171   001D44  0E00               	movlw	0
  4172   001D46  1625               	andwf	(___flmul@prod+3)^0,f,c
  4173   001D48  A021               	btfss	___flmul@bexp^0,0,c
  4174   001D4A  EFA9  F00E         	goto	u2871
  4175   001D4E  EFAB  F00E         	goto	u2870
  4176   001D52                     u2871:
  4177   001D52  EFAC  F00E         	goto	l3736
  4178   001D56                     u2870:
  4179   001D56  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4180   001D58                     l3736:
  4181   001D58  90D8               	bcf	status,0,c
  4182   001D5A  3021               	rrcf	___flmul@bexp^0,w,c
  4183   001D5C  6E25               	movwf	(___flmul@prod+3)^0,c
  4184   001D5E                     l3738:
  4185   001D5E  501B               	movf	___flmul@sign^0,w,c
  4186   001D60  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4187   001D62  C022  F00F         	movff	___flmul@prod,?___flmul
  4188   001D66  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4189   001D6A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4190   001D6E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4191   001D72                     l1369:
  4192   001D72  0012               	return		;funcret
  4193   001D74                     __end_of___flmul:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _initUSART4 *****************
  4197 ;; Defined at:
  4198 ;;		line 8 in file "serial.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text21
  4227   00330E                     __ptext21:
  4228                           	callstack 0
  4229   00330E                     _initUSART4:
  4230                           	callstack 29
  4231   00330E                     
  4232                           ;serial.c: 9:     RC0PPS = 0x12;
  4233   00330E  0E12               	movlw	18
  4234   003310  010E               	movlb	14	; () banked
  4235   003312  6F62               	movwf	98,b	;volatile
  4236                           
  4237                           ;serial.c: 10:     RX4PPS = 0x11;
  4238   003314  0E11               	movlw	17
  4239   003316  6F15               	movwf	21,b	;volatile
  4240   003318                     
  4241                           ; BSR set to: 14
  4242                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4243   003318  97E9               	bcf	233,3,b	;volatile
  4244   00331A                     
  4245                           ; BSR set to: 14
  4246                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4247   00331A  95E8               	bcf	232,2,b	;volatile
  4248                           
  4249                           ;serial.c: 14:     SP4BRGL = 51;
  4250   00331C  0E33               	movlw	51
  4251   00331E  6FE5               	movwf	229,b	;volatile
  4252                           
  4253                           ;serial.c: 15:     SP4BRGH = 0;
  4254   003320  0E00               	movlw	0
  4255   003322  6FE6               	movwf	230,b	;volatile
  4256   003324                     
  4257                           ; BSR set to: 14
  4258                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4259   003324  89E7               	bsf	231,4,b	;volatile
  4260   003326                     
  4261                           ; BSR set to: 14
  4262                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4263   003326  8BE8               	bsf	232,5,b	;volatile
  4264   003328                     
  4265                           ; BSR set to: 14
  4266                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4267   003328  8FE7               	bsf	231,7,b	;volatile
  4268   00332A                     
  4269                           ; BSR set to: 14
  4270   00332A  0012               	return		;funcret
  4271   00332C                     __end_of_initUSART4:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _initDCmotorsPWM *****************
  4275 ;; Defined at:
  4276 ;;		line 7 in file "dc_motor.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;Total ram usage:        2 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text22
  4305   002B06                     __ptext22:
  4306                           	callstack 0
  4307   002B06                     _initDCmotorsPWM:
  4308                           	callstack 29
  4309   002B06                     
  4310                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  4311   002B06  9485               	bcf	133,2,c	;volatile
  4312                           
  4313                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  4314   002B08  9885               	bcf	133,4,c	;volatile
  4315                           
  4316                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  4317   002B0A  9E83               	bcf	131,7,c	;volatile
  4318                           
  4319                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  4320   002B0C  9C87               	bcf	135,6,c	;volatile
  4321                           
  4322                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  4323   002B0E  947D               	bcf	125,2,c	;volatile
  4324                           
  4325                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  4326   002B10  987D               	bcf	125,4,c	;volatile
  4327                           
  4328                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  4329   002B12  9E7B               	bcf	123,7,c	;volatile
  4330                           
  4331                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  4332   002B14  9C7F               	bcf	127,6,c	;volatile
  4333   002B16                     
  4334                           ;dc_motor.c: 19:     RE2PPS=0x05;
  4335   002B16  0E05               	movlw	5
  4336   002B18  010E               	movlb	14	; () banked
  4337   002B1A  6F74               	movwf	116,b	;volatile
  4338                           
  4339                           ;dc_motor.c: 20:     RE4PPS=0x06;
  4340   002B1C  0E06               	movlw	6
  4341   002B1E  6F76               	movwf	118,b	;volatile
  4342                           
  4343                           ;dc_motor.c: 21:     RC7PPS=0x07;
  4344   002B20  0E07               	movlw	7
  4345   002B22  6F69               	movwf	105,b	;volatile
  4346                           
  4347                           ;dc_motor.c: 22:     RG6PPS=0x08;
  4348   002B24  0E08               	movlw	8
  4349   002B26  6F88               	movwf	136,b	;volatile
  4350                           
  4351                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  4352   002B28  50BD               	movf	189,w,c	;volatile
  4353   002B2A  0B8F               	andlw	-113
  4354   002B2C  0940               	iorlw	64
  4355   002B2E  6EBD               	movwf	189,c	;volatile
  4356                           
  4357                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  4358   002B30  0EE0               	movlw	-32
  4359   002B32  16BE               	andwf	190,f,c	;volatile
  4360                           
  4361                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  4362   002B34  50BF               	movf	191,w,c	;volatile
  4363   002B36  0BF0               	andlw	-16
  4364   002B38  0901               	iorlw	1
  4365   002B3A  6EBF               	movwf	191,c	;volatile
  4366   002B3C                     
  4367                           ; BSR set to: 14
  4368                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  4369   002B3C  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4370   002B40                     
  4371                           ; BSR set to: 14
  4372                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  4373   002B40  8EBD               	bsf	189,7,c	;volatile
  4374                           
  4375                           ;dc_motor.c: 36:         CCPR1H=0;
  4376   002B42  0E00               	movlw	0
  4377   002B44  6EAA               	movwf	170,c	;volatile
  4378                           
  4379                           ;dc_motor.c: 37:         CCPR2H=0;
  4380   002B46  0E00               	movlw	0
  4381   002B48  6EA6               	movwf	166,c	;volatile
  4382                           
  4383                           ;dc_motor.c: 38:         CCPR3H=0;
  4384   002B4A  0E00               	movlw	0
  4385   002B4C  010F               	movlb	15	; () banked
  4386   002B4E  6F25               	movwf	37,b	;volatile
  4387                           
  4388                           ;dc_motor.c: 39:         CCPR4H=0;
  4389   002B50  0E00               	movlw	0
  4390   002B52  6F21               	movwf	33,b	;volatile
  4391                           
  4392                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  4393   002B54  0EFC               	movlw	-4
  4394   002B56  16AD               	andwf	173,f,c	;volatile
  4395                           
  4396                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  4397   002B58  0EF3               	movlw	-13
  4398   002B5A  16AD               	andwf	173,f,c	;volatile
  4399                           
  4400                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  4401   002B5C  0ECF               	movlw	-49
  4402   002B5E  16AD               	andwf	173,f,c	;volatile
  4403                           
  4404                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  4405   002B60  0E3F               	movlw	-193
  4406   002B62  16AD               	andwf	173,f,c	;volatile
  4407   002B64                     
  4408                           ; BSR set to: 15
  4409                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  4410   002B64  88AB               	bsf	171,4,c	;volatile
  4411                           
  4412                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  4413   002B66  50AB               	movf	171,w,c	;volatile
  4414   002B68  0BF0               	andlw	-16
  4415   002B6A  090C               	iorlw	12
  4416   002B6C  6EAB               	movwf	171,c	;volatile
  4417   002B6E                     
  4418                           ; BSR set to: 15
  4419                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  4420   002B6E  8EAB               	bsf	171,7,c	;volatile
  4421   002B70                     
  4422                           ; BSR set to: 15
  4423                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  4424   002B70  88A7               	bsf	167,4,c	;volatile
  4425                           
  4426                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  4427   002B72  50A7               	movf	167,w,c	;volatile
  4428   002B74  0BF0               	andlw	-16
  4429   002B76  090C               	iorlw	12
  4430   002B78  6EA7               	movwf	167,c	;volatile
  4431   002B7A                     
  4432                           ; BSR set to: 15
  4433                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  4434   002B7A  8EA7               	bsf	167,7,c	;volatile
  4435   002B7C                     
  4436                           ; BSR set to: 15
  4437                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  4438   002B7C  8926               	bsf	38,4,b	;volatile
  4439                           
  4440                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  4441   002B7E  5126               	movf	38,w,b	;volatile
  4442   002B80  0BF0               	andlw	-16
  4443   002B82  090C               	iorlw	12
  4444   002B84  6F26               	movwf	38,b	;volatile
  4445   002B86                     
  4446                           ; BSR set to: 15
  4447                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  4448   002B86  8F26               	bsf	38,7,b	;volatile
  4449   002B88                     
  4450                           ; BSR set to: 15
  4451                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  4452   002B88  8922               	bsf	34,4,b	;volatile
  4453                           
  4454                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  4455   002B8A  5122               	movf	34,w,b	;volatile
  4456   002B8C  0BF0               	andlw	-16
  4457   002B8E  090C               	iorlw	12
  4458   002B90  6F22               	movwf	34,b	;volatile
  4459   002B92                     
  4460                           ; BSR set to: 15
  4461                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  4462   002B92  8F22               	bsf	34,7,b	;volatile
  4463   002B94                     
  4464                           ; BSR set to: 15
  4465   002B94  0012               	return		;funcret
  4466   002B96                     __end_of_initDCmotorsPWM:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _convert_HSV *****************
  4470 ;; Defined at:
  4471 ;;		line 209 in file "color.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  4474 ;;		 -> main@HSV_colour(6), 
  4475 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  4476 ;;		 -> main@RGBC_colour(8), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  temp            4   51[COMRAM] unsigned long 
  4479 ;;  temp            4   47[COMRAM] unsigned long 
  4480 ;;  temp            4   43[COMRAM] unsigned long 
  4481 ;;  temp            4   39[COMRAM] unsigned long 
  4482 ;;  temp            4   55[COMRAM] unsigned long 
  4483 ;;  temp            4   35[COMRAM] unsigned long 
  4484 ;;  temp            4   31[COMRAM] unsigned long 
  4485 ;;  C               2   63[COMRAM] unsigned int 
  4486 ;;  M               2   61[COMRAM] unsigned int 
  4487 ;;  hue_scale       2   59[COMRAM] unsigned int 
  4488 ;;  hue             2   29[COMRAM] unsigned int 
  4489 ;;  sat             2   27[COMRAM] unsigned int 
  4490 ;;  m               2   25[COMRAM] unsigned int 
  4491 ;;  sat_scale       2   23[COMRAM] unsigned int 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;Total ram usage:       52 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 2
  4508 ;; This function calls:
  4509 ;;		___lldiv
  4510 ;;		___lmul
  4511 ;;		_max_RGB
  4512 ;;		_min_RGB
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;;		_forward_navigation
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text23
  4520   000E1A                     __ptext23:
  4521                           	callstack 0
  4522   000E1A                     _convert_HSV:
  4523                           	callstack 28
  4524   000E1A                     
  4525                           ;color.c: 209: void convert_HSV(struct HSV_val *p1,struct RGBC_val *p2);color.c: 210: {;
      +                          color.c: 211:     unsigned int hue = 0;
  4526   000E1A  0E00               	movlw	0
  4527   000E1C  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  4528   000E1E  0E00               	movlw	0
  4529   000E20  6E1E               	movwf	convert_HSV@hue^0,c
  4530                           
  4531                           ;color.c: 213:     unsigned int hue_scale = 60;
  4532   000E22  0E00               	movlw	0
  4533   000E24  6E3D               	movwf	(convert_HSV@hue_scale+1)^0,c
  4534   000E26  0E3C               	movlw	60
  4535   000E28  6E3C               	movwf	convert_HSV@hue_scale^0,c
  4536                           
  4537                           ;color.c: 214:     unsigned int sat_scale = 100;
  4538   000E2A  0E00               	movlw	0
  4539   000E2C  6E19               	movwf	(convert_HSV@sat_scale+1)^0,c
  4540   000E2E  0E64               	movlw	100
  4541   000E30  6E18               	movwf	convert_HSV@sat_scale^0,c
  4542   000E32                     
  4543                           ;color.c: 216:     unsigned int M = max_RGB(p2);
  4544   000E32  C00F  F001         	movff	convert_HSV@p2,max_RGB@p
  4545   000E36  EC09  F016         	call	_max_RGB	;wreg free
  4546   000E3A  C001  F03E         	movff	?_max_RGB,convert_HSV@M
  4547   000E3E  C002  F03F         	movff	?_max_RGB+1,convert_HSV@M+1
  4548   000E42                     
  4549                           ;color.c: 217:     unsigned int m = min_RGB(p2);
  4550   000E42  C00F  F001         	movff	convert_HSV@p2,min_RGB@p
  4551   000E46  ECCB  F015         	call	_min_RGB	;wreg free
  4552   000E4A  C001  F01A         	movff	?_min_RGB,convert_HSV@m
  4553   000E4E  C002  F01B         	movff	?_min_RGB+1,convert_HSV@m+1
  4554   000E52                     
  4555                           ;color.c: 218:     unsigned int C = M - m;
  4556   000E52  501A               	movf	convert_HSV@m^0,w,c
  4557   000E54  5C3E               	subwf	convert_HSV@M^0,w,c
  4558   000E56  6E40               	movwf	convert_HSV@C^0,c
  4559   000E58  501B               	movf	(convert_HSV@m+1)^0,w,c
  4560   000E5A  583F               	subwfb	(convert_HSV@M+1)^0,w,c
  4561   000E5C  6E41               	movwf	(convert_HSV@C+1)^0,c
  4562   000E5E                     
  4563                           ;color.c: 220:     if (C == 0) {
  4564   000E5E  5040               	movf	convert_HSV@C^0,w,c
  4565   000E60  1041               	iorwf	(convert_HSV@C+1)^0,w,c
  4566   000E62  A4D8               	btfss	status,2,c
  4567   000E64  EF36  F007         	goto	u3201
  4568   000E68  EF38  F007         	goto	u3200
  4569   000E6C                     u3201:
  4570   000E6C  EF3E  F007         	goto	l3898
  4571   000E70                     u3200:
  4572   000E70                     
  4573                           ;color.c: 221:         hue = 0;
  4574   000E70  0E00               	movlw	0
  4575   000E72  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  4576   000E74  0E00               	movlw	0
  4577   000E76  6E1E               	movwf	convert_HSV@hue^0,c
  4578                           
  4579                           ;color.c: 222:     } else {
  4580   000E78  EF0E  F00A         	goto	l3982
  4581   000E7C                     l3898:
  4582                           
  4583                           ;color.c: 232:         if (M == p2->R) {
  4584   000E7C  500F               	movf	convert_HSV@p2^0,w,c
  4585   000E7E  6ED9               	movwf	fsr2l,c
  4586   000E80  6ADA               	clrf	fsr2h,c
  4587   000E82  503E               	movf	convert_HSV@M^0,w,c
  4588   000E84  18DE               	xorwf	postinc2,w,c
  4589   000E86  E107               	bnz	u3211
  4590   000E88  503F               	movf	(convert_HSV@M+1)^0,w,c
  4591   000E8A  18DE               	xorwf	postinc2,w,c
  4592   000E8C  A4D8               	btfss	status,2,c
  4593   000E8E  EF4B  F007         	goto	u3211
  4594   000E92  EF4D  F007         	goto	u3210
  4595   000E96                     u3211:
  4596   000E96  EF3A  F008         	goto	l3926
  4597   000E9A                     u3210:
  4598   000E9A                     
  4599                           ;color.c: 233:             if (p2->G >= p2->B) {
  4600   000E9A  500F               	movf	convert_HSV@p2^0,w,c
  4601   000E9C  6ED9               	movwf	fsr2l,c
  4602   000E9E  6ADA               	clrf	fsr2h,c
  4603   000EA0  0E04               	movlw	4
  4604   000EA2  26D9               	addwf	fsr2l,f,c
  4605   000EA4  500F               	movf	convert_HSV@p2^0,w,c
  4606   000EA6  6EE1               	movwf	fsr1l,c
  4607   000EA8  6AE2               	clrf	fsr1h,c
  4608   000EAA  0E02               	movlw	2
  4609   000EAC  26E1               	addwf	fsr1l,f,c
  4610   000EAE  50DE               	movf	postinc2,w,c
  4611   000EB0  5CE6               	subwf	postinc1,w,c
  4612   000EB2  50DE               	movf	postinc2,w,c
  4613   000EB4  58E6               	subwfb	postinc1,w,c
  4614   000EB6  A0D8               	btfss	status,0,c
  4615   000EB8  EF60  F007         	goto	u3221
  4616   000EBC  EF62  F007         	goto	u3220
  4617   000EC0                     u3221:
  4618   000EC0  EFC2  F007         	goto	l3914
  4619   000EC4                     u3220:
  4620   000EC4                     
  4621                           ;color.c: 237:                 temp *= 0;
  4622   000EC4  0E00               	movlw	0
  4623   000EC6  6E24               	movwf	convert_HSV@temp^0,c
  4624   000EC8  0E00               	movlw	0
  4625   000ECA  6E25               	movwf	(convert_HSV@temp+1)^0,c
  4626   000ECC  0E00               	movlw	0
  4627   000ECE  6E26               	movwf	(convert_HSV@temp+2)^0,c
  4628   000ED0  0E00               	movlw	0
  4629   000ED2  6E27               	movwf	(convert_HSV@temp+3)^0,c
  4630   000ED4                     
  4631                           ;color.c: 238:                 temp += (unsigned long)(p2->G - p2->B);
  4632   000ED4  500F               	movf	convert_HSV@p2^0,w,c
  4633   000ED6  6ED9               	movwf	fsr2l,c
  4634   000ED8  6ADA               	clrf	fsr2h,c
  4635   000EDA  0E04               	movlw	4
  4636   000EDC  26D9               	addwf	fsr2l,f,c
  4637   000EDE  CFDE F010          	movff	postinc2,??_convert_HSV
  4638   000EE2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4639   000EE6  500F               	movf	convert_HSV@p2^0,w,c
  4640   000EE8  6ED9               	movwf	fsr2l,c
  4641   000EEA  6ADA               	clrf	fsr2h,c
  4642   000EEC  0E02               	movlw	2
  4643   000EEE  26D9               	addwf	fsr2l,f,c
  4644   000EF0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4645   000EF4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4646   000EF8  5010               	movf	??_convert_HSV^0,w,c
  4647   000EFA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4648   000EFC  6E14               	movwf	(??_convert_HSV+4)^0,c
  4649   000EFE  5011               	movf	(??_convert_HSV+1)^0,w,c
  4650   000F00  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4651   000F02  6E15               	movwf	(??_convert_HSV+5)^0,c
  4652   000F04  5014               	movf	(??_convert_HSV+4)^0,w,c
  4653   000F06  2624               	addwf	convert_HSV@temp^0,f,c
  4654   000F08  5015               	movf	(??_convert_HSV+5)^0,w,c
  4655   000F0A  2225               	addwfc	(convert_HSV@temp+1)^0,f,c
  4656   000F0C  0E00               	movlw	0
  4657   000F0E  2226               	addwfc	(convert_HSV@temp+2)^0,f,c
  4658   000F10  0E00               	movlw	0
  4659   000F12  2227               	addwfc	(convert_HSV@temp+3)^0,f,c
  4660   000F14                     
  4661                           ;color.c: 239:                 temp *= (unsigned long)hue_scale;
  4662   000F14  C024  F001         	movff	convert_HSV@temp,___lmul@multiplier
  4663   000F18  C025  F002         	movff	convert_HSV@temp+1,___lmul@multiplier+1
  4664   000F1C  C026  F003         	movff	convert_HSV@temp+2,___lmul@multiplier+2
  4665   000F20  C027  F004         	movff	convert_HSV@temp+3,___lmul@multiplier+3
  4666   000F24  0E3C               	movlw	60
  4667   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  4668   000F28  0E00               	movlw	0
  4669   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4670   000F2C  0E00               	movlw	0
  4671   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4672   000F30  0E00               	movlw	0
  4673   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4674   000F34  ECB6  F016         	call	___lmul	;wreg free
  4675   000F38  C001  F024         	movff	?___lmul,convert_HSV@temp
  4676   000F3C  C002  F025         	movff	?___lmul+1,convert_HSV@temp+1
  4677   000F40  C003  F026         	movff	?___lmul+2,convert_HSV@temp+2
  4678   000F44  C004  F027         	movff	?___lmul+3,convert_HSV@temp+3
  4679   000F48                     
  4680                           ;color.c: 240:                 temp /= (unsigned long)C;
  4681   000F48  C024  F001         	movff	convert_HSV@temp,___lldiv@dividend
  4682   000F4C  C025  F002         	movff	convert_HSV@temp+1,___lldiv@dividend+1
  4683   000F50  C026  F003         	movff	convert_HSV@temp+2,___lldiv@dividend+2
  4684   000F54  C027  F004         	movff	convert_HSV@temp+3,___lldiv@dividend+3
  4685   000F58  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4686   000F5C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4687   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4688   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4689   000F64  EC31  F015         	call	___lldiv	;wreg free
  4690   000F68  C001  F024         	movff	?___lldiv,convert_HSV@temp
  4691   000F6C  C002  F025         	movff	?___lldiv+1,convert_HSV@temp+1
  4692   000F70  C003  F026         	movff	?___lldiv+2,convert_HSV@temp+2
  4693   000F74  C004  F027         	movff	?___lldiv+3,convert_HSV@temp+3
  4694   000F78                     
  4695                           ;color.c: 241:                 hue = (unsigned int)temp;
  4696   000F78  C024  F01E         	movff	convert_HSV@temp,convert_HSV@hue
  4697   000F7C  C025  F01F         	movff	convert_HSV@temp+1,convert_HSV@hue+1
  4698                           
  4699                           ;color.c: 242:             } else {
  4700   000F80  EF3A  F008         	goto	l3926
  4701   000F84                     l3914:
  4702                           
  4703                           ;color.c: 244:                 unsigned long temp;;color.c: 245:                 temp = 
      +                          (unsigned long)C;
  4704   000F84  C040  F038         	movff	convert_HSV@C,convert_HSV@temp_609
  4705   000F88  C041  F039         	movff	convert_HSV@C+1,convert_HSV@temp_609+1
  4706   000F8C  6A3A               	clrf	(convert_HSV@temp_609+2)^0,c
  4707   000F8E  6A3B               	clrf	(convert_HSV@temp_609+3)^0,c
  4708   000F90                     
  4709                           ;color.c: 246:                 temp *= 6;
  4710   000F90  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  4711   000F94  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  4712   000F98  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  4713   000F9C  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  4714   000FA0  0E06               	movlw	6
  4715   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  4716   000FA4  0E00               	movlw	0
  4717   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4718   000FA8  0E00               	movlw	0
  4719   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4720   000FAC  0E00               	movlw	0
  4721   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4722   000FB0  ECB6  F016         	call	___lmul	;wreg free
  4723   000FB4  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  4724   000FB8  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  4725   000FBC  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  4726   000FC0  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  4727   000FC4                     
  4728                           ;color.c: 247:                 temp -= (unsigned long)(p2->B - p2->G);
  4729   000FC4  500F               	movf	convert_HSV@p2^0,w,c
  4730   000FC6  6ED9               	movwf	fsr2l,c
  4731   000FC8  6ADA               	clrf	fsr2h,c
  4732   000FCA  0E02               	movlw	2
  4733   000FCC  26D9               	addwf	fsr2l,f,c
  4734   000FCE  CFDE F010          	movff	postinc2,??_convert_HSV
  4735   000FD2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4736   000FD6  500F               	movf	convert_HSV@p2^0,w,c
  4737   000FD8  6ED9               	movwf	fsr2l,c
  4738   000FDA  6ADA               	clrf	fsr2h,c
  4739   000FDC  0E04               	movlw	4
  4740   000FDE  26D9               	addwf	fsr2l,f,c
  4741   000FE0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4742   000FE4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4743   000FE8  5010               	movf	??_convert_HSV^0,w,c
  4744   000FEA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4745   000FEC  6E14               	movwf	(??_convert_HSV+4)^0,c
  4746   000FEE  5011               	movf	(??_convert_HSV+1)^0,w,c
  4747   000FF0  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4748   000FF2  6E15               	movwf	(??_convert_HSV+5)^0,c
  4749   000FF4  6A16               	clrf	(??_convert_HSV+6)^0,c
  4750   000FF6  6A17               	clrf	(??_convert_HSV+7)^0,c
  4751   000FF8  5014               	movf	(??_convert_HSV+4)^0,w,c
  4752   000FFA  5E38               	subwf	convert_HSV@temp_609^0,f,c
  4753   000FFC  5015               	movf	(??_convert_HSV+5)^0,w,c
  4754   000FFE  5A39               	subwfb	(convert_HSV@temp_609+1)^0,f,c
  4755   001000  5016               	movf	(??_convert_HSV+6)^0,w,c
  4756   001002  5A3A               	subwfb	(convert_HSV@temp_609+2)^0,f,c
  4757   001004  5017               	movf	(??_convert_HSV+7)^0,w,c
  4758   001006  5A3B               	subwfb	(convert_HSV@temp_609+3)^0,f,c
  4759   001008                     
  4760                           ;color.c: 248:                 temp *= (unsigned long)hue_scale;
  4761   001008  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  4762   00100C  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  4763   001010  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  4764   001014  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  4765   001018  0E3C               	movlw	60
  4766   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  4767   00101C  0E00               	movlw	0
  4768   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4769   001020  0E00               	movlw	0
  4770   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4771   001024  0E00               	movlw	0
  4772   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4773   001028  ECB6  F016         	call	___lmul	;wreg free
  4774   00102C  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  4775   001030  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  4776   001034  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  4777   001038  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  4778   00103C                     
  4779                           ;color.c: 249:                 temp /= (unsigned long)C;
  4780   00103C  C038  F001         	movff	convert_HSV@temp_609,___lldiv@dividend
  4781   001040  C039  F002         	movff	convert_HSV@temp_609+1,___lldiv@dividend+1
  4782   001044  C03A  F003         	movff	convert_HSV@temp_609+2,___lldiv@dividend+2
  4783   001048  C03B  F004         	movff	convert_HSV@temp_609+3,___lldiv@dividend+3
  4784   00104C  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4785   001050  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4786   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4787   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4788   001058  EC31  F015         	call	___lldiv	;wreg free
  4789   00105C  C001  F038         	movff	?___lldiv,convert_HSV@temp_609
  4790   001060  C002  F039         	movff	?___lldiv+1,convert_HSV@temp_609+1
  4791   001064  C003  F03A         	movff	?___lldiv+2,convert_HSV@temp_609+2
  4792   001068  C004  F03B         	movff	?___lldiv+3,convert_HSV@temp_609+3
  4793   00106C                     
  4794                           ;color.c: 250:                 hue = (unsigned int)temp;
  4795   00106C  C038  F01E         	movff	convert_HSV@temp_609,convert_HSV@hue
  4796   001070  C039  F01F         	movff	convert_HSV@temp_609+1,convert_HSV@hue+1
  4797   001074                     l3926:
  4798                           
  4799                           ;color.c: 253:         if (M == p2->G) {
  4800   001074  500F               	movf	convert_HSV@p2^0,w,c
  4801   001076  6ED9               	movwf	fsr2l,c
  4802   001078  6ADA               	clrf	fsr2h,c
  4803   00107A  0E02               	movlw	2
  4804   00107C  26D9               	addwf	fsr2l,f,c
  4805   00107E  503E               	movf	convert_HSV@M^0,w,c
  4806   001080  18DE               	xorwf	postinc2,w,c
  4807   001082  E107               	bnz	u3231
  4808   001084  503F               	movf	(convert_HSV@M+1)^0,w,c
  4809   001086  18DE               	xorwf	postinc2,w,c
  4810   001088  A4D8               	btfss	status,2,c
  4811   00108A  EF49  F008         	goto	u3231
  4812   00108E  EF4B  F008         	goto	u3230
  4813   001092                     u3231:
  4814   001092  EF20  F009         	goto	l3954
  4815   001096                     u3230:
  4816   001096                     
  4817                           ;color.c: 254:             if (p2->B >= p2->R) {
  4818   001096  500F               	movf	convert_HSV@p2^0,w,c
  4819   001098  6ED9               	movwf	fsr2l,c
  4820   00109A  6ADA               	clrf	fsr2h,c
  4821   00109C  500F               	movf	convert_HSV@p2^0,w,c
  4822   00109E  6EE1               	movwf	fsr1l,c
  4823   0010A0  6AE2               	clrf	fsr1h,c
  4824   0010A2  0E04               	movlw	4
  4825   0010A4  26E1               	addwf	fsr1l,f,c
  4826   0010A6  50DE               	movf	postinc2,w,c
  4827   0010A8  5CE6               	subwf	postinc1,w,c
  4828   0010AA  50DE               	movf	postinc2,w,c
  4829   0010AC  58E6               	subwfb	postinc1,w,c
  4830   0010AE  A0D8               	btfss	status,0,c
  4831   0010B0  EF5C  F008         	goto	u3241
  4832   0010B4  EF5E  F008         	goto	u3240
  4833   0010B8                     u3241:
  4834   0010B8  EFBF  F008         	goto	l3942
  4835   0010BC                     u3240:
  4836   0010BC                     
  4837                           ;color.c: 256:                 unsigned long temp;;color.c: 257:                 temp = 
      +                          (unsigned long)C;
  4838   0010BC  C040  F028         	movff	convert_HSV@C,convert_HSV@temp_610
  4839   0010C0  C041  F029         	movff	convert_HSV@C+1,convert_HSV@temp_610+1
  4840   0010C4  6A2A               	clrf	(convert_HSV@temp_610+2)^0,c
  4841   0010C6  6A2B               	clrf	(convert_HSV@temp_610+3)^0,c
  4842   0010C8                     
  4843                           ;color.c: 258:                 temp *= 2;
  4844   0010C8  90D8               	bcf	status,0,c
  4845   0010CA  3628               	rlcf	convert_HSV@temp_610^0,f,c
  4846   0010CC  3629               	rlcf	(convert_HSV@temp_610+1)^0,f,c
  4847   0010CE  362A               	rlcf	(convert_HSV@temp_610+2)^0,f,c
  4848   0010D0  362B               	rlcf	(convert_HSV@temp_610+3)^0,f,c
  4849   0010D2                     
  4850                           ;color.c: 259:                 temp += (unsigned long)(p2->B - p2->R);
  4851   0010D2  500F               	movf	convert_HSV@p2^0,w,c
  4852   0010D4  6ED9               	movwf	fsr2l,c
  4853   0010D6  6ADA               	clrf	fsr2h,c
  4854   0010D8  CFDE F010          	movff	postinc2,??_convert_HSV
  4855   0010DC  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4856   0010E0  500F               	movf	convert_HSV@p2^0,w,c
  4857   0010E2  6ED9               	movwf	fsr2l,c
  4858   0010E4  6ADA               	clrf	fsr2h,c
  4859   0010E6  0E04               	movlw	4
  4860   0010E8  26D9               	addwf	fsr2l,f,c
  4861   0010EA  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4862   0010EE  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4863   0010F2  5010               	movf	??_convert_HSV^0,w,c
  4864   0010F4  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4865   0010F6  6E14               	movwf	(??_convert_HSV+4)^0,c
  4866   0010F8  5011               	movf	(??_convert_HSV+1)^0,w,c
  4867   0010FA  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4868   0010FC  6E15               	movwf	(??_convert_HSV+5)^0,c
  4869   0010FE  5014               	movf	(??_convert_HSV+4)^0,w,c
  4870   001100  2628               	addwf	convert_HSV@temp_610^0,f,c
  4871   001102  5015               	movf	(??_convert_HSV+5)^0,w,c
  4872   001104  2229               	addwfc	(convert_HSV@temp_610+1)^0,f,c
  4873   001106  0E00               	movlw	0
  4874   001108  222A               	addwfc	(convert_HSV@temp_610+2)^0,f,c
  4875   00110A  0E00               	movlw	0
  4876   00110C  222B               	addwfc	(convert_HSV@temp_610+3)^0,f,c
  4877   00110E                     
  4878                           ;color.c: 260:                 temp *= (unsigned long)hue_scale;
  4879   00110E  C028  F001         	movff	convert_HSV@temp_610,___lmul@multiplier
  4880   001112  C029  F002         	movff	convert_HSV@temp_610+1,___lmul@multiplier+1
  4881   001116  C02A  F003         	movff	convert_HSV@temp_610+2,___lmul@multiplier+2
  4882   00111A  C02B  F004         	movff	convert_HSV@temp_610+3,___lmul@multiplier+3
  4883   00111E  0E3C               	movlw	60
  4884   001120  6E05               	movwf	___lmul@multiplicand^0,c
  4885   001122  0E00               	movlw	0
  4886   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4887   001126  0E00               	movlw	0
  4888   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4889   00112A  0E00               	movlw	0
  4890   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4891   00112E  ECB6  F016         	call	___lmul	;wreg free
  4892   001132  C001  F028         	movff	?___lmul,convert_HSV@temp_610
  4893   001136  C002  F029         	movff	?___lmul+1,convert_HSV@temp_610+1
  4894   00113A  C003  F02A         	movff	?___lmul+2,convert_HSV@temp_610+2
  4895   00113E  C004  F02B         	movff	?___lmul+3,convert_HSV@temp_610+3
  4896   001142                     
  4897                           ;color.c: 261:                 temp /= (unsigned long)C;
  4898   001142  C028  F001         	movff	convert_HSV@temp_610,___lldiv@dividend
  4899   001146  C029  F002         	movff	convert_HSV@temp_610+1,___lldiv@dividend+1
  4900   00114A  C02A  F003         	movff	convert_HSV@temp_610+2,___lldiv@dividend+2
  4901   00114E  C02B  F004         	movff	convert_HSV@temp_610+3,___lldiv@dividend+3
  4902   001152  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4903   001156  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4904   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4905   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4906   00115E  EC31  F015         	call	___lldiv	;wreg free
  4907   001162  C001  F028         	movff	?___lldiv,convert_HSV@temp_610
  4908   001166  C002  F029         	movff	?___lldiv+1,convert_HSV@temp_610+1
  4909   00116A  C003  F02A         	movff	?___lldiv+2,convert_HSV@temp_610+2
  4910   00116E  C004  F02B         	movff	?___lldiv+3,convert_HSV@temp_610+3
  4911   001172                     
  4912                           ;color.c: 262:                 hue = (unsigned int)temp;
  4913   001172  C028  F01E         	movff	convert_HSV@temp_610,convert_HSV@hue
  4914   001176  C029  F01F         	movff	convert_HSV@temp_610+1,convert_HSV@hue+1
  4915                           
  4916                           ;color.c: 263:             } else {
  4917   00117A  EF20  F009         	goto	l3954
  4918   00117E                     l3942:
  4919                           
  4920                           ;color.c: 265:                 unsigned long temp;;color.c: 266:                 temp = 
      +                          (unsigned long)C;
  4921   00117E  C040  F02C         	movff	convert_HSV@C,convert_HSV@temp_611
  4922   001182  C041  F02D         	movff	convert_HSV@C+1,convert_HSV@temp_611+1
  4923   001186  6A2E               	clrf	(convert_HSV@temp_611+2)^0,c
  4924   001188  6A2F               	clrf	(convert_HSV@temp_611+3)^0,c
  4925   00118A                     
  4926                           ;color.c: 267:                 temp *= 2;
  4927   00118A  90D8               	bcf	status,0,c
  4928   00118C  362C               	rlcf	convert_HSV@temp_611^0,f,c
  4929   00118E  362D               	rlcf	(convert_HSV@temp_611+1)^0,f,c
  4930   001190  362E               	rlcf	(convert_HSV@temp_611+2)^0,f,c
  4931   001192  362F               	rlcf	(convert_HSV@temp_611+3)^0,f,c
  4932   001194                     
  4933                           ;color.c: 268:                 temp -= (unsigned long)(p2->R - p2->B);
  4934   001194  500F               	movf	convert_HSV@p2^0,w,c
  4935   001196  6ED9               	movwf	fsr2l,c
  4936   001198  6ADA               	clrf	fsr2h,c
  4937   00119A  0E04               	movlw	4
  4938   00119C  26D9               	addwf	fsr2l,f,c
  4939   00119E  CFDE F010          	movff	postinc2,??_convert_HSV
  4940   0011A2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4941   0011A6  500F               	movf	convert_HSV@p2^0,w,c
  4942   0011A8  6ED9               	movwf	fsr2l,c
  4943   0011AA  6ADA               	clrf	fsr2h,c
  4944   0011AC  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4945   0011B0  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4946   0011B4  5010               	movf	??_convert_HSV^0,w,c
  4947   0011B6  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4948   0011B8  6E14               	movwf	(??_convert_HSV+4)^0,c
  4949   0011BA  5011               	movf	(??_convert_HSV+1)^0,w,c
  4950   0011BC  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4951   0011BE  6E15               	movwf	(??_convert_HSV+5)^0,c
  4952   0011C0  6A16               	clrf	(??_convert_HSV+6)^0,c
  4953   0011C2  6A17               	clrf	(??_convert_HSV+7)^0,c
  4954   0011C4  5014               	movf	(??_convert_HSV+4)^0,w,c
  4955   0011C6  5E2C               	subwf	convert_HSV@temp_611^0,f,c
  4956   0011C8  5015               	movf	(??_convert_HSV+5)^0,w,c
  4957   0011CA  5A2D               	subwfb	(convert_HSV@temp_611+1)^0,f,c
  4958   0011CC  5016               	movf	(??_convert_HSV+6)^0,w,c
  4959   0011CE  5A2E               	subwfb	(convert_HSV@temp_611+2)^0,f,c
  4960   0011D0  5017               	movf	(??_convert_HSV+7)^0,w,c
  4961   0011D2  5A2F               	subwfb	(convert_HSV@temp_611+3)^0,f,c
  4962   0011D4                     
  4963                           ;color.c: 269:                 temp *= (unsigned long)hue_scale;
  4964   0011D4  C02C  F001         	movff	convert_HSV@temp_611,___lmul@multiplier
  4965   0011D8  C02D  F002         	movff	convert_HSV@temp_611+1,___lmul@multiplier+1
  4966   0011DC  C02E  F003         	movff	convert_HSV@temp_611+2,___lmul@multiplier+2
  4967   0011E0  C02F  F004         	movff	convert_HSV@temp_611+3,___lmul@multiplier+3
  4968   0011E4  0E3C               	movlw	60
  4969   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  4970   0011E8  0E00               	movlw	0
  4971   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4972   0011EC  0E00               	movlw	0
  4973   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4974   0011F0  0E00               	movlw	0
  4975   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4976   0011F4  ECB6  F016         	call	___lmul	;wreg free
  4977   0011F8  C001  F02C         	movff	?___lmul,convert_HSV@temp_611
  4978   0011FC  C002  F02D         	movff	?___lmul+1,convert_HSV@temp_611+1
  4979   001200  C003  F02E         	movff	?___lmul+2,convert_HSV@temp_611+2
  4980   001204  C004  F02F         	movff	?___lmul+3,convert_HSV@temp_611+3
  4981   001208                     
  4982                           ;color.c: 270:                 temp /= (unsigned long)C;
  4983   001208  C02C  F001         	movff	convert_HSV@temp_611,___lldiv@dividend
  4984   00120C  C02D  F002         	movff	convert_HSV@temp_611+1,___lldiv@dividend+1
  4985   001210  C02E  F003         	movff	convert_HSV@temp_611+2,___lldiv@dividend+2
  4986   001214  C02F  F004         	movff	convert_HSV@temp_611+3,___lldiv@dividend+3
  4987   001218  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4988   00121C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4989   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4990   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4991   001224  EC31  F015         	call	___lldiv	;wreg free
  4992   001228  C001  F02C         	movff	?___lldiv,convert_HSV@temp_611
  4993   00122C  C002  F02D         	movff	?___lldiv+1,convert_HSV@temp_611+1
  4994   001230  C003  F02E         	movff	?___lldiv+2,convert_HSV@temp_611+2
  4995   001234  C004  F02F         	movff	?___lldiv+3,convert_HSV@temp_611+3
  4996   001238                     
  4997                           ;color.c: 271:                 hue = (unsigned int)temp;
  4998   001238  C02C  F01E         	movff	convert_HSV@temp_611,convert_HSV@hue
  4999   00123C  C02D  F01F         	movff	convert_HSV@temp_611+1,convert_HSV@hue+1
  5000   001240                     l3954:
  5001                           
  5002                           ;color.c: 274:         if (M == p2->B) {
  5003   001240  500F               	movf	convert_HSV@p2^0,w,c
  5004   001242  6ED9               	movwf	fsr2l,c
  5005   001244  6ADA               	clrf	fsr2h,c
  5006   001246  0E04               	movlw	4
  5007   001248  26D9               	addwf	fsr2l,f,c
  5008   00124A  503E               	movf	convert_HSV@M^0,w,c
  5009   00124C  18DE               	xorwf	postinc2,w,c
  5010   00124E  E107               	bnz	u3251
  5011   001250  503F               	movf	(convert_HSV@M+1)^0,w,c
  5012   001252  18DE               	xorwf	postinc2,w,c
  5013   001254  A4D8               	btfss	status,2,c
  5014   001256  EF2F  F009         	goto	u3251
  5015   00125A  EF31  F009         	goto	u3250
  5016   00125E                     u3251:
  5017   00125E  EF0E  F00A         	goto	l3982
  5018   001262                     u3250:
  5019   001262                     
  5020                           ;color.c: 275:             if (p2->R >= p2->G) {
  5021   001262  500F               	movf	convert_HSV@p2^0,w,c
  5022   001264  6ED9               	movwf	fsr2l,c
  5023   001266  6ADA               	clrf	fsr2h,c
  5024   001268  0E02               	movlw	2
  5025   00126A  26D9               	addwf	fsr2l,f,c
  5026   00126C  500F               	movf	convert_HSV@p2^0,w,c
  5027   00126E  6EE1               	movwf	fsr1l,c
  5028   001270  6AE2               	clrf	fsr1h,c
  5029   001272  50DE               	movf	postinc2,w,c
  5030   001274  5CE6               	subwf	postinc1,w,c
  5031   001276  50DE               	movf	postinc2,w,c
  5032   001278  58E6               	subwfb	postinc1,w,c
  5033   00127A  A0D8               	btfss	status,0,c
  5034   00127C  EF42  F009         	goto	u3261
  5035   001280  EF44  F009         	goto	u3260
  5036   001284                     u3261:
  5037   001284  EFA9  F009         	goto	l3970
  5038   001288                     u3260:
  5039   001288                     
  5040                           ;color.c: 277:                 unsigned long temp;;color.c: 278:                 temp = 
      +                          (unsigned long)C;
  5041   001288  C040  F030         	movff	convert_HSV@C,convert_HSV@temp_612
  5042   00128C  C041  F031         	movff	convert_HSV@C+1,convert_HSV@temp_612+1
  5043   001290  6A32               	clrf	(convert_HSV@temp_612+2)^0,c
  5044   001292  6A33               	clrf	(convert_HSV@temp_612+3)^0,c
  5045   001294                     
  5046                           ;color.c: 279:                 temp *= 4;
  5047   001294  0E02               	movlw	2
  5048   001296                     u3275:
  5049   001296  90D8               	bcf	status,0,c
  5050   001298  3630               	rlcf	convert_HSV@temp_612^0,f,c
  5051   00129A  3631               	rlcf	(convert_HSV@temp_612+1)^0,f,c
  5052   00129C  3632               	rlcf	(convert_HSV@temp_612+2)^0,f,c
  5053   00129E  3633               	rlcf	(convert_HSV@temp_612+3)^0,f,c
  5054   0012A0  2EE8               	decfsz	wreg,f,c
  5055   0012A2  EF4B  F009         	goto	u3275
  5056   0012A6                     
  5057                           ;color.c: 280:                 temp += (unsigned long)(p2->R - p2->G);
  5058   0012A6  500F               	movf	convert_HSV@p2^0,w,c
  5059   0012A8  6ED9               	movwf	fsr2l,c
  5060   0012AA  6ADA               	clrf	fsr2h,c
  5061   0012AC  0E02               	movlw	2
  5062   0012AE  26D9               	addwf	fsr2l,f,c
  5063   0012B0  CFDE F010          	movff	postinc2,??_convert_HSV
  5064   0012B4  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5065   0012B8  500F               	movf	convert_HSV@p2^0,w,c
  5066   0012BA  6ED9               	movwf	fsr2l,c
  5067   0012BC  6ADA               	clrf	fsr2h,c
  5068   0012BE  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5069   0012C2  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5070   0012C6  5010               	movf	??_convert_HSV^0,w,c
  5071   0012C8  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5072   0012CA  6E14               	movwf	(??_convert_HSV+4)^0,c
  5073   0012CC  5011               	movf	(??_convert_HSV+1)^0,w,c
  5074   0012CE  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5075   0012D0  6E15               	movwf	(??_convert_HSV+5)^0,c
  5076   0012D2  5014               	movf	(??_convert_HSV+4)^0,w,c
  5077   0012D4  2630               	addwf	convert_HSV@temp_612^0,f,c
  5078   0012D6  5015               	movf	(??_convert_HSV+5)^0,w,c
  5079   0012D8  2231               	addwfc	(convert_HSV@temp_612+1)^0,f,c
  5080   0012DA  0E00               	movlw	0
  5081   0012DC  2232               	addwfc	(convert_HSV@temp_612+2)^0,f,c
  5082   0012DE  0E00               	movlw	0
  5083   0012E0  2233               	addwfc	(convert_HSV@temp_612+3)^0,f,c
  5084   0012E2                     
  5085                           ;color.c: 281:                 temp *= (unsigned long)hue_scale;
  5086   0012E2  C030  F001         	movff	convert_HSV@temp_612,___lmul@multiplier
  5087   0012E6  C031  F002         	movff	convert_HSV@temp_612+1,___lmul@multiplier+1
  5088   0012EA  C032  F003         	movff	convert_HSV@temp_612+2,___lmul@multiplier+2
  5089   0012EE  C033  F004         	movff	convert_HSV@temp_612+3,___lmul@multiplier+3
  5090   0012F2  0E3C               	movlw	60
  5091   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  5092   0012F6  0E00               	movlw	0
  5093   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5094   0012FA  0E00               	movlw	0
  5095   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5096   0012FE  0E00               	movlw	0
  5097   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5098   001302  ECB6  F016         	call	___lmul	;wreg free
  5099   001306  C001  F030         	movff	?___lmul,convert_HSV@temp_612
  5100   00130A  C002  F031         	movff	?___lmul+1,convert_HSV@temp_612+1
  5101   00130E  C003  F032         	movff	?___lmul+2,convert_HSV@temp_612+2
  5102   001312  C004  F033         	movff	?___lmul+3,convert_HSV@temp_612+3
  5103   001316                     
  5104                           ;color.c: 282:                 temp /= (unsigned long)C;
  5105   001316  C030  F001         	movff	convert_HSV@temp_612,___lldiv@dividend
  5106   00131A  C031  F002         	movff	convert_HSV@temp_612+1,___lldiv@dividend+1
  5107   00131E  C032  F003         	movff	convert_HSV@temp_612+2,___lldiv@dividend+2
  5108   001322  C033  F004         	movff	convert_HSV@temp_612+3,___lldiv@dividend+3
  5109   001326  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5110   00132A  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5111   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5112   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5113   001332  EC31  F015         	call	___lldiv	;wreg free
  5114   001336  C001  F030         	movff	?___lldiv,convert_HSV@temp_612
  5115   00133A  C002  F031         	movff	?___lldiv+1,convert_HSV@temp_612+1
  5116   00133E  C003  F032         	movff	?___lldiv+2,convert_HSV@temp_612+2
  5117   001342  C004  F033         	movff	?___lldiv+3,convert_HSV@temp_612+3
  5118   001346                     
  5119                           ;color.c: 283:                 hue = (unsigned int)temp;
  5120   001346  C030  F01E         	movff	convert_HSV@temp_612,convert_HSV@hue
  5121   00134A  C031  F01F         	movff	convert_HSV@temp_612+1,convert_HSV@hue+1
  5122                           
  5123                           ;color.c: 284:             } else {
  5124   00134E  EF0E  F00A         	goto	l3982
  5125   001352                     l3970:
  5126                           
  5127                           ;color.c: 286:                 unsigned long temp;;color.c: 287:                 temp = 
      +                          (unsigned long)C;
  5128   001352  C040  F034         	movff	convert_HSV@C,convert_HSV@temp_613
  5129   001356  C041  F035         	movff	convert_HSV@C+1,convert_HSV@temp_613+1
  5130   00135A  6A36               	clrf	(convert_HSV@temp_613+2)^0,c
  5131   00135C  6A37               	clrf	(convert_HSV@temp_613+3)^0,c
  5132   00135E                     
  5133                           ;color.c: 288:                 temp *= 4;
  5134   00135E  0E02               	movlw	2
  5135   001360                     u3285:
  5136   001360  90D8               	bcf	status,0,c
  5137   001362  3634               	rlcf	convert_HSV@temp_613^0,f,c
  5138   001364  3635               	rlcf	(convert_HSV@temp_613+1)^0,f,c
  5139   001366  3636               	rlcf	(convert_HSV@temp_613+2)^0,f,c
  5140   001368  3637               	rlcf	(convert_HSV@temp_613+3)^0,f,c
  5141   00136A  2EE8               	decfsz	wreg,f,c
  5142   00136C  EFB0  F009         	goto	u3285
  5143   001370                     
  5144                           ;color.c: 289:                 temp -= (unsigned long)(p2->G - p2->R);
  5145   001370  500F               	movf	convert_HSV@p2^0,w,c
  5146   001372  6ED9               	movwf	fsr2l,c
  5147   001374  6ADA               	clrf	fsr2h,c
  5148   001376  CFDE F010          	movff	postinc2,??_convert_HSV
  5149   00137A  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5150   00137E  500F               	movf	convert_HSV@p2^0,w,c
  5151   001380  6ED9               	movwf	fsr2l,c
  5152   001382  6ADA               	clrf	fsr2h,c
  5153   001384  0E02               	movlw	2
  5154   001386  26D9               	addwf	fsr2l,f,c
  5155   001388  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5156   00138C  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5157   001390  5010               	movf	??_convert_HSV^0,w,c
  5158   001392  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5159   001394  6E14               	movwf	(??_convert_HSV+4)^0,c
  5160   001396  5011               	movf	(??_convert_HSV+1)^0,w,c
  5161   001398  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5162   00139A  6E15               	movwf	(??_convert_HSV+5)^0,c
  5163   00139C  6A16               	clrf	(??_convert_HSV+6)^0,c
  5164   00139E  6A17               	clrf	(??_convert_HSV+7)^0,c
  5165   0013A0  5014               	movf	(??_convert_HSV+4)^0,w,c
  5166   0013A2  5E34               	subwf	convert_HSV@temp_613^0,f,c
  5167   0013A4  5015               	movf	(??_convert_HSV+5)^0,w,c
  5168   0013A6  5A35               	subwfb	(convert_HSV@temp_613+1)^0,f,c
  5169   0013A8  5016               	movf	(??_convert_HSV+6)^0,w,c
  5170   0013AA  5A36               	subwfb	(convert_HSV@temp_613+2)^0,f,c
  5171   0013AC  5017               	movf	(??_convert_HSV+7)^0,w,c
  5172   0013AE  5A37               	subwfb	(convert_HSV@temp_613+3)^0,f,c
  5173   0013B0                     
  5174                           ;color.c: 290:                 temp *= (unsigned long)hue_scale;
  5175   0013B0  C034  F001         	movff	convert_HSV@temp_613,___lmul@multiplier
  5176   0013B4  C035  F002         	movff	convert_HSV@temp_613+1,___lmul@multiplier+1
  5177   0013B8  C036  F003         	movff	convert_HSV@temp_613+2,___lmul@multiplier+2
  5178   0013BC  C037  F004         	movff	convert_HSV@temp_613+3,___lmul@multiplier+3
  5179   0013C0  0E3C               	movlw	60
  5180   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  5181   0013C4  0E00               	movlw	0
  5182   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5183   0013C8  0E00               	movlw	0
  5184   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5185   0013CC  0E00               	movlw	0
  5186   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5187   0013D0  ECB6  F016         	call	___lmul	;wreg free
  5188   0013D4  C001  F034         	movff	?___lmul,convert_HSV@temp_613
  5189   0013D8  C002  F035         	movff	?___lmul+1,convert_HSV@temp_613+1
  5190   0013DC  C003  F036         	movff	?___lmul+2,convert_HSV@temp_613+2
  5191   0013E0  C004  F037         	movff	?___lmul+3,convert_HSV@temp_613+3
  5192   0013E4                     
  5193                           ;color.c: 291:                 temp /= (unsigned long)C;
  5194   0013E4  C034  F001         	movff	convert_HSV@temp_613,___lldiv@dividend
  5195   0013E8  C035  F002         	movff	convert_HSV@temp_613+1,___lldiv@dividend+1
  5196   0013EC  C036  F003         	movff	convert_HSV@temp_613+2,___lldiv@dividend+2
  5197   0013F0  C037  F004         	movff	convert_HSV@temp_613+3,___lldiv@dividend+3
  5198   0013F4  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5199   0013F8  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5200   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5201   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5202   001400  EC31  F015         	call	___lldiv	;wreg free
  5203   001404  C001  F034         	movff	?___lldiv,convert_HSV@temp_613
  5204   001408  C002  F035         	movff	?___lldiv+1,convert_HSV@temp_613+1
  5205   00140C  C003  F036         	movff	?___lldiv+2,convert_HSV@temp_613+2
  5206   001410  C004  F037         	movff	?___lldiv+3,convert_HSV@temp_613+3
  5207   001414                     
  5208                           ;color.c: 292:                 hue = (unsigned int)temp;
  5209   001414  C034  F01E         	movff	convert_HSV@temp_613,convert_HSV@hue
  5210   001418  C035  F01F         	movff	convert_HSV@temp_613+1,convert_HSV@hue+1
  5211   00141C                     l3982:
  5212                           
  5213                           ;color.c: 297:     if (M == 0) {
  5214   00141C  503E               	movf	convert_HSV@M^0,w,c
  5215   00141E  103F               	iorwf	(convert_HSV@M+1)^0,w,c
  5216   001420  A4D8               	btfss	status,2,c
  5217   001422  EF15  F00A         	goto	u3291
  5218   001426  EF17  F00A         	goto	u3290
  5219   00142A                     u3291:
  5220   00142A  EF1D  F00A         	goto	l3986
  5221   00142E                     u3290:
  5222   00142E                     
  5223                           ;color.c: 298:         sat = 0;
  5224   00142E  0E00               	movlw	0
  5225   001430  6E1D               	movwf	(convert_HSV@sat+1)^0,c
  5226   001432  0E00               	movlw	0
  5227   001434  6E1C               	movwf	convert_HSV@sat^0,c
  5228                           
  5229                           ;color.c: 299:     } else {
  5230   001436  EF59  F00A         	goto	l3994
  5231   00143A                     l3986:
  5232                           
  5233                           ;color.c: 301:         unsigned long temp;;color.c: 302:         temp = (unsigned long)C
      +                          ;
  5234   00143A  C040  F020         	movff	convert_HSV@C,convert_HSV@temp_614
  5235   00143E  C041  F021         	movff	convert_HSV@C+1,convert_HSV@temp_614+1
  5236   001442  6A22               	clrf	(convert_HSV@temp_614+2)^0,c
  5237   001444  6A23               	clrf	(convert_HSV@temp_614+3)^0,c
  5238   001446                     
  5239                           ;color.c: 303:         temp *= (unsigned long)sat_scale;
  5240   001446  C020  F001         	movff	convert_HSV@temp_614,___lmul@multiplier
  5241   00144A  C021  F002         	movff	convert_HSV@temp_614+1,___lmul@multiplier+1
  5242   00144E  C022  F003         	movff	convert_HSV@temp_614+2,___lmul@multiplier+2
  5243   001452  C023  F004         	movff	convert_HSV@temp_614+3,___lmul@multiplier+3
  5244   001456  0E64               	movlw	100
  5245   001458  6E05               	movwf	___lmul@multiplicand^0,c
  5246   00145A  0E00               	movlw	0
  5247   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5248   00145E  0E00               	movlw	0
  5249   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5250   001462  0E00               	movlw	0
  5251   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5252   001466  ECB6  F016         	call	___lmul	;wreg free
  5253   00146A  C001  F020         	movff	?___lmul,convert_HSV@temp_614
  5254   00146E  C002  F021         	movff	?___lmul+1,convert_HSV@temp_614+1
  5255   001472  C003  F022         	movff	?___lmul+2,convert_HSV@temp_614+2
  5256   001476  C004  F023         	movff	?___lmul+3,convert_HSV@temp_614+3
  5257   00147A                     
  5258                           ;color.c: 304:         temp /= (unsigned long)M;
  5259   00147A  C020  F001         	movff	convert_HSV@temp_614,___lldiv@dividend
  5260   00147E  C021  F002         	movff	convert_HSV@temp_614+1,___lldiv@dividend+1
  5261   001482  C022  F003         	movff	convert_HSV@temp_614+2,___lldiv@dividend+2
  5262   001486  C023  F004         	movff	convert_HSV@temp_614+3,___lldiv@dividend+3
  5263   00148A  C03E  F005         	movff	convert_HSV@M,___lldiv@divisor
  5264   00148E  C03F  F006         	movff	convert_HSV@M+1,___lldiv@divisor+1
  5265   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5266   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5267   001496  EC31  F015         	call	___lldiv	;wreg free
  5268   00149A  C001  F020         	movff	?___lldiv,convert_HSV@temp_614
  5269   00149E  C002  F021         	movff	?___lldiv+1,convert_HSV@temp_614+1
  5270   0014A2  C003  F022         	movff	?___lldiv+2,convert_HSV@temp_614+2
  5271   0014A6  C004  F023         	movff	?___lldiv+3,convert_HSV@temp_614+3
  5272   0014AA                     
  5273                           ;color.c: 305:         sat = (unsigned int)temp;
  5274   0014AA  C020  F01C         	movff	convert_HSV@temp_614,convert_HSV@sat
  5275   0014AE  C021  F01D         	movff	convert_HSV@temp_614+1,convert_HSV@sat+1
  5276   0014B2                     l3994:
  5277                           
  5278                           ;color.c: 308:     p1->H = hue;
  5279   0014B2  500E               	movf	convert_HSV@p1^0,w,c
  5280   0014B4  6ED9               	movwf	fsr2l,c
  5281   0014B6  6ADA               	clrf	fsr2h,c
  5282   0014B8  C01E  FFDE         	movff	convert_HSV@hue,postinc2
  5283   0014BC  C01F  FFDD         	movff	convert_HSV@hue+1,postdec2
  5284   0014C0                     
  5285                           ;color.c: 309:     p1->S = sat;
  5286   0014C0  500E               	movf	convert_HSV@p1^0,w,c
  5287   0014C2  6ED9               	movwf	fsr2l,c
  5288   0014C4  6ADA               	clrf	fsr2h,c
  5289   0014C6  0E02               	movlw	2
  5290   0014C8  26D9               	addwf	fsr2l,f,c
  5291   0014CA  C01C  FFDE         	movff	convert_HSV@sat,postinc2
  5292   0014CE  C01D  FFDD         	movff	convert_HSV@sat+1,postdec2
  5293   0014D2                     
  5294                           ;color.c: 310:     p1->V = M;
  5295   0014D2  500E               	movf	convert_HSV@p1^0,w,c
  5296   0014D4  6ED9               	movwf	fsr2l,c
  5297   0014D6  6ADA               	clrf	fsr2h,c
  5298   0014D8  0E04               	movlw	4
  5299   0014DA  26D9               	addwf	fsr2l,f,c
  5300   0014DC  C03E  FFDE         	movff	convert_HSV@M,postinc2
  5301   0014E0  C03F  FFDD         	movff	convert_HSV@M+1,postdec2
  5302   0014E4  0012               	return		;funcret
  5303   0014E6                     __end_of_convert_HSV:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _min_RGB *****************
  5307 ;; Defined at:
  5308 ;;		line 186 in file "color.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5311 ;;		 -> main@RGBC_colour(8), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  min_val         2    4[COMRAM] unsigned int 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  2    0[COMRAM] unsigned int 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;Total ram usage:        6 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 1
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_convert_HSV
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text24
  5338   002B96                     __ptext24:
  5339                           	callstack 0
  5340   002B96                     _min_RGB:
  5341                           	callstack 28
  5342   002B96                     
  5343                           ;color.c: 186: unsigned int min_RGB(struct RGBC_val *p);color.c: 187: {;color.c: 188:   
      +                            unsigned int min_val = p->R;
  5344   002B96  5001               	movf	min_RGB@p^0,w,c
  5345   002B98  6ED9               	movwf	fsr2l,c
  5346   002B9A  6ADA               	clrf	fsr2h,c
  5347   002B9C  CFDE F005          	movff	postinc2,min_RGB@min_val
  5348   002BA0  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5349   002BA4                     
  5350                           ;color.c: 189:     if (p->G < min_val) {min_val = p->G;}
  5351   002BA4  5001               	movf	min_RGB@p^0,w,c
  5352   002BA6  6ED9               	movwf	fsr2l,c
  5353   002BA8  6ADA               	clrf	fsr2h,c
  5354   002BAA  0E02               	movlw	2
  5355   002BAC  26D9               	addwf	fsr2l,f,c
  5356   002BAE  5005               	movf	min_RGB@min_val^0,w,c
  5357   002BB0  5CDE               	subwf	postinc2,w,c
  5358   002BB2  5006               	movf	(min_RGB@min_val+1)^0,w,c
  5359   002BB4  58DE               	subwfb	postinc2,w,c
  5360   002BB6  B0D8               	btfsc	status,0,c
  5361   002BB8  EFE0  F015         	goto	u2591
  5362   002BBC  EFE2  F015         	goto	u2590
  5363   002BC0                     u2591:
  5364   002BC0  EFEB  F015         	goto	l104
  5365   002BC4                     u2590:
  5366   002BC4  5001               	movf	min_RGB@p^0,w,c
  5367   002BC6  6ED9               	movwf	fsr2l,c
  5368   002BC8  6ADA               	clrf	fsr2h,c
  5369   002BCA  0E02               	movlw	2
  5370   002BCC  26D9               	addwf	fsr2l,f,c
  5371   002BCE  CFDE F005          	movff	postinc2,min_RGB@min_val
  5372   002BD2  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5373   002BD6                     l104:
  5374                           
  5375                           ;color.c: 190:     if (p->B < min_val) {min_val = p->B;}
  5376   002BD6  5001               	movf	min_RGB@p^0,w,c
  5377   002BD8  6ED9               	movwf	fsr2l,c
  5378   002BDA  6ADA               	clrf	fsr2h,c
  5379   002BDC  0E04               	movlw	4
  5380   002BDE  26D9               	addwf	fsr2l,f,c
  5381   002BE0  5005               	movf	min_RGB@min_val^0,w,c
  5382   002BE2  5CDE               	subwf	postinc2,w,c
  5383   002BE4  5006               	movf	(min_RGB@min_val+1)^0,w,c
  5384   002BE6  58DE               	subwfb	postinc2,w,c
  5385   002BE8  B0D8               	btfsc	status,0,c
  5386   002BEA  EFF9  F015         	goto	u2601
  5387   002BEE  EFFB  F015         	goto	u2600
  5388   002BF2                     u2601:
  5389   002BF2  EF04  F016         	goto	l3454
  5390   002BF6                     u2600:
  5391   002BF6  5001               	movf	min_RGB@p^0,w,c
  5392   002BF8  6ED9               	movwf	fsr2l,c
  5393   002BFA  6ADA               	clrf	fsr2h,c
  5394   002BFC  0E04               	movlw	4
  5395   002BFE  26D9               	addwf	fsr2l,f,c
  5396   002C00  CFDE F005          	movff	postinc2,min_RGB@min_val
  5397   002C04  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5398   002C08                     l3454:
  5399                           
  5400                           ;color.c: 191:     return min_val;
  5401   002C08  C005  F001         	movff	min_RGB@min_val,?_min_RGB
  5402   002C0C  C006  F002         	movff	min_RGB@min_val+1,?_min_RGB+1
  5403   002C10  0012               	return		;funcret
  5404   002C12                     __end_of_min_RGB:
  5405                           	callstack 0
  5406                           
  5407 ;; *************** function _max_RGB *****************
  5408 ;; Defined at:
  5409 ;;		line 175 in file "color.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5412 ;;		 -> main@RGBC_colour(8), 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  max_val         2    4[COMRAM] unsigned int 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  2    0[COMRAM] unsigned int 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;Total ram usage:        6 bytes
  5429 ;; Hardware stack levels used: 1
  5430 ;; Hardware stack levels required when called: 1
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_convert_HSV
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text25
  5439   002C12                     __ptext25:
  5440                           	callstack 0
  5441   002C12                     _max_RGB:
  5442                           	callstack 28
  5443   002C12                     
  5444                           ;color.c: 175: unsigned int max_RGB(struct RGBC_val *p);color.c: 176: {;color.c: 177:   
      +                            unsigned int max_val = p->R;
  5445   002C12  5001               	movf	max_RGB@p^0,w,c
  5446   002C14  6ED9               	movwf	fsr2l,c
  5447   002C16  6ADA               	clrf	fsr2h,c
  5448   002C18  CFDE F005          	movff	postinc2,max_RGB@max_val
  5449   002C1C  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5450   002C20                     
  5451                           ;color.c: 178:     if (p->G > max_val) {max_val = p->G;}
  5452   002C20  5001               	movf	max_RGB@p^0,w,c
  5453   002C22  6ED9               	movwf	fsr2l,c
  5454   002C24  6ADA               	clrf	fsr2h,c
  5455   002C26  0E02               	movlw	2
  5456   002C28  26D9               	addwf	fsr2l,f,c
  5457   002C2A  50DE               	movf	postinc2,w,c
  5458   002C2C  5C05               	subwf	max_RGB@max_val^0,w,c
  5459   002C2E  50DE               	movf	postinc2,w,c
  5460   002C30  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  5461   002C32  B0D8               	btfsc	status,0,c
  5462   002C34  EF1E  F016         	goto	u2571
  5463   002C38  EF20  F016         	goto	u2570
  5464   002C3C                     u2571:
  5465   002C3C  EF29  F016         	goto	l99
  5466   002C40                     u2570:
  5467   002C40  5001               	movf	max_RGB@p^0,w,c
  5468   002C42  6ED9               	movwf	fsr2l,c
  5469   002C44  6ADA               	clrf	fsr2h,c
  5470   002C46  0E02               	movlw	2
  5471   002C48  26D9               	addwf	fsr2l,f,c
  5472   002C4A  CFDE F005          	movff	postinc2,max_RGB@max_val
  5473   002C4E  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5474   002C52                     l99:
  5475                           
  5476                           ;color.c: 179:     if (p->B > max_val) {max_val = p->B;}
  5477   002C52  5001               	movf	max_RGB@p^0,w,c
  5478   002C54  6ED9               	movwf	fsr2l,c
  5479   002C56  6ADA               	clrf	fsr2h,c
  5480   002C58  0E04               	movlw	4
  5481   002C5A  26D9               	addwf	fsr2l,f,c
  5482   002C5C  50DE               	movf	postinc2,w,c
  5483   002C5E  5C05               	subwf	max_RGB@max_val^0,w,c
  5484   002C60  50DE               	movf	postinc2,w,c
  5485   002C62  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  5486   002C64  B0D8               	btfsc	status,0,c
  5487   002C66  EF37  F016         	goto	u2581
  5488   002C6A  EF39  F016         	goto	u2580
  5489   002C6E                     u2581:
  5490   002C6E  EF42  F016         	goto	l3442
  5491   002C72                     u2580:
  5492   002C72  5001               	movf	max_RGB@p^0,w,c
  5493   002C74  6ED9               	movwf	fsr2l,c
  5494   002C76  6ADA               	clrf	fsr2h,c
  5495   002C78  0E04               	movlw	4
  5496   002C7A  26D9               	addwf	fsr2l,f,c
  5497   002C7C  CFDE F005          	movff	postinc2,max_RGB@max_val
  5498   002C80  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5499   002C84                     l3442:
  5500                           
  5501                           ;color.c: 180:     return max_val;
  5502   002C84  C005  F001         	movff	max_RGB@max_val,?_max_RGB
  5503   002C88  C006  F002         	movff	max_RGB@max_val+1,?_max_RGB+1
  5504   002C8C  0012               	return		;funcret
  5505   002C8E                     __end_of_max_RGB:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function ___lmul *****************
  5509 ;; Defined at:
  5510 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  multiplier      4    0[COMRAM] unsigned long 
  5513 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  product         4    8[COMRAM] unsigned long 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  4    0[COMRAM] unsigned long 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5525 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;Total ram usage:       12 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_convert_HSV
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text26
  5540   002D6C                     __ptext26:
  5541                           	callstack 0
  5542   002D6C                     ___lmul:
  5543                           	callstack 28
  5544   002D6C  0E00               	movlw	0
  5545   002D6E  6E09               	movwf	___lmul@product^0,c
  5546   002D70  0E00               	movlw	0
  5547   002D72  6E0A               	movwf	(___lmul@product+1)^0,c
  5548   002D74  0E00               	movlw	0
  5549   002D76  6E0B               	movwf	(___lmul@product+2)^0,c
  5550   002D78  0E00               	movlw	0
  5551   002D7A  6E0C               	movwf	(___lmul@product+3)^0,c
  5552   002D7C                     l3584:
  5553   002D7C  A001               	btfss	___lmul@multiplier^0,0,c
  5554   002D7E  EFC3  F016         	goto	u2641
  5555   002D82  EFC5  F016         	goto	u2640
  5556   002D86                     u2641:
  5557   002D86  EFCD  F016         	goto	l3588
  5558   002D8A                     u2640:
  5559   002D8A  5005               	movf	___lmul@multiplicand^0,w,c
  5560   002D8C  2609               	addwf	___lmul@product^0,f,c
  5561   002D8E  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5562   002D90  220A               	addwfc	(___lmul@product+1)^0,f,c
  5563   002D92  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5564   002D94  220B               	addwfc	(___lmul@product+2)^0,f,c
  5565   002D96  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5566   002D98  220C               	addwfc	(___lmul@product+3)^0,f,c
  5567   002D9A                     l3588:
  5568   002D9A  90D8               	bcf	status,0,c
  5569   002D9C  3605               	rlcf	___lmul@multiplicand^0,f,c
  5570   002D9E  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5571   002DA0  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5572   002DA2  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5573   002DA4  90D8               	bcf	status,0,c
  5574   002DA6  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5575   002DA8  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5576   002DAA  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5577   002DAC  3201               	rrcf	___lmul@multiplier^0,f,c
  5578   002DAE  5001               	movf	___lmul@multiplier^0,w,c
  5579   002DB0  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5580   002DB2  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5581   002DB4  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5582   002DB6  A4D8               	btfss	status,2,c
  5583   002DB8  EFE0  F016         	goto	u2651
  5584   002DBC  EFE2  F016         	goto	u2650
  5585   002DC0                     u2651:
  5586   002DC0  EFBE  F016         	goto	l3584
  5587   002DC4                     u2650:
  5588   002DC4  C009  F001         	movff	___lmul@product,?___lmul
  5589   002DC8  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5590   002DCC  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5591   002DD0  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5592   002DD4  0012               	return		;funcret
  5593   002DD6                     __end_of___lmul:
  5594                           	callstack 0
  5595                           
  5596 ;; *************** function _colour_to_key *****************
  5597 ;; Defined at:
  5598 ;;		line 321 in file "color.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  p1              1    0[COMRAM] PTR struct HSV_val
  5601 ;;		 -> main@HSV_colour(6), 
  5602 ;;  p2              1    1[COMRAM] PTR struct RGBC_val
  5603 ;;		 -> main@RGBC_colour(8), 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  key             1    4[COMRAM] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      unsigned char 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;Total ram usage:        5 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; Hardware stack levels required when called: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;;		_forward_navigation
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text27
  5631   0014E6                     __ptext27:
  5632                           	callstack 0
  5633   0014E6                     _colour_to_key:
  5634                           	callstack 29
  5635   0014E6                     
  5636                           ;color.c: 321: unsigned char colour_to_key(struct HSV_val *p1, struct RGBC_val *p2);colo
      +                          r.c: 322: {;color.c: 323:     unsigned char key = 0;
  5637   0014E6  0E00               	movlw	0
  5638   0014E8  6E05               	movwf	colour_to_key@key^0,c
  5639   0014EA                     
  5640                           ;color.c: 324:     if ( ((293 <= p1->H) && (p1->H <= 360)) &&
  5641   0014EA  5001               	movf	colour_to_key@p1^0,w,c
  5642   0014EC  6ED9               	movwf	fsr2l,c
  5643   0014EE  6ADA               	clrf	fsr2h,c
  5644   0014F0  0E25               	movlw	37
  5645   0014F2  5CDE               	subwf	postinc2,w,c
  5646   0014F4  0E01               	movlw	1
  5647   0014F6  58DE               	subwfb	postinc2,w,c
  5648   0014F8  A0D8               	btfss	status,0,c
  5649   0014FA  EF81  F00A         	goto	u3301
  5650   0014FE  EF83  F00A         	goto	u3300
  5651   001502                     u3301:
  5652   001502  EFB5  F00A         	goto	l4012
  5653   001506                     u3300:
  5654   001506  5001               	movf	colour_to_key@p1^0,w,c
  5655   001508  6ED9               	movwf	fsr2l,c
  5656   00150A  6ADA               	clrf	fsr2h,c
  5657   00150C  0E69               	movlw	105
  5658   00150E  5CDE               	subwf	postinc2,w,c
  5659   001510  0E01               	movlw	1
  5660   001512  58DE               	subwfb	postinc2,w,c
  5661   001514  B0D8               	btfsc	status,0,c
  5662   001516  EF8F  F00A         	goto	u3311
  5663   00151A  EF91  F00A         	goto	u3310
  5664   00151E                     u3311:
  5665   00151E  EFB5  F00A         	goto	l4012
  5666   001522                     u3310:
  5667   001522  5001               	movf	colour_to_key@p1^0,w,c
  5668   001524  6ED9               	movwf	fsr2l,c
  5669   001526  6ADA               	clrf	fsr2h,c
  5670   001528  0E02               	movlw	2
  5671   00152A  26D9               	addwf	fsr2l,f,c
  5672   00152C  0E01               	movlw	1
  5673   00152E  50DB               	movf	plusw2,w,c
  5674   001530  E109               	bnz	u3320
  5675   001532  0E2E               	movlw	46
  5676   001534  5CDE               	subwf	postinc2,w,c
  5677   001536  A0D8               	btfss	status,0,c
  5678   001538  EFA0  F00A         	goto	u3321
  5679   00153C  EFA2  F00A         	goto	u3320
  5680   001540                     u3321:
  5681   001540  EFB5  F00A         	goto	l4012
  5682   001544                     u3320:
  5683   001544  5001               	movf	colour_to_key@p1^0,w,c
  5684   001546  6ED9               	movwf	fsr2l,c
  5685   001548  6ADA               	clrf	fsr2h,c
  5686   00154A  0E02               	movlw	2
  5687   00154C  26D9               	addwf	fsr2l,f,c
  5688   00154E  0E01               	movlw	1
  5689   001550  50DB               	movf	plusw2,w,c
  5690   001552  E107               	bnz	u3331
  5691   001554  0E5B               	movlw	91
  5692   001556  5CDE               	subwf	postinc2,w,c
  5693   001558  B0D8               	btfsc	status,0,c
  5694   00155A  EFB1  F00A         	goto	u3331
  5695   00155E  EFB3  F00A         	goto	u3330
  5696   001562                     u3331:
  5697   001562  EFB5  F00A         	goto	l4012
  5698   001566                     u3330:
  5699   001566                     
  5700                           ;color.c: 325:          ((46 <= p1->S) && (p1->S <= 90))) {;color.c: 326:         key = 
      +                          1;
  5701   001566  0E01               	movlw	1
  5702   001568  6E05               	movwf	colour_to_key@key^0,c
  5703   00156A                     l4012:
  5704                           
  5705                           ;color.c: 329:     if ( ((113 <= p1->H) && (p1->H <= 153)) &&
  5706   00156A  5001               	movf	colour_to_key@p1^0,w,c
  5707   00156C  6ED9               	movwf	fsr2l,c
  5708   00156E  6ADA               	clrf	fsr2h,c
  5709   001570  0E01               	movlw	1
  5710   001572  50DB               	movf	plusw2,w,c
  5711   001574  E109               	bnz	u3340
  5712   001576  0E71               	movlw	113
  5713   001578  5CDE               	subwf	postinc2,w,c
  5714   00157A  A0D8               	btfss	status,0,c
  5715   00157C  EFC2  F00A         	goto	u3341
  5716   001580  EFC4  F00A         	goto	u3340
  5717   001584                     u3341:
  5718   001584  EFF7  F00A         	goto	l4022
  5719   001588                     u3340:
  5720   001588  5001               	movf	colour_to_key@p1^0,w,c
  5721   00158A  6ED9               	movwf	fsr2l,c
  5722   00158C  6ADA               	clrf	fsr2h,c
  5723   00158E  0E01               	movlw	1
  5724   001590  50DB               	movf	plusw2,w,c
  5725   001592  E107               	bnz	u3351
  5726   001594  0E9A               	movlw	154
  5727   001596  5CDE               	subwf	postinc2,w,c
  5728   001598  B0D8               	btfsc	status,0,c
  5729   00159A  EFD1  F00A         	goto	u3351
  5730   00159E  EFD3  F00A         	goto	u3350
  5731   0015A2                     u3351:
  5732   0015A2  EFF7  F00A         	goto	l4022
  5733   0015A6                     u3350:
  5734   0015A6  5001               	movf	colour_to_key@p1^0,w,c
  5735   0015A8  6ED9               	movwf	fsr2l,c
  5736   0015AA  6ADA               	clrf	fsr2h,c
  5737   0015AC  0E02               	movlw	2
  5738   0015AE  26D9               	addwf	fsr2l,f,c
  5739   0015B0  0E01               	movlw	1
  5740   0015B2  50DB               	movf	plusw2,w,c
  5741   0015B4  E109               	bnz	u3360
  5742   0015B6  0E0D               	movlw	13
  5743   0015B8  5CDE               	subwf	postinc2,w,c
  5744   0015BA  A0D8               	btfss	status,0,c
  5745   0015BC  EFE2  F00A         	goto	u3361
  5746   0015C0  EFE4  F00A         	goto	u3360
  5747   0015C4                     u3361:
  5748   0015C4  EFF7  F00A         	goto	l4022
  5749   0015C8                     u3360:
  5750   0015C8  5001               	movf	colour_to_key@p1^0,w,c
  5751   0015CA  6ED9               	movwf	fsr2l,c
  5752   0015CC  6ADA               	clrf	fsr2h,c
  5753   0015CE  0E02               	movlw	2
  5754   0015D0  26D9               	addwf	fsr2l,f,c
  5755   0015D2  0E01               	movlw	1
  5756   0015D4  50DB               	movf	plusw2,w,c
  5757   0015D6  E107               	bnz	u3371
  5758   0015D8  0E2C               	movlw	44
  5759   0015DA  5CDE               	subwf	postinc2,w,c
  5760   0015DC  B0D8               	btfsc	status,0,c
  5761   0015DE  EFF3  F00A         	goto	u3371
  5762   0015E2  EFF5  F00A         	goto	u3370
  5763   0015E6                     u3371:
  5764   0015E6  EFF7  F00A         	goto	l4022
  5765   0015EA                     u3370:
  5766   0015EA                     
  5767                           ;color.c: 330:          ((13 <= p1->S) && (p1->S <= 43))) {;color.c: 331:         key = 
      +                          2;
  5768   0015EA  0E02               	movlw	2
  5769   0015EC  6E05               	movwf	colour_to_key@key^0,c
  5770   0015EE                     l4022:
  5771                           
  5772                           ;color.c: 334:     if ( ((180 <= p1->H) && (p1->H <= 244)) &&
  5773   0015EE  5001               	movf	colour_to_key@p1^0,w,c
  5774   0015F0  6ED9               	movwf	fsr2l,c
  5775   0015F2  6ADA               	clrf	fsr2h,c
  5776   0015F4  0E01               	movlw	1
  5777   0015F6  50DB               	movf	plusw2,w,c
  5778   0015F8  E109               	bnz	u3380
  5779   0015FA  0EB4               	movlw	180
  5780   0015FC  5CDE               	subwf	postinc2,w,c
  5781   0015FE  A0D8               	btfss	status,0,c
  5782   001600  EF04  F00B         	goto	u3381
  5783   001604  EF06  F00B         	goto	u3380
  5784   001608                     u3381:
  5785   001608  EF39  F00B         	goto	l4032
  5786   00160C                     u3380:
  5787   00160C  5001               	movf	colour_to_key@p1^0,w,c
  5788   00160E  6ED9               	movwf	fsr2l,c
  5789   001610  6ADA               	clrf	fsr2h,c
  5790   001612  0E01               	movlw	1
  5791   001614  50DB               	movf	plusw2,w,c
  5792   001616  E107               	bnz	u3391
  5793   001618  0EF5               	movlw	245
  5794   00161A  5CDE               	subwf	postinc2,w,c
  5795   00161C  B0D8               	btfsc	status,0,c
  5796   00161E  EF13  F00B         	goto	u3391
  5797   001622  EF15  F00B         	goto	u3390
  5798   001626                     u3391:
  5799   001626  EF39  F00B         	goto	l4032
  5800   00162A                     u3390:
  5801   00162A  5001               	movf	colour_to_key@p1^0,w,c
  5802   00162C  6ED9               	movwf	fsr2l,c
  5803   00162E  6ADA               	clrf	fsr2h,c
  5804   001630  0E02               	movlw	2
  5805   001632  26D9               	addwf	fsr2l,f,c
  5806   001634  0E01               	movlw	1
  5807   001636  50DB               	movf	plusw2,w,c
  5808   001638  E109               	bnz	u3400
  5809   00163A  0E0D               	movlw	13
  5810   00163C  5CDE               	subwf	postinc2,w,c
  5811   00163E  A0D8               	btfss	status,0,c
  5812   001640  EF24  F00B         	goto	u3401
  5813   001644  EF26  F00B         	goto	u3400
  5814   001648                     u3401:
  5815   001648  EF39  F00B         	goto	l4032
  5816   00164C                     u3400:
  5817   00164C  5001               	movf	colour_to_key@p1^0,w,c
  5818   00164E  6ED9               	movwf	fsr2l,c
  5819   001650  6ADA               	clrf	fsr2h,c
  5820   001652  0E02               	movlw	2
  5821   001654  26D9               	addwf	fsr2l,f,c
  5822   001656  0E01               	movlw	1
  5823   001658  50DB               	movf	plusw2,w,c
  5824   00165A  E107               	bnz	u3411
  5825   00165C  0E39               	movlw	57
  5826   00165E  5CDE               	subwf	postinc2,w,c
  5827   001660  B0D8               	btfsc	status,0,c
  5828   001662  EF35  F00B         	goto	u3411
  5829   001666  EF37  F00B         	goto	u3410
  5830   00166A                     u3411:
  5831   00166A  EF39  F00B         	goto	l4032
  5832   00166E                     u3410:
  5833   00166E                     
  5834                           ;color.c: 335:          ((13 <= p1->S) && (p1->S <= 56))) {;color.c: 336:         key = 
      +                          3;
  5835   00166E  0E03               	movlw	3
  5836   001670  6E05               	movwf	colour_to_key@key^0,c
  5837   001672                     l4032:
  5838                           
  5839                           ;color.c: 339:     if ( ((10 <= p1->H) && (p1->H <= 31)) &&
  5840   001672  5001               	movf	colour_to_key@p1^0,w,c
  5841   001674  6ED9               	movwf	fsr2l,c
  5842   001676  6ADA               	clrf	fsr2h,c
  5843   001678  0E01               	movlw	1
  5844   00167A  50DB               	movf	plusw2,w,c
  5845   00167C  E109               	bnz	u3420
  5846   00167E  0E0A               	movlw	10
  5847   001680  5CDE               	subwf	postinc2,w,c
  5848   001682  A0D8               	btfss	status,0,c
  5849   001684  EF46  F00B         	goto	u3421
  5850   001688  EF48  F00B         	goto	u3420
  5851   00168C                     u3421:
  5852   00168C  EF7B  F00B         	goto	l4042
  5853   001690                     u3420:
  5854   001690  5001               	movf	colour_to_key@p1^0,w,c
  5855   001692  6ED9               	movwf	fsr2l,c
  5856   001694  6ADA               	clrf	fsr2h,c
  5857   001696  0E01               	movlw	1
  5858   001698  50DB               	movf	plusw2,w,c
  5859   00169A  E107               	bnz	u3431
  5860   00169C  0E20               	movlw	32
  5861   00169E  5CDE               	subwf	postinc2,w,c
  5862   0016A0  B0D8               	btfsc	status,0,c
  5863   0016A2  EF55  F00B         	goto	u3431
  5864   0016A6  EF57  F00B         	goto	u3430
  5865   0016AA                     u3431:
  5866   0016AA  EF7B  F00B         	goto	l4042
  5867   0016AE                     u3430:
  5868   0016AE  5001               	movf	colour_to_key@p1^0,w,c
  5869   0016B0  6ED9               	movwf	fsr2l,c
  5870   0016B2  6ADA               	clrf	fsr2h,c
  5871   0016B4  0E02               	movlw	2
  5872   0016B6  26D9               	addwf	fsr2l,f,c
  5873   0016B8  0E01               	movlw	1
  5874   0016BA  50DB               	movf	plusw2,w,c
  5875   0016BC  E109               	bnz	u3440
  5876   0016BE  0E11               	movlw	17
  5877   0016C0  5CDE               	subwf	postinc2,w,c
  5878   0016C2  A0D8               	btfss	status,0,c
  5879   0016C4  EF66  F00B         	goto	u3441
  5880   0016C8  EF68  F00B         	goto	u3440
  5881   0016CC                     u3441:
  5882   0016CC  EF7B  F00B         	goto	l4042
  5883   0016D0                     u3440:
  5884   0016D0  5001               	movf	colour_to_key@p1^0,w,c
  5885   0016D2  6ED9               	movwf	fsr2l,c
  5886   0016D4  6ADA               	clrf	fsr2h,c
  5887   0016D6  0E02               	movlw	2
  5888   0016D8  26D9               	addwf	fsr2l,f,c
  5889   0016DA  0E01               	movlw	1
  5890   0016DC  50DB               	movf	plusw2,w,c
  5891   0016DE  E107               	bnz	u3451
  5892   0016E0  0E21               	movlw	33
  5893   0016E2  5CDE               	subwf	postinc2,w,c
  5894   0016E4  B0D8               	btfsc	status,0,c
  5895   0016E6  EF77  F00B         	goto	u3451
  5896   0016EA  EF79  F00B         	goto	u3450
  5897   0016EE                     u3451:
  5898   0016EE  EF7B  F00B         	goto	l4042
  5899   0016F2                     u3450:
  5900   0016F2                     
  5901                           ;color.c: 340:          ((17 <= p1->S) && (p1->S <= 32))) {;color.c: 341:         key = 
      +                          4;
  5902   0016F2  0E04               	movlw	4
  5903   0016F4  6E05               	movwf	colour_to_key@key^0,c
  5904   0016F6                     l4042:
  5905                           
  5906                           ;color.c: 344:     if ( ((279 <= p1->H) && (p1->H <= 360)) &&
  5907   0016F6  5001               	movf	colour_to_key@p1^0,w,c
  5908   0016F8  6ED9               	movwf	fsr2l,c
  5909   0016FA  6ADA               	clrf	fsr2h,c
  5910   0016FC  0E17               	movlw	23
  5911   0016FE  5CDE               	subwf	postinc2,w,c
  5912   001700  0E01               	movlw	1
  5913   001702  58DE               	subwfb	postinc2,w,c
  5914   001704  A0D8               	btfss	status,0,c
  5915   001706  EF87  F00B         	goto	u3461
  5916   00170A  EF89  F00B         	goto	u3460
  5917   00170E                     u3461:
  5918   00170E  EFBB  F00B         	goto	l4052
  5919   001712                     u3460:
  5920   001712  5001               	movf	colour_to_key@p1^0,w,c
  5921   001714  6ED9               	movwf	fsr2l,c
  5922   001716  6ADA               	clrf	fsr2h,c
  5923   001718  0E69               	movlw	105
  5924   00171A  5CDE               	subwf	postinc2,w,c
  5925   00171C  0E01               	movlw	1
  5926   00171E  58DE               	subwfb	postinc2,w,c
  5927   001720  B0D8               	btfsc	status,0,c
  5928   001722  EF95  F00B         	goto	u3471
  5929   001726  EF97  F00B         	goto	u3470
  5930   00172A                     u3471:
  5931   00172A  EFBB  F00B         	goto	l4052
  5932   00172E                     u3470:
  5933   00172E  5001               	movf	colour_to_key@p1^0,w,c
  5934   001730  6ED9               	movwf	fsr2l,c
  5935   001732  6ADA               	clrf	fsr2h,c
  5936   001734  0E02               	movlw	2
  5937   001736  26D9               	addwf	fsr2l,f,c
  5938   001738  0E01               	movlw	1
  5939   00173A  50DB               	movf	plusw2,w,c
  5940   00173C  E109               	bnz	u3480
  5941   00173E  0E0B               	movlw	11
  5942   001740  5CDE               	subwf	postinc2,w,c
  5943   001742  A0D8               	btfss	status,0,c
  5944   001744  EFA6  F00B         	goto	u3481
  5945   001748  EFA8  F00B         	goto	u3480
  5946   00174C                     u3481:
  5947   00174C  EFBB  F00B         	goto	l4052
  5948   001750                     u3480:
  5949   001750  5001               	movf	colour_to_key@p1^0,w,c
  5950   001752  6ED9               	movwf	fsr2l,c
  5951   001754  6ADA               	clrf	fsr2h,c
  5952   001756  0E02               	movlw	2
  5953   001758  26D9               	addwf	fsr2l,f,c
  5954   00175A  0E01               	movlw	1
  5955   00175C  50DB               	movf	plusw2,w,c
  5956   00175E  E107               	bnz	u3491
  5957   001760  0E10               	movlw	16
  5958   001762  5CDE               	subwf	postinc2,w,c
  5959   001764  B0D8               	btfsc	status,0,c
  5960   001766  EFB7  F00B         	goto	u3491
  5961   00176A  EFB9  F00B         	goto	u3490
  5962   00176E                     u3491:
  5963   00176E  EFBB  F00B         	goto	l4052
  5964   001772                     u3490:
  5965   001772                     
  5966                           ;color.c: 345:          ((11 <= p1->S) && (p1->S <= 15))) {;color.c: 346:         key = 
      +                          5;
  5967   001772  0E05               	movlw	5
  5968   001774  6E05               	movwf	colour_to_key@key^0,c
  5969   001776                     l4052:
  5970                           
  5971                           ;color.c: 349:     if ( ((298 <= p1->H) && (p1->H <= 360)) &&
  5972   001776  5001               	movf	colour_to_key@p1^0,w,c
  5973   001778  6ED9               	movwf	fsr2l,c
  5974   00177A  6ADA               	clrf	fsr2h,c
  5975   00177C  0E2A               	movlw	42
  5976   00177E  5CDE               	subwf	postinc2,w,c
  5977   001780  0E01               	movlw	1
  5978   001782  58DE               	subwfb	postinc2,w,c
  5979   001784  A0D8               	btfss	status,0,c
  5980   001786  EFC7  F00B         	goto	u3501
  5981   00178A  EFC9  F00B         	goto	u3500
  5982   00178E                     u3501:
  5983   00178E  EFFB  F00B         	goto	l4062
  5984   001792                     u3500:
  5985   001792  5001               	movf	colour_to_key@p1^0,w,c
  5986   001794  6ED9               	movwf	fsr2l,c
  5987   001796  6ADA               	clrf	fsr2h,c
  5988   001798  0E69               	movlw	105
  5989   00179A  5CDE               	subwf	postinc2,w,c
  5990   00179C  0E01               	movlw	1
  5991   00179E  58DE               	subwfb	postinc2,w,c
  5992   0017A0  B0D8               	btfsc	status,0,c
  5993   0017A2  EFD5  F00B         	goto	u3511
  5994   0017A6  EFD7  F00B         	goto	u3510
  5995   0017AA                     u3511:
  5996   0017AA  EFFB  F00B         	goto	l4062
  5997   0017AE                     u3510:
  5998   0017AE  5001               	movf	colour_to_key@p1^0,w,c
  5999   0017B0  6ED9               	movwf	fsr2l,c
  6000   0017B2  6ADA               	clrf	fsr2h,c
  6001   0017B4  0E02               	movlw	2
  6002   0017B6  26D9               	addwf	fsr2l,f,c
  6003   0017B8  0E01               	movlw	1
  6004   0017BA  50DB               	movf	plusw2,w,c
  6005   0017BC  E109               	bnz	u3520
  6006   0017BE  0E14               	movlw	20
  6007   0017C0  5CDE               	subwf	postinc2,w,c
  6008   0017C2  A0D8               	btfss	status,0,c
  6009   0017C4  EFE6  F00B         	goto	u3521
  6010   0017C8  EFE8  F00B         	goto	u3520
  6011   0017CC                     u3521:
  6012   0017CC  EFFB  F00B         	goto	l4062
  6013   0017D0                     u3520:
  6014   0017D0  5001               	movf	colour_to_key@p1^0,w,c
  6015   0017D2  6ED9               	movwf	fsr2l,c
  6016   0017D4  6ADA               	clrf	fsr2h,c
  6017   0017D6  0E02               	movlw	2
  6018   0017D8  26D9               	addwf	fsr2l,f,c
  6019   0017DA  0E01               	movlw	1
  6020   0017DC  50DB               	movf	plusw2,w,c
  6021   0017DE  E107               	bnz	u3531
  6022   0017E0  0E2E               	movlw	46
  6023   0017E2  5CDE               	subwf	postinc2,w,c
  6024   0017E4  B0D8               	btfsc	status,0,c
  6025   0017E6  EFF7  F00B         	goto	u3531
  6026   0017EA  EFF9  F00B         	goto	u3530
  6027   0017EE                     u3531:
  6028   0017EE  EFFB  F00B         	goto	l4062
  6029   0017F2                     u3530:
  6030   0017F2                     
  6031                           ;color.c: 350:          ((20 <= p1->S) && (p1->S <= 45))) {;color.c: 351:         key = 
      +                          6;
  6032   0017F2  0E06               	movlw	6
  6033   0017F4  6E05               	movwf	colour_to_key@key^0,c
  6034   0017F6                     l4062:
  6035                           
  6036                           ;color.c: 354:     if ( ((154 <= p1->H) && (p1->H <= 207)) &&
  6037   0017F6  5001               	movf	colour_to_key@p1^0,w,c
  6038   0017F8  6ED9               	movwf	fsr2l,c
  6039   0017FA  6ADA               	clrf	fsr2h,c
  6040   0017FC  0E01               	movlw	1
  6041   0017FE  50DB               	movf	plusw2,w,c
  6042   001800  E109               	bnz	u3540
  6043   001802  0E9A               	movlw	154
  6044   001804  5CDE               	subwf	postinc2,w,c
  6045   001806  A0D8               	btfss	status,0,c
  6046   001808  EF08  F00C         	goto	u3541
  6047   00180C  EF0A  F00C         	goto	u3540
  6048   001810                     u3541:
  6049   001810  EF3D  F00C         	goto	l4072
  6050   001814                     u3540:
  6051   001814  5001               	movf	colour_to_key@p1^0,w,c
  6052   001816  6ED9               	movwf	fsr2l,c
  6053   001818  6ADA               	clrf	fsr2h,c
  6054   00181A  0E01               	movlw	1
  6055   00181C  50DB               	movf	plusw2,w,c
  6056   00181E  E107               	bnz	u3551
  6057   001820  0ED0               	movlw	208
  6058   001822  5CDE               	subwf	postinc2,w,c
  6059   001824  B0D8               	btfsc	status,0,c
  6060   001826  EF17  F00C         	goto	u3551
  6061   00182A  EF19  F00C         	goto	u3550
  6062   00182E                     u3551:
  6063   00182E  EF3D  F00C         	goto	l4072
  6064   001832                     u3550:
  6065   001832  5001               	movf	colour_to_key@p1^0,w,c
  6066   001834  6ED9               	movwf	fsr2l,c
  6067   001836  6ADA               	clrf	fsr2h,c
  6068   001838  0E02               	movlw	2
  6069   00183A  26D9               	addwf	fsr2l,f,c
  6070   00183C  0E01               	movlw	1
  6071   00183E  50DB               	movf	plusw2,w,c
  6072   001840  E109               	bnz	u3560
  6073   001842  0E0D               	movlw	13
  6074   001844  5CDE               	subwf	postinc2,w,c
  6075   001846  A0D8               	btfss	status,0,c
  6076   001848  EF28  F00C         	goto	u3561
  6077   00184C  EF2A  F00C         	goto	u3560
  6078   001850                     u3561:
  6079   001850  EF3D  F00C         	goto	l4072
  6080   001854                     u3560:
  6081   001854  5001               	movf	colour_to_key@p1^0,w,c
  6082   001856  6ED9               	movwf	fsr2l,c
  6083   001858  6ADA               	clrf	fsr2h,c
  6084   00185A  0E02               	movlw	2
  6085   00185C  26D9               	addwf	fsr2l,f,c
  6086   00185E  0E01               	movlw	1
  6087   001860  50DB               	movf	plusw2,w,c
  6088   001862  E107               	bnz	u3571
  6089   001864  0E2E               	movlw	46
  6090   001866  5CDE               	subwf	postinc2,w,c
  6091   001868  B0D8               	btfsc	status,0,c
  6092   00186A  EF39  F00C         	goto	u3571
  6093   00186E  EF3B  F00C         	goto	u3570
  6094   001872                     u3571:
  6095   001872  EF3D  F00C         	goto	l4072
  6096   001876                     u3570:
  6097   001876                     
  6098                           ;color.c: 355:          ((13 <= p1->S) && (p1->S <= 45))) {;color.c: 356:         key = 
      +                          7;
  6099   001876  0E07               	movlw	7
  6100   001878  6E05               	movwf	colour_to_key@key^0,c
  6101   00187A                     l4072:
  6102                           
  6103                           ;color.c: 359:     if ( ((3000 <= p2->C) && (p2->C <= 40000)) &&
  6104   00187A  5002               	movf	colour_to_key@p2^0,w,c
  6105   00187C  6ED9               	movwf	fsr2l,c
  6106   00187E  6ADA               	clrf	fsr2h,c
  6107   001880  0E06               	movlw	6
  6108   001882  26D9               	addwf	fsr2l,f,c
  6109   001884  0EB8               	movlw	184
  6110   001886  5CDE               	subwf	postinc2,w,c
  6111   001888  0E0B               	movlw	11
  6112   00188A  58DE               	subwfb	postinc2,w,c
  6113   00188C  A0D8               	btfss	status,0,c
  6114   00188E  EF4B  F00C         	goto	u3581
  6115   001892  EF4D  F00C         	goto	u3580
  6116   001896                     u3581:
  6117   001896  EF70  F00C         	goto	l4080
  6118   00189A                     u3580:
  6119   00189A  5002               	movf	colour_to_key@p2^0,w,c
  6120   00189C  6ED9               	movwf	fsr2l,c
  6121   00189E  6ADA               	clrf	fsr2h,c
  6122   0018A0  0E06               	movlw	6
  6123   0018A2  26D9               	addwf	fsr2l,f,c
  6124   0018A4  0E41               	movlw	65
  6125   0018A6  5CDE               	subwf	postinc2,w,c
  6126   0018A8  0E9C               	movlw	156
  6127   0018AA  58DE               	subwfb	postinc2,w,c
  6128   0018AC  B0D8               	btfsc	status,0,c
  6129   0018AE  EF5B  F00C         	goto	u3591
  6130   0018B2  EF5D  F00C         	goto	u3590
  6131   0018B6                     u3591:
  6132   0018B6  EF70  F00C         	goto	l4080
  6133   0018BA                     u3590:
  6134   0018BA  5001               	movf	colour_to_key@p1^0,w,c
  6135   0018BC  6ED9               	movwf	fsr2l,c
  6136   0018BE  6ADA               	clrf	fsr2h,c
  6137   0018C0  0E02               	movlw	2
  6138   0018C2  26D9               	addwf	fsr2l,f,c
  6139   0018C4  0E01               	movlw	1
  6140   0018C6  50DB               	movf	plusw2,w,c
  6141   0018C8  E107               	bnz	u3601
  6142   0018CA  0E0B               	movlw	11
  6143   0018CC  5CDE               	subwf	postinc2,w,c
  6144   0018CE  B0D8               	btfsc	status,0,c
  6145   0018D0  EF6C  F00C         	goto	u3601
  6146   0018D4  EF6E  F00C         	goto	u3600
  6147   0018D8                     u3601:
  6148   0018D8  EF70  F00C         	goto	l4080
  6149   0018DC                     u3600:
  6150   0018DC                     
  6151                           ;color.c: 360:          ((p1->S <= 10))) {;color.c: 361:         key = 8;
  6152   0018DC  0E08               	movlw	8
  6153   0018DE  6E05               	movwf	colour_to_key@key^0,c
  6154   0018E0                     l4080:
  6155                           
  6156                           ;color.c: 364:     if ( ((1000 <= p2->C) && (p2->C <= 2600)) &&
  6157   0018E0  5002               	movf	colour_to_key@p2^0,w,c
  6158   0018E2  6ED9               	movwf	fsr2l,c
  6159   0018E4  6ADA               	clrf	fsr2h,c
  6160   0018E6  0E06               	movlw	6
  6161   0018E8  26D9               	addwf	fsr2l,f,c
  6162   0018EA  0EE8               	movlw	232
  6163   0018EC  5CDE               	subwf	postinc2,w,c
  6164   0018EE  0E03               	movlw	3
  6165   0018F0  58DE               	subwfb	postinc2,w,c
  6166   0018F2  A0D8               	btfss	status,0,c
  6167   0018F4  EF7E  F00C         	goto	u3611
  6168   0018F8  EF80  F00C         	goto	u3610
  6169   0018FC                     u3611:
  6170   0018FC  EFA3  F00C         	goto	l136
  6171   001900                     u3610:
  6172   001900  5002               	movf	colour_to_key@p2^0,w,c
  6173   001902  6ED9               	movwf	fsr2l,c
  6174   001904  6ADA               	clrf	fsr2h,c
  6175   001906  0E06               	movlw	6
  6176   001908  26D9               	addwf	fsr2l,f,c
  6177   00190A  0E29               	movlw	41
  6178   00190C  5CDE               	subwf	postinc2,w,c
  6179   00190E  0E0A               	movlw	10
  6180   001910  58DE               	subwfb	postinc2,w,c
  6181   001912  B0D8               	btfsc	status,0,c
  6182   001914  EF8E  F00C         	goto	u3621
  6183   001918  EF90  F00C         	goto	u3620
  6184   00191C                     u3621:
  6185   00191C  EFA3  F00C         	goto	l136
  6186   001920                     u3620:
  6187   001920  5001               	movf	colour_to_key@p1^0,w,c
  6188   001922  6ED9               	movwf	fsr2l,c
  6189   001924  6ADA               	clrf	fsr2h,c
  6190   001926  0E02               	movlw	2
  6191   001928  26D9               	addwf	fsr2l,f,c
  6192   00192A  0E01               	movlw	1
  6193   00192C  50DB               	movf	plusw2,w,c
  6194   00192E  E107               	bnz	u3631
  6195   001930  0E0D               	movlw	13
  6196   001932  5CDE               	subwf	postinc2,w,c
  6197   001934  B0D8               	btfsc	status,0,c
  6198   001936  EF9F  F00C         	goto	u3631
  6199   00193A  EFA1  F00C         	goto	u3630
  6200   00193E                     u3631:
  6201   00193E  EFA3  F00C         	goto	l136
  6202   001942                     u3630:
  6203   001942                     
  6204                           ;color.c: 365:          ((p1->S <= 12))) {;color.c: 366:         key = 9;
  6205   001942  0E09               	movlw	9
  6206   001944  6E05               	movwf	colour_to_key@key^0,c
  6207   001946                     l136:
  6208                           
  6209                           ;color.c: 369:     return key;
  6210   001946  5005               	movf	colour_to_key@key^0,w,c
  6211   001948  0012               	return		;funcret
  6212   00194A                     __end_of_colour_to_key:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function _color_click_init *****************
  6216 ;; Defined at:
  6217 ;;		line 7 in file "color.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;Total ram usage:        1 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; Hardware stack levels required when called: 4
  6238 ;; This function calls:
  6239 ;;		_I2C_2_Master_Init
  6240 ;;		_color_writetoaddr
  6241 ;; This function is called by:
  6242 ;;		_main
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text28
  6247   0031F4                     __ptext28:
  6248                           	callstack 0
  6249   0031F4                     _color_click_init:
  6250                           	callstack 26
  6251   0031F4                     
  6252                           ;color.c: 10:     I2C_2_Master_Init();
  6253   0031F4  EC2B  F019         	call	_I2C_2_Master_Init	;wreg free
  6254   0031F8                     
  6255                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  6256   0031F8  0E01               	movlw	1
  6257   0031FA  6E03               	movwf	color_writetoaddr@value^0,c
  6258   0031FC  0E00               	movlw	0
  6259   0031FE  EC77  F019         	call	_color_writetoaddr
  6260   003202                     
  6261                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6262   003202  0E3F               	movlw	63
  6263   003204  6E05               	movwf	??_color_click_init^0,c
  6264   003206  0E55               	movlw	85
  6265   003208                     u3897:
  6266   003208  2EE8               	decfsz	wreg,f,c
  6267   00320A  D7FE               	bra	u3897
  6268   00320C  2E05               	decfsz	??_color_click_init^0,f,c
  6269   00320E  D7FC               	bra	u3897
  6270   003210  0000               	nop	
  6271   003212                     
  6272                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  6273   003212  0E03               	movlw	3
  6274   003214  6E03               	movwf	color_writetoaddr@value^0,c
  6275   003216  0E00               	movlw	0
  6276   003218  EC77  F019         	call	_color_writetoaddr
  6277   00321C                     
  6278                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  6279   00321C  0ED5               	movlw	213
  6280   00321E  6E03               	movwf	color_writetoaddr@value^0,c
  6281   003220  0E01               	movlw	1
  6282   003222  EC77  F019         	call	_color_writetoaddr
  6283   003226  0012               	return		;funcret
  6284   003228                     __end_of_color_click_init:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _color_writetoaddr *****************
  6288 ;; Defined at:
  6289 ;;		line 28 in file "color.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  address         1    wreg     unsigned char 
  6292 ;;  value           1    2[COMRAM] unsigned char 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  address         1    3[COMRAM] unsigned char 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6304 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;Total ram usage:        2 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; Hardware stack levels required when called: 3
  6311 ;; This function calls:
  6312 ;;		_I2C_2_Master_Start
  6313 ;;		_I2C_2_Master_Stop
  6314 ;;		_I2C_2_Master_Write
  6315 ;; This function is called by:
  6316 ;;		_color_click_init
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text29
  6321   0032EE                     __ptext29:
  6322                           	callstack 0
  6323   0032EE                     _color_writetoaddr:
  6324                           	callstack 26
  6325                           
  6326                           ;incstack = 0
  6327                           ;color_writetoaddr@address stored from wreg
  6328   0032EE  6E04               	movwf	color_writetoaddr@address^0,c
  6329   0032F0                     
  6330                           ;color.c: 29:     I2C_2_Master_Start();
  6331   0032F0  ECC4  F019         	call	_I2C_2_Master_Start	;wreg free
  6332                           
  6333                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  6334   0032F4  0E52               	movlw	82
  6335   0032F6  ECAD  F019         	call	_I2C_2_Master_Write
  6336                           
  6337                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  6338   0032FA  5004               	movf	color_writetoaddr@address^0,w,c
  6339   0032FC  0980               	iorlw	128
  6340   0032FE  ECAD  F019         	call	_I2C_2_Master_Write
  6341                           
  6342                           ;color.c: 32:     I2C_2_Master_Write(value);
  6343   003302  5003               	movf	color_writetoaddr@value^0,w,c
  6344   003304  ECAD  F019         	call	_I2C_2_Master_Write
  6345                           
  6346                           ;color.c: 33:     I2C_2_Master_Stop();
  6347   003308  ECBF  F019         	call	_I2C_2_Master_Stop	;wreg free
  6348   00330C  0012               	return		;funcret
  6349   00330E                     __end_of_color_writetoaddr:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function _I2C_2_Master_Init *****************
  6353 ;; Defined at:
  6354 ;;		line 4 in file "i2c.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_color_click_init
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text30
  6383   003256                     __ptext30:
  6384                           	callstack 0
  6385   003256                     _I2C_2_Master_Init:
  6386                           	callstack 28
  6387   003256                     
  6388                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6389   003256  010E               	movlb	14	; () banked
  6390   003258  51D9               	movf	217,w,b	;volatile
  6391   00325A  0BF0               	andlw	-16
  6392   00325C  0908               	iorlw	8
  6393   00325E  6FD9               	movwf	217,b	;volatile
  6394   003260                     
  6395                           ; BSR set to: 14
  6396                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6397   003260  8BD9               	bsf	217,5,b	;volatile
  6398                           
  6399                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6400   003262  0E9F               	movlw	159
  6401   003264  6FD6               	movwf	214,b	;volatile
  6402   003266                     
  6403                           ; BSR set to: 14
  6404                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6405   003266  8A84               	bsf	132,5,c	;volatile
  6406   003268                     
  6407                           ; BSR set to: 14
  6408                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6409   003268  8C84               	bsf	132,6,c	;volatile
  6410   00326A                     
  6411                           ; BSR set to: 14
  6412                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6413   00326A  9BA7               	bcf	167,5,b	;volatile
  6414   00326C                     
  6415                           ; BSR set to: 14
  6416                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6417   00326C  9DA7               	bcf	167,6,b	;volatile
  6418                           
  6419                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6420   00326E  0E1D               	movlw	29
  6421   003270  6F1D               	movwf	29,b	;volatile
  6422                           
  6423                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6424   003272  0E1E               	movlw	30
  6425   003274  6F1C               	movwf	28,b	;volatile
  6426                           
  6427                           ;i2c.c: 18:   RD5PPS=0x1C;
  6428   003276  0E1C               	movlw	28
  6429   003278  6F6F               	movwf	111,b	;volatile
  6430                           
  6431                           ;i2c.c: 19:   RD6PPS=0x1B;
  6432   00327A  0E1B               	movlw	27
  6433   00327C  6F70               	movwf	112,b	;volatile
  6434   00327E                     
  6435                           ; BSR set to: 14
  6436   00327E  0012               	return		;funcret
  6437   003280                     __end_of_I2C_2_Master_Init:
  6438                           	callstack 0
  6439                           
  6440 ;; *************** function _buggy_lights_init *****************
  6441 ;; Defined at:
  6442 ;;		line 7 in file "buggy_lights.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1    wreg      void 
  6449 ;; Registers used:
  6450 ;;		None
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;Total ram usage:        0 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 1
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_main
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text31
  6471   003228                     __ptext31:
  6472                           	callstack 0
  6473   003228                     _buggy_lights_init:
  6474                           	callstack 29
  6475   003228                     
  6476                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  6477   003228  9884               	bcf	132,4,c	;volatile
  6478                           
  6479                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  6480   00322A  9288               	bcf	136,1,c	;volatile
  6481                           
  6482                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  6483   00322C  9684               	bcf	132,3,c	;volatile
  6484                           
  6485                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  6486   00322E  9086               	bcf	134,0,c	;volatile
  6487                           
  6488                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  6489   003230  9088               	bcf	136,0,c	;volatile
  6490                           
  6491                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  6492   003232  987C               	bcf	124,4,c	;volatile
  6493                           
  6494                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  6495   003234  9280               	bcf	128,1,c	;volatile
  6496                           
  6497                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  6498   003236  967C               	bcf	124,3,c	;volatile
  6499                           
  6500                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  6501   003238  907E               	bcf	126,0,c	;volatile
  6502                           
  6503                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  6504   00323A  9080               	bcf	128,0,c	;volatile
  6505                           
  6506                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  6507   00323C  9287               	bcf	135,1,c	;volatile
  6508                           
  6509                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  6510   00323E  9881               	bcf	129,4,c	;volatile
  6511                           
  6512                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  6513   003240  9E86               	bcf	134,7,c	;volatile
  6514                           
  6515                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  6516   003242  927F               	bcf	127,1,c	;volatile
  6517                           
  6518                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  6519   003244  9879               	bcf	121,4,c	;volatile
  6520                           
  6521                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  6522   003246  9E7E               	bcf	126,7,c	;volatile
  6523                           
  6524                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  6525   003248  9087               	bcf	135,0,c	;volatile
  6526                           
  6527                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  6528   00324A  9E85               	bcf	133,7,c	;volatile
  6529                           
  6530                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  6531   00324C  9681               	bcf	129,3,c	;volatile
  6532                           
  6533                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  6534   00324E  907F               	bcf	127,0,c	;volatile
  6535                           
  6536                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  6537   003250  9E7D               	bcf	125,7,c	;volatile
  6538                           
  6539                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  6540   003252  9679               	bcf	121,3,c	;volatile
  6541   003254  0012               	return		;funcret
  6542   003256                     __end_of_buggy_lights_init:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function _average_RGBC *****************
  6546 ;; Defined at:
  6547 ;;		line 124 in file "color.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  p               1   13[COMRAM] PTR struct RGBC_val
  6550 ;;		 -> main@RGBC_colour(8), 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  i               1   16[COMRAM] unsigned char 
  6553 ;;  temp_C          4   29[COMRAM] unsigned long 
  6554 ;;  temp_B          4   25[COMRAM] unsigned long 
  6555 ;;  temp_G          4   21[COMRAM] unsigned long 
  6556 ;;  temp_R          4   17[COMRAM] unsigned long 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6566 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;Total ram usage:       20 bytes
  6571 ;; Hardware stack levels used: 1
  6572 ;; Hardware stack levels required when called: 5
  6573 ;; This function calls:
  6574 ;;		___lldiv
  6575 ;;		_getRGBCval
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;;		_forward_navigation
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text32
  6583   002080                     __ptext32:
  6584                           	callstack 0
  6585   002080                     _average_RGBC:
  6586                           	callstack 25
  6587   002080                     
  6588                           ;color.c: 124: void average_RGBC(struct RGBC_val *p);color.c: 125: {;color.c: 127:     u
      +                          nsigned long temp_R = 0;
  6589   002080  0E00               	movlw	0
  6590   002082  6E12               	movwf	average_RGBC@temp_R^0,c
  6591   002084  0E00               	movlw	0
  6592   002086  6E13               	movwf	(average_RGBC@temp_R+1)^0,c
  6593   002088  0E00               	movlw	0
  6594   00208A  6E14               	movwf	(average_RGBC@temp_R+2)^0,c
  6595   00208C  0E00               	movlw	0
  6596   00208E  6E15               	movwf	(average_RGBC@temp_R+3)^0,c
  6597                           
  6598                           ;color.c: 128:     unsigned long temp_G = 0;
  6599   002090  0E00               	movlw	0
  6600   002092  6E16               	movwf	average_RGBC@temp_G^0,c
  6601   002094  0E00               	movlw	0
  6602   002096  6E17               	movwf	(average_RGBC@temp_G+1)^0,c
  6603   002098  0E00               	movlw	0
  6604   00209A  6E18               	movwf	(average_RGBC@temp_G+2)^0,c
  6605   00209C  0E00               	movlw	0
  6606   00209E  6E19               	movwf	(average_RGBC@temp_G+3)^0,c
  6607                           
  6608                           ;color.c: 129:     unsigned long temp_B = 0;
  6609   0020A0  0E00               	movlw	0
  6610   0020A2  6E1A               	movwf	average_RGBC@temp_B^0,c
  6611   0020A4  0E00               	movlw	0
  6612   0020A6  6E1B               	movwf	(average_RGBC@temp_B+1)^0,c
  6613   0020A8  0E00               	movlw	0
  6614   0020AA  6E1C               	movwf	(average_RGBC@temp_B+2)^0,c
  6615   0020AC  0E00               	movlw	0
  6616   0020AE  6E1D               	movwf	(average_RGBC@temp_B+3)^0,c
  6617                           
  6618                           ;color.c: 130:     unsigned long temp_C = 0;
  6619   0020B0  0E00               	movlw	0
  6620   0020B2  6E1E               	movwf	average_RGBC@temp_C^0,c
  6621   0020B4  0E00               	movlw	0
  6622   0020B6  6E1F               	movwf	(average_RGBC@temp_C+1)^0,c
  6623   0020B8  0E00               	movlw	0
  6624   0020BA  6E20               	movwf	(average_RGBC@temp_C+2)^0,c
  6625   0020BC  0E00               	movlw	0
  6626   0020BE  6E21               	movwf	(average_RGBC@temp_C+3)^0,c
  6627                           
  6628                           ;color.c: 136:     for (unsigned char i = 0; i < sample_count; i++) {
  6629   0020C0  0E00               	movlw	0
  6630   0020C2  6E11               	movwf	average_RGBC@i^0,c
  6631   0020C4  EFAB  F010         	goto	l3862
  6632   0020C8                     l3850:
  6633                           
  6634                           ;color.c: 138:         getRGBCval(p);
  6635   0020C8  C00E  F00C         	movff	average_RGBC@p,getRGBCval@p
  6636   0020CC  ECA8  F017         	call	_getRGBCval	;wreg free
  6637   0020D0                     
  6638                           ;color.c: 140:         temp_R += (unsigned long)p->R;
  6639   0020D0  500E               	movf	average_RGBC@p^0,w,c
  6640   0020D2  6ED9               	movwf	fsr2l,c
  6641   0020D4  6ADA               	clrf	fsr2h,c
  6642   0020D6  CFDE F00F          	movff	postinc2,??_average_RGBC
  6643   0020DA  CFDD F010          	movff	postdec2,??_average_RGBC+1
  6644   0020DE  500F               	movf	??_average_RGBC^0,w,c
  6645   0020E0  2612               	addwf	average_RGBC@temp_R^0,f,c
  6646   0020E2  5010               	movf	(??_average_RGBC+1)^0,w,c
  6647   0020E4  2213               	addwfc	(average_RGBC@temp_R+1)^0,f,c
  6648   0020E6  0E00               	movlw	0
  6649   0020E8  2214               	addwfc	(average_RGBC@temp_R+2)^0,f,c
  6650   0020EA  0E00               	movlw	0
  6651   0020EC  2215               	addwfc	(average_RGBC@temp_R+3)^0,f,c
  6652   0020EE                     
  6653                           ;color.c: 141:         temp_G += (unsigned long)p->G;
  6654   0020EE  500E               	movf	average_RGBC@p^0,w,c
  6655   0020F0  6ED9               	movwf	fsr2l,c
  6656   0020F2  6ADA               	clrf	fsr2h,c
  6657   0020F4  0E02               	movlw	2
  6658   0020F6  26D9               	addwf	fsr2l,f,c
  6659   0020F8  CFDE F00F          	movff	postinc2,??_average_RGBC
  6660   0020FC  CFDD F010          	movff	postdec2,??_average_RGBC+1
  6661   002100  500F               	movf	??_average_RGBC^0,w,c
  6662   002102  2616               	addwf	average_RGBC@temp_G^0,f,c
  6663   002104  5010               	movf	(??_average_RGBC+1)^0,w,c
  6664   002106  2217               	addwfc	(average_RGBC@temp_G+1)^0,f,c
  6665   002108  0E00               	movlw	0
  6666   00210A  2218               	addwfc	(average_RGBC@temp_G+2)^0,f,c
  6667   00210C  0E00               	movlw	0
  6668   00210E  2219               	addwfc	(average_RGBC@temp_G+3)^0,f,c
  6669   002110                     
  6670                           ;color.c: 142:         temp_B += (unsigned long)p->B;
  6671   002110  500E               	movf	average_RGBC@p^0,w,c
  6672   002112  6ED9               	movwf	fsr2l,c
  6673   002114  6ADA               	clrf	fsr2h,c
  6674   002116  0E04               	movlw	4
  6675   002118  26D9               	addwf	fsr2l,f,c
  6676   00211A  CFDE F00F          	movff	postinc2,??_average_RGBC
  6677   00211E  CFDD F010          	movff	postdec2,??_average_RGBC+1
  6678   002122  500F               	movf	??_average_RGBC^0,w,c
  6679   002124  261A               	addwf	average_RGBC@temp_B^0,f,c
  6680   002126  5010               	movf	(??_average_RGBC+1)^0,w,c
  6681   002128  221B               	addwfc	(average_RGBC@temp_B+1)^0,f,c
  6682   00212A  0E00               	movlw	0
  6683   00212C  221C               	addwfc	(average_RGBC@temp_B+2)^0,f,c
  6684   00212E  0E00               	movlw	0
  6685   002130  221D               	addwfc	(average_RGBC@temp_B+3)^0,f,c
  6686   002132                     
  6687                           ;color.c: 143:         temp_C += (unsigned long)p->C;
  6688   002132  500E               	movf	average_RGBC@p^0,w,c
  6689   002134  6ED9               	movwf	fsr2l,c
  6690   002136  6ADA               	clrf	fsr2h,c
  6691   002138  0E06               	movlw	6
  6692   00213A  26D9               	addwf	fsr2l,f,c
  6693   00213C  CFDE F00F          	movff	postinc2,??_average_RGBC
  6694   002140  CFDD F010          	movff	postdec2,??_average_RGBC+1
  6695   002144  500F               	movf	??_average_RGBC^0,w,c
  6696   002146  261E               	addwf	average_RGBC@temp_C^0,f,c
  6697   002148  5010               	movf	(??_average_RGBC+1)^0,w,c
  6698   00214A  221F               	addwfc	(average_RGBC@temp_C+1)^0,f,c
  6699   00214C  0E00               	movlw	0
  6700   00214E  2220               	addwfc	(average_RGBC@temp_C+2)^0,f,c
  6701   002150  0E00               	movlw	0
  6702   002152  2221               	addwfc	(average_RGBC@temp_C+3)^0,f,c
  6703   002154                     
  6704                           ;color.c: 144:     }
  6705   002154  2A11               	incf	average_RGBC@i^0,f,c
  6706   002156                     l3862:
  6707   002156  0E13               	movlw	19
  6708   002158  6411               	cpfsgt	average_RGBC@i^0,c
  6709   00215A  EFB1  F010         	goto	u3171
  6710   00215E  EFB3  F010         	goto	u3170
  6711   002162                     u3171:
  6712   002162  EF64  F010         	goto	l3850
  6713   002166                     u3170:
  6714   002166  C012  F001         	movff	average_RGBC@temp_R,___lldiv@dividend
  6715   00216A  C013  F002         	movff	average_RGBC@temp_R+1,___lldiv@dividend+1
  6716   00216E  C014  F003         	movff	average_RGBC@temp_R+2,___lldiv@dividend+2
  6717   002172  C015  F004         	movff	average_RGBC@temp_R+3,___lldiv@dividend+3
  6718   002176  0E14               	movlw	20
  6719   002178  6E05               	movwf	___lldiv@divisor^0,c
  6720   00217A  0E00               	movlw	0
  6721   00217C  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6722   00217E  0E00               	movlw	0
  6723   002180  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6724   002182  0E00               	movlw	0
  6725   002184  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6726   002186  EC31  F015         	call	___lldiv	;wreg free
  6727   00218A  C001  F012         	movff	?___lldiv,average_RGBC@temp_R
  6728   00218E  C002  F013         	movff	?___lldiv+1,average_RGBC@temp_R+1
  6729   002192  C003  F014         	movff	?___lldiv+2,average_RGBC@temp_R+2
  6730   002196  C004  F015         	movff	?___lldiv+3,average_RGBC@temp_R+3
  6731   00219A  C016  F001         	movff	average_RGBC@temp_G,___lldiv@dividend
  6732   00219E  C017  F002         	movff	average_RGBC@temp_G+1,___lldiv@dividend+1
  6733   0021A2  C018  F003         	movff	average_RGBC@temp_G+2,___lldiv@dividend+2
  6734   0021A6  C019  F004         	movff	average_RGBC@temp_G+3,___lldiv@dividend+3
  6735   0021AA  0E14               	movlw	20
  6736   0021AC  6E05               	movwf	___lldiv@divisor^0,c
  6737   0021AE  0E00               	movlw	0
  6738   0021B0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6739   0021B2  0E00               	movlw	0
  6740   0021B4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6741   0021B6  0E00               	movlw	0
  6742   0021B8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6743   0021BA  EC31  F015         	call	___lldiv	;wreg free
  6744   0021BE  C001  F016         	movff	?___lldiv,average_RGBC@temp_G
  6745   0021C2  C002  F017         	movff	?___lldiv+1,average_RGBC@temp_G+1
  6746   0021C6  C003  F018         	movff	?___lldiv+2,average_RGBC@temp_G+2
  6747   0021CA  C004  F019         	movff	?___lldiv+3,average_RGBC@temp_G+3
  6748   0021CE  C01A  F001         	movff	average_RGBC@temp_B,___lldiv@dividend
  6749   0021D2  C01B  F002         	movff	average_RGBC@temp_B+1,___lldiv@dividend+1
  6750   0021D6  C01C  F003         	movff	average_RGBC@temp_B+2,___lldiv@dividend+2
  6751   0021DA  C01D  F004         	movff	average_RGBC@temp_B+3,___lldiv@dividend+3
  6752   0021DE  0E14               	movlw	20
  6753   0021E0  6E05               	movwf	___lldiv@divisor^0,c
  6754   0021E2  0E00               	movlw	0
  6755   0021E4  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6756   0021E6  0E00               	movlw	0
  6757   0021E8  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6758   0021EA  0E00               	movlw	0
  6759   0021EC  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6760   0021EE  EC31  F015         	call	___lldiv	;wreg free
  6761   0021F2  C001  F01A         	movff	?___lldiv,average_RGBC@temp_B
  6762   0021F6  C002  F01B         	movff	?___lldiv+1,average_RGBC@temp_B+1
  6763   0021FA  C003  F01C         	movff	?___lldiv+2,average_RGBC@temp_B+2
  6764   0021FE  C004  F01D         	movff	?___lldiv+3,average_RGBC@temp_B+3
  6765   002202  C01E  F001         	movff	average_RGBC@temp_C,___lldiv@dividend
  6766   002206  C01F  F002         	movff	average_RGBC@temp_C+1,___lldiv@dividend+1
  6767   00220A  C020  F003         	movff	average_RGBC@temp_C+2,___lldiv@dividend+2
  6768   00220E  C021  F004         	movff	average_RGBC@temp_C+3,___lldiv@dividend+3
  6769   002212  0E14               	movlw	20
  6770   002214  6E05               	movwf	___lldiv@divisor^0,c
  6771   002216  0E00               	movlw	0
  6772   002218  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6773   00221A  0E00               	movlw	0
  6774   00221C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6775   00221E  0E00               	movlw	0
  6776   002220  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6777   002222  EC31  F015         	call	___lldiv	;wreg free
  6778   002226  C001  F01E         	movff	?___lldiv,average_RGBC@temp_C
  6779   00222A  C002  F01F         	movff	?___lldiv+1,average_RGBC@temp_C+1
  6780   00222E  C003  F020         	movff	?___lldiv+2,average_RGBC@temp_C+2
  6781   002232  C004  F021         	movff	?___lldiv+3,average_RGBC@temp_C+3
  6782   002236                     
  6783                           ;color.c: 153:     p->R = (unsigned int)temp_R;
  6784   002236  500E               	movf	average_RGBC@p^0,w,c
  6785   002238  6ED9               	movwf	fsr2l,c
  6786   00223A  6ADA               	clrf	fsr2h,c
  6787   00223C  C012  FFDE         	movff	average_RGBC@temp_R,postinc2
  6788   002240  C013  FFDD         	movff	average_RGBC@temp_R+1,postdec2
  6789   002244                     
  6790                           ;color.c: 154:     p->G = (unsigned int)temp_G;
  6791   002244  500E               	movf	average_RGBC@p^0,w,c
  6792   002246  6ED9               	movwf	fsr2l,c
  6793   002248  6ADA               	clrf	fsr2h,c
  6794   00224A  0E02               	movlw	2
  6795   00224C  26D9               	addwf	fsr2l,f,c
  6796   00224E  C016  FFDE         	movff	average_RGBC@temp_G,postinc2
  6797   002252  C017  FFDD         	movff	average_RGBC@temp_G+1,postdec2
  6798   002256                     
  6799                           ;color.c: 155:     p->B = (unsigned int)temp_B;
  6800   002256  500E               	movf	average_RGBC@p^0,w,c
  6801   002258  6ED9               	movwf	fsr2l,c
  6802   00225A  6ADA               	clrf	fsr2h,c
  6803   00225C  0E04               	movlw	4
  6804   00225E  26D9               	addwf	fsr2l,f,c
  6805   002260  C01A  FFDE         	movff	average_RGBC@temp_B,postinc2
  6806   002264  C01B  FFDD         	movff	average_RGBC@temp_B+1,postdec2
  6807   002268                     
  6808                           ;color.c: 156:     p->C = (unsigned int)temp_C;
  6809   002268  500E               	movf	average_RGBC@p^0,w,c
  6810   00226A  6ED9               	movwf	fsr2l,c
  6811   00226C  6ADA               	clrf	fsr2h,c
  6812   00226E  0E06               	movlw	6
  6813   002270  26D9               	addwf	fsr2l,f,c
  6814   002272  C01E  FFDE         	movff	average_RGBC@temp_C,postinc2
  6815   002276  C01F  FFDD         	movff	average_RGBC@temp_C+1,postdec2
  6816   00227A  0012               	return		;funcret
  6817   00227C                     __end_of_average_RGBC:
  6818                           	callstack 0
  6819                           
  6820 ;; *************** function _getRGBCval *****************
  6821 ;; Defined at:
  6822 ;;		line 112 in file "color.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  6825 ;;		 -> main@RGBC_colour(8), 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  1    wreg      void 
  6830 ;; Registers used:
  6831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6837 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6841 ;;Total ram usage:        1 bytes
  6842 ;; Hardware stack levels used: 1
  6843 ;; Hardware stack levels required when called: 4
  6844 ;; This function calls:
  6845 ;;		_color_read_Blue
  6846 ;;		_color_read_Clear
  6847 ;;		_color_read_Green
  6848 ;;		_color_read_Red
  6849 ;; This function is called by:
  6850 ;;		_average_RGBC
  6851 ;;		_wait_for_wall
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text33
  6856   002F50                     __ptext33:
  6857                           	callstack 0
  6858   002F50                     _getRGBCval:
  6859                           	callstack 25
  6860   002F50                     
  6861                           ;color.c: 112: void getRGBCval(struct RGBC_val *p);color.c: 113: {;color.c: 114:     p->
      +                          R = color_read_Red();
  6862   002F50  ECD3  F017         	call	_color_read_Red	;wreg free
  6863   002F54  500C               	movf	getRGBCval@p^0,w,c
  6864   002F56  6ED9               	movwf	fsr2l,c
  6865   002F58  6ADA               	clrf	fsr2h,c
  6866   002F5A  C005  FFDE         	movff	?_color_read_Red,postinc2
  6867   002F5E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6868                           
  6869                           ;color.c: 115:     p->G = color_read_Green();
  6870   002F62  ECFB  F017         	call	_color_read_Green	;wreg free
  6871   002F66  500C               	movf	getRGBCval@p^0,w,c
  6872   002F68  6ED9               	movwf	fsr2l,c
  6873   002F6A  6ADA               	clrf	fsr2h,c
  6874   002F6C  0E02               	movlw	2
  6875   002F6E  26D9               	addwf	fsr2l,f,c
  6876   002F70  C005  FFDE         	movff	?_color_read_Green,postinc2
  6877   002F74  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6878                           
  6879                           ;color.c: 116:     p->B = color_read_Blue();
  6880   002F78  EC4B  F018         	call	_color_read_Blue	;wreg free
  6881   002F7C  500C               	movf	getRGBCval@p^0,w,c
  6882   002F7E  6ED9               	movwf	fsr2l,c
  6883   002F80  6ADA               	clrf	fsr2h,c
  6884   002F82  0E04               	movlw	4
  6885   002F84  26D9               	addwf	fsr2l,f,c
  6886   002F86  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6887   002F8A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6888                           
  6889                           ;color.c: 117:     p->C = color_read_Clear();
  6890   002F8E  EC23  F018         	call	_color_read_Clear	;wreg free
  6891   002F92  500C               	movf	getRGBCval@p^0,w,c
  6892   002F94  6ED9               	movwf	fsr2l,c
  6893   002F96  6ADA               	clrf	fsr2h,c
  6894   002F98  0E06               	movlw	6
  6895   002F9A  26D9               	addwf	fsr2l,f,c
  6896   002F9C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6897   002FA0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6898   002FA4  0012               	return		;funcret
  6899   002FA6                     __end_of_getRGBCval:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function _color_read_Red *****************
  6903 ;; Defined at:
  6904 ;;		line 40 in file "color.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;		None
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;  tmp             2    9[COMRAM] unsigned int 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  2    4[COMRAM] unsigned int 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;Total ram usage:        7 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; Hardware stack levels required when called: 3
  6925 ;; This function calls:
  6926 ;;		_I2C_2_Master_Read
  6927 ;;		_I2C_2_Master_RepStart
  6928 ;;		_I2C_2_Master_Start
  6929 ;;		_I2C_2_Master_Stop
  6930 ;;		_I2C_2_Master_Write
  6931 ;; This function is called by:
  6932 ;;		_getRGBCval
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text34
  6937   002FA6                     __ptext34:
  6938                           	callstack 0
  6939   002FA6                     _color_read_Red:
  6940                           	callstack 25
  6941   002FA6                     
  6942                           ;color.c: 42:  unsigned int tmp;;color.c: 43:  I2C_2_Master_Start();
  6943   002FA6  ECC4  F019         	call	_I2C_2_Master_Start	;wreg free
  6944                           
  6945                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x00);
  6946   002FAA  0E52               	movlw	82
  6947   002FAC  ECAD  F019         	call	_I2C_2_Master_Write
  6948                           
  6949                           ;color.c: 45:  I2C_2_Master_Write(0xA0 | 0x16);
  6950   002FB0  0EB6               	movlw	182
  6951   002FB2  ECAD  F019         	call	_I2C_2_Master_Write
  6952                           
  6953                           ;color.c: 46:  I2C_2_Master_RepStart();
  6954   002FB6  ECC9  F019         	call	_I2C_2_Master_RepStart	;wreg free
  6955                           
  6956                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x01);
  6957   002FBA  0E53               	movlw	83
  6958   002FBC  ECAD  F019         	call	_I2C_2_Master_Write
  6959                           
  6960                           ;color.c: 48:  tmp=I2C_2_Master_Read(1);
  6961   002FC0  0E01               	movlw	1
  6962   002FC2  ECBF  F018         	call	_I2C_2_Master_Read
  6963   002FC6  6E07               	movwf	??_color_read_Red^0,c
  6964   002FC8  5007               	movf	??_color_read_Red^0,w,c
  6965   002FCA  6E0A               	movwf	color_read_Red@tmp^0,c
  6966   002FCC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6967                           
  6968                           ;color.c: 49:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6969   002FCE  0E00               	movlw	0
  6970   002FD0  ECBF  F018         	call	_I2C_2_Master_Read
  6971   002FD4  6E07               	movwf	??_color_read_Red^0,c
  6972   002FD6  5007               	movf	??_color_read_Red^0,w,c
  6973   002FD8  6E09               	movwf	(??_color_read_Red+2)^0,c
  6974   002FDA  6A08               	clrf	(??_color_read_Red+1)^0,c
  6975   002FDC  500A               	movf	color_read_Red@tmp^0,w,c
  6976   002FDE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6977   002FE0  6E0A               	movwf	color_read_Red@tmp^0,c
  6978   002FE2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6979   002FE4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6980   002FE6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6981                           
  6982                           ;color.c: 50:  I2C_2_Master_Stop();
  6983   002FE8  ECBF  F019         	call	_I2C_2_Master_Stop	;wreg free
  6984   002FEC                     
  6985                           ;color.c: 51:  return tmp;
  6986   002FEC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6987   002FF0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6988   002FF4  0012               	return		;funcret
  6989   002FF6                     __end_of_color_read_Red:
  6990                           	callstack 0
  6991                           
  6992 ;; *************** function _color_read_Green *****************
  6993 ;; Defined at:
  6994 ;;		line 58 in file "color.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;		None
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  tmp             2    9[COMRAM] unsigned int 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2    4[COMRAM] unsigned int 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7011 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;Total ram usage:        7 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 3
  7015 ;; This function calls:
  7016 ;;		_I2C_2_Master_Read
  7017 ;;		_I2C_2_Master_RepStart
  7018 ;;		_I2C_2_Master_Start
  7019 ;;		_I2C_2_Master_Stop
  7020 ;;		_I2C_2_Master_Write
  7021 ;; This function is called by:
  7022 ;;		_getRGBCval
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text35
  7027   002FF6                     __ptext35:
  7028                           	callstack 0
  7029   002FF6                     _color_read_Green:
  7030                           	callstack 25
  7031   002FF6                     
  7032                           ;color.c: 60:     unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7033   002FF6  ECC4  F019         	call	_I2C_2_Master_Start	;wreg free
  7034                           
  7035                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7036   002FFA  0E52               	movlw	82
  7037   002FFC  ECAD  F019         	call	_I2C_2_Master_Write
  7038                           
  7039                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  7040   003000  0EB8               	movlw	184
  7041   003002  ECAD  F019         	call	_I2C_2_Master_Write
  7042                           
  7043                           ;color.c: 64:  I2C_2_Master_RepStart();
  7044   003006  ECC9  F019         	call	_I2C_2_Master_RepStart	;wreg free
  7045                           
  7046                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7047   00300A  0E53               	movlw	83
  7048   00300C  ECAD  F019         	call	_I2C_2_Master_Write
  7049                           
  7050                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7051   003010  0E01               	movlw	1
  7052   003012  ECBF  F018         	call	_I2C_2_Master_Read
  7053   003016  6E07               	movwf	??_color_read_Green^0,c
  7054   003018  5007               	movf	??_color_read_Green^0,w,c
  7055   00301A  6E0A               	movwf	color_read_Green@tmp^0,c
  7056   00301C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7057                           
  7058                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7059   00301E  0E00               	movlw	0
  7060   003020  ECBF  F018         	call	_I2C_2_Master_Read
  7061   003024  6E07               	movwf	??_color_read_Green^0,c
  7062   003026  5007               	movf	??_color_read_Green^0,w,c
  7063   003028  6E09               	movwf	(??_color_read_Green+2)^0,c
  7064   00302A  6A08               	clrf	(??_color_read_Green+1)^0,c
  7065   00302C  500A               	movf	color_read_Green@tmp^0,w,c
  7066   00302E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7067   003030  6E0A               	movwf	color_read_Green@tmp^0,c
  7068   003032  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7069   003034  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7070   003036  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7071                           
  7072                           ;color.c: 68:  I2C_2_Master_Stop();
  7073   003038  ECBF  F019         	call	_I2C_2_Master_Stop	;wreg free
  7074   00303C                     
  7075                           ;color.c: 69:  return tmp;
  7076   00303C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7077   003040  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7078   003044  0012               	return		;funcret
  7079   003046                     __end_of_color_read_Green:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function _color_read_Clear *****************
  7083 ;; Defined at:
  7084 ;;		line 94 in file "color.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  tmp             2    9[COMRAM] unsigned int 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  2    4[COMRAM] unsigned int 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7100 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;Total ram usage:        7 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; Hardware stack levels required when called: 3
  7105 ;; This function calls:
  7106 ;;		_I2C_2_Master_Read
  7107 ;;		_I2C_2_Master_RepStart
  7108 ;;		_I2C_2_Master_Start
  7109 ;;		_I2C_2_Master_Stop
  7110 ;;		_I2C_2_Master_Write
  7111 ;; This function is called by:
  7112 ;;		_getRGBCval
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text36
  7117   003046                     __ptext36:
  7118                           	callstack 0
  7119   003046                     _color_read_Clear:
  7120                           	callstack 25
  7121   003046                     
  7122                           ;color.c: 96:     unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  7123   003046  ECC4  F019         	call	_I2C_2_Master_Start	;wreg free
  7124                           
  7125                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  7126   00304A  0E52               	movlw	82
  7127   00304C  ECAD  F019         	call	_I2C_2_Master_Write
  7128                           
  7129                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x14);
  7130   003050  0EB4               	movlw	180
  7131   003052  ECAD  F019         	call	_I2C_2_Master_Write
  7132                           
  7133                           ;color.c: 100:  I2C_2_Master_RepStart();
  7134   003056  ECC9  F019         	call	_I2C_2_Master_RepStart	;wreg free
  7135                           
  7136                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  7137   00305A  0E53               	movlw	83
  7138   00305C  ECAD  F019         	call	_I2C_2_Master_Write
  7139                           
  7140                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  7141   003060  0E01               	movlw	1
  7142   003062  ECBF  F018         	call	_I2C_2_Master_Read
  7143   003066  6E07               	movwf	??_color_read_Clear^0,c
  7144   003068  5007               	movf	??_color_read_Clear^0,w,c
  7145   00306A  6E0A               	movwf	color_read_Clear@tmp^0,c
  7146   00306C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7147                           
  7148                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7149   00306E  0E00               	movlw	0
  7150   003070  ECBF  F018         	call	_I2C_2_Master_Read
  7151   003074  6E07               	movwf	??_color_read_Clear^0,c
  7152   003076  5007               	movf	??_color_read_Clear^0,w,c
  7153   003078  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7154   00307A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7155   00307C  500A               	movf	color_read_Clear@tmp^0,w,c
  7156   00307E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7157   003080  6E0A               	movwf	color_read_Clear@tmp^0,c
  7158   003082  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7159   003084  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7160   003086  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7161                           
  7162                           ;color.c: 104:  I2C_2_Master_Stop();
  7163   003088  ECBF  F019         	call	_I2C_2_Master_Stop	;wreg free
  7164   00308C                     
  7165                           ;color.c: 105:  return tmp;
  7166   00308C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7167   003090  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7168   003094  0012               	return		;funcret
  7169   003096                     __end_of_color_read_Clear:
  7170                           	callstack 0
  7171                           
  7172 ;; *************** function _color_read_Blue *****************
  7173 ;; Defined at:
  7174 ;;		line 76 in file "color.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;		None
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  tmp             2    9[COMRAM] unsigned int 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  2    4[COMRAM] unsigned int 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0, cstack
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7190 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;Total ram usage:        7 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; Hardware stack levels required when called: 3
  7195 ;; This function calls:
  7196 ;;		_I2C_2_Master_Read
  7197 ;;		_I2C_2_Master_RepStart
  7198 ;;		_I2C_2_Master_Start
  7199 ;;		_I2C_2_Master_Stop
  7200 ;;		_I2C_2_Master_Write
  7201 ;; This function is called by:
  7202 ;;		_getRGBCval
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text37
  7207   003096                     __ptext37:
  7208                           	callstack 0
  7209   003096                     _color_read_Blue:
  7210                           	callstack 25
  7211   003096                     
  7212                           ;color.c: 78:     unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7213   003096  ECC4  F019         	call	_I2C_2_Master_Start	;wreg free
  7214                           
  7215                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7216   00309A  0E52               	movlw	82
  7217   00309C  ECAD  F019         	call	_I2C_2_Master_Write
  7218                           
  7219                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x1A);
  7220   0030A0  0EBA               	movlw	186
  7221   0030A2  ECAD  F019         	call	_I2C_2_Master_Write
  7222                           
  7223                           ;color.c: 82:  I2C_2_Master_RepStart();
  7224   0030A6  ECC9  F019         	call	_I2C_2_Master_RepStart	;wreg free
  7225                           
  7226                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7227   0030AA  0E53               	movlw	83
  7228   0030AC  ECAD  F019         	call	_I2C_2_Master_Write
  7229                           
  7230                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7231   0030B0  0E01               	movlw	1
  7232   0030B2  ECBF  F018         	call	_I2C_2_Master_Read
  7233   0030B6  6E07               	movwf	??_color_read_Blue^0,c
  7234   0030B8  5007               	movf	??_color_read_Blue^0,w,c
  7235   0030BA  6E0A               	movwf	color_read_Blue@tmp^0,c
  7236   0030BC  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7237                           
  7238                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7239   0030BE  0E00               	movlw	0
  7240   0030C0  ECBF  F018         	call	_I2C_2_Master_Read
  7241   0030C4  6E07               	movwf	??_color_read_Blue^0,c
  7242   0030C6  5007               	movf	??_color_read_Blue^0,w,c
  7243   0030C8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7244   0030CA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7245   0030CC  500A               	movf	color_read_Blue@tmp^0,w,c
  7246   0030CE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7247   0030D0  6E0A               	movwf	color_read_Blue@tmp^0,c
  7248   0030D2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7249   0030D4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7250   0030D6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7251                           
  7252                           ;color.c: 86:  I2C_2_Master_Stop();
  7253   0030D8  ECBF  F019         	call	_I2C_2_Master_Stop	;wreg free
  7254   0030DC                     
  7255                           ;color.c: 87:  return tmp;
  7256   0030DC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7257   0030E0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7258   0030E4  0012               	return		;funcret
  7259   0030E6                     __end_of_color_read_Blue:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _I2C_2_Master_Write *****************
  7263 ;; Defined at:
  7264 ;;		line 45 in file "i2c.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  data_byte       1    wreg     unsigned char 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  data_byte       1    1[COMRAM] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;Total ram usage:        1 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 2
  7285 ;; This function calls:
  7286 ;;		_I2C_2_Master_Idle
  7287 ;; This function is called by:
  7288 ;;		_color_writetoaddr
  7289 ;;		_color_read_Red
  7290 ;;		_color_read_Green
  7291 ;;		_color_read_Blue
  7292 ;;		_color_read_Clear
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text38
  7297   00335A                     __ptext38:
  7298                           	callstack 0
  7299   00335A                     _I2C_2_Master_Write:
  7300                           	callstack 26
  7301                           
  7302                           ;incstack = 0
  7303                           ;I2C_2_Master_Write@data_byte stored from wreg
  7304   00335A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7305   00335C                     
  7306                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7307   00335C  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7308   003360                     
  7309                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7310   003360  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7311   003364  0012               	return		;funcret
  7312   003366                     __end_of_I2C_2_Master_Write:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _I2C_2_Master_Stop *****************
  7316 ;; Defined at:
  7317 ;;		line 39 in file "i2c.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used: 1
  7337 ;; Hardware stack levels required when called: 2
  7338 ;; This function calls:
  7339 ;;		_I2C_2_Master_Idle
  7340 ;; This function is called by:
  7341 ;;		_color_writetoaddr
  7342 ;;		_color_read_Red
  7343 ;;		_color_read_Green
  7344 ;;		_color_read_Blue
  7345 ;;		_color_read_Clear
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text39
  7350   00337E                     __ptext39:
  7351                           	callstack 0
  7352   00337E                     _I2C_2_Master_Stop:
  7353                           	callstack 26
  7354   00337E                     
  7355                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7356   00337E  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7357   003382                     
  7358                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7359   003382  010E               	movlb	14	; () banked
  7360   003384  85DA               	bsf	218,2,b	;volatile
  7361   003386                     
  7362                           ; BSR set to: 14
  7363   003386  0012               	return		;funcret
  7364   003388                     __end_of_I2C_2_Master_Stop:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function _I2C_2_Master_Start *****************
  7368 ;; Defined at:
  7369 ;;		line 27 in file "i2c.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; Hardware stack levels required when called: 2
  7390 ;; This function calls:
  7391 ;;		_I2C_2_Master_Idle
  7392 ;; This function is called by:
  7393 ;;		_color_writetoaddr
  7394 ;;		_color_read_Red
  7395 ;;		_color_read_Green
  7396 ;;		_color_read_Blue
  7397 ;;		_color_read_Clear
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text40
  7402   003388                     __ptext40:
  7403                           	callstack 0
  7404   003388                     _I2C_2_Master_Start:
  7405                           	callstack 26
  7406   003388                     
  7407                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7408   003388  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7409   00338C                     
  7410                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7411   00338C  010E               	movlb	14	; () banked
  7412   00338E  81DA               	bsf	218,0,b	;volatile
  7413   003390                     
  7414                           ; BSR set to: 14
  7415   003390  0012               	return		;funcret
  7416   003392                     __end_of_I2C_2_Master_Start:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function _I2C_2_Master_RepStart *****************
  7420 ;; Defined at:
  7421 ;;		line 33 in file "i2c.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;Total ram usage:        0 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; Hardware stack levels required when called: 2
  7442 ;; This function calls:
  7443 ;;		_I2C_2_Master_Idle
  7444 ;; This function is called by:
  7445 ;;		_color_read_Red
  7446 ;;		_color_read_Green
  7447 ;;		_color_read_Blue
  7448 ;;		_color_read_Clear
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text41
  7453   003392                     __ptext41:
  7454                           	callstack 0
  7455   003392                     _I2C_2_Master_RepStart:
  7456                           	callstack 25
  7457   003392                     
  7458                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7459   003392  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7460   003396                     
  7461                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7462   003396  010E               	movlb	14	; () banked
  7463   003398  83DA               	bsf	218,1,b	;volatile
  7464   00339A                     
  7465                           ; BSR set to: 14
  7466   00339A  0012               	return		;funcret
  7467   00339C                     __end_of_I2C_2_Master_RepStart:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function _I2C_2_Master_Read *****************
  7471 ;; Defined at:
  7472 ;;		line 51 in file "i2c.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  ack             1    wreg     unsigned char 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  ack             1    2[COMRAM] unsigned char 
  7477 ;;  tmp             1    3[COMRAM] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      unsigned char 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;Total ram usage:        3 bytes
  7492 ;; Hardware stack levels used: 1
  7493 ;; Hardware stack levels required when called: 2
  7494 ;; This function calls:
  7495 ;;		_I2C_2_Master_Idle
  7496 ;; This function is called by:
  7497 ;;		_color_read_Red
  7498 ;;		_color_read_Green
  7499 ;;		_color_read_Blue
  7500 ;;		_color_read_Clear
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text42
  7505   00317E                     __ptext42:
  7506                           	callstack 0
  7507   00317E                     _I2C_2_Master_Read:
  7508                           	callstack 25
  7509                           
  7510                           ; BSR set to: 14
  7511                           ;incstack = 0
  7512                           ;I2C_2_Master_Read@ack stored from wreg
  7513   00317E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7514   003180                     
  7515                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7516   003180  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7517   003184                     
  7518                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7519   003184  010E               	movlb	14	; () banked
  7520   003186  87DA               	bsf	218,3,b	;volatile
  7521                           
  7522                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7523   003188  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7524   00318C                     
  7525                           ;i2c.c: 57:   tmp = SSP2BUF;
  7526   00318C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7527                           
  7528                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7529   003190  EC40  F019         	call	_I2C_2_Master_Idle	;wreg free
  7530   003194                     
  7531                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7532   003194  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7533   003196  B4D8               	btfsc	status,2,c
  7534   003198  EFD0  F018         	goto	u2231
  7535   00319C  EFD4  F018         	goto	u2230
  7536   0031A0                     u2231:
  7537   0031A0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7538   0031A2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7539   0031A4  EFD5  F018         	goto	u2248
  7540   0031A8                     u2230:
  7541   0031A8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7542   0031AA                     u2248:
  7543   0031AA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7544   0031AC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7545   0031AE  010E               	movlb	14	; () banked
  7546   0031B0  51DA               	movf	218,w,b	;volatile
  7547   0031B2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7548   0031B4  0BDF               	andlw	-33
  7549   0031B6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7550   0031B8  6FDA               	movwf	218,b	;volatile
  7551   0031BA                     
  7552                           ; BSR set to: 14
  7553                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7554   0031BA  89DA               	bsf	218,4,b	;volatile
  7555   0031BC                     
  7556                           ; BSR set to: 14
  7557                           ;i2c.c: 61:   return tmp;
  7558   0031BC  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7559   0031BE                     
  7560                           ; BSR set to: 14
  7561   0031BE  0012               	return		;funcret
  7562   0031C0                     __end_of_I2C_2_Master_Read:
  7563                           	callstack 0
  7564                           
  7565 ;; *************** function _I2C_2_Master_Idle *****************
  7566 ;; Defined at:
  7567 ;;		line 22 in file "i2c.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7585 ;;Total ram usage:        1 bytes
  7586 ;; Hardware stack levels used: 1
  7587 ;; Hardware stack levels required when called: 1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_I2C_2_Master_Start
  7592 ;;		_I2C_2_Master_RepStart
  7593 ;;		_I2C_2_Master_Stop
  7594 ;;		_I2C_2_Master_Write
  7595 ;;		_I2C_2_Master_Read
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text43
  7600   003280                     __ptext43:
  7601                           	callstack 0
  7602   003280                     _I2C_2_Master_Idle:
  7603                           	callstack 26
  7604   003280                     l308:
  7605   003280  010E               	movlb	14	; () banked
  7606   003282  B5D8               	btfsc	216,2,b	;volatile
  7607   003284  EF46  F019         	goto	u1981
  7608   003288  EF48  F019         	goto	u1980
  7609   00328C                     u1981:
  7610   00328C  EF40  F019         	goto	l308
  7611   003290                     u1980:
  7612   003290                     
  7613                           ; BSR set to: 14
  7614   003290  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7615   003294  0E1F               	movlw	31
  7616   003296  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7617   003298  A4D8               	btfss	status,2,c
  7618   00329A  EF51  F019         	goto	u1991
  7619   00329E  EF53  F019         	goto	u1990
  7620   0032A2                     u1991:
  7621   0032A2  EF40  F019         	goto	l308
  7622   0032A6                     u1990:
  7623   0032A6                     
  7624                           ; BSR set to: 14
  7625   0032A6  0012               	return		;funcret
  7626   0032A8                     __end_of_I2C_2_Master_Idle:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function ___lldiv *****************
  7630 ;; Defined at:
  7631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  dividend        4    0[COMRAM] unsigned long 
  7634 ;;  divisor         4    4[COMRAM] unsigned long 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  quotient        4    8[COMRAM] unsigned long 
  7637 ;;  counter         1   12[COMRAM] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  4    0[COMRAM] unsigned long 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;Total ram usage:       13 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_average_RGBC
  7658 ;;		_convert_HSV
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text44
  7663   002A62                     __ptext44:
  7664                           	callstack 0
  7665   002A62                     ___lldiv:
  7666                           	callstack 28
  7667   002A62  0E00               	movlw	0
  7668   002A64  6E09               	movwf	___lldiv@quotient^0,c
  7669   002A66  0E00               	movlw	0
  7670   002A68  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7671   002A6A  0E00               	movlw	0
  7672   002A6C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7673   002A6E  0E00               	movlw	0
  7674   002A70  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7675   002A72  5005               	movf	___lldiv@divisor^0,w,c
  7676   002A74  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7677   002A76  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7678   002A78  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7679   002A7A  B4D8               	btfsc	status,2,c
  7680   002A7C  EF42  F015         	goto	u2661
  7681   002A80  EF44  F015         	goto	u2660
  7682   002A84                     u2661:
  7683   002A84  EF7A  F015         	goto	l778
  7684   002A88                     u2660:
  7685   002A88  0E01               	movlw	1
  7686   002A8A  6E0D               	movwf	___lldiv@counter^0,c
  7687   002A8C  EF4E  F015         	goto	l3600
  7688   002A90                     l3598:
  7689   002A90  90D8               	bcf	status,0,c
  7690   002A92  3605               	rlcf	___lldiv@divisor^0,f,c
  7691   002A94  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7692   002A96  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7693   002A98  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7694   002A9A  2A0D               	incf	___lldiv@counter^0,f,c
  7695   002A9C                     l3600:
  7696   002A9C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7697   002A9E  EF53  F015         	goto	u2671
  7698   002AA2  EF55  F015         	goto	u2670
  7699   002AA6                     u2671:
  7700   002AA6  EF48  F015         	goto	l3598
  7701   002AAA                     u2670:
  7702   002AAA                     l3602:
  7703   002AAA  90D8               	bcf	status,0,c
  7704   002AAC  3609               	rlcf	___lldiv@quotient^0,f,c
  7705   002AAE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7706   002AB0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7707   002AB2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7708   002AB4  5005               	movf	___lldiv@divisor^0,w,c
  7709   002AB6  5C01               	subwf	___lldiv@dividend^0,w,c
  7710   002AB8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7711   002ABA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7712   002ABC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7713   002ABE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7714   002AC0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7715   002AC2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7716   002AC4  A0D8               	btfss	status,0,c
  7717   002AC6  EF67  F015         	goto	u2681
  7718   002ACA  EF69  F015         	goto	u2680
  7719   002ACE                     u2681:
  7720   002ACE  EF72  F015         	goto	l3610
  7721   002AD2                     u2680:
  7722   002AD2  5005               	movf	___lldiv@divisor^0,w,c
  7723   002AD4  5E01               	subwf	___lldiv@dividend^0,f,c
  7724   002AD6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7725   002AD8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7726   002ADA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7727   002ADC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7728   002ADE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7729   002AE0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7730   002AE2  8009               	bsf	___lldiv@quotient^0,0,c
  7731   002AE4                     l3610:
  7732   002AE4  90D8               	bcf	status,0,c
  7733   002AE6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7734   002AE8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7735   002AEA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7736   002AEC  3205               	rrcf	___lldiv@divisor^0,f,c
  7737   002AEE  2E0D               	decfsz	___lldiv@counter^0,f,c
  7738   002AF0  EF55  F015         	goto	l3602
  7739   002AF4                     l778:
  7740   002AF4  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7741   002AF8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7742   002AFC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7743   002B00  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7744   002B04  0012               	return		;funcret
  7745   002B06                     __end_of___lldiv:
  7746                           	callstack 0
  7747                           
  7748 ;; *************** function _Timer0_init *****************
  7749 ;; Defined at:
  7750 ;;		line 7 in file "timers.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;Total ram usage:        0 bytes
  7769 ;; Hardware stack levels used: 1
  7770 ;; Hardware stack levels required when called: 3
  7771 ;; This function calls:
  7772 ;;		_reset_timer
  7773 ;; This function is called by:
  7774 ;;		_main
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text45
  7779   0032A8                     __ptext45:
  7780                           	callstack 0
  7781   0032A8                     _Timer0_init:
  7782                           	callstack 27
  7783   0032A8                     
  7784                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  7785   0032A8  50D6               	movf	214,w,c	;volatile
  7786   0032AA  0B1F               	andlw	-225
  7787   0032AC  0940               	iorlw	64
  7788   0032AE  6ED6               	movwf	214,c	;volatile
  7789   0032B0                     
  7790                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  7791   0032B0  88D6               	bsf	214,4,c	;volatile
  7792   0032B2                     
  7793                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  7794   0032B2  88D5               	bsf	213,4,c	;volatile
  7795                           
  7796                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  7797   0032B4  50D6               	movf	214,w,c	;volatile
  7798   0032B6  0BF0               	andlw	-16
  7799   0032B8  090E               	iorlw	14
  7800   0032BA  6ED6               	movwf	214,c	;volatile
  7801   0032BC                     
  7802                           ;timers.c: 18:     reset_timer();
  7803   0032BC  ECB3  F019         	call	_reset_timer	;wreg free
  7804   0032C0                     
  7805                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  7806   0032C0  8ED5               	bsf	213,7,c	;volatile
  7807   0032C2                     
  7808                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  7809   0032C2  010E               	movlb	14	; () banked
  7810   0032C4  8B29               	bsf	41,5,b	;volatile
  7811   0032C6                     
  7812                           ; BSR set to: 14
  7813                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  7814   0032C6  8CF2               	bsf	242,6,c	;volatile
  7815   0032C8                     
  7816                           ; BSR set to: 14
  7817                           ;timers.c: 23:     INTCONbits.GIE = 1;
  7818   0032C8  8EF2               	bsf	242,7,c	;volatile
  7819   0032CA                     
  7820                           ; BSR set to: 14
  7821   0032CA  0012               	return		;funcret
  7822   0032CC                     __end_of_Timer0_init:
  7823                           	callstack 0
  7824                           
  7825 ;; *************** function _reset_timer *****************
  7826 ;; Defined at:
  7827 ;;		line 53 in file "timers.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;Total ram usage:        0 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		_write_timer
  7850 ;; This function is called by:
  7851 ;;		_Timer0_init
  7852 ;;		_forward_navigation
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text46
  7857   003366                     __ptext46:
  7858                           	callstack 0
  7859   003366                     _reset_timer:
  7860                           	callstack 27
  7861   003366                     
  7862                           ;timers.c: 55:     write_timer(0, 0);
  7863   003366  0E00               	movlw	0
  7864   003368  6E01               	movwf	write_timer@tL^0,c
  7865   00336A  0E00               	movlw	0
  7866   00336C  ECB9  F019         	call	_write_timer
  7867   003370  0012               	return		;funcret
  7868   003372                     __end_of_reset_timer:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function _write_timer *****************
  7872 ;; Defined at:
  7873 ;;		line 41 in file "timers.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  tH              1    wreg     unsigned char 
  7876 ;;  tL              1    0[COMRAM] unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  tH              1    1[COMRAM] unsigned char 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      void 
  7881 ;; Registers used:
  7882 ;;		wreg
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;Total ram usage:        2 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 1
  7895 ;; This function calls:
  7896 ;;		Nothing
  7897 ;; This function is called by:
  7898 ;;		_reset_timer
  7899 ;;		_return_to_sender
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text47
  7904   003372                     __ptext47:
  7905                           	callstack 0
  7906   003372                     _write_timer:
  7907                           	callstack 27
  7908                           
  7909                           ;incstack = 0
  7910                           ;write_timer@tH stored from wreg
  7911   003372  6E02               	movwf	write_timer@tH^0,c
  7912   003374                     
  7913                           ;timers.c: 41: void write_timer(unsigned char tH, unsigned char tL);timers.c: 42: {;time
      +                          rs.c: 46:     TMR0H = tH;
  7914   003374  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  7915   003378                     
  7916                           ;timers.c: 47:     TMR0L = tL;
  7917   003378  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  7918   00337C  0012               	return		;funcret
  7919   00337E                     __end_of_write_timer:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function _ISR *****************
  7923 ;; Defined at:
  7924 ;;		line 186 in file "timers.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;		None
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      void 
  7931 ;; Registers used:
  7932 ;;		wreg, status,2
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;Total ram usage:        0 bytes
  7943 ;; Hardware stack levels used: 1
  7944 ;; This function calls:
  7945 ;;		Nothing
  7946 ;; This function is called by:
  7947 ;;		Interrupt level 2
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	intcode
  7952   000008                     __pintcode:
  7953                           	callstack 0
  7954   000008                     _ISR:
  7955                           	callstack 24
  7956                           
  7957                           ;incstack = 0
  7958   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7959   00000A                     
  7960                           ;timers.c: 188:     if (PIR0bits.TMR0IF) {
  7961   00000A  010E               	movlb	14	; () banked
  7962   00000C  AB33               	btfss	51,5,b	;volatile
  7963   00000E  EF0B  F000         	goto	i2u194_41
  7964   000012  EF0D  F000         	goto	i2u194_40
  7965   000016                     i2u194_41:
  7966   000016  EF1C  F000         	goto	i2l721
  7967   00001A                     i2u194_40:
  7968   00001A                     
  7969                           ; BSR set to: 14
  7970                           ;timers.c: 189:         if (returning) {
  7971   00001A  505D               	movf	_returning^0,w,c
  7972   00001C  B4D8               	btfsc	status,2,c
  7973   00001E  EF13  F000         	goto	i2u195_41
  7974   000022  EF15  F000         	goto	i2u195_40
  7975   000026                     i2u195_41:
  7976   000026  EF19  F000         	goto	i2l2944
  7977   00002A                     i2u195_40:
  7978   00002A                     
  7979                           ; BSR set to: 14
  7980                           ;timers.c: 190:             return_flag = 1;
  7981   00002A  0E01               	movlw	1
  7982   00002C  6E5C               	movwf	_return_flag^0,c
  7983                           
  7984                           ;timers.c: 191:         } else {
  7985   00002E  EF1B  F000         	goto	i2l2946
  7986   000032                     i2l2944:
  7987                           
  7988                           ; BSR set to: 14
  7989                           ;timers.c: 192:             lost_flag = 1;
  7990   000032  0E01               	movlw	1
  7991   000034  6E5B               	movwf	_lost_flag^0,c
  7992   000036                     i2l2946:
  7993                           
  7994                           ; BSR set to: 14
  7995                           ;timers.c: 194:         PIR0bits.TMR0IF = 0;
  7996   000036  9B33               	bcf	51,5,b	;volatile
  7997   000038                     i2l721:
  7998                           
  7999                           ; BSR set to: 14
  8000   000038  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8001   00003A  0011               	retfie		f
  8002   00003C                     __end_of_ISR:
  8003                           	callstack 0
  8004                           
  8005                           	psect	rparam
  8006   000000                     
  8007                           	psect	temp
  8008   00005E                     btemp:
  8009                           	callstack 0
  8010   00005E                     	ds	1
  8011   000000                     int$flags	set	btemp
  8012   000000                     wtemp8	set	btemp+1
  8013   000000                     ttemp5	set	btemp+1
  8014   000000                     ttemp6	set	btemp+4
  8015   000000                     ttemp7	set	btemp+8
  8016                           
  8017                           	psect	idloc
  8018                           
  8019                           ;Config register IDLOC0 @ 0x200000
  8020                           ;	unspecified, using default values
  8021   200000                     	org	2097152
  8022   200000  FFFF               	dw	65535
  8023                           
  8024                           ;Config register IDLOC1 @ 0x200002
  8025                           ;	unspecified, using default values
  8026   200002                     	org	2097154
  8027   200002  FFFF               	dw	65535
  8028                           
  8029                           ;Config register IDLOC2 @ 0x200004
  8030                           ;	unspecified, using default values
  8031   200004                     	org	2097156
  8032   200004  FFFF               	dw	65535
  8033                           
  8034                           ;Config register IDLOC3 @ 0x200006
  8035                           ;	unspecified, using default values
  8036   200006                     	org	2097158
  8037   200006  FFFF               	dw	65535
  8038                           
  8039                           ;Config register IDLOC4 @ 0x200008
  8040                           ;	unspecified, using default values
  8041   200008                     	org	2097160
  8042   200008  FFFF               	dw	65535
  8043                           
  8044                           ;Config register IDLOC5 @ 0x20000A
  8045                           ;	unspecified, using default values
  8046   20000A                     	org	2097162
  8047   20000A  FFFF               	dw	65535
  8048                           
  8049                           ;Config register IDLOC6 @ 0x20000C
  8050                           ;	unspecified, using default values
  8051   20000C                     	org	2097164
  8052   20000C  FFFF               	dw	65535
  8053                           
  8054                           ;Config register IDLOC7 @ 0x20000E
  8055                           ;	unspecified, using default values
  8056   20000E                     	org	2097166
  8057   20000E  FFFF               	dw	65535
  8058                           
  8059                           	psect	config
  8060                           
  8061                           ;Config register CONFIG1L @ 0x300000
  8062                           ;	External Oscillator mode Selection bits
  8063                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8064                           ;	Power-up default value for COSC bits
  8065                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8066   300000                     	org	3145728
  8067   300000  AA                 	db	170
  8068                           
  8069                           ;Config register CONFIG1H @ 0x300001
  8070                           ;	unspecified, using default values
  8071                           ;	Clock Out Enable bit
  8072                           ;	CLKOUTEN = 0x1, unprogrammed default
  8073                           ;	Clock Switch Enable bit
  8074                           ;	CSWEN = 0x1, unprogrammed default
  8075                           ;	Fail-Safe Clock Monitor Enable bit
  8076                           ;	FCMEN = 0x1, unprogrammed default
  8077   300001                     	org	3145729
  8078   300001  FF                 	db	255
  8079                           
  8080                           ;Config register CONFIG2L @ 0x300002
  8081                           ;	unspecified, using default values
  8082                           ;	Master Clear Enable bit
  8083                           ;	MCLRE = 0x1, unprogrammed default
  8084                           ;	Power-up Timer Enable bit
  8085                           ;	PWRTE = 0x1, unprogrammed default
  8086                           ;	Low-power BOR enable bit
  8087                           ;	LPBOREN = 0x1, unprogrammed default
  8088                           ;	Brown-out Reset Enable bits
  8089                           ;	BOREN = 0x3, unprogrammed default
  8090   300002                     	org	3145730
  8091   300002  FF                 	db	255
  8092                           
  8093                           ;Config register CONFIG2H @ 0x300003
  8094                           ;	unspecified, using default values
  8095                           ;	Brown Out Reset Voltage selection bits
  8096                           ;	BORV = 0x3, unprogrammed default
  8097                           ;	ZCD Disable bit
  8098                           ;	ZCD = 0x1, unprogrammed default
  8099                           ;	PPSLOCK bit One-Way Set Enable bit
  8100                           ;	PPS1WAY = 0x1, unprogrammed default
  8101                           ;	Stack Full/Underflow Reset Enable bit
  8102                           ;	STVREN = 0x1, unprogrammed default
  8103                           ;	Debugger Enable bit
  8104                           ;	DEBUG = 0x1, unprogrammed default
  8105                           ;	Extended Instruction Set Enable bit
  8106                           ;	XINST = 0x1, unprogrammed default
  8107   300003                     	org	3145731
  8108   300003  FF                 	db	255
  8109                           
  8110                           ;Config register CONFIG3L @ 0x300004
  8111                           ;	WDT Period Select bits
  8112                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8113                           ;	WDT operating mode
  8114                           ;	WDTE = OFF, WDT Disabled
  8115   300004                     	org	3145732
  8116   300004  9F                 	db	159
  8117                           
  8118                           ;Config register CONFIG3H @ 0x300005
  8119                           ;	unspecified, using default values
  8120                           ;	WDT Window Select bits
  8121                           ;	WDTCWS = 0x7, unprogrammed default
  8122                           ;	WDT input clock selector
  8123                           ;	WDTCCS = 0x7, unprogrammed default
  8124   300005                     	org	3145733
  8125   300005  FF                 	db	255
  8126                           
  8127                           ;Config register CONFIG4L @ 0x300006
  8128                           ;	unspecified, using default values
  8129                           ;	Write Protection Block 0
  8130                           ;	WRT0 = 0x1, unprogrammed default
  8131                           ;	Write Protection Block 1
  8132                           ;	WRT1 = 0x1, unprogrammed default
  8133                           ;	Write Protection Block 2
  8134                           ;	WRT2 = 0x1, unprogrammed default
  8135                           ;	Write Protection Block 3
  8136                           ;	WRT3 = 0x1, unprogrammed default
  8137                           ;	Write Protection Block 3
  8138                           ;	WRT4 = 0x1, unprogrammed default
  8139                           ;	Write Protection Block 3
  8140                           ;	WRT5 = 0x1, unprogrammed default
  8141                           ;	Write Protection Block 3
  8142                           ;	WRT6 = 0x1, unprogrammed default
  8143                           ;	Write Protection Block 3
  8144                           ;	WRT7 = 0x1, unprogrammed default
  8145   300006                     	org	3145734
  8146   300006  FF                 	db	255
  8147                           
  8148                           ;Config register CONFIG4H @ 0x300007
  8149                           ;	unspecified, using default values
  8150                           ;	Configuration Register Write Protection bit
  8151                           ;	WRTC = 0x1, unprogrammed default
  8152                           ;	Boot Block Write Protection bit
  8153                           ;	WRTB = 0x1, unprogrammed default
  8154                           ;	Data EEPROM Write Protection bit
  8155                           ;	WRTD = 0x1, unprogrammed default
  8156                           ;	Scanner Enable bit
  8157                           ;	SCANE = 0x1, unprogrammed default
  8158                           ;	Low Voltage Programming Enable bit
  8159                           ;	LVP = 0x1, unprogrammed default
  8160   300007                     	org	3145735
  8161   300007  FF                 	db	255
  8162                           
  8163                           ;Config register CONFIG5L @ 0x300008
  8164                           ;	unspecified, using default values
  8165                           ;	UserNVM Program Memory Code Protection bit
  8166                           ;	CP = 0x1, unprogrammed default
  8167                           ;	DataNVM Memory Code Protection bit
  8168                           ;	CPD = 0x1, unprogrammed default
  8169   300008                     	org	3145736
  8170   300008  FF                 	db	255
  8171                           
  8172                           ;Config register CONFIG5H @ 0x300009
  8173                           ;	unspecified, using default values
  8174   300009                     	org	3145737
  8175   300009  FF                 	db	255
  8176                           
  8177                           ;Config register CONFIG6L @ 0x30000A
  8178                           ;	unspecified, using default values
  8179                           ;	Table Read Protection Block 0
  8180                           ;	EBTR0 = 0x1, unprogrammed default
  8181                           ;	Table Read Protection Block 1
  8182                           ;	EBTR1 = 0x1, unprogrammed default
  8183                           ;	Table Read Protection Block 2
  8184                           ;	EBTR2 = 0x1, unprogrammed default
  8185                           ;	Table Read Protection Block 3
  8186                           ;	EBTR3 = 0x1, unprogrammed default
  8187                           ;	Table Read Protection Block 4
  8188                           ;	EBTR4 = 0x1, unprogrammed default
  8189                           ;	Table Read Protection Block 5
  8190                           ;	EBTR5 = 0x1, unprogrammed default
  8191                           ;	Table Read Protection Block 6
  8192                           ;	EBTR6 = 0x1, unprogrammed default
  8193                           ;	Table Read Protection Block 7
  8194                           ;	EBTR7 = 0x1, unprogrammed default
  8195   30000A                     	org	3145738
  8196   30000A  FF                 	db	255
  8197                           
  8198                           ;Config register CONFIG6H @ 0x30000B
  8199                           ;	unspecified, using default values
  8200                           ;	Boot Block Table Read Protection bit
  8201                           ;	EBTRB = 0x1, unprogrammed default
  8202   30000B                     	org	3145739
  8203   30000B  FF                 	db	255
  8204                           tosu	equ	0xFFF
  8205                           tosh	equ	0xFFE
  8206                           tosl	equ	0xFFD
  8207                           stkptr	equ	0xFFC
  8208                           pclatu	equ	0xFFB
  8209                           pclath	equ	0xFFA
  8210                           pcl	equ	0xFF9
  8211                           tblptru	equ	0xFF8
  8212                           tblptrh	equ	0xFF7
  8213                           tblptrl	equ	0xFF6
  8214                           tablat	equ	0xFF5
  8215                           prodh	equ	0xFF4
  8216                           prodl	equ	0xFF3
  8217                           indf0	equ	0xFEF
  8218                           postinc0	equ	0xFEE
  8219                           postdec0	equ	0xFED
  8220                           preinc0	equ	0xFEC
  8221                           plusw0	equ	0xFEB
  8222                           fsr0h	equ	0xFEA
  8223                           fsr0l	equ	0xFE9
  8224                           wreg	equ	0xFE8
  8225                           indf1	equ	0xFE7
  8226                           postinc1	equ	0xFE6
  8227                           postdec1	equ	0xFE5
  8228                           preinc1	equ	0xFE4
  8229                           plusw1	equ	0xFE3
  8230                           fsr1h	equ	0xFE2
  8231                           fsr1l	equ	0xFE1
  8232                           bsr	equ	0xFE0
  8233                           indf2	equ	0xFDF
  8234                           postinc2	equ	0xFDE
  8235                           postdec2	equ	0xFDD
  8236                           preinc2	equ	0xFDC
  8237                           plusw2	equ	0xFDB
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      93
    BANK0           160     33      93
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    average_RGBC@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    colour_to_key@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    colour_to_key@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    convert_HSV@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    convert_HSV@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    max_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    min_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2746$buffer	PTR unsigned char  size(2) Largest target is 0

    S2746$source	PTR const unsigned char  size(2) Largest target is 0

    scale_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sendIntSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _scale_RGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _convert_HSV->___lldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _average_RGBC->___lldiv
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   35223
                                             81 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                        _Timer0_init
                       _average_RGBC
                  _buggy_lights_init
                   _color_click_init
                      _colour_to_key
                        _convert_HSV
                    _initDCmotorsPWM
                         _initUSART4
                          _scale_RGB
                  _sendHSVvalSerial4
                     _sendIntSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5919
                                             54 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    6005
                                             54 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5897
                                             54 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5182
                                             28 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4357
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    4005
                                             10 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scale_RGB                                            3     2      1    6039
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convert_HSV                                         52    50      2    5869
                                             13 COMRAM    52    50      2
                            ___lldiv
                             ___lmul
                            _max_RGB
                            _min_RGB
 ---------------------------------------------------------------------------------
 (2) _min_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _max_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _colour_to_key                                        5     3      2    1084
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _average_RGBC                                        20    19      1    3088
                                             13 COMRAM    20    19      1
                            ___lldiv
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (2) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1834
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _average_RGBC
     ___lldiv
     _getRGBCval
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_to_key
   _convert_HSV
     ___lldiv
     ___lmul
     _max_RGB
     _min_RGB
   _initDCmotorsPWM
   _initUSART4
   _scale_RGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sendHSVvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendIntSerial4
     _sendStringSerial4
     _sprintf
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      5D       5       58.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F6      60        0.0%
DATA                 0      0      F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 12:00:07 2024

                 _turn180Delay 00B0                 _color_read_Red 2FA6                _color_read_Blue 3096  
              _trail_timer_low 0114                             l42 2832                             l27 3254  
                           l71 2FF4                             l80 3094                             l65 3226  
                           l74 3044                             l83 2FA4                             l68 330C  
                           l77 30E4                             l89 227A                             l99 2C52  
                 ___awdiv@sign 0006               _trail_timer_high 0128               _color_read_Clear 3046  
             _color_read_Green 2FF6                            l101 2C8C                            l104 2BD6  
                          l106 2C10                            l210 2B94                            l125 14E4  
                          l109 276A                            l311 32A6                            l320 3386  
                          l136 1946                            l305 327E                            l137 1948  
                          l314 3390                            l323 3364                            l308 3280  
                          l317 339A                            l326 31BE                            l457 332A  
                          l466 332E                            l475 2E9A                            l469 3342  
                          l478 32EC                            l486 2EF8                            l489 3130  
                          l762 2DC4                            l763 2DD4                            l685 337C  
                          l679 32CA                            l688 3370                            l785 2B04  
                          l778 2AF4                            l982 28F6                            l995 2A60  
                          _ISR 0008         ??_toggle_tricolour_LED 0001                            _abs 31C0  
                 ___awmod@sign 0006                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ?_convert_HSV 000E                   ___flmul@sign 001B  
                 ___flmul@temp 0026                   ___flmul@prod 0022                 min_RGB@min_val 0005  
                  _squareDelay 00AC                           ?_ISR 0001                   ___fltol@exp1 0031  
                         ?_abs 0007                           l1048 2694                           l3000 2860  
                         l3010 288E                           l3002 2868                           l1242 2CF8  
                         l1420 23C6                           l3020 28C8                           l3012 2896  
                         l3004 286C                           l3100 2E06                           l1252 2E30  
                         l1413 236A                           l1406 22D2                           l3030 28EE  
                         l3022 28CA                           l3014 28A4                           l3006 2874  
                         l3102 2E1C                           l3110 2908                           l4000 14E6  
                         l3024 28D0                           l3016 28AA                           l3008 2886  
                         l3040 29CC                           l3104 2E24                           l1520 33A2  
                         l3112 2918                           l1409 242E                           l1249 2D00  
                         l3130 335C                           l4010 1566                           l4002 14EA  
                         l3018 28C0                           l3026 28D6                           l3050 2A00  
                         l3042 29D0                           l3034 29B2                           l3106 2E2A  
                         l3122 31C0                           l3114 2922                           l1259 2E38  
                         l3140 3396                           l3132 3360                           l4020 15EA  
                         l4004 1506                           l4012 156A                           l4100 2B6E  
                         l1372 1C04                           l3028 28E6                           l3060 2A3A  
                         l3052 2A08                           l3044 29DE                           l3036 29B6  
                         l3124 31CE                           l3116 293E                           l3108 28F8  
                         l3300 1FAC                           l1365 1A0E                           l1509 29B0  
                         l1429 317C                           l3150 31BA                           l3142 3180  
                         l3126 3388                           l3134 337E                           l4030 166E  
                         l4014 1588                           l4022 15EE                           l4006 1522  
                         l4110 2B88                           l4102 2B70                           l1382 1D34  
                         l1374 1C7C                           l3054 2A16                           l3062 2A40  
                         l3046 29E6                           l3038 29C4                           l3070 2C8E  
                         l3118 2970                           l3310 1FF2                           l3302 1FB0  
                         l1470 1F16                           l1375 1C6A                           l1471 207E  
                         l3152 31BC                           l3144 3184                           l3128 338C  
                         l3136 3382                           l4040 16F2                           l4024 160C  
                         l4032 1672                           l4016 15A6                           l4008 1544  
                         l4112 2B92                           l4104 2B7A                           l3064 2A50  
                         l3056 2A2C                           l3048 29F8                           l3080 2CC6  
                         l3072 2C96                           l3304 1FC2                           l1369 1D72  
                         l3146 318C                           l3138 3392                           l4050 1772  
                         l4034 1690                           l4042 16F6                           l4026 162A  
                         l4018 15C8                           l4106 2B7C                           l3402 332E  
                         l3066 2A58                           l3058 2A34                           l3090 2CF2  
                         l3082 2CCC                           l3074 2CA8                           l3306 1FD6  
                         l3314 2008                           l3250 1DB8                           l3322 204C  
                         l3242 1D74                           l1490 2F4E                           l3410 2EFA  
                         l3148 3194                           l3420 3260                           l4060 17F2  
                         l4044 1712                           l4052 1776                           l4036 16AE  
                         l4028 164C                           l4108 2B86                           l4140 331A  
                         l3404 333E                           l3084 2CE2                           l3076 2CB0  
                         l3092 2DD6                           l3324 206E                           l3308 1FF0  
                         l3316 2038                           l3260 1E1E                           l3252 1DBC  
                         l3244 1D7C                           l3412 2EFE                           l3406 3374  
                         l4150 32B0                           l3350 30DC                           l3342 2FF6  
                         l3422 3266                           l3430 32F0                           l4070 1876  
                         l4054 1792                           l4062 17F6                           l4046 172E  
                         l4038 16D0                           l4142 3324                           l3086 2CEA  
                         l3078 2CB8                           l3094 2DE8                           l1494 31DA  
                         l3326 2076                           l3318 2040                           l3270 1E90  
                         l3262 1E28                           l3254 1DC6                           l3246 1DA2  
                         l3414 2F0C                           l3408 3378                           l4160 32C6  
                         l4152 32B2                           l3600 2A9C                           l3344 303C  
                         l3336 2FA6                           l3432 2F50                           l3424 3268  
                         l4080 18E0                           l4064 1814                           l4072 187A  
                         l4056 17AE                           l4048 1750                           l3440 2C72  
                         l4144 3326                           l4136 330E                           l3088 2CEC  
                         l3096 2DF0                           l3280 1EE0                           l3272 1EA2  
                         l3264 1E40                           l3256 1DE6                           l3248 1DAA  
                         l3416 2F26                           l4240 2430                           l1497 31F2  
                         l1489 2F46                           l4162 32C8                           l4154 32BC  
                         l3610 2AE4                           l3602 2AAA                           l3354 3046  
                         l3338 2FEC                           l3426 326A                           l3418 3256  
                         l4082 1900                           l4074 189A                           l4066 1832  
                         l4058 17D0                           l3442 2C84                           l3434 2C12  
                         l3450 2BC4                           l4090 2B06                           l4146 3328  
                         l4138 3318                           l3098 2DF8                           l3290 1F42  
                         l3282 1EE8                           l3274 1EB2                           l3266 1E70  
                         l3258 1E06                           l4170 3126                           l4250 24A2  
                         l4242 2476                           l4156 32C0                           l4148 32A8  
                         l3612 2AEE                           l3604 2AB4                           l3348 3096  
                         l3356 308C                           l3428 326C                           l4084 1920  
                         l4076 18BA                           l4068 1854                           l3436 2C20  
                         l3452 2BF6                           l4092 2B16                           l3700 1C02  
                         l3620 1966                           l3460 2E3E                           l3292 1F5A  
                         l3284 1F02                           l3276 1EC2                           l3268 1E8C  
                         l4172 32CC                           l4164 2E9C                           l4260 24CA  
                         l4252 24AA                           l4244 247E                           l4158 32C2  
                         l3606 2AD2                           l4086 1942                           l4078 18DC  
                         l3438 2C40                           l3454 2C08                           l3446 2B96  
                         l4094 2B3C                           l3710 1C62                           l3702 1C14  
                         l3630 19AC                           l3622 1976                           l3614 194A  
                         l3462 2E64                           l3294 1F68                           l3278 1ED2  
                         l3286 1F04                           l3470 3146                           l4174 32E2  
                         l4166 2EEE                           l4270 24D6                           l4262 24CE  
                         l4254 24B2                           l4246 2486                           l3608 2AE2  
                         l3448 2BA4                           l4096 2B40                           l3720 1CD0  
                         l3704 1C22                           l3640 19D8                           l3632 19B2  
                         l3624 1986                           l3616 1956                           l3800 230C  
                         l3464 2E68                           l3296 1F6C                           l3288 1F22  
                         l3472 314E                           l4168 30E6                           l4280 252A  
                         l4272 24D8                           l4264 24D0                           l4256 24C2  
                         l4248 249A                           l4098 2B64                           l3730 1D38  
                         l3714 1C8C                           l3722 1CD4                           l3706 1C26  
                         l3650 1A2E                           l3642 19E8                           l3634 19B8  
                         l3626 1996                           l3618 1964                           l3810 2360  
                         l3802 2314                           l3458 2E3A                           l3298 1F90  
                         l3474 3166                           l3466 3132                           l4290 255E  
                         l4282 2532                           l4274 24DA                           l4266 24D2  
                         l4258 24C6                           l3580 3366                           l3900 0E9A  
                         l3740 1D62                           l3732 1D48                           l3724 1CEE  
                         l3716 1C98                           l3708 1C34                           l3660 1A6E  
                         l3644 19F8                           l3636 19C6                           l3628 199C  
                         l3820 23D6                           l3812 239C                           l3804 2320  
                         l3476 3174                           l3468 313E                           l4292 2566  
                         l4284 253A                           l4276 24DE                           l4268 24D4  
                         l3590 2DA4                           l3582 2D6C                           l3910 0F48  
                         l3902 0EC4                           l3734 1D56                           l3726 1D02  
                         l3718 1CA6                           l3670 1AB8                           l3662 1A7A  
                         l3654 1A42                           l3646 19FE                           l3638 19C8  
                         l3750 25BA                           l3830 241E                           l3822 23DA  
                         l3814 23A8                           l3806 2352                           l4294 2570  
                         l4286 2546                           l4278 2526                           l3592 2A62  
                         l3840 31F8                           l3584 2D7C                           l3920 1008  
                         l3912 0F78                           l3904 0EC4                           l3736 1D58  
                         l3728 1D1C                           l3680 1B0A                           l3672 1AC4  
                         l3664 1A92                           l3656 1A4E                           l3648 1A1E  
                         l3760 2608                           l3752 25E4                           l3744 2590  
                         l3824 23FE                           l3816 23B6                           l3808 2354  
                         l4552 202A                           l4288 2556                           l3594 2A72  
                         l3850 20C8                           l3834 3228                           l3842 3202  
                         l3586 2D8A                           l3930 10BC                           l3922 103C  
                         l3906 0ED4                           l3914 0F84                           l3738 1D5E  
                         l3690 1B88                           l3682 1B1A                           l3674 1AD4  
                         l3666 1A9E                           l3658 1A58                           l3770 2634  
                         l3754 25E6                           l3746 25A6                           l3826 240E  
                         l3818 23D4                           l3596 2A88                           l3860 2154  
                         l3852 20D0                           l3844 3212                           l3588 2D9A  
                         l3940 1172                           l3932 10C8                           l3924 106C  
                         l3916 0F90                           l3908 0F14                           l3692 1BBE  
                         l3684 1B36                           l3676 1AE0                           l3668 1AAA  
                         l3780 2664                           l3756 25F6                           l3828 241C  
                         l3836 276C                           l3598 2A90                           l3870 2256  
                         l3854 20EE                           l3862 2156                           l3846 321C  
                         l3838 31F4                           l3950 1208                           l3934 10D2  
                         l3942 117E                           l3918 0FC4                           l3926 1074  
                         l3694 1BCC                           l3686 1B42                           l3678 1AF0  
                         l3782 2674                           l3766 2620                           l3758 25FA  
                         l3790 228E                           l2990 2834                           l3872 2268  
                         l3864 2166                           l3856 2110                           l3848 2080  
                         l3960 1294                           l3952 1238                           l3944 118A  
                         l3936 110E                           l3928 1096                           l3696 1BEA  
                         l3688 1B5E                           l3784 2684                           l3776 2648  
                         l3768 262A                           l3792 229C                           l2992 2838  
                         l2986 3280                           l3866 2236                           l3858 2132  
                         l3962 12A6                           l3970 1352                           l3946 1194  
                         l3938 1142                           l3954 1240                           l3890 0E42  
                         l3698 1BF4                           l3778 2654                           l3794 22E2  
                         l2994 2846                           l2988 3290                           l3868 2244  
                         l3980 1414                           l3972 135E                           l3964 12E2  
                         l3956 1262                           l3948 11D4                           l3892 0E52  
                         l3796 22F8                           l3788 227E                           l3884 2696  
                         l2996 284E                           l3990 147A                           l3974 1370  
                         l3966 1316                           l3958 1288                           l3982 141C  
                         l3894 0E5E                           l3886 0E1A                           l2998 2852  
                         l3992 14AA                           l3984 142E                           l3976 13B0  
                         l3968 1346                           l3896 0E70                           l3888 0E32  
                         l3994 14B2                           l3986 143A                           l3978 13E4  
                         l3898 0E7C                           l3996 14C0                           l3988 1446  
                         l3998 14D2                           STR_1 0E0F                           STR_2 0E14  
                         STR_5 0E01                           STR_6 0E04                           u2000 2846  
                         u2001 2842                           u2010 2860                           u2011 285C  
                         u2020 2886                           u2100 2A2C                           u2021 2882  
                         u2101 2A28                           u2030 28A4                           u2110 2A50  
                         u2031 28A0                           u2111 2A4C                           u3000 23B6  
                         u2040 28C0                           u2120 2CA8                           u2200 293E  
                         u3001 23B2                           u2041 28BC                           u2121 2CA4  
                         u2201 293A                           u3010 23C6                           u2050 28E6  
                         u2130 2CC6                           u2210 2970                           u3011 23C2  
                         u2051 28E2                           u2131 2CC2                           u2211 296C  
                         u3020 23D4                           u2060 29C4                           u2140 2CE2  
                         u2220 31CE                           u3021 23D0                           u2061 29C0  
                         u2141 2CDE                           u2221 31CA                           u2230 31A8  
                         u3030 240E                           u2070 29DE                           u2150 2DE8  
                         u3110 27E0                           u2231 31A0                           u3031 240A  
                         u2071 29DA                           u2151 2DE4                           u3111 27D8  
                         u3200 0E70                           u3040 241C                           u2080 29F8  
                         u2160 2E06                   _BAUD4CONbits 0EE9                           u3201 0E6C  
                         u3041 2418                           u2081 29F4                           u2161 2E02  
                         u3210 0E9A                           u2090 2A16                           u2170 2E1C  
                         u2410 1DA2                           u3130 27FE                           u3050 277E  
                         u3211 0E96                           u2091 2A12                           u2171 2E18  
                         u2411 1D9E                           u3131 27F6                           u3051 2776  
                         u3300 1506                           u3220 0EC4                           u2180 2908  
                         u2500 1F16                           u2420 1DE6                           u3108 27C0  
                         u3301 1502                           u3221 0EC0                           u2181 2904  
                         u2501 1F12                           u2421 1DE2                           u3310 1522  
                         u3230 1096                           u2190 2918                           u2510 1F42  
                         u2430 1E06                           u3150 2820                           u3070 279E  
                         u3311 151E                           u3231 1092                           u2191 2914  
                         u2511 1F3E                           u2431 1E02                           u3151 2818  
                         u3071 2796                           u2248 31AA                           u3400 164C  
                         u3320 1544                           u2600 2BF6                           u3240 10BC  
                         u2520 1FC2                           u2440 1E3C                           u3128 27E2  
                         u3401 1648                           u3321 1540                           u2601 2BF2  
                         u3241 10B8                           u2521 1FBE                           u2441 1E36  
                         u3170 2166                           u3410 166E                           u3330 1566  
                         u3250 1262                           u2610 2E60                           u2530 1FD2  
                         u2450 1E3E                           u3090 27BE                           _T2PR 0FBC  
                         u3171 2162                           u3411 166A                           u3331 1562  
                         u3251 125E                           u2531 1FCE                           u3091 27B6  
                         u3500 1792                           u3420 1690                           u3340 1588  
                         u3260 1288                           u2700 1976                           u2620 2E8A  
                         u2540 2004                           u2460 1EA2                           u3148 2800  
                         u3068 2780                           u3501 178E                           u3421 168C  
                         u3341 1584                           u3261 1284                           u2701 1972  
                         u2541 2000                           u2461 1E9E                           u3510 17AE  
                         u3430 16AE                           u3350 15A6                           u2710 1986  
                         u2550 333E                           u2630 2E9A                           u2470 1EB2  
                         u3511 17AA                           u3431 16AA                           u3351 15A2  
                         u2711 1982                           u2551 333A                           u2631 2E96  
                         u2471 1EAE                           u3600 18DC                           u3520 17D0  
                         u3440 16D0                           u3360 15C8                           u2640 2D8A  
                         u2800 1C34                           u2720 19C6                           u2480 1EC2  
                         u2560 2F46                           u3168 2822                           u3088 27A0  
                         u3601 18D8                           u3521 17CC                           u3441 16CC  
                         u3361 15C4                           u2641 2D86                           u2801 1C30  
                         u2721 19C2                           u2617 2E56                           u2481 1EBE  
                         u2561 2F42                           u3610 1900                           u3530 17F2  
                         u3450 16F2                           u3370 15EA                           u2650 2DC4  
                         u2570 2C40                           u3290 142E                           u2810 1C62  
                         u2730 19D8                           u2490 1ED2                           u3611 18FC  
                         u3531 17EE                           u3451 16EE                           u3371 15E6  
                         u2651 2DC0                           u2571 2C3C                           u3291 142A  
                         u3275 1296                           u2811 1C5E                           u2731 19D4  
                         u2627 2E80                           u2491 1ECE                           u2660 2A88  
                         u3620 1920                           u3540 1814                           u3460 1712  
                         u3380 160C                           u2580 2C72                           u2820 1C78  
                         u2740 19E8                           u2900 2608                           u2661 2A84  
                         u3621 191C                           u3541 1810                           u3461 170E  
                         u3381 1608                           u2581 2C6E                           u3285 1360  
                         u2821 1C74                           u2741 19E4                           u2901 2604  
                         u2670 2AAA                           u3630 1942                           u3550 1832  
                         u3470 172E                           u3390 162A                           u2590 2BC4  
                         u2830 1C8C                           u2750 1A1E                           u2910 261C  
                         u3710 2514                           u2671 2AA6                           u3631 193E  
                         u3551 182E                           u3471 172A                           u3391 1626  
                         u2591 2BC0                           u2831 1C88                           u2751 1A1A  
                         u2911 2618                           u3711 250C                           u2680 2AD2  
                         u3560 1854                           u3480 1750                           u2840 1CA6  
                         u2760 1A2E                           u2920 2644                           u2681 2ACE  
                         u3561 1850                           u3481 174C                           u2841 1CA2  
                         u2761 1A2A                           u2921 2640                           u3570 1876  
                         u3490 1772                           u2850 1CEE                           u2770 1BA8  
                         u2690 1964                           u2930 2664                           u3571 1872  
                         u3491 176E                           u2851 1CEA                           u2691 1960  
                         u2931 2660                           u1980 3290                           u3580 189A  
                         u2860 1D1C                           u2780 1C02                           u2940 2674  
                         u3708 24F4                           u1981 328C                           u3581 1896  
                         u2861 1D18                           u2781 1BFE                           u2941 2670  
                         u1990 32A6                           u3590 18BA                           u2870 1D56  
                         u2790 1C22                           u2950 228E                           u1991 32A2  
                         u3591 18B6                           u2871 1D52                           u2791 1C1E  
                         u2775 1B9E                           u2951 228A                           u2880 25A6  
                         u2960 229C                           u3728 2516                           u2881 25A2  
                         u2961 2298                           u2890 25DA                           u2970 22F8  
                         u3690 24F2                           u2971 22F4                           u3691 24EA  
                         u2980 234E                           u2981 234A                           u2990 2398  
                         u2895 25D0                           u2991 2394                           u3887 257A  
                         u3897 3208                  _colour_to_key 14E6                           abs@a 0007  
                         _dbuf 0060                           _main 2430                           _prec 0084  
                         _nout 0080                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005E             _sendRGBCvalSerial4 2E9C                           prodh 0FF4  
                         prodl 0FF3                 ??_average_RGBC 000F                           start 003C  
           average_RGBC@temp_B 001A             average_RGBC@temp_C 001E             average_RGBC@temp_G 0016  
           average_RGBC@temp_R 0012         __end_of_color_read_Red 2FF6                   ___param_bank 0000  
                        ??_ISR 0001            ?_sendRGBCvalSerial4 0037                          ??_abs 0009  
                write_timer@tH 0002                  write_timer@tL 0001                 _sendIntSerial4 32CC  
                ___fltol@sign1 0030                          ?_main 0001             _timer_high_pointer 0054  
              __end_of___awdiv 28F8                __end_of___awmod 2A62                __end_of___flmul 1D74  
              __end_of___fltol 2696                __end_of___lldiv 2B06                ___awdiv@divisor 0003  
              __end_of___lwdiv 2D02                __end_of___lwmod 2E3A                          i2l721 0038  
              ___awdiv@counter 0005                   vfpfcnvrt@cnt 0011                   vfpfcnvrt@fmt 000C  
                        _TMR0H 0FD4                          _TMR0L 0FD3            ___lmul@multiplicand 0005  
      __end_of_sendCharSerial4 3344     __end_of_I2C_2_Master_Start 3392                    _write_timer 3372  
   __end_of_I2C_2_Master_Write 3366                __end_of_max_RGB 2C8E                __end_of_min_RGB 2C12  
                  _turningGear 00BC                          _flags 0086           ??_sendRGBCvalSerial4 0038  
                        _fputc 28F8                          _width 0082                          _putch 33A2  
                        main@k 0087                 ?_colour_to_key 0001              _turnRight135Delay 00B2  
                        tablat 0FF5                _turnLeft90Delay 00B8                          plusw2 0FDB  
                        ttemp5 005F                          ttemp6 0062                          ttemp7 0066  
                        status 0FD8                          wtemp8 005F                __end_of_sprintf 317E  
      __end_of_color_read_Blue 30E6                  average_RGBC@i 0011                  average_RGBC@p 000E  
        _I2C_2_Master_RepStart 3392                ?_color_read_Red 0005                __initialization 2D02  
                 __end_of_main 2590         __end_of_sendIntSerial4 32EE                         ??_main 0052  
                __activetblptr 0003                         ?_fputc 0001                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l2940 001A                         i2l2942 002A                         i2l2944 0032  
                       i2l2946 0036                         i2l2938 000A                         _RG6PPS 0E88  
                vfpfcnvrt@done 0010       __end_of_color_click_init 3228                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 2430               _turnLeft135Delay 00B4  
                ??_Timer0_init 0003                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001C                   convert_HSV@C 0040                   convert_HSV@M 003E  
                       ___lmul 2D6C                   convert_HSV@m 001A                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___flmul 0017                      ??___fltol 002C  
                    ??___lldiv 0009                      ??___lwdiv 0005                      ??___lwmod 0005  
              ?_sendIntSerial4 0037                         clear_0 2D48                         clear_1 2D54  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                      ??_max_RGB 0003                      ??_min_RGB 0003  
                       fputc@c 0001                   __pdataCOMRAM 0054              _timer_low_pointer 00AA  
         __end_of_average_RGBC 227C                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001                ??_colour_to_key 0003               __end_of_vfprintf 2F50  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0028            convert_HSV@temp_610 0028  
          convert_HSV@temp_611 002C            convert_HSV@temp_612 0030            convert_HSV@temp_613 0034  
          convert_HSV@temp_614 0020            convert_HSV@temp_609 0038                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001              _buggy_lights_init 3228  
                   __accesstop 0060        __end_of__initialization 2D62       __end_of_color_read_Clear 3096  
     __end_of_color_read_Green 3046         ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001  
                ___rparam_used 0001                     ___fltol@f1 0028               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 3344            ??_buggy_lights_init 0001  
                __end_of_fputc 29B2                  __end_of_putch 33A4            __end_of_Timer0_init 32CC  
                      ??_fputc 0004      __end_of_buggy_lights_init 3256                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100                     _getRGBCval 2F50  
            _color_writetoaddr 32EE                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003  
                      ?___lmul 0001                 ___lmul@product 0009            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                 ?_write_timer 0001                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 330E  
           _I2C_2_Master_Start 3388                     _initUSART4 330E             _I2C_2_Master_Write 335A  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 32A8        sendStringSerial4@string 0002                        ___awdiv 2834  
                      ___awmod 29B2                        ___flmul 194A                        ___fltol 2590  
                      ___lldiv 2A62                  convert_HSV@p1 000E            ?_I2C_2_Master_Start 0001  
                convert_HSV@p2 000F                        ___lwdiv 2C8E            ?_I2C_2_Master_Write 0001  
                      ___lwmod 2DD6                      ?_vfprintf 0019                   __psmallconst 0E00  
                      __pcinit 2D02                        __ramtop 0E00                        __ptext0 2430  
                      __ptext1 276C                        __ptext2 2E9C                        __ptext3 32CC  
                      __ptext4 30E6                        __ptext5 3132                        __ptext6 2EFA  
                      __ptext7 1D74                        __ptext8 28F8                        __ptext9 33A2  
                      _max_RGB 2C12                        _min_RGB 2B96                      _T2CONbits 0FBD  
                   ??___xxtofl 0005               ___awmod@dividend 0001              __end_of_scale_RGB 276C  
                    _T2HLTbits 0FBE                        _sprintf 3132           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 2D62              _sendHSVvalSerial4 30E6  
                  ?_getRGBCval 000C                        fputc@fp 0003              ?_color_click_init 0001  
           ?_sendHSVvalSerial4 0037                ___lldiv@divisor 0005                colour_to_key@p1 0001  
              colour_to_key@p2 0002             ??_color_click_init 0005               ??_sendIntSerial4 0039  
              ___lldiv@counter 000D                   _average_RGBC 2080              __end_of_vfpfcnvrt 2080  
          ??_sendHSVvalSerial4 0038           convert_HSV@hue_scale 003C                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0014                     ??_vfprintf 001C  
              _initDCmotorsPWM 2B06           sendIntSerial4@string 0039           convert_HSV@sat_scale 0018  
                ___xxtofl@sign 0009                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88      __end_of_sendHSVvalSerial4 3132  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001                     main@motorL 0088  
                   main@motorR 0091             ??_color_read_Clear 0007             ??_color_read_Green 0007  
               __end_of___lmul 2DD6                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0013  
                  vfpfcnvrt@fp 000B                  __pidataCOMRAM 339C      sendRGBCvalSerial4@col_val 0037  
     sendHSVvalSerial4@col_val 0037            color_read_Clear@tmp 000A            start_initialization 2D02  
                ??_convert_HSV 0010                    __end_of_ISR 003C                    __end_of_abs 31F4  
             _turnRight90Delay 00B6      sendRGBCvalSerial4@tempStr 0038       sendHSVvalSerial4@tempStr 0038  
        __end_of_colour_to_key 194A            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 2B96  
                  vfprintf@fmt 001A                       ??___lmul 0009                    __pdataBANK0 00A8  
                   scale_RGB@p 0032                 max_RGB@max_val 0005                      ___flmul@a 0013  
                    ___flmul@b 000F                    __pbssCOMRAM 005A                  __pcstackBANK0 0087  
              convert_HSV@temp 0024                 _wall_threshold 00BA            __end_of_convert_HSV 14E6  
 __end_of_toggle_tricolour_LED 2834               ___lwdiv@dividend 0001                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___flmul 000F                       ?___fltol 0028                       ?___lldiv 0001  
                     ?___lwdiv 0001                       ?___lwmod 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                       ?_max_RGB 0001                       ?_min_RGB 0001  
                  __smallconst 0E00              _I2C_2_Master_Idle 3280              _I2C_2_Master_Init 3256  
            _I2C_2_Master_Read 317E              _I2C_2_Master_Stop 337E             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 0005                  _headbuttDelay 00AE       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 001D                      _scale_RGB 2696                      _rampDelay 0058  
                 ??_getRGBCval 000D              _sendStringSerial4 2E3A            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                       _PIE0bits 0E29             ?_sendStringSerial4 0002  
                ??_reset_timer 0003                      _lost_flag 005B                       _PIR0bits 0E33  
                     i2u194_40 001A                       i2u194_41 0016                       i2u195_40 002A  
                     i2u195_41 0026                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                      _returning 005D                      _vfpfcnvrt 1D74  
    __end_of_I2C_2_Master_Idle 32A8      __end_of_I2C_2_Master_Init 3280      __end_of_I2C_2_Master_Read 31C0  
    __end_of_I2C_2_Master_Stop 3388    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 2FA6  
   __end_of_sendRGBCvalSerial4 2EFA              ??_color_read_Blue 0007                    _convert_HSV 0E1A  
              main@RGBC_colour 00A0                     vfpfcnvrt@c 0018              ___lmul@multiplier 0001  
                    copy_data0 2D16                      copy_data1 2D36      __end_of_sendStringSerial4 2E9C  
                   ?_scale_RGB 0032  __end_of_I2C_2_Master_RepStart 339C             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001B  
                     __Lrparam 0000                     vfprintf@fp 0019                   _sample_count 0059  
                   ?_vfpfcnvrt 000B            __end_of_reset_timer 3372                 convert_HSV@hue 001E  
               convert_HSV@sat 001C                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001F                     sprintf@ret 0028                       ___xxtofl 227C  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6           _toggle_tricolour_LED 276C  
              ___lwdiv@divisor 0003             __end_of_initUSART4 332C                ___lwdiv@counter 0007  
                     __ptext10 31C0                       __ptext11 2DD6                       __ptext20 194A  
                     __ptext12 2C8E                       __ptext21 330E                       __ptext13 29B2  
                     __ptext30 3256                       __ptext22 2B06                       __ptext14 2834  
                     __ptext31 3228                       __ptext23 0E1A                       __ptext15 2E3A  
                     __ptext40 3388                       __ptext32 2080                       __ptext24 2B96  
                     __ptext16 332C                       __ptext41 3392                       __ptext33 2F50  
                     __ptext25 2C12                       __ptext17 2696                       __ptext42 317E  
                     __ptext34 2FA6                       __ptext26 2D6C                       __ptext18 227C  
                     __ptext43 3280                       __ptext35 2FF6                       __ptext27 14E6  
                     __ptext19 2590                       __ptext44 2A62                       __ptext36 3046  
                     __ptext28 31F4                       __ptext45 32A8                       __ptext37 3096  
                     __ptext29 32EE                       __ptext46 3366                       __ptext38 335A  
                     __ptext47 3372                       __ptext39 337E                    getRGBCval@p 000C  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005E                       _vfprintf 2EFA  
                     max_RGB@p 0001                       min_RGB@p 0001                     _INTCONbits 0FF2  
        ?_toggle_tricolour_LED 0001                  ??_write_timer 0002                    ??_scale_RGB 0033  
                     intlevel2 0000                      sprintf@ap 002A                   _topGearRight 0056  
            _manoeuvre_pointer 00A8               ___lwmod@dividend 0001               ___lldiv@dividend 0001  
             colour_to_key@key 0005                 main@HSV_colour 009A                    _reset_timer 3366  
                  ??_vfpfcnvrt 000E               _color_click_init 31F4          sendIntSerial4@integer 0037  
                  _topGearLeft 0057                       sprintf@f 002B                       sprintf@s 001D  
                   _SSP2DATPPS 0E1D               ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C  
              ___lwmod@divisor 0003                ___lwmod@counter 0005                _trail_manoeuvre 0100  
                  _return_flag 005C                _manoeuvre_count 005A                     _TX4STAbits 0EE8  
              _sendCharSerial4 332C            __end_of_write_timer 337E                  ?_average_RGBC 000E  
