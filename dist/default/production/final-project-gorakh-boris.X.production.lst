

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 17:15:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 18/08/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F67K40 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104                           	psect	idataCOMRAM
   105   002ED6                     __pidataCOMRAM:
   106                           	callstack 0
   107                           
   108                           ;initializer for _timer_high_pointer
   109   002ED6  28                 	db	low _trail_timer_high
   110   002ED7  01                 	db	high _trail_timer_high
   111                           
   112                           ;initializer for _topGearRight
   113   002ED8  14                 	db	20
   114                           
   115                           ;initializer for _topGearLeft
   116   002ED9  14                 	db	20
   117                           
   118                           ;initializer for _rampDelay
   119   002EDA  08                 	db	8
   120                           
   121                           ;initializer for _sample_count
   122   002EDB  14                 	db	20
   123                           
   124                           	psect	idataBANK0
   125   002E7E                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _manoeuvre_pointer
   129   002E7E  00                 	db	low _trail_manoeuvre
   130   002E7F  01                 	db	high _trail_manoeuvre
   131                           
   132                           ;initializer for _timer_low_pointer
   133   002E80  14                 	db	low _trail_timer_low
   134   002E81  01                 	db	high _trail_timer_low
   135                           
   136                           ;initializer for _squareDelay
   137   002E82  012C               	dw	300
   138                           
   139                           ;initializer for _headbuttDelay
   140   002E84  0046               	dw	70
   141                           
   142                           ;initializer for _turn180Delay
   143   002E86  01FE               	dw	510
   144                           
   145                           ;initializer for _turnRight135Delay
   146   002E88  012C               	dw	300
   147                           
   148                           ;initializer for _turnLeft135Delay
   149   002E8A  012C               	dw	300
   150                           
   151                           ;initializer for _turnRight90Delay
   152   002E8C  00AF               	dw	175
   153                           
   154                           ;initializer for _turnLeft90Delay
   155   002E8E  00AF               	dw	175
   156                           
   157                           ;initializer for _wall_threshold
   158   002E90  012C               	dw	300
   159                           
   160                           ;initializer for _turningGear
   161   002E92  2A                 	db	42
   162   000000                     _TMR0H	set	4052
   163   000000                     _TX4REG	set	3812
   164   000000                     _RC4STAbits	set	3815
   165   000000                     _SP4BRGH	set	3814
   166   000000                     _LATEbits	set	3965
   167   000000                     _TRISEbits	set	3973
   168   000000                     _LATGbits	set	3967
   169   000000                     _TRISGbits	set	3975
   170   000000                     _LATFbits	set	3966
   171   000000                     _LATHbits	set	3968
   172   000000                     _TRISFbits	set	3974
   173   000000                     _TRISHbits	set	3976
   174   000000                     _SSP2CON2bits	set	3802
   175   000000                     _RX4PPS	set	3605
   176   000000                     _SSP2CLKPPS	set	3612
   177   000000                     _SSP2DATPPS	set	3613
   178   000000                     _RC7PPS	set	3689
   179   000000                     _RE2PPS	set	3700
   180   000000                     _LATAbits	set	3961
   181   000000                     _LATDbits	set	3964
   182   000000                     _TRISDbits	set	3972
   183   000000                     _T2PR	set	4028
   184   000000                     _T2CONbits	set	4029
   185   000000                     _CCPR2H	set	4006
   186   000000                     _CCPR1H	set	4010
   187   000000                     _TRISCbits	set	3971
   188   000000                     _TRISAbits	set	3969
   189   000000                     _LATCbits	set	3963
   190   000000                     _RE4PPS	set	3702
   191   000000                     _RG6PPS	set	3720
   192   000000                     _RD5PPS	set	3695
   193   000000                     _ANSELDbits	set	3751
   194   000000                     _SSP2ADD	set	3798
   195   000000                     _SSP2CON1bits	set	3801
   196   000000                     _CCPR4H	set	3873
   197   000000                     _CCPR3H	set	3877
   198   000000                     _TMR0L	set	4051
   199   000000                     _T0CON0bits	set	4053
   200   000000                     _T0CON1bits	set	4054
   201   000000                     _T2CLKCONbits	set	4031
   202   000000                     _T2HLTbits	set	4030
   203   000000                     _CCP1CONbits	set	4011
   204   000000                     _CCPTMRS0bits	set	4013
   205   000000                     _CCP2CONbits	set	4007
   206   000000                     _CCP3CONbits	set	3878
   207   000000                     _CCP4CONbits	set	3874
   208   000000                     _RC4REG	set	3811
   209   000000                     _SP4BRGL	set	3813
   210   000000                     _TX4STAbits	set	3816
   211   000000                     _BAUD4CONbits	set	3817
   212   000000                     _SSP2CON2	set	3802
   213   000000                     _SSP2STAT	set	3800
   214   000000                     _ANSELFbits	set	3764
   215   000000                     _SSP2BUF	set	3797
   216   000000                     _PIE0bits	set	3625
   217   000000                     _PIR4bits	set	3639
   218   000000                     _RC0PPS	set	3682
   219   000000                     _RD6PPS	set	3696
   220   000000                     _INTCONbits	set	4082
   221   000000                     _PIR0bits	set	3635
   222                           
   223                           	psect	smallconst
   224   000E00                     __psmallconst:
   225                           	callstack 0
   226   000E00  00                 	db	0
   227   000E01                     STR_5:
   228                           
   229                           ; BSR set to: 14
   230   000E01  25                 	db	37
   231   000E02  75                 	db	117	;'u'
   232   000E03  20                 	db	32
   233   000E04  25                 	db	37
   234   000E05  75                 	db	117	;'u'
   235   000E06  20                 	db	32
   236   000E07  25                 	db	37
   237   000E08  75                 	db	117	;'u'
   238   000E09  20                 	db	32
   239   000E0A  25                 	db	37
   240   000E0B  75                 	db	117	;'u'
   241   000E0C  20                 	db	32
   242   000E0D  0D                 	db	13
   243   000E0E  00                 	db	0
   244   000E0F                     STR_1:
   245                           
   246                           ; BSR set to: 14
   247   000E0F  25                 	db	37
   248   000E10  64                 	db	100	;'d'
   249   000E11  20                 	db	32
   250   000E12  0D                 	db	13
   251   000E13  00                 	db	0
   252   000E14                     STR_2:
   253                           
   254                           ; BSR set to: 14
   255   000E14  25                 	db	37
   256   000E15  64                 	db	100	;'d'
   257   000E16  20                 	db	32
   258   000E17  00                 	db	0
   259   000E18  00                 	db	0	; dummy byte at the end
   260   000000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264   00285E                     __pcinit:
   265                           	callstack 0
   266   00285E                     start_initialization:
   267                           	callstack 0
   268   00285E                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK0 (21 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273   00285E  0E7E               	movlw	low __pidataBANK0
   274   002860  6EF6               	movwf	tblptrl,c
   275   002862  0E2E               	movlw	high __pidataBANK0
   276   002864  6EF7               	movwf	tblptrh,c
   277   002866  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278   002868  6EF8               	movwf	tblptru,c
   279   00286A  EE00  F0A7         	lfsr	0,__pdataBANK0
   280   00286E  EE10 F015          	lfsr	1,21
   281   002872                     copy_data0:
   282   002872  0009               	tblrd		*+
   283   002874  CFF5 FFEE          	movff	tablat,postinc0
   284   002878  50E5               	movf	postdec1,w,c
   285   00287A  50E1               	movf	fsr1l,w,c
   286   00287C  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (6 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290   00287E  0ED6               	movlw	low __pidataCOMRAM
   291   002880  6EF6               	movwf	tblptrl,c
   292   002882  0E2E               	movlw	high __pidataCOMRAM
   293   002884  6EF7               	movwf	tblptrh,c
   294   002886  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295   002888  6EF8               	movwf	tblptru,c
   296   00288A  EE00  F054         	lfsr	0,__pdataCOMRAM
   297   00288E  EE10 F006          	lfsr	1,6
   298   002892                     copy_data1:
   299   002892  0009               	tblrd		*+
   300   002894  CFF5 FFEE          	movff	tablat,postinc0
   301   002898  50E5               	movf	postdec1,w,c
   302   00289A  50E1               	movf	fsr1l,w,c
   303   00289C  E1FA               	bnz	copy_data1
   304                           
   305                           ; Clear objects allocated to BANK1 (60 bytes)
   306   00289E  EE01  F000         	lfsr	0,__pbssBANK1
   307   0028A2  0E3C               	movlw	60
   308   0028A4                     clear_0:
   309   0028A4  6AEE               	clrf	postinc0,c
   310   0028A6  06E8               	decf	wreg,f,c
   311   0028A8  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (39 bytes)
   314   0028AA  EE00  F060         	lfsr	0,__pbssBANK0
   315   0028AE  0E27               	movlw	39
   316   0028B0                     clear_1:
   317   0028B0  6AEE               	clrf	postinc0,c
   318   0028B2  06E8               	decf	wreg,f,c
   319   0028B4  E1FD               	bnz	clear_1
   320                           
   321                           ; Clear objects allocated to COMRAM (4 bytes)
   322   0028B6  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   323   0028B8  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   324   0028BA  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   325   0028BC  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   326   0028BE                     end_of_initialization:
   327                           	callstack 0
   328   0028BE                     __end_of__initialization:
   329                           	callstack 0
   330   0028BE  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331   0028C0  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332   0028C2  0100               	movlb	0
   333   0028C4  EFE4  F00F         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336   00005A                     __pbssCOMRAM:
   337                           	callstack 0
   338   00005A                     _manoeuvre_count:
   339                           	callstack 0
   340   00005A                     	ds	1
   341   00005B                     _lost_flag:
   342                           	callstack 0
   343   00005B                     	ds	1
   344   00005C                     _return_flag:
   345                           	callstack 0
   346   00005C                     	ds	1
   347   00005D                     _returning:
   348                           	callstack 0
   349   00005D                     	ds	1
   350                           
   351                           	psect	dataCOMRAM
   352   000054                     __pdataCOMRAM:
   353                           	callstack 0
   354   000054                     _timer_high_pointer:
   355                           	callstack 0
   356   000054                     	ds	2
   357   000056                     _topGearRight:
   358                           	callstack 0
   359   000056                     	ds	1
   360   000057                     _topGearLeft:
   361                           	callstack 0
   362   000057                     	ds	1
   363   000058                     _rampDelay:
   364                           	callstack 0
   365   000058                     	ds	1
   366   000059                     _sample_count:
   367                           	callstack 0
   368   000059                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371   000060                     __pbssBANK0:
   372                           	callstack 0
   373   000060                     _dbuf:
   374                           	callstack 0
   375   000060                     	ds	32
   376   000080                     _nout:
   377                           	callstack 0
   378   000080                     	ds	2
   379   000082                     _width:
   380                           	callstack 0
   381   000082                     	ds	2
   382   000084                     _prec:
   383                           	callstack 0
   384   000084                     	ds	2
   385   000086                     _flags:
   386                           	callstack 0
   387   000086                     	ds	1
   388                           
   389                           	psect	dataBANK0
   390   0000A7                     __pdataBANK0:
   391                           	callstack 0
   392   0000A7                     _manoeuvre_pointer:
   393                           	callstack 0
   394   0000A7                     	ds	2
   395   0000A9                     _timer_low_pointer:
   396                           	callstack 0
   397   0000A9                     	ds	2
   398   0000AB                     _squareDelay:
   399                           	callstack 0
   400   0000AB                     	ds	2
   401   0000AD                     _headbuttDelay:
   402                           	callstack 0
   403   0000AD                     	ds	2
   404   0000AF                     _turn180Delay:
   405                           	callstack 0
   406   0000AF                     	ds	2
   407   0000B1                     _turnRight135Delay:
   408                           	callstack 0
   409   0000B1                     	ds	2
   410   0000B3                     _turnLeft135Delay:
   411                           	callstack 0
   412   0000B3                     	ds	2
   413   0000B5                     _turnRight90Delay:
   414                           	callstack 0
   415   0000B5                     	ds	2
   416   0000B7                     _turnLeft90Delay:
   417                           	callstack 0
   418   0000B7                     	ds	2
   419   0000B9                     _wall_threshold:
   420                           	callstack 0
   421   0000B9                     	ds	2
   422   0000BB                     _turningGear:
   423                           	callstack 0
   424   0000BB                     	ds	1
   425                           
   426                           	psect	bssBANK1
   427   000100                     __pbssBANK1:
   428                           	callstack 0
   429   000100                     _trail_manoeuvre:
   430                           	callstack 0
   431   000100                     	ds	20
   432   000114                     _trail_timer_low:
   433                           	callstack 0
   434   000114                     	ds	20
   435   000128                     _trail_timer_high:
   436                           	callstack 0
   437   000128                     	ds	20
   438                           
   439                           	psect	cstackBANK0
   440   000087                     __pcstackBANK0:
   441                           	callstack 0
   442   000087                     main@HSV_colour:
   443                           	callstack 0
   444                           
   445                           ; 6 bytes @ 0x0
   446   000087                     	ds	6
   447   00008D                     main@motorL:
   448                           	callstack 0
   449                           
   450                           ; 9 bytes @ 0x6
   451   00008D                     	ds	9
   452   000096                     main@motorR:
   453                           	callstack 0
   454                           
   455                           ; 9 bytes @ 0xF
   456   000096                     	ds	9
   457   00009F                     main@RGBC_colour:
   458                           	callstack 0
   459                           
   460                           ; 8 bytes @ 0x18
   461   00009F                     	ds	8
   462                           
   463                           	psect	cstackCOMRAM
   464   000001                     __pcstackCOMRAM:
   465                           	callstack 0
   466   000001                     ??_toggle_tricolour_LED:
   467   000001                     ??_I2C_2_Master_Idle:
   468   000001                     ?_max_RGB:
   469                           	callstack 0
   470   000001                     ?_min_RGB:
   471                           	callstack 0
   472   000001                     ?___awdiv:
   473                           	callstack 0
   474   000001                     ?___awmod:
   475                           	callstack 0
   476   000001                     ?___lwdiv:
   477                           	callstack 0
   478   000001                     ?___lwmod:
   479                           	callstack 0
   480   000001                     ?___lmul:
   481                           	callstack 0
   482   000001                     ?___lldiv:
   483                           	callstack 0
   484   000001                     ?___xxtofl:
   485                           	callstack 0
   486   000001                     max_RGB@p:
   487                           	callstack 0
   488   000001                     min_RGB@p:
   489                           	callstack 0
   490   000001                     sendCharSerial4@charToSend:
   491                           	callstack 0
   492   000001                     write_timer@tL:
   493                           	callstack 0
   494   000001                     initDCmotorsPWM@PWMperiod:
   495                           	callstack 0
   496   000001                     ___awdiv@dividend:
   497                           	callstack 0
   498   000001                     ___awmod@dividend:
   499                           	callstack 0
   500   000001                     ___lwdiv@dividend:
   501                           	callstack 0
   502   000001                     ___lwmod@dividend:
   503                           	callstack 0
   504   000001                     fputc@c:
   505                           	callstack 0
   506   000001                     ___lmul@multiplier:
   507                           	callstack 0
   508   000001                     ___lldiv@dividend:
   509                           	callstack 0
   510   000001                     ___xxtofl@val:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x0
   514   000001                     	ds	1
   515   000002                     ??_I2C_2_Master_Read:
   516   000002                     I2C_2_Master_Write@data_byte:
   517                           	callstack 0
   518   000002                     write_timer@tH:
   519                           	callstack 0
   520   000002                     sendStringSerial4@string:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x1
   524   000002                     	ds	1
   525   000003                     color_writetoaddr@value:
   526                           	callstack 0
   527   000003                     I2C_2_Master_Read@ack:
   528                           	callstack 0
   529   000003                     fputc@fp:
   530                           	callstack 0
   531   000003                     ___awdiv@divisor:
   532                           	callstack 0
   533   000003                     ___awmod@divisor:
   534                           	callstack 0
   535   000003                     ___lwdiv@divisor:
   536                           	callstack 0
   537   000003                     ___lwmod@divisor:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2
   541   000003                     	ds	1
   542   000004                     ??_fputc:
   543   000004                     color_writetoaddr@address:
   544                           	callstack 0
   545   000004                     I2C_2_Master_Read@tmp:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x3
   549   000004                     	ds	1
   550   000005                     ??_color_click_init:
   551   000005                     ??___xxtofl:
   552   000005                     ?_color_read_Red:
   553                           	callstack 0
   554   000005                     ?_color_read_Green:
   555                           	callstack 0
   556   000005                     ?_color_read_Blue:
   557                           	callstack 0
   558   000005                     ?_color_read_Clear:
   559                           	callstack 0
   560   000005                     ___awdiv@counter:
   561                           	callstack 0
   562   000005                     ___awmod@counter:
   563                           	callstack 0
   564   000005                     ___lwmod@counter:
   565                           	callstack 0
   566   000005                     max_RGB@max_val:
   567                           	callstack 0
   568   000005                     min_RGB@min_val:
   569                           	callstack 0
   570   000005                     ___lwdiv@quotient:
   571                           	callstack 0
   572   000005                     ___lmul@multiplicand:
   573                           	callstack 0
   574   000005                     ___lldiv@divisor:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x4
   578   000005                     	ds	1
   579   000006                     ___awdiv@sign:
   580                           	callstack 0
   581   000006                     ___awmod@sign:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x5
   585   000006                     	ds	1
   586   000007                     ??_color_read_Red:
   587   000007                     ??_color_read_Green:
   588   000007                     ??_color_read_Blue:
   589   000007                     ??_color_read_Clear:
   590   000007                     ?_abs:
   591                           	callstack 0
   592   000007                     ___lwdiv@counter:
   593                           	callstack 0
   594   000007                     ___awdiv@quotient:
   595                           	callstack 0
   596   000007                     abs@a:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x6
   600   000007                     	ds	2
   601   000009                     ??_abs:
   602   000009                     ___xxtofl@sign:
   603                           	callstack 0
   604   000009                     ___lmul@product:
   605                           	callstack 0
   606   000009                     ___lldiv@quotient:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x8
   610   000009                     	ds	1
   611   00000A                     ___xxtofl@exp:
   612                           	callstack 0
   613   00000A                     color_read_Red@tmp:
   614                           	callstack 0
   615   00000A                     color_read_Green@tmp:
   616                           	callstack 0
   617   00000A                     color_read_Blue@tmp:
   618                           	callstack 0
   619   00000A                     color_read_Clear@tmp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x9
   623   00000A                     	ds	1
   624   00000B                     ?_vfpfcnvrt:
   625                           	callstack 0
   626   00000B                     vfpfcnvrt@fp:
   627                           	callstack 0
   628   00000B                     ___xxtofl@arg:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0xA
   632   00000B                     	ds	1
   633   00000C                     getRGBCval@p:
   634                           	callstack 0
   635   00000C                     vfpfcnvrt@fmt:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0xB
   639   00000C                     	ds	1
   640   00000D                     ___lldiv@counter:
   641                           	callstack 0
   642   00000D                     vfpfcnvrt@ap:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0xC
   646   00000D                     	ds	1
   647   00000E                     ??_vfpfcnvrt:
   648   00000E                     average_RGBC@p:
   649                           	callstack 0
   650   00000E                     convert_HSV@p1:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0xD
   654   00000E                     	ds	1
   655   00000F                     ??_average_RGBC:
   656   00000F                     ?___flmul:
   657                           	callstack 0
   658   00000F                     convert_HSV@p2:
   659                           	callstack 0
   660   00000F                     ___flmul@b:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0xE
   664   00000F                     	ds	1
   665   000010                     ??_convert_HSV:
   666   000010                     vfpfcnvrt@done:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0xF
   670   000010                     	ds	1
   671   000011                     average_RGBC@i:
   672                           	callstack 0
   673   000011                     vfpfcnvrt@cnt:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x10
   677   000011                     	ds	1
   678   000012                     average_RGBC@temp_R:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x11
   682   000012                     	ds	1
   683   000013                     vfpfcnvrt@cp:
   684                           	callstack 0
   685   000013                     ___flmul@a:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x12
   689   000013                     	ds	1
   690   000014                     vfpfcnvrt@convarg:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x13
   694   000014                     	ds	2
   695   000016                     average_RGBC@temp_G:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x15
   699   000016                     	ds	1
   700   000017                     ??___flmul:
   701                           
   702                           ; 1 bytes @ 0x16
   703   000017                     	ds	1
   704   000018                     vfpfcnvrt@c:
   705                           	callstack 0
   706   000018                     convert_HSV@sat_scale:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x17
   710   000018                     	ds	1
   711   000019                     ?_vfprintf:
   712                           	callstack 0
   713   000019                     vfprintf@fp:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x18
   717   000019                     	ds	1
   718   00001A                     vfprintf@fmt:
   719                           	callstack 0
   720   00001A                     convert_HSV@m:
   721                           	callstack 0
   722   00001A                     average_RGBC@temp_B:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x19
   726   00001A                     	ds	1
   727   00001B                     ___flmul@sign:
   728                           	callstack 0
   729   00001B                     vfprintf@ap:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x1A
   733   00001B                     	ds	1
   734   00001C                     vfprintf@cfmt:
   735                           	callstack 0
   736   00001C                     convert_HSV@sat:
   737                           	callstack 0
   738   00001C                     ___flmul@grs:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x1B
   742   00001C                     	ds	1
   743   00001D                     ?_sprintf:
   744                           	callstack 0
   745   00001D                     sprintf@s:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x1C
   749   00001D                     	ds	1
   750   00001E                     convert_HSV@hue:
   751                           	callstack 0
   752   00001E                     average_RGBC@temp_C:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x1D
   756   00001E                     	ds	1
   757   00001F                     sprintf@fmt:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x1E
   761   00001F                     	ds	1
   762   000020                     ___flmul@aexp:
   763                           	callstack 0
   764   000020                     convert_HSV@temp_636:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x1F
   768   000020                     	ds	1
   769   000021                     ___flmul@bexp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x20
   773   000021                     	ds	1
   774   000022                     ___flmul@prod:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x21
   778   000022                     	ds	2
   779   000024                     convert_HSV@temp:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x23
   783   000024                     	ds	2
   784   000026                     ___flmul@temp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x25
   788   000026                     	ds	2
   789   000028                     ?___fltol:
   790                           	callstack 0
   791   000028                     sprintf@ret:
   792                           	callstack 0
   793   000028                     convert_HSV@temp_632:
   794                           	callstack 0
   795   000028                     ___fltol@f1:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x27
   799   000028                     	ds	2
   800   00002A                     sprintf@ap:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x29
   804   00002A                     	ds	1
   805   00002B                     sprintf@f:
   806                           	callstack 0
   807                           
   808                           ; 12 bytes @ 0x2A
   809   00002B                     	ds	1
   810   00002C                     ??___fltol:
   811   00002C                     convert_HSV@temp_633:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x2B
   815   00002C                     	ds	4
   816   000030                     ___fltol@sign1:
   817                           	callstack 0
   818   000030                     convert_HSV@temp_634:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x2F
   822   000030                     	ds	1
   823   000031                     ___fltol@exp1:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x30
   827   000031                     	ds	1
   828   000032                     scale_RGB@p:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x31
   832   000032                     	ds	1
   833   000033                     ??_scale_RGB:
   834                           
   835                           ; 1 bytes @ 0x32
   836   000033                     	ds	1
   837   000034                     convert_HSV@temp_635:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x33
   841   000034                     	ds	3
   842   000037                     sendRGBCvalSerial4@col_val:
   843                           	callstack 0
   844   000037                     sendHSVvalSerial4@col_val:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x36
   848   000037                     	ds	1
   849   000038                     convert_HSV@temp_631:
   850                           	callstack 0
   851   000038                     sendHSVvalSerial4@tempStr:
   852                           	callstack 0
   853   000038                     sendRGBCvalSerial4@tempStr:
   854                           	callstack 0
   855                           
   856                           ; 26 bytes @ 0x37
   857   000038                     	ds	4
   858   00003C                     convert_HSV@hue_scale:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3B
   862   00003C                     	ds	2
   863   00003E                     convert_HSV@M:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x3D
   867   00003E                     	ds	2
   868   000040                     convert_HSV@C:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3F
   872   000040                     	ds	18
   873   000052                     ??_main:
   874                           
   875                           ; 1 bytes @ 0x51
   876   000052                     	ds	2
   877                           
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 27 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  motorR          9   15[BANK0 ] struct DC_motor
   888 ;;  motorL          9    6[BANK0 ] struct DC_motor
   889 ;;  RGBC_colour     8   24[BANK0 ] struct RGBC_val
   890 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   891 ;;  PWMcycle        2    0        unsigned int 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;Total ram usage:       34 bytes
   906 ;; Hardware stack levels required when called: 7
   907 ;; This function calls:
   908 ;;		_Timer0_init
   909 ;;		_average_RGBC
   910 ;;		_buggy_lights_init
   911 ;;		_color_click_init
   912 ;;		_convert_HSV
   913 ;;		_initDCmotorsPWM
   914 ;;		_initUSART4
   915 ;;		_scale_RGB
   916 ;;		_sendHSVvalSerial4
   917 ;;		_sendRGBCvalSerial4
   918 ;;		_toggle_tricolour_LED
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text0
   925   001FC8                     __ptext0:
   926                           	callstack 0
   927   001FC8                     _main:
   928                           	callstack 24
   929   001FC8                     
   930                           ;main.c: 28:     struct RGBC_val RGBC_colour;;main.c: 29:         RGBC_colour.R = 0;
   931   001FC8  0E00               	movlw	0
   932   001FCA  0100               	movlb	0	; () banked
   933   001FCC  6FA0               	movwf	(main@RGBC_colour+1)& (0+255),b
   934   001FCE  0E00               	movlw	0
   935   001FD0  6F9F               	movwf	main@RGBC_colour& (0+255),b
   936                           
   937                           ;main.c: 30:         RGBC_colour.G = 0;
   938   001FD2  0E00               	movlw	0
   939   001FD4  6FA2               	movwf	(main@RGBC_colour+3)& (0+255),b
   940   001FD6  0E00               	movlw	0
   941   001FD8  6FA1               	movwf	(main@RGBC_colour+2)& (0+255),b
   942                           
   943                           ;main.c: 31:         RGBC_colour.B = 0;
   944   001FDA  0E00               	movlw	0
   945   001FDC  6FA4               	movwf	(main@RGBC_colour+5)& (0+255),b
   946   001FDE  0E00               	movlw	0
   947   001FE0  6FA3               	movwf	(main@RGBC_colour+4)& (0+255),b
   948                           
   949                           ;main.c: 32:         RGBC_colour.C = 0;
   950   001FE2  0E00               	movlw	0
   951   001FE4  6FA6               	movwf	(main@RGBC_colour+7)& (0+255),b
   952   001FE6  0E00               	movlw	0
   953   001FE8  6FA5               	movwf	(main@RGBC_colour+6)& (0+255),b
   954                           
   955                           ;main.c: 34:     struct HSV_val HSV_colour;;main.c: 35:         HSV_colour.H = 0;
   956   001FEA  0E00               	movlw	0
   957   001FEC  6F88               	movwf	(main@HSV_colour+1)& (0+255),b
   958   001FEE  0E00               	movlw	0
   959   001FF0  6F87               	movwf	main@HSV_colour& (0+255),b
   960                           
   961                           ;main.c: 36:         HSV_colour.S = 0;
   962   001FF2  0E00               	movlw	0
   963   001FF4  6F8A               	movwf	(main@HSV_colour+3)& (0+255),b
   964   001FF6  0E00               	movlw	0
   965   001FF8  6F89               	movwf	(main@HSV_colour+2)& (0+255),b
   966                           
   967                           ;main.c: 37:         HSV_colour.V = 0;
   968   001FFA  0E00               	movlw	0
   969   001FFC  6F8C               	movwf	(main@HSV_colour+5)& (0+255),b
   970   001FFE  0E00               	movlw	0
   971   002000  6F8B               	movwf	(main@HSV_colour+4)& (0+255),b
   972                           
   973                           ;main.c: 40:     struct DC_motor motorL, motorR;;main.c: 41:         motorL.power = 0;
   974   002002  0E00               	movlw	0
   975   002004  6F8D               	movwf	main@motorL& (0+255),b
   976                           
   977                           ;main.c: 42:         motorL.direction = 1;
   978   002006  0E01               	movlw	1
   979   002008  6F8E               	movwf	(main@motorL+1)& (0+255),b
   980                           
   981                           ;main.c: 43:         motorL.brakemode = 1;
   982   00200A  0E01               	movlw	1
   983   00200C  6F8F               	movwf	(main@motorL+2)& (0+255),b
   984   00200E                     
   985                           ; BSR set to: 0
   986                           ;main.c: 44:         motorL.PWMperiod = PWMcycle;
   987   00200E  0E00               	movlw	0
   988   002010  6F91               	movwf	(main@motorL+4)& (0+255),b
   989   002012  0E63               	movlw	99
   990   002014  6F90               	movwf	(main@motorL+3)& (0+255),b
   991   002016                     
   992                           ; BSR set to: 0
   993                           ;main.c: 45:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   994   002016  0EAA               	movlw	170
   995   002018  6F92               	movwf	(main@motorL+5)& (0+255),b
   996   00201A  0E0F               	movlw	15
   997   00201C  6F93               	movwf	(main@motorL+6)& (0+255),b
   998   00201E                     
   999                           ; BSR set to: 0
  1000                           ;main.c: 46:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1001   00201E  0EA6               	movlw	166
  1002   002020  6F94               	movwf	(main@motorL+7)& (0+255),b
  1003   002022  0E0F               	movlw	15
  1004   002024  6F95               	movwf	(main@motorL+8)& (0+255),b
  1005                           
  1006                           ;main.c: 47:         motorR.power = 0;
  1007   002026  0E00               	movlw	0
  1008   002028  6F96               	movwf	main@motorR& (0+255),b
  1009                           
  1010                           ;main.c: 48:         motorR.direction = 1;
  1011   00202A  0E01               	movlw	1
  1012   00202C  6F97               	movwf	(main@motorR+1)& (0+255),b
  1013                           
  1014                           ;main.c: 49:         motorR.brakemode = 1;
  1015   00202E  0E01               	movlw	1
  1016   002030  6F98               	movwf	(main@motorR+2)& (0+255),b
  1017   002032                     
  1018                           ; BSR set to: 0
  1019                           ;main.c: 50:         motorR.PWMperiod = PWMcycle;
  1020   002032  0E00               	movlw	0
  1021   002034  6F9A               	movwf	(main@motorR+4)& (0+255),b
  1022   002036  0E63               	movlw	99
  1023   002038  6F99               	movwf	(main@motorR+3)& (0+255),b
  1024   00203A                     
  1025                           ; BSR set to: 0
  1026                           ;main.c: 51:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1027   00203A  0E25               	movlw	37
  1028   00203C  6F9B               	movwf	(main@motorR+5)& (0+255),b
  1029   00203E  0E0F               	movlw	15
  1030   002040  6F9C               	movwf	(main@motorR+6)& (0+255),b
  1031   002042                     
  1032                           ; BSR set to: 0
  1033                           ;main.c: 52:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1034   002042  0E21               	movlw	33
  1035   002044  6F9D               	movwf	(main@motorR+7)& (0+255),b
  1036   002046  0E0F               	movlw	15
  1037   002048  6F9E               	movwf	(main@motorR+8)& (0+255),b
  1038   00204A                     
  1039                           ; BSR set to: 0
  1040                           ;main.c: 55:     initDCmotorsPWM(PWMcycle);
  1041   00204A  0E00               	movlw	0
  1042   00204C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1043   00204E  0E63               	movlw	99
  1044   002050  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1045   002052  EC31  F013         	call	_initDCmotorsPWM	;wreg free
  1046                           
  1047                           ;main.c: 56:     buggy_lights_init();
  1048   002056  ECC2  F016         	call	_buggy_lights_init	;wreg free
  1049   00205A                     
  1050                           ;main.c: 57:     color_click_init();
  1051   00205A  ECA8  F016         	call	_color_click_init	;wreg free
  1052   00205E                     
  1053                           ;main.c: 58:     initUSART4();
  1054   00205E  EC24  F017         	call	_initUSART4	;wreg free
  1055   002062                     
  1056                           ;main.c: 59:     Timer0_init();
  1057   002062  EC02  F017         	call	_Timer0_init	;wreg free
  1058   002066                     
  1059                           ;main.c: 63:         TRISDbits.TRISD7 = 0;
  1060   002066  9E84               	bcf	132,7,c	;volatile
  1061   002068                     
  1062                           ;main.c: 64:         TRISHbits.TRISH3 = 0;
  1063   002068  9688               	bcf	136,3,c	;volatile
  1064   00206A                     
  1065                           ;main.c: 66:         LATDbits.LATD7 = 0;
  1066   00206A  9E7C               	bcf	124,7,c	;volatile
  1067   00206C                     
  1068                           ;main.c: 67:         LATHbits.LATH3 = 0;
  1069   00206C  9680               	bcf	128,3,c	;volatile
  1070   00206E                     
  1071                           ;main.c: 71:         TRISFbits.TRISF2 = 1;
  1072   00206E  8486               	bsf	134,2,c	;volatile
  1073   002070                     
  1074                           ;main.c: 72:         TRISFbits.TRISF3 = 1;
  1075   002070  8686               	bsf	134,3,c	;volatile
  1076   002072                     
  1077                           ;main.c: 74:         ANSELFbits.ANSELF2 = 0;
  1078   002072  010E               	movlb	14	; () banked
  1079   002074  95B4               	bcf	180,2,b	;volatile
  1080   002076                     
  1081                           ; BSR set to: 14
  1082                           ;main.c: 75:         ANSELFbits.ANSELF3 = 0;
  1083   002076  97B4               	bcf	180,3,b	;volatile
  1084                           
  1085                           ;main.c: 80:     LATHbits.LATH3 = !LATHbits.LATH3;
  1086   002078  A680               	btfss	128,3,c	;volatile
  1087   00207A  EF41  F010         	goto	u3701
  1088   00207E  EF45  F010         	goto	u3700
  1089   002082                     u3701:
  1090   002082  6A52               	clrf	??_main^0,c
  1091   002084  2A52               	incf	??_main^0,f,c
  1092   002086  EF46  F010         	goto	u3718
  1093   00208A                     u3700:
  1094   00208A  6A52               	clrf	??_main^0,c
  1095   00208C                     u3718:
  1096   00208C  4652               	rlncf	??_main^0,f,c
  1097   00208E  4652               	rlncf	??_main^0,f,c
  1098   002090  4652               	rlncf	??_main^0,f,c
  1099   002092  5080               	movf	128,w,c	;volatile
  1100   002094  1852               	xorwf	??_main^0,w,c
  1101   002096  0BF7               	andlw	-9
  1102   002098  1852               	xorwf	??_main^0,w,c
  1103   00209A  6E80               	movwf	128,c	;volatile
  1104   00209C                     
  1105                           ;main.c: 81:     toggle_tricolour_LED();
  1106   00209C  EC64  F011         	call	_toggle_tricolour_LED	;wreg free
  1107   0020A0                     l4270:
  1108                           
  1109                           ;main.c: 86:         average_RGBC(&RGBC_colour);
  1110   0020A0  0E9F               	movlw	low main@RGBC_colour
  1111   0020A2  6E0E               	movwf	average_RGBC@p^0,c
  1112   0020A4  EC0E  F00E         	call	_average_RGBC	;wreg free
  1113   0020A8                     
  1114                           ;main.c: 87:         scale_RGB(&RGBC_colour);
  1115   0020A8  0E9F               	movlw	low main@RGBC_colour
  1116   0020AA  6E32               	movwf	scale_RGB@p^0,c
  1117   0020AC  ECF9  F010         	call	_scale_RGB	;wreg free
  1118   0020B0                     
  1119                           ;main.c: 88:         convert_HSV(&HSV_colour, &RGBC_colour);
  1120   0020B0  0E87               	movlw	low main@HSV_colour
  1121   0020B2  6E0E               	movwf	convert_HSV@p1^0,c
  1122   0020B4  0E9F               	movlw	low main@RGBC_colour
  1123   0020B6  6E0F               	movwf	convert_HSV@p2^0,c
  1124   0020B8  EC0D  F007         	call	_convert_HSV	;wreg free
  1125   0020BC                     
  1126                           ;main.c: 89:         sendRGBCvalSerial4(&RGBC_colour);
  1127   0020BC  0E9F               	movlw	low main@RGBC_colour
  1128   0020BE  6E37               	movwf	sendRGBCvalSerial4@col_val^0,c
  1129   0020C0  ECFC  F014         	call	_sendRGBCvalSerial4	;wreg free
  1130   0020C4                     
  1131                           ;main.c: 90:         sendHSVvalSerial4(&HSV_colour);
  1132   0020C4  0E87               	movlw	low main@HSV_colour
  1133   0020C6  6E37               	movwf	sendHSVvalSerial4@col_val^0,c
  1134   0020C8  EC21  F016         	call	_sendHSVvalSerial4	;wreg free
  1135   0020CC                     
  1136                           ;main.c: 91:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1137   0020CC  0E29               	movlw	41
  1138   0020CE  6E53               	movwf	(??_main+1)^0,c
  1139   0020D0  0E96               	movlw	150
  1140   0020D2  6E52               	movwf	??_main^0,c
  1141   0020D4  0E7F               	movlw	127
  1142   0020D6                     u3857:
  1143   0020D6  2EE8               	decfsz	wreg,f,c
  1144   0020D8  D7FE               	bra	u3857
  1145   0020DA  2E52               	decfsz	??_main^0,f,c
  1146   0020DC  D7FC               	bra	u3857
  1147   0020DE  2E53               	decfsz	(??_main+1)^0,f,c
  1148   0020E0  D7FA               	bra	u3857
  1149   0020E2  0000               	nop	
  1150   0020E4  EF50  F010         	goto	l4270
  1151   0020E8  EF1E  F000         	goto	start
  1152   0020EC                     __end_of_main:
  1153                           	callstack 0
  1154                           
  1155 ;; *************** function _toggle_tricolour_LED *****************
  1156 ;; Defined at:
  1157 ;;		line 84 in file "buggy_lights.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;Total ram usage:        1 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text1
  1186   0022C8                     __ptext1:
  1187                           	callstack 0
  1188   0022C8                     _toggle_tricolour_LED:
  1189                           	callstack 29
  1190   0022C8                     
  1191                           ;buggy_lights.c: 88:         LATGbits.LATG1 = !LATGbits.LATG1;
  1192   0022C8  A27F               	btfss	127,1,c	;volatile
  1193   0022CA  EF69  F011         	goto	u3041
  1194   0022CE  EF6D  F011         	goto	u3040
  1195   0022D2                     u3041:
  1196   0022D2  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1197   0022D4  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1198   0022D6  EF6E  F011         	goto	u3058
  1199   0022DA                     u3040:
  1200   0022DA  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1201   0022DC                     u3058:
  1202   0022DC  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1203   0022DE  507F               	movf	127,w,c	;volatile
  1204   0022E0  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1205   0022E2  0BFD               	andlw	-3
  1206   0022E4  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1207   0022E6  6E7F               	movwf	127,c	;volatile
  1208                           
  1209                           ;buggy_lights.c: 89:         LATAbits.LATA4 = !LATAbits.LATA4;
  1210   0022E8  A879               	btfss	121,4,c	;volatile
  1211   0022EA  EF79  F011         	goto	u3061
  1212   0022EE  EF7D  F011         	goto	u3060
  1213   0022F2                     u3061:
  1214   0022F2  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1215   0022F4  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1216   0022F6  EF7E  F011         	goto	u3078
  1217   0022FA                     u3060:
  1218   0022FA  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1219   0022FC                     u3078:
  1220   0022FC  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1221   0022FE  5079               	movf	121,w,c	;volatile
  1222   002300  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1223   002302  0BEF               	andlw	-17
  1224   002304  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1225   002306  6E79               	movwf	121,c	;volatile
  1226                           
  1227                           ;buggy_lights.c: 90:         LATFbits.LATF7 = !LATFbits.LATF7;
  1228   002308  AE7E               	btfss	126,7,c	;volatile
  1229   00230A  EF89  F011         	goto	u3081
  1230   00230E  EF8D  F011         	goto	u3080
  1231   002312                     u3081:
  1232   002312  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1233   002314  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1234   002316  EF8E  F011         	goto	u3098
  1235   00231A                     u3080:
  1236   00231A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1237   00231C                     u3098:
  1238   00231C  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1239   00231E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1240   002320  507E               	movf	126,w,c	;volatile
  1241   002322  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1242   002324  0B7F               	andlw	-129
  1243   002326  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1244   002328  6E7E               	movwf	126,c	;volatile
  1245                           
  1246                           ;buggy_lights.c: 93:         LATGbits.LATG0 = !LATGbits.LATG0;
  1247   00232A  A07F               	btfss	127,0,c	;volatile
  1248   00232C  EF9A  F011         	goto	u3101
  1249   002330  EF9E  F011         	goto	u3100
  1250   002334                     u3101:
  1251   002334  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1252   002336  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1253   002338  EF9F  F011         	goto	u3118
  1254   00233C                     u3100:
  1255   00233C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1256   00233E                     u3118:
  1257   00233E  507F               	movf	127,w,c	;volatile
  1258   002340  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1259   002342  0BFE               	andlw	-2
  1260   002344  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1261   002346  6E7F               	movwf	127,c	;volatile
  1262                           
  1263                           ;buggy_lights.c: 94:         LATEbits.LATE7 = !LATEbits.LATE7;
  1264   002348  AE7D               	btfss	125,7,c	;volatile
  1265   00234A  EFA9  F011         	goto	u3121
  1266   00234E  EFAD  F011         	goto	u3120
  1267   002352                     u3121:
  1268   002352  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1269   002354  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1270   002356  EFAE  F011         	goto	u3138
  1271   00235A                     u3120:
  1272   00235A  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1273   00235C                     u3138:
  1274   00235C  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1275   00235E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1276   002360  507D               	movf	125,w,c	;volatile
  1277   002362  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1278   002364  0B7F               	andlw	-129
  1279   002366  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1280   002368  6E7D               	movwf	125,c	;volatile
  1281                           
  1282                           ;buggy_lights.c: 95:         LATAbits.LATA3 = !LATAbits.LATA3;
  1283   00236A  A679               	btfss	121,3,c	;volatile
  1284   00236C  EFBA  F011         	goto	u3141
  1285   002370  EFBE  F011         	goto	u3140
  1286   002374                     u3141:
  1287   002374  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1288   002376  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1289   002378  EFBF  F011         	goto	u3158
  1290   00237C                     u3140:
  1291   00237C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1292   00237E                     u3158:
  1293   00237E  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1294   002380  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1295   002382  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1296   002384  5079               	movf	121,w,c	;volatile
  1297   002386  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1298   002388  0BF7               	andlw	-9
  1299   00238A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1300   00238C  6E79               	movwf	121,c	;volatile
  1301   00238E  0012               	return		;funcret
  1302   002390                     __end_of_toggle_tricolour_LED:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _sendRGBCvalSerial4 *****************
  1306 ;; Defined at:
  1307 ;;		line 75 in file "serial.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  col_val         1   54[COMRAM] PTR struct RGBC_val
  1310 ;;		 -> main@RGBC_colour(8), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  tempStr        26   55[COMRAM] unsigned char [26]
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:       27 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 6
  1329 ;; This function calls:
  1330 ;;		_sendStringSerial4
  1331 ;;		_sprintf
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text2
  1338   0029F8                     __ptext2:
  1339                           	callstack 0
  1340   0029F8                     _sendRGBCvalSerial4:
  1341                           	callstack 24
  1342   0029F8                     
  1343                           ;serial.c: 76:     char tempStr[26];;serial.c: 78:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1344   0029F8  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1345   0029FA  6E1D               	movwf	sprintf@s^0,c
  1346   0029FC  6A1E               	clrf	(sprintf@s+1)^0,c
  1347   0029FE  0E01               	movlw	low STR_5
  1348   002A00  6E1F               	movwf	sprintf@fmt^0,c
  1349   002A02  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1350   002A04  6ED9               	movwf	fsr2l,c
  1351   002A06  6ADA               	clrf	fsr2h,c
  1352   002A08  CFDE F020          	movff	postinc2,?_sprintf+3
  1353   002A0C  CFDD F021          	movff	postdec2,?_sprintf+4
  1354   002A10  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1355   002A12  6ED9               	movwf	fsr2l,c
  1356   002A14  6ADA               	clrf	fsr2h,c
  1357   002A16  0E02               	movlw	2
  1358   002A18  26D9               	addwf	fsr2l,f,c
  1359   002A1A  CFDE F022          	movff	postinc2,?_sprintf+5
  1360   002A1E  CFDD F023          	movff	postdec2,?_sprintf+6
  1361   002A22  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1362   002A24  6ED9               	movwf	fsr2l,c
  1363   002A26  6ADA               	clrf	fsr2h,c
  1364   002A28  0E04               	movlw	4
  1365   002A2A  26D9               	addwf	fsr2l,f,c
  1366   002A2C  CFDE F024          	movff	postinc2,?_sprintf+7
  1367   002A30  CFDD F025          	movff	postdec2,?_sprintf+8
  1368   002A34  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1369   002A36  6ED9               	movwf	fsr2l,c
  1370   002A38  6ADA               	clrf	fsr2h,c
  1371   002A3A  0E06               	movlw	6
  1372   002A3C  26D9               	addwf	fsr2l,f,c
  1373   002A3E  CFDE F026          	movff	postinc2,?_sprintf+9
  1374   002A42  CFDD F027          	movff	postdec2,?_sprintf+10
  1375   002A46  EC47  F016         	call	_sprintf	;wreg free
  1376   002A4A                     
  1377                           ;serial.c: 79:     sendStringSerial4(tempStr);
  1378   002A4A  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1379   002A4C  6E02               	movwf	sendStringSerial4@string^0,c
  1380   002A4E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1381   002A50  ECCB  F014         	call	_sendStringSerial4	;wreg free
  1382   002A54  0012               	return		;funcret
  1383   002A56                     __end_of_sendRGBCvalSerial4:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _sendHSVvalSerial4 *****************
  1387 ;; Defined at:
  1388 ;;		line 85 in file "serial.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  col_val         1   54[COMRAM] PTR struct HSV_val
  1391 ;;		 -> main@HSV_colour(6), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  tempStr        21   55[COMRAM] unsigned char [21]
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;Total ram usage:       22 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 6
  1410 ;; This function calls:
  1411 ;;		_sendStringSerial4
  1412 ;;		_sprintf
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text3
  1419   002C42                     __ptext3:
  1420                           	callstack 0
  1421   002C42                     _sendHSVvalSerial4:
  1422                           	callstack 24
  1423   002C42                     
  1424                           ;serial.c: 86:     char tempStr[21];;serial.c: 88:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  1425   002C42  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1426   002C44  6E1D               	movwf	sprintf@s^0,c
  1427   002C46  6A1E               	clrf	(sprintf@s+1)^0,c
  1428   002C48  0E04               	movlw	low (STR_5+3)
  1429   002C4A  6E1F               	movwf	sprintf@fmt^0,c
  1430   002C4C  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1431   002C4E  6ED9               	movwf	fsr2l,c
  1432   002C50  6ADA               	clrf	fsr2h,c
  1433   002C52  CFDE F020          	movff	postinc2,?_sprintf+3
  1434   002C56  CFDD F021          	movff	postdec2,?_sprintf+4
  1435   002C5A  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1436   002C5C  6ED9               	movwf	fsr2l,c
  1437   002C5E  6ADA               	clrf	fsr2h,c
  1438   002C60  0E02               	movlw	2
  1439   002C62  26D9               	addwf	fsr2l,f,c
  1440   002C64  CFDE F022          	movff	postinc2,?_sprintf+5
  1441   002C68  CFDD F023          	movff	postdec2,?_sprintf+6
  1442   002C6C  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1443   002C6E  6ED9               	movwf	fsr2l,c
  1444   002C70  6ADA               	clrf	fsr2h,c
  1445   002C72  0E04               	movlw	4
  1446   002C74  26D9               	addwf	fsr2l,f,c
  1447   002C76  CFDE F024          	movff	postinc2,?_sprintf+7
  1448   002C7A  CFDD F025          	movff	postdec2,?_sprintf+8
  1449   002C7E  EC47  F016         	call	_sprintf	;wreg free
  1450   002C82                     
  1451                           ;serial.c: 89:     sendStringSerial4(tempStr);
  1452   002C82  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1453   002C84  6E02               	movwf	sendStringSerial4@string^0,c
  1454   002C86  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1455   002C88  ECCB  F014         	call	_sendStringSerial4	;wreg free
  1456   002C8C  0012               	return		;funcret
  1457   002C8E                     __end_of_sendHSVvalSerial4:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function _sprintf *****************
  1461 ;; Defined at:
  1462 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  s               2   28[COMRAM] PTR unsigned char 
  1465 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1466 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1467 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  f              12   42[COMRAM] struct _IO_FILE
  1470 ;;  ret             2   39[COMRAM] int 
  1471 ;;  ap              1   41[COMRAM] PTR void [1]
  1472 ;;		 -> ?_sprintf(2), 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2   28[COMRAM] int 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1482 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1483 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;Total ram usage:       26 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 5
  1489 ;; This function calls:
  1490 ;;		_vfprintf
  1491 ;; This function is called by:
  1492 ;;		_sendRGBCvalSerial4
  1493 ;;		_sendHSVvalSerial4
  1494 ;;		_sendIntSerial4
  1495 ;;		_sendArrayCharSerial4
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text4
  1500   002C8E                     __ptext4:
  1501                           	callstack 0
  1502   002C8E                     _sprintf:
  1503                           	callstack 24
  1504   002C8E  0E20               	movlw	low (?_sprintf+3)
  1505   002C90  6E2A               	movwf	sprintf@ap^0,c
  1506   002C92  C01D  F02B         	movff	sprintf@s,sprintf@f
  1507   002C96  C01E  F02C         	movff	sprintf@s+1,sprintf@f+1
  1508   002C9A  0E00               	movlw	0
  1509   002C9C  6E2F               	movwf	(sprintf@f+4)^0,c
  1510   002C9E  0E00               	movlw	0
  1511   002CA0  6E2E               	movwf	(sprintf@f+3)^0,c
  1512   002CA2  0E00               	movlw	0
  1513   002CA4  6E36               	movwf	(sprintf@f+11)^0,c
  1514   002CA6  0E00               	movlw	0
  1515   002CA8  6E35               	movwf	(sprintf@f+10)^0,c
  1516   002CAA  0E2B               	movlw	low sprintf@f
  1517   002CAC  6E19               	movwf	vfprintf@fp^0,c
  1518   002CAE  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  1519   002CB2  0E2A               	movlw	low sprintf@ap
  1520   002CB4  6E1B               	movwf	vfprintf@ap^0,c
  1521   002CB6  EC2B  F015         	call	_vfprintf	;wreg free
  1522   002CBA  C019  F028         	movff	?_vfprintf,sprintf@ret
  1523   002CBE  C01A  F029         	movff	?_vfprintf+1,sprintf@ret+1
  1524   002CC2  502E               	movf	(sprintf@f+3)^0,w,c
  1525   002CC4  241D               	addwf	sprintf@s^0,w,c
  1526   002CC6  6ED9               	movwf	fsr2l,c
  1527   002CC8  502F               	movf	(sprintf@f+4)^0,w,c
  1528   002CCA  201E               	addwfc	(sprintf@s+1)^0,w,c
  1529   002CCC  6EDA               	movwf	fsr2h,c
  1530   002CCE  6ADF               	clrf	indf2,c
  1531   002CD0  C028  F01D         	movff	sprintf@ret,?_sprintf
  1532   002CD4  C029  F01E         	movff	sprintf@ret+1,?_sprintf+1
  1533   002CD8  0012               	return		;funcret
  1534   002CDA                     __end_of_sprintf:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _vfprintf *****************
  1538 ;; Defined at:
  1539 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1542 ;;		 -> sprintf@f(12), 
  1543 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1544 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1545 ;;  ap              1   26[COMRAM] PTR PTR void 
  1546 ;;		 -> sprintf@ap(1), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1549 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2   24[COMRAM] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1559 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;Total ram usage:        4 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 4
  1566 ;; This function calls:
  1567 ;;		_vfpfcnvrt
  1568 ;; This function is called by:
  1569 ;;		_sprintf
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text5
  1574   002A56                     __ptext5:
  1575                           	callstack 0
  1576   002A56                     _vfprintf:
  1577                           	callstack 24
  1578   002A56                     
  1579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1580   002A56  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1581   002A5A                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1583   002A5A  0E00               	movlw	0
  1584   002A5C  0100               	movlb	0	; () banked
  1585   002A5E  6F81               	movwf	(_nout+1)& (0+255),b
  1586   002A60  0E00               	movlw	0
  1587   002A62  6F80               	movwf	_nout& (0+255),b
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1590   002A64  EF41  F015         	goto	l3404
  1591   002A68                     l3402:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1595   002A68  C019  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1596   002A6C  0E1C               	movlw	low vfprintf@cfmt
  1597   002A6E  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1598   002A70  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1599   002A74  EC88  F00C         	call	_vfpfcnvrt	;wreg free
  1600   002A78  500B               	movf	?_vfpfcnvrt^0,w,c
  1601   002A7A  0100               	movlb	0	; () banked
  1602   002A7C  2780               	addwf	_nout& (0+255),f,b
  1603   002A7E  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1604   002A80  2381               	addwfc	(_nout+1)& (0+255),f,b
  1605   002A82                     l3404:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1609   002A82  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1610   002A86                     	if	1	;There is more than 1 active tblptr byte
  1611   002A86  0E0E               	movlw	high __smallconst
  1612   002A88  6EF7               	movwf	tblptrh,c
  1613   002A8A                     	endif
  1614   002A8A                     	if	0	;tblptru may be non-zero
  1615   002A8A                     	endif
  1616   002A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1617   002A8A  0E00               	movlw	low (__smallconst shr (0+16))
  1618   002A8C  6EF8               	movwf	tblptru,c
  1619   002A8E                     	endif
  1620   002A8E  0008               	tblrd		*
  1621   002A90  50F5               	movf	tablat,w,c
  1622   002A92  0900               	iorlw	0
  1623   002A94  A4D8               	btfss	status,2,c
  1624   002A96  EF4F  F015         	goto	u2551
  1625   002A9A  EF51  F015         	goto	u2550
  1626   002A9E                     u2551:
  1627   002A9E  EF34  F015         	goto	l3402
  1628   002AA2                     u2550:
  1629   002AA2                     
  1630                           ; BSR set to: 0
  1631                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1632   002AA2  C080  F019         	movff	_nout,?_vfprintf
  1633   002AA6  C081  F01A         	movff	_nout+1,?_vfprintf+1
  1634   002AAA                     
  1635                           ; BSR set to: 0
  1636   002AAA  0012               	return		;funcret
  1637   002AAC                     __end_of_vfprintf:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _vfpfcnvrt *****************
  1641 ;; Defined at:
  1642 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1645 ;;		 -> sprintf@f(12), 
  1646 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1647 ;;		 -> vfprintf@cfmt(1), 
  1648 ;;  ap              1   12[COMRAM] PTR PTR void 
  1649 ;;		 -> sprintf@ap(1), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  convarg         4   19[COMRAM] struct .
  1652 ;;  cnt             2   16[COMRAM] int 
  1653 ;;  c               1   23[COMRAM] unsigned char 
  1654 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1655 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1656 ;;  done            1   15[COMRAM] _Bool 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2   10[COMRAM] int 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1666 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;Total ram usage:       14 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 3
  1673 ;; This function calls:
  1674 ;;		___awdiv
  1675 ;;		___awmod
  1676 ;;		___lwdiv
  1677 ;;		___lwmod
  1678 ;;		_abs
  1679 ;;		_fputc
  1680 ;; This function is called by:
  1681 ;;		_vfprintf
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text6
  1686   001910                     __ptext6:
  1687                           	callstack 0
  1688   001910                     _vfpfcnvrt:
  1689                           	callstack 24
  1690   001910                     
  1691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1692   001910  0E00               	movlw	0
  1693   001912  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1694   001914  0E00               	movlw	0
  1695   001916  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1696   001918                     
  1697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1698   001918  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1699   00191A  6ED9               	movwf	fsr2l,c
  1700   00191C  6ADA               	clrf	fsr2h,c
  1701   00191E  CFDF FFF6          	movff	indf2,tblptrl
  1702   001922                     	if	1	;There is more than 1 active tblptr byte
  1703   001922  0E0E               	movlw	high __smallconst
  1704   001924  6EF7               	movwf	tblptrh,c
  1705   001926                     	endif
  1706   001926                     	if	0	;tblptru may be non-zero
  1707   001926                     	endif
  1708   001926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1709   001926  0E00               	movlw	low (__smallconst shr (0+16))
  1710   001928  6EF8               	movwf	tblptru,c
  1711   00192A                     	endif
  1712   00192A  0008               	tblrd		*
  1713   00192C  50F5               	movf	tablat,w,c
  1714   00192E  0A25               	xorlw	37
  1715   001930  A4D8               	btfss	status,2,c
  1716   001932  EF9D  F00C         	goto	u2401
  1717   001936  EF9F  F00C         	goto	u2400
  1718   00193A                     u2401:
  1719   00193A  EFF4  F00D         	goto	l3310
  1720   00193E                     u2400:
  1721   00193E                     
  1722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1723   00193E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1724   001940  6ED9               	movwf	fsr2l,c
  1725   001942  6ADA               	clrf	fsr2h,c
  1726   001944  2ADF               	incf	indf2,f,c
  1727   001946                     
  1728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1729   001946  0E00               	movlw	0
  1730   001948  0100               	movlb	0	; () banked
  1731   00194A  6F83               	movwf	(_width+1)& (0+255),b
  1732   00194C  0E00               	movlw	0
  1733   00194E  6F82               	movwf	_width& (0+255),b
  1734   001950  C082  F086         	movff	_width,_flags
  1735   001954                     
  1736                           ; BSR set to: 0
  1737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1738   001954  6984               	setf	_prec& (0+255),b
  1739   001956  6985               	setf	(_prec+1)& (0+255),b
  1740   001958                     
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1743   001958  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1744   00195A  6ED9               	movwf	fsr2l,c
  1745   00195C  6ADA               	clrf	fsr2h,c
  1746   00195E  50DF               	movf	indf2,w,c
  1747   001960  6E13               	movwf	vfpfcnvrt@cp^0,c
  1748   001962                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1751   001962  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1752   001966                     	if	1	;There is more than 1 active tblptr byte
  1753   001966  0E0E               	movlw	high __smallconst
  1754   001968  6EF7               	movwf	tblptrh,c
  1755   00196A                     	endif
  1756   00196A                     	if	0	;tblptru may be non-zero
  1757   00196A                     	endif
  1758   00196A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1759   00196A  0E00               	movlw	low (__smallconst shr (0+16))
  1760   00196C  6EF8               	movwf	tblptru,c
  1761   00196E                     	endif
  1762   00196E  0008               	tblrd		*
  1763   001970  50F5               	movf	tablat,w,c
  1764   001972  0A64               	xorlw	100
  1765   001974  B4D8               	btfsc	status,2,c
  1766   001976  EFBF  F00C         	goto	u2411
  1767   00197A  EFC1  F00C         	goto	u2410
  1768   00197E                     u2411:
  1769   00197E  EFD1  F00C         	goto	l3246
  1770   001982                     u2410:
  1771   001982                     
  1772                           ; BSR set to: 0
  1773   001982  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1774   001986                     	if	1	;There is more than 1 active tblptr byte
  1775   001986  0E0E               	movlw	high __smallconst
  1776   001988  6EF7               	movwf	tblptrh,c
  1777   00198A                     	endif
  1778   00198A                     	if	0	;tblptru may be non-zero
  1779   00198A                     	endif
  1780   00198A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1781   00198A  0E00               	movlw	low (__smallconst shr (0+16))
  1782   00198C  6EF8               	movwf	tblptru,c
  1783   00198E                     	endif
  1784   00198E  0008               	tblrd		*
  1785   001990  50F5               	movf	tablat,w,c
  1786   001992  0A69               	xorlw	105
  1787   001994  A4D8               	btfss	status,2,c
  1788   001996  EFCF  F00C         	goto	u2421
  1789   00199A  EFD1  F00C         	goto	u2420
  1790   00199E                     u2421:
  1791   00199E  EF5F  F00D         	goto	l3276
  1792   0019A2                     u2420:
  1793   0019A2                     l3246:
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1797   0019A2  500D               	movf	vfpfcnvrt@ap^0,w,c
  1798   0019A4  6ED9               	movwf	fsr2l,c
  1799   0019A6  6ADA               	clrf	fsr2h,c
  1800   0019A8  0E02               	movlw	2
  1801   0019AA  26DF               	addwf	indf2,f,c
  1802   0019AC  5CDF               	subwf	indf2,w,c
  1803   0019AE  6ED9               	movwf	fsr2l,c
  1804   0019B0  6ADA               	clrf	fsr2h,c
  1805   0019B2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1806   0019B6  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1807   0019BA                     
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1810   0019BA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1811   0019BC  6ED9               	movwf	fsr2l,c
  1812   0019BE  6ADA               	clrf	fsr2h,c
  1813   0019C0  2813               	incf	vfpfcnvrt@cp^0,w,c
  1814   0019C2  6EDF               	movwf	indf2,c
  1815   0019C4                     
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1818   0019C4  0E20               	movlw	32
  1819   0019C6  6E18               	movwf	vfpfcnvrt@c^0,c
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1822   0019C8  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1823   0019CA  EFE9  F00C         	goto	u2431
  1824   0019CE  EFEC  F00C         	goto	u2430
  1825   0019D2                     u2431:
  1826   0019D2  0E01               	movlw	1
  1827   0019D4  EFED  F00C         	goto	u2440
  1828   0019D8                     u2430:
  1829   0019D8  0E00               	movlw	0
  1830   0019DA                     u2440:
  1831   0019DA  6E10               	movwf	vfpfcnvrt@done^0,c
  1832   0019DC                     l3252:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1835   0019DC  0618               	decf	vfpfcnvrt@c^0,f,c
  1836   0019DE  5018               	movf	vfpfcnvrt@c^0,w,c
  1837   0019E0  0F60               	addlw	low _dbuf
  1838   0019E2  6ED9               	movwf	fsr2l,c
  1839   0019E4  6ADA               	clrf	fsr2h,c
  1840   0019E6  C014  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1841   0019EA  C015  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1842   0019EE  0E00               	movlw	0
  1843   0019F0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1844   0019F2  0E0A               	movlw	10
  1845   0019F4  6E03               	movwf	___awmod@divisor^0,c
  1846   0019F6  EC87  F012         	call	___awmod	;wreg free
  1847   0019FA  C001  F007         	movff	?___awmod,abs@a
  1848   0019FE  C002  F008         	movff	?___awmod+1,abs@a+1
  1849   001A02  EC8E  F016         	call	_abs	;wreg free
  1850   001A06  5007               	movf	?_abs^0,w,c
  1851   001A08  0F30               	addlw	48
  1852   001A0A  6EDF               	movwf	indf2,c
  1853   001A0C                     
  1854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1855   001A0C  C014  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1856   001A10  C015  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1857   001A14  0E00               	movlw	0
  1858   001A16  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1859   001A18  0E0A               	movlw	10
  1860   001A1A  6E03               	movwf	___awdiv@divisor^0,c
  1861   001A1C  ECC8  F011         	call	___awdiv	;wreg free
  1862   001A20  C001  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1863   001A24  C002  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1864   001A28                     
  1865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1866   001A28  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1867   001A2A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1868   001A2C                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1870   001A2C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1871   001A2E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1872   001A30  B4D8               	btfsc	status,2,c
  1873   001A32  EF1D  F00D         	goto	u2451
  1874   001A36  EF1F  F00D         	goto	u2450
  1875   001A3A                     u2451:
  1876   001A3A  EF27  F00D         	goto	l3262
  1877   001A3E                     u2450:
  1878   001A3E  5018               	movf	vfpfcnvrt@c^0,w,c
  1879   001A40  A4D8               	btfss	status,2,c
  1880   001A42  EF25  F00D         	goto	u2461
  1881   001A46  EF27  F00D         	goto	u2460
  1882   001A4A                     u2461:
  1883   001A4A  EFEE  F00C         	goto	l3252
  1884   001A4E                     u2460:
  1885   001A4E                     l3262:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1888   001A4E  5018               	movf	vfpfcnvrt@c^0,w,c
  1889   001A50  B4D8               	btfsc	status,2,c
  1890   001A52  EF2D  F00D         	goto	u2471
  1891   001A56  EF2F  F00D         	goto	u2470
  1892   001A5A                     u2471:
  1893   001A5A  EF50  F00D         	goto	l3274
  1894   001A5E                     u2470:
  1895   001A5E  5010               	movf	vfpfcnvrt@done^0,w,c
  1896   001A60  B4D8               	btfsc	status,2,c
  1897   001A62  EF35  F00D         	goto	u2481
  1898   001A66  EF37  F00D         	goto	u2480
  1899   001A6A                     u2481:
  1900   001A6A  EF50  F00D         	goto	l3274
  1901   001A6E                     u2480:
  1902   001A6E                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1904   001A6E  0618               	decf	vfpfcnvrt@c^0,f,c
  1905   001A70  5018               	movf	vfpfcnvrt@c^0,w,c
  1906   001A72  0F60               	addlw	low _dbuf
  1907   001A74  6ED9               	movwf	fsr2l,c
  1908   001A76  6ADA               	clrf	fsr2h,c
  1909   001A78  0E2D               	movlw	45
  1910   001A7A  6EDF               	movwf	indf2,c
  1911   001A7C                     
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1913   001A7C  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1914   001A7E  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1915   001A80  EF50  F00D         	goto	l3274
  1916   001A84                     l3270:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1919   001A84  5018               	movf	vfpfcnvrt@c^0,w,c
  1920   001A86  0F60               	addlw	low _dbuf
  1921   001A88  6ED9               	movwf	fsr2l,c
  1922   001A8A  6ADA               	clrf	fsr2h,c
  1923   001A8C  50DF               	movf	indf2,w,c
  1924   001A8E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1925   001A90  500E               	movf	??_vfpfcnvrt^0,w,c
  1926   001A92  6E01               	movwf	fputc@c^0,c
  1927   001A94  6A02               	clrf	(fputc@c+1)^0,c
  1928   001A96  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1929   001A9A  EC2A  F012         	call	_fputc	;wreg free
  1930   001A9E  2A18               	incf	vfpfcnvrt@c^0,f,c
  1931   001AA0                     l3274:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1934   001AA0  0E20               	movlw	32
  1935   001AA2  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1936   001AA4  A4D8               	btfss	status,2,c
  1937   001AA6  EF57  F00D         	goto	u2491
  1938   001AAA  EF59  F00D         	goto	u2490
  1939   001AAE                     u2491:
  1940   001AAE  EF42  F00D         	goto	l3270
  1941   001AB2                     u2490:
  1942   001AB2                     l1464:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1945   001AB2  C011  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1946   001AB6  C012  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1947   001ABA  EF0D  F00E         	goto	l1465
  1948   001ABE                     l3276:
  1949                           
  1950                           ; BSR set to: 0
  1951   001ABE  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1952   001AC2                     	if	1	;There is more than 1 active tblptr byte
  1953   001AC2  0E0E               	movlw	high __smallconst
  1954   001AC4  6EF7               	movwf	tblptrh,c
  1955   001AC6                     	endif
  1956   001AC6                     	if	0	;tblptru may be non-zero
  1957   001AC6                     	endif
  1958   001AC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1959   001AC6  0E00               	movlw	low (__smallconst shr (0+16))
  1960   001AC8  6EF8               	movwf	tblptru,c
  1961   001ACA                     	endif
  1962   001ACA  0008               	tblrd		*
  1963   001ACC  50F5               	movf	tablat,w,c
  1964   001ACE  0A75               	xorlw	117
  1965   001AD0  A4D8               	btfss	status,2,c
  1966   001AD2  EF6D  F00D         	goto	u2501
  1967   001AD6  EF6F  F00D         	goto	u2500
  1968   001ADA                     u2501:
  1969   001ADA  EFEA  F00D         	goto	l3304
  1970   001ADE                     u2500:
  1971   001ADE                     
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1974   001ADE  500D               	movf	vfpfcnvrt@ap^0,w,c
  1975   001AE0  6ED9               	movwf	fsr2l,c
  1976   001AE2  6ADA               	clrf	fsr2h,c
  1977   001AE4  0E02               	movlw	2
  1978   001AE6  26DF               	addwf	indf2,f,c
  1979   001AE8  5CDF               	subwf	indf2,w,c
  1980   001AEA  6ED9               	movwf	fsr2l,c
  1981   001AEC  6ADA               	clrf	fsr2h,c
  1982   001AEE  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1983   001AF2  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1984   001AF6                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1987   001AF6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1988   001AF8  6ED9               	movwf	fsr2l,c
  1989   001AFA  6ADA               	clrf	fsr2h,c
  1990   001AFC  2813               	incf	vfpfcnvrt@cp^0,w,c
  1991   001AFE  6EDF               	movwf	indf2,c
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1994   001B00  EFD2  F00D         	goto	l3302
  1995   001B04                     l3282:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1999   001B04  0E20               	movlw	32
  2000   001B06  6E18               	movwf	vfpfcnvrt@c^0,c
  2001   001B08                     l3284:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2004   001B08  0618               	decf	vfpfcnvrt@c^0,f,c
  2005   001B0A  5018               	movf	vfpfcnvrt@c^0,w,c
  2006   001B0C  0F60               	addlw	low _dbuf
  2007   001B0E  6ED9               	movwf	fsr2l,c
  2008   001B10  6ADA               	clrf	fsr2h,c
  2009   001B12  C014  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2010   001B16  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2011   001B1A  0E00               	movlw	0
  2012   001B1C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2013   001B1E  0E0A               	movlw	10
  2014   001B20  6E03               	movwf	___lwmod@divisor^0,c
  2015   001B22  EC99  F014         	call	___lwmod	;wreg free
  2016   001B26  5001               	movf	?___lwmod^0,w,c
  2017   001B28  0F30               	addlw	48
  2018   001B2A  6EDF               	movwf	indf2,c
  2019   001B2C                     
  2020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2021   001B2C  C014  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2022   001B30  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2023   001B34  0E00               	movlw	0
  2024   001B36  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2025   001B38  0E0A               	movlw	10
  2026   001B3A  6E03               	movwf	___lwdiv@divisor^0,c
  2027   001B3C  ECF5  F013         	call	___lwdiv	;wreg free
  2028   001B40  C001  F014         	movff	?___lwdiv,vfpfcnvrt@convarg
  2029   001B44  C002  F015         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2030   001B48                     
  2031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2032   001B48  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2033   001B4A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2034   001B4C                     
  2035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2036   001B4C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2037   001B4E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2038   001B50  B4D8               	btfsc	status,2,c
  2039   001B52  EFAD  F00D         	goto	u2511
  2040   001B56  EFAF  F00D         	goto	u2510
  2041   001B5A                     u2511:
  2042   001B5A  EFC7  F00D         	goto	l3298
  2043   001B5E                     u2510:
  2044   001B5E  5018               	movf	vfpfcnvrt@c^0,w,c
  2045   001B60  A4D8               	btfss	status,2,c
  2046   001B62  EFB5  F00D         	goto	u2521
  2047   001B66  EFB7  F00D         	goto	u2520
  2048   001B6A                     u2521:
  2049   001B6A  EF84  F00D         	goto	l3284
  2050   001B6E                     u2520:
  2051   001B6E  EFC7  F00D         	goto	l3298
  2052   001B72                     l3294:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2055   001B72  5018               	movf	vfpfcnvrt@c^0,w,c
  2056   001B74  0F60               	addlw	low _dbuf
  2057   001B76  6ED9               	movwf	fsr2l,c
  2058   001B78  6ADA               	clrf	fsr2h,c
  2059   001B7A  50DF               	movf	indf2,w,c
  2060   001B7C  6E0E               	movwf	??_vfpfcnvrt^0,c
  2061   001B7E  500E               	movf	??_vfpfcnvrt^0,w,c
  2062   001B80  6E01               	movwf	fputc@c^0,c
  2063   001B82  6A02               	clrf	(fputc@c+1)^0,c
  2064   001B84  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2065   001B88  EC2A  F012         	call	_fputc	;wreg free
  2066   001B8C  2A18               	incf	vfpfcnvrt@c^0,f,c
  2067   001B8E                     l3298:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2070   001B8E  0E20               	movlw	32
  2071   001B90  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2072   001B92  A4D8               	btfss	status,2,c
  2073   001B94  EFCE  F00D         	goto	u2531
  2074   001B98  EFD0  F00D         	goto	u2530
  2075   001B9C                     u2531:
  2076   001B9C  EFB9  F00D         	goto	l3294
  2077   001BA0                     u2530:
  2078   001BA0  EF59  F00D         	goto	l1464
  2079   001BA4                     l3302:
  2080                           
  2081                           ; BSR set to: 0
  2082   001BA4  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2083   001BA8                     	if	1	;There is more than 1 active tblptr byte
  2084   001BA8  0E0E               	movlw	high __smallconst
  2085   001BAA  6EF7               	movwf	tblptrh,c
  2086   001BAC                     	endif
  2087   001BAC                     	if	0	;tblptru may be non-zero
  2088   001BAC                     	endif
  2089   001BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2090   001BAC  0E00               	movlw	low (__smallconst shr (0+16))
  2091   001BAE  6EF8               	movwf	tblptru,c
  2092   001BB0                     	endif
  2093   001BB0  0008               	tblrd		*
  2094   001BB2  50F5               	movf	tablat,w,c
  2095   001BB4  6E0E               	movwf	??_vfpfcnvrt^0,c
  2096   001BB6  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2097                           
  2098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2099                           ; Switch size 1, requested type "simple"
  2100                           ; Number of cases is 1, Range of values is 0 to 0
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte            4     3 (average)
  2104                           ;	Chosen strategy is simple_byte
  2105   001BB8  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2106   001BBA  0A00               	xorlw	0	; case 0
  2107   001BBC  B4D8               	btfsc	status,2,c
  2108   001BBE  EFE3  F00D         	goto	l4530
  2109   001BC2  EFEA  F00D         	goto	l3304
  2110   001BC6                     l4530:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ; Switch size 1, requested type "simple"
  2114                           ; Number of cases is 1, Range of values is 117 to 117
  2115                           ; switch strategies available:
  2116                           ; Name         Instructions Cycles
  2117                           ; simple_byte            4     3 (average)
  2118                           ;	Chosen strategy is simple_byte
  2119   001BC6  500E               	movf	??_vfpfcnvrt^0,w,c
  2120   001BC8  0A75               	xorlw	117	; case 117
  2121   001BCA  B4D8               	btfsc	status,2,c
  2122   001BCC  EF82  F00D         	goto	l3282
  2123   001BD0  EFEA  F00D         	goto	l3304
  2124   001BD4                     l3304:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2128   001BD4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2129   001BD6  6ED9               	movwf	fsr2l,c
  2130   001BD8  6ADA               	clrf	fsr2h,c
  2131   001BDA  2ADF               	incf	indf2,f,c
  2132   001BDC                     
  2133                           ; BSR set to: 0
  2134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2135   001BDC  0E00               	movlw	0
  2136   001BDE  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2137   001BE0  0E00               	movlw	0
  2138   001BE2  6E0B               	movwf	?_vfpfcnvrt^0,c
  2139   001BE4  EF0D  F00E         	goto	l1465
  2140   001BE8                     l3310:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2143   001BE8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2144   001BEA  6ED9               	movwf	fsr2l,c
  2145   001BEC  6ADA               	clrf	fsr2h,c
  2146   001BEE  CFDF FFF6          	movff	indf2,tblptrl
  2147   001BF2                     	if	1	;There is more than 1 active tblptr byte
  2148   001BF2  0E0E               	movlw	high __smallconst
  2149   001BF4  6EF7               	movwf	tblptrh,c
  2150   001BF6                     	endif
  2151   001BF6                     	if	0	;tblptru may be non-zero
  2152   001BF6                     	endif
  2153   001BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2154   001BF6  0E00               	movlw	low (__smallconst shr (0+16))
  2155   001BF8  6EF8               	movwf	tblptru,c
  2156   001BFA                     	endif
  2157   001BFA  0008               	tblrd		*
  2158   001BFC  50F5               	movf	tablat,w,c
  2159   001BFE  6E01               	movwf	fputc@c^0,c
  2160   001C00  6A02               	clrf	(fputc@c+1)^0,c
  2161   001C02  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2162   001C06  EC2A  F012         	call	_fputc	;wreg free
  2163   001C0A                     
  2164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2165   001C0A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2166   001C0C  6ED9               	movwf	fsr2l,c
  2167   001C0E  6ADA               	clrf	fsr2h,c
  2168   001C10  2ADF               	incf	indf2,f,c
  2169   001C12                     
  2170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2171   001C12  0E00               	movlw	0
  2172   001C14  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2173   001C16  0E01               	movlw	1
  2174   001C18  6E0B               	movwf	?_vfpfcnvrt^0,c
  2175   001C1A                     l1465:
  2176   001C1A  0012               	return		;funcret
  2177   001C1C                     __end_of_vfpfcnvrt:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _fputc *****************
  2181 ;; Defined at:
  2182 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  c               2    0[COMRAM] int 
  2185 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2186 ;;		 -> sprintf@f(12), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    0[COMRAM] int 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;Total ram usage:        8 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 2
  2205 ;; This function calls:
  2206 ;;		_putch
  2207 ;; This function is called by:
  2208 ;;		_vfpfcnvrt
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text7
  2213   002454                     __ptext7:
  2214                           	callstack 0
  2215   002454                     _fputc:
  2216                           	callstack 24
  2217   002454  5003               	movf	fputc@fp^0,w,c
  2218   002456  B4D8               	btfsc	status,2,c
  2219   002458  EF30  F012         	goto	u2171
  2220   00245C  EF32  F012         	goto	u2170
  2221   002460                     u2171:
  2222   002460  EF3A  F012         	goto	l3100
  2223   002464                     u2170:
  2224   002464  5003               	movf	fputc@fp^0,w,c
  2225   002466  A4D8               	btfss	status,2,c
  2226   002468  EF38  F012         	goto	u2181
  2227   00246C  EF3A  F012         	goto	u2180
  2228   002470                     u2181:
  2229   002470  EF3F  F012         	goto	l3102
  2230   002474                     u2180:
  2231   002474                     l3100:
  2232   002474  5001               	movf	fputc@c^0,w,c
  2233   002476  EC6E  F017         	call	_putch
  2234   00247A  EF86  F012         	goto	l1503
  2235   00247E                     l3102:
  2236   00247E  5003               	movf	fputc@fp^0,w,c
  2237   002480  6ED9               	movwf	fsr2l,c
  2238   002482  6ADA               	clrf	fsr2h,c
  2239   002484  0E0A               	movlw	10
  2240   002486  26D9               	addwf	fsr2l,f,c
  2241   002488  50DE               	movf	postinc2,w,c
  2242   00248A  10DE               	iorwf	postinc2,w,c
  2243   00248C  B4D8               	btfsc	status,2,c
  2244   00248E  EF4B  F012         	goto	u2191
  2245   002492  EF4D  F012         	goto	u2190
  2246   002496                     u2191:
  2247   002496  EF66  F012         	goto	l3106
  2248   00249A                     u2190:
  2249   00249A  5003               	movf	fputc@fp^0,w,c
  2250   00249C  6ED9               	movwf	fsr2l,c
  2251   00249E  6ADA               	clrf	fsr2h,c
  2252   0024A0  0E0A               	movlw	10
  2253   0024A2  26D9               	addwf	fsr2l,f,c
  2254   0024A4  5003               	movf	fputc@fp^0,w,c
  2255   0024A6  6EE1               	movwf	fsr1l,c
  2256   0024A8  6AE2               	clrf	fsr1h,c
  2257   0024AA  0E03               	movlw	3
  2258   0024AC  26E1               	addwf	fsr1l,f,c
  2259   0024AE  50DE               	movf	postinc2,w,c
  2260   0024B0  5CE6               	subwf	postinc1,w,c
  2261   0024B2  50E6               	movf	postinc1,w,c
  2262   0024B4  0A80               	xorlw	128
  2263   0024B6  6E08               	movwf	(??_fputc+4)^0,c
  2264   0024B8  50DE               	movf	postinc2,w,c
  2265   0024BA  0A80               	xorlw	128
  2266   0024BC  5808               	subwfb	(??_fputc+4)^0,w,c
  2267   0024BE  B0D8               	btfsc	status,0,c
  2268   0024C0  EF64  F012         	goto	u2201
  2269   0024C4  EF66  F012         	goto	u2200
  2270   0024C8                     u2201:
  2271   0024C8  EF86  F012         	goto	l1503
  2272   0024CC                     u2200:
  2273   0024CC                     l3106:
  2274   0024CC  5003               	movf	fputc@fp^0,w,c
  2275   0024CE  6ED9               	movwf	fsr2l,c
  2276   0024D0  6ADA               	clrf	fsr2h,c
  2277   0024D2  0E03               	movlw	3
  2278   0024D4  26D9               	addwf	fsr2l,f,c
  2279   0024D6  CFDE F004          	movff	postinc2,??_fputc
  2280   0024DA  CFDD F005          	movff	postdec2,??_fputc+1
  2281   0024DE  5003               	movf	fputc@fp^0,w,c
  2282   0024E0  6ED9               	movwf	fsr2l,c
  2283   0024E2  6ADA               	clrf	fsr2h,c
  2284   0024E4  CFDE F006          	movff	postinc2,??_fputc+2
  2285   0024E8  CFDD F007          	movff	postdec2,??_fputc+3
  2286   0024EC  5004               	movf	??_fputc^0,w,c
  2287   0024EE  2406               	addwf	(??_fputc+2)^0,w,c
  2288   0024F0  6ED9               	movwf	fsr2l,c
  2289   0024F2  5005               	movf	(??_fputc+1)^0,w,c
  2290   0024F4  2007               	addwfc	(??_fputc+3)^0,w,c
  2291   0024F6  6EDA               	movwf	fsr2h,c
  2292   0024F8  C001  FFDF         	movff	fputc@c,indf2
  2293   0024FC  5003               	movf	fputc@fp^0,w,c
  2294   0024FE  6ED9               	movwf	fsr2l,c
  2295   002500  6ADA               	clrf	fsr2h,c
  2296   002502  0E03               	movlw	3
  2297   002504  26D9               	addwf	fsr2l,f,c
  2298   002506  2ADE               	incf	postinc2,f,c
  2299   002508  0E00               	movlw	0
  2300   00250A  22DD               	addwfc	postdec2,f,c
  2301   00250C                     l1503:
  2302   00250C  0012               	return		;funcret
  2303   00250E                     __end_of_fputc:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _putch *****************
  2307 ;; Defined at:
  2308 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  c               1    wreg     unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  c               1    0[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;Total ram usage:        0 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_fputc
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text8
  2337   002EDC                     __ptext8:
  2338                           	callstack 0
  2339   002EDC                     _putch:
  2340                           	callstack 24
  2341   002EDC  0012               	return		;funcret
  2342   002EDE                     __end_of_putch:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _abs *****************
  2346 ;; Defined at:
  2347 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  a               2    6[COMRAM] int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2    6[COMRAM] int 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;Total ram usage:        4 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_vfpfcnvrt
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text9
  2376   002D1C                     __ptext9:
  2377                           	callstack 0
  2378   002D1C                     _abs:
  2379                           	callstack 25
  2380   002D1C  BE08               	btfsc	(abs@a+1)^0,7,c
  2381   002D1E  EF93  F016         	goto	u2211
  2382   002D22  EF95  F016         	goto	u2210
  2383   002D26                     u2211:
  2384   002D26  EF9B  F016         	goto	l1488
  2385   002D2A                     u2210:
  2386   002D2A  C007  F007         	movff	abs@a,?_abs
  2387   002D2E  C008  F008         	movff	abs@a+1,?_abs+1
  2388   002D32  EFA7  F016         	goto	l1491
  2389   002D36                     l1488:
  2390   002D36  C007  F009         	movff	abs@a,??_abs
  2391   002D3A  C008  F00A         	movff	abs@a+1,??_abs+1
  2392   002D3E  1E09               	comf	??_abs^0,f,c
  2393   002D40  1E0A               	comf	(??_abs+1)^0,f,c
  2394   002D42  4A09               	infsnz	??_abs^0,f,c
  2395   002D44  2A0A               	incf	(??_abs+1)^0,f,c
  2396   002D46  C009  F007         	movff	??_abs,?_abs
  2397   002D4A  C00A  F008         	movff	??_abs+1,?_abs+1
  2398   002D4E                     l1491:
  2399   002D4E  0012               	return		;funcret
  2400   002D50                     __end_of_abs:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function ___lwmod *****************
  2404 ;; Defined at:
  2405 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  dividend        2    0[COMRAM] unsigned int 
  2408 ;;  divisor         2    2[COMRAM] unsigned int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  counter         1    4[COMRAM] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2    0[COMRAM] unsigned int 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;Total ram usage:        5 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_vfpfcnvrt
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text10
  2435   002932                     __ptext10:
  2436                           	callstack 0
  2437   002932                     ___lwmod:
  2438                           	callstack 25
  2439   002932  5003               	movf	___lwmod@divisor^0,w,c
  2440   002934  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2441   002936  B4D8               	btfsc	status,2,c
  2442   002938  EFA0  F014         	goto	u2141
  2443   00293C  EFA2  F014         	goto	u2140
  2444   002940                     u2141:
  2445   002940  EFC6  F014         	goto	l1246
  2446   002944                     u2140:
  2447   002944  0E01               	movlw	1
  2448   002946  6E05               	movwf	___lwmod@counter^0,c
  2449   002948  EFAA  F014         	goto	l3086
  2450   00294C                     l3084:
  2451   00294C  90D8               	bcf	status,0,c
  2452   00294E  3603               	rlcf	___lwmod@divisor^0,f,c
  2453   002950  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2454   002952  2A05               	incf	___lwmod@counter^0,f,c
  2455   002954                     l3086:
  2456   002954  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2457   002956  EFAF  F014         	goto	u2151
  2458   00295A  EFB1  F014         	goto	u2150
  2459   00295E                     u2151:
  2460   00295E  EFA6  F014         	goto	l3084
  2461   002962                     u2150:
  2462   002962                     l3088:
  2463   002962  5003               	movf	___lwmod@divisor^0,w,c
  2464   002964  5C01               	subwf	___lwmod@dividend^0,w,c
  2465   002966  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2466   002968  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2467   00296A  A0D8               	btfss	status,0,c
  2468   00296C  EFBA  F014         	goto	u2161
  2469   002970  EFBC  F014         	goto	u2160
  2470   002974                     u2161:
  2471   002974  EFC0  F014         	goto	l3092
  2472   002978                     u2160:
  2473   002978  5003               	movf	___lwmod@divisor^0,w,c
  2474   00297A  5E01               	subwf	___lwmod@dividend^0,f,c
  2475   00297C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2476   00297E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2477   002980                     l3092:
  2478   002980  90D8               	bcf	status,0,c
  2479   002982  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2480   002984  3203               	rrcf	___lwmod@divisor^0,f,c
  2481   002986  2E05               	decfsz	___lwmod@counter^0,f,c
  2482   002988  EFB1  F014         	goto	l3088
  2483   00298C                     l1246:
  2484   00298C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2485   002990  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2486   002994  0012               	return		;funcret
  2487   002996                     __end_of___lwmod:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function ___lwdiv *****************
  2491 ;; Defined at:
  2492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  dividend        2    0[COMRAM] unsigned int 
  2495 ;;  divisor         2    2[COMRAM] unsigned int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  quotient        2    4[COMRAM] unsigned int 
  2498 ;;  counter         1    6[COMRAM] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2    0[COMRAM] unsigned int 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;Total ram usage:        7 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_vfpfcnvrt
  2519 ;;		_setMotorPWM
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text11
  2524   0027EA                     __ptext11:
  2525                           	callstack 0
  2526   0027EA                     ___lwdiv:
  2527                           	callstack 25
  2528   0027EA  0E00               	movlw	0
  2529   0027EC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2530   0027EE  0E00               	movlw	0
  2531   0027F0  6E05               	movwf	___lwdiv@quotient^0,c
  2532   0027F2  5003               	movf	___lwdiv@divisor^0,w,c
  2533   0027F4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2534   0027F6  B4D8               	btfsc	status,2,c
  2535   0027F8  EF00  F014         	goto	u2111
  2536   0027FC  EF02  F014         	goto	u2110
  2537   002800                     u2111:
  2538   002800  EF2A  F014         	goto	l1236
  2539   002804                     u2110:
  2540   002804  0E01               	movlw	1
  2541   002806  6E07               	movwf	___lwdiv@counter^0,c
  2542   002808  EF0A  F014         	goto	l3066
  2543   00280C                     l3064:
  2544   00280C  90D8               	bcf	status,0,c
  2545   00280E  3603               	rlcf	___lwdiv@divisor^0,f,c
  2546   002810  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2547   002812  2A07               	incf	___lwdiv@counter^0,f,c
  2548   002814                     l3066:
  2549   002814  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2550   002816  EF0F  F014         	goto	u2121
  2551   00281A  EF11  F014         	goto	u2120
  2552   00281E                     u2121:
  2553   00281E  EF06  F014         	goto	l3064
  2554   002822                     u2120:
  2555   002822                     l3068:
  2556   002822  90D8               	bcf	status,0,c
  2557   002824  3605               	rlcf	___lwdiv@quotient^0,f,c
  2558   002826  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2559   002828  5003               	movf	___lwdiv@divisor^0,w,c
  2560   00282A  5C01               	subwf	___lwdiv@dividend^0,w,c
  2561   00282C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2562   00282E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2563   002830  A0D8               	btfss	status,0,c
  2564   002832  EF1D  F014         	goto	u2131
  2565   002836  EF1F  F014         	goto	u2130
  2566   00283A                     u2131:
  2567   00283A  EF24  F014         	goto	l3076
  2568   00283E                     u2130:
  2569   00283E  5003               	movf	___lwdiv@divisor^0,w,c
  2570   002840  5E01               	subwf	___lwdiv@dividend^0,f,c
  2571   002842  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2572   002844  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2573   002846  8005               	bsf	___lwdiv@quotient^0,0,c
  2574   002848                     l3076:
  2575   002848  90D8               	bcf	status,0,c
  2576   00284A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2577   00284C  3203               	rrcf	___lwdiv@divisor^0,f,c
  2578   00284E  2E07               	decfsz	___lwdiv@counter^0,f,c
  2579   002850  EF11  F014         	goto	l3068
  2580   002854                     l1236:
  2581   002854  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2582   002858  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2583   00285C  0012               	return		;funcret
  2584   00285E                     __end_of___lwdiv:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function ___awmod *****************
  2588 ;; Defined at:
  2589 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  dividend        2    0[COMRAM] int 
  2592 ;;  divisor         2    2[COMRAM] int 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  sign            1    5[COMRAM] unsigned char 
  2595 ;;  counter         1    4[COMRAM] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2    0[COMRAM] int 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        6 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_vfpfcnvrt
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text12
  2620   00250E                     __ptext12:
  2621                           	callstack 0
  2622   00250E                     ___awmod:
  2623                           	callstack 25
  2624   00250E  0E00               	movlw	0
  2625   002510  6E06               	movwf	___awmod@sign^0,c
  2626   002512  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2627   002514  EF90  F012         	goto	u2050
  2628   002518  EF8E  F012         	goto	u2051
  2629   00251C                     u2051:
  2630   00251C  EF96  F012         	goto	l3030
  2631   002520                     u2050:
  2632   002520  6C01               	negf	___awmod@dividend^0,c
  2633   002522  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2634   002524  B0D8               	btfsc	status,0,c
  2635   002526  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2636   002528  0E01               	movlw	1
  2637   00252A  6E06               	movwf	___awmod@sign^0,c
  2638   00252C                     l3030:
  2639   00252C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2640   00252E  EF9D  F012         	goto	u2060
  2641   002532  EF9B  F012         	goto	u2061
  2642   002536                     u2061:
  2643   002536  EFA1  F012         	goto	l3034
  2644   00253A                     u2060:
  2645   00253A  6C03               	negf	___awmod@divisor^0,c
  2646   00253C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2647   00253E  B0D8               	btfsc	status,0,c
  2648   002540  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2649   002542                     l3034:
  2650   002542  5003               	movf	___awmod@divisor^0,w,c
  2651   002544  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2652   002546  B4D8               	btfsc	status,2,c
  2653   002548  EFA8  F012         	goto	u2071
  2654   00254C  EFAA  F012         	goto	u2070
  2655   002550                     u2071:
  2656   002550  EFCE  F012         	goto	l3050
  2657   002554                     u2070:
  2658   002554  0E01               	movlw	1
  2659   002556  6E05               	movwf	___awmod@counter^0,c
  2660   002558  EFB2  F012         	goto	l3040
  2661   00255C                     l3038:
  2662   00255C  90D8               	bcf	status,0,c
  2663   00255E  3603               	rlcf	___awmod@divisor^0,f,c
  2664   002560  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2665   002562  2A05               	incf	___awmod@counter^0,f,c
  2666   002564                     l3040:
  2667   002564  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2668   002566  EFB7  F012         	goto	u2081
  2669   00256A  EFB9  F012         	goto	u2080
  2670   00256E                     u2081:
  2671   00256E  EFAE  F012         	goto	l3038
  2672   002572                     u2080:
  2673   002572                     l3042:
  2674   002572  5003               	movf	___awmod@divisor^0,w,c
  2675   002574  5C01               	subwf	___awmod@dividend^0,w,c
  2676   002576  5004               	movf	(___awmod@divisor+1)^0,w,c
  2677   002578  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2678   00257A  A0D8               	btfss	status,0,c
  2679   00257C  EFC2  F012         	goto	u2091
  2680   002580  EFC4  F012         	goto	u2090
  2681   002584                     u2091:
  2682   002584  EFC8  F012         	goto	l3046
  2683   002588                     u2090:
  2684   002588  5003               	movf	___awmod@divisor^0,w,c
  2685   00258A  5E01               	subwf	___awmod@dividend^0,f,c
  2686   00258C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2687   00258E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2688   002590                     l3046:
  2689   002590  90D8               	bcf	status,0,c
  2690   002592  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2691   002594  3203               	rrcf	___awmod@divisor^0,f,c
  2692   002596  2E05               	decfsz	___awmod@counter^0,f,c
  2693   002598  EFB9  F012         	goto	l3042
  2694   00259C                     l3050:
  2695   00259C  5006               	movf	___awmod@sign^0,w,c
  2696   00259E  B4D8               	btfsc	status,2,c
  2697   0025A0  EFD4  F012         	goto	u2101
  2698   0025A4  EFD6  F012         	goto	u2100
  2699   0025A8                     u2101:
  2700   0025A8  EFDA  F012         	goto	l3054
  2701   0025AC                     u2100:
  2702   0025AC  6C01               	negf	___awmod@dividend^0,c
  2703   0025AE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2704   0025B0  B0D8               	btfsc	status,0,c
  2705   0025B2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2706   0025B4                     l3054:
  2707   0025B4  C001  F001         	movff	___awmod@dividend,?___awmod
  2708   0025B8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2709   0025BC  0012               	return		;funcret
  2710   0025BE                     __end_of___awmod:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function ___awdiv *****************
  2714 ;; Defined at:
  2715 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  dividend        2    0[COMRAM] int 
  2718 ;;  divisor         2    2[COMRAM] int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  quotient        2    6[COMRAM] int 
  2721 ;;  sign            1    5[COMRAM] unsigned char 
  2722 ;;  counter         1    4[COMRAM] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  2    0[COMRAM] int 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;Total ram usage:        8 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_vfpfcnvrt
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text13
  2747   002390                     __ptext13:
  2748                           	callstack 0
  2749   002390                     ___awdiv:
  2750                           	callstack 25
  2751   002390  0E00               	movlw	0
  2752   002392  6E06               	movwf	___awdiv@sign^0,c
  2753   002394  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2754   002396  EFD1  F011         	goto	u1990
  2755   00239A  EFCF  F011         	goto	u1991
  2756   00239E                     u1991:
  2757   00239E  EFD7  F011         	goto	l2986
  2758   0023A2                     u1990:
  2759   0023A2  6C03               	negf	___awdiv@divisor^0,c
  2760   0023A4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2761   0023A6  B0D8               	btfsc	status,0,c
  2762   0023A8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2763   0023AA  0E01               	movlw	1
  2764   0023AC  6E06               	movwf	___awdiv@sign^0,c
  2765   0023AE                     l2986:
  2766   0023AE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2767   0023B0  EFDE  F011         	goto	u2000
  2768   0023B4  EFDC  F011         	goto	u2001
  2769   0023B8                     u2001:
  2770   0023B8  EFE4  F011         	goto	l2992
  2771   0023BC                     u2000:
  2772   0023BC  6C01               	negf	___awdiv@dividend^0,c
  2773   0023BE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2774   0023C0  B0D8               	btfsc	status,0,c
  2775   0023C2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2776   0023C4  0E01               	movlw	1
  2777   0023C6  1A06               	xorwf	___awdiv@sign^0,f,c
  2778   0023C8                     l2992:
  2779   0023C8  0E00               	movlw	0
  2780   0023CA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2781   0023CC  0E00               	movlw	0
  2782   0023CE  6E07               	movwf	___awdiv@quotient^0,c
  2783   0023D0  5003               	movf	___awdiv@divisor^0,w,c
  2784   0023D2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2785   0023D4  B4D8               	btfsc	status,2,c
  2786   0023D6  EFEF  F011         	goto	u2011
  2787   0023DA  EFF1  F011         	goto	u2010
  2788   0023DE                     u2011:
  2789   0023DE  EF19  F012         	goto	l3014
  2790   0023E2                     u2010:
  2791   0023E2  0E01               	movlw	1
  2792   0023E4  6E05               	movwf	___awdiv@counter^0,c
  2793   0023E6  EFF9  F011         	goto	l3000
  2794   0023EA                     l2998:
  2795   0023EA  90D8               	bcf	status,0,c
  2796   0023EC  3603               	rlcf	___awdiv@divisor^0,f,c
  2797   0023EE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2798   0023F0  2A05               	incf	___awdiv@counter^0,f,c
  2799   0023F2                     l3000:
  2800   0023F2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2801   0023F4  EFFE  F011         	goto	u2021
  2802   0023F8  EF00  F012         	goto	u2020
  2803   0023FC                     u2021:
  2804   0023FC  EFF5  F011         	goto	l2998
  2805   002400                     u2020:
  2806   002400                     l3002:
  2807   002400  90D8               	bcf	status,0,c
  2808   002402  3607               	rlcf	___awdiv@quotient^0,f,c
  2809   002404  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2810   002406  5003               	movf	___awdiv@divisor^0,w,c
  2811   002408  5C01               	subwf	___awdiv@dividend^0,w,c
  2812   00240A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2813   00240C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2814   00240E  A0D8               	btfss	status,0,c
  2815   002410  EF0C  F012         	goto	u2031
  2816   002414  EF0E  F012         	goto	u2030
  2817   002418                     u2031:
  2818   002418  EF13  F012         	goto	l3010
  2819   00241C                     u2030:
  2820   00241C  5003               	movf	___awdiv@divisor^0,w,c
  2821   00241E  5E01               	subwf	___awdiv@dividend^0,f,c
  2822   002420  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2823   002422  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2824   002424  8007               	bsf	___awdiv@quotient^0,0,c
  2825   002426                     l3010:
  2826   002426  90D8               	bcf	status,0,c
  2827   002428  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2828   00242A  3203               	rrcf	___awdiv@divisor^0,f,c
  2829   00242C  2E05               	decfsz	___awdiv@counter^0,f,c
  2830   00242E  EF00  F012         	goto	l3002
  2831   002432                     l3014:
  2832   002432  5006               	movf	___awdiv@sign^0,w,c
  2833   002434  B4D8               	btfsc	status,2,c
  2834   002436  EF1F  F012         	goto	u2041
  2835   00243A  EF21  F012         	goto	u2040
  2836   00243E                     u2041:
  2837   00243E  EF25  F012         	goto	l3018
  2838   002442                     u2040:
  2839   002442  6C07               	negf	___awdiv@quotient^0,c
  2840   002444  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2841   002446  B0D8               	btfsc	status,0,c
  2842   002448  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2843   00244A                     l3018:
  2844   00244A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2845   00244E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2846   002452  0012               	return		;funcret
  2847   002454                     __end_of___awdiv:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _sendStringSerial4 *****************
  2851 ;; Defined at:
  2852 ;;		line 41 in file "serial.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  string          2    1[COMRAM] PTR unsigned char 
  2855 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2856 ;;		 -> sendIntSerial4@string(17), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;Total ram usage:        2 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 2
  2875 ;; This function calls:
  2876 ;;		_sendCharSerial4
  2877 ;; This function is called by:
  2878 ;;		_sendRGBCvalSerial4
  2879 ;;		_sendHSVvalSerial4
  2880 ;;		_sendIntSerial4
  2881 ;;		_sendArrayCharSerial4
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text14
  2886   002996                     __ptext14:
  2887                           	callstack 0
  2888   002996                     _sendStringSerial4:
  2889                           	callstack 27
  2890   002996                     
  2891                           ;serial.c: 43:     while(*string != 0){
  2892   002996  EFE2  F014         	goto	l3452
  2893   00299A                     l3448:
  2894                           
  2895                           ;serial.c: 44:   sendCharSerial4(*string++);
  2896   00299A  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2897   00299E  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2898   0029A2  0E00               	movlw	low (__smallconst shr (0+16))
  2899   0029A4  6EF8               	movwf	tblptru,c
  2900   0029A6  0E0D               	movlw	(high __ramtop+-1)
  2901   0029A8  64F7               	cpfsgt	tblptrh,c
  2902   0029AA  D003               	bra	u2607
  2903   0029AC  0008               	tblrd		*
  2904   0029AE  50F5               	movf	tablat,w,c
  2905   0029B0  D005               	bra	u2600
  2906   0029B2                     u2607:
  2907   0029B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2908   0029B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2909   0029BA  50EF               	movf	indf0,w,c
  2910   0029BC                     u2600:
  2911   0029BC  EC33  F017         	call	_sendCharSerial4
  2912   0029C0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2913   0029C2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2914   0029C4                     l3452:
  2915                           
  2916                           ;serial.c: 43:     while(*string != 0){
  2917   0029C4  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2918   0029C8  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2919   0029CC  0E00               	movlw	low (__smallconst shr (0+16))
  2920   0029CE  6EF8               	movwf	tblptru,c
  2921   0029D0  0E0D               	movlw	(high __ramtop+-1)
  2922   0029D2  64F7               	cpfsgt	tblptrh,c
  2923   0029D4  D003               	bra	u2617
  2924   0029D6  0008               	tblrd		*
  2925   0029D8  50F5               	movf	tablat,w,c
  2926   0029DA  D005               	bra	u2610
  2927   0029DC                     u2617:
  2928   0029DC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2929   0029E0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2930   0029E4  50EF               	movf	indf0,w,c
  2931   0029E6                     u2610:
  2932   0029E6  0900               	iorlw	0
  2933   0029E8  A4D8               	btfss	status,2,c
  2934   0029EA  EFF9  F014         	goto	u2621
  2935   0029EE  EFFB  F014         	goto	u2620
  2936   0029F2                     u2621:
  2937   0029F2  EFCD  F014         	goto	l3448
  2938   0029F6                     u2620:
  2939   0029F6  0012               	return		;funcret
  2940   0029F8                     __end_of_sendStringSerial4:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _sendCharSerial4 *****************
  2944 ;; Defined at:
  2945 ;;		line 33 in file "serial.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  charToSend      1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  charToSend      1    0[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; Hardware stack levels required when called: 1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_sendStringSerial4
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text15
  2974   002E66                     __ptext15:
  2975                           	callstack 0
  2976   002E66                     _sendCharSerial4:
  2977                           	callstack 27
  2978                           
  2979                           ;incstack = 0
  2980                           ;sendCharSerial4@charToSend stored from wreg
  2981   002E66  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2982   002E68                     l464:
  2983   002E68  010E               	movlb	14	; () banked
  2984   002E6A  A537               	btfss	55,2,b	;volatile
  2985   002E6C  EF3A  F017         	goto	u2541
  2986   002E70  EF3C  F017         	goto	u2540
  2987   002E74                     u2541:
  2988   002E74  EF34  F017         	goto	l464
  2989   002E78                     u2540:
  2990   002E78                     
  2991                           ; BSR set to: 14
  2992                           ;serial.c: 35:     TX4REG = charToSend;
  2993   002E78  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2994   002E7C                     
  2995                           ; BSR set to: 14
  2996   002E7C  0012               	return		;funcret
  2997   002E7E                     __end_of_sendCharSerial4:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _scale_RGB *****************
  3001 ;; Defined at:
  3002 ;;		line 193 in file "color.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  3005 ;;		 -> main@RGBC_colour(8), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3017 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;Total ram usage:        3 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 2
  3024 ;; This function calls:
  3025 ;;		___flmul
  3026 ;;		___fltol
  3027 ;;		___xxtofl
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;;		_forward_navigation
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text16
  3035   0021F2                     __ptext16:
  3036                           	callstack 0
  3037   0021F2                     _scale_RGB:
  3038                           	callstack 28
  3039   0021F2                     
  3040                           ;color.c: 193: void scale_RGB(struct RGBC_val *p);color.c: 194: {;color.c: 195:     p->R
      +                           *= 0.5;
  3041   0021F2  0E00               	movlw	0
  3042   0021F4  6E13               	movwf	___flmul@a^0,c
  3043   0021F6  0E00               	movlw	0
  3044   0021F8  6E14               	movwf	(___flmul@a+1)^0,c
  3045   0021FA  0E00               	movlw	0
  3046   0021FC  6E15               	movwf	(___flmul@a+2)^0,c
  3047   0021FE  0E3F               	movlw	63
  3048   002200  6E16               	movwf	(___flmul@a+3)^0,c
  3049   002202  5032               	movf	scale_RGB@p^0,w,c
  3050   002204  6ED9               	movwf	fsr2l,c
  3051   002206  6ADA               	clrf	fsr2h,c
  3052   002208  CFDE F033          	movff	postinc2,??_scale_RGB
  3053   00220C  CFDD F034          	movff	postdec2,??_scale_RGB+1
  3054   002210  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  3055   002214  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  3056   002218  6A03               	clrf	(___xxtofl@val+2)^0,c
  3057   00221A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3058   00221C  0E00               	movlw	0
  3059   00221E  EC0A  F00F         	call	___xxtofl
  3060   002222  C001  F00F         	movff	?___xxtofl,___flmul@b
  3061   002226  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3062   00222A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3063   00222E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3064   002232  EC73  F00A         	call	___flmul	;wreg free
  3065   002236  C00F  F028         	movff	?___flmul,___fltol@f1
  3066   00223A  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3067   00223E  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3068   002242  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3069   002246  EC76  F010         	call	___fltol	;wreg free
  3070   00224A  5032               	movf	scale_RGB@p^0,w,c
  3071   00224C  6ED9               	movwf	fsr2l,c
  3072   00224E  6ADA               	clrf	fsr2h,c
  3073   002250  C028  FFDE         	movff	?___fltol,postinc2
  3074   002254  C029  FFDD         	movff	?___fltol+1,postdec2
  3075                           
  3076                           ;color.c: 196:     p->G *= 0.7;
  3077   002258  0E33               	movlw	51
  3078   00225A  6E13               	movwf	___flmul@a^0,c
  3079   00225C  0E33               	movlw	51
  3080   00225E  6E14               	movwf	(___flmul@a+1)^0,c
  3081   002260  0E33               	movlw	51
  3082   002262  6E15               	movwf	(___flmul@a+2)^0,c
  3083   002264  0E3F               	movlw	63
  3084   002266  6E16               	movwf	(___flmul@a+3)^0,c
  3085   002268  5032               	movf	scale_RGB@p^0,w,c
  3086   00226A  6ED9               	movwf	fsr2l,c
  3087   00226C  6ADA               	clrf	fsr2h,c
  3088   00226E  0E02               	movlw	2
  3089   002270  26D9               	addwf	fsr2l,f,c
  3090   002272  CFDE F033          	movff	postinc2,??_scale_RGB
  3091   002276  CFDD F034          	movff	postdec2,??_scale_RGB+1
  3092   00227A  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  3093   00227E  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  3094   002282  6A03               	clrf	(___xxtofl@val+2)^0,c
  3095   002284  6A04               	clrf	(___xxtofl@val+3)^0,c
  3096   002286  0E00               	movlw	0
  3097   002288  EC0A  F00F         	call	___xxtofl
  3098   00228C  C001  F00F         	movff	?___xxtofl,___flmul@b
  3099   002290  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3100   002294  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3101   002298  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3102   00229C  EC73  F00A         	call	___flmul	;wreg free
  3103   0022A0  C00F  F028         	movff	?___flmul,___fltol@f1
  3104   0022A4  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3105   0022A8  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3106   0022AC  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3107   0022B0  EC76  F010         	call	___fltol	;wreg free
  3108   0022B4  5032               	movf	scale_RGB@p^0,w,c
  3109   0022B6  6ED9               	movwf	fsr2l,c
  3110   0022B8  6ADA               	clrf	fsr2h,c
  3111   0022BA  0E02               	movlw	2
  3112   0022BC  26D9               	addwf	fsr2l,f,c
  3113   0022BE  C028  FFDE         	movff	?___fltol,postinc2
  3114   0022C2  C029  FFDD         	movff	?___fltol+1,postdec2
  3115   0022C6  0012               	return		;funcret
  3116   0022C8                     __end_of_scale_RGB:
  3117                           	callstack 0
  3118                           
  3119 ;; *************** function ___xxtofl *****************
  3120 ;; Defined at:
  3121 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  sign            1    wreg     unsigned char 
  3124 ;;  val             4    0[COMRAM] long 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  sign            1    8[COMRAM] unsigned char 
  3127 ;;  arg             4   10[COMRAM] unsigned long 
  3128 ;;  exp             1    9[COMRAM] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  4    0[COMRAM] unsigned char 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;Total ram usage:       14 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_scale_RGB
  3149 ;;		_stop
  3150 ;;		_turnLeft
  3151 ;;		_turnRight
  3152 ;;		_fullSpeedAhead
  3153 ;;		_fullSpeedReverse
  3154 ;;		_turnLeft90
  3155 ;;		_turnRight90
  3156 ;;		_turnLeft135
  3157 ;;		_turnRight135
  3158 ;;		_UTurn
  3159 ;;		_headbuttReverse
  3160 ;;		_squareReverse
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text17
  3165   001E14                     __ptext17:
  3166                           	callstack 0
  3167   001E14                     ___xxtofl:
  3168                           	callstack 28
  3169                           
  3170                           ;incstack = 0
  3171                           ;___xxtofl@sign stored from wreg
  3172   001E14  6E09               	movwf	___xxtofl@sign^0,c
  3173   001E16  5009               	movf	___xxtofl@sign^0,w,c
  3174   001E18  B4D8               	btfsc	status,2,c
  3175   001E1A  EF11  F00F         	goto	u2941
  3176   001E1E  EF13  F00F         	goto	u2940
  3177   001E22                     u2941:
  3178   001E22  EF35  F00F         	goto	l1400
  3179   001E26                     u2940:
  3180   001E26  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3181   001E28  EF1A  F00F         	goto	u2950
  3182   001E2C  EF18  F00F         	goto	u2951
  3183   001E30                     u2951:
  3184   001E30  EF35  F00F         	goto	l1400
  3185   001E34                     u2950:
  3186   001E34  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3187   001E38  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3188   001E3C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3189   001E40  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3190   001E44  1E05               	comf	??___xxtofl^0,f,c
  3191   001E46  1E06               	comf	(??___xxtofl+1)^0,f,c
  3192   001E48  1E07               	comf	(??___xxtofl+2)^0,f,c
  3193   001E4A  1E08               	comf	(??___xxtofl+3)^0,f,c
  3194   001E4C  2A05               	incf	??___xxtofl^0,f,c
  3195   001E4E  0E00               	movlw	0
  3196   001E50  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3197   001E52  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3198   001E54  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3199   001E56  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3200   001E5A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3201   001E5E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3202   001E62  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3203   001E66  EF3D  F00F         	goto	l3782
  3204   001E6A                     l1400:
  3205   001E6A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3206   001E6E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3207   001E72  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3208   001E76  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3209   001E7A                     l3782:
  3210   001E7A  5001               	movf	___xxtofl@val^0,w,c
  3211   001E7C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3212   001E7E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3213   001E80  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3214   001E82  A4D8               	btfss	status,2,c
  3215   001E84  EF46  F00F         	goto	u2961
  3216   001E88  EF48  F00F         	goto	u2960
  3217   001E8C                     u2961:
  3218   001E8C  EF52  F00F         	goto	l3788
  3219   001E90                     u2960:
  3220   001E90  0E00               	movlw	0
  3221   001E92  6E01               	movwf	?___xxtofl^0,c
  3222   001E94  0E00               	movlw	0
  3223   001E96  6E02               	movwf	(?___xxtofl+1)^0,c
  3224   001E98  0E00               	movlw	0
  3225   001E9A  6E03               	movwf	(?___xxtofl+2)^0,c
  3226   001E9C  0E00               	movlw	0
  3227   001E9E  6E04               	movwf	(?___xxtofl+3)^0,c
  3228   001EA0  EFE3  F00F         	goto	l1403
  3229   001EA4                     l3788:
  3230   001EA4  0E96               	movlw	150
  3231   001EA6  6E0A               	movwf	___xxtofl@exp^0,c
  3232   001EA8  EF5C  F00F         	goto	l3792
  3233   001EAC                     l3790:
  3234   001EAC  2A0A               	incf	___xxtofl@exp^0,f,c
  3235   001EAE  90D8               	bcf	status,0,c
  3236   001EB0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3237   001EB2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3238   001EB4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3239   001EB6  320B               	rrcf	___xxtofl@arg^0,f,c
  3240   001EB8                     l3792:
  3241   001EB8  0E00               	movlw	0
  3242   001EBA  140B               	andwf	___xxtofl@arg^0,w,c
  3243   001EBC  6E05               	movwf	??___xxtofl^0,c
  3244   001EBE  0E00               	movlw	0
  3245   001EC0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3246   001EC2  6E06               	movwf	(??___xxtofl+1)^0,c
  3247   001EC4  0E00               	movlw	0
  3248   001EC6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3249   001EC8  6E07               	movwf	(??___xxtofl+2)^0,c
  3250   001ECA  0EFE               	movlw	254
  3251   001ECC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3252   001ECE  6E08               	movwf	(??___xxtofl+3)^0,c
  3253   001ED0  5005               	movf	??___xxtofl^0,w,c
  3254   001ED2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3255   001ED4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3256   001ED6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3257   001ED8  A4D8               	btfss	status,2,c
  3258   001EDA  EF71  F00F         	goto	u2971
  3259   001EDE  EF73  F00F         	goto	u2970
  3260   001EE2                     u2971:
  3261   001EE2  EF56  F00F         	goto	l3790
  3262   001EE6                     u2970:
  3263   001EE6  EF81  F00F         	goto	l1407
  3264   001EEA                     l3794:
  3265   001EEA  2A0A               	incf	___xxtofl@exp^0,f,c
  3266   001EEC  0E01               	movlw	1
  3267   001EEE  260B               	addwf	___xxtofl@arg^0,f,c
  3268   001EF0  0E00               	movlw	0
  3269   001EF2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3270   001EF4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3271   001EF6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3272   001EF8  90D8               	bcf	status,0,c
  3273   001EFA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3274   001EFC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3275   001EFE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3276   001F00  320B               	rrcf	___xxtofl@arg^0,f,c
  3277   001F02                     l1407:
  3278   001F02  0E00               	movlw	0
  3279   001F04  140B               	andwf	___xxtofl@arg^0,w,c
  3280   001F06  6E05               	movwf	??___xxtofl^0,c
  3281   001F08  0E00               	movlw	0
  3282   001F0A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3283   001F0C  6E06               	movwf	(??___xxtofl+1)^0,c
  3284   001F0E  0E00               	movlw	0
  3285   001F10  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3286   001F12  6E07               	movwf	(??___xxtofl+2)^0,c
  3287   001F14  0EFF               	movlw	255
  3288   001F16  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3289   001F18  6E08               	movwf	(??___xxtofl+3)^0,c
  3290   001F1A  5005               	movf	??___xxtofl^0,w,c
  3291   001F1C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3292   001F1E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3293   001F20  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3294   001F22  A4D8               	btfss	status,2,c
  3295   001F24  EF96  F00F         	goto	u2981
  3296   001F28  EF98  F00F         	goto	u2980
  3297   001F2C                     u2981:
  3298   001F2C  EF75  F00F         	goto	l3794
  3299   001F30                     u2980:
  3300   001F30  EFA0  F00F         	goto	l3802
  3301   001F34                     l3800:
  3302   001F34  060A               	decf	___xxtofl@exp^0,f,c
  3303   001F36  90D8               	bcf	status,0,c
  3304   001F38  360B               	rlcf	___xxtofl@arg^0,f,c
  3305   001F3A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3306   001F3C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3307   001F3E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3308   001F40                     l3802:
  3309   001F40  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3310   001F42  EFA5  F00F         	goto	u2991
  3311   001F46  EFA7  F00F         	goto	u2990
  3312   001F4A                     u2991:
  3313   001F4A  EFAF  F00F         	goto	l1414
  3314   001F4E                     u2990:
  3315   001F4E  0E02               	movlw	2
  3316   001F50  600A               	cpfslt	___xxtofl@exp^0,c
  3317   001F52  EFAD  F00F         	goto	u3001
  3318   001F56  EFAF  F00F         	goto	u3000
  3319   001F5A                     u3001:
  3320   001F5A  EF9A  F00F         	goto	l3800
  3321   001F5E                     u3000:
  3322   001F5E                     l1414:
  3323   001F5E  B00A               	btfsc	___xxtofl@exp^0,0,c
  3324   001F60  EFB4  F00F         	goto	u3011
  3325   001F64  EFB6  F00F         	goto	u3010
  3326   001F68                     u3011:
  3327   001F68  EFB7  F00F         	goto	l3808
  3328   001F6C                     u3010:
  3329   001F6C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3330   001F6E                     l3808:
  3331   001F6E  90D8               	bcf	status,0,c
  3332   001F70  320A               	rrcf	___xxtofl@exp^0,f,c
  3333   001F72  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3334   001F76  6A06               	clrf	(??___xxtofl+1)^0,c
  3335   001F78  6A07               	clrf	(??___xxtofl+2)^0,c
  3336   001F7A  6A08               	clrf	(??___xxtofl+3)^0,c
  3337   001F7C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3338   001F80  6A07               	clrf	(??___xxtofl+2)^0,c
  3339   001F82  6A06               	clrf	(??___xxtofl+1)^0,c
  3340   001F84  6A05               	clrf	??___xxtofl^0,c
  3341   001F86  5005               	movf	??___xxtofl^0,w,c
  3342   001F88  120B               	iorwf	___xxtofl@arg^0,f,c
  3343   001F8A  5006               	movf	(??___xxtofl+1)^0,w,c
  3344   001F8C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3345   001F8E  5007               	movf	(??___xxtofl+2)^0,w,c
  3346   001F90  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3347   001F92  5008               	movf	(??___xxtofl+3)^0,w,c
  3348   001F94  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3349   001F96  5009               	movf	___xxtofl@sign^0,w,c
  3350   001F98  B4D8               	btfsc	status,2,c
  3351   001F9A  EFD1  F00F         	goto	u3021
  3352   001F9E  EFD3  F00F         	goto	u3020
  3353   001FA2                     u3021:
  3354   001FA2  EFDB  F00F         	goto	l3818
  3355   001FA6                     u3020:
  3356   001FA6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3357   001FA8  EFDA  F00F         	goto	u3030
  3358   001FAC  EFD8  F00F         	goto	u3031
  3359   001FB0                     u3031:
  3360   001FB0  EFDB  F00F         	goto	l3818
  3361   001FB4                     u3030:
  3362   001FB4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3363   001FB6                     l3818:
  3364   001FB6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3365   001FBA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3366   001FBE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3367   001FC2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3368   001FC6                     l1403:
  3369   001FC6  0012               	return		;funcret
  3370   001FC8                     __end_of___xxtofl:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function ___fltol *****************
  3374 ;; Defined at:
  3375 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  f1              4   39[COMRAM] unsigned char 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  exp1            1   48[COMRAM] unsigned char 
  3380 ;;  sign1           1   47[COMRAM] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  4   39[COMRAM] long 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;Total ram usage:       10 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_scale_RGB
  3401 ;;		_stop
  3402 ;;		_turnLeft
  3403 ;;		_turnRight
  3404 ;;		_fullSpeedAhead
  3405 ;;		_fullSpeedReverse
  3406 ;;		_turnLeft90
  3407 ;;		_turnRight90
  3408 ;;		_turnLeft135
  3409 ;;		_turnRight135
  3410 ;;		_UTurn
  3411 ;;		_headbuttReverse
  3412 ;;		_squareReverse
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text18
  3417   0020EC                     __ptext18:
  3418                           	callstack 0
  3419   0020EC                     ___fltol:
  3420                           	callstack 28
  3421   0020EC  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3422   0020EE  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3423   0020F0  6E31               	movwf	___fltol@exp1^0,c
  3424   0020F2  5031               	movf	___fltol@exp1^0,w,c
  3425   0020F4  A4D8               	btfss	status,2,c
  3426   0020F6  EF7F  F010         	goto	u2871
  3427   0020FA  EF81  F010         	goto	u2870
  3428   0020FE                     u2871:
  3429   0020FE  EF8B  F010         	goto	l3738
  3430   002102                     u2870:
  3431   002102                     l3734:
  3432   002102  0E00               	movlw	0
  3433   002104  6E28               	movwf	?___fltol^0,c
  3434   002106  0E00               	movlw	0
  3435   002108  6E29               	movwf	(?___fltol+1)^0,c
  3436   00210A  0E00               	movlw	0
  3437   00210C  6E2A               	movwf	(?___fltol+2)^0,c
  3438   00210E  0E00               	movlw	0
  3439   002110  6E2B               	movwf	(?___fltol+3)^0,c
  3440   002112  EFF8  F010         	goto	l1042
  3441   002116                     l3738:
  3442   002116  C028  F02C         	movff	___fltol@f1,??___fltol
  3443   00211A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3444   00211E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3445   002122  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3446   002126  0E20               	movlw	32
  3447   002128  EF9B  F010         	goto	u2880
  3448   00212C                     u2885:
  3449   00212C  90D8               	bcf	status,0,c
  3450   00212E  322F               	rrcf	(??___fltol+3)^0,f,c
  3451   002130  322E               	rrcf	(??___fltol+2)^0,f,c
  3452   002132  322D               	rrcf	(??___fltol+1)^0,f,c
  3453   002134  322C               	rrcf	??___fltol^0,f,c
  3454   002136                     u2880:
  3455   002136  2EE8               	decfsz	wreg,f,c
  3456   002138  EF96  F010         	goto	u2885
  3457   00213C  502C               	movf	??___fltol^0,w,c
  3458   00213E  6E30               	movwf	___fltol@sign1^0,c
  3459   002140  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3460   002142  0EFF               	movlw	255
  3461   002144  1628               	andwf	___fltol@f1^0,f,c
  3462   002146  0EFF               	movlw	255
  3463   002148  1629               	andwf	(___fltol@f1+1)^0,f,c
  3464   00214A  0EFF               	movlw	255
  3465   00214C  162A               	andwf	(___fltol@f1+2)^0,f,c
  3466   00214E  0E00               	movlw	0
  3467   002150  162B               	andwf	(___fltol@f1+3)^0,f,c
  3468   002152  0E96               	movlw	150
  3469   002154  5E31               	subwf	___fltol@exp1^0,f,c
  3470   002156  BE31               	btfsc	___fltol@exp1^0,7,c
  3471   002158  EFB2  F010         	goto	u2890
  3472   00215C  EFB0  F010         	goto	u2891
  3473   002160                     u2891:
  3474   002160  EFC8  F010         	goto	l3758
  3475   002164                     u2890:
  3476   002164  5031               	movf	___fltol@exp1^0,w,c
  3477   002166  0A80               	xorlw	128
  3478   002168  0F97               	addlw	151
  3479   00216A  B0D8               	btfsc	status,0,c
  3480   00216C  EFBA  F010         	goto	u2901
  3481   002170  EFBC  F010         	goto	u2900
  3482   002174                     u2901:
  3483   002174  EFBE  F010         	goto	l3754
  3484   002178                     u2900:
  3485   002178  EF81  F010         	goto	l3734
  3486   00217C                     l3754:
  3487   00217C  90D8               	bcf	status,0,c
  3488   00217E  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3489   002180  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3490   002182  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3491   002184  3228               	rrcf	___fltol@f1^0,f,c
  3492   002186  3E31               	incfsz	___fltol@exp1^0,f,c
  3493   002188  EFBE  F010         	goto	l3754
  3494   00218C  EFE0  F010         	goto	l3768
  3495   002190                     l3758:
  3496   002190  0E1F               	movlw	31
  3497   002192  6431               	cpfsgt	___fltol@exp1^0,c
  3498   002194  EFCE  F010         	goto	u2911
  3499   002198  EFD0  F010         	goto	u2910
  3500   00219C                     u2911:
  3501   00219C  EFD8  F010         	goto	l3766
  3502   0021A0                     u2910:
  3503   0021A0  EF81  F010         	goto	l3734
  3504   0021A4                     l3764:
  3505   0021A4  90D8               	bcf	status,0,c
  3506   0021A6  3628               	rlcf	___fltol@f1^0,f,c
  3507   0021A8  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3508   0021AA  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3509   0021AC  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3510   0021AE  0631               	decf	___fltol@exp1^0,f,c
  3511   0021B0                     l3766:
  3512   0021B0  5031               	movf	___fltol@exp1^0,w,c
  3513   0021B2  A4D8               	btfss	status,2,c
  3514   0021B4  EFDE  F010         	goto	u2921
  3515   0021B8  EFE0  F010         	goto	u2920
  3516   0021BC                     u2921:
  3517   0021BC  EFD2  F010         	goto	l3764
  3518   0021C0                     u2920:
  3519   0021C0                     l3768:
  3520   0021C0  5030               	movf	___fltol@sign1^0,w,c
  3521   0021C2  B4D8               	btfsc	status,2,c
  3522   0021C4  EFE6  F010         	goto	u2931
  3523   0021C8  EFE8  F010         	goto	u2930
  3524   0021CC                     u2931:
  3525   0021CC  EFF0  F010         	goto	l3772
  3526   0021D0                     u2930:
  3527   0021D0  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3528   0021D2  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3529   0021D4  1E29               	comf	(___fltol@f1+1)^0,f,c
  3530   0021D6  6C28               	negf	___fltol@f1^0,c
  3531   0021D8  0E00               	movlw	0
  3532   0021DA  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3533   0021DC  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3534   0021DE  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3535   0021E0                     l3772:
  3536   0021E0  C028  F028         	movff	___fltol@f1,?___fltol
  3537   0021E4  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3538   0021E8  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3539   0021EC  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3540   0021F0                     l1042:
  3541   0021F0  0012               	return		;funcret
  3542   0021F2                     __end_of___fltol:
  3543                           	callstack 0
  3544                           
  3545 ;; *************** function ___flmul *****************
  3546 ;; Defined at:
  3547 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  b               4   14[COMRAM] long 
  3550 ;;  a               4   18[COMRAM] long 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  prod            4   33[COMRAM] struct .
  3553 ;;  grs             4   27[COMRAM] unsigned long 
  3554 ;;  temp            2   37[COMRAM] struct .
  3555 ;;  bexp            1   32[COMRAM] unsigned char 
  3556 ;;  aexp            1   31[COMRAM] unsigned char 
  3557 ;;  sign            1   26[COMRAM] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  4   14[COMRAM] unsigned char 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, prodl, prodh
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3567 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;Total ram usage:       25 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_scale_RGB
  3578 ;;		_stop
  3579 ;;		_turnLeft
  3580 ;;		_turnRight
  3581 ;;		_fullSpeedAhead
  3582 ;;		_fullSpeedReverse
  3583 ;;		_turnLeft90
  3584 ;;		_turnRight90
  3585 ;;		_turnLeft135
  3586 ;;		_turnRight135
  3587 ;;		_UTurn
  3588 ;;		_headbuttReverse
  3589 ;;		_squareReverse
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text19
  3594   0014E6                     __ptext19:
  3595                           	callstack 0
  3596   0014E6                     ___flmul:
  3597                           	callstack 28
  3598   0014E6  5012               	movf	(___flmul@b+3)^0,w,c
  3599   0014E8  0B80               	andlw	128
  3600   0014EA  6E1B               	movwf	___flmul@sign^0,c
  3601   0014EC  5012               	movf	(___flmul@b+3)^0,w,c
  3602   0014EE  2412               	addwf	(___flmul@b+3)^0,w,c
  3603   0014F0  6E21               	movwf	___flmul@bexp^0,c
  3604   0014F2  AE11               	btfss	(___flmul@b+2)^0,7,c
  3605   0014F4  EF7E  F00A         	goto	u2681
  3606   0014F8  EF80  F00A         	goto	u2680
  3607   0014FC                     u2681:
  3608   0014FC  EF81  F00A         	goto	l3608
  3609   001500                     u2680:
  3610   001500  8021               	bsf	___flmul@bexp^0,0,c
  3611   001502                     l3608:
  3612   001502  5021               	movf	___flmul@bexp^0,w,c
  3613   001504  B4D8               	btfsc	status,2,c
  3614   001506  EF87  F00A         	goto	u2691
  3615   00150A  EF89  F00A         	goto	u2690
  3616   00150E                     u2691:
  3617   00150E  EF9C  F00A         	goto	l3616
  3618   001512                     u2690:
  3619   001512  2821               	incf	___flmul@bexp^0,w,c
  3620   001514  A4D8               	btfss	status,2,c
  3621   001516  EF8F  F00A         	goto	u2701
  3622   00151A  EF91  F00A         	goto	u2700
  3623   00151E                     u2701:
  3624   00151E  EF99  F00A         	goto	l3614
  3625   001522                     u2700:
  3626   001522  0E00               	movlw	0
  3627   001524  6E0F               	movwf	___flmul@b^0,c
  3628   001526  0E00               	movlw	0
  3629   001528  6E10               	movwf	(___flmul@b+1)^0,c
  3630   00152A  0E00               	movlw	0
  3631   00152C  6E11               	movwf	(___flmul@b+2)^0,c
  3632   00152E  0E00               	movlw	0
  3633   001530  6E12               	movwf	(___flmul@b+3)^0,c
  3634   001532                     l3614:
  3635   001532  8E11               	bsf	(___flmul@b+2)^0,7,c
  3636   001534  EFA4  F00A         	goto	l3618
  3637   001538                     l3616:
  3638   001538  0E00               	movlw	0
  3639   00153A  6E0F               	movwf	___flmul@b^0,c
  3640   00153C  0E00               	movlw	0
  3641   00153E  6E10               	movwf	(___flmul@b+1)^0,c
  3642   001540  0E00               	movlw	0
  3643   001542  6E11               	movwf	(___flmul@b+2)^0,c
  3644   001544  0E00               	movlw	0
  3645   001546  6E12               	movwf	(___flmul@b+3)^0,c
  3646   001548                     l3618:
  3647   001548  5016               	movf	(___flmul@a+3)^0,w,c
  3648   00154A  0B80               	andlw	128
  3649   00154C  1A1B               	xorwf	___flmul@sign^0,f,c
  3650   00154E  5016               	movf	(___flmul@a+3)^0,w,c
  3651   001550  2416               	addwf	(___flmul@a+3)^0,w,c
  3652   001552  6E20               	movwf	___flmul@aexp^0,c
  3653   001554  AE15               	btfss	(___flmul@a+2)^0,7,c
  3654   001556  EFAF  F00A         	goto	u2711
  3655   00155A  EFB1  F00A         	goto	u2710
  3656   00155E                     u2711:
  3657   00155E  EFB2  F00A         	goto	l3626
  3658   001562                     u2710:
  3659   001562  8020               	bsf	___flmul@aexp^0,0,c
  3660   001564                     l3626:
  3661   001564  5020               	movf	___flmul@aexp^0,w,c
  3662   001566  B4D8               	btfsc	status,2,c
  3663   001568  EFB8  F00A         	goto	u2721
  3664   00156C  EFBA  F00A         	goto	u2720
  3665   001570                     u2721:
  3666   001570  EFCD  F00A         	goto	l3634
  3667   001574                     u2720:
  3668   001574  2820               	incf	___flmul@aexp^0,w,c
  3669   001576  A4D8               	btfss	status,2,c
  3670   001578  EFC0  F00A         	goto	u2731
  3671   00157C  EFC2  F00A         	goto	u2730
  3672   001580                     u2731:
  3673   001580  EFCA  F00A         	goto	l3632
  3674   001584                     u2730:
  3675   001584  0E00               	movlw	0
  3676   001586  6E13               	movwf	___flmul@a^0,c
  3677   001588  0E00               	movlw	0
  3678   00158A  6E14               	movwf	(___flmul@a+1)^0,c
  3679   00158C  0E00               	movlw	0
  3680   00158E  6E15               	movwf	(___flmul@a+2)^0,c
  3681   001590  0E00               	movlw	0
  3682   001592  6E16               	movwf	(___flmul@a+3)^0,c
  3683   001594                     l3632:
  3684   001594  8E15               	bsf	(___flmul@a+2)^0,7,c
  3685   001596  EFD5  F00A         	goto	l1359
  3686   00159A                     l3634:
  3687   00159A  0E00               	movlw	0
  3688   00159C  6E13               	movwf	___flmul@a^0,c
  3689   00159E  0E00               	movlw	0
  3690   0015A0  6E14               	movwf	(___flmul@a+1)^0,c
  3691   0015A2  0E00               	movlw	0
  3692   0015A4  6E15               	movwf	(___flmul@a+2)^0,c
  3693   0015A6  0E00               	movlw	0
  3694   0015A8  6E16               	movwf	(___flmul@a+3)^0,c
  3695   0015AA                     l1359:
  3696   0015AA  5020               	movf	___flmul@aexp^0,w,c
  3697   0015AC  B4D8               	btfsc	status,2,c
  3698   0015AE  EFDB  F00A         	goto	u2741
  3699   0015B2  EFDD  F00A         	goto	u2740
  3700   0015B6                     u2741:
  3701   0015B6  EFE5  F00A         	goto	l3638
  3702   0015BA                     u2740:
  3703   0015BA  5021               	movf	___flmul@bexp^0,w,c
  3704   0015BC  A4D8               	btfss	status,2,c
  3705   0015BE  EFE3  F00A         	goto	u2751
  3706   0015C2  EFE5  F00A         	goto	u2750
  3707   0015C6                     u2751:
  3708   0015C6  EFEF  F00A         	goto	l3642
  3709   0015CA                     u2750:
  3710   0015CA                     l3638:
  3711   0015CA  0E00               	movlw	0
  3712   0015CC  6E0F               	movwf	?___flmul^0,c
  3713   0015CE  0E00               	movlw	0
  3714   0015D0  6E10               	movwf	(?___flmul+1)^0,c
  3715   0015D2  0E00               	movlw	0
  3716   0015D4  6E11               	movwf	(?___flmul+2)^0,c
  3717   0015D6  0E00               	movlw	0
  3718   0015D8  6E12               	movwf	(?___flmul+3)^0,c
  3719   0015DA  EF87  F00C         	goto	l1363
  3720   0015DE                     l3642:
  3721   0015DE  5015               	movf	(___flmul@a+2)^0,w,c
  3722   0015E0  020F               	mulwf	___flmul@b^0,c
  3723   0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  3724   0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3725   0015EA  5026               	movf	___flmul@temp^0,w,c
  3726   0015EC  6E1C               	movwf	___flmul@grs^0,c
  3727   0015EE  6A1D               	clrf	(___flmul@grs+1)^0,c
  3728   0015F0  6A1E               	clrf	(___flmul@grs+2)^0,c
  3729   0015F2  6A1F               	clrf	(___flmul@grs+3)^0,c
  3730   0015F4  5027               	movf	(___flmul@temp+1)^0,w,c
  3731   0015F6  6E22               	movwf	___flmul@prod^0,c
  3732   0015F8  6A23               	clrf	(___flmul@prod+1)^0,c
  3733   0015FA  6A24               	clrf	(___flmul@prod+2)^0,c
  3734   0015FC  6A25               	clrf	(___flmul@prod+3)^0,c
  3735   0015FE  5014               	movf	(___flmul@a+1)^0,w,c
  3736   001600  0210               	mulwf	(___flmul@b+1)^0,c
  3737   001602  CFF3 F026          	movff	prodl,___flmul@temp
  3738   001606  CFF4 F027          	movff	prodh,___flmul@temp+1
  3739   00160A  5026               	movf	___flmul@temp^0,w,c
  3740   00160C  261C               	addwf	___flmul@grs^0,f,c
  3741   00160E  0E00               	movlw	0
  3742   001610  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3743   001612  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3744   001614  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3745   001616  5027               	movf	(___flmul@temp+1)^0,w,c
  3746   001618  2622               	addwf	___flmul@prod^0,f,c
  3747   00161A  0E00               	movlw	0
  3748   00161C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3749   00161E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3750   001620  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3751   001622  5013               	movf	___flmul@a^0,w,c
  3752   001624  0211               	mulwf	(___flmul@b+2)^0,c
  3753   001626  CFF3 F026          	movff	prodl,___flmul@temp
  3754   00162A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3755   00162E  5026               	movf	___flmul@temp^0,w,c
  3756   001630  261C               	addwf	___flmul@grs^0,f,c
  3757   001632  0E00               	movlw	0
  3758   001634  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3759   001636  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3760   001638  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3761   00163A  5027               	movf	(___flmul@temp+1)^0,w,c
  3762   00163C  2622               	addwf	___flmul@prod^0,f,c
  3763   00163E  0E00               	movlw	0
  3764   001640  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3765   001642  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3766   001644  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3767   001646  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3768   00164A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3769   00164E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3770   001652  6A1C               	clrf	___flmul@grs^0,c
  3771   001654  5013               	movf	___flmul@a^0,w,c
  3772   001656  0210               	mulwf	(___flmul@b+1)^0,c
  3773   001658  CFF3 F026          	movff	prodl,___flmul@temp
  3774   00165C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3775   001660  5026               	movf	___flmul@temp^0,w,c
  3776   001662  261C               	addwf	___flmul@grs^0,f,c
  3777   001664  5027               	movf	(___flmul@temp+1)^0,w,c
  3778   001666  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3779   001668  0E00               	movlw	0
  3780   00166A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3781   00166C  0E00               	movlw	0
  3782   00166E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3783   001670  5014               	movf	(___flmul@a+1)^0,w,c
  3784   001672  020F               	mulwf	___flmul@b^0,c
  3785   001674  CFF3 F026          	movff	prodl,___flmul@temp
  3786   001678  CFF4 F027          	movff	prodh,___flmul@temp+1
  3787   00167C  5026               	movf	___flmul@temp^0,w,c
  3788   00167E  261C               	addwf	___flmul@grs^0,f,c
  3789   001680  5027               	movf	(___flmul@temp+1)^0,w,c
  3790   001682  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3791   001684  0E00               	movlw	0
  3792   001686  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3793   001688  0E00               	movlw	0
  3794   00168A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3795   00168C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3796   001690  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3797   001694  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3798   001698  6A1C               	clrf	___flmul@grs^0,c
  3799   00169A  5013               	movf	___flmul@a^0,w,c
  3800   00169C  020F               	mulwf	___flmul@b^0,c
  3801   00169E  CFF3 F026          	movff	prodl,___flmul@temp
  3802   0016A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3803   0016A6  5026               	movf	___flmul@temp^0,w,c
  3804   0016A8  261C               	addwf	___flmul@grs^0,f,c
  3805   0016AA  5027               	movf	(___flmul@temp+1)^0,w,c
  3806   0016AC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3807   0016AE  0E00               	movlw	0
  3808   0016B0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3809   0016B2  0E00               	movlw	0
  3810   0016B4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3811   0016B6  5015               	movf	(___flmul@a+2)^0,w,c
  3812   0016B8  0210               	mulwf	(___flmul@b+1)^0,c
  3813   0016BA  CFF3 F026          	movff	prodl,___flmul@temp
  3814   0016BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3815   0016C2  5026               	movf	___flmul@temp^0,w,c
  3816   0016C4  2622               	addwf	___flmul@prod^0,f,c
  3817   0016C6  5027               	movf	(___flmul@temp+1)^0,w,c
  3818   0016C8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3819   0016CA  0E00               	movlw	0
  3820   0016CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3821   0016CE  0E00               	movlw	0
  3822   0016D0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3823   0016D2  5014               	movf	(___flmul@a+1)^0,w,c
  3824   0016D4  0211               	mulwf	(___flmul@b+2)^0,c
  3825   0016D6  CFF3 F026          	movff	prodl,___flmul@temp
  3826   0016DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3827   0016DE  5026               	movf	___flmul@temp^0,w,c
  3828   0016E0  2622               	addwf	___flmul@prod^0,f,c
  3829   0016E2  5027               	movf	(___flmul@temp+1)^0,w,c
  3830   0016E4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3831   0016E6  0E00               	movlw	0
  3832   0016E8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3833   0016EA  0E00               	movlw	0
  3834   0016EC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3835   0016EE  5015               	movf	(___flmul@a+2)^0,w,c
  3836   0016F0  0211               	mulwf	(___flmul@b+2)^0,c
  3837   0016F2  CFF3 F026          	movff	prodl,___flmul@temp
  3838   0016F6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3839   0016FA  5026               	movf	___flmul@temp^0,w,c
  3840   0016FC  6E17               	movwf	??___flmul^0,c
  3841   0016FE  5027               	movf	(___flmul@temp+1)^0,w,c
  3842   001700  6E18               	movwf	(??___flmul+1)^0,c
  3843   001702  6A19               	clrf	(??___flmul+2)^0,c
  3844   001704  6A1A               	clrf	(??___flmul+3)^0,c
  3845   001706  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3846   00170A  C018  F019         	movff	??___flmul+1,??___flmul+2
  3847   00170E  C017  F018         	movff	??___flmul,??___flmul+1
  3848   001712  6A17               	clrf	??___flmul^0,c
  3849   001714  5017               	movf	??___flmul^0,w,c
  3850   001716  2622               	addwf	___flmul@prod^0,f,c
  3851   001718  5018               	movf	(??___flmul+1)^0,w,c
  3852   00171A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3853   00171C  5019               	movf	(??___flmul+2)^0,w,c
  3854   00171E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3855   001720  501A               	movf	(??___flmul+3)^0,w,c
  3856   001722  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3857   001724  C01C  F017         	movff	___flmul@grs,??___flmul
  3858   001728  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3859   00172C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3860   001730  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3861   001734  0E19               	movlw	25
  3862   001736  EFA2  F00B         	goto	u2760
  3863   00173A                     u2765:
  3864   00173A  90D8               	bcf	status,0,c
  3865   00173C  321A               	rrcf	(??___flmul+3)^0,f,c
  3866   00173E  3219               	rrcf	(??___flmul+2)^0,f,c
  3867   001740  3218               	rrcf	(??___flmul+1)^0,f,c
  3868   001742  3217               	rrcf	??___flmul^0,f,c
  3869   001744                     u2760:
  3870   001744  2EE8               	decfsz	wreg,f,c
  3871   001746  EF9D  F00B         	goto	u2765
  3872   00174A  5017               	movf	??___flmul^0,w,c
  3873   00174C  2622               	addwf	___flmul@prod^0,f,c
  3874   00174E  5018               	movf	(??___flmul+1)^0,w,c
  3875   001750  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3876   001752  5019               	movf	(??___flmul+2)^0,w,c
  3877   001754  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3878   001756  501A               	movf	(??___flmul+3)^0,w,c
  3879   001758  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3880   00175A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3881   00175E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3882   001762  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3883   001766  6A1C               	clrf	___flmul@grs^0,c
  3884   001768  5020               	movf	___flmul@aexp^0,w,c
  3885   00176A  C021  F017         	movff	___flmul@bexp,??___flmul
  3886   00176E  6A18               	clrf	(??___flmul+1)^0,c
  3887   001770  2617               	addwf	??___flmul^0,f,c
  3888   001772  0E00               	movlw	0
  3889   001774  2218               	addwfc	(??___flmul+1)^0,f,c
  3890   001776  0E82               	movlw	130
  3891   001778  2417               	addwf	??___flmul^0,w,c
  3892   00177A  6E26               	movwf	___flmul@temp^0,c
  3893   00177C  0EFF               	movlw	255
  3894   00177E  2018               	addwfc	(??___flmul+1)^0,w,c
  3895   001780  6E27               	movwf	(___flmul@temp+1)^0,c
  3896   001782  EFD8  F00B         	goto	l3690
  3897   001786                     l3684:
  3898   001786  90D8               	bcf	status,0,c
  3899   001788  3622               	rlcf	___flmul@prod^0,f,c
  3900   00178A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3901   00178C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3902   00178E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3903   001790  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3904   001792  EFCD  F00B         	goto	u2771
  3905   001796  EFCF  F00B         	goto	u2770
  3906   00179A                     u2771:
  3907   00179A  EFD0  F00B         	goto	l1366
  3908   00179E                     u2770:
  3909   00179E  8022               	bsf	___flmul@prod^0,0,c
  3910   0017A0                     l1366:
  3911   0017A0  90D8               	bcf	status,0,c
  3912   0017A2  361C               	rlcf	___flmul@grs^0,f,c
  3913   0017A4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3914   0017A6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3915   0017A8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3916   0017AA  0626               	decf	___flmul@temp^0,f,c
  3917   0017AC  A0D8               	btfss	status,0,c
  3918   0017AE  0627               	decf	(___flmul@temp+1)^0,f,c
  3919   0017B0                     l3690:
  3920   0017B0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3921   0017B2  EFDD  F00B         	goto	u2781
  3922   0017B6  EFDF  F00B         	goto	u2780
  3923   0017BA                     u2781:
  3924   0017BA  EFC3  F00B         	goto	l3684
  3925   0017BE                     u2780:
  3926   0017BE  0E00               	movlw	0
  3927   0017C0  6E20               	movwf	___flmul@aexp^0,c
  3928   0017C2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3929   0017C4  EFE6  F00B         	goto	u2791
  3930   0017C8  EFE8  F00B         	goto	u2790
  3931   0017CC                     u2791:
  3932   0017CC  EF0C  F00C         	goto	l1368
  3933   0017D0                     u2790:
  3934   0017D0  0EFF               	movlw	255
  3935   0017D2  141C               	andwf	___flmul@grs^0,w,c
  3936   0017D4  6E17               	movwf	??___flmul^0,c
  3937   0017D6  0EFF               	movlw	255
  3938   0017D8  141D               	andwf	(___flmul@grs+1)^0,w,c
  3939   0017DA  6E18               	movwf	(??___flmul+1)^0,c
  3940   0017DC  0EFF               	movlw	255
  3941   0017DE  141E               	andwf	(___flmul@grs+2)^0,w,c
  3942   0017E0  6E19               	movwf	(??___flmul+2)^0,c
  3943   0017E2  0E7F               	movlw	127
  3944   0017E4  141F               	andwf	(___flmul@grs+3)^0,w,c
  3945   0017E6  6E1A               	movwf	(??___flmul+3)^0,c
  3946   0017E8  5017               	movf	??___flmul^0,w,c
  3947   0017EA  1018               	iorwf	(??___flmul+1)^0,w,c
  3948   0017EC  1019               	iorwf	(??___flmul+2)^0,w,c
  3949   0017EE  101A               	iorwf	(??___flmul+3)^0,w,c
  3950   0017F0  B4D8               	btfsc	status,2,c
  3951   0017F2  EFFD  F00B         	goto	u2801
  3952   0017F6  EFFF  F00B         	goto	u2800
  3953   0017FA                     u2801:
  3954   0017FA  EF03  F00C         	goto	l1369
  3955   0017FE                     u2800:
  3956   0017FE                     l3698:
  3957   0017FE  0E01               	movlw	1
  3958   001800  6E20               	movwf	___flmul@aexp^0,c
  3959   001802  EF0C  F00C         	goto	l1368
  3960   001806                     l1369:
  3961   001806  A022               	btfss	___flmul@prod^0,0,c
  3962   001808  EF08  F00C         	goto	u2811
  3963   00180C  EF0A  F00C         	goto	u2810
  3964   001810                     u2811:
  3965   001810  EF0C  F00C         	goto	l1368
  3966   001814                     u2810:
  3967   001814  EFFF  F00B         	goto	l3698
  3968   001818                     l1368:
  3969   001818  5020               	movf	___flmul@aexp^0,w,c
  3970   00181A  B4D8               	btfsc	status,2,c
  3971   00181C  EF12  F00C         	goto	u2821
  3972   001820  EF14  F00C         	goto	u2820
  3973   001824                     u2821:
  3974   001824  EF38  F00C         	goto	l3710
  3975   001828                     u2820:
  3976   001828  0E01               	movlw	1
  3977   00182A  2622               	addwf	___flmul@prod^0,f,c
  3978   00182C  0E00               	movlw	0
  3979   00182E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3980   001830  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3981   001832  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3982   001834  A025               	btfss	(___flmul@prod+3)^0,0,c
  3983   001836  EF1F  F00C         	goto	u2831
  3984   00183A  EF21  F00C         	goto	u2830
  3985   00183E                     u2831:
  3986   00183E  EF38  F00C         	goto	l3710
  3987   001842                     u2830:
  3988   001842  C022  F017         	movff	___flmul@prod,??___flmul
  3989   001846  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3990   00184A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3991   00184E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3992   001852  341A               	rlcf	(??___flmul+3)^0,w,c
  3993   001854  321A               	rrcf	(??___flmul+3)^0,f,c
  3994   001856  3219               	rrcf	(??___flmul+2)^0,f,c
  3995   001858  3218               	rrcf	(??___flmul+1)^0,f,c
  3996   00185A  3217               	rrcf	??___flmul^0,f,c
  3997   00185C  C017  F022         	movff	??___flmul,___flmul@prod
  3998   001860  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3999   001864  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4000   001868  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4001   00186C  4A26               	infsnz	___flmul@temp^0,f,c
  4002   00186E  2A27               	incf	(___flmul@temp+1)^0,f,c
  4003   001870                     l3710:
  4004   001870  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4005   001872  EF43  F00C         	goto	u2841
  4006   001876  5027               	movf	(___flmul@temp+1)^0,w,c
  4007   001878  E108               	bnz	u2840
  4008   00187A  2826               	incf	___flmul@temp^0,w,c
  4009   00187C  A0D8               	btfss	status,0,c
  4010   00187E  EF43  F00C         	goto	u2841
  4011   001882  EF45  F00C         	goto	u2840
  4012   001886                     u2841:
  4013   001886  EF4F  F00C         	goto	l3714
  4014   00188A                     u2840:
  4015   00188A  0E00               	movlw	0
  4016   00188C  6E22               	movwf	___flmul@prod^0,c
  4017   00188E  0E00               	movlw	0
  4018   001890  6E23               	movwf	(___flmul@prod+1)^0,c
  4019   001892  0E80               	movlw	128
  4020   001894  6E24               	movwf	(___flmul@prod+2)^0,c
  4021   001896  0E7F               	movlw	127
  4022   001898  6E25               	movwf	(___flmul@prod+3)^0,c
  4023   00189A  EF7D  F00C         	goto	l3726
  4024   00189E                     l3714:
  4025   00189E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4026   0018A0  EF5C  F00C         	goto	u2850
  4027   0018A4  5027               	movf	(___flmul@temp+1)^0,w,c
  4028   0018A6  E106               	bnz	u2851
  4029   0018A8  0426               	decf	___flmul@temp^0,w,c
  4030   0018AA  B0D8               	btfsc	status,0,c
  4031   0018AC  EF5A  F00C         	goto	u2851
  4032   0018B0  EF5C  F00C         	goto	u2850
  4033   0018B4                     u2851:
  4034   0018B4  EF68  F00C         	goto	l1376
  4035   0018B8                     u2850:
  4036   0018B8  0E00               	movlw	0
  4037   0018BA  6E22               	movwf	___flmul@prod^0,c
  4038   0018BC  0E00               	movlw	0
  4039   0018BE  6E23               	movwf	(___flmul@prod+1)^0,c
  4040   0018C0  0E00               	movlw	0
  4041   0018C2  6E24               	movwf	(___flmul@prod+2)^0,c
  4042   0018C4  0E00               	movlw	0
  4043   0018C6  6E25               	movwf	(___flmul@prod+3)^0,c
  4044   0018C8  0E00               	movlw	0
  4045   0018CA  6E1B               	movwf	___flmul@sign^0,c
  4046   0018CC  EF7D  F00C         	goto	l3726
  4047   0018D0                     l1376:
  4048   0018D0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4049   0018D4  0EFF               	movlw	255
  4050   0018D6  1622               	andwf	___flmul@prod^0,f,c
  4051   0018D8  0EFF               	movlw	255
  4052   0018DA  1623               	andwf	(___flmul@prod+1)^0,f,c
  4053   0018DC  0E7F               	movlw	127
  4054   0018DE  1624               	andwf	(___flmul@prod+2)^0,f,c
  4055   0018E0  0E00               	movlw	0
  4056   0018E2  1625               	andwf	(___flmul@prod+3)^0,f,c
  4057   0018E4  A021               	btfss	___flmul@bexp^0,0,c
  4058   0018E6  EF77  F00C         	goto	u2861
  4059   0018EA  EF79  F00C         	goto	u2860
  4060   0018EE                     u2861:
  4061   0018EE  EF7A  F00C         	goto	l3724
  4062   0018F2                     u2860:
  4063   0018F2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4064   0018F4                     l3724:
  4065   0018F4  90D8               	bcf	status,0,c
  4066   0018F6  3021               	rrcf	___flmul@bexp^0,w,c
  4067   0018F8  6E25               	movwf	(___flmul@prod+3)^0,c
  4068   0018FA                     l3726:
  4069   0018FA  501B               	movf	___flmul@sign^0,w,c
  4070   0018FC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4071   0018FE  C022  F00F         	movff	___flmul@prod,?___flmul
  4072   001902  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4073   001906  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4074   00190A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4075   00190E                     l1363:
  4076   00190E  0012               	return		;funcret
  4077   001910                     __end_of___flmul:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _initUSART4 *****************
  4081 ;; Defined at:
  4082 ;;		line 8 in file "serial.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text20
  4111   002E48                     __ptext20:
  4112                           	callstack 0
  4113   002E48                     _initUSART4:
  4114                           	callstack 29
  4115   002E48                     
  4116                           ;serial.c: 9:     RC0PPS = 0x12;
  4117   002E48  0E12               	movlw	18
  4118   002E4A  010E               	movlb	14	; () banked
  4119   002E4C  6F62               	movwf	98,b	;volatile
  4120                           
  4121                           ;serial.c: 10:     RX4PPS = 0x11;
  4122   002E4E  0E11               	movlw	17
  4123   002E50  6F15               	movwf	21,b	;volatile
  4124   002E52                     
  4125                           ; BSR set to: 14
  4126                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4127   002E52  97E9               	bcf	233,3,b	;volatile
  4128   002E54                     
  4129                           ; BSR set to: 14
  4130                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4131   002E54  95E8               	bcf	232,2,b	;volatile
  4132                           
  4133                           ;serial.c: 14:     SP4BRGL = 51;
  4134   002E56  0E33               	movlw	51
  4135   002E58  6FE5               	movwf	229,b	;volatile
  4136                           
  4137                           ;serial.c: 15:     SP4BRGH = 0;
  4138   002E5A  0E00               	movlw	0
  4139   002E5C  6FE6               	movwf	230,b	;volatile
  4140   002E5E                     
  4141                           ; BSR set to: 14
  4142                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4143   002E5E  89E7               	bsf	231,4,b	;volatile
  4144   002E60                     
  4145                           ; BSR set to: 14
  4146                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4147   002E60  8BE8               	bsf	232,5,b	;volatile
  4148   002E62                     
  4149                           ; BSR set to: 14
  4150                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4151   002E62  8FE7               	bsf	231,7,b	;volatile
  4152   002E64                     
  4153                           ; BSR set to: 14
  4154   002E64  0012               	return		;funcret
  4155   002E66                     __end_of_initUSART4:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _initDCmotorsPWM *****************
  4159 ;; Defined at:
  4160 ;;		line 7 in file "dc_motor.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text21
  4189   002662                     __ptext21:
  4190                           	callstack 0
  4191   002662                     _initDCmotorsPWM:
  4192                           	callstack 29
  4193   002662                     
  4194                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  4195   002662  9485               	bcf	133,2,c	;volatile
  4196                           
  4197                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  4198   002664  9885               	bcf	133,4,c	;volatile
  4199                           
  4200                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  4201   002666  9E83               	bcf	131,7,c	;volatile
  4202                           
  4203                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  4204   002668  9C87               	bcf	135,6,c	;volatile
  4205                           
  4206                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  4207   00266A  947D               	bcf	125,2,c	;volatile
  4208                           
  4209                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  4210   00266C  987D               	bcf	125,4,c	;volatile
  4211                           
  4212                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  4213   00266E  9E7B               	bcf	123,7,c	;volatile
  4214                           
  4215                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  4216   002670  9C7F               	bcf	127,6,c	;volatile
  4217   002672                     
  4218                           ;dc_motor.c: 19:     RE2PPS=0x05;
  4219   002672  0E05               	movlw	5
  4220   002674  010E               	movlb	14	; () banked
  4221   002676  6F74               	movwf	116,b	;volatile
  4222                           
  4223                           ;dc_motor.c: 20:     RE4PPS=0x06;
  4224   002678  0E06               	movlw	6
  4225   00267A  6F76               	movwf	118,b	;volatile
  4226                           
  4227                           ;dc_motor.c: 21:     RC7PPS=0x07;
  4228   00267C  0E07               	movlw	7
  4229   00267E  6F69               	movwf	105,b	;volatile
  4230                           
  4231                           ;dc_motor.c: 22:     RG6PPS=0x08;
  4232   002680  0E08               	movlw	8
  4233   002682  6F88               	movwf	136,b	;volatile
  4234                           
  4235                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  4236   002684  50BD               	movf	189,w,c	;volatile
  4237   002686  0B8F               	andlw	-113
  4238   002688  0940               	iorlw	64
  4239   00268A  6EBD               	movwf	189,c	;volatile
  4240                           
  4241                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  4242   00268C  0EE0               	movlw	-32
  4243   00268E  16BE               	andwf	190,f,c	;volatile
  4244                           
  4245                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  4246   002690  50BF               	movf	191,w,c	;volatile
  4247   002692  0BF0               	andlw	-16
  4248   002694  0901               	iorlw	1
  4249   002696  6EBF               	movwf	191,c	;volatile
  4250   002698                     
  4251                           ; BSR set to: 14
  4252                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  4253   002698  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4254   00269C                     
  4255                           ; BSR set to: 14
  4256                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  4257   00269C  8EBD               	bsf	189,7,c	;volatile
  4258                           
  4259                           ;dc_motor.c: 36:         CCPR1H=0;
  4260   00269E  0E00               	movlw	0
  4261   0026A0  6EAA               	movwf	170,c	;volatile
  4262                           
  4263                           ;dc_motor.c: 37:         CCPR2H=0;
  4264   0026A2  0E00               	movlw	0
  4265   0026A4  6EA6               	movwf	166,c	;volatile
  4266                           
  4267                           ;dc_motor.c: 38:         CCPR3H=0;
  4268   0026A6  0E00               	movlw	0
  4269   0026A8  010F               	movlb	15	; () banked
  4270   0026AA  6F25               	movwf	37,b	;volatile
  4271                           
  4272                           ;dc_motor.c: 39:         CCPR4H=0;
  4273   0026AC  0E00               	movlw	0
  4274   0026AE  6F21               	movwf	33,b	;volatile
  4275                           
  4276                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  4277   0026B0  0EFC               	movlw	-4
  4278   0026B2  16AD               	andwf	173,f,c	;volatile
  4279                           
  4280                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  4281   0026B4  0EF3               	movlw	-13
  4282   0026B6  16AD               	andwf	173,f,c	;volatile
  4283                           
  4284                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  4285   0026B8  0ECF               	movlw	-49
  4286   0026BA  16AD               	andwf	173,f,c	;volatile
  4287                           
  4288                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  4289   0026BC  0E3F               	movlw	-193
  4290   0026BE  16AD               	andwf	173,f,c	;volatile
  4291   0026C0                     
  4292                           ; BSR set to: 15
  4293                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  4294   0026C0  88AB               	bsf	171,4,c	;volatile
  4295                           
  4296                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  4297   0026C2  50AB               	movf	171,w,c	;volatile
  4298   0026C4  0BF0               	andlw	-16
  4299   0026C6  090C               	iorlw	12
  4300   0026C8  6EAB               	movwf	171,c	;volatile
  4301   0026CA                     
  4302                           ; BSR set to: 15
  4303                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  4304   0026CA  8EAB               	bsf	171,7,c	;volatile
  4305   0026CC                     
  4306                           ; BSR set to: 15
  4307                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  4308   0026CC  88A7               	bsf	167,4,c	;volatile
  4309                           
  4310                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  4311   0026CE  50A7               	movf	167,w,c	;volatile
  4312   0026D0  0BF0               	andlw	-16
  4313   0026D2  090C               	iorlw	12
  4314   0026D4  6EA7               	movwf	167,c	;volatile
  4315   0026D6                     
  4316                           ; BSR set to: 15
  4317                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  4318   0026D6  8EA7               	bsf	167,7,c	;volatile
  4319   0026D8                     
  4320                           ; BSR set to: 15
  4321                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  4322   0026D8  8926               	bsf	38,4,b	;volatile
  4323                           
  4324                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  4325   0026DA  5126               	movf	38,w,b	;volatile
  4326   0026DC  0BF0               	andlw	-16
  4327   0026DE  090C               	iorlw	12
  4328   0026E0  6F26               	movwf	38,b	;volatile
  4329   0026E2                     
  4330                           ; BSR set to: 15
  4331                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  4332   0026E2  8F26               	bsf	38,7,b	;volatile
  4333   0026E4                     
  4334                           ; BSR set to: 15
  4335                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  4336   0026E4  8922               	bsf	34,4,b	;volatile
  4337                           
  4338                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  4339   0026E6  5122               	movf	34,w,b	;volatile
  4340   0026E8  0BF0               	andlw	-16
  4341   0026EA  090C               	iorlw	12
  4342   0026EC  6F22               	movwf	34,b	;volatile
  4343   0026EE                     
  4344                           ; BSR set to: 15
  4345                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  4346   0026EE  8F22               	bsf	34,7,b	;volatile
  4347   0026F0                     
  4348                           ; BSR set to: 15
  4349   0026F0  0012               	return		;funcret
  4350   0026F2                     __end_of_initDCmotorsPWM:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _convert_HSV *****************
  4354 ;; Defined at:
  4355 ;;		line 205 in file "color.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  4358 ;;		 -> main@HSV_colour(6), 
  4359 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  4360 ;;		 -> main@RGBC_colour(8), 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  temp            4   51[COMRAM] unsigned long 
  4363 ;;  temp            4   47[COMRAM] unsigned long 
  4364 ;;  temp            4   43[COMRAM] unsigned long 
  4365 ;;  temp            4   39[COMRAM] unsigned long 
  4366 ;;  temp            4   55[COMRAM] unsigned long 
  4367 ;;  temp            4   35[COMRAM] unsigned long 
  4368 ;;  temp            4   31[COMRAM] unsigned long 
  4369 ;;  C               2   63[COMRAM] unsigned int 
  4370 ;;  M               2   61[COMRAM] unsigned int 
  4371 ;;  hue_scale       2   59[COMRAM] unsigned int 
  4372 ;;  hue             2   29[COMRAM] unsigned int 
  4373 ;;  sat             2   27[COMRAM] unsigned int 
  4374 ;;  m               2   25[COMRAM] unsigned int 
  4375 ;;  sat_scale       2   23[COMRAM] unsigned int 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;Total ram usage:       52 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 2
  4392 ;; This function calls:
  4393 ;;		___lldiv
  4394 ;;		___lmul
  4395 ;;		_max_RGB
  4396 ;;		_min_RGB
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;;		_forward_navigation
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text22
  4404   000E1A                     __ptext22:
  4405                           	callstack 0
  4406   000E1A                     _convert_HSV:
  4407                           	callstack 28
  4408   000E1A                     
  4409                           ;color.c: 205: void convert_HSV(struct HSV_val *p1,struct RGBC_val *p2);color.c: 206: {;
      +                          color.c: 207:     unsigned int hue = 0;
  4410   000E1A  0E00               	movlw	0
  4411   000E1C  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  4412   000E1E  0E00               	movlw	0
  4413   000E20  6E1E               	movwf	convert_HSV@hue^0,c
  4414                           
  4415                           ;color.c: 209:     unsigned int hue_scale = 60;
  4416   000E22  0E00               	movlw	0
  4417   000E24  6E3D               	movwf	(convert_HSV@hue_scale+1)^0,c
  4418   000E26  0E3C               	movlw	60
  4419   000E28  6E3C               	movwf	convert_HSV@hue_scale^0,c
  4420                           
  4421                           ;color.c: 210:     unsigned int sat_scale = 100;
  4422   000E2A  0E00               	movlw	0
  4423   000E2C  6E19               	movwf	(convert_HSV@sat_scale+1)^0,c
  4424   000E2E  0E64               	movlw	100
  4425   000E30  6E18               	movwf	convert_HSV@sat_scale^0,c
  4426   000E32                     
  4427                           ;color.c: 212:     unsigned int M = max_RGB(p2);
  4428   000E32  C00F  F001         	movff	convert_HSV@p2,max_RGB@p
  4429   000E36  ECB7  F013         	call	_max_RGB	;wreg free
  4430   000E3A  C001  F03E         	movff	?_max_RGB,convert_HSV@M
  4431   000E3E  C002  F03F         	movff	?_max_RGB+1,convert_HSV@M+1
  4432   000E42                     
  4433                           ;color.c: 213:     unsigned int m = min_RGB(p2);
  4434   000E42  C00F  F001         	movff	convert_HSV@p2,min_RGB@p
  4435   000E46  EC79  F013         	call	_min_RGB	;wreg free
  4436   000E4A  C001  F01A         	movff	?_min_RGB,convert_HSV@m
  4437   000E4E  C002  F01B         	movff	?_min_RGB+1,convert_HSV@m+1
  4438   000E52                     
  4439                           ;color.c: 214:     unsigned int C = M - m;
  4440   000E52  501A               	movf	convert_HSV@m^0,w,c
  4441   000E54  5C3E               	subwf	convert_HSV@M^0,w,c
  4442   000E56  6E40               	movwf	convert_HSV@C^0,c
  4443   000E58  501B               	movf	(convert_HSV@m+1)^0,w,c
  4444   000E5A  583F               	subwfb	(convert_HSV@M+1)^0,w,c
  4445   000E5C  6E41               	movwf	(convert_HSV@C+1)^0,c
  4446   000E5E                     
  4447                           ;color.c: 216:     if (C == 0) {
  4448   000E5E  5040               	movf	convert_HSV@C^0,w,c
  4449   000E60  1041               	iorwf	(convert_HSV@C+1)^0,w,c
  4450   000E62  A4D8               	btfss	status,2,c
  4451   000E64  EF36  F007         	goto	u3211
  4452   000E68  EF38  F007         	goto	u3210
  4453   000E6C                     u3211:
  4454   000E6C  EF3E  F007         	goto	l3888
  4455   000E70                     u3210:
  4456   000E70                     
  4457                           ;color.c: 217:         hue = 0;
  4458   000E70  0E00               	movlw	0
  4459   000E72  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  4460   000E74  0E00               	movlw	0
  4461   000E76  6E1E               	movwf	convert_HSV@hue^0,c
  4462                           
  4463                           ;color.c: 218:     } else {
  4464   000E78  EF0E  F00A         	goto	l3972
  4465   000E7C                     l3888:
  4466                           
  4467                           ;color.c: 228:         if (M == p2->R) {
  4468   000E7C  500F               	movf	convert_HSV@p2^0,w,c
  4469   000E7E  6ED9               	movwf	fsr2l,c
  4470   000E80  6ADA               	clrf	fsr2h,c
  4471   000E82  503E               	movf	convert_HSV@M^0,w,c
  4472   000E84  18DE               	xorwf	postinc2,w,c
  4473   000E86  E107               	bnz	u3221
  4474   000E88  503F               	movf	(convert_HSV@M+1)^0,w,c
  4475   000E8A  18DE               	xorwf	postinc2,w,c
  4476   000E8C  A4D8               	btfss	status,2,c
  4477   000E8E  EF4B  F007         	goto	u3221
  4478   000E92  EF4D  F007         	goto	u3220
  4479   000E96                     u3221:
  4480   000E96  EF3A  F008         	goto	l3916
  4481   000E9A                     u3220:
  4482   000E9A                     
  4483                           ;color.c: 229:             if (p2->G >= p2->B) {
  4484   000E9A  500F               	movf	convert_HSV@p2^0,w,c
  4485   000E9C  6ED9               	movwf	fsr2l,c
  4486   000E9E  6ADA               	clrf	fsr2h,c
  4487   000EA0  0E04               	movlw	4
  4488   000EA2  26D9               	addwf	fsr2l,f,c
  4489   000EA4  500F               	movf	convert_HSV@p2^0,w,c
  4490   000EA6  6EE1               	movwf	fsr1l,c
  4491   000EA8  6AE2               	clrf	fsr1h,c
  4492   000EAA  0E02               	movlw	2
  4493   000EAC  26E1               	addwf	fsr1l,f,c
  4494   000EAE  50DE               	movf	postinc2,w,c
  4495   000EB0  5CE6               	subwf	postinc1,w,c
  4496   000EB2  50DE               	movf	postinc2,w,c
  4497   000EB4  58E6               	subwfb	postinc1,w,c
  4498   000EB6  A0D8               	btfss	status,0,c
  4499   000EB8  EF60  F007         	goto	u3231
  4500   000EBC  EF62  F007         	goto	u3230
  4501   000EC0                     u3231:
  4502   000EC0  EFC2  F007         	goto	l3904
  4503   000EC4                     u3230:
  4504   000EC4                     
  4505                           ;color.c: 233:                 temp *= 0;
  4506   000EC4  0E00               	movlw	0
  4507   000EC6  6E24               	movwf	convert_HSV@temp^0,c
  4508   000EC8  0E00               	movlw	0
  4509   000ECA  6E25               	movwf	(convert_HSV@temp+1)^0,c
  4510   000ECC  0E00               	movlw	0
  4511   000ECE  6E26               	movwf	(convert_HSV@temp+2)^0,c
  4512   000ED0  0E00               	movlw	0
  4513   000ED2  6E27               	movwf	(convert_HSV@temp+3)^0,c
  4514   000ED4                     
  4515                           ;color.c: 234:                 temp += (unsigned long)(p2->G - p2->B);
  4516   000ED4  500F               	movf	convert_HSV@p2^0,w,c
  4517   000ED6  6ED9               	movwf	fsr2l,c
  4518   000ED8  6ADA               	clrf	fsr2h,c
  4519   000EDA  0E04               	movlw	4
  4520   000EDC  26D9               	addwf	fsr2l,f,c
  4521   000EDE  CFDE F010          	movff	postinc2,??_convert_HSV
  4522   000EE2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4523   000EE6  500F               	movf	convert_HSV@p2^0,w,c
  4524   000EE8  6ED9               	movwf	fsr2l,c
  4525   000EEA  6ADA               	clrf	fsr2h,c
  4526   000EEC  0E02               	movlw	2
  4527   000EEE  26D9               	addwf	fsr2l,f,c
  4528   000EF0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4529   000EF4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4530   000EF8  5010               	movf	??_convert_HSV^0,w,c
  4531   000EFA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4532   000EFC  6E14               	movwf	(??_convert_HSV+4)^0,c
  4533   000EFE  5011               	movf	(??_convert_HSV+1)^0,w,c
  4534   000F00  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4535   000F02  6E15               	movwf	(??_convert_HSV+5)^0,c
  4536   000F04  5014               	movf	(??_convert_HSV+4)^0,w,c
  4537   000F06  2624               	addwf	convert_HSV@temp^0,f,c
  4538   000F08  5015               	movf	(??_convert_HSV+5)^0,w,c
  4539   000F0A  2225               	addwfc	(convert_HSV@temp+1)^0,f,c
  4540   000F0C  0E00               	movlw	0
  4541   000F0E  2226               	addwfc	(convert_HSV@temp+2)^0,f,c
  4542   000F10  0E00               	movlw	0
  4543   000F12  2227               	addwfc	(convert_HSV@temp+3)^0,f,c
  4544   000F14                     
  4545                           ;color.c: 235:                 temp *= (unsigned long)hue_scale;
  4546   000F14  C024  F001         	movff	convert_HSV@temp,___lmul@multiplier
  4547   000F18  C025  F002         	movff	convert_HSV@temp+1,___lmul@multiplier+1
  4548   000F1C  C026  F003         	movff	convert_HSV@temp+2,___lmul@multiplier+2
  4549   000F20  C027  F004         	movff	convert_HSV@temp+3,___lmul@multiplier+3
  4550   000F24  0E3C               	movlw	60
  4551   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  4552   000F28  0E00               	movlw	0
  4553   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4554   000F2C  0E00               	movlw	0
  4555   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4556   000F30  0E00               	movlw	0
  4557   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4558   000F34  EC64  F014         	call	___lmul	;wreg free
  4559   000F38  C001  F024         	movff	?___lmul,convert_HSV@temp
  4560   000F3C  C002  F025         	movff	?___lmul+1,convert_HSV@temp+1
  4561   000F40  C003  F026         	movff	?___lmul+2,convert_HSV@temp+2
  4562   000F44  C004  F027         	movff	?___lmul+3,convert_HSV@temp+3
  4563   000F48                     
  4564                           ;color.c: 236:                 temp /= (unsigned long)C;
  4565   000F48  C024  F001         	movff	convert_HSV@temp,___lldiv@dividend
  4566   000F4C  C025  F002         	movff	convert_HSV@temp+1,___lldiv@dividend+1
  4567   000F50  C026  F003         	movff	convert_HSV@temp+2,___lldiv@dividend+2
  4568   000F54  C027  F004         	movff	convert_HSV@temp+3,___lldiv@dividend+3
  4569   000F58  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4570   000F5C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4571   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4572   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4573   000F64  ECDF  F012         	call	___lldiv	;wreg free
  4574   000F68  C001  F024         	movff	?___lldiv,convert_HSV@temp
  4575   000F6C  C002  F025         	movff	?___lldiv+1,convert_HSV@temp+1
  4576   000F70  C003  F026         	movff	?___lldiv+2,convert_HSV@temp+2
  4577   000F74  C004  F027         	movff	?___lldiv+3,convert_HSV@temp+3
  4578   000F78                     
  4579                           ;color.c: 237:                 hue = (unsigned int)temp;
  4580   000F78  C024  F01E         	movff	convert_HSV@temp,convert_HSV@hue
  4581   000F7C  C025  F01F         	movff	convert_HSV@temp+1,convert_HSV@hue+1
  4582                           
  4583                           ;color.c: 238:             } else {
  4584   000F80  EF3A  F008         	goto	l3916
  4585   000F84                     l3904:
  4586                           
  4587                           ;color.c: 240:                 unsigned long temp;;color.c: 241:                 temp = 
      +                          (unsigned long)C;
  4588   000F84  C040  F038         	movff	convert_HSV@C,convert_HSV@temp_631
  4589   000F88  C041  F039         	movff	convert_HSV@C+1,convert_HSV@temp_631+1
  4590   000F8C  6A3A               	clrf	(convert_HSV@temp_631+2)^0,c
  4591   000F8E  6A3B               	clrf	(convert_HSV@temp_631+3)^0,c
  4592   000F90                     
  4593                           ;color.c: 242:                 temp *= 6;
  4594   000F90  C038  F001         	movff	convert_HSV@temp_631,___lmul@multiplier
  4595   000F94  C039  F002         	movff	convert_HSV@temp_631+1,___lmul@multiplier+1
  4596   000F98  C03A  F003         	movff	convert_HSV@temp_631+2,___lmul@multiplier+2
  4597   000F9C  C03B  F004         	movff	convert_HSV@temp_631+3,___lmul@multiplier+3
  4598   000FA0  0E06               	movlw	6
  4599   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  4600   000FA4  0E00               	movlw	0
  4601   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4602   000FA8  0E00               	movlw	0
  4603   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4604   000FAC  0E00               	movlw	0
  4605   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4606   000FB0  EC64  F014         	call	___lmul	;wreg free
  4607   000FB4  C001  F038         	movff	?___lmul,convert_HSV@temp_631
  4608   000FB8  C002  F039         	movff	?___lmul+1,convert_HSV@temp_631+1
  4609   000FBC  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_631+2
  4610   000FC0  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_631+3
  4611   000FC4                     
  4612                           ;color.c: 243:                 temp -= (unsigned long)(p2->B - p2->G);
  4613   000FC4  500F               	movf	convert_HSV@p2^0,w,c
  4614   000FC6  6ED9               	movwf	fsr2l,c
  4615   000FC8  6ADA               	clrf	fsr2h,c
  4616   000FCA  0E02               	movlw	2
  4617   000FCC  26D9               	addwf	fsr2l,f,c
  4618   000FCE  CFDE F010          	movff	postinc2,??_convert_HSV
  4619   000FD2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4620   000FD6  500F               	movf	convert_HSV@p2^0,w,c
  4621   000FD8  6ED9               	movwf	fsr2l,c
  4622   000FDA  6ADA               	clrf	fsr2h,c
  4623   000FDC  0E04               	movlw	4
  4624   000FDE  26D9               	addwf	fsr2l,f,c
  4625   000FE0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4626   000FE4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4627   000FE8  5010               	movf	??_convert_HSV^0,w,c
  4628   000FEA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4629   000FEC  6E14               	movwf	(??_convert_HSV+4)^0,c
  4630   000FEE  5011               	movf	(??_convert_HSV+1)^0,w,c
  4631   000FF0  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4632   000FF2  6E15               	movwf	(??_convert_HSV+5)^0,c
  4633   000FF4  6A16               	clrf	(??_convert_HSV+6)^0,c
  4634   000FF6  6A17               	clrf	(??_convert_HSV+7)^0,c
  4635   000FF8  5014               	movf	(??_convert_HSV+4)^0,w,c
  4636   000FFA  5E38               	subwf	convert_HSV@temp_631^0,f,c
  4637   000FFC  5015               	movf	(??_convert_HSV+5)^0,w,c
  4638   000FFE  5A39               	subwfb	(convert_HSV@temp_631+1)^0,f,c
  4639   001000  5016               	movf	(??_convert_HSV+6)^0,w,c
  4640   001002  5A3A               	subwfb	(convert_HSV@temp_631+2)^0,f,c
  4641   001004  5017               	movf	(??_convert_HSV+7)^0,w,c
  4642   001006  5A3B               	subwfb	(convert_HSV@temp_631+3)^0,f,c
  4643   001008                     
  4644                           ;color.c: 244:                 temp *= (unsigned long)hue_scale;
  4645   001008  C038  F001         	movff	convert_HSV@temp_631,___lmul@multiplier
  4646   00100C  C039  F002         	movff	convert_HSV@temp_631+1,___lmul@multiplier+1
  4647   001010  C03A  F003         	movff	convert_HSV@temp_631+2,___lmul@multiplier+2
  4648   001014  C03B  F004         	movff	convert_HSV@temp_631+3,___lmul@multiplier+3
  4649   001018  0E3C               	movlw	60
  4650   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  4651   00101C  0E00               	movlw	0
  4652   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4653   001020  0E00               	movlw	0
  4654   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4655   001024  0E00               	movlw	0
  4656   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4657   001028  EC64  F014         	call	___lmul	;wreg free
  4658   00102C  C001  F038         	movff	?___lmul,convert_HSV@temp_631
  4659   001030  C002  F039         	movff	?___lmul+1,convert_HSV@temp_631+1
  4660   001034  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_631+2
  4661   001038  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_631+3
  4662   00103C                     
  4663                           ;color.c: 245:                 temp /= (unsigned long)C;
  4664   00103C  C038  F001         	movff	convert_HSV@temp_631,___lldiv@dividend
  4665   001040  C039  F002         	movff	convert_HSV@temp_631+1,___lldiv@dividend+1
  4666   001044  C03A  F003         	movff	convert_HSV@temp_631+2,___lldiv@dividend+2
  4667   001048  C03B  F004         	movff	convert_HSV@temp_631+3,___lldiv@dividend+3
  4668   00104C  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4669   001050  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4670   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4671   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4672   001058  ECDF  F012         	call	___lldiv	;wreg free
  4673   00105C  C001  F038         	movff	?___lldiv,convert_HSV@temp_631
  4674   001060  C002  F039         	movff	?___lldiv+1,convert_HSV@temp_631+1
  4675   001064  C003  F03A         	movff	?___lldiv+2,convert_HSV@temp_631+2
  4676   001068  C004  F03B         	movff	?___lldiv+3,convert_HSV@temp_631+3
  4677   00106C                     
  4678                           ;color.c: 246:                 hue = (unsigned int)temp;
  4679   00106C  C038  F01E         	movff	convert_HSV@temp_631,convert_HSV@hue
  4680   001070  C039  F01F         	movff	convert_HSV@temp_631+1,convert_HSV@hue+1
  4681   001074                     l3916:
  4682                           
  4683                           ;color.c: 249:         if (M == p2->G) {
  4684   001074  500F               	movf	convert_HSV@p2^0,w,c
  4685   001076  6ED9               	movwf	fsr2l,c
  4686   001078  6ADA               	clrf	fsr2h,c
  4687   00107A  0E02               	movlw	2
  4688   00107C  26D9               	addwf	fsr2l,f,c
  4689   00107E  503E               	movf	convert_HSV@M^0,w,c
  4690   001080  18DE               	xorwf	postinc2,w,c
  4691   001082  E107               	bnz	u3241
  4692   001084  503F               	movf	(convert_HSV@M+1)^0,w,c
  4693   001086  18DE               	xorwf	postinc2,w,c
  4694   001088  A4D8               	btfss	status,2,c
  4695   00108A  EF49  F008         	goto	u3241
  4696   00108E  EF4B  F008         	goto	u3240
  4697   001092                     u3241:
  4698   001092  EF20  F009         	goto	l3944
  4699   001096                     u3240:
  4700   001096                     
  4701                           ;color.c: 250:             if (p2->B >= p2->R) {
  4702   001096  500F               	movf	convert_HSV@p2^0,w,c
  4703   001098  6ED9               	movwf	fsr2l,c
  4704   00109A  6ADA               	clrf	fsr2h,c
  4705   00109C  500F               	movf	convert_HSV@p2^0,w,c
  4706   00109E  6EE1               	movwf	fsr1l,c
  4707   0010A0  6AE2               	clrf	fsr1h,c
  4708   0010A2  0E04               	movlw	4
  4709   0010A4  26E1               	addwf	fsr1l,f,c
  4710   0010A6  50DE               	movf	postinc2,w,c
  4711   0010A8  5CE6               	subwf	postinc1,w,c
  4712   0010AA  50DE               	movf	postinc2,w,c
  4713   0010AC  58E6               	subwfb	postinc1,w,c
  4714   0010AE  A0D8               	btfss	status,0,c
  4715   0010B0  EF5C  F008         	goto	u3251
  4716   0010B4  EF5E  F008         	goto	u3250
  4717   0010B8                     u3251:
  4718   0010B8  EFBF  F008         	goto	l3932
  4719   0010BC                     u3250:
  4720   0010BC                     
  4721                           ;color.c: 252:                 unsigned long temp;;color.c: 253:                 temp = 
      +                          (unsigned long)C;
  4722   0010BC  C040  F028         	movff	convert_HSV@C,convert_HSV@temp_632
  4723   0010C0  C041  F029         	movff	convert_HSV@C+1,convert_HSV@temp_632+1
  4724   0010C4  6A2A               	clrf	(convert_HSV@temp_632+2)^0,c
  4725   0010C6  6A2B               	clrf	(convert_HSV@temp_632+3)^0,c
  4726   0010C8                     
  4727                           ;color.c: 254:                 temp *= 2;
  4728   0010C8  90D8               	bcf	status,0,c
  4729   0010CA  3628               	rlcf	convert_HSV@temp_632^0,f,c
  4730   0010CC  3629               	rlcf	(convert_HSV@temp_632+1)^0,f,c
  4731   0010CE  362A               	rlcf	(convert_HSV@temp_632+2)^0,f,c
  4732   0010D0  362B               	rlcf	(convert_HSV@temp_632+3)^0,f,c
  4733   0010D2                     
  4734                           ;color.c: 255:                 temp += (unsigned long)(p2->B - p2->R);
  4735   0010D2  500F               	movf	convert_HSV@p2^0,w,c
  4736   0010D4  6ED9               	movwf	fsr2l,c
  4737   0010D6  6ADA               	clrf	fsr2h,c
  4738   0010D8  CFDE F010          	movff	postinc2,??_convert_HSV
  4739   0010DC  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4740   0010E0  500F               	movf	convert_HSV@p2^0,w,c
  4741   0010E2  6ED9               	movwf	fsr2l,c
  4742   0010E4  6ADA               	clrf	fsr2h,c
  4743   0010E6  0E04               	movlw	4
  4744   0010E8  26D9               	addwf	fsr2l,f,c
  4745   0010EA  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4746   0010EE  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4747   0010F2  5010               	movf	??_convert_HSV^0,w,c
  4748   0010F4  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4749   0010F6  6E14               	movwf	(??_convert_HSV+4)^0,c
  4750   0010F8  5011               	movf	(??_convert_HSV+1)^0,w,c
  4751   0010FA  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4752   0010FC  6E15               	movwf	(??_convert_HSV+5)^0,c
  4753   0010FE  5014               	movf	(??_convert_HSV+4)^0,w,c
  4754   001100  2628               	addwf	convert_HSV@temp_632^0,f,c
  4755   001102  5015               	movf	(??_convert_HSV+5)^0,w,c
  4756   001104  2229               	addwfc	(convert_HSV@temp_632+1)^0,f,c
  4757   001106  0E00               	movlw	0
  4758   001108  222A               	addwfc	(convert_HSV@temp_632+2)^0,f,c
  4759   00110A  0E00               	movlw	0
  4760   00110C  222B               	addwfc	(convert_HSV@temp_632+3)^0,f,c
  4761   00110E                     
  4762                           ;color.c: 256:                 temp *= (unsigned long)hue_scale;
  4763   00110E  C028  F001         	movff	convert_HSV@temp_632,___lmul@multiplier
  4764   001112  C029  F002         	movff	convert_HSV@temp_632+1,___lmul@multiplier+1
  4765   001116  C02A  F003         	movff	convert_HSV@temp_632+2,___lmul@multiplier+2
  4766   00111A  C02B  F004         	movff	convert_HSV@temp_632+3,___lmul@multiplier+3
  4767   00111E  0E3C               	movlw	60
  4768   001120  6E05               	movwf	___lmul@multiplicand^0,c
  4769   001122  0E00               	movlw	0
  4770   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4771   001126  0E00               	movlw	0
  4772   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4773   00112A  0E00               	movlw	0
  4774   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4775   00112E  EC64  F014         	call	___lmul	;wreg free
  4776   001132  C001  F028         	movff	?___lmul,convert_HSV@temp_632
  4777   001136  C002  F029         	movff	?___lmul+1,convert_HSV@temp_632+1
  4778   00113A  C003  F02A         	movff	?___lmul+2,convert_HSV@temp_632+2
  4779   00113E  C004  F02B         	movff	?___lmul+3,convert_HSV@temp_632+3
  4780   001142                     
  4781                           ;color.c: 257:                 temp /= (unsigned long)C;
  4782   001142  C028  F001         	movff	convert_HSV@temp_632,___lldiv@dividend
  4783   001146  C029  F002         	movff	convert_HSV@temp_632+1,___lldiv@dividend+1
  4784   00114A  C02A  F003         	movff	convert_HSV@temp_632+2,___lldiv@dividend+2
  4785   00114E  C02B  F004         	movff	convert_HSV@temp_632+3,___lldiv@dividend+3
  4786   001152  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4787   001156  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4788   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4789   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4790   00115E  ECDF  F012         	call	___lldiv	;wreg free
  4791   001162  C001  F028         	movff	?___lldiv,convert_HSV@temp_632
  4792   001166  C002  F029         	movff	?___lldiv+1,convert_HSV@temp_632+1
  4793   00116A  C003  F02A         	movff	?___lldiv+2,convert_HSV@temp_632+2
  4794   00116E  C004  F02B         	movff	?___lldiv+3,convert_HSV@temp_632+3
  4795   001172                     
  4796                           ;color.c: 258:                 hue = (unsigned int)temp;
  4797   001172  C028  F01E         	movff	convert_HSV@temp_632,convert_HSV@hue
  4798   001176  C029  F01F         	movff	convert_HSV@temp_632+1,convert_HSV@hue+1
  4799                           
  4800                           ;color.c: 259:             } else {
  4801   00117A  EF20  F009         	goto	l3944
  4802   00117E                     l3932:
  4803                           
  4804                           ;color.c: 261:                 unsigned long temp;;color.c: 262:                 temp = 
      +                          (unsigned long)C;
  4805   00117E  C040  F02C         	movff	convert_HSV@C,convert_HSV@temp_633
  4806   001182  C041  F02D         	movff	convert_HSV@C+1,convert_HSV@temp_633+1
  4807   001186  6A2E               	clrf	(convert_HSV@temp_633+2)^0,c
  4808   001188  6A2F               	clrf	(convert_HSV@temp_633+3)^0,c
  4809   00118A                     
  4810                           ;color.c: 263:                 temp *= 2;
  4811   00118A  90D8               	bcf	status,0,c
  4812   00118C  362C               	rlcf	convert_HSV@temp_633^0,f,c
  4813   00118E  362D               	rlcf	(convert_HSV@temp_633+1)^0,f,c
  4814   001190  362E               	rlcf	(convert_HSV@temp_633+2)^0,f,c
  4815   001192  362F               	rlcf	(convert_HSV@temp_633+3)^0,f,c
  4816   001194                     
  4817                           ;color.c: 264:                 temp -= (unsigned long)(p2->R - p2->B);
  4818   001194  500F               	movf	convert_HSV@p2^0,w,c
  4819   001196  6ED9               	movwf	fsr2l,c
  4820   001198  6ADA               	clrf	fsr2h,c
  4821   00119A  0E04               	movlw	4
  4822   00119C  26D9               	addwf	fsr2l,f,c
  4823   00119E  CFDE F010          	movff	postinc2,??_convert_HSV
  4824   0011A2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4825   0011A6  500F               	movf	convert_HSV@p2^0,w,c
  4826   0011A8  6ED9               	movwf	fsr2l,c
  4827   0011AA  6ADA               	clrf	fsr2h,c
  4828   0011AC  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4829   0011B0  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4830   0011B4  5010               	movf	??_convert_HSV^0,w,c
  4831   0011B6  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4832   0011B8  6E14               	movwf	(??_convert_HSV+4)^0,c
  4833   0011BA  5011               	movf	(??_convert_HSV+1)^0,w,c
  4834   0011BC  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4835   0011BE  6E15               	movwf	(??_convert_HSV+5)^0,c
  4836   0011C0  6A16               	clrf	(??_convert_HSV+6)^0,c
  4837   0011C2  6A17               	clrf	(??_convert_HSV+7)^0,c
  4838   0011C4  5014               	movf	(??_convert_HSV+4)^0,w,c
  4839   0011C6  5E2C               	subwf	convert_HSV@temp_633^0,f,c
  4840   0011C8  5015               	movf	(??_convert_HSV+5)^0,w,c
  4841   0011CA  5A2D               	subwfb	(convert_HSV@temp_633+1)^0,f,c
  4842   0011CC  5016               	movf	(??_convert_HSV+6)^0,w,c
  4843   0011CE  5A2E               	subwfb	(convert_HSV@temp_633+2)^0,f,c
  4844   0011D0  5017               	movf	(??_convert_HSV+7)^0,w,c
  4845   0011D2  5A2F               	subwfb	(convert_HSV@temp_633+3)^0,f,c
  4846   0011D4                     
  4847                           ;color.c: 265:                 temp *= (unsigned long)hue_scale;
  4848   0011D4  C02C  F001         	movff	convert_HSV@temp_633,___lmul@multiplier
  4849   0011D8  C02D  F002         	movff	convert_HSV@temp_633+1,___lmul@multiplier+1
  4850   0011DC  C02E  F003         	movff	convert_HSV@temp_633+2,___lmul@multiplier+2
  4851   0011E0  C02F  F004         	movff	convert_HSV@temp_633+3,___lmul@multiplier+3
  4852   0011E4  0E3C               	movlw	60
  4853   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  4854   0011E8  0E00               	movlw	0
  4855   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4856   0011EC  0E00               	movlw	0
  4857   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4858   0011F0  0E00               	movlw	0
  4859   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4860   0011F4  EC64  F014         	call	___lmul	;wreg free
  4861   0011F8  C001  F02C         	movff	?___lmul,convert_HSV@temp_633
  4862   0011FC  C002  F02D         	movff	?___lmul+1,convert_HSV@temp_633+1
  4863   001200  C003  F02E         	movff	?___lmul+2,convert_HSV@temp_633+2
  4864   001204  C004  F02F         	movff	?___lmul+3,convert_HSV@temp_633+3
  4865   001208                     
  4866                           ;color.c: 266:                 temp /= (unsigned long)C;
  4867   001208  C02C  F001         	movff	convert_HSV@temp_633,___lldiv@dividend
  4868   00120C  C02D  F002         	movff	convert_HSV@temp_633+1,___lldiv@dividend+1
  4869   001210  C02E  F003         	movff	convert_HSV@temp_633+2,___lldiv@dividend+2
  4870   001214  C02F  F004         	movff	convert_HSV@temp_633+3,___lldiv@dividend+3
  4871   001218  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4872   00121C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4873   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4874   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4875   001224  ECDF  F012         	call	___lldiv	;wreg free
  4876   001228  C001  F02C         	movff	?___lldiv,convert_HSV@temp_633
  4877   00122C  C002  F02D         	movff	?___lldiv+1,convert_HSV@temp_633+1
  4878   001230  C003  F02E         	movff	?___lldiv+2,convert_HSV@temp_633+2
  4879   001234  C004  F02F         	movff	?___lldiv+3,convert_HSV@temp_633+3
  4880   001238                     
  4881                           ;color.c: 267:                 hue = (unsigned int)temp;
  4882   001238  C02C  F01E         	movff	convert_HSV@temp_633,convert_HSV@hue
  4883   00123C  C02D  F01F         	movff	convert_HSV@temp_633+1,convert_HSV@hue+1
  4884   001240                     l3944:
  4885                           
  4886                           ;color.c: 270:         if (M == p2->B) {
  4887   001240  500F               	movf	convert_HSV@p2^0,w,c
  4888   001242  6ED9               	movwf	fsr2l,c
  4889   001244  6ADA               	clrf	fsr2h,c
  4890   001246  0E04               	movlw	4
  4891   001248  26D9               	addwf	fsr2l,f,c
  4892   00124A  503E               	movf	convert_HSV@M^0,w,c
  4893   00124C  18DE               	xorwf	postinc2,w,c
  4894   00124E  E107               	bnz	u3261
  4895   001250  503F               	movf	(convert_HSV@M+1)^0,w,c
  4896   001252  18DE               	xorwf	postinc2,w,c
  4897   001254  A4D8               	btfss	status,2,c
  4898   001256  EF2F  F009         	goto	u3261
  4899   00125A  EF31  F009         	goto	u3260
  4900   00125E                     u3261:
  4901   00125E  EF0E  F00A         	goto	l3972
  4902   001262                     u3260:
  4903   001262                     
  4904                           ;color.c: 271:             if (p2->R >= p2->G) {
  4905   001262  500F               	movf	convert_HSV@p2^0,w,c
  4906   001264  6ED9               	movwf	fsr2l,c
  4907   001266  6ADA               	clrf	fsr2h,c
  4908   001268  0E02               	movlw	2
  4909   00126A  26D9               	addwf	fsr2l,f,c
  4910   00126C  500F               	movf	convert_HSV@p2^0,w,c
  4911   00126E  6EE1               	movwf	fsr1l,c
  4912   001270  6AE2               	clrf	fsr1h,c
  4913   001272  50DE               	movf	postinc2,w,c
  4914   001274  5CE6               	subwf	postinc1,w,c
  4915   001276  50DE               	movf	postinc2,w,c
  4916   001278  58E6               	subwfb	postinc1,w,c
  4917   00127A  A0D8               	btfss	status,0,c
  4918   00127C  EF42  F009         	goto	u3271
  4919   001280  EF44  F009         	goto	u3270
  4920   001284                     u3271:
  4921   001284  EFA9  F009         	goto	l3960
  4922   001288                     u3270:
  4923   001288                     
  4924                           ;color.c: 273:                 unsigned long temp;;color.c: 274:                 temp = 
      +                          (unsigned long)C;
  4925   001288  C040  F030         	movff	convert_HSV@C,convert_HSV@temp_634
  4926   00128C  C041  F031         	movff	convert_HSV@C+1,convert_HSV@temp_634+1
  4927   001290  6A32               	clrf	(convert_HSV@temp_634+2)^0,c
  4928   001292  6A33               	clrf	(convert_HSV@temp_634+3)^0,c
  4929   001294                     
  4930                           ;color.c: 275:                 temp *= 4;
  4931   001294  0E02               	movlw	2
  4932   001296                     u3285:
  4933   001296  90D8               	bcf	status,0,c
  4934   001298  3630               	rlcf	convert_HSV@temp_634^0,f,c
  4935   00129A  3631               	rlcf	(convert_HSV@temp_634+1)^0,f,c
  4936   00129C  3632               	rlcf	(convert_HSV@temp_634+2)^0,f,c
  4937   00129E  3633               	rlcf	(convert_HSV@temp_634+3)^0,f,c
  4938   0012A0  2EE8               	decfsz	wreg,f,c
  4939   0012A2  EF4B  F009         	goto	u3285
  4940   0012A6                     
  4941                           ;color.c: 276:                 temp += (unsigned long)(p2->R - p2->G);
  4942   0012A6  500F               	movf	convert_HSV@p2^0,w,c
  4943   0012A8  6ED9               	movwf	fsr2l,c
  4944   0012AA  6ADA               	clrf	fsr2h,c
  4945   0012AC  0E02               	movlw	2
  4946   0012AE  26D9               	addwf	fsr2l,f,c
  4947   0012B0  CFDE F010          	movff	postinc2,??_convert_HSV
  4948   0012B4  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4949   0012B8  500F               	movf	convert_HSV@p2^0,w,c
  4950   0012BA  6ED9               	movwf	fsr2l,c
  4951   0012BC  6ADA               	clrf	fsr2h,c
  4952   0012BE  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4953   0012C2  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4954   0012C6  5010               	movf	??_convert_HSV^0,w,c
  4955   0012C8  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4956   0012CA  6E14               	movwf	(??_convert_HSV+4)^0,c
  4957   0012CC  5011               	movf	(??_convert_HSV+1)^0,w,c
  4958   0012CE  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4959   0012D0  6E15               	movwf	(??_convert_HSV+5)^0,c
  4960   0012D2  5014               	movf	(??_convert_HSV+4)^0,w,c
  4961   0012D4  2630               	addwf	convert_HSV@temp_634^0,f,c
  4962   0012D6  5015               	movf	(??_convert_HSV+5)^0,w,c
  4963   0012D8  2231               	addwfc	(convert_HSV@temp_634+1)^0,f,c
  4964   0012DA  0E00               	movlw	0
  4965   0012DC  2232               	addwfc	(convert_HSV@temp_634+2)^0,f,c
  4966   0012DE  0E00               	movlw	0
  4967   0012E0  2233               	addwfc	(convert_HSV@temp_634+3)^0,f,c
  4968   0012E2                     
  4969                           ;color.c: 277:                 temp *= (unsigned long)hue_scale;
  4970   0012E2  C030  F001         	movff	convert_HSV@temp_634,___lmul@multiplier
  4971   0012E6  C031  F002         	movff	convert_HSV@temp_634+1,___lmul@multiplier+1
  4972   0012EA  C032  F003         	movff	convert_HSV@temp_634+2,___lmul@multiplier+2
  4973   0012EE  C033  F004         	movff	convert_HSV@temp_634+3,___lmul@multiplier+3
  4974   0012F2  0E3C               	movlw	60
  4975   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  4976   0012F6  0E00               	movlw	0
  4977   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4978   0012FA  0E00               	movlw	0
  4979   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4980   0012FE  0E00               	movlw	0
  4981   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4982   001302  EC64  F014         	call	___lmul	;wreg free
  4983   001306  C001  F030         	movff	?___lmul,convert_HSV@temp_634
  4984   00130A  C002  F031         	movff	?___lmul+1,convert_HSV@temp_634+1
  4985   00130E  C003  F032         	movff	?___lmul+2,convert_HSV@temp_634+2
  4986   001312  C004  F033         	movff	?___lmul+3,convert_HSV@temp_634+3
  4987   001316                     
  4988                           ;color.c: 278:                 temp /= (unsigned long)C;
  4989   001316  C030  F001         	movff	convert_HSV@temp_634,___lldiv@dividend
  4990   00131A  C031  F002         	movff	convert_HSV@temp_634+1,___lldiv@dividend+1
  4991   00131E  C032  F003         	movff	convert_HSV@temp_634+2,___lldiv@dividend+2
  4992   001322  C033  F004         	movff	convert_HSV@temp_634+3,___lldiv@dividend+3
  4993   001326  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4994   00132A  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4995   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4996   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4997   001332  ECDF  F012         	call	___lldiv	;wreg free
  4998   001336  C001  F030         	movff	?___lldiv,convert_HSV@temp_634
  4999   00133A  C002  F031         	movff	?___lldiv+1,convert_HSV@temp_634+1
  5000   00133E  C003  F032         	movff	?___lldiv+2,convert_HSV@temp_634+2
  5001   001342  C004  F033         	movff	?___lldiv+3,convert_HSV@temp_634+3
  5002   001346                     
  5003                           ;color.c: 279:                 hue = (unsigned int)temp;
  5004   001346  C030  F01E         	movff	convert_HSV@temp_634,convert_HSV@hue
  5005   00134A  C031  F01F         	movff	convert_HSV@temp_634+1,convert_HSV@hue+1
  5006                           
  5007                           ;color.c: 280:             } else {
  5008   00134E  EF0E  F00A         	goto	l3972
  5009   001352                     l3960:
  5010                           
  5011                           ;color.c: 282:                 unsigned long temp;;color.c: 283:                 temp = 
      +                          (unsigned long)C;
  5012   001352  C040  F034         	movff	convert_HSV@C,convert_HSV@temp_635
  5013   001356  C041  F035         	movff	convert_HSV@C+1,convert_HSV@temp_635+1
  5014   00135A  6A36               	clrf	(convert_HSV@temp_635+2)^0,c
  5015   00135C  6A37               	clrf	(convert_HSV@temp_635+3)^0,c
  5016   00135E                     
  5017                           ;color.c: 284:                 temp *= 4;
  5018   00135E  0E02               	movlw	2
  5019   001360                     u3295:
  5020   001360  90D8               	bcf	status,0,c
  5021   001362  3634               	rlcf	convert_HSV@temp_635^0,f,c
  5022   001364  3635               	rlcf	(convert_HSV@temp_635+1)^0,f,c
  5023   001366  3636               	rlcf	(convert_HSV@temp_635+2)^0,f,c
  5024   001368  3637               	rlcf	(convert_HSV@temp_635+3)^0,f,c
  5025   00136A  2EE8               	decfsz	wreg,f,c
  5026   00136C  EFB0  F009         	goto	u3295
  5027   001370                     
  5028                           ;color.c: 285:                 temp -= (unsigned long)(p2->G - p2->R);
  5029   001370  500F               	movf	convert_HSV@p2^0,w,c
  5030   001372  6ED9               	movwf	fsr2l,c
  5031   001374  6ADA               	clrf	fsr2h,c
  5032   001376  CFDE F010          	movff	postinc2,??_convert_HSV
  5033   00137A  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5034   00137E  500F               	movf	convert_HSV@p2^0,w,c
  5035   001380  6ED9               	movwf	fsr2l,c
  5036   001382  6ADA               	clrf	fsr2h,c
  5037   001384  0E02               	movlw	2
  5038   001386  26D9               	addwf	fsr2l,f,c
  5039   001388  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5040   00138C  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5041   001390  5010               	movf	??_convert_HSV^0,w,c
  5042   001392  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5043   001394  6E14               	movwf	(??_convert_HSV+4)^0,c
  5044   001396  5011               	movf	(??_convert_HSV+1)^0,w,c
  5045   001398  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5046   00139A  6E15               	movwf	(??_convert_HSV+5)^0,c
  5047   00139C  6A16               	clrf	(??_convert_HSV+6)^0,c
  5048   00139E  6A17               	clrf	(??_convert_HSV+7)^0,c
  5049   0013A0  5014               	movf	(??_convert_HSV+4)^0,w,c
  5050   0013A2  5E34               	subwf	convert_HSV@temp_635^0,f,c
  5051   0013A4  5015               	movf	(??_convert_HSV+5)^0,w,c
  5052   0013A6  5A35               	subwfb	(convert_HSV@temp_635+1)^0,f,c
  5053   0013A8  5016               	movf	(??_convert_HSV+6)^0,w,c
  5054   0013AA  5A36               	subwfb	(convert_HSV@temp_635+2)^0,f,c
  5055   0013AC  5017               	movf	(??_convert_HSV+7)^0,w,c
  5056   0013AE  5A37               	subwfb	(convert_HSV@temp_635+3)^0,f,c
  5057   0013B0                     
  5058                           ;color.c: 286:                 temp *= (unsigned long)hue_scale;
  5059   0013B0  C034  F001         	movff	convert_HSV@temp_635,___lmul@multiplier
  5060   0013B4  C035  F002         	movff	convert_HSV@temp_635+1,___lmul@multiplier+1
  5061   0013B8  C036  F003         	movff	convert_HSV@temp_635+2,___lmul@multiplier+2
  5062   0013BC  C037  F004         	movff	convert_HSV@temp_635+3,___lmul@multiplier+3
  5063   0013C0  0E3C               	movlw	60
  5064   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  5065   0013C4  0E00               	movlw	0
  5066   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5067   0013C8  0E00               	movlw	0
  5068   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5069   0013CC  0E00               	movlw	0
  5070   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5071   0013D0  EC64  F014         	call	___lmul	;wreg free
  5072   0013D4  C001  F034         	movff	?___lmul,convert_HSV@temp_635
  5073   0013D8  C002  F035         	movff	?___lmul+1,convert_HSV@temp_635+1
  5074   0013DC  C003  F036         	movff	?___lmul+2,convert_HSV@temp_635+2
  5075   0013E0  C004  F037         	movff	?___lmul+3,convert_HSV@temp_635+3
  5076   0013E4                     
  5077                           ;color.c: 287:                 temp /= (unsigned long)C;
  5078   0013E4  C034  F001         	movff	convert_HSV@temp_635,___lldiv@dividend
  5079   0013E8  C035  F002         	movff	convert_HSV@temp_635+1,___lldiv@dividend+1
  5080   0013EC  C036  F003         	movff	convert_HSV@temp_635+2,___lldiv@dividend+2
  5081   0013F0  C037  F004         	movff	convert_HSV@temp_635+3,___lldiv@dividend+3
  5082   0013F4  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5083   0013F8  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5084   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5085   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5086   001400  ECDF  F012         	call	___lldiv	;wreg free
  5087   001404  C001  F034         	movff	?___lldiv,convert_HSV@temp_635
  5088   001408  C002  F035         	movff	?___lldiv+1,convert_HSV@temp_635+1
  5089   00140C  C003  F036         	movff	?___lldiv+2,convert_HSV@temp_635+2
  5090   001410  C004  F037         	movff	?___lldiv+3,convert_HSV@temp_635+3
  5091   001414                     
  5092                           ;color.c: 288:                 hue = (unsigned int)temp;
  5093   001414  C034  F01E         	movff	convert_HSV@temp_635,convert_HSV@hue
  5094   001418  C035  F01F         	movff	convert_HSV@temp_635+1,convert_HSV@hue+1
  5095   00141C                     l3972:
  5096                           
  5097                           ;color.c: 293:     if (M == 0) {
  5098   00141C  503E               	movf	convert_HSV@M^0,w,c
  5099   00141E  103F               	iorwf	(convert_HSV@M+1)^0,w,c
  5100   001420  A4D8               	btfss	status,2,c
  5101   001422  EF15  F00A         	goto	u3301
  5102   001426  EF17  F00A         	goto	u3300
  5103   00142A                     u3301:
  5104   00142A  EF1D  F00A         	goto	l3976
  5105   00142E                     u3300:
  5106   00142E                     
  5107                           ;color.c: 294:         sat = 0;
  5108   00142E  0E00               	movlw	0
  5109   001430  6E1D               	movwf	(convert_HSV@sat+1)^0,c
  5110   001432  0E00               	movlw	0
  5111   001434  6E1C               	movwf	convert_HSV@sat^0,c
  5112                           
  5113                           ;color.c: 295:     } else {
  5114   001436  EF59  F00A         	goto	l3984
  5115   00143A                     l3976:
  5116                           
  5117                           ;color.c: 297:         unsigned long temp;;color.c: 298:         temp = (unsigned long)C
      +                          ;
  5118   00143A  C040  F020         	movff	convert_HSV@C,convert_HSV@temp_636
  5119   00143E  C041  F021         	movff	convert_HSV@C+1,convert_HSV@temp_636+1
  5120   001442  6A22               	clrf	(convert_HSV@temp_636+2)^0,c
  5121   001444  6A23               	clrf	(convert_HSV@temp_636+3)^0,c
  5122   001446                     
  5123                           ;color.c: 299:         temp *= (unsigned long)sat_scale;
  5124   001446  C020  F001         	movff	convert_HSV@temp_636,___lmul@multiplier
  5125   00144A  C021  F002         	movff	convert_HSV@temp_636+1,___lmul@multiplier+1
  5126   00144E  C022  F003         	movff	convert_HSV@temp_636+2,___lmul@multiplier+2
  5127   001452  C023  F004         	movff	convert_HSV@temp_636+3,___lmul@multiplier+3
  5128   001456  0E64               	movlw	100
  5129   001458  6E05               	movwf	___lmul@multiplicand^0,c
  5130   00145A  0E00               	movlw	0
  5131   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5132   00145E  0E00               	movlw	0
  5133   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5134   001462  0E00               	movlw	0
  5135   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5136   001466  EC64  F014         	call	___lmul	;wreg free
  5137   00146A  C001  F020         	movff	?___lmul,convert_HSV@temp_636
  5138   00146E  C002  F021         	movff	?___lmul+1,convert_HSV@temp_636+1
  5139   001472  C003  F022         	movff	?___lmul+2,convert_HSV@temp_636+2
  5140   001476  C004  F023         	movff	?___lmul+3,convert_HSV@temp_636+3
  5141   00147A                     
  5142                           ;color.c: 300:         temp /= (unsigned long)M;
  5143   00147A  C020  F001         	movff	convert_HSV@temp_636,___lldiv@dividend
  5144   00147E  C021  F002         	movff	convert_HSV@temp_636+1,___lldiv@dividend+1
  5145   001482  C022  F003         	movff	convert_HSV@temp_636+2,___lldiv@dividend+2
  5146   001486  C023  F004         	movff	convert_HSV@temp_636+3,___lldiv@dividend+3
  5147   00148A  C03E  F005         	movff	convert_HSV@M,___lldiv@divisor
  5148   00148E  C03F  F006         	movff	convert_HSV@M+1,___lldiv@divisor+1
  5149   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5150   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5151   001496  ECDF  F012         	call	___lldiv	;wreg free
  5152   00149A  C001  F020         	movff	?___lldiv,convert_HSV@temp_636
  5153   00149E  C002  F021         	movff	?___lldiv+1,convert_HSV@temp_636+1
  5154   0014A2  C003  F022         	movff	?___lldiv+2,convert_HSV@temp_636+2
  5155   0014A6  C004  F023         	movff	?___lldiv+3,convert_HSV@temp_636+3
  5156   0014AA                     
  5157                           ;color.c: 301:         sat = (unsigned int)temp;
  5158   0014AA  C020  F01C         	movff	convert_HSV@temp_636,convert_HSV@sat
  5159   0014AE  C021  F01D         	movff	convert_HSV@temp_636+1,convert_HSV@sat+1
  5160   0014B2                     l3984:
  5161                           
  5162                           ;color.c: 304:     p1->H = hue;
  5163   0014B2  500E               	movf	convert_HSV@p1^0,w,c
  5164   0014B4  6ED9               	movwf	fsr2l,c
  5165   0014B6  6ADA               	clrf	fsr2h,c
  5166   0014B8  C01E  FFDE         	movff	convert_HSV@hue,postinc2
  5167   0014BC  C01F  FFDD         	movff	convert_HSV@hue+1,postdec2
  5168   0014C0                     
  5169                           ;color.c: 305:     p1->S = sat;
  5170   0014C0  500E               	movf	convert_HSV@p1^0,w,c
  5171   0014C2  6ED9               	movwf	fsr2l,c
  5172   0014C4  6ADA               	clrf	fsr2h,c
  5173   0014C6  0E02               	movlw	2
  5174   0014C8  26D9               	addwf	fsr2l,f,c
  5175   0014CA  C01C  FFDE         	movff	convert_HSV@sat,postinc2
  5176   0014CE  C01D  FFDD         	movff	convert_HSV@sat+1,postdec2
  5177   0014D2                     
  5178                           ;color.c: 306:     p1->V = M;
  5179   0014D2  500E               	movf	convert_HSV@p1^0,w,c
  5180   0014D4  6ED9               	movwf	fsr2l,c
  5181   0014D6  6ADA               	clrf	fsr2h,c
  5182   0014D8  0E04               	movlw	4
  5183   0014DA  26D9               	addwf	fsr2l,f,c
  5184   0014DC  C03E  FFDE         	movff	convert_HSV@M,postinc2
  5185   0014E0  C03F  FFDD         	movff	convert_HSV@M+1,postdec2
  5186   0014E4  0012               	return		;funcret
  5187   0014E6                     __end_of_convert_HSV:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _min_RGB *****************
  5191 ;; Defined at:
  5192 ;;		line 182 in file "color.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5195 ;;		 -> main@RGBC_colour(8), 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  min_val         2    4[COMRAM] unsigned int 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  2    0[COMRAM] unsigned int 
  5200 ;; Registers used:
  5201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;Total ram usage:        6 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; Hardware stack levels required when called: 1
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_convert_HSV
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text23
  5222   0026F2                     __ptext23:
  5223                           	callstack 0
  5224   0026F2                     _min_RGB:
  5225                           	callstack 28
  5226   0026F2                     
  5227                           ;color.c: 182: unsigned int min_RGB(struct RGBC_val *p);color.c: 183: {;color.c: 184:   
      +                            unsigned int min_val = p->R;
  5228   0026F2  5001               	movf	min_RGB@p^0,w,c
  5229   0026F4  6ED9               	movwf	fsr2l,c
  5230   0026F6  6ADA               	clrf	fsr2h,c
  5231   0026F8  CFDE F005          	movff	postinc2,min_RGB@min_val
  5232   0026FC  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5233   002700                     
  5234                           ;color.c: 185:     if (p->G < min_val) {min_val = p->G;}
  5235   002700  5001               	movf	min_RGB@p^0,w,c
  5236   002702  6ED9               	movwf	fsr2l,c
  5237   002704  6ADA               	clrf	fsr2h,c
  5238   002706  0E02               	movlw	2
  5239   002708  26D9               	addwf	fsr2l,f,c
  5240   00270A  5005               	movf	min_RGB@min_val^0,w,c
  5241   00270C  5CDE               	subwf	postinc2,w,c
  5242   00270E  5006               	movf	(min_RGB@min_val+1)^0,w,c
  5243   002710  58DE               	subwfb	postinc2,w,c
  5244   002712  B0D8               	btfsc	status,0,c
  5245   002714  EF8E  F013         	goto	u2581
  5246   002718  EF90  F013         	goto	u2580
  5247   00271C                     u2581:
  5248   00271C  EF99  F013         	goto	l106
  5249   002720                     u2580:
  5250   002720  5001               	movf	min_RGB@p^0,w,c
  5251   002722  6ED9               	movwf	fsr2l,c
  5252   002724  6ADA               	clrf	fsr2h,c
  5253   002726  0E02               	movlw	2
  5254   002728  26D9               	addwf	fsr2l,f,c
  5255   00272A  CFDE F005          	movff	postinc2,min_RGB@min_val
  5256   00272E  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5257   002732                     l106:
  5258                           
  5259                           ;color.c: 186:     if (p->B < min_val) {min_val = p->B;}
  5260   002732  5001               	movf	min_RGB@p^0,w,c
  5261   002734  6ED9               	movwf	fsr2l,c
  5262   002736  6ADA               	clrf	fsr2h,c
  5263   002738  0E04               	movlw	4
  5264   00273A  26D9               	addwf	fsr2l,f,c
  5265   00273C  5005               	movf	min_RGB@min_val^0,w,c
  5266   00273E  5CDE               	subwf	postinc2,w,c
  5267   002740  5006               	movf	(min_RGB@min_val+1)^0,w,c
  5268   002742  58DE               	subwfb	postinc2,w,c
  5269   002744  B0D8               	btfsc	status,0,c
  5270   002746  EFA7  F013         	goto	u2591
  5271   00274A  EFA9  F013         	goto	u2590
  5272   00274E                     u2591:
  5273   00274E  EFB2  F013         	goto	l3442
  5274   002752                     u2590:
  5275   002752  5001               	movf	min_RGB@p^0,w,c
  5276   002754  6ED9               	movwf	fsr2l,c
  5277   002756  6ADA               	clrf	fsr2h,c
  5278   002758  0E04               	movlw	4
  5279   00275A  26D9               	addwf	fsr2l,f,c
  5280   00275C  CFDE F005          	movff	postinc2,min_RGB@min_val
  5281   002760  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5282   002764                     l3442:
  5283                           
  5284                           ;color.c: 187:     return min_val;
  5285   002764  C005  F001         	movff	min_RGB@min_val,?_min_RGB
  5286   002768  C006  F002         	movff	min_RGB@min_val+1,?_min_RGB+1
  5287   00276C  0012               	return		;funcret
  5288   00276E                     __end_of_min_RGB:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _max_RGB *****************
  5292 ;; Defined at:
  5293 ;;		line 171 in file "color.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5296 ;;		 -> main@RGBC_colour(8), 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  max_val         2    4[COMRAM] unsigned int 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  2    0[COMRAM] unsigned int 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;Total ram usage:        6 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_convert_HSV
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text24
  5323   00276E                     __ptext24:
  5324                           	callstack 0
  5325   00276E                     _max_RGB:
  5326                           	callstack 28
  5327   00276E                     
  5328                           ;color.c: 171: unsigned int max_RGB(struct RGBC_val *p);color.c: 172: {;color.c: 173:   
      +                            unsigned int max_val = p->R;
  5329   00276E  5001               	movf	max_RGB@p^0,w,c
  5330   002770  6ED9               	movwf	fsr2l,c
  5331   002772  6ADA               	clrf	fsr2h,c
  5332   002774  CFDE F005          	movff	postinc2,max_RGB@max_val
  5333   002778  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5334   00277C                     
  5335                           ;color.c: 174:     if (p->G > max_val) {max_val = p->G;}
  5336   00277C  5001               	movf	max_RGB@p^0,w,c
  5337   00277E  6ED9               	movwf	fsr2l,c
  5338   002780  6ADA               	clrf	fsr2h,c
  5339   002782  0E02               	movlw	2
  5340   002784  26D9               	addwf	fsr2l,f,c
  5341   002786  50DE               	movf	postinc2,w,c
  5342   002788  5C05               	subwf	max_RGB@max_val^0,w,c
  5343   00278A  50DE               	movf	postinc2,w,c
  5344   00278C  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  5345   00278E  B0D8               	btfsc	status,0,c
  5346   002790  EFCC  F013         	goto	u2561
  5347   002794  EFCE  F013         	goto	u2560
  5348   002798                     u2561:
  5349   002798  EFD7  F013         	goto	l101
  5350   00279C                     u2560:
  5351   00279C  5001               	movf	max_RGB@p^0,w,c
  5352   00279E  6ED9               	movwf	fsr2l,c
  5353   0027A0  6ADA               	clrf	fsr2h,c
  5354   0027A2  0E02               	movlw	2
  5355   0027A4  26D9               	addwf	fsr2l,f,c
  5356   0027A6  CFDE F005          	movff	postinc2,max_RGB@max_val
  5357   0027AA  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5358   0027AE                     l101:
  5359                           
  5360                           ;color.c: 175:     if (p->B > max_val) {max_val = p->B;}
  5361   0027AE  5001               	movf	max_RGB@p^0,w,c
  5362   0027B0  6ED9               	movwf	fsr2l,c
  5363   0027B2  6ADA               	clrf	fsr2h,c
  5364   0027B4  0E04               	movlw	4
  5365   0027B6  26D9               	addwf	fsr2l,f,c
  5366   0027B8  50DE               	movf	postinc2,w,c
  5367   0027BA  5C05               	subwf	max_RGB@max_val^0,w,c
  5368   0027BC  50DE               	movf	postinc2,w,c
  5369   0027BE  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  5370   0027C0  B0D8               	btfsc	status,0,c
  5371   0027C2  EFE5  F013         	goto	u2571
  5372   0027C6  EFE7  F013         	goto	u2570
  5373   0027CA                     u2571:
  5374   0027CA  EFF0  F013         	goto	l3430
  5375   0027CE                     u2570:
  5376   0027CE  5001               	movf	max_RGB@p^0,w,c
  5377   0027D0  6ED9               	movwf	fsr2l,c
  5378   0027D2  6ADA               	clrf	fsr2h,c
  5379   0027D4  0E04               	movlw	4
  5380   0027D6  26D9               	addwf	fsr2l,f,c
  5381   0027D8  CFDE F005          	movff	postinc2,max_RGB@max_val
  5382   0027DC  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5383   0027E0                     l3430:
  5384                           
  5385                           ;color.c: 176:     return max_val;
  5386   0027E0  C005  F001         	movff	max_RGB@max_val,?_max_RGB
  5387   0027E4  C006  F002         	movff	max_RGB@max_val+1,?_max_RGB+1
  5388   0027E8  0012               	return		;funcret
  5389   0027EA                     __end_of_max_RGB:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function ___lmul *****************
  5393 ;; Defined at:
  5394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  multiplier      4    0[COMRAM] unsigned long 
  5397 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  product         4    8[COMRAM] unsigned long 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  4    0[COMRAM] unsigned long 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;Total ram usage:       12 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_convert_HSV
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text25
  5424   0028C8                     __ptext25:
  5425                           	callstack 0
  5426   0028C8                     ___lmul:
  5427                           	callstack 28
  5428   0028C8  0E00               	movlw	0
  5429   0028CA  6E09               	movwf	___lmul@product^0,c
  5430   0028CC  0E00               	movlw	0
  5431   0028CE  6E0A               	movwf	(___lmul@product+1)^0,c
  5432   0028D0  0E00               	movlw	0
  5433   0028D2  6E0B               	movwf	(___lmul@product+2)^0,c
  5434   0028D4  0E00               	movlw	0
  5435   0028D6  6E0C               	movwf	(___lmul@product+3)^0,c
  5436   0028D8                     l3572:
  5437   0028D8  A001               	btfss	___lmul@multiplier^0,0,c
  5438   0028DA  EF71  F014         	goto	u2631
  5439   0028DE  EF73  F014         	goto	u2630
  5440   0028E2                     u2631:
  5441   0028E2  EF7B  F014         	goto	l3576
  5442   0028E6                     u2630:
  5443   0028E6  5005               	movf	___lmul@multiplicand^0,w,c
  5444   0028E8  2609               	addwf	___lmul@product^0,f,c
  5445   0028EA  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5446   0028EC  220A               	addwfc	(___lmul@product+1)^0,f,c
  5447   0028EE  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5448   0028F0  220B               	addwfc	(___lmul@product+2)^0,f,c
  5449   0028F2  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5450   0028F4  220C               	addwfc	(___lmul@product+3)^0,f,c
  5451   0028F6                     l3576:
  5452   0028F6  90D8               	bcf	status,0,c
  5453   0028F8  3605               	rlcf	___lmul@multiplicand^0,f,c
  5454   0028FA  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5455   0028FC  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5456   0028FE  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5457   002900  90D8               	bcf	status,0,c
  5458   002902  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5459   002904  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5460   002906  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5461   002908  3201               	rrcf	___lmul@multiplier^0,f,c
  5462   00290A  5001               	movf	___lmul@multiplier^0,w,c
  5463   00290C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5464   00290E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5465   002910  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5466   002912  A4D8               	btfss	status,2,c
  5467   002914  EF8E  F014         	goto	u2641
  5468   002918  EF90  F014         	goto	u2640
  5469   00291C                     u2641:
  5470   00291C  EF6C  F014         	goto	l3572
  5471   002920                     u2640:
  5472   002920  C009  F001         	movff	___lmul@product,?___lmul
  5473   002924  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5474   002928  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5475   00292C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5476   002930  0012               	return		;funcret
  5477   002932                     __end_of___lmul:
  5478                           	callstack 0
  5479                           
  5480 ;; *************** function _color_click_init *****************
  5481 ;; Defined at:
  5482 ;;		line 7 in file "color.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5500 ;;Total ram usage:        1 bytes
  5501 ;; Hardware stack levels used: 1
  5502 ;; Hardware stack levels required when called: 4
  5503 ;; This function calls:
  5504 ;;		_I2C_2_Master_Init
  5505 ;;		_color_writetoaddr
  5506 ;; This function is called by:
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text26
  5512   002D50                     __ptext26:
  5513                           	callstack 0
  5514   002D50                     _color_click_init:
  5515                           	callstack 26
  5516   002D50                     
  5517                           ;color.c: 10:     I2C_2_Master_Init();
  5518   002D50  ECD9  F016         	call	_I2C_2_Master_Init	;wreg free
  5519   002D54                     
  5520                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5521   002D54  0E01               	movlw	1
  5522   002D56  6E03               	movwf	color_writetoaddr@value^0,c
  5523   002D58  0E00               	movlw	0
  5524   002D5A  EC14  F017         	call	_color_writetoaddr
  5525   002D5E                     
  5526                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5527   002D5E  0E3F               	movlw	63
  5528   002D60  6E05               	movwf	??_color_click_init^0,c
  5529   002D62  0E55               	movlw	85
  5530   002D64                     u3867:
  5531   002D64  2EE8               	decfsz	wreg,f,c
  5532   002D66  D7FE               	bra	u3867
  5533   002D68  2E05               	decfsz	??_color_click_init^0,f,c
  5534   002D6A  D7FC               	bra	u3867
  5535   002D6C  0000               	nop	
  5536   002D6E                     
  5537                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5538   002D6E  0E03               	movlw	3
  5539   002D70  6E03               	movwf	color_writetoaddr@value^0,c
  5540   002D72  0E00               	movlw	0
  5541   002D74  EC14  F017         	call	_color_writetoaddr
  5542   002D78                     
  5543                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5544   002D78  0ED5               	movlw	213
  5545   002D7A  6E03               	movwf	color_writetoaddr@value^0,c
  5546   002D7C  0E01               	movlw	1
  5547   002D7E  EC14  F017         	call	_color_writetoaddr
  5548   002D82  0012               	return		;funcret
  5549   002D84                     __end_of_color_click_init:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function _color_writetoaddr *****************
  5553 ;; Defined at:
  5554 ;;		line 28 in file "color.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  address         1    wreg     unsigned char 
  5557 ;;  value           1    2[COMRAM] unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  address         1    3[COMRAM] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5569 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 3
  5576 ;; This function calls:
  5577 ;;		_I2C_2_Master_Start
  5578 ;;		_I2C_2_Master_Stop
  5579 ;;		_I2C_2_Master_Write
  5580 ;; This function is called by:
  5581 ;;		_color_click_init
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text27
  5586   002E28                     __ptext27:
  5587                           	callstack 0
  5588   002E28                     _color_writetoaddr:
  5589                           	callstack 26
  5590                           
  5591                           ;incstack = 0
  5592                           ;color_writetoaddr@address stored from wreg
  5593   002E28  6E04               	movwf	color_writetoaddr@address^0,c
  5594   002E2A                     
  5595                           ;color.c: 29:     I2C_2_Master_Start();
  5596   002E2A  EC61  F017         	call	_I2C_2_Master_Start	;wreg free
  5597                           
  5598                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5599   002E2E  0E52               	movlw	82
  5600   002E30  EC4A  F017         	call	_I2C_2_Master_Write
  5601                           
  5602                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  5603   002E34  5004               	movf	color_writetoaddr@address^0,w,c
  5604   002E36  0980               	iorlw	128
  5605   002E38  EC4A  F017         	call	_I2C_2_Master_Write
  5606                           
  5607                           ;color.c: 32:     I2C_2_Master_Write(value);
  5608   002E3C  5003               	movf	color_writetoaddr@value^0,w,c
  5609   002E3E  EC4A  F017         	call	_I2C_2_Master_Write
  5610                           
  5611                           ;color.c: 33:     I2C_2_Master_Stop();
  5612   002E42  EC5C  F017         	call	_I2C_2_Master_Stop	;wreg free
  5613   002E46  0012               	return		;funcret
  5614   002E48                     __end_of_color_writetoaddr:
  5615                           	callstack 0
  5616                           
  5617 ;; *************** function _I2C_2_Master_Init *****************
  5618 ;; Defined at:
  5619 ;;		line 4 in file "i2c.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_color_click_init
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text28
  5648   002DB2                     __ptext28:
  5649                           	callstack 0
  5650   002DB2                     _I2C_2_Master_Init:
  5651                           	callstack 28
  5652   002DB2                     
  5653                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5654   002DB2  010E               	movlb	14	; () banked
  5655   002DB4  51D9               	movf	217,w,b	;volatile
  5656   002DB6  0BF0               	andlw	-16
  5657   002DB8  0908               	iorlw	8
  5658   002DBA  6FD9               	movwf	217,b	;volatile
  5659   002DBC                     
  5660                           ; BSR set to: 14
  5661                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5662   002DBC  8BD9               	bsf	217,5,b	;volatile
  5663                           
  5664                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5665   002DBE  0E9F               	movlw	159
  5666   002DC0  6FD6               	movwf	214,b	;volatile
  5667   002DC2                     
  5668                           ; BSR set to: 14
  5669                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5670   002DC2  8A84               	bsf	132,5,c	;volatile
  5671   002DC4                     
  5672                           ; BSR set to: 14
  5673                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5674   002DC4  8C84               	bsf	132,6,c	;volatile
  5675   002DC6                     
  5676                           ; BSR set to: 14
  5677                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5678   002DC6  9BA7               	bcf	167,5,b	;volatile
  5679   002DC8                     
  5680                           ; BSR set to: 14
  5681                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5682   002DC8  9DA7               	bcf	167,6,b	;volatile
  5683                           
  5684                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5685   002DCA  0E1D               	movlw	29
  5686   002DCC  6F1D               	movwf	29,b	;volatile
  5687                           
  5688                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5689   002DCE  0E1E               	movlw	30
  5690   002DD0  6F1C               	movwf	28,b	;volatile
  5691                           
  5692                           ;i2c.c: 18:   RD5PPS=0x1C;
  5693   002DD2  0E1C               	movlw	28
  5694   002DD4  6F6F               	movwf	111,b	;volatile
  5695                           
  5696                           ;i2c.c: 19:   RD6PPS=0x1B;
  5697   002DD6  0E1B               	movlw	27
  5698   002DD8  6F70               	movwf	112,b	;volatile
  5699   002DDA                     
  5700                           ; BSR set to: 14
  5701   002DDA  0012               	return		;funcret
  5702   002DDC                     __end_of_I2C_2_Master_Init:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _buggy_lights_init *****************
  5706 ;; Defined at:
  5707 ;;		line 7 in file "buggy_lights.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		None
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text29
  5736   002D84                     __ptext29:
  5737                           	callstack 0
  5738   002D84                     _buggy_lights_init:
  5739                           	callstack 29
  5740   002D84                     
  5741                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  5742   002D84  9884               	bcf	132,4,c	;volatile
  5743                           
  5744                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  5745   002D86  9288               	bcf	136,1,c	;volatile
  5746                           
  5747                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  5748   002D88  9684               	bcf	132,3,c	;volatile
  5749                           
  5750                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  5751   002D8A  9086               	bcf	134,0,c	;volatile
  5752                           
  5753                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  5754   002D8C  9088               	bcf	136,0,c	;volatile
  5755                           
  5756                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  5757   002D8E  987C               	bcf	124,4,c	;volatile
  5758                           
  5759                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  5760   002D90  9280               	bcf	128,1,c	;volatile
  5761                           
  5762                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  5763   002D92  967C               	bcf	124,3,c	;volatile
  5764                           
  5765                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  5766   002D94  907E               	bcf	126,0,c	;volatile
  5767                           
  5768                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  5769   002D96  9080               	bcf	128,0,c	;volatile
  5770                           
  5771                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  5772   002D98  9287               	bcf	135,1,c	;volatile
  5773                           
  5774                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  5775   002D9A  9881               	bcf	129,4,c	;volatile
  5776                           
  5777                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  5778   002D9C  9E86               	bcf	134,7,c	;volatile
  5779                           
  5780                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  5781   002D9E  927F               	bcf	127,1,c	;volatile
  5782                           
  5783                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  5784   002DA0  9879               	bcf	121,4,c	;volatile
  5785                           
  5786                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  5787   002DA2  9E7E               	bcf	126,7,c	;volatile
  5788                           
  5789                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  5790   002DA4  9087               	bcf	135,0,c	;volatile
  5791                           
  5792                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  5793   002DA6  9E85               	bcf	133,7,c	;volatile
  5794                           
  5795                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  5796   002DA8  9681               	bcf	129,3,c	;volatile
  5797                           
  5798                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  5799   002DAA  907F               	bcf	127,0,c	;volatile
  5800                           
  5801                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  5802   002DAC  9E7D               	bcf	125,7,c	;volatile
  5803                           
  5804                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  5805   002DAE  9679               	bcf	121,3,c	;volatile
  5806   002DB0  0012               	return		;funcret
  5807   002DB2                     __end_of_buggy_lights_init:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function _average_RGBC *****************
  5811 ;; Defined at:
  5812 ;;		line 124 in file "color.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  p               1   13[COMRAM] PTR struct RGBC_val
  5815 ;;		 -> main@RGBC_colour(8), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  i               1   16[COMRAM] unsigned char 
  5818 ;;  temp_C          4   29[COMRAM] unsigned long 
  5819 ;;  temp_B          4   25[COMRAM] unsigned long 
  5820 ;;  temp_G          4   21[COMRAM] unsigned long 
  5821 ;;  temp_R          4   17[COMRAM] unsigned long 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;Total ram usage:       20 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 5
  5838 ;; This function calls:
  5839 ;;		___lldiv
  5840 ;;		_getRGBCval
  5841 ;; This function is called by:
  5842 ;;		_main
  5843 ;;		_forward_navigation
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text30
  5848   001C1C                     __ptext30:
  5849                           	callstack 0
  5850   001C1C                     _average_RGBC:
  5851                           	callstack 25
  5852   001C1C                     
  5853                           ;color.c: 124: void average_RGBC(struct RGBC_val *p);color.c: 125: {;color.c: 127:     u
      +                          nsigned long temp_R = 0;
  5854   001C1C  0E00               	movlw	0
  5855   001C1E  6E12               	movwf	average_RGBC@temp_R^0,c
  5856   001C20  0E00               	movlw	0
  5857   001C22  6E13               	movwf	(average_RGBC@temp_R+1)^0,c
  5858   001C24  0E00               	movlw	0
  5859   001C26  6E14               	movwf	(average_RGBC@temp_R+2)^0,c
  5860   001C28  0E00               	movlw	0
  5861   001C2A  6E15               	movwf	(average_RGBC@temp_R+3)^0,c
  5862                           
  5863                           ;color.c: 128:     unsigned long temp_G = 0;
  5864   001C2C  0E00               	movlw	0
  5865   001C2E  6E16               	movwf	average_RGBC@temp_G^0,c
  5866   001C30  0E00               	movlw	0
  5867   001C32  6E17               	movwf	(average_RGBC@temp_G+1)^0,c
  5868   001C34  0E00               	movlw	0
  5869   001C36  6E18               	movwf	(average_RGBC@temp_G+2)^0,c
  5870   001C38  0E00               	movlw	0
  5871   001C3A  6E19               	movwf	(average_RGBC@temp_G+3)^0,c
  5872                           
  5873                           ;color.c: 129:     unsigned long temp_B = 0;
  5874   001C3C  0E00               	movlw	0
  5875   001C3E  6E1A               	movwf	average_RGBC@temp_B^0,c
  5876   001C40  0E00               	movlw	0
  5877   001C42  6E1B               	movwf	(average_RGBC@temp_B+1)^0,c
  5878   001C44  0E00               	movlw	0
  5879   001C46  6E1C               	movwf	(average_RGBC@temp_B+2)^0,c
  5880   001C48  0E00               	movlw	0
  5881   001C4A  6E1D               	movwf	(average_RGBC@temp_B+3)^0,c
  5882                           
  5883                           ;color.c: 130:     unsigned long temp_C = 0;
  5884   001C4C  0E00               	movlw	0
  5885   001C4E  6E1E               	movwf	average_RGBC@temp_C^0,c
  5886   001C50  0E00               	movlw	0
  5887   001C52  6E1F               	movwf	(average_RGBC@temp_C+1)^0,c
  5888   001C54  0E00               	movlw	0
  5889   001C56  6E20               	movwf	(average_RGBC@temp_C+2)^0,c
  5890   001C58  0E00               	movlw	0
  5891   001C5A  6E21               	movwf	(average_RGBC@temp_C+3)^0,c
  5892                           
  5893                           ;color.c: 132:     for (unsigned char i; i < sample_count; i++) {
  5894   001C5C  EF77  F00E         	goto	l3850
  5895   001C60                     l3838:
  5896                           
  5897                           ;color.c: 133:         getRGBCval(p);
  5898   001C60  C00E  F00C         	movff	average_RGBC@p,getRGBCval@p
  5899   001C64  EC56  F015         	call	_getRGBCval	;wreg free
  5900   001C68                     
  5901                           ;color.c: 135:         temp_R += (unsigned long)p->R;
  5902   001C68  500E               	movf	average_RGBC@p^0,w,c
  5903   001C6A  6ED9               	movwf	fsr2l,c
  5904   001C6C  6ADA               	clrf	fsr2h,c
  5905   001C6E  CFDE F00F          	movff	postinc2,??_average_RGBC
  5906   001C72  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5907   001C76  500F               	movf	??_average_RGBC^0,w,c
  5908   001C78  2612               	addwf	average_RGBC@temp_R^0,f,c
  5909   001C7A  5010               	movf	(??_average_RGBC+1)^0,w,c
  5910   001C7C  2213               	addwfc	(average_RGBC@temp_R+1)^0,f,c
  5911   001C7E  0E00               	movlw	0
  5912   001C80  2214               	addwfc	(average_RGBC@temp_R+2)^0,f,c
  5913   001C82  0E00               	movlw	0
  5914   001C84  2215               	addwfc	(average_RGBC@temp_R+3)^0,f,c
  5915   001C86                     
  5916                           ;color.c: 136:         temp_G += (unsigned long)p->G;
  5917   001C86  500E               	movf	average_RGBC@p^0,w,c
  5918   001C88  6ED9               	movwf	fsr2l,c
  5919   001C8A  6ADA               	clrf	fsr2h,c
  5920   001C8C  0E02               	movlw	2
  5921   001C8E  26D9               	addwf	fsr2l,f,c
  5922   001C90  CFDE F00F          	movff	postinc2,??_average_RGBC
  5923   001C94  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5924   001C98  500F               	movf	??_average_RGBC^0,w,c
  5925   001C9A  2616               	addwf	average_RGBC@temp_G^0,f,c
  5926   001C9C  5010               	movf	(??_average_RGBC+1)^0,w,c
  5927   001C9E  2217               	addwfc	(average_RGBC@temp_G+1)^0,f,c
  5928   001CA0  0E00               	movlw	0
  5929   001CA2  2218               	addwfc	(average_RGBC@temp_G+2)^0,f,c
  5930   001CA4  0E00               	movlw	0
  5931   001CA6  2219               	addwfc	(average_RGBC@temp_G+3)^0,f,c
  5932   001CA8                     
  5933                           ;color.c: 137:         temp_B += (unsigned long)p->B;
  5934   001CA8  500E               	movf	average_RGBC@p^0,w,c
  5935   001CAA  6ED9               	movwf	fsr2l,c
  5936   001CAC  6ADA               	clrf	fsr2h,c
  5937   001CAE  0E04               	movlw	4
  5938   001CB0  26D9               	addwf	fsr2l,f,c
  5939   001CB2  CFDE F00F          	movff	postinc2,??_average_RGBC
  5940   001CB6  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5941   001CBA  500F               	movf	??_average_RGBC^0,w,c
  5942   001CBC  261A               	addwf	average_RGBC@temp_B^0,f,c
  5943   001CBE  5010               	movf	(??_average_RGBC+1)^0,w,c
  5944   001CC0  221B               	addwfc	(average_RGBC@temp_B+1)^0,f,c
  5945   001CC2  0E00               	movlw	0
  5946   001CC4  221C               	addwfc	(average_RGBC@temp_B+2)^0,f,c
  5947   001CC6  0E00               	movlw	0
  5948   001CC8  221D               	addwfc	(average_RGBC@temp_B+3)^0,f,c
  5949   001CCA                     
  5950                           ;color.c: 138:         temp_C += (unsigned long)p->C;
  5951   001CCA  500E               	movf	average_RGBC@p^0,w,c
  5952   001CCC  6ED9               	movwf	fsr2l,c
  5953   001CCE  6ADA               	clrf	fsr2h,c
  5954   001CD0  0E06               	movlw	6
  5955   001CD2  26D9               	addwf	fsr2l,f,c
  5956   001CD4  CFDE F00F          	movff	postinc2,??_average_RGBC
  5957   001CD8  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5958   001CDC  500F               	movf	??_average_RGBC^0,w,c
  5959   001CDE  261E               	addwf	average_RGBC@temp_C^0,f,c
  5960   001CE0  5010               	movf	(??_average_RGBC+1)^0,w,c
  5961   001CE2  221F               	addwfc	(average_RGBC@temp_C+1)^0,f,c
  5962   001CE4  0E00               	movlw	0
  5963   001CE6  2220               	addwfc	(average_RGBC@temp_C+2)^0,f,c
  5964   001CE8  0E00               	movlw	0
  5965   001CEA  2221               	addwfc	(average_RGBC@temp_C+3)^0,f,c
  5966   001CEC                     
  5967                           ;color.c: 139:     }
  5968   001CEC  2A11               	incf	average_RGBC@i^0,f,c
  5969   001CEE                     l3850:
  5970   001CEE  0E13               	movlw	19
  5971   001CF0  6411               	cpfsgt	average_RGBC@i^0,c
  5972   001CF2  EF7D  F00E         	goto	u3161
  5973   001CF6  EF7F  F00E         	goto	u3160
  5974   001CFA                     u3161:
  5975   001CFA  EF30  F00E         	goto	l3838
  5976   001CFE                     u3160:
  5977   001CFE  C012  F001         	movff	average_RGBC@temp_R,___lldiv@dividend
  5978   001D02  C013  F002         	movff	average_RGBC@temp_R+1,___lldiv@dividend+1
  5979   001D06  C014  F003         	movff	average_RGBC@temp_R+2,___lldiv@dividend+2
  5980   001D0A  C015  F004         	movff	average_RGBC@temp_R+3,___lldiv@dividend+3
  5981   001D0E  0E14               	movlw	20
  5982   001D10  6E05               	movwf	___lldiv@divisor^0,c
  5983   001D12  0E00               	movlw	0
  5984   001D14  6E06               	movwf	(___lldiv@divisor+1)^0,c
  5985   001D16  0E00               	movlw	0
  5986   001D18  6E07               	movwf	(___lldiv@divisor+2)^0,c
  5987   001D1A  0E00               	movlw	0
  5988   001D1C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  5989   001D1E  ECDF  F012         	call	___lldiv	;wreg free
  5990   001D22  C001  F012         	movff	?___lldiv,average_RGBC@temp_R
  5991   001D26  C002  F013         	movff	?___lldiv+1,average_RGBC@temp_R+1
  5992   001D2A  C003  F014         	movff	?___lldiv+2,average_RGBC@temp_R+2
  5993   001D2E  C004  F015         	movff	?___lldiv+3,average_RGBC@temp_R+3
  5994   001D32  C016  F001         	movff	average_RGBC@temp_G,___lldiv@dividend
  5995   001D36  C017  F002         	movff	average_RGBC@temp_G+1,___lldiv@dividend+1
  5996   001D3A  C018  F003         	movff	average_RGBC@temp_G+2,___lldiv@dividend+2
  5997   001D3E  C019  F004         	movff	average_RGBC@temp_G+3,___lldiv@dividend+3
  5998   001D42  0E14               	movlw	20
  5999   001D44  6E05               	movwf	___lldiv@divisor^0,c
  6000   001D46  0E00               	movlw	0
  6001   001D48  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6002   001D4A  0E00               	movlw	0
  6003   001D4C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6004   001D4E  0E00               	movlw	0
  6005   001D50  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6006   001D52  ECDF  F012         	call	___lldiv	;wreg free
  6007   001D56  C001  F016         	movff	?___lldiv,average_RGBC@temp_G
  6008   001D5A  C002  F017         	movff	?___lldiv+1,average_RGBC@temp_G+1
  6009   001D5E  C003  F018         	movff	?___lldiv+2,average_RGBC@temp_G+2
  6010   001D62  C004  F019         	movff	?___lldiv+3,average_RGBC@temp_G+3
  6011   001D66  C01A  F001         	movff	average_RGBC@temp_B,___lldiv@dividend
  6012   001D6A  C01B  F002         	movff	average_RGBC@temp_B+1,___lldiv@dividend+1
  6013   001D6E  C01C  F003         	movff	average_RGBC@temp_B+2,___lldiv@dividend+2
  6014   001D72  C01D  F004         	movff	average_RGBC@temp_B+3,___lldiv@dividend+3
  6015   001D76  0E14               	movlw	20
  6016   001D78  6E05               	movwf	___lldiv@divisor^0,c
  6017   001D7A  0E00               	movlw	0
  6018   001D7C  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6019   001D7E  0E00               	movlw	0
  6020   001D80  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6021   001D82  0E00               	movlw	0
  6022   001D84  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6023   001D86  ECDF  F012         	call	___lldiv	;wreg free
  6024   001D8A  C001  F01A         	movff	?___lldiv,average_RGBC@temp_B
  6025   001D8E  C002  F01B         	movff	?___lldiv+1,average_RGBC@temp_B+1
  6026   001D92  C003  F01C         	movff	?___lldiv+2,average_RGBC@temp_B+2
  6027   001D96  C004  F01D         	movff	?___lldiv+3,average_RGBC@temp_B+3
  6028   001D9A  C01E  F001         	movff	average_RGBC@temp_C,___lldiv@dividend
  6029   001D9E  C01F  F002         	movff	average_RGBC@temp_C+1,___lldiv@dividend+1
  6030   001DA2  C020  F003         	movff	average_RGBC@temp_C+2,___lldiv@dividend+2
  6031   001DA6  C021  F004         	movff	average_RGBC@temp_C+3,___lldiv@dividend+3
  6032   001DAA  0E14               	movlw	20
  6033   001DAC  6E05               	movwf	___lldiv@divisor^0,c
  6034   001DAE  0E00               	movlw	0
  6035   001DB0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6036   001DB2  0E00               	movlw	0
  6037   001DB4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6038   001DB6  0E00               	movlw	0
  6039   001DB8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6040   001DBA  ECDF  F012         	call	___lldiv	;wreg free
  6041   001DBE  C001  F01E         	movff	?___lldiv,average_RGBC@temp_C
  6042   001DC2  C002  F01F         	movff	?___lldiv+1,average_RGBC@temp_C+1
  6043   001DC6  C003  F020         	movff	?___lldiv+2,average_RGBC@temp_C+2
  6044   001DCA  C004  F021         	movff	?___lldiv+3,average_RGBC@temp_C+3
  6045   001DCE                     
  6046                           ;color.c: 148:     p->R = (unsigned int)temp_R;
  6047   001DCE  500E               	movf	average_RGBC@p^0,w,c
  6048   001DD0  6ED9               	movwf	fsr2l,c
  6049   001DD2  6ADA               	clrf	fsr2h,c
  6050   001DD4  C012  FFDE         	movff	average_RGBC@temp_R,postinc2
  6051   001DD8  C013  FFDD         	movff	average_RGBC@temp_R+1,postdec2
  6052   001DDC                     
  6053                           ;color.c: 149:     p->G = (unsigned int)temp_G;
  6054   001DDC  500E               	movf	average_RGBC@p^0,w,c
  6055   001DDE  6ED9               	movwf	fsr2l,c
  6056   001DE0  6ADA               	clrf	fsr2h,c
  6057   001DE2  0E02               	movlw	2
  6058   001DE4  26D9               	addwf	fsr2l,f,c
  6059   001DE6  C016  FFDE         	movff	average_RGBC@temp_G,postinc2
  6060   001DEA  C017  FFDD         	movff	average_RGBC@temp_G+1,postdec2
  6061   001DEE                     
  6062                           ;color.c: 150:     p->B = (unsigned int)temp_B;
  6063   001DEE  500E               	movf	average_RGBC@p^0,w,c
  6064   001DF0  6ED9               	movwf	fsr2l,c
  6065   001DF2  6ADA               	clrf	fsr2h,c
  6066   001DF4  0E04               	movlw	4
  6067   001DF6  26D9               	addwf	fsr2l,f,c
  6068   001DF8  C01A  FFDE         	movff	average_RGBC@temp_B,postinc2
  6069   001DFC  C01B  FFDD         	movff	average_RGBC@temp_B+1,postdec2
  6070   001E00                     
  6071                           ;color.c: 151:     p->C = (unsigned int)temp_C;
  6072   001E00  500E               	movf	average_RGBC@p^0,w,c
  6073   001E02  6ED9               	movwf	fsr2l,c
  6074   001E04  6ADA               	clrf	fsr2h,c
  6075   001E06  0E06               	movlw	6
  6076   001E08  26D9               	addwf	fsr2l,f,c
  6077   001E0A  C01E  FFDE         	movff	average_RGBC@temp_C,postinc2
  6078   001E0E  C01F  FFDD         	movff	average_RGBC@temp_C+1,postdec2
  6079   001E12  0012               	return		;funcret
  6080   001E14                     __end_of_average_RGBC:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _getRGBCval *****************
  6084 ;; Defined at:
  6085 ;;		line 112 in file "color.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  6088 ;;		 -> main@RGBC_colour(8), 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6100 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;Total ram usage:        1 bytes
  6105 ;; Hardware stack levels used: 1
  6106 ;; Hardware stack levels required when called: 4
  6107 ;; This function calls:
  6108 ;;		_color_read_Blue
  6109 ;;		_color_read_Clear
  6110 ;;		_color_read_Green
  6111 ;;		_color_read_Red
  6112 ;; This function is called by:
  6113 ;;		_average_RGBC
  6114 ;;		_wait_for_wall
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text31
  6119   002AAC                     __ptext31:
  6120                           	callstack 0
  6121   002AAC                     _getRGBCval:
  6122                           	callstack 25
  6123   002AAC                     
  6124                           ;color.c: 112: void getRGBCval(struct RGBC_val *p);color.c: 113: {;color.c: 114:     p->
      +                          R = color_read_Red();
  6125   002AAC  EC81  F015         	call	_color_read_Red	;wreg free
  6126   002AB0  500C               	movf	getRGBCval@p^0,w,c
  6127   002AB2  6ED9               	movwf	fsr2l,c
  6128   002AB4  6ADA               	clrf	fsr2h,c
  6129   002AB6  C005  FFDE         	movff	?_color_read_Red,postinc2
  6130   002ABA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6131                           
  6132                           ;color.c: 115:     p->G = color_read_Green();
  6133   002ABE  ECA9  F015         	call	_color_read_Green	;wreg free
  6134   002AC2  500C               	movf	getRGBCval@p^0,w,c
  6135   002AC4  6ED9               	movwf	fsr2l,c
  6136   002AC6  6ADA               	clrf	fsr2h,c
  6137   002AC8  0E02               	movlw	2
  6138   002ACA  26D9               	addwf	fsr2l,f,c
  6139   002ACC  C005  FFDE         	movff	?_color_read_Green,postinc2
  6140   002AD0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6141                           
  6142                           ;color.c: 116:     p->B = color_read_Blue();
  6143   002AD4  ECF9  F015         	call	_color_read_Blue	;wreg free
  6144   002AD8  500C               	movf	getRGBCval@p^0,w,c
  6145   002ADA  6ED9               	movwf	fsr2l,c
  6146   002ADC  6ADA               	clrf	fsr2h,c
  6147   002ADE  0E04               	movlw	4
  6148   002AE0  26D9               	addwf	fsr2l,f,c
  6149   002AE2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6150   002AE6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6151                           
  6152                           ;color.c: 117:     p->C = color_read_Clear();
  6153   002AEA  ECD1  F015         	call	_color_read_Clear	;wreg free
  6154   002AEE  500C               	movf	getRGBCval@p^0,w,c
  6155   002AF0  6ED9               	movwf	fsr2l,c
  6156   002AF2  6ADA               	clrf	fsr2h,c
  6157   002AF4  0E06               	movlw	6
  6158   002AF6  26D9               	addwf	fsr2l,f,c
  6159   002AF8  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6160   002AFC  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6161   002B00  0012               	return		;funcret
  6162   002B02                     __end_of_getRGBCval:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function _color_read_Red *****************
  6166 ;; Defined at:
  6167 ;;		line 40 in file "color.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  tmp             2    9[COMRAM] unsigned int 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  2    4[COMRAM] unsigned int 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;Total ram usage:        7 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 3
  6188 ;; This function calls:
  6189 ;;		_I2C_2_Master_Read
  6190 ;;		_I2C_2_Master_RepStart
  6191 ;;		_I2C_2_Master_Start
  6192 ;;		_I2C_2_Master_Stop
  6193 ;;		_I2C_2_Master_Write
  6194 ;; This function is called by:
  6195 ;;		_getRGBCval
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text32
  6200   002B02                     __ptext32:
  6201                           	callstack 0
  6202   002B02                     _color_read_Red:
  6203                           	callstack 25
  6204   002B02                     
  6205                           ;color.c: 42:  unsigned int tmp;;color.c: 43:  I2C_2_Master_Start();
  6206   002B02  EC61  F017         	call	_I2C_2_Master_Start	;wreg free
  6207                           
  6208                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x00);
  6209   002B06  0E52               	movlw	82
  6210   002B08  EC4A  F017         	call	_I2C_2_Master_Write
  6211                           
  6212                           ;color.c: 45:  I2C_2_Master_Write(0xA0 | 0x16);
  6213   002B0C  0EB6               	movlw	182
  6214   002B0E  EC4A  F017         	call	_I2C_2_Master_Write
  6215                           
  6216                           ;color.c: 46:  I2C_2_Master_RepStart();
  6217   002B12  EC66  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6218                           
  6219                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x01);
  6220   002B16  0E53               	movlw	83
  6221   002B18  EC4A  F017         	call	_I2C_2_Master_Write
  6222                           
  6223                           ;color.c: 48:  tmp=I2C_2_Master_Read(1);
  6224   002B1C  0E01               	movlw	1
  6225   002B1E  EC6D  F016         	call	_I2C_2_Master_Read
  6226   002B22  6E07               	movwf	??_color_read_Red^0,c
  6227   002B24  5007               	movf	??_color_read_Red^0,w,c
  6228   002B26  6E0A               	movwf	color_read_Red@tmp^0,c
  6229   002B28  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6230                           
  6231                           ;color.c: 49:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6232   002B2A  0E00               	movlw	0
  6233   002B2C  EC6D  F016         	call	_I2C_2_Master_Read
  6234   002B30  6E07               	movwf	??_color_read_Red^0,c
  6235   002B32  5007               	movf	??_color_read_Red^0,w,c
  6236   002B34  6E09               	movwf	(??_color_read_Red+2)^0,c
  6237   002B36  6A08               	clrf	(??_color_read_Red+1)^0,c
  6238   002B38  500A               	movf	color_read_Red@tmp^0,w,c
  6239   002B3A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6240   002B3C  6E0A               	movwf	color_read_Red@tmp^0,c
  6241   002B3E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6242   002B40  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6243   002B42  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6244                           
  6245                           ;color.c: 50:  I2C_2_Master_Stop();
  6246   002B44  EC5C  F017         	call	_I2C_2_Master_Stop	;wreg free
  6247   002B48                     
  6248                           ;color.c: 51:  return tmp;
  6249   002B48  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6250   002B4C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6251   002B50  0012               	return		;funcret
  6252   002B52                     __end_of_color_read_Red:
  6253                           	callstack 0
  6254                           
  6255 ;; *************** function _color_read_Green *****************
  6256 ;; Defined at:
  6257 ;;		line 58 in file "color.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  tmp             2    9[COMRAM] unsigned int 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  2    4[COMRAM] unsigned int 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;Total ram usage:        7 bytes
  6276 ;; Hardware stack levels used: 1
  6277 ;; Hardware stack levels required when called: 3
  6278 ;; This function calls:
  6279 ;;		_I2C_2_Master_Read
  6280 ;;		_I2C_2_Master_RepStart
  6281 ;;		_I2C_2_Master_Start
  6282 ;;		_I2C_2_Master_Stop
  6283 ;;		_I2C_2_Master_Write
  6284 ;; This function is called by:
  6285 ;;		_getRGBCval
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text33
  6290   002B52                     __ptext33:
  6291                           	callstack 0
  6292   002B52                     _color_read_Green:
  6293                           	callstack 25
  6294   002B52                     
  6295                           ;color.c: 60:     unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  6296   002B52  EC61  F017         	call	_I2C_2_Master_Start	;wreg free
  6297                           
  6298                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  6299   002B56  0E52               	movlw	82
  6300   002B58  EC4A  F017         	call	_I2C_2_Master_Write
  6301                           
  6302                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  6303   002B5C  0EB8               	movlw	184
  6304   002B5E  EC4A  F017         	call	_I2C_2_Master_Write
  6305                           
  6306                           ;color.c: 64:  I2C_2_Master_RepStart();
  6307   002B62  EC66  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6308                           
  6309                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  6310   002B66  0E53               	movlw	83
  6311   002B68  EC4A  F017         	call	_I2C_2_Master_Write
  6312                           
  6313                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  6314   002B6C  0E01               	movlw	1
  6315   002B6E  EC6D  F016         	call	_I2C_2_Master_Read
  6316   002B72  6E07               	movwf	??_color_read_Green^0,c
  6317   002B74  5007               	movf	??_color_read_Green^0,w,c
  6318   002B76  6E0A               	movwf	color_read_Green@tmp^0,c
  6319   002B78  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6320                           
  6321                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6322   002B7A  0E00               	movlw	0
  6323   002B7C  EC6D  F016         	call	_I2C_2_Master_Read
  6324   002B80  6E07               	movwf	??_color_read_Green^0,c
  6325   002B82  5007               	movf	??_color_read_Green^0,w,c
  6326   002B84  6E09               	movwf	(??_color_read_Green+2)^0,c
  6327   002B86  6A08               	clrf	(??_color_read_Green+1)^0,c
  6328   002B88  500A               	movf	color_read_Green@tmp^0,w,c
  6329   002B8A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6330   002B8C  6E0A               	movwf	color_read_Green@tmp^0,c
  6331   002B8E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6332   002B90  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6333   002B92  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6334                           
  6335                           ;color.c: 68:  I2C_2_Master_Stop();
  6336   002B94  EC5C  F017         	call	_I2C_2_Master_Stop	;wreg free
  6337   002B98                     
  6338                           ;color.c: 69:  return tmp;
  6339   002B98  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6340   002B9C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6341   002BA0  0012               	return		;funcret
  6342   002BA2                     __end_of_color_read_Green:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function _color_read_Clear *****************
  6346 ;; Defined at:
  6347 ;;		line 94 in file "color.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  tmp             2    9[COMRAM] unsigned int 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  2    4[COMRAM] unsigned int 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;Total ram usage:        7 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 3
  6368 ;; This function calls:
  6369 ;;		_I2C_2_Master_Read
  6370 ;;		_I2C_2_Master_RepStart
  6371 ;;		_I2C_2_Master_Start
  6372 ;;		_I2C_2_Master_Stop
  6373 ;;		_I2C_2_Master_Write
  6374 ;; This function is called by:
  6375 ;;		_getRGBCval
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text34
  6380   002BA2                     __ptext34:
  6381                           	callstack 0
  6382   002BA2                     _color_read_Clear:
  6383                           	callstack 25
  6384   002BA2                     
  6385                           ;color.c: 96:     unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  6386   002BA2  EC61  F017         	call	_I2C_2_Master_Start	;wreg free
  6387                           
  6388                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  6389   002BA6  0E52               	movlw	82
  6390   002BA8  EC4A  F017         	call	_I2C_2_Master_Write
  6391                           
  6392                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x14);
  6393   002BAC  0EB4               	movlw	180
  6394   002BAE  EC4A  F017         	call	_I2C_2_Master_Write
  6395                           
  6396                           ;color.c: 100:  I2C_2_Master_RepStart();
  6397   002BB2  EC66  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6398                           
  6399                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  6400   002BB6  0E53               	movlw	83
  6401   002BB8  EC4A  F017         	call	_I2C_2_Master_Write
  6402                           
  6403                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  6404   002BBC  0E01               	movlw	1
  6405   002BBE  EC6D  F016         	call	_I2C_2_Master_Read
  6406   002BC2  6E07               	movwf	??_color_read_Clear^0,c
  6407   002BC4  5007               	movf	??_color_read_Clear^0,w,c
  6408   002BC6  6E0A               	movwf	color_read_Clear@tmp^0,c
  6409   002BC8  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6410                           
  6411                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6412   002BCA  0E00               	movlw	0
  6413   002BCC  EC6D  F016         	call	_I2C_2_Master_Read
  6414   002BD0  6E07               	movwf	??_color_read_Clear^0,c
  6415   002BD2  5007               	movf	??_color_read_Clear^0,w,c
  6416   002BD4  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6417   002BD6  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6418   002BD8  500A               	movf	color_read_Clear@tmp^0,w,c
  6419   002BDA  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6420   002BDC  6E0A               	movwf	color_read_Clear@tmp^0,c
  6421   002BDE  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6422   002BE0  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6423   002BE2  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6424                           
  6425                           ;color.c: 104:  I2C_2_Master_Stop();
  6426   002BE4  EC5C  F017         	call	_I2C_2_Master_Stop	;wreg free
  6427   002BE8                     
  6428                           ;color.c: 105:  return tmp;
  6429   002BE8  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6430   002BEC  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6431   002BF0  0012               	return		;funcret
  6432   002BF2                     __end_of_color_read_Clear:
  6433                           	callstack 0
  6434                           
  6435 ;; *************** function _color_read_Blue *****************
  6436 ;; Defined at:
  6437 ;;		line 76 in file "color.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  tmp             2    9[COMRAM] unsigned int 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  2    4[COMRAM] unsigned int 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;Total ram usage:        7 bytes
  6456 ;; Hardware stack levels used: 1
  6457 ;; Hardware stack levels required when called: 3
  6458 ;; This function calls:
  6459 ;;		_I2C_2_Master_Read
  6460 ;;		_I2C_2_Master_RepStart
  6461 ;;		_I2C_2_Master_Start
  6462 ;;		_I2C_2_Master_Stop
  6463 ;;		_I2C_2_Master_Write
  6464 ;; This function is called by:
  6465 ;;		_getRGBCval
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text35
  6470   002BF2                     __ptext35:
  6471                           	callstack 0
  6472   002BF2                     _color_read_Blue:
  6473                           	callstack 25
  6474   002BF2                     
  6475                           ;color.c: 78:     unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6476   002BF2  EC61  F017         	call	_I2C_2_Master_Start	;wreg free
  6477                           
  6478                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6479   002BF6  0E52               	movlw	82
  6480   002BF8  EC4A  F017         	call	_I2C_2_Master_Write
  6481                           
  6482                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x1A);
  6483   002BFC  0EBA               	movlw	186
  6484   002BFE  EC4A  F017         	call	_I2C_2_Master_Write
  6485                           
  6486                           ;color.c: 82:  I2C_2_Master_RepStart();
  6487   002C02  EC66  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6488                           
  6489                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6490   002C06  0E53               	movlw	83
  6491   002C08  EC4A  F017         	call	_I2C_2_Master_Write
  6492                           
  6493                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6494   002C0C  0E01               	movlw	1
  6495   002C0E  EC6D  F016         	call	_I2C_2_Master_Read
  6496   002C12  6E07               	movwf	??_color_read_Blue^0,c
  6497   002C14  5007               	movf	??_color_read_Blue^0,w,c
  6498   002C16  6E0A               	movwf	color_read_Blue@tmp^0,c
  6499   002C18  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6500                           
  6501                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6502   002C1A  0E00               	movlw	0
  6503   002C1C  EC6D  F016         	call	_I2C_2_Master_Read
  6504   002C20  6E07               	movwf	??_color_read_Blue^0,c
  6505   002C22  5007               	movf	??_color_read_Blue^0,w,c
  6506   002C24  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6507   002C26  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6508   002C28  500A               	movf	color_read_Blue@tmp^0,w,c
  6509   002C2A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6510   002C2C  6E0A               	movwf	color_read_Blue@tmp^0,c
  6511   002C2E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6512   002C30  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6513   002C32  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6514                           
  6515                           ;color.c: 86:  I2C_2_Master_Stop();
  6516   002C34  EC5C  F017         	call	_I2C_2_Master_Stop	;wreg free
  6517   002C38                     
  6518                           ;color.c: 87:  return tmp;
  6519   002C38  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6520   002C3C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6521   002C40  0012               	return		;funcret
  6522   002C42                     __end_of_color_read_Blue:
  6523                           	callstack 0
  6524                           
  6525 ;; *************** function _I2C_2_Master_Write *****************
  6526 ;; Defined at:
  6527 ;;		line 45 in file "i2c.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  data_byte       1    wreg     unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  data_byte       1    1[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;Total ram usage:        1 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 2
  6548 ;; This function calls:
  6549 ;;		_I2C_2_Master_Idle
  6550 ;; This function is called by:
  6551 ;;		_color_writetoaddr
  6552 ;;		_color_read_Red
  6553 ;;		_color_read_Green
  6554 ;;		_color_read_Blue
  6555 ;;		_color_read_Clear
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text36
  6560   002E94                     __ptext36:
  6561                           	callstack 0
  6562   002E94                     _I2C_2_Master_Write:
  6563                           	callstack 26
  6564                           
  6565                           ;incstack = 0
  6566                           ;I2C_2_Master_Write@data_byte stored from wreg
  6567   002E94  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6568   002E96                     
  6569                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6570   002E96  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6571   002E9A                     
  6572                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6573   002E9A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6574   002E9E  0012               	return		;funcret
  6575   002EA0                     __end_of_I2C_2_Master_Write:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function _I2C_2_Master_Stop *****************
  6579 ;; Defined at:
  6580 ;;		line 39 in file "i2c.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; Hardware stack levels required when called: 2
  6601 ;; This function calls:
  6602 ;;		_I2C_2_Master_Idle
  6603 ;; This function is called by:
  6604 ;;		_color_writetoaddr
  6605 ;;		_color_read_Red
  6606 ;;		_color_read_Green
  6607 ;;		_color_read_Blue
  6608 ;;		_color_read_Clear
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text37
  6613   002EB8                     __ptext37:
  6614                           	callstack 0
  6615   002EB8                     _I2C_2_Master_Stop:
  6616                           	callstack 26
  6617   002EB8                     
  6618                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6619   002EB8  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6620   002EBC                     
  6621                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6622   002EBC  010E               	movlb	14	; () banked
  6623   002EBE  85DA               	bsf	218,2,b	;volatile
  6624   002EC0                     
  6625                           ; BSR set to: 14
  6626   002EC0  0012               	return		;funcret
  6627   002EC2                     __end_of_I2C_2_Master_Stop:
  6628                           	callstack 0
  6629                           
  6630 ;; *************** function _I2C_2_Master_Start *****************
  6631 ;; Defined at:
  6632 ;;		line 27 in file "i2c.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;Total ram usage:        0 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 2
  6653 ;; This function calls:
  6654 ;;		_I2C_2_Master_Idle
  6655 ;; This function is called by:
  6656 ;;		_color_writetoaddr
  6657 ;;		_color_read_Red
  6658 ;;		_color_read_Green
  6659 ;;		_color_read_Blue
  6660 ;;		_color_read_Clear
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text38
  6665   002EC2                     __ptext38:
  6666                           	callstack 0
  6667   002EC2                     _I2C_2_Master_Start:
  6668                           	callstack 26
  6669   002EC2                     
  6670                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6671   002EC2  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6672   002EC6                     
  6673                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6674   002EC6  010E               	movlb	14	; () banked
  6675   002EC8  81DA               	bsf	218,0,b	;volatile
  6676   002ECA                     
  6677                           ; BSR set to: 14
  6678   002ECA  0012               	return		;funcret
  6679   002ECC                     __end_of_I2C_2_Master_Start:
  6680                           	callstack 0
  6681                           
  6682 ;; *************** function _I2C_2_Master_RepStart *****************
  6683 ;; Defined at:
  6684 ;;		line 33 in file "i2c.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 2
  6705 ;; This function calls:
  6706 ;;		_I2C_2_Master_Idle
  6707 ;; This function is called by:
  6708 ;;		_color_read_Red
  6709 ;;		_color_read_Green
  6710 ;;		_color_read_Blue
  6711 ;;		_color_read_Clear
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text39
  6716   002ECC                     __ptext39:
  6717                           	callstack 0
  6718   002ECC                     _I2C_2_Master_RepStart:
  6719                           	callstack 25
  6720   002ECC                     
  6721                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6722   002ECC  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6723   002ED0                     
  6724                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6725   002ED0  010E               	movlb	14	; () banked
  6726   002ED2  83DA               	bsf	218,1,b	;volatile
  6727   002ED4                     
  6728                           ; BSR set to: 14
  6729   002ED4  0012               	return		;funcret
  6730   002ED6                     __end_of_I2C_2_Master_RepStart:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function _I2C_2_Master_Read *****************
  6734 ;; Defined at:
  6735 ;;		line 51 in file "i2c.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  ack             1    wreg     unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  ack             1    2[COMRAM] unsigned char 
  6740 ;;  tmp             1    3[COMRAM] unsigned char 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      unsigned char 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;Total ram usage:        3 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 2
  6757 ;; This function calls:
  6758 ;;		_I2C_2_Master_Idle
  6759 ;; This function is called by:
  6760 ;;		_color_read_Red
  6761 ;;		_color_read_Green
  6762 ;;		_color_read_Blue
  6763 ;;		_color_read_Clear
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text40
  6768   002CDA                     __ptext40:
  6769                           	callstack 0
  6770   002CDA                     _I2C_2_Master_Read:
  6771                           	callstack 25
  6772                           
  6773                           ; BSR set to: 14
  6774                           ;incstack = 0
  6775                           ;I2C_2_Master_Read@ack stored from wreg
  6776   002CDA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6777   002CDC                     
  6778                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6779   002CDC  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6780   002CE0                     
  6781                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6782   002CE0  010E               	movlb	14	; () banked
  6783   002CE2  87DA               	bsf	218,3,b	;volatile
  6784                           
  6785                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6786   002CE4  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6787   002CE8                     
  6788                           ;i2c.c: 57:   tmp = SSP2BUF;
  6789   002CE8  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6790                           
  6791                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6792   002CEC  ECEE  F016         	call	_I2C_2_Master_Idle	;wreg free
  6793   002CF0                     
  6794                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6795   002CF0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6796   002CF2  B4D8               	btfsc	status,2,c
  6797   002CF4  EF7E  F016         	goto	u2221
  6798   002CF8  EF82  F016         	goto	u2220
  6799   002CFC                     u2221:
  6800   002CFC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6801   002CFE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6802   002D00  EF83  F016         	goto	u2238
  6803   002D04                     u2220:
  6804   002D04  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6805   002D06                     u2238:
  6806   002D06  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6807   002D08  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6808   002D0A  010E               	movlb	14	; () banked
  6809   002D0C  51DA               	movf	218,w,b	;volatile
  6810   002D0E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6811   002D10  0BDF               	andlw	-33
  6812   002D12  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6813   002D14  6FDA               	movwf	218,b	;volatile
  6814   002D16                     
  6815                           ; BSR set to: 14
  6816                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6817   002D16  89DA               	bsf	218,4,b	;volatile
  6818   002D18                     
  6819                           ; BSR set to: 14
  6820                           ;i2c.c: 61:   return tmp;
  6821   002D18  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6822   002D1A                     
  6823                           ; BSR set to: 14
  6824   002D1A  0012               	return		;funcret
  6825   002D1C                     __end_of_I2C_2_Master_Read:
  6826                           	callstack 0
  6827                           
  6828 ;; *************** function _I2C_2_Master_Idle *****************
  6829 ;; Defined at:
  6830 ;;		line 22 in file "i2c.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;Total ram usage:        1 bytes
  6849 ;; Hardware stack levels used: 1
  6850 ;; Hardware stack levels required when called: 1
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_I2C_2_Master_Start
  6855 ;;		_I2C_2_Master_RepStart
  6856 ;;		_I2C_2_Master_Stop
  6857 ;;		_I2C_2_Master_Write
  6858 ;;		_I2C_2_Master_Read
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text41
  6863   002DDC                     __ptext41:
  6864                           	callstack 0
  6865   002DDC                     _I2C_2_Master_Idle:
  6866                           	callstack 26
  6867   002DDC                     l310:
  6868   002DDC  010E               	movlb	14	; () banked
  6869   002DDE  B5D8               	btfsc	216,2,b	;volatile
  6870   002DE0  EFF4  F016         	goto	u1971
  6871   002DE4  EFF6  F016         	goto	u1970
  6872   002DE8                     u1971:
  6873   002DE8  EFEE  F016         	goto	l310
  6874   002DEC                     u1970:
  6875   002DEC                     
  6876                           ; BSR set to: 14
  6877   002DEC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6878   002DF0  0E1F               	movlw	31
  6879   002DF2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6880   002DF4  A4D8               	btfss	status,2,c
  6881   002DF6  EFFF  F016         	goto	u1981
  6882   002DFA  EF01  F017         	goto	u1980
  6883   002DFE                     u1981:
  6884   002DFE  EFEE  F016         	goto	l310
  6885   002E02                     u1980:
  6886   002E02                     
  6887                           ; BSR set to: 14
  6888   002E02  0012               	return		;funcret
  6889   002E04                     __end_of_I2C_2_Master_Idle:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___lldiv *****************
  6893 ;; Defined at:
  6894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  dividend        4    0[COMRAM] unsigned long 
  6897 ;;  divisor         4    4[COMRAM] unsigned long 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  quotient        4    8[COMRAM] unsigned long 
  6900 ;;  counter         1   12[COMRAM] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  4    0[COMRAM] unsigned long 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;Total ram usage:       13 bytes
  6915 ;; Hardware stack levels used: 1
  6916 ;; Hardware stack levels required when called: 1
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_average_RGBC
  6921 ;;		_convert_HSV
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text42
  6926   0025BE                     __ptext42:
  6927                           	callstack 0
  6928   0025BE                     ___lldiv:
  6929                           	callstack 28
  6930   0025BE  0E00               	movlw	0
  6931   0025C0  6E09               	movwf	___lldiv@quotient^0,c
  6932   0025C2  0E00               	movlw	0
  6933   0025C4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6934   0025C6  0E00               	movlw	0
  6935   0025C8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6936   0025CA  0E00               	movlw	0
  6937   0025CC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6938   0025CE  5005               	movf	___lldiv@divisor^0,w,c
  6939   0025D0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6940   0025D2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6941   0025D4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6942   0025D6  B4D8               	btfsc	status,2,c
  6943   0025D8  EFF0  F012         	goto	u2651
  6944   0025DC  EFF2  F012         	goto	u2650
  6945   0025E0                     u2651:
  6946   0025E0  EF28  F013         	goto	l772
  6947   0025E4                     u2650:
  6948   0025E4  0E01               	movlw	1
  6949   0025E6  6E0D               	movwf	___lldiv@counter^0,c
  6950   0025E8  EFFC  F012         	goto	l3588
  6951   0025EC                     l3586:
  6952   0025EC  90D8               	bcf	status,0,c
  6953   0025EE  3605               	rlcf	___lldiv@divisor^0,f,c
  6954   0025F0  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6955   0025F2  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6956   0025F4  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6957   0025F6  2A0D               	incf	___lldiv@counter^0,f,c
  6958   0025F8                     l3588:
  6959   0025F8  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6960   0025FA  EF01  F013         	goto	u2661
  6961   0025FE  EF03  F013         	goto	u2660
  6962   002602                     u2661:
  6963   002602  EFF6  F012         	goto	l3586
  6964   002606                     u2660:
  6965   002606                     l3590:
  6966   002606  90D8               	bcf	status,0,c
  6967   002608  3609               	rlcf	___lldiv@quotient^0,f,c
  6968   00260A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6969   00260C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6970   00260E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6971   002610  5005               	movf	___lldiv@divisor^0,w,c
  6972   002612  5C01               	subwf	___lldiv@dividend^0,w,c
  6973   002614  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6974   002616  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6975   002618  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6976   00261A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6977   00261C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6978   00261E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6979   002620  A0D8               	btfss	status,0,c
  6980   002622  EF15  F013         	goto	u2671
  6981   002626  EF17  F013         	goto	u2670
  6982   00262A                     u2671:
  6983   00262A  EF20  F013         	goto	l3598
  6984   00262E                     u2670:
  6985   00262E  5005               	movf	___lldiv@divisor^0,w,c
  6986   002630  5E01               	subwf	___lldiv@dividend^0,f,c
  6987   002632  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6988   002634  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6989   002636  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6990   002638  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6991   00263A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6992   00263C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6993   00263E  8009               	bsf	___lldiv@quotient^0,0,c
  6994   002640                     l3598:
  6995   002640  90D8               	bcf	status,0,c
  6996   002642  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6997   002644  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6998   002646  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6999   002648  3205               	rrcf	___lldiv@divisor^0,f,c
  7000   00264A  2E0D               	decfsz	___lldiv@counter^0,f,c
  7001   00264C  EF03  F013         	goto	l3590
  7002   002650                     l772:
  7003   002650  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7004   002654  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7005   002658  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7006   00265C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7007   002660  0012               	return		;funcret
  7008   002662                     __end_of___lldiv:
  7009                           	callstack 0
  7010                           
  7011 ;; *************** function _Timer0_init *****************
  7012 ;; Defined at:
  7013 ;;		line 7 in file "timers.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 3
  7034 ;; This function calls:
  7035 ;;		_reset_timer
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text43
  7042   002E04                     __ptext43:
  7043                           	callstack 0
  7044   002E04                     _Timer0_init:
  7045                           	callstack 27
  7046   002E04                     
  7047                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  7048   002E04  50D6               	movf	214,w,c	;volatile
  7049   002E06  0B1F               	andlw	-225
  7050   002E08  0940               	iorlw	64
  7051   002E0A  6ED6               	movwf	214,c	;volatile
  7052   002E0C                     
  7053                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  7054   002E0C  88D6               	bsf	214,4,c	;volatile
  7055   002E0E                     
  7056                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  7057   002E0E  88D5               	bsf	213,4,c	;volatile
  7058                           
  7059                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  7060   002E10  50D6               	movf	214,w,c	;volatile
  7061   002E12  0BF0               	andlw	-16
  7062   002E14  090E               	iorlw	14
  7063   002E16  6ED6               	movwf	214,c	;volatile
  7064   002E18                     
  7065                           ;timers.c: 18:     reset_timer();
  7066   002E18  EC50  F017         	call	_reset_timer	;wreg free
  7067   002E1C                     
  7068                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  7069   002E1C  8ED5               	bsf	213,7,c	;volatile
  7070   002E1E                     
  7071                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  7072   002E1E  010E               	movlb	14	; () banked
  7073   002E20  8B29               	bsf	41,5,b	;volatile
  7074   002E22                     
  7075                           ; BSR set to: 14
  7076                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  7077   002E22  8CF2               	bsf	242,6,c	;volatile
  7078   002E24                     
  7079                           ; BSR set to: 14
  7080                           ;timers.c: 23:     INTCONbits.GIE = 1;
  7081   002E24  8EF2               	bsf	242,7,c	;volatile
  7082   002E26                     
  7083                           ; BSR set to: 14
  7084   002E26  0012               	return		;funcret
  7085   002E28                     __end_of_Timer0_init:
  7086                           	callstack 0
  7087                           
  7088 ;; *************** function _reset_timer *****************
  7089 ;; Defined at:
  7090 ;;		line 53 in file "timers.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;		None
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      void 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;Total ram usage:        0 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; Hardware stack levels required when called: 2
  7111 ;; This function calls:
  7112 ;;		_write_timer
  7113 ;; This function is called by:
  7114 ;;		_Timer0_init
  7115 ;;		_forward_navigation
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text44
  7120   002EA0                     __ptext44:
  7121                           	callstack 0
  7122   002EA0                     _reset_timer:
  7123                           	callstack 27
  7124   002EA0                     
  7125                           ;timers.c: 55:     write_timer(0, 0);
  7126   002EA0  0E00               	movlw	0
  7127   002EA2  6E01               	movwf	write_timer@tL^0,c
  7128   002EA4  0E00               	movlw	0
  7129   002EA6  EC56  F017         	call	_write_timer
  7130   002EAA  0012               	return		;funcret
  7131   002EAC                     __end_of_reset_timer:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _write_timer *****************
  7135 ;; Defined at:
  7136 ;;		line 41 in file "timers.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  tH              1    wreg     unsigned char 
  7139 ;;  tL              1    0[COMRAM] unsigned char 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  tH              1    1[COMRAM] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;Total ram usage:        2 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_reset_timer
  7162 ;;		_return_to_sender
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text45
  7167   002EAC                     __ptext45:
  7168                           	callstack 0
  7169   002EAC                     _write_timer:
  7170                           	callstack 27
  7171                           
  7172                           ;incstack = 0
  7173                           ;write_timer@tH stored from wreg
  7174   002EAC  6E02               	movwf	write_timer@tH^0,c
  7175   002EAE                     
  7176                           ;timers.c: 41: void write_timer(unsigned char tH, unsigned char tL);timers.c: 42: {;time
      +                          rs.c: 46:     TMR0H = tH;
  7177   002EAE  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  7178   002EB2                     
  7179                           ;timers.c: 47:     TMR0L = tL;
  7180   002EB2  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  7181   002EB6  0012               	return		;funcret
  7182   002EB8                     __end_of_write_timer:
  7183                           	callstack 0
  7184                           
  7185 ;; *************** function _ISR *****************
  7186 ;; Defined at:
  7187 ;;		line 181 in file "timers.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, status,2
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;Total ram usage:        0 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		Interrupt level 2
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	intcode
  7215   000008                     __pintcode:
  7216                           	callstack 0
  7217   000008                     _ISR:
  7218                           	callstack 24
  7219                           
  7220                           ;incstack = 0
  7221   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7222   00000A                     
  7223                           ;timers.c: 183:     if (PIR0bits.TMR0IF) {
  7224   00000A  010E               	movlb	14	; () banked
  7225   00000C  AB33               	btfss	51,5,b	;volatile
  7226   00000E  EF0B  F000         	goto	i2u193_41
  7227   000012  EF0D  F000         	goto	i2u193_40
  7228   000016                     i2u193_41:
  7229   000016  EF1C  F000         	goto	i2l715
  7230   00001A                     i2u193_40:
  7231   00001A                     
  7232                           ; BSR set to: 14
  7233                           ;timers.c: 184:         if (returning) {
  7234   00001A  505D               	movf	_returning^0,w,c
  7235   00001C  B4D8               	btfsc	status,2,c
  7236   00001E  EF13  F000         	goto	i2u194_41
  7237   000022  EF15  F000         	goto	i2u194_40
  7238   000026                     i2u194_41:
  7239   000026  EF19  F000         	goto	i2l2932
  7240   00002A                     i2u194_40:
  7241   00002A                     
  7242                           ; BSR set to: 14
  7243                           ;timers.c: 185:             return_flag = 1;
  7244   00002A  0E01               	movlw	1
  7245   00002C  6E5C               	movwf	_return_flag^0,c
  7246                           
  7247                           ;timers.c: 186:         } else {
  7248   00002E  EF1B  F000         	goto	i2l2934
  7249   000032                     i2l2932:
  7250                           
  7251                           ; BSR set to: 14
  7252                           ;timers.c: 187:             lost_flag = 1;
  7253   000032  0E01               	movlw	1
  7254   000034  6E5B               	movwf	_lost_flag^0,c
  7255   000036                     i2l2934:
  7256                           
  7257                           ; BSR set to: 14
  7258                           ;timers.c: 189:         PIR0bits.TMR0IF = 0;
  7259   000036  9B33               	bcf	51,5,b	;volatile
  7260   000038                     i2l715:
  7261                           
  7262                           ; BSR set to: 14
  7263   000038  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7264   00003A  0011               	retfie		f
  7265   00003C                     __end_of_ISR:
  7266                           	callstack 0
  7267                           
  7268                           	psect	rparam
  7269   000000                     
  7270                           	psect	temp
  7271   00005E                     btemp:
  7272                           	callstack 0
  7273   00005E                     	ds	1
  7274   000000                     int$flags	set	btemp
  7275   000000                     wtemp8	set	btemp+1
  7276   000000                     ttemp5	set	btemp+1
  7277   000000                     ttemp6	set	btemp+4
  7278   000000                     ttemp7	set	btemp+8
  7279                           
  7280                           	psect	idloc
  7281                           
  7282                           ;Config register IDLOC0 @ 0x200000
  7283                           ;	unspecified, using default values
  7284   200000                     	org	2097152
  7285   200000  FFFF               	dw	65535
  7286                           
  7287                           ;Config register IDLOC1 @ 0x200002
  7288                           ;	unspecified, using default values
  7289   200002                     	org	2097154
  7290   200002  FFFF               	dw	65535
  7291                           
  7292                           ;Config register IDLOC2 @ 0x200004
  7293                           ;	unspecified, using default values
  7294   200004                     	org	2097156
  7295   200004  FFFF               	dw	65535
  7296                           
  7297                           ;Config register IDLOC3 @ 0x200006
  7298                           ;	unspecified, using default values
  7299   200006                     	org	2097158
  7300   200006  FFFF               	dw	65535
  7301                           
  7302                           ;Config register IDLOC4 @ 0x200008
  7303                           ;	unspecified, using default values
  7304   200008                     	org	2097160
  7305   200008  FFFF               	dw	65535
  7306                           
  7307                           ;Config register IDLOC5 @ 0x20000A
  7308                           ;	unspecified, using default values
  7309   20000A                     	org	2097162
  7310   20000A  FFFF               	dw	65535
  7311                           
  7312                           ;Config register IDLOC6 @ 0x20000C
  7313                           ;	unspecified, using default values
  7314   20000C                     	org	2097164
  7315   20000C  FFFF               	dw	65535
  7316                           
  7317                           ;Config register IDLOC7 @ 0x20000E
  7318                           ;	unspecified, using default values
  7319   20000E                     	org	2097166
  7320   20000E  FFFF               	dw	65535
  7321                           
  7322                           	psect	config
  7323                           
  7324                           ;Config register CONFIG1L @ 0x300000
  7325                           ;	External Oscillator mode Selection bits
  7326                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7327                           ;	Power-up default value for COSC bits
  7328                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7329   300000                     	org	3145728
  7330   300000  AA                 	db	170
  7331                           
  7332                           ;Config register CONFIG1H @ 0x300001
  7333                           ;	unspecified, using default values
  7334                           ;	Clock Out Enable bit
  7335                           ;	CLKOUTEN = 0x1, unprogrammed default
  7336                           ;	Clock Switch Enable bit
  7337                           ;	CSWEN = 0x1, unprogrammed default
  7338                           ;	Fail-Safe Clock Monitor Enable bit
  7339                           ;	FCMEN = 0x1, unprogrammed default
  7340   300001                     	org	3145729
  7341   300001  FF                 	db	255
  7342                           
  7343                           ;Config register CONFIG2L @ 0x300002
  7344                           ;	unspecified, using default values
  7345                           ;	Master Clear Enable bit
  7346                           ;	MCLRE = 0x1, unprogrammed default
  7347                           ;	Power-up Timer Enable bit
  7348                           ;	PWRTE = 0x1, unprogrammed default
  7349                           ;	Low-power BOR enable bit
  7350                           ;	LPBOREN = 0x1, unprogrammed default
  7351                           ;	Brown-out Reset Enable bits
  7352                           ;	BOREN = 0x3, unprogrammed default
  7353   300002                     	org	3145730
  7354   300002  FF                 	db	255
  7355                           
  7356                           ;Config register CONFIG2H @ 0x300003
  7357                           ;	unspecified, using default values
  7358                           ;	Brown Out Reset Voltage selection bits
  7359                           ;	BORV = 0x3, unprogrammed default
  7360                           ;	ZCD Disable bit
  7361                           ;	ZCD = 0x1, unprogrammed default
  7362                           ;	PPSLOCK bit One-Way Set Enable bit
  7363                           ;	PPS1WAY = 0x1, unprogrammed default
  7364                           ;	Stack Full/Underflow Reset Enable bit
  7365                           ;	STVREN = 0x1, unprogrammed default
  7366                           ;	Debugger Enable bit
  7367                           ;	DEBUG = 0x1, unprogrammed default
  7368                           ;	Extended Instruction Set Enable bit
  7369                           ;	XINST = 0x1, unprogrammed default
  7370   300003                     	org	3145731
  7371   300003  FF                 	db	255
  7372                           
  7373                           ;Config register CONFIG3L @ 0x300004
  7374                           ;	WDT Period Select bits
  7375                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7376                           ;	WDT operating mode
  7377                           ;	WDTE = OFF, WDT Disabled
  7378   300004                     	org	3145732
  7379   300004  9F                 	db	159
  7380                           
  7381                           ;Config register CONFIG3H @ 0x300005
  7382                           ;	unspecified, using default values
  7383                           ;	WDT Window Select bits
  7384                           ;	WDTCWS = 0x7, unprogrammed default
  7385                           ;	WDT input clock selector
  7386                           ;	WDTCCS = 0x7, unprogrammed default
  7387   300005                     	org	3145733
  7388   300005  FF                 	db	255
  7389                           
  7390                           ;Config register CONFIG4L @ 0x300006
  7391                           ;	unspecified, using default values
  7392                           ;	Write Protection Block 0
  7393                           ;	WRT0 = 0x1, unprogrammed default
  7394                           ;	Write Protection Block 1
  7395                           ;	WRT1 = 0x1, unprogrammed default
  7396                           ;	Write Protection Block 2
  7397                           ;	WRT2 = 0x1, unprogrammed default
  7398                           ;	Write Protection Block 3
  7399                           ;	WRT3 = 0x1, unprogrammed default
  7400                           ;	Write Protection Block 3
  7401                           ;	WRT4 = 0x1, unprogrammed default
  7402                           ;	Write Protection Block 3
  7403                           ;	WRT5 = 0x1, unprogrammed default
  7404                           ;	Write Protection Block 3
  7405                           ;	WRT6 = 0x1, unprogrammed default
  7406                           ;	Write Protection Block 3
  7407                           ;	WRT7 = 0x1, unprogrammed default
  7408   300006                     	org	3145734
  7409   300006  FF                 	db	255
  7410                           
  7411                           ;Config register CONFIG4H @ 0x300007
  7412                           ;	unspecified, using default values
  7413                           ;	Configuration Register Write Protection bit
  7414                           ;	WRTC = 0x1, unprogrammed default
  7415                           ;	Boot Block Write Protection bit
  7416                           ;	WRTB = 0x1, unprogrammed default
  7417                           ;	Data EEPROM Write Protection bit
  7418                           ;	WRTD = 0x1, unprogrammed default
  7419                           ;	Scanner Enable bit
  7420                           ;	SCANE = 0x1, unprogrammed default
  7421                           ;	Low Voltage Programming Enable bit
  7422                           ;	LVP = 0x1, unprogrammed default
  7423   300007                     	org	3145735
  7424   300007  FF                 	db	255
  7425                           
  7426                           ;Config register CONFIG5L @ 0x300008
  7427                           ;	unspecified, using default values
  7428                           ;	UserNVM Program Memory Code Protection bit
  7429                           ;	CP = 0x1, unprogrammed default
  7430                           ;	DataNVM Memory Code Protection bit
  7431                           ;	CPD = 0x1, unprogrammed default
  7432   300008                     	org	3145736
  7433   300008  FF                 	db	255
  7434                           
  7435                           ;Config register CONFIG5H @ 0x300009
  7436                           ;	unspecified, using default values
  7437   300009                     	org	3145737
  7438   300009  FF                 	db	255
  7439                           
  7440                           ;Config register CONFIG6L @ 0x30000A
  7441                           ;	unspecified, using default values
  7442                           ;	Table Read Protection Block 0
  7443                           ;	EBTR0 = 0x1, unprogrammed default
  7444                           ;	Table Read Protection Block 1
  7445                           ;	EBTR1 = 0x1, unprogrammed default
  7446                           ;	Table Read Protection Block 2
  7447                           ;	EBTR2 = 0x1, unprogrammed default
  7448                           ;	Table Read Protection Block 3
  7449                           ;	EBTR3 = 0x1, unprogrammed default
  7450                           ;	Table Read Protection Block 4
  7451                           ;	EBTR4 = 0x1, unprogrammed default
  7452                           ;	Table Read Protection Block 5
  7453                           ;	EBTR5 = 0x1, unprogrammed default
  7454                           ;	Table Read Protection Block 6
  7455                           ;	EBTR6 = 0x1, unprogrammed default
  7456                           ;	Table Read Protection Block 7
  7457                           ;	EBTR7 = 0x1, unprogrammed default
  7458   30000A                     	org	3145738
  7459   30000A  FF                 	db	255
  7460                           
  7461                           ;Config register CONFIG6H @ 0x30000B
  7462                           ;	unspecified, using default values
  7463                           ;	Boot Block Table Read Protection bit
  7464                           ;	EBTRB = 0x1, unprogrammed default
  7465   30000B                     	org	3145739
  7466   30000B  FF                 	db	255
  7467                           tosu	equ	0xFFF
  7468                           tosh	equ	0xFFE
  7469                           tosl	equ	0xFFD
  7470                           stkptr	equ	0xFFC
  7471                           pclatu	equ	0xFFB
  7472                           pclath	equ	0xFFA
  7473                           pcl	equ	0xFF9
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           indf0	equ	0xFEF
  7481                           postinc0	equ	0xFEE
  7482                           postdec0	equ	0xFED
  7483                           preinc0	equ	0xFEC
  7484                           plusw0	equ	0xFEB
  7485                           fsr0h	equ	0xFEA
  7486                           fsr0l	equ	0xFE9
  7487                           wreg	equ	0xFE8
  7488                           indf1	equ	0xFE7
  7489                           postinc1	equ	0xFE6
  7490                           postdec1	equ	0xFE5
  7491                           preinc1	equ	0xFE4
  7492                           plusw1	equ	0xFE3
  7493                           fsr1h	equ	0xFE2
  7494                           fsr1l	equ	0xFE1
  7495                           bsr	equ	0xFE0
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           postdec2	equ	0xFDD
  7499                           preinc2	equ	0xFDC
  7500                           plusw2	equ	0xFDB
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      93
    BANK0           160     32      92
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    average_RGBC@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    convert_HSV@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    convert_HSV@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    max_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    min_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1165DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1165DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2760$buffer	PTR unsigned char  size(2) Largest target is 0

    S2760$source	PTR const unsigned char  size(2) Largest target is 0

    scale_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _scale_RGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _convert_HSV->___lldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _average_RGBC->___lldiv
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   27880
                                             81 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                       _average_RGBC
                  _buggy_lights_init
                   _color_click_init
                        _convert_HSV
                    _initDCmotorsPWM
                         _initUSART4
                          _scale_RGB
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5843
                                             54 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5821
                                             54 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5182
                                             28 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4357
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    4005
                                             10 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scale_RGB                                            3     2      1    6039
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convert_HSV                                         52    50      2    5869
                                             13 COMRAM    52    50      2
                            ___lldiv
                             ___lmul
                            _max_RGB
                            _min_RGB
 ---------------------------------------------------------------------------------
 (2) _min_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _max_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _average_RGBC                                        20    19      1    3087
                                             13 COMRAM    20    19      1
                            ___lldiv
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (2) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1834
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _average_RGBC
     ___lldiv
     _getRGBCval
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _convert_HSV
     ___lldiv
     ___lmul
     _max_RGB
     _min_RGB
   _initDCmotorsPWM
   _initUSART4
   _scale_RGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sendHSVvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F5      60        0.0%
DATA                 0      0      F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 17:15:21 2024

                 _turn180Delay 00AF                 _color_read_Red 2B02                _color_read_Blue 2BF2  
              _trail_timer_low 0114                             l42 238E                             l27 2DB0  
                           l70 2E46                             l73 2B50                             l82 2BF0  
                           l91 1E12                             l67 2D82                             l76 2BA0  
                           l85 2B00                             l79 2C40                   ___awdiv@sign 0006  
             _trail_timer_high 0128               _color_read_Clear 2BA2               _color_read_Green 2B52  
                          l101 27AE                            l103 27E8                            l111 22C6  
                          l106 2732                            l108 276C                            l212 26F0  
                          l310 2DDC                            l127 14E4                            l313 2E02  
                          l322 2EC0                            l307 2DDA                            l316 2ECA  
                          l325 2E9E                            l319 2ED4                            l328 2D1A  
                          l455 2E64                            l464 2E68                            l473 29F6  
                          l467 2E7C                            l484 2A54                            l487 2C8C  
                          l673 2E26                            l682 2EAA                            l772 2650  
                          l756 2920                            l757 2930                            l679 2EB6  
                          l779 2660                            l976 2452                            l989 25BC  
                          _ISR 0008         ??_toggle_tricolour_LED 0001                            _abs 2D1C  
                 ___awmod@sign 0006                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ?_convert_HSV 000E                   ___flmul@sign 001B  
                 ___flmul@temp 0026                   ___flmul@prod 0022                 min_RGB@min_val 0005  
                  _squareDelay 00AB                           ?_ISR 0001                   ___fltol@exp1 0031  
                         l1042 21F0                           ?_abs 0007                           l1400 1E6A  
                         l3000 23F2                           l3010 2426                           l3002 2400  
                         l1403 1FC6                           l1243 285C                           l3012 242C  
                         l3004 2406                           l1236 2854                           l3100 2474  
                         l1253 2994                           l1414 1F5E                           l3006 241C  
                         l3014 2432                           l3030 252C                           l3022 250E  
                         l1246 298C                           l3110 2D1C                           l3102 247E  
                         l1407 1F02                           l1503 250C                           l1423 2CD8  
                         l3120 2E9A                           l3016 2442                           l3008 2424  
                         l3040 2564                           l3032 253A                           l3024 2512  
                         l3112 2D2A                           l3104 249A                           l3130 2CDC  
                         l3114 2EC2                           l3122 2EB8                           l3018 244A  
                         l3042 2572                           l3050 259C                           l3034 2542  
                         l3026 2520                           l1514 2EDC                           l3106 24CC  
                         l1363 190E                           l3140 2D18                           l3132 2CE0  
                         l3116 2EC6                           l3124 2EBC                           l4100 26E4  
                         l3052 25AC                           l3044 2588                           l3036 2554  
                         l3028 2528                           l3060 27F2                           l3134 2CE8  
                         l3126 2ECC                           l3118 2E96                           l4102 26EE  
                         l1366 17A0                           l3054 25B4                           l3046 2590  
                         l3038 255C                           l3070 2828                           l3062 2804  
                         l3302 1BA4                           l3310 1BE8                           l3230 1910  
                         l1359 15AA                           l3136 2CF0                           l3128 2ED0  
                         l1376 18D0                           l1368 1818                           l3048 2596  
                         l3072 283E                           l3064 280C                           l3080 2932  
                         l3312 1C0A                           l3304 1BD4                           l1464 1AB2  
                         l3240 1958                           l3232 1918                           l3400 2A5A  
                         l1369 1806                           l1465 1C1A                           l3138 2D16  
                         l3330 2B52                           l3410 2DC2                           l4130 2E54  
                         l3074 2846                           l3066 2814                           l3058 27EA  
                         l3090 2978                           l3082 2944                           l3314 1C12  
                         l3306 1BDC                           l3250 19C4                           l3242 1962  
                         l3234 193E                           l3402 2A68                           l1491 2D4E  
                         l1483 2AA2                           l4140 2E0C                           l3332 2B98  
                         l3324 2B02                           l3420 2AAC                           l3412 2DC4  
                         l4132 2E5E                           l3076 2848                           l3068 2822  
                         l3092 2980                           l3084 294C                           l3260 1A3E  
                         l3252 19DC                           l3244 1982                           l3236 1946  
                         l1484 2AAA                           l3404 2A82                           l4150 2E22  
                         l4142 2E0E                           l3342 2BA2                           l3326 2B48  
                         l3414 2DC6                           l3406 2DB2                           l3430 27E0  
                         l3422 276E                           l4134 2E60                           l4126 2E48  
                         l3078 284E                           l3094 2986                           l3086 2954  
                         l3270 1A84                           l3262 1A4E                           l3254 1A0C  
                         l3246 19A2                           l3238 1954                           l4230 1FC8  
                         l4152 2E24                           l4144 2E18                           l3600 264A  
                         l3336 2BF2                           l3344 2BE8                           l3416 2DC8  
                         l3408 2DBC                           l3424 277C                           l3440 2752  
                         l4080 2662                           l4136 2E62                           l4128 2E52  
                         l3088 2962                           l1488 2D36                           l3096 2454  
                         l3280 1AF6                           l3272 1A9E                           l3264 1A5E  
                         l3256 1A28                           l3248 19BA                           l4160 2C82  
                         l4240 203A                           l4232 200E                           l4146 2E1C  
                         l4138 2E04                           l3338 2C38                           l3418 2E2A  
                         l3426 279C                           l3442 2764                           l3434 26F2  
                         l4090 26CA                           l4082 2672                           l3610 1512  
                         l3602 14E6                           l3450 29C0                           l3098 2464  
                         l3290 1B4C                           l3282 1B04                           l3266 1A6E  
                         l3274 1AA0                           l3258 1A2C                           l4154 29F8  
                         l4250 2062                           l4242 2042                           l4234 2016  
                         l4148 2E1E                           l3428 27CE                           l3436 2700  
                         l4092 26CC                           l4084 2698                           l3620 154E  
                         l3612 1522                           l3604 14F2                           l3452 29C4  
                         l3292 1B5E                           l3284 1B08                           l3268 1A7C  
                         l3276 1ABE                           l3460 2CAA                           l4156 2A4A  
                         l4260 206E                           l4252 2066                           l4244 204A  
                         l4236 201E                           l3438 2720                           l4094 26D6  
                         l4086 269C                           l3702 1828                           l3710 1870  
                         l3630 1584                           l3622 1554                           l3614 1532  
                         l3606 1500                           l3390 2E68                           l3446 2996  
                         l3294 1B72                           l3286 1B2C                           l3278 1ADE  
                         l3462 2CC2                           l3454 2C8E                           l4158 2C42  
                         l4270 20A0                           l4262 2070                           l4254 2068  
                         l4246 205A                           l4238 2032                           l4096 26D8  
                         l4088 26C0                           l3720 18E4                           l3712 188A  
                         l3704 1834                           l3632 1594                           l3624 1562  
                         l3616 1538                           l3608 1502                           l3800 1F34  
                         l3392 2E78                           l3448 299A                           l3296 1B8C  
                         l3288 1B48                           l3464 2CD0                           l3456 2C9A  
                         l4280 20CC                           l4272 20A8                           l4264 2072  
                         l4256 206A                           l4248 205E                           l3394 2EAE  
                         l3570 28C8                           l4098 26E2                           l3722 18F2  
                         l3714 189E                           l3706 1842                           l3650 1616  
                         l3642 15DE                           l3634 159A                           l3626 1564  
                         l3618 1548                           l3810 1F72                           l3802 1F40  
                         l4530 1BC6                           l3298 1B8E                           l3458 2CA2  
                         l4274 20B0                           l4266 2076                           l4258 206C  
                         l3396 2EB2                           l3580 25BE                           l3572 28D8  
                         l3900 0F48                           l3724 18F4                           l3716 18B8  
                         l3708 186C                           l3660 1660                           l3652 162E  
                         l3644 15EA                           l3636 15BA                           l3628 1574  
                         l3740 2140                           l3732 20EC                           l3812 1F96  
                         l3804 1F4E                           l4276 20BC                           l4268 209C  
                         l3590 2606                           l3582 25CE                           l3822 2D84  
                         l3830 2D5E                           l3574 28E6                           l3910 1008  
                         l3902 0F78                           l3718 18D4                           l3726 18FA  
                         l3670 16B6                           l3662 1670                           l3654 163A  
                         l3646 15F4                           l3638 15CA                           l3742 2142  
                         l3734 2102                           l3814 1FA6                           l3806 1F6C  
                         l3398 2A56                           l4278 20C4                           l3568 2EA0  
                         l3592 2610                           l3584 25E4                           l3840 1C68  
                         l3832 2D6E                           l3576 28F6                           l3920 10BC  
                         l3912 103C                           l3904 0F84                           l3728 18FE  
                         l3680 175A                           l3672 16D2                           l3664 167C  
                         l3656 1646                           l3648 160A                           l3744 2152  
                         l3816 1FB4                           l3808 1F6E                           l3824 22C8  
                         l3594 262E                           l3586 25EC                           l3842 1C86  
                         l3850 1CEE                           l3834 2D78                           l3826 2D50  
                         l3578 2900                           l3930 1172                           l3922 10C8  
                         l3914 106C                           l3906 0F90                           l3690 17B0  
                         l3682 1768                           l3674 16DE                           l3666 168C  
                         l3658 1654                           l3770 21D0                           l3754 217C  
                         l3746 2156                           l3738 2116                           l3818 1FB6  
                         l3596 263E                           l3588 25F8                           l3860 1E00  
                         l3852 1CFE                           l3844 1CA8                           l3836 1C1C  
                         l3828 2D54                           l3940 1208                           l3924 10D2  
                         l3932 117E                           l3908 0FC4                           l3916 1074  
                         l3692 17BE                           l3684 1786                           l3676 16FA  
                         l3668 16A6                           l3772 21E0                           l3764 21A4  
                         l3756 2186                           l3748 2164                           l3780 1E34  
                         l2980 2394                           l3598 2640                           l2974 2DDC  
                         l3854 1DCE                           l3846 1CCA                           l3838 1C60  
                         l3950 1294                           l3942 1238                           l3934 118A  
                         l3926 110E                           l3918 1096                           l3694 17C2  
                         l3686 1790                           l3678 1724                           l3766 21B0  
                         l3758 2190                           l3790 1EAC                           l3782 1E7A  
                         l2990 23C4                           l2982 23A2                           l2976 2DEC  
                         l3856 1DDC                           l3848 1CEC                           l3952 12A6  
                         l3960 1352                           l3936 1194                           l3928 1142  
                         l3944 1240                           l3880 0E42                           l3696 17D0  
                         l3688 179E                           l3768 21C0                           l3792 1EB8  
                         l3784 1E90                           l3776 1E16                           l2992 23C8  
                         l2984 23AA                           l3858 1DEE                           l3970 1414  
                         l3962 135E                           l3954 12E2                           l3946 1262  
                         l3938 11D4                           l3890 0E9A                           l3882 0E52  
                         l3698 17FE                           l3794 1EEA                           l3778 1E26  
                         l3874 21F2                           l2994 23D0                           l2986 23AE  
                         l2978 2390                           l3980 147A                           l3964 1370  
                         l3956 1316                           l3948 1288                           l3892 0EC4  
                         l3972 141C                           l3884 0E5E                           l3876 0E1A  
                         l3796 1EEC                           l3788 1EA4                           l2996 23E2  
                         l2988 23BC                           l3982 14AA                           l3974 142E  
                         l3966 13B0                           l3958 1346                           l3894 0EC4  
                         l3886 0E70                           l3878 0E32                           l3798 1EF8  
                         l2998 23EA                           l3984 14B2                           l3976 143A  
                         l3968 13E4                           l3896 0ED4                           l3888 0E7C  
                         l3986 14C0                           l3978 1446                           l3898 0F14  
                         l3988 14D2                           STR_1 0E0F                           STR_2 0E14  
                         STR_5 0E01                           STR_6 0E04                           u2000 23BC  
                         u2001 23B8                           u2010 23E2                           u2011 23DE  
                         u2020 2400                           u2100 25AC                           u2021 23FC  
                         u2101 25A8                           u2030 241C                           u2110 2804  
                         u2031 2418                           u2111 2800                           u3000 1F5E  
                         u2040 2442                           u2120 2822                           u2200 24CC  
                         u3001 1F5A                           u2041 243E                           u2121 281E  
                         u2201 24C8                           u3010 1F6C                           u2050 2520  
                         u2130 283E                           u2210 2D2A                           u3011 1F68  
                         u2051 251C                           u2131 283A                           u2211 2D26  
                         u2220 2D04                           u3020 1FA6                           u2060 253A  
                         u2140 2944                           u3100 233C                           u2221 2CFC  
                         u3021 1FA2                           u2061 2536                           u2141 2940  
                         u3101 2334                           u3030 1FB4                           u2070 2554  
                         u2150 2962                           u3031 1FB0                           u2071 2550  
                         u2151 295E                           u2080 2572                           u2160 2978  
                         u2400 193E                           u3120 235A                           u3040 22DA  
                 _BAUD4CONbits 0EE9                           u2081 256E                           u2161 2974  
                         u2401 193A                           u3121 2352                           u3041 22D2  
                         u3210 0E70                           u2090 2588                           u2170 2464  
                         u2410 1982                           u3211 0E6C                           u2091 2584  
                         u2171 2460                           u2411 197E                           u3300 142E  
                         u3220 0E9A                           u2180 2474                           u2500 1ADE  
                         u2420 19A2                           u3140 237C                           u3060 22FA  
                         u3301 142A                           u3221 0E96                           u2181 2470  
                         u2501 1ADA                           u2421 199E                           u3141 2374  
                         u3061 22F2                           u2238 2D06                           u3230 0EC4  
                         u2190 249A                           u2510 1B5E                           u2430 19D8  
                         u3118 233E                           u3231 0EC0                           u2191 2496  
                         u2511 1B5A                           u2431 19D2                           u3160 1CFE  
                         u3240 1096                           u2600 29BC                           u2520 1B6E  
                         u2440 19DA                           u3080 231A                           u3161 1CFA  
                         u3241 1092                           u2521 1B6A                           u3081 2312  
                         u3250 10BC                           u2610 29E6                           u2530 1BA0  
                         u2450 1A3E                           u3138 235C                           u3058 22DC  
                         _T2PR 0FBC                           u3251 10B8                           u2531 1B9C  
                         u2451 1A3A                           u3260 1262                           u2700 1522  
                         u2540 2E78                           u2620 29F6                           u2460 1A4E  
                         u3261 125E                           u2701 151E                           u2541 2E74  
                         u2621 29F2                           u2461 1A4A                           u2630 28E6  
                         u3270 1288                           u2710 1562                           u2470 1A5E  
                         u2550 2AA2                           u3158 237E                           u3078 22FC  
                         u2631 28E2                           u3271 1284                           u2711 155E  
                         u2607 29B2                           u2471 1A5A                           u2551 2A9E  
                         u2640 2920                           u2560 279C                           u2800 17FE  
                         u2720 1574                           u2480 1A6E                           u2641 291C  
                         u2561 2798                           u2801 17FA                           u2721 1570  
                         u2617 29DC                           u2481 1A6A                           u2650 25E4  
                         u2570 27CE                           u2810 1814                           u2730 1584  
                         u2490 1AB2                           u3098 231C                           u2651 25E0  
                         u2571 27CA                           u2811 1810                           u2731 1580  
                         u2491 1AAE                           u2660 2606                           u2580 2720  
                         u2820 1828                           u2740 15BA                           u2900 2178  
                         u3700 208A                           u2661 2602                           u2581 271C  
                         u3285 1296                           u2821 1824                           u2741 15B6  
                         u2901 2174                           u3701 2082                           u2670 262E  
                         u2590 2752                           u2830 1842                           u2750 15CA  
                         u2910 21A0                           u2671 262A                           u2591 274E  
                         u3295 1360                           u2831 183E                           u2751 15C6  
                         u2911 219C                           u2840 188A                           u2760 1744  
                         u2680 1500                           u2920 21C0                           u2841 1886  
                         u2681 14FC                           u2921 21BC                           u1970 2DEC  
                         u2850 18B8                           u2770 179E                           u2690 1512  
                         u2930 21D0                           u1971 2DE8                           u2851 18B4  
                         u2771 179A                           u2691 150E                           u2931 21CC  
                         u1980 2E02                           u2860 18F2                           u2780 17BE  
                         u2940 1E26                           u1981 2DFE                           u2861 18EE  
                         u2781 17BA                           u2765 173A                           u2941 1E22  
                         u2790 17D0                           u2870 2102                           u2950 1E34  
                         u1990 23A2                           u3718 208C                           u2791 17CC  
                         u2871 20FE                           u2951 1E30                           u1991 239E  
                         u2880 2136                           u2960 1E90                           u2961 1E8C  
                         u2890 2164                           u2970 1EE6                           u2891 2160  
                         u2971 1EE2                           u2980 1F30                           u2885 212C  
                         u2981 1F2C                           u2990 1F4E                           u2991 1F4A  
                         u3857 20D6                           u3867 2D64                           abs@a 0007  
                         _dbuf 0060                           _main 1FC8                           _prec 0084  
                         _nout 0080                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005E             _sendRGBCvalSerial4 29F8                           prodh 0FF4  
                         prodl 0FF3                 ??_average_RGBC 000F                           start 003C  
           average_RGBC@temp_B 001A             average_RGBC@temp_C 001E             average_RGBC@temp_G 0016  
           average_RGBC@temp_R 0012         __end_of_color_read_Red 2B52                   ___param_bank 0000  
                        ??_ISR 0001            ?_sendRGBCvalSerial4 0037                          ??_abs 0009  
                write_timer@tH 0002                  write_timer@tL 0001                  ___fltol@sign1 0030  
                        ?_main 0001             _timer_high_pointer 0054                __end_of___awdiv 2454  
              __end_of___awmod 25BE                __end_of___flmul 1910                __end_of___fltol 21F2  
              __end_of___lldiv 2662                ___awdiv@divisor 0003                __end_of___lwdiv 285E  
              __end_of___lwmod 2996                          i2l715 0038                ___awdiv@counter 0005  
                 vfpfcnvrt@cnt 0011                   vfpfcnvrt@fmt 000C                          _TMR0H 0FD4  
                        _TMR0L 0FD3            ___lmul@multiplicand 0005        __end_of_sendCharSerial4 2E7E  
   __end_of_I2C_2_Master_Start 2ECC                    _write_timer 2EAC     __end_of_I2C_2_Master_Write 2EA0  
              __end_of_max_RGB 27EA                __end_of_min_RGB 276E                    _turningGear 00BB  
                        _flags 0086           ??_sendRGBCvalSerial4 0038                          _fputc 2454  
                        _width 0082                          _putch 2EDC              _turnRight135Delay 00B1  
                        tablat 0FF5                _turnLeft90Delay 00B7                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 2CDA        __end_of_color_read_Blue 2C42  
                average_RGBC@i 0011                  average_RGBC@p 000E          _I2C_2_Master_RepStart 2ECC  
              ?_color_read_Red 0005                __initialization 285E                   __end_of_main 20EC  
                       ??_main 0052                  __activetblptr 0003                         ?_fputc 0001  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0001                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RD6PPS 0E70  
                       _RE4PPS 0E76                         i2l2930 002A                         i2l2932 0032  
                       i2l2934 0036                         i2l2926 000A                         i2l2928 001A  
                       _RG6PPS 0E88                  vfpfcnvrt@done 0010       __end_of_color_click_init 2D84  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 1FC8  
             _turnLeft135Delay 00B3                  ??_Timer0_init 0003                   ?_reset_timer 0001  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001C                   convert_HSV@C 0040  
                 convert_HSV@M 003E                         ___lmul 28C8                   convert_HSV@m 001A  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___flmul 0017  
                    ??___fltol 002C                      ??___lldiv 0009                      ??___lwdiv 0005  
                    ??___lwmod 0005                         clear_0 28A4                         clear_1 28B0  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                      ??_max_RGB 0003                      ??_min_RGB 0003  
                       fputc@c 0001                   __pdataCOMRAM 0054              _timer_low_pointer 00A9  
         __end_of_average_RGBC 1E14                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 2AAC              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0028            convert_HSV@temp_631 0038            convert_HSV@temp_632 0028  
          convert_HSV@temp_633 002C            convert_HSV@temp_634 0030            convert_HSV@temp_635 0034  
          convert_HSV@temp_636 0020                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001              _buggy_lights_init 2D84                     __accesstop 0060  
      __end_of__initialization 28BE       __end_of_color_read_Clear 2BF2       __end_of_color_read_Green 2BA2  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
                   ___fltol@f1 0028               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2E7E            ??_buggy_lights_init 0001                  __end_of_fputc 250E  
                __end_of_putch 2EDE            __end_of_Timer0_init 2E28                        ??_fputc 0004  
    __end_of_buggy_lights_init 2DB2                        ??_putch 0001                     __pbssBANK0 0060  
                   __pbssBANK1 0100                     _getRGBCval 2AAC              _color_writetoaddr 2E28  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___lmul 0001  
               ___lmul@product 0009            ??_color_writetoaddr 0004                      ?___xxtofl 0001  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                   ?_write_timer 0001  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 2E48             _I2C_2_Master_Start 2EC2  
                   _initUSART4 2E48             _I2C_2_Master_Write 2E94                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 2E04  
      sendStringSerial4@string 0002                        ___awdiv 2390                        ___awmod 250E  
                      ___flmul 14E6                        ___fltol 20EC                        ___lldiv 25BE  
                convert_HSV@p1 000E            ?_I2C_2_Master_Start 0001                  convert_HSV@p2 000F  
                      ___lwdiv 27EA            ?_I2C_2_Master_Write 0001                        ___lwmod 2932  
                    ?_vfprintf 0019                   __psmallconst 0E00                        __pcinit 285E  
                      __ramtop 0E00                        __ptext0 1FC8                        __ptext1 22C8  
                      __ptext2 29F8                        __ptext3 2C42                        __ptext4 2C8E  
                      __ptext5 2A56                        __ptext6 1910                        __ptext7 2454  
                      __ptext8 2EDC                        __ptext9 2D1C                        _max_RGB 276E  
                      _min_RGB 26F2                      _T2CONbits 0FBD                     ??___xxtofl 0005  
             ___awmod@dividend 0001              __end_of_scale_RGB 22C8                      _T2HLTbits 0FBE  
                      _sprintf 2C8E           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 28BE              _sendHSVvalSerial4 2C42                    ?_getRGBCval 000C  
                      fputc@fp 0003              ?_color_click_init 0001             ?_sendHSVvalSerial4 0037  
              ___lldiv@divisor 0005             ??_color_click_init 0005                ___lldiv@counter 000D  
                 _average_RGBC 1C1C              __end_of_vfpfcnvrt 1C1C            ??_sendHSVvalSerial4 0038  
         convert_HSV@hue_scale 003C                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0014                     ??_vfprintf 001C                _initDCmotorsPWM 2662  
         convert_HSV@sat_scale 0018                  ___xxtofl@sign 0009                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
    __end_of_sendHSVvalSerial4 2C8E       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 001C                    _CCP1CONbits 0FAB              ?_color_read_Clear 0005  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
                   main@motorL 008D                     main@motorR 0096             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                 __end_of___lmul 2932                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0013                    vfpfcnvrt@fp 000B                  __pidataCOMRAM 2ED6  
    sendRGBCvalSerial4@col_val 0037       sendHSVvalSerial4@col_val 0037            color_read_Clear@tmp 000A  
          start_initialization 285E                  ??_convert_HSV 0010                    __end_of_ISR 003C  
                  __end_of_abs 2D50               _turnRight90Delay 00B5      sendRGBCvalSerial4@tempStr 0038  
     sendHSVvalSerial4@tempStr 0038            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 26F2  
                  vfprintf@fmt 001A                       ??___lmul 0009                    __pdataBANK0 00A7  
                   scale_RGB@p 0032                 max_RGB@max_val 0005                      ___flmul@a 0013  
                    ___flmul@b 000F                    __pbssCOMRAM 005A                  __pcstackBANK0 0087  
              convert_HSV@temp 0024                 _wall_threshold 00B9            __end_of_convert_HSV 14E6  
 __end_of_toggle_tricolour_LED 2390               ___lwdiv@dividend 0001                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___flmul 000F                       ?___fltol 0028                       ?___lldiv 0001  
                     ?___lwdiv 0001                       ?___lwmod 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                       ?_max_RGB 0001                       ?_min_RGB 0001  
                  __smallconst 0E00              _I2C_2_Master_Idle 2DDC              _I2C_2_Master_Init 2DB2  
            _I2C_2_Master_Read 2CDA              _I2C_2_Master_Stop 2EB8             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 0005                  _headbuttDelay 00AD       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 001D                      _scale_RGB 21F2                      _rampDelay 0058  
                 ??_getRGBCval 000D              _sendStringSerial4 2996            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                       _PIE0bits 0E29             ?_sendStringSerial4 0002  
                ??_reset_timer 0003                      _lost_flag 005B                       _PIR0bits 0E33  
                     i2u193_40 001A                       i2u193_41 0016                       i2u194_40 002A  
                     i2u194_41 0026                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                      _returning 005D                      _vfpfcnvrt 1910  
    __end_of_I2C_2_Master_Idle 2E04      __end_of_I2C_2_Master_Init 2DDC      __end_of_I2C_2_Master_Read 2D1C  
    __end_of_I2C_2_Master_Stop 2EC2    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 2B02  
   __end_of_sendRGBCvalSerial4 2A56              ??_color_read_Blue 0007                    _convert_HSV 0E1A  
              main@RGBC_colour 009F                     vfpfcnvrt@c 0018              ___lmul@multiplier 0001  
                    copy_data0 2872                      copy_data1 2892      __end_of_sendStringSerial4 29F8  
                   ?_scale_RGB 0032  __end_of_I2C_2_Master_RepStart 2ED6             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001B  
                     __Lrparam 0000                     vfprintf@fp 0019                   _sample_count 0059  
                   ?_vfpfcnvrt 000B            __end_of_reset_timer 2EAC                 convert_HSV@hue 001E  
               convert_HSV@sat 001C                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001F                     sprintf@ret 0028                       ___xxtofl 1E14  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6           _toggle_tricolour_LED 22C8  
              ___lwdiv@divisor 0003             __end_of_initUSART4 2E66                ___lwdiv@counter 0007  
                     __ptext10 2932                       __ptext11 27EA                       __ptext20 2E48  
                     __ptext12 250E                       __ptext21 2662                       __ptext13 2390  
                     __ptext30 1C1C                       __ptext22 0E1A                       __ptext14 2996  
                     __ptext31 2AAC                       __ptext23 26F2                       __ptext15 2E66  
                     __ptext40 2CDA                       __ptext32 2B02                       __ptext24 276E  
                     __ptext16 21F2                       __ptext41 2DDC                       __ptext33 2B52  
                     __ptext25 28C8                       __ptext17 1E14                       __ptext42 25BE  
                     __ptext34 2BA2                       __ptext26 2D50                       __ptext18 20EC  
                     __ptext43 2E04                       __ptext35 2BF2                       __ptext27 2E28  
                     __ptext19 14E6                       __ptext44 2EA0                       __ptext36 2E94  
                     __ptext28 2DB2                       __ptext45 2EAC                       __ptext37 2EB8  
                     __ptext29 2D84                       __ptext38 2EC2                       __ptext39 2ECC  
                  getRGBCval@p 000C                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 2A56                       max_RGB@p 0001                       min_RGB@p 0001  
                   _INTCONbits 0FF2          ?_toggle_tricolour_LED 0001                  ??_write_timer 0002  
                  ??_scale_RGB 0033                       intlevel2 0000                      sprintf@ap 002A  
                 _topGearRight 0056              _manoeuvre_pointer 00A7               ___lwmod@dividend 0001  
             ___lldiv@dividend 0001                 main@HSV_colour 0087                    _reset_timer 2EA0  
                  ??_vfpfcnvrt 000E               _color_click_init 2D50                    _topGearLeft 0057  
                     sprintf@f 002B                       sprintf@s 001D                     _SSP2DATPPS 0E1D  
             ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C                ___lwmod@divisor 0003  
              ___lwmod@counter 0005                _trail_manoeuvre 0100                    _return_flag 005C  
              _manoeuvre_count 005A                     _TX4STAbits 0EE8                _sendCharSerial4 2E66  
          __end_of_write_timer 2EB8                  ?_average_RGBC 000E  
