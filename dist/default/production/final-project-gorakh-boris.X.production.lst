

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 12:02:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 18/08/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   0017B4                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _timer_high_pointer
    88   0017B4  ED                 	db	low (_trail_timer_high+20)
    89                           
    90                           ;initializer for _returning
    91   0017B5  01                 	db	1
    92                           
    93                           	psect	idataBANK0
    94   0015F2                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _squareDelay
    98   0015F2  012C               	dw	300
    99                           
   100                           ;initializer for _headbuttDelay
   101   0015F4  0046               	dw	70
   102                           
   103                           ;initializer for _turn180Delay
   104   0015F6  01FE               	dw	510
   105                           
   106                           ;initializer for _turnRight135Delay
   107   0015F8  012C               	dw	300
   108                           
   109                           ;initializer for _turnLeft135Delay
   110   0015FA  012C               	dw	300
   111                           
   112                           ;initializer for _turnRight90Delay
   113   0015FC  00AF               	dw	175
   114                           
   115                           ;initializer for _turnLeft90Delay
   116   0015FE  00AF               	dw	175
   117                           
   118                           ;initializer for _manoeuvre_count
   119   001600  03                 	db	3
   120                           
   121                           ;initializer for _manoeuvre_pointer
   122   001601  D9                 	db	low (_trail_manoeuvre+20)
   123                           
   124                           ;initializer for _timer_low_pointer
   125   001602  B0                 	db	low (_trail_timer_low+20)
   126                           
   127                           ;initializer for _turningGear
   128   001603  2A                 	db	42
   129                           
   130                           ;initializer for _topGearRight
   131   001604  14                 	db	20
   132                           
   133                           ;initializer for _topGearLeft
   134   001605  14                 	db	20
   135                           
   136                           ;initializer for _rampDelay
   137   001606  08                 	db	8
   138                           
   139                           ;initializer for _trail_manoeuvre
   140   001607  00                 	db	0
   141   001608  00                 	db	0
   142   001609  00                 	db	0
   143   00160A  00                 	db	0
   144   00160B  00                 	db	0
   145   00160C  00                 	db	0
   146   00160D  00                 	db	0
   147   00160E  00                 	db	0
   148   00160F  00                 	db	0
   149   001610  00                 	db	0
   150   001611  00                 	db	0
   151   001612  00                 	db	0
   152   001613  00                 	db	0
   153   001614  00                 	db	0
   154   001615  00                 	db	0
   155   001616  00                 	db	0
   156   001617  00                 	db	0
   157   001618  02                 	db	2
   158   001619  01                 	db	1
   159   00161A  08                 	db	8
   160                           
   161                           ;initializer for _trail_timer_high
   162   00161B  03                 	db	3
   163   00161C  06                 	db	6
   164   00161D  03                 	db	3
   165   00161E  06                 	db	6
   166   00161F  03                 	db	3
   167   001620  06                 	db	6
   168   001621  03                 	db	3
   169   001622  06                 	db	6
   170   001623  03                 	db	3
   171   001624  06                 	db	6
   172   001625  03                 	db	3
   173   001626  06                 	db	6
   174   001627  03                 	db	3
   175   001628  06                 	db	6
   176   001629  03                 	db	3
   177   00162A  06                 	db	6
   178   00162B  03                 	db	3
   179   00162C  06                 	db	6
   180   00162D  03                 	db	3
   181   00162E  06                 	db	6
   182   000000                     _TX4REG	set	3812
   183   000000                     _RC4STAbits	set	3815
   184   000000                     _SP4BRGH	set	3814
   185   000000                     _LATEbits	set	3965
   186   000000                     _TRISEbits	set	3973
   187   000000                     _LATGbits	set	3967
   188   000000                     _TRISGbits	set	3975
   189   000000                     _LATFbits	set	3966
   190   000000                     _LATHbits	set	3968
   191   000000                     _TRISFbits	set	3974
   192   000000                     _TRISHbits	set	3976
   193   000000                     _SSP2CON2bits	set	3802
   194   000000                     _RX4PPS	set	3605
   195   000000                     _SSP2CLKPPS	set	3612
   196   000000                     _SSP2DATPPS	set	3613
   197   000000                     _RC7PPS	set	3689
   198   000000                     _RE2PPS	set	3700
   199   000000                     _LATAbits	set	3961
   200   000000                     _LATDbits	set	3964
   201   000000                     _TRISDbits	set	3972
   202   000000                     _PORTFbits	set	3982
   203   000000                     _T2PR	set	4028
   204   000000                     _T2CONbits	set	4029
   205   000000                     _CCPR2H	set	4006
   206   000000                     _CCPR1H	set	4010
   207   000000                     _TRISCbits	set	3971
   208   000000                     _TRISAbits	set	3969
   209   000000                     _LATCbits	set	3963
   210   000000                     _RE4PPS	set	3702
   211   000000                     _RG6PPS	set	3720
   212   000000                     _RD5PPS	set	3695
   213   000000                     _ANSELDbits	set	3751
   214   000000                     _SSP2ADD	set	3798
   215   000000                     _SSP2CON1bits	set	3801
   216   000000                     _CCPR4H	set	3873
   217   000000                     _CCPR3H	set	3877
   218   000000                     _TMR0L	set	4051
   219   000000                     _TMR0H	set	4052
   220   000000                     _T0CON0bits	set	4053
   221   000000                     _T0CON1bits	set	4054
   222   000000                     _T2CLKCONbits	set	4031
   223   000000                     _T2HLTbits	set	4030
   224   000000                     _CCP1CONbits	set	4011
   225   000000                     _CCPTMRS0bits	set	4013
   226   000000                     _CCP2CONbits	set	4007
   227   000000                     _CCP3CONbits	set	3878
   228   000000                     _CCP4CONbits	set	3874
   229   000000                     _RC4REG	set	3811
   230   000000                     _SP4BRGL	set	3813
   231   000000                     _TX4STAbits	set	3816
   232   000000                     _BAUD4CONbits	set	3817
   233   000000                     _SSP2CON2	set	3802
   234   000000                     _SSP2STAT	set	3800
   235   000000                     _ANSELFbits	set	3764
   236   000000                     _SSP2BUF	set	3797
   237   000000                     _PIE0bits	set	3625
   238   000000                     _PIE4bits	set	3629
   239   000000                     _PIR4bits	set	3639
   240   000000                     _RC0PPS	set	3682
   241   000000                     _RD6PPS	set	3696
   242   000000                     _PIR0bits	set	3635
   243   000000                     _INTCONbits	set	4082
   244                           
   245                           	psect	smallconst
   246   000E00                     __psmallconst:
   247                           	callstack 0
   248   000E00  00                 	db	0
   249   000E01                     STR_1:
   250                           
   251                           ; BSR set to: 14
   252   000E01  25                 	db	37
   253   000E02  64                 	db	100	;'d'
   254   000E03  20                 	db	32
   255   000E04  0D                 	db	13
   256   000E05  00                 	db	0
   257   000E06                     STR_2:
   258                           
   259                           ; BSR set to: 14
   260   000E06  25                 	db	37
   261   000E07  64                 	db	100	;'d'
   262   000E08  00                 	db	0
   263   000E09  00                 	db	0	; dummy byte at the end
   264   000000                     
   265                           ; #config settings
   266                           
   267                           	psect	cinit
   268   0013AC                     __pcinit:
   269                           	callstack 0
   270   0013AC                     start_initialization:
   271                           	callstack 0
   272   0013AC                     __initialization:
   273                           	callstack 0
   274                           
   275                           ; Initialize objects allocated to BANK0 (61 bytes)
   276                           ; load TBLPTR registers with __pidataBANK0
   277   0013AC  0EF2               	movlw	low __pidataBANK0
   278   0013AE  6EF6               	movwf	tblptrl,c
   279   0013B0  0E15               	movlw	high __pidataBANK0
   280   0013B2  6EF7               	movwf	tblptrh,c
   281   0013B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   282   0013B6  6EF8               	movwf	tblptru,c
   283   0013B8  EE00  F0B0         	lfsr	0,__pdataBANK0
   284   0013BC  EE10 F03D          	lfsr	1,61
   285   0013C0                     copy_data0:
   286   0013C0  0009               	tblrd		*+
   287   0013C2  CFF5 FFEE          	movff	tablat,postinc0
   288   0013C6  50E5               	movf	postdec1,w,c
   289   0013C8  50E1               	movf	fsr1l,w,c
   290   0013CA  E1FA               	bnz	copy_data0
   291                           
   292                           ; Initialize objects allocated to COMRAM (2 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294   0013CC  0EB4               	movlw	low __pidataCOMRAM
   295   0013CE  6EF6               	movwf	tblptrl,c
   296   0013D0  0E17               	movlw	high __pidataCOMRAM
   297   0013D2  6EF7               	movwf	tblptrh,c
   298   0013D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299   0013D6  6EF8               	movwf	tblptru,c
   300   0013D8  0009               	tblrd		*+	;fetch initializer
   301   0013DA  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   302   0013DE  0009               	tblrd		*+	;fetch initializer
   303   0013E0  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   304                           
   305                           ; Clear objects allocated to BANK1 (60 bytes)
   306   0013E4  EE01  F000         	lfsr	0,__pbssBANK1
   307   0013E8  0E3C               	movlw	60
   308   0013EA                     clear_0:
   309   0013EA  6AEE               	clrf	postinc0,c
   310   0013EC  06E8               	decf	wreg,f,c
   311   0013EE  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (80 bytes)
   314   0013F0  EE00  F060         	lfsr	0,__pbssBANK0
   315   0013F4  0E50               	movlw	80
   316   0013F6                     clear_1:
   317   0013F6  6AEE               	clrf	postinc0,c
   318   0013F8  06E8               	decf	wreg,f,c
   319   0013FA  E1FD               	bnz	clear_1
   320                           
   321                           ; Clear objects allocated to COMRAM (4 bytes)
   322   0013FC  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   323   0013FE  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   324   001400  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   325   001402  6A59               	clrf	__pbssCOMRAM& (0+255),c
   326   001404                     end_of_initialization:
   327                           	callstack 0
   328   001404                     __end_of__initialization:
   329                           	callstack 0
   330   001404  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331   001406  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332   001408  0100               	movlb	0
   333   00140A  EF00  F008         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336   000059                     __pbssCOMRAM:
   337                           	callstack 0
   338   000059                     _TxBufReadCnt:
   339                           	callstack 0
   340   000059                     	ds	1
   341   00005A                     _TxBufWriteCnt:
   342                           	callstack 0
   343   00005A                     	ds	1
   344   00005B                     _RxBufReadCnt:
   345                           	callstack 0
   346   00005B                     	ds	1
   347   00005C                     _RxBufWriteCnt:
   348                           	callstack 0
   349   00005C                     	ds	1
   350                           
   351                           	psect	dataCOMRAM
   352   00005D                     __pdataCOMRAM:
   353                           	callstack 0
   354   00005D                     _timer_high_pointer:
   355                           	callstack 0
   356   00005D                     	ds	1
   357   00005E                     _returning:
   358                           	callstack 0
   359   00005E                     	ds	1
   360                           
   361                           	psect	bssBANK0
   362   000060                     __pbssBANK0:
   363                           	callstack 0
   364   000060                     _dbuf:
   365                           	callstack 0
   366   000060                     	ds	32
   367   000080                     _EUSART4RXbuf:
   368                           	callstack 0
   369   000080                     	ds	20
   370   000094                     _nout:
   371                           	callstack 0
   372   000094                     	ds	2
   373   000096                     _width:
   374                           	callstack 0
   375   000096                     	ds	2
   376   000098                     _prec:
   377                           	callstack 0
   378   000098                     	ds	2
   379   00009A                     _flags:
   380                           	callstack 0
   381   00009A                     	ds	1
   382   00009B                     _returnFlag:
   383                           	callstack 0
   384   00009B                     	ds	1
   385   00009C                     _trail_timer_low:
   386                           	callstack 0
   387   00009C                     	ds	20
   388                           
   389                           	psect	dataBANK0
   390   0000B0                     __pdataBANK0:
   391                           	callstack 0
   392   0000B0                     _squareDelay:
   393                           	callstack 0
   394   0000B0                     	ds	2
   395   0000B2                     _headbuttDelay:
   396                           	callstack 0
   397   0000B2                     	ds	2
   398   0000B4                     _turn180Delay:
   399                           	callstack 0
   400   0000B4                     	ds	2
   401   0000B6                     _turnRight135Delay:
   402                           	callstack 0
   403   0000B6                     	ds	2
   404   0000B8                     _turnLeft135Delay:
   405                           	callstack 0
   406   0000B8                     	ds	2
   407   0000BA                     _turnRight90Delay:
   408                           	callstack 0
   409   0000BA                     	ds	2
   410   0000BC                     _turnLeft90Delay:
   411                           	callstack 0
   412   0000BC                     	ds	2
   413   0000BE                     _manoeuvre_count:
   414                           	callstack 0
   415   0000BE                     	ds	1
   416   0000BF                     _manoeuvre_pointer:
   417                           	callstack 0
   418   0000BF                     	ds	1
   419   0000C0                     _timer_low_pointer:
   420                           	callstack 0
   421   0000C0                     	ds	1
   422   0000C1                     _turningGear:
   423                           	callstack 0
   424   0000C1                     	ds	1
   425   0000C2                     _topGearRight:
   426                           	callstack 0
   427   0000C2                     	ds	1
   428   0000C3                     _topGearLeft:
   429                           	callstack 0
   430   0000C3                     	ds	1
   431   0000C4                     _rampDelay:
   432                           	callstack 0
   433   0000C4                     	ds	1
   434   0000C5                     _trail_manoeuvre:
   435                           	callstack 0
   436   0000C5                     	ds	20
   437   0000D9                     _trail_timer_high:
   438                           	callstack 0
   439   0000D9                     	ds	20
   440                           
   441                           	psect	bssBANK1
   442   000100                     __pbssBANK1:
   443                           	callstack 0
   444   000100                     _EUSART4TXbuf:
   445                           	callstack 0
   446   000100                     	ds	60
   447                           
   448                           	psect	cstackCOMRAM
   449   000001                     __pcstackCOMRAM:
   450                           	callstack 0
   451   000001                     ??_I2C_2_Master_Idle:
   452   000001                     ?___awdiv:
   453                           	callstack 0
   454   000001                     ?___awmod:
   455                           	callstack 0
   456   000001                     sendCharSerial4@charToSend:
   457                           	callstack 0
   458   000001                     initDCmotorsPWM@PWMperiod:
   459                           	callstack 0
   460   000001                     ___awdiv@dividend:
   461                           	callstack 0
   462   000001                     ___awmod@dividend:
   463                           	callstack 0
   464   000001                     fputc@c:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468   000001                     	ds	1
   469   000002                     ??_I2C_2_Master_Read:
   470   000002                     I2C_2_Master_Write@data_byte:
   471                           	callstack 0
   472   000002                     sendStringSerial4@string:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1
   476   000002                     	ds	1
   477   000003                     color_writetoaddr@value:
   478                           	callstack 0
   479   000003                     I2C_2_Master_Read@ack:
   480                           	callstack 0
   481   000003                     fputc@fp:
   482                           	callstack 0
   483   000003                     ___awdiv@divisor:
   484                           	callstack 0
   485   000003                     ___awmod@divisor:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x2
   489   000003                     	ds	1
   490   000004                     ??_fputc:
   491   000004                     color_writetoaddr@address:
   492                           	callstack 0
   493   000004                     I2C_2_Master_Read@tmp:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x3
   497   000004                     	ds	1
   498   000005                     ??_color_click_init:
   499   000005                     ?_color_read_Red:
   500                           	callstack 0
   501   000005                     ___awdiv@counter:
   502                           	callstack 0
   503   000005                     ___awmod@counter:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x4
   507   000005                     	ds	1
   508   000006                     ___awdiv@sign:
   509                           	callstack 0
   510   000006                     ___awmod@sign:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x5
   514   000006                     	ds	1
   515   000007                     ??_color_read_Red:
   516   000007                     ?_abs:
   517                           	callstack 0
   518   000007                     ___awdiv@quotient:
   519                           	callstack 0
   520   000007                     abs@a:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x6
   524   000007                     	ds	2
   525   000009                     ??_abs:
   526                           
   527                           ; 1 bytes @ 0x8
   528   000009                     	ds	1
   529   00000A                     color_read_Red@tmp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x9
   533   00000A                     	ds	1
   534   00000B                     ?_vfpfcnvrt:
   535                           	callstack 0
   536   00000B                     vfpfcnvrt@fp:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0xA
   540   00000B                     	ds	1
   541   00000C                     vfpfcnvrt@fmt:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0xB
   545   00000C                     	ds	1
   546   00000D                     vfpfcnvrt@ap:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0xC
   550   00000D                     	ds	1
   551   00000E                     ??_vfpfcnvrt:
   552                           
   553                           ; 1 bytes @ 0xD
   554   00000E                     	ds	1
   555   00000F                     vfpfcnvrt@done:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xE
   559   00000F                     	ds	1
   560   000010                     vfpfcnvrt@cnt:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0xF
   564   000010                     	ds	2
   565   000012                     vfpfcnvrt@cp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x11
   569   000012                     	ds	1
   570   000013                     vfpfcnvrt@convarg:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x12
   574   000013                     	ds	4
   575   000017                     vfpfcnvrt@c:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x16
   579   000017                     	ds	1
   580   000018                     ?_vfprintf:
   581                           	callstack 0
   582   000018                     vfprintf@fp:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x17
   586   000018                     	ds	1
   587   000019                     vfprintf@fmt:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x18
   591   000019                     	ds	1
   592   00001A                     vfprintf@ap:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x19
   596   00001A                     	ds	1
   597   00001B                     vfprintf@cfmt:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x1A
   601   00001B                     	ds	1
   602   00001C                     ?_sprintf:
   603                           	callstack 0
   604   00001C                     sprintf@s:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1B
   608   00001C                     	ds	2
   609   00001E                     sprintf@fmt:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x1D
   613   00001E                     	ds	3
   614   000021                     sprintf@ret:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x20
   618   000021                     	ds	2
   619   000023                     sprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x22
   623   000023                     	ds	1
   624   000024                     sprintf@f:
   625                           	callstack 0
   626                           
   627                           ; 12 bytes @ 0x23
   628   000024                     	ds	12
   629   000030                     sendIntSerial4@integer:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2F
   633   000030                     	ds	2
   634   000032                     sendIntSerial4@string:
   635                           	callstack 0
   636                           
   637                           ; 17 bytes @ 0x31
   638   000032                     	ds	17
   639   000043                     ??_main:
   640                           
   641                           ; 1 bytes @ 0x42
   642   000043                     	ds	2
   643   000045                     main@idk:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x44
   647   000045                     	ds	2
   648   000047                     main@motorL:
   649                           	callstack 0
   650                           
   651                           ; 9 bytes @ 0x46
   652   000047                     	ds	9
   653   000050                     main@motorR:
   654                           	callstack 0
   655                           
   656                           ; 9 bytes @ 0x4F
   657   000050                     	ds	9
   658                           
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 26 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  motorR          9   79[COMRAM] struct DC_motor
   669 ;;  motorL          9   70[COMRAM] struct DC_motor
   670 ;;  PWMcycle        2    0        unsigned int 
   671 ;;  idk             2   68[COMRAM] unsigned int 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;Total ram usage:       22 bytes
   686 ;; Hardware stack levels required when called: 7
   687 ;; This function calls:
   688 ;;		_Timer0_init
   689 ;;		_buggy_lights_init
   690 ;;		_color_click_init
   691 ;;		_color_read_Red
   692 ;;		_initDCmotorsPWM
   693 ;;		_initUSART4
   694 ;;		_sendIntSerial4
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701   001000                     __ptext0:
   702                           	callstack 0
   703   001000                     _main:
   704                           	callstack 24
   705   001000                     
   706                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   707   001000  0E52               	movlw	82
   708   001002  6E44               	movwf	(??_main+1)^0,c
   709   001004  0E2B               	movlw	43
   710   001006  6E43               	movwf	??_main^0,c
   711   001008  0E00               	movlw	0
   712   00100A                     u1957:
   713   00100A  2EE8               	decfsz	wreg,f,c
   714   00100C  D7FE               	bra	u1957
   715   00100E  2E43               	decfsz	??_main^0,f,c
   716   001010  D7FC               	bra	u1957
   717   001012  2E44               	decfsz	(??_main+1)^0,f,c
   718   001014  D7FA               	bra	u1957
   719   001016  D000               	nop2	
   720   001018                     
   721                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   722   001018  0E00               	movlw	0
   723   00101A  6E47               	movwf	main@motorL^0,c
   724   00101C                     
   725                           ;main.c: 33:     motorL.direction = 1;
   726   00101C  0E01               	movlw	1
   727   00101E  6E48               	movwf	(main@motorL+1)^0,c
   728   001020                     
   729                           ;main.c: 34:     motorL.brakemode = 1;
   730   001020  0E01               	movlw	1
   731   001022  6E49               	movwf	(main@motorL+2)^0,c
   732   001024                     
   733                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   734   001024  0E00               	movlw	0
   735   001026  6E4B               	movwf	(main@motorL+4)^0,c
   736   001028  0E63               	movlw	99
   737   00102A  6E4A               	movwf	(main@motorL+3)^0,c
   738   00102C                     
   739                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   740   00102C  0EAA               	movlw	170
   741   00102E  6E4C               	movwf	(main@motorL+5)^0,c
   742   001030  0E0F               	movlw	15
   743   001032  6E4D               	movwf	(main@motorL+6)^0,c
   744   001034                     
   745                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   746   001034  0EA6               	movlw	166
   747   001036  6E4E               	movwf	(main@motorL+7)^0,c
   748   001038  0E0F               	movlw	15
   749   00103A  6E4F               	movwf	(main@motorL+8)^0,c
   750   00103C                     
   751                           ;main.c: 39:     motorR.power = 0;
   752   00103C  0E00               	movlw	0
   753   00103E  6E50               	movwf	main@motorR^0,c
   754   001040                     
   755                           ;main.c: 40:     motorR.direction = 1;
   756   001040  0E01               	movlw	1
   757   001042  6E51               	movwf	(main@motorR+1)^0,c
   758   001044                     
   759                           ;main.c: 41:     motorR.brakemode = 1;
   760   001044  0E01               	movlw	1
   761   001046  6E52               	movwf	(main@motorR+2)^0,c
   762   001048                     
   763                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   764   001048  0E00               	movlw	0
   765   00104A  6E54               	movwf	(main@motorR+4)^0,c
   766   00104C  0E63               	movlw	99
   767   00104E  6E53               	movwf	(main@motorR+3)^0,c
   768   001050                     
   769                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   770   001050  0E25               	movlw	37
   771   001052  6E55               	movwf	(main@motorR+5)^0,c
   772   001054  0E0F               	movlw	15
   773   001056  6E56               	movwf	(main@motorR+6)^0,c
   774   001058                     
   775                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   776   001058  0E21               	movlw	33
   777   00105A  6E57               	movwf	(main@motorR+7)^0,c
   778   00105C  0E0F               	movlw	15
   779   00105E  6E58               	movwf	(main@motorR+8)^0,c
   780   001060                     
   781                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   782   001060  0E00               	movlw	0
   783   001062  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   784   001064  0E63               	movlw	99
   785   001066  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   786   001068  EC8E  F009         	call	_initDCmotorsPWM	;wreg free
   787   00106C                     
   788                           ;main.c: 47:     buggy_lights_init();
   789   00106C  EC8B  F00A         	call	_buggy_lights_init	;wreg free
   790   001070                     
   791                           ;main.c: 48:     color_click_init();
   792   001070  EC32  F00B         	call	_color_click_init	;wreg free
   793   001074                     
   794                           ;main.c: 49:     initUSART4();
   795   001074  ECAA  F00B         	call	_initUSART4	;wreg free
   796   001078                     
   797                           ;main.c: 50:     Timer0_init();
   798   001078  EC75  F00B         	call	_Timer0_init	;wreg free
   799   00107C                     
   800                           ;main.c: 54:         TRISFbits.TRISF2 = 1;
   801   00107C  8486               	bsf	134,2,c	;volatile
   802   00107E                     
   803                           ;main.c: 55:         TRISFbits.TRISF3 = 1;
   804   00107E  8686               	bsf	134,3,c	;volatile
   805   001080                     
   806                           ;main.c: 57:         ANSELFbits.ANSELF2 = 0;
   807   001080  010E               	movlb	14	; () banked
   808   001082  95B4               	bcf	180,2,b	;volatile
   809   001084                     
   810                           ; BSR set to: 14
   811                           ;main.c: 58:         ANSELFbits.ANSELF3 = 0;
   812   001084  97B4               	bcf	180,3,b	;volatile
   813   001086                     l2823:
   814                           
   815                           ;main.c: 75:         idk = color_read_Red();
   816   001086  EC63  F00A         	call	_color_read_Red	;wreg free
   817   00108A  C005  F045         	movff	?_color_read_Red,main@idk
   818   00108E  C006  F046         	movff	?_color_read_Red+1,main@idk+1
   819   001092                     
   820                           ;main.c: 76:         sendIntSerial4((int)idk);
   821   001092  C045  F030         	movff	main@idk,sendIntSerial4@integer
   822   001096  C046  F031         	movff	main@idk+1,sendIntSerial4@integer+1
   823   00109A  EC89  F00B         	call	_sendIntSerial4	;wreg free
   824   00109E                     
   825                           ;main.c: 79:         if (!PORTFbits.RF2) {
   826   00109E  B48E               	btfsc	142,2,c	;volatile
   827   0010A0  EF54  F008         	goto	u1411
   828   0010A4  EF56  F008         	goto	u1410
   829   0010A8                     u1411:
   830   0010A8  EF67  F008         	goto	l2831
   831   0010AC                     u1410:
   832   0010AC                     
   833                           ;main.c: 80:             LATDbits.LATD7 = !LATDbits.LATD7;
   834   0010AC  AE7C               	btfss	124,7,c	;volatile
   835   0010AE  EF5B  F008         	goto	u1421
   836   0010B2  EF5F  F008         	goto	u1420
   837   0010B6                     u1421:
   838   0010B6  6A43               	clrf	??_main^0,c
   839   0010B8  2A43               	incf	??_main^0,f,c
   840   0010BA  EF60  F008         	goto	u1438
   841   0010BE                     u1420:
   842   0010BE  6A43               	clrf	??_main^0,c
   843   0010C0                     u1438:
   844   0010C0  3243               	rrcf	??_main^0,f,c
   845   0010C2  3243               	rrcf	??_main^0,f,c
   846   0010C4  507C               	movf	124,w,c	;volatile
   847   0010C6  1843               	xorwf	??_main^0,w,c
   848   0010C8  0B7F               	andlw	-129
   849   0010CA  1843               	xorwf	??_main^0,w,c
   850   0010CC  6E7C               	movwf	124,c	;volatile
   851   0010CE                     l2831:
   852                           
   853                           ;main.c: 85:         _delay((unsigned long)((100)*(64000000/4000.0)));
   854   0010CE  0E09               	movlw	9
   855   0010D0  6E44               	movwf	(??_main+1)^0,c
   856   0010D2  0E1E               	movlw	30
   857   0010D4  6E43               	movwf	??_main^0,c
   858   0010D6  0EE4               	movlw	228
   859   0010D8                     u1967:
   860   0010D8  2EE8               	decfsz	wreg,f,c
   861   0010DA  D7FE               	bra	u1967
   862   0010DC  2E43               	decfsz	??_main^0,f,c
   863   0010DE  D7FC               	bra	u1967
   864   0010E0  2E44               	decfsz	(??_main+1)^0,f,c
   865   0010E2  D7FA               	bra	u1967
   866   0010E4  D000               	nop2	
   867   0010E6  EF43  F008         	goto	l2823
   868   0010EA  EF1C  F000         	goto	start
   869   0010EE                     __end_of_main:
   870                           	callstack 0
   871                           
   872 ;; *************** function _sendIntSerial4 *****************
   873 ;; Defined at:
   874 ;;		line 43 in file "serial.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  integer         2   47[COMRAM] int 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  string         17   49[COMRAM] unsigned char [17]
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   891 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;Total ram usage:       19 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 6
   895 ;; This function calls:
   896 ;;		_sendStringSerial4
   897 ;;		_sprintf
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text1
   904   001712                     __ptext1:
   905                           	callstack 0
   906   001712                     _sendIntSerial4:
   907                           	callstack 24
   908   001712                     
   909                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   910   001712  0E32               	movlw	low sendIntSerial4@string
   911   001714  6E1C               	movwf	sprintf@s^0,c
   912   001716  6A1D               	clrf	(sprintf@s+1)^0,c
   913   001718  0E01               	movlw	low STR_1
   914   00171A  6E1E               	movwf	sprintf@fmt^0,c
   915   00171C  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   916   001720  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   917   001724  ECB2  F00A         	call	_sprintf	;wreg free
   918   001728                     
   919                           ;serial.c: 46:     sendStringSerial4(string);
   920   001728  0E32               	movlw	low sendIntSerial4@string
   921   00172A  6E02               	movwf	sendStringSerial4@string^0,c
   922   00172C  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   923   00172E  EC07  F00A         	call	_sendStringSerial4	;wreg free
   924   001732  0012               	return		;funcret
   925   001734                     __end_of_sendIntSerial4:
   926                           	callstack 0
   927                           
   928 ;; *************** function _sprintf *****************
   929 ;; Defined at:
   930 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  s               2   27[COMRAM] PTR unsigned char 
   933 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   934 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   935 ;;		 -> STR_3(3), STR_1(5), 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  f              12   35[COMRAM] struct _IO_FILE
   938 ;;  ret             2   32[COMRAM] int 
   939 ;;  ap              1   34[COMRAM] PTR void [1]
   940 ;;		 -> ?_sprintf(2), 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  2   27[COMRAM] int 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   950 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;Total ram usage:       20 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 5
   957 ;; This function calls:
   958 ;;		_vfprintf
   959 ;; This function is called by:
   960 ;;		_sendIntSerial4
   961 ;;		_sendArrayCharSerial4
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966   001564                     __ptext2:
   967                           	callstack 0
   968   001564                     _sprintf:
   969                           	callstack 24
   970   001564  0E1F               	movlw	low (?_sprintf+3)
   971   001566  6E23               	movwf	sprintf@ap^0,c
   972   001568  C01C  F024         	movff	sprintf@s,sprintf@f
   973   00156C  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
   974   001570  0E00               	movlw	0
   975   001572  6E28               	movwf	(sprintf@f+4)^0,c
   976   001574  0E00               	movlw	0
   977   001576  6E27               	movwf	(sprintf@f+3)^0,c
   978   001578  0E00               	movlw	0
   979   00157A  6E2F               	movwf	(sprintf@f+11)^0,c
   980   00157C  0E00               	movlw	0
   981   00157E  6E2E               	movwf	(sprintf@f+10)^0,c
   982   001580  0E24               	movlw	low sprintf@f
   983   001582  6E18               	movwf	vfprintf@fp^0,c
   984   001584  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
   985   001588  0E23               	movlw	low sprintf@ap
   986   00158A  6E1A               	movwf	vfprintf@ap^0,c
   987   00158C  EC38  F00A         	call	_vfprintf	;wreg free
   988   001590  C018  F021         	movff	?_vfprintf,sprintf@ret
   989   001594  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
   990   001598  5027               	movf	(sprintf@f+3)^0,w,c
   991   00159A  241C               	addwf	sprintf@s^0,w,c
   992   00159C  6ED9               	movwf	fsr2l,c
   993   00159E  5028               	movf	(sprintf@f+4)^0,w,c
   994   0015A0  201D               	addwfc	(sprintf@s+1)^0,w,c
   995   0015A2  6EDA               	movwf	fsr2h,c
   996   0015A4  6ADF               	clrf	indf2,c
   997   0015A6  C021  F01C         	movff	sprintf@ret,?_sprintf
   998   0015AA  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
   999   0015AE  0012               	return		;funcret
  1000   0015B0                     __end_of_sprintf:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _vfprintf *****************
  1004 ;; Defined at:
  1005 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1008 ;;		 -> sprintf@f(12), 
  1009 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1010 ;;		 -> STR_3(3), STR_1(5), 
  1011 ;;  ap              1   25[COMRAM] PTR PTR void 
  1012 ;;		 -> sprintf@ap(1), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1015 ;;		 -> STR_3(3), STR_1(5), 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  2   23[COMRAM] int 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1025 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;Total ram usage:        4 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 4
  1032 ;; This function calls:
  1033 ;;		_vfpfcnvrt
  1034 ;; This function is called by:
  1035 ;;		_sprintf
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text3
  1040   001470                     __ptext3:
  1041                           	callstack 0
  1042   001470                     _vfprintf:
  1043                           	callstack 24
  1044   001470                     
  1045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1046   001470  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1047   001474                     
  1048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1049   001474  0E00               	movlw	0
  1050   001476  0100               	movlb	0	; () banked
  1051   001478  6F95               	movwf	(_nout+1)& (0+255),b
  1052   00147A  0E00               	movlw	0
  1053   00147C  6F94               	movwf	_nout& (0+255),b
  1054                           
  1055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1056   00147E  EF4E  F00A         	goto	l2537
  1057   001482                     l2535:
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1061   001482  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1062   001486  0E1B               	movlw	low vfprintf@cfmt
  1063   001488  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1064   00148A  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1065   00148E  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1066   001492  500B               	movf	?_vfpfcnvrt^0,w,c
  1067   001494  0100               	movlb	0	; () banked
  1068   001496  2794               	addwf	_nout& (0+255),f,b
  1069   001498  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1070   00149A  2395               	addwfc	(_nout+1)& (0+255),f,b
  1071   00149C                     l2537:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1075   00149C  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1076   0014A0                     	if	1	;There is more than 1 active tblptr byte
  1077   0014A0  0E0E               	movlw	high __smallconst
  1078   0014A2  6EF7               	movwf	tblptrh,c
  1079   0014A4                     	endif
  1080   0014A4                     	if	0	;tblptru may be non-zero
  1081   0014A4                     	endif
  1082   0014A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1083   0014A4  0E00               	movlw	low (__smallconst shr (0+16))
  1084   0014A6  6EF8               	movwf	tblptru,c
  1085   0014A8                     	endif
  1086   0014A8  0008               	tblrd		*
  1087   0014AA  50F5               	movf	tablat,w,c
  1088   0014AC  0900               	iorlw	0
  1089   0014AE  A4D8               	btfss	status,2,c
  1090   0014B0  EF5C  F00A         	goto	u1321
  1091   0014B4  EF5E  F00A         	goto	u1320
  1092   0014B8                     u1321:
  1093   0014B8  EF41  F00A         	goto	l2535
  1094   0014BC                     u1320:
  1095   0014BC                     
  1096                           ; BSR set to: 0
  1097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1098   0014BC  C094  F018         	movff	_nout,?_vfprintf
  1099   0014C0  C095  F019         	movff	_nout+1,?_vfprintf+1
  1100   0014C4                     
  1101                           ; BSR set to: 0
  1102   0014C4  0012               	return		;funcret
  1103   0014C6                     __end_of_vfprintf:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _vfpfcnvrt *****************
  1107 ;; Defined at:
  1108 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1111 ;;		 -> sprintf@f(12), 
  1112 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1113 ;;		 -> vfprintf@cfmt(1), 
  1114 ;;  ap              1   12[COMRAM] PTR PTR void 
  1115 ;;		 -> sprintf@ap(1), 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  convarg         4   18[COMRAM] struct .
  1118 ;;  cnt             2   15[COMRAM] int 
  1119 ;;  c               1   22[COMRAM] unsigned char 
  1120 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1121 ;;		 -> STR_3(3), STR_1(5), 
  1122 ;;  done            1   14[COMRAM] _Bool 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2   10[COMRAM] int 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1132 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;Total ram usage:       13 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 3
  1139 ;; This function calls:
  1140 ;;		___awdiv
  1141 ;;		___awmod
  1142 ;;		_abs
  1143 ;;		_fputc
  1144 ;; This function is called by:
  1145 ;;		_vfprintf
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text4
  1150   000E0A                     __ptext4:
  1151                           	callstack 0
  1152   000E0A                     _vfpfcnvrt:
  1153                           	callstack 24
  1154   000E0A                     
  1155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1156   000E0A  0E00               	movlw	0
  1157   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1158   000E0E  0E00               	movlw	0
  1159   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1160   000E12                     
  1161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1162   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1163   000E14  6ED9               	movwf	fsr2l,c
  1164   000E16  6ADA               	clrf	fsr2h,c
  1165   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1166   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1167   000E1C  0E0E               	movlw	high __smallconst
  1168   000E1E  6EF7               	movwf	tblptrh,c
  1169   000E20                     	endif
  1170   000E20                     	if	0	;tblptru may be non-zero
  1171   000E20                     	endif
  1172   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1173   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1174   000E22  6EF8               	movwf	tblptru,c
  1175   000E24                     	endif
  1176   000E24  0008               	tblrd		*
  1177   000E26  50F5               	movf	tablat,w,c
  1178   000E28  0A25               	xorlw	37
  1179   000E2A  A4D8               	btfss	status,2,c
  1180   000E2C  EF1A  F007         	goto	u1221
  1181   000E30  EF1C  F007         	goto	u1220
  1182   000E34                     u1221:
  1183   000E34  EFE6  F007         	goto	l2481
  1184   000E38                     u1220:
  1185   000E38                     
  1186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1187   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1188   000E3A  6ED9               	movwf	fsr2l,c
  1189   000E3C  6ADA               	clrf	fsr2h,c
  1190   000E3E  2ADF               	incf	indf2,f,c
  1191   000E40                     
  1192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1193   000E40  0E00               	movlw	0
  1194   000E42  0100               	movlb	0	; () banked
  1195   000E44  6F97               	movwf	(_width+1)& (0+255),b
  1196   000E46  0E00               	movlw	0
  1197   000E48  6F96               	movwf	_width& (0+255),b
  1198   000E4A  C096  F09A         	movff	_width,_flags
  1199   000E4E                     
  1200                           ; BSR set to: 0
  1201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1202   000E4E  6998               	setf	_prec& (0+255),b
  1203   000E50  6999               	setf	(_prec+1)& (0+255),b
  1204   000E52                     
  1205                           ; BSR set to: 0
  1206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1207   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1208   000E54  6ED9               	movwf	fsr2l,c
  1209   000E56  6ADA               	clrf	fsr2h,c
  1210   000E58  50DF               	movf	indf2,w,c
  1211   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1212   000E5C                     
  1213                           ; BSR set to: 0
  1214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1215   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1216   000E60                     	if	1	;There is more than 1 active tblptr byte
  1217   000E60  0E0E               	movlw	high __smallconst
  1218   000E62  6EF7               	movwf	tblptrh,c
  1219   000E64                     	endif
  1220   000E64                     	if	0	;tblptru may be non-zero
  1221   000E64                     	endif
  1222   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1223   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1224   000E66  6EF8               	movwf	tblptru,c
  1225   000E68                     	endif
  1226   000E68  0008               	tblrd		*
  1227   000E6A  50F5               	movf	tablat,w,c
  1228   000E6C  0A64               	xorlw	100
  1229   000E6E  B4D8               	btfsc	status,2,c
  1230   000E70  EF3C  F007         	goto	u1231
  1231   000E74  EF3E  F007         	goto	u1230
  1232   000E78                     u1231:
  1233   000E78  EF4E  F007         	goto	l2445
  1234   000E7C                     u1230:
  1235   000E7C                     
  1236                           ; BSR set to: 0
  1237   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1238   000E80                     	if	1	;There is more than 1 active tblptr byte
  1239   000E80  0E0E               	movlw	high __smallconst
  1240   000E82  6EF7               	movwf	tblptrh,c
  1241   000E84                     	endif
  1242   000E84                     	if	0	;tblptru may be non-zero
  1243   000E84                     	endif
  1244   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1245   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1246   000E86  6EF8               	movwf	tblptru,c
  1247   000E88                     	endif
  1248   000E88  0008               	tblrd		*
  1249   000E8A  50F5               	movf	tablat,w,c
  1250   000E8C  0A69               	xorlw	105
  1251   000E8E  A4D8               	btfss	status,2,c
  1252   000E90  EF4C  F007         	goto	u1241
  1253   000E94  EF4E  F007         	goto	u1240
  1254   000E98                     u1241:
  1255   000E98  EFDC  F007         	goto	l2475
  1256   000E9C                     u1240:
  1257   000E9C                     l2445:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1261   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1262   000E9E  6ED9               	movwf	fsr2l,c
  1263   000EA0  6ADA               	clrf	fsr2h,c
  1264   000EA2  0E02               	movlw	2
  1265   000EA4  26DF               	addwf	indf2,f,c
  1266   000EA6  5CDF               	subwf	indf2,w,c
  1267   000EA8  6ED9               	movwf	fsr2l,c
  1268   000EAA  6ADA               	clrf	fsr2h,c
  1269   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1270   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1271   000EB4                     
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1274   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1275   000EB6  6ED9               	movwf	fsr2l,c
  1276   000EB8  6ADA               	clrf	fsr2h,c
  1277   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1278   000EBC  6EDF               	movwf	indf2,c
  1279   000EBE                     
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1282   000EBE  0E20               	movlw	32
  1283   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1286   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1287   000EC4  EF66  F007         	goto	u1251
  1288   000EC8  EF69  F007         	goto	u1250
  1289   000ECC                     u1251:
  1290   000ECC  0E01               	movlw	1
  1291   000ECE  EF6A  F007         	goto	u1260
  1292   000ED2                     u1250:
  1293   000ED2  0E00               	movlw	0
  1294   000ED4                     u1260:
  1295   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1296   000ED6                     l2451:
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1299   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1300   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1301   000EDA  0F60               	addlw	low _dbuf
  1302   000EDC  6ED9               	movwf	fsr2l,c
  1303   000EDE  6ADA               	clrf	fsr2h,c
  1304   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1305   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1306   000EE8  0E00               	movlw	0
  1307   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1308   000EEC  0E0A               	movlw	10
  1309   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1310   000EF0  EC36  F009         	call	___awmod	;wreg free
  1311   000EF4  C001  F007         	movff	?___awmod,abs@a
  1312   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1313   000EFC  EC18  F00B         	call	_abs	;wreg free
  1314   000F00  5007               	movf	?_abs^0,w,c
  1315   000F02  0F30               	addlw	48
  1316   000F04  6EDF               	movwf	indf2,c
  1317   000F06                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1319   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1320   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1321   000F0E  0E00               	movlw	0
  1322   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1323   000F12  0E0A               	movlw	10
  1324   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1325   000F16  EC77  F008         	call	___awdiv	;wreg free
  1326   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1327   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1328   000F22                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1330   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1331   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1332   000F26                     
  1333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1334   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1335   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1336   000F2A  B4D8               	btfsc	status,2,c
  1337   000F2C  EF9A  F007         	goto	u1271
  1338   000F30  EF9C  F007         	goto	u1270
  1339   000F34                     u1271:
  1340   000F34  EFA4  F007         	goto	l2461
  1341   000F38                     u1270:
  1342   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1343   000F3A  A4D8               	btfss	status,2,c
  1344   000F3C  EFA2  F007         	goto	u1281
  1345   000F40  EFA4  F007         	goto	u1280
  1346   000F44                     u1281:
  1347   000F44  EF6B  F007         	goto	l2451
  1348   000F48                     u1280:
  1349   000F48                     l2461:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1352   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1353   000F4A  B4D8               	btfsc	status,2,c
  1354   000F4C  EFAA  F007         	goto	u1291
  1355   000F50  EFAC  F007         	goto	u1290
  1356   000F54                     u1291:
  1357   000F54  EFCD  F007         	goto	l2473
  1358   000F58                     u1290:
  1359   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1360   000F5A  B4D8               	btfsc	status,2,c
  1361   000F5C  EFB2  F007         	goto	u1301
  1362   000F60  EFB4  F007         	goto	u1300
  1363   000F64                     u1301:
  1364   000F64  EFCD  F007         	goto	l2473
  1365   000F68                     u1300:
  1366   000F68                     
  1367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1368   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1369   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1370   000F6C  0F60               	addlw	low _dbuf
  1371   000F6E  6ED9               	movwf	fsr2l,c
  1372   000F70  6ADA               	clrf	fsr2h,c
  1373   000F72  0E2D               	movlw	45
  1374   000F74  6EDF               	movwf	indf2,c
  1375   000F76                     
  1376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1377   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1378   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1379   000F7A  EFCD  F007         	goto	l2473
  1380   000F7E                     l2469:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1383   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1384   000F80  0F60               	addlw	low _dbuf
  1385   000F82  6ED9               	movwf	fsr2l,c
  1386   000F84  6ADA               	clrf	fsr2h,c
  1387   000F86  50DF               	movf	indf2,w,c
  1388   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1389   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1390   000F8C  6E01               	movwf	fputc@c^0,c
  1391   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1392   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1393   000F94  ECD9  F008         	call	_fputc	;wreg free
  1394   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1395   000F9A                     l2473:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1398   000F9A  0E20               	movlw	32
  1399   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1400   000F9E  A4D8               	btfss	status,2,c
  1401   000FA0  EFD4  F007         	goto	u1311
  1402   000FA4  EFD6  F007         	goto	u1310
  1403   000FA8                     u1311:
  1404   000FA8  EFBF  F007         	goto	l2469
  1405   000FAC                     u1310:
  1406   000FAC                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1408   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1409   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1410   000FB4  EFFF  F007         	goto	l1375
  1411   000FB8                     l2475:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1415   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1416   000FBA  6ED9               	movwf	fsr2l,c
  1417   000FBC  6ADA               	clrf	fsr2h,c
  1418   000FBE  2ADF               	incf	indf2,f,c
  1419   000FC0                     
  1420                           ; BSR set to: 0
  1421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1422   000FC0  0E00               	movlw	0
  1423   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1424   000FC4  0E00               	movlw	0
  1425   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1426   000FC8  EFFF  F007         	goto	l1375
  1427   000FCC                     l2481:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1430   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1431   000FCE  6ED9               	movwf	fsr2l,c
  1432   000FD0  6ADA               	clrf	fsr2h,c
  1433   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1434   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1435   000FD6  0E0E               	movlw	high __smallconst
  1436   000FD8  6EF7               	movwf	tblptrh,c
  1437   000FDA                     	endif
  1438   000FDA                     	if	0	;tblptru may be non-zero
  1439   000FDA                     	endif
  1440   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1441   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1442   000FDC  6EF8               	movwf	tblptru,c
  1443   000FDE                     	endif
  1444   000FDE  0008               	tblrd		*
  1445   000FE0  50F5               	movf	tablat,w,c
  1446   000FE2  6E01               	movwf	fputc@c^0,c
  1447   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1448   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1449   000FEA  ECD9  F008         	call	_fputc	;wreg free
  1450   000FEE                     
  1451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1452   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1453   000FF0  6ED9               	movwf	fsr2l,c
  1454   000FF2  6ADA               	clrf	fsr2h,c
  1455   000FF4  2ADF               	incf	indf2,f,c
  1456   000FF6                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1458   000FF6  0E00               	movlw	0
  1459   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1460   000FFA  0E01               	movlw	1
  1461   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1462   000FFE                     l1375:
  1463   000FFE  0012               	return		;funcret
  1464   001000                     __end_of_vfpfcnvrt:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _fputc *****************
  1468 ;; Defined at:
  1469 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  c               2    0[COMRAM] int 
  1472 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1473 ;;		 -> sprintf@f(12), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2    0[COMRAM] int 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1485 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;Total ram usage:        8 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 2
  1492 ;; This function calls:
  1493 ;;		_putch
  1494 ;; This function is called by:
  1495 ;;		_vfpfcnvrt
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text5
  1500   0011B2                     __ptext5:
  1501                           	callstack 0
  1502   0011B2                     _fputc:
  1503                           	callstack 24
  1504   0011B2  5003               	movf	fputc@fp^0,w,c
  1505   0011B4  B4D8               	btfsc	status,2,c
  1506   0011B6  EFDF  F008         	goto	u1011
  1507   0011BA  EFE1  F008         	goto	u1010
  1508   0011BE                     u1011:
  1509   0011BE  EFE9  F008         	goto	l2329
  1510   0011C2                     u1010:
  1511   0011C2  5003               	movf	fputc@fp^0,w,c
  1512   0011C4  A4D8               	btfss	status,2,c
  1513   0011C6  EFE7  F008         	goto	u1021
  1514   0011CA  EFE9  F008         	goto	u1020
  1515   0011CE                     u1021:
  1516   0011CE  EFEE  F008         	goto	l2331
  1517   0011D2                     u1020:
  1518   0011D2                     l2329:
  1519   0011D2  5001               	movf	fputc@c^0,w,c
  1520   0011D4  ECDB  F00B         	call	_putch
  1521   0011D8  EF35  F009         	goto	l1400
  1522   0011DC                     l2331:
  1523   0011DC  5003               	movf	fputc@fp^0,w,c
  1524   0011DE  6ED9               	movwf	fsr2l,c
  1525   0011E0  6ADA               	clrf	fsr2h,c
  1526   0011E2  0E0A               	movlw	10
  1527   0011E4  26D9               	addwf	fsr2l,f,c
  1528   0011E6  50DE               	movf	postinc2,w,c
  1529   0011E8  10DE               	iorwf	postinc2,w,c
  1530   0011EA  B4D8               	btfsc	status,2,c
  1531   0011EC  EFFA  F008         	goto	u1031
  1532   0011F0  EFFC  F008         	goto	u1030
  1533   0011F4                     u1031:
  1534   0011F4  EF15  F009         	goto	l2335
  1535   0011F8                     u1030:
  1536   0011F8  5003               	movf	fputc@fp^0,w,c
  1537   0011FA  6ED9               	movwf	fsr2l,c
  1538   0011FC  6ADA               	clrf	fsr2h,c
  1539   0011FE  0E0A               	movlw	10
  1540   001200  26D9               	addwf	fsr2l,f,c
  1541   001202  5003               	movf	fputc@fp^0,w,c
  1542   001204  6EE1               	movwf	fsr1l,c
  1543   001206  6AE2               	clrf	fsr1h,c
  1544   001208  0E03               	movlw	3
  1545   00120A  26E1               	addwf	fsr1l,f,c
  1546   00120C  50DE               	movf	postinc2,w,c
  1547   00120E  5CE6               	subwf	postinc1,w,c
  1548   001210  50E6               	movf	postinc1,w,c
  1549   001212  0A80               	xorlw	128
  1550   001214  6E08               	movwf	(??_fputc+4)^0,c
  1551   001216  50DE               	movf	postinc2,w,c
  1552   001218  0A80               	xorlw	128
  1553   00121A  5808               	subwfb	(??_fputc+4)^0,w,c
  1554   00121C  B0D8               	btfsc	status,0,c
  1555   00121E  EF13  F009         	goto	u1041
  1556   001222  EF15  F009         	goto	u1040
  1557   001226                     u1041:
  1558   001226  EF35  F009         	goto	l1400
  1559   00122A                     u1040:
  1560   00122A                     l2335:
  1561   00122A  5003               	movf	fputc@fp^0,w,c
  1562   00122C  6ED9               	movwf	fsr2l,c
  1563   00122E  6ADA               	clrf	fsr2h,c
  1564   001230  0E03               	movlw	3
  1565   001232  26D9               	addwf	fsr2l,f,c
  1566   001234  CFDE F004          	movff	postinc2,??_fputc
  1567   001238  CFDD F005          	movff	postdec2,??_fputc+1
  1568   00123C  5003               	movf	fputc@fp^0,w,c
  1569   00123E  6ED9               	movwf	fsr2l,c
  1570   001240  6ADA               	clrf	fsr2h,c
  1571   001242  CFDE F006          	movff	postinc2,??_fputc+2
  1572   001246  CFDD F007          	movff	postdec2,??_fputc+3
  1573   00124A  5004               	movf	??_fputc^0,w,c
  1574   00124C  2406               	addwf	(??_fputc+2)^0,w,c
  1575   00124E  6ED9               	movwf	fsr2l,c
  1576   001250  5005               	movf	(??_fputc+1)^0,w,c
  1577   001252  2007               	addwfc	(??_fputc+3)^0,w,c
  1578   001254  6EDA               	movwf	fsr2h,c
  1579   001256  C001  FFDF         	movff	fputc@c,indf2
  1580   00125A  5003               	movf	fputc@fp^0,w,c
  1581   00125C  6ED9               	movwf	fsr2l,c
  1582   00125E  6ADA               	clrf	fsr2h,c
  1583   001260  0E03               	movlw	3
  1584   001262  26D9               	addwf	fsr2l,f,c
  1585   001264  2ADE               	incf	postinc2,f,c
  1586   001266  0E00               	movlw	0
  1587   001268  22DD               	addwfc	postdec2,f,c
  1588   00126A                     l1400:
  1589   00126A  0012               	return		;funcret
  1590   00126C                     __end_of_fputc:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function _putch *****************
  1594 ;; Defined at:
  1595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  c               1    wreg     unsigned char 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  c               1    0[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_fputc
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text6
  1624   0017B6                     __ptext6:
  1625                           	callstack 0
  1626   0017B6                     _putch:
  1627                           	callstack 24
  1628   0017B6  0012               	return		;funcret
  1629   0017B8                     __end_of_putch:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _abs *****************
  1633 ;; Defined at:
  1634 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  a               2    6[COMRAM] int 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2    6[COMRAM] int 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;Total ram usage:        4 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_vfpfcnvrt
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text7
  1663   001630                     __ptext7:
  1664                           	callstack 0
  1665   001630                     _abs:
  1666                           	callstack 25
  1667   001630  BE08               	btfsc	(abs@a+1)^0,7,c
  1668   001632  EF1D  F00B         	goto	u1051
  1669   001636  EF1F  F00B         	goto	u1050
  1670   00163A                     u1051:
  1671   00163A  EF25  F00B         	goto	l1385
  1672   00163E                     u1050:
  1673   00163E  C007  F007         	movff	abs@a,?_abs
  1674   001642  C008  F008         	movff	abs@a+1,?_abs+1
  1675   001646  EF31  F00B         	goto	l1388
  1676   00164A                     l1385:
  1677   00164A  C007  F009         	movff	abs@a,??_abs
  1678   00164E  C008  F00A         	movff	abs@a+1,??_abs+1
  1679   001652  1E09               	comf	??_abs^0,f,c
  1680   001654  1E0A               	comf	(??_abs+1)^0,f,c
  1681   001656  4A09               	infsnz	??_abs^0,f,c
  1682   001658  2A0A               	incf	(??_abs+1)^0,f,c
  1683   00165A  C009  F007         	movff	??_abs,?_abs
  1684   00165E  C00A  F008         	movff	??_abs+1,?_abs+1
  1685   001662                     l1388:
  1686   001662  0012               	return		;funcret
  1687   001664                     __end_of_abs:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function ___awmod *****************
  1691 ;; Defined at:
  1692 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  dividend        2    0[COMRAM] int 
  1695 ;;  divisor         2    2[COMRAM] int 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  sign            1    5[COMRAM] unsigned char 
  1698 ;;  counter         1    4[COMRAM] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2    0[COMRAM] int 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;Total ram usage:        6 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_vfpfcnvrt
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text8
  1723   00126C                     __ptext8:
  1724                           	callstack 0
  1725   00126C                     ___awmod:
  1726                           	callstack 25
  1727   00126C  0E00               	movlw	0
  1728   00126E  6E06               	movwf	___awmod@sign^0,c
  1729   001270  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1730   001272  EF3F  F009         	goto	u950
  1731   001276  EF3D  F009         	goto	u951
  1732   00127A                     u951:
  1733   00127A  EF45  F009         	goto	l2297
  1734   00127E                     u950:
  1735   00127E  6C01               	negf	___awmod@dividend^0,c
  1736   001280  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1737   001282  B0D8               	btfsc	status,0,c
  1738   001284  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1739   001286  0E01               	movlw	1
  1740   001288  6E06               	movwf	___awmod@sign^0,c
  1741   00128A                     l2297:
  1742   00128A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1743   00128C  EF4C  F009         	goto	u960
  1744   001290  EF4A  F009         	goto	u961
  1745   001294                     u961:
  1746   001294  EF50  F009         	goto	l2301
  1747   001298                     u960:
  1748   001298  6C03               	negf	___awmod@divisor^0,c
  1749   00129A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1750   00129C  B0D8               	btfsc	status,0,c
  1751   00129E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1752   0012A0                     l2301:
  1753   0012A0  5003               	movf	___awmod@divisor^0,w,c
  1754   0012A2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1755   0012A4  B4D8               	btfsc	status,2,c
  1756   0012A6  EF57  F009         	goto	u971
  1757   0012AA  EF59  F009         	goto	u970
  1758   0012AE                     u971:
  1759   0012AE  EF7D  F009         	goto	l2317
  1760   0012B2                     u970:
  1761   0012B2  0E01               	movlw	1
  1762   0012B4  6E05               	movwf	___awmod@counter^0,c
  1763   0012B6  EF61  F009         	goto	l2307
  1764   0012BA                     l2305:
  1765   0012BA  90D8               	bcf	status,0,c
  1766   0012BC  3603               	rlcf	___awmod@divisor^0,f,c
  1767   0012BE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1768   0012C0  2A05               	incf	___awmod@counter^0,f,c
  1769   0012C2                     l2307:
  1770   0012C2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1771   0012C4  EF66  F009         	goto	u981
  1772   0012C8  EF68  F009         	goto	u980
  1773   0012CC                     u981:
  1774   0012CC  EF5D  F009         	goto	l2305
  1775   0012D0                     u980:
  1776   0012D0                     l2309:
  1777   0012D0  5003               	movf	___awmod@divisor^0,w,c
  1778   0012D2  5C01               	subwf	___awmod@dividend^0,w,c
  1779   0012D4  5004               	movf	(___awmod@divisor+1)^0,w,c
  1780   0012D6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1781   0012D8  A0D8               	btfss	status,0,c
  1782   0012DA  EF71  F009         	goto	u991
  1783   0012DE  EF73  F009         	goto	u990
  1784   0012E2                     u991:
  1785   0012E2  EF77  F009         	goto	l2313
  1786   0012E6                     u990:
  1787   0012E6  5003               	movf	___awmod@divisor^0,w,c
  1788   0012E8  5E01               	subwf	___awmod@dividend^0,f,c
  1789   0012EA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1790   0012EC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1791   0012EE                     l2313:
  1792   0012EE  90D8               	bcf	status,0,c
  1793   0012F0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1794   0012F2  3203               	rrcf	___awmod@divisor^0,f,c
  1795   0012F4  2E05               	decfsz	___awmod@counter^0,f,c
  1796   0012F6  EF68  F009         	goto	l2309
  1797   0012FA                     l2317:
  1798   0012FA  5006               	movf	___awmod@sign^0,w,c
  1799   0012FC  B4D8               	btfsc	status,2,c
  1800   0012FE  EF83  F009         	goto	u1001
  1801   001302  EF85  F009         	goto	u1000
  1802   001306                     u1001:
  1803   001306  EF89  F009         	goto	l2321
  1804   00130A                     u1000:
  1805   00130A  6C01               	negf	___awmod@dividend^0,c
  1806   00130C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1807   00130E  B0D8               	btfsc	status,0,c
  1808   001310  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1809   001312                     l2321:
  1810   001312  C001  F001         	movff	___awmod@dividend,?___awmod
  1811   001316  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1812   00131A  0012               	return		;funcret
  1813   00131C                     __end_of___awmod:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function ___awdiv *****************
  1817 ;; Defined at:
  1818 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  dividend        2    0[COMRAM] int 
  1821 ;;  divisor         2    2[COMRAM] int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  quotient        2    6[COMRAM] int 
  1824 ;;  sign            1    5[COMRAM] unsigned char 
  1825 ;;  counter         1    4[COMRAM] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  2    0[COMRAM] int 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1839 ;;Total ram usage:        8 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; Hardware stack levels required when called: 1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_vfpfcnvrt
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text9
  1850   0010EE                     __ptext9:
  1851                           	callstack 0
  1852   0010EE                     ___awdiv:
  1853                           	callstack 25
  1854   0010EE  0E00               	movlw	0
  1855   0010F0  6E06               	movwf	___awdiv@sign^0,c
  1856   0010F2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1857   0010F4  EF80  F008         	goto	u890
  1858   0010F8  EF7E  F008         	goto	u891
  1859   0010FC                     u891:
  1860   0010FC  EF86  F008         	goto	l2253
  1861   001100                     u890:
  1862   001100  6C03               	negf	___awdiv@divisor^0,c
  1863   001102  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1864   001104  B0D8               	btfsc	status,0,c
  1865   001106  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1866   001108  0E01               	movlw	1
  1867   00110A  6E06               	movwf	___awdiv@sign^0,c
  1868   00110C                     l2253:
  1869   00110C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1870   00110E  EF8D  F008         	goto	u900
  1871   001112  EF8B  F008         	goto	u901
  1872   001116                     u901:
  1873   001116  EF93  F008         	goto	l2259
  1874   00111A                     u900:
  1875   00111A  6C01               	negf	___awdiv@dividend^0,c
  1876   00111C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1877   00111E  B0D8               	btfsc	status,0,c
  1878   001120  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1879   001122  0E01               	movlw	1
  1880   001124  1A06               	xorwf	___awdiv@sign^0,f,c
  1881   001126                     l2259:
  1882   001126  0E00               	movlw	0
  1883   001128  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1884   00112A  0E00               	movlw	0
  1885   00112C  6E07               	movwf	___awdiv@quotient^0,c
  1886   00112E  5003               	movf	___awdiv@divisor^0,w,c
  1887   001130  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1888   001132  B4D8               	btfsc	status,2,c
  1889   001134  EF9E  F008         	goto	u911
  1890   001138  EFA0  F008         	goto	u910
  1891   00113C                     u911:
  1892   00113C  EFC8  F008         	goto	l2281
  1893   001140                     u910:
  1894   001140  0E01               	movlw	1
  1895   001142  6E05               	movwf	___awdiv@counter^0,c
  1896   001144  EFA8  F008         	goto	l2267
  1897   001148                     l2265:
  1898   001148  90D8               	bcf	status,0,c
  1899   00114A  3603               	rlcf	___awdiv@divisor^0,f,c
  1900   00114C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1901   00114E  2A05               	incf	___awdiv@counter^0,f,c
  1902   001150                     l2267:
  1903   001150  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1904   001152  EFAD  F008         	goto	u921
  1905   001156  EFAF  F008         	goto	u920
  1906   00115A                     u921:
  1907   00115A  EFA4  F008         	goto	l2265
  1908   00115E                     u920:
  1909   00115E                     l2269:
  1910   00115E  90D8               	bcf	status,0,c
  1911   001160  3607               	rlcf	___awdiv@quotient^0,f,c
  1912   001162  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1913   001164  5003               	movf	___awdiv@divisor^0,w,c
  1914   001166  5C01               	subwf	___awdiv@dividend^0,w,c
  1915   001168  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1916   00116A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1917   00116C  A0D8               	btfss	status,0,c
  1918   00116E  EFBB  F008         	goto	u931
  1919   001172  EFBD  F008         	goto	u930
  1920   001176                     u931:
  1921   001176  EFC2  F008         	goto	l2277
  1922   00117A                     u930:
  1923   00117A  5003               	movf	___awdiv@divisor^0,w,c
  1924   00117C  5E01               	subwf	___awdiv@dividend^0,f,c
  1925   00117E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1926   001180  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1927   001182  8007               	bsf	___awdiv@quotient^0,0,c
  1928   001184                     l2277:
  1929   001184  90D8               	bcf	status,0,c
  1930   001186  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1931   001188  3203               	rrcf	___awdiv@divisor^0,f,c
  1932   00118A  2E05               	decfsz	___awdiv@counter^0,f,c
  1933   00118C  EFAF  F008         	goto	l2269
  1934   001190                     l2281:
  1935   001190  5006               	movf	___awdiv@sign^0,w,c
  1936   001192  B4D8               	btfsc	status,2,c
  1937   001194  EFCE  F008         	goto	u941
  1938   001198  EFD0  F008         	goto	u940
  1939   00119C                     u941:
  1940   00119C  EFD4  F008         	goto	l2285
  1941   0011A0                     u940:
  1942   0011A0  6C07               	negf	___awdiv@quotient^0,c
  1943   0011A2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1944   0011A4  B0D8               	btfsc	status,0,c
  1945   0011A6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1946   0011A8                     l2285:
  1947   0011A8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1948   0011AC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1949   0011B0  0012               	return		;funcret
  1950   0011B2                     __end_of___awdiv:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _sendStringSerial4 *****************
  1954 ;; Defined at:
  1955 ;;		line 35 in file "serial.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  string          2    1[COMRAM] PTR unsigned char 
  1958 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1974 ;;Total ram usage:        2 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 2
  1977 ;; This function calls:
  1978 ;;		_sendCharSerial4
  1979 ;; This function is called by:
  1980 ;;		_sendIntSerial4
  1981 ;;		_sendArrayCharSerial4
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text10
  1986   00140E                     __ptext10:
  1987                           	callstack 0
  1988   00140E                     _sendStringSerial4:
  1989                           	callstack 27
  1990   00140E                     
  1991                           ;serial.c: 37:     while(*string != 0){
  1992   00140E  EF1E  F00A         	goto	l2547
  1993   001412                     l2543:
  1994                           
  1995                           ;serial.c: 38:   sendCharSerial4(*string++);
  1996   001412  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1997   001416  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1998   00141A  0E00               	movlw	low (__smallconst shr (0+16))
  1999   00141C  6EF8               	movwf	tblptru,c
  2000   00141E  0E0D               	movlw	(high __ramtop+-1)
  2001   001420  64F7               	cpfsgt	tblptrh,c
  2002   001422  D003               	bra	u1337
  2003   001424  0008               	tblrd		*
  2004   001426  50F5               	movf	tablat,w,c
  2005   001428  D005               	bra	u1330
  2006   00142A                     u1337:
  2007   00142A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2008   00142E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2009   001432  50EF               	movf	indf0,w,c
  2010   001434                     u1330:
  2011   001434  ECB9  F00B         	call	_sendCharSerial4
  2012   001438  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2013   00143A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2014   00143C                     l2547:
  2015                           
  2016                           ;serial.c: 37:     while(*string != 0){
  2017   00143C  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2018   001440  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2019   001444  0E00               	movlw	low (__smallconst shr (0+16))
  2020   001446  6EF8               	movwf	tblptru,c
  2021   001448  0E0D               	movlw	(high __ramtop+-1)
  2022   00144A  64F7               	cpfsgt	tblptrh,c
  2023   00144C  D003               	bra	u1347
  2024   00144E  0008               	tblrd		*
  2025   001450  50F5               	movf	tablat,w,c
  2026   001452  D005               	bra	u1340
  2027   001454                     u1347:
  2028   001454  CFF6 FFE9          	movff	tblptrl,fsr0l
  2029   001458  CFF7 FFEA          	movff	tblptrh,fsr0h
  2030   00145C  50EF               	movf	indf0,w,c
  2031   00145E                     u1340:
  2032   00145E  0900               	iorlw	0
  2033   001460  A4D8               	btfss	status,2,c
  2034   001462  EF35  F00A         	goto	u1351
  2035   001466  EF37  F00A         	goto	u1350
  2036   00146A                     u1351:
  2037   00146A  EF09  F00A         	goto	l2543
  2038   00146E                     u1350:
  2039   00146E  0012               	return		;funcret
  2040   001470                     __end_of_sendStringSerial4:
  2041                           	callstack 0
  2042                           
  2043 ;; *************** function _sendCharSerial4 *****************
  2044 ;; Defined at:
  2045 ;;		line 29 in file "serial.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  charToSend      1    wreg     unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  charToSend      1    0[COMRAM] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;Total ram usage:        1 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_sendStringSerial4
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text11
  2074   001772                     __ptext11:
  2075                           	callstack 0
  2076   001772                     _sendCharSerial4:
  2077                           	callstack 27
  2078                           
  2079                           ;incstack = 0
  2080                           ;sendCharSerial4@charToSend stored from wreg
  2081   001772  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2082   001774                     l401:
  2083   001774  010E               	movlb	14	; () banked
  2084   001776  A537               	btfss	55,2,b	;volatile
  2085   001778  EFC0  F00B         	goto	u481
  2086   00177C  EFC2  F00B         	goto	u480
  2087   001780                     u481:
  2088   001780  EFBA  F00B         	goto	l401
  2089   001784                     u480:
  2090   001784                     
  2091                           ; BSR set to: 14
  2092                           ;serial.c: 31:     TX4REG = charToSend;
  2093   001784  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2094   001788                     
  2095                           ; BSR set to: 14
  2096   001788  0012               	return		;funcret
  2097   00178A                     __end_of_sendCharSerial4:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _initUSART4 *****************
  2101 ;; Defined at:
  2102 ;;		line 5 in file "serial.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text12
  2131   001754                     __ptext12:
  2132                           	callstack 0
  2133   001754                     _initUSART4:
  2134                           	callstack 29
  2135   001754                     
  2136                           ;serial.c: 9:     RC0PPS = 0x12;
  2137   001754  0E12               	movlw	18
  2138   001756  010E               	movlb	14	; () banked
  2139   001758  6F62               	movwf	98,b	;volatile
  2140                           
  2141                           ;serial.c: 10:     RX4PPS = 0x11;
  2142   00175A  0E11               	movlw	17
  2143   00175C  6F15               	movwf	21,b	;volatile
  2144   00175E                     
  2145                           ; BSR set to: 14
  2146                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2147   00175E  97E9               	bcf	233,3,b	;volatile
  2148   001760                     
  2149                           ; BSR set to: 14
  2150                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2151   001760  95E8               	bcf	232,2,b	;volatile
  2152                           
  2153                           ;serial.c: 14:     SP4BRGL = 51;
  2154   001762  0E33               	movlw	51
  2155   001764  6FE5               	movwf	229,b	;volatile
  2156                           
  2157                           ;serial.c: 15:     SP4BRGH = 0;
  2158   001766  0E00               	movlw	0
  2159   001768  6FE6               	movwf	230,b	;volatile
  2160   00176A                     
  2161                           ; BSR set to: 14
  2162                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2163   00176A  89E7               	bsf	231,4,b	;volatile
  2164   00176C                     
  2165                           ; BSR set to: 14
  2166                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2167   00176C  8BE8               	bsf	232,5,b	;volatile
  2168   00176E                     
  2169                           ; BSR set to: 14
  2170                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2171   00176E  8FE7               	bsf	231,7,b	;volatile
  2172   001770                     
  2173                           ; BSR set to: 14
  2174   001770  0012               	return		;funcret
  2175   001772                     __end_of_initUSART4:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _initDCmotorsPWM *****************
  2179 ;; Defined at:
  2180 ;;		line 5 in file "dc_motor.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;Total ram usage:        2 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text13
  2209   00131C                     __ptext13:
  2210                           	callstack 0
  2211   00131C                     _initDCmotorsPWM:
  2212                           	callstack 29
  2213   00131C                     
  2214                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2215   00131C  9485               	bcf	133,2,c	;volatile
  2216                           
  2217                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2218   00131E  9885               	bcf	133,4,c	;volatile
  2219                           
  2220                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2221   001320  9E83               	bcf	131,7,c	;volatile
  2222                           
  2223                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2224   001322  9C87               	bcf	135,6,c	;volatile
  2225                           
  2226                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2227   001324  947D               	bcf	125,2,c	;volatile
  2228                           
  2229                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2230   001326  987D               	bcf	125,4,c	;volatile
  2231                           
  2232                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2233   001328  9E7B               	bcf	123,7,c	;volatile
  2234                           
  2235                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2236   00132A  9C7F               	bcf	127,6,c	;volatile
  2237   00132C                     
  2238                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2239   00132C  0E05               	movlw	5
  2240   00132E  010E               	movlb	14	; () banked
  2241   001330  6F74               	movwf	116,b	;volatile
  2242                           
  2243                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2244   001332  0E06               	movlw	6
  2245   001334  6F76               	movwf	118,b	;volatile
  2246                           
  2247                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2248   001336  0E07               	movlw	7
  2249   001338  6F69               	movwf	105,b	;volatile
  2250                           
  2251                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2252   00133A  0E08               	movlw	8
  2253   00133C  6F88               	movwf	136,b	;volatile
  2254                           
  2255                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2256   00133E  50BD               	movf	189,w,c	;volatile
  2257   001340  0B8F               	andlw	-113
  2258   001342  0940               	iorlw	64
  2259   001344  6EBD               	movwf	189,c	;volatile
  2260                           
  2261                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2262   001346  0EE0               	movlw	-32
  2263   001348  16BE               	andwf	190,f,c	;volatile
  2264                           
  2265                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2266   00134A  50BF               	movf	191,w,c	;volatile
  2267   00134C  0BF0               	andlw	-16
  2268   00134E  0901               	iorlw	1
  2269   001350  6EBF               	movwf	191,c	;volatile
  2270   001352                     
  2271                           ; BSR set to: 14
  2272                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2273   001352  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2274   001356                     
  2275                           ; BSR set to: 14
  2276                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2277   001356  8EBD               	bsf	189,7,c	;volatile
  2278                           
  2279                           ;dc_motor.c: 35:     CCPR1H=0;
  2280   001358  0E00               	movlw	0
  2281   00135A  6EAA               	movwf	170,c	;volatile
  2282                           
  2283                           ;dc_motor.c: 36:     CCPR2H=0;
  2284   00135C  0E00               	movlw	0
  2285   00135E  6EA6               	movwf	166,c	;volatile
  2286                           
  2287                           ;dc_motor.c: 37:     CCPR3H=0;
  2288   001360  0E00               	movlw	0
  2289   001362  010F               	movlb	15	; () banked
  2290   001364  6F25               	movwf	37,b	;volatile
  2291                           
  2292                           ;dc_motor.c: 38:     CCPR4H=0;
  2293   001366  0E00               	movlw	0
  2294   001368  6F21               	movwf	33,b	;volatile
  2295                           
  2296                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2297   00136A  0EFC               	movlw	-4
  2298   00136C  16AD               	andwf	173,f,c	;volatile
  2299                           
  2300                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2301   00136E  0EF3               	movlw	-13
  2302   001370  16AD               	andwf	173,f,c	;volatile
  2303                           
  2304                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2305   001372  0ECF               	movlw	-49
  2306   001374  16AD               	andwf	173,f,c	;volatile
  2307                           
  2308                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2309   001376  0E3F               	movlw	-193
  2310   001378  16AD               	andwf	173,f,c	;volatile
  2311   00137A                     
  2312                           ; BSR set to: 15
  2313                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2314   00137A  88AB               	bsf	171,4,c	;volatile
  2315                           
  2316                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2317   00137C  50AB               	movf	171,w,c	;volatile
  2318   00137E  0BF0               	andlw	-16
  2319   001380  090C               	iorlw	12
  2320   001382  6EAB               	movwf	171,c	;volatile
  2321   001384                     
  2322                           ; BSR set to: 15
  2323                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2324   001384  8EAB               	bsf	171,7,c	;volatile
  2325   001386                     
  2326                           ; BSR set to: 15
  2327                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2328   001386  88A7               	bsf	167,4,c	;volatile
  2329                           
  2330                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2331   001388  50A7               	movf	167,w,c	;volatile
  2332   00138A  0BF0               	andlw	-16
  2333   00138C  090C               	iorlw	12
  2334   00138E  6EA7               	movwf	167,c	;volatile
  2335   001390                     
  2336                           ; BSR set to: 15
  2337                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2338   001390  8EA7               	bsf	167,7,c	;volatile
  2339   001392                     
  2340                           ; BSR set to: 15
  2341                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2342   001392  8926               	bsf	38,4,b	;volatile
  2343                           
  2344                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2345   001394  5126               	movf	38,w,b	;volatile
  2346   001396  0BF0               	andlw	-16
  2347   001398  090C               	iorlw	12
  2348   00139A  6F26               	movwf	38,b	;volatile
  2349   00139C                     
  2350                           ; BSR set to: 15
  2351                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2352   00139C  8F26               	bsf	38,7,b	;volatile
  2353   00139E                     
  2354                           ; BSR set to: 15
  2355                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2356   00139E  8922               	bsf	34,4,b	;volatile
  2357                           
  2358                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2359   0013A0  5122               	movf	34,w,b	;volatile
  2360   0013A2  0BF0               	andlw	-16
  2361   0013A4  090C               	iorlw	12
  2362   0013A6  6F22               	movwf	34,b	;volatile
  2363   0013A8                     
  2364                           ; BSR set to: 15
  2365                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2366   0013A8  8F22               	bsf	34,7,b	;volatile
  2367   0013AA                     
  2368                           ; BSR set to: 15
  2369   0013AA  0012               	return		;funcret
  2370   0013AC                     __end_of_initDCmotorsPWM:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _color_read_Red *****************
  2374 ;; Defined at:
  2375 ;;		line 28 in file "color.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  tmp             2    9[COMRAM] unsigned int 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2    4[COMRAM] unsigned int 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:        7 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 3
  2396 ;; This function calls:
  2397 ;;		_I2C_2_Master_Read
  2398 ;;		_I2C_2_Master_RepStart
  2399 ;;		_I2C_2_Master_Start
  2400 ;;		_I2C_2_Master_Stop
  2401 ;;		_I2C_2_Master_Write
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;;		_getRGBCval
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text14
  2409   0014C6                     __ptext14:
  2410                           	callstack 0
  2411   0014C6                     _color_read_Red:
  2412                           	callstack 27
  2413   0014C6                     
  2414                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2415   0014C6  ECD5  F00B         	call	_I2C_2_Master_Start	;wreg free
  2416                           
  2417                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2418   0014CA  0E52               	movlw	82
  2419   0014CC  ECC5  F00B         	call	_I2C_2_Master_Write
  2420                           
  2421                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2422   0014D0  0EB6               	movlw	182
  2423   0014D2  ECC5  F00B         	call	_I2C_2_Master_Write
  2424                           
  2425                           ;color.c: 34:  I2C_2_Master_RepStart();
  2426   0014D6  ECCB  F00B         	call	_I2C_2_Master_RepStart	;wreg free
  2427                           
  2428                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2429   0014DA  0E53               	movlw	83
  2430   0014DC  ECC5  F00B         	call	_I2C_2_Master_Write
  2431                           
  2432                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2433   0014E0  0E01               	movlw	1
  2434   0014E2  ECD8  F00A         	call	_I2C_2_Master_Read
  2435   0014E6  6E07               	movwf	??_color_read_Red^0,c
  2436   0014E8  5007               	movf	??_color_read_Red^0,w,c
  2437   0014EA  6E0A               	movwf	color_read_Red@tmp^0,c
  2438   0014EC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2439                           
  2440                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2441   0014EE  0E00               	movlw	0
  2442   0014F0  ECD8  F00A         	call	_I2C_2_Master_Read
  2443   0014F4  6E07               	movwf	??_color_read_Red^0,c
  2444   0014F6  5007               	movf	??_color_read_Red^0,w,c
  2445   0014F8  6E09               	movwf	(??_color_read_Red+2)^0,c
  2446   0014FA  6A08               	clrf	(??_color_read_Red+1)^0,c
  2447   0014FC  500A               	movf	color_read_Red@tmp^0,w,c
  2448   0014FE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2449   001500  6E0A               	movwf	color_read_Red@tmp^0,c
  2450   001502  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2451   001504  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2452   001506  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2453                           
  2454                           ;color.c: 38:  I2C_2_Master_Stop();
  2455   001508  ECD0  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2456   00150C                     
  2457                           ;color.c: 39:  return tmp;
  2458   00150C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2459   001510  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2460   001514  0012               	return		;funcret
  2461   001516                     __end_of_color_read_Red:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _I2C_2_Master_RepStart *****************
  2465 ;; Defined at:
  2466 ;;		line 35 in file "i2c.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 2
  2487 ;; This function calls:
  2488 ;;		_I2C_2_Master_Idle
  2489 ;; This function is called by:
  2490 ;;		_color_read_Red
  2491 ;;		_color_read_Blue
  2492 ;;		_color_read_Green
  2493 ;;		_color_read_Clear
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text15
  2498   001796                     __ptext15:
  2499                           	callstack 0
  2500   001796                     _I2C_2_Master_RepStart:
  2501                           	callstack 27
  2502   001796                     
  2503                           ;i2c.c: 37:   I2C_2_Master_Idle();
  2504   001796  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2505   00179A                     
  2506                           ;i2c.c: 38:   SSP2CON2bits.RSEN = 1;
  2507   00179A  010E               	movlb	14	; () banked
  2508   00179C  83DA               	bsf	218,1,b	;volatile
  2509   00179E                     
  2510                           ; BSR set to: 14
  2511   00179E  0012               	return		;funcret
  2512   0017A0                     __end_of_I2C_2_Master_RepStart:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _I2C_2_Master_Read *****************
  2516 ;; Defined at:
  2517 ;;		line 53 in file "i2c.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  ack             1    wreg     unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  ack             1    2[COMRAM] unsigned char 
  2522 ;;  tmp             1    3[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;Total ram usage:        3 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 2
  2539 ;; This function calls:
  2540 ;;		_I2C_2_Master_Idle
  2541 ;; This function is called by:
  2542 ;;		_color_read_Red
  2543 ;;		_color_read_Blue
  2544 ;;		_color_read_Green
  2545 ;;		_color_read_Clear
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text16
  2550   0015B0                     __ptext16:
  2551                           	callstack 0
  2552   0015B0                     _I2C_2_Master_Read:
  2553                           	callstack 27
  2554                           
  2555                           ; BSR set to: 14
  2556                           ;incstack = 0
  2557                           ;I2C_2_Master_Read@ack stored from wreg
  2558   0015B0  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2559   0015B2                     
  2560                           ;i2c.c: 53: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 54: {;i2c.c: 55:  
      +                           unsigned char tmp;;i2c.c: 56:   I2C_2_Master_Idle();
  2561   0015B2  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2562   0015B6                     
  2563                           ;i2c.c: 57:   SSP2CON2bits.RCEN = 1;
  2564   0015B6  010E               	movlb	14	; () banked
  2565   0015B8  87DA               	bsf	218,3,b	;volatile
  2566                           
  2567                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2568   0015BA  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2569   0015BE                     
  2570                           ;i2c.c: 59:   tmp = SSP2BUF;
  2571   0015BE  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2572                           
  2573                           ;i2c.c: 60:   I2C_2_Master_Idle();
  2574   0015C2  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2575   0015C6                     
  2576                           ;i2c.c: 61:   SSP2CON2bits.ACKDT = !ack;
  2577   0015C6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2578   0015C8  B4D8               	btfsc	status,2,c
  2579   0015CA  EFE9  F00A         	goto	u501
  2580   0015CE  EFED  F00A         	goto	u500
  2581   0015D2                     u501:
  2582   0015D2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2583   0015D4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2584   0015D6  EFEE  F00A         	goto	u518
  2585   0015DA                     u500:
  2586   0015DA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2587   0015DC                     u518:
  2588   0015DC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2589   0015DE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2590   0015E0  010E               	movlb	14	; () banked
  2591   0015E2  51DA               	movf	218,w,b	;volatile
  2592   0015E4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2593   0015E6  0BDF               	andlw	-33
  2594   0015E8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2595   0015EA  6FDA               	movwf	218,b	;volatile
  2596   0015EC                     
  2597                           ; BSR set to: 14
  2598                           ;i2c.c: 62:   SSP2CON2bits.ACKEN = 1;
  2599   0015EC  89DA               	bsf	218,4,b	;volatile
  2600   0015EE                     
  2601                           ; BSR set to: 14
  2602                           ;i2c.c: 63:   return tmp;
  2603   0015EE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2604   0015F0                     
  2605                           ; BSR set to: 14
  2606   0015F0  0012               	return		;funcret
  2607   0015F2                     __end_of_I2C_2_Master_Read:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _color_click_init *****************
  2611 ;; Defined at:
  2612 ;;		line 4 in file "color.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;Total ram usage:        1 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 4
  2633 ;; This function calls:
  2634 ;;		_I2C_2_Master_Init
  2635 ;;		_color_writetoaddr
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text17
  2642   001664                     __ptext17:
  2643                           	callstack 0
  2644   001664                     _color_click_init:
  2645                           	callstack 26
  2646   001664                     
  2647                           ;color.c: 7:     I2C_2_Master_Init();
  2648   001664  EC4C  F00B         	call	_I2C_2_Master_Init	;wreg free
  2649   001668                     
  2650                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  2651   001668  0E01               	movlw	1
  2652   00166A  6E03               	movwf	color_writetoaddr@value^0,c
  2653   00166C  0E00               	movlw	0
  2654   00166E  EC9A  F00B         	call	_color_writetoaddr
  2655   001672                     
  2656                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2657   001672  0E3F               	movlw	63
  2658   001674  6E05               	movwf	??_color_click_init^0,c
  2659   001676  0E55               	movlw	85
  2660   001678                     u1977:
  2661   001678  2EE8               	decfsz	wreg,f,c
  2662   00167A  D7FE               	bra	u1977
  2663   00167C  2E05               	decfsz	??_color_click_init^0,f,c
  2664   00167E  D7FC               	bra	u1977
  2665   001680  0000               	nop	
  2666   001682                     
  2667                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  2668   001682  0E03               	movlw	3
  2669   001684  6E03               	movwf	color_writetoaddr@value^0,c
  2670   001686  0E00               	movlw	0
  2671   001688  EC9A  F00B         	call	_color_writetoaddr
  2672   00168C                     
  2673                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  2674   00168C  0ED5               	movlw	213
  2675   00168E  6E03               	movwf	color_writetoaddr@value^0,c
  2676   001690  0E01               	movlw	1
  2677   001692  EC9A  F00B         	call	_color_writetoaddr
  2678   001696  0012               	return		;funcret
  2679   001698                     __end_of_color_click_init:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _color_writetoaddr *****************
  2683 ;; Defined at:
  2684 ;;		line 20 in file "color.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  address         1    wreg     unsigned char 
  2687 ;;  value           1    2[COMRAM] unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  address         1    3[COMRAM] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2699 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;Total ram usage:        2 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 3
  2706 ;; This function calls:
  2707 ;;		_I2C_2_Master_Start
  2708 ;;		_I2C_2_Master_Stop
  2709 ;;		_I2C_2_Master_Write
  2710 ;; This function is called by:
  2711 ;;		_color_click_init
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text18
  2716   001734                     __ptext18:
  2717                           	callstack 0
  2718   001734                     _color_writetoaddr:
  2719                           	callstack 26
  2720                           
  2721                           ;incstack = 0
  2722                           ;color_writetoaddr@address stored from wreg
  2723   001734  6E04               	movwf	color_writetoaddr@address^0,c
  2724   001736                     
  2725                           ;color.c: 21:     I2C_2_Master_Start();
  2726   001736  ECD5  F00B         	call	_I2C_2_Master_Start	;wreg free
  2727                           
  2728                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  2729   00173A  0E52               	movlw	82
  2730   00173C  ECC5  F00B         	call	_I2C_2_Master_Write
  2731                           
  2732                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  2733   001740  5004               	movf	color_writetoaddr@address^0,w,c
  2734   001742  0980               	iorlw	128
  2735   001744  ECC5  F00B         	call	_I2C_2_Master_Write
  2736                           
  2737                           ;color.c: 24:     I2C_2_Master_Write(value);
  2738   001748  5003               	movf	color_writetoaddr@value^0,w,c
  2739   00174A  ECC5  F00B         	call	_I2C_2_Master_Write
  2740                           
  2741                           ;color.c: 25:     I2C_2_Master_Stop();
  2742   00174E  ECD0  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2743   001752  0012               	return		;funcret
  2744   001754                     __end_of_color_writetoaddr:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _I2C_2_Master_Write *****************
  2748 ;; Defined at:
  2749 ;;		line 47 in file "i2c.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  data_byte       1    wreg     unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  data_byte       1    1[COMRAM] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;Total ram usage:        1 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 2
  2770 ;; This function calls:
  2771 ;;		_I2C_2_Master_Idle
  2772 ;; This function is called by:
  2773 ;;		_color_writetoaddr
  2774 ;;		_color_read_Red
  2775 ;;		_color_read_Blue
  2776 ;;		_color_read_Green
  2777 ;;		_color_read_Clear
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text19
  2782   00178A                     __ptext19:
  2783                           	callstack 0
  2784   00178A                     _I2C_2_Master_Write:
  2785                           	callstack 27
  2786                           
  2787                           ;incstack = 0
  2788                           ;I2C_2_Master_Write@data_byte stored from wreg
  2789   00178A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2790   00178C                     
  2791                           ;i2c.c: 47: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 48: {;i2c.c: 49:   I
      +                          2C_2_Master_Idle();
  2792   00178C  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2793   001790                     
  2794                           ;i2c.c: 50:   SSP2BUF = data_byte;
  2795   001790  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2796   001794  0012               	return		;funcret
  2797   001796                     __end_of_I2C_2_Master_Write:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _I2C_2_Master_Stop *****************
  2801 ;; Defined at:
  2802 ;;		line 41 in file "i2c.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		_I2C_2_Master_Idle
  2825 ;; This function is called by:
  2826 ;;		_color_writetoaddr
  2827 ;;		_color_read_Red
  2828 ;;		_color_read_Blue
  2829 ;;		_color_read_Green
  2830 ;;		_color_read_Clear
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text20
  2835   0017A0                     __ptext20:
  2836                           	callstack 0
  2837   0017A0                     _I2C_2_Master_Stop:
  2838                           	callstack 27
  2839   0017A0                     
  2840                           ;i2c.c: 43:   I2C_2_Master_Idle();
  2841   0017A0  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2842   0017A4                     
  2843                           ;i2c.c: 44:   SSP2CON2bits.PEN = 1;
  2844   0017A4  010E               	movlb	14	; () banked
  2845   0017A6  85DA               	bsf	218,2,b	;volatile
  2846   0017A8                     
  2847                           ; BSR set to: 14
  2848   0017A8  0012               	return		;funcret
  2849   0017AA                     __end_of_I2C_2_Master_Stop:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _I2C_2_Master_Start *****************
  2853 ;; Defined at:
  2854 ;;		line 29 in file "i2c.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 2
  2875 ;; This function calls:
  2876 ;;		_I2C_2_Master_Idle
  2877 ;; This function is called by:
  2878 ;;		_color_writetoaddr
  2879 ;;		_color_read_Red
  2880 ;;		_color_read_Blue
  2881 ;;		_color_read_Green
  2882 ;;		_color_read_Clear
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text21
  2887   0017AA                     __ptext21:
  2888                           	callstack 0
  2889   0017AA                     _I2C_2_Master_Start:
  2890                           	callstack 27
  2891   0017AA                     
  2892                           ;i2c.c: 31:   I2C_2_Master_Idle();
  2893   0017AA  EC61  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2894   0017AE                     
  2895                           ;i2c.c: 32:   SSP2CON2bits.SEN = 1;
  2896   0017AE  010E               	movlb	14	; () banked
  2897   0017B0  81DA               	bsf	218,0,b	;volatile
  2898   0017B2                     
  2899                           ; BSR set to: 14
  2900   0017B2  0012               	return		;funcret
  2901   0017B4                     __end_of_I2C_2_Master_Start:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _I2C_2_Master_Idle *****************
  2905 ;; Defined at:
  2906 ;;		line 22 in file "i2c.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_I2C_2_Master_Start
  2931 ;;		_I2C_2_Master_RepStart
  2932 ;;		_I2C_2_Master_Stop
  2933 ;;		_I2C_2_Master_Write
  2934 ;;		_I2C_2_Master_Read
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text22
  2939   0016C2                     __ptext22:
  2940                           	callstack 0
  2941   0016C2                     _I2C_2_Master_Idle:
  2942                           	callstack 27
  2943   0016C2                     l242:
  2944   0016C2  010E               	movlb	14	; () banked
  2945   0016C4  B5D8               	btfsc	216,2,b	;volatile
  2946   0016C6  EF67  F00B         	goto	u361
  2947   0016CA  EF69  F00B         	goto	u360
  2948   0016CE                     u361:
  2949   0016CE  EF61  F00B         	goto	l242
  2950   0016D2                     u360:
  2951   0016D2                     
  2952                           ; BSR set to: 14
  2953   0016D2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2954   0016D6  0E1F               	movlw	31
  2955   0016D8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2956   0016DA  A4D8               	btfss	status,2,c
  2957   0016DC  EF72  F00B         	goto	u371
  2958   0016E0  EF74  F00B         	goto	u370
  2959   0016E4                     u371:
  2960   0016E4  EF61  F00B         	goto	l242
  2961   0016E8                     u370:
  2962   0016E8                     
  2963                           ; BSR set to: 14
  2964   0016E8  0012               	return		;funcret
  2965   0016EA                     __end_of_I2C_2_Master_Idle:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _I2C_2_Master_Init *****************
  2969 ;; Defined at:
  2970 ;;		line 4 in file "i2c.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_color_click_init
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text23
  2999   001698                     __ptext23:
  3000                           	callstack 0
  3001   001698                     _I2C_2_Master_Init:
  3002                           	callstack 28
  3003   001698                     
  3004                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3005   001698  010E               	movlb	14	; () banked
  3006   00169A  51D9               	movf	217,w,b	;volatile
  3007   00169C  0BF0               	andlw	-16
  3008   00169E  0908               	iorlw	8
  3009   0016A0  6FD9               	movwf	217,b	;volatile
  3010   0016A2                     
  3011                           ; BSR set to: 14
  3012                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3013   0016A2  8BD9               	bsf	217,5,b	;volatile
  3014                           
  3015                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3016   0016A4  0E9F               	movlw	159
  3017   0016A6  6FD6               	movwf	214,b	;volatile
  3018   0016A8                     
  3019                           ; BSR set to: 14
  3020                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3021   0016A8  8A84               	bsf	132,5,c	;volatile
  3022   0016AA                     
  3023                           ; BSR set to: 14
  3024                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3025   0016AA  8C84               	bsf	132,6,c	;volatile
  3026   0016AC                     
  3027                           ; BSR set to: 14
  3028                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3029   0016AC  9BA7               	bcf	167,5,b	;volatile
  3030   0016AE                     
  3031                           ; BSR set to: 14
  3032                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3033   0016AE  9DA7               	bcf	167,6,b	;volatile
  3034                           
  3035                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3036   0016B0  0E1D               	movlw	29
  3037   0016B2  6F1D               	movwf	29,b	;volatile
  3038                           
  3039                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3040   0016B4  0E1E               	movlw	30
  3041   0016B6  6F1C               	movwf	28,b	;volatile
  3042                           
  3043                           ;i2c.c: 18:   RD5PPS=0x1C;
  3044   0016B8  0E1C               	movlw	28
  3045   0016BA  6F6F               	movwf	111,b	;volatile
  3046                           
  3047                           ;i2c.c: 19:   RD6PPS=0x1B;
  3048   0016BC  0E1B               	movlw	27
  3049   0016BE  6F70               	movwf	112,b	;volatile
  3050   0016C0                     
  3051                           ; BSR set to: 14
  3052   0016C0  0012               	return		;funcret
  3053   0016C2                     __end_of_I2C_2_Master_Init:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _buggy_lights_init *****************
  3057 ;; Defined at:
  3058 ;;		line 4 in file "buggy_lights.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		None
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text24
  3087   001516                     __ptext24:
  3088                           	callstack 0
  3089   001516                     _buggy_lights_init:
  3090                           	callstack 29
  3091   001516                     
  3092                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3093   001516  9884               	bcf	132,4,c	;volatile
  3094                           
  3095                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3096   001518  9288               	bcf	136,1,c	;volatile
  3097                           
  3098                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3099   00151A  9684               	bcf	132,3,c	;volatile
  3100                           
  3101                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3102   00151C  9086               	bcf	134,0,c	;volatile
  3103                           
  3104                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3105   00151E  9088               	bcf	136,0,c	;volatile
  3106                           
  3107                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  3108   001520  887C               	bsf	124,4,c	;volatile
  3109                           
  3110                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  3111   001522  8280               	bsf	128,1,c	;volatile
  3112                           
  3113                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  3114   001524  867C               	bsf	124,3,c	;volatile
  3115                           
  3116                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  3117   001526  807E               	bsf	126,0,c	;volatile
  3118                           
  3119                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  3120   001528  8080               	bsf	128,0,c	;volatile
  3121                           
  3122                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  3123   00152A  9E84               	bcf	132,7,c	;volatile
  3124                           
  3125                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  3126   00152C  9688               	bcf	136,3,c	;volatile
  3127                           
  3128                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  3129   00152E  8E7C               	bsf	124,7,c	;volatile
  3130                           
  3131                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  3132   001530  8680               	bsf	128,3,c	;volatile
  3133                           
  3134                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  3135   001532  9081               	bcf	129,0,c	;volatile
  3136                           
  3137                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  3138   001534  9483               	bcf	131,2,c	;volatile
  3139                           
  3140                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  3141   001536  9084               	bcf	132,0,c	;volatile
  3142                           
  3143                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  3144   001538  8079               	bsf	121,0,c	;volatile
  3145                           
  3146                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  3147   00153A  847B               	bsf	123,2,c	;volatile
  3148                           
  3149                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  3150   00153C  807C               	bsf	124,0,c	;volatile
  3151                           
  3152                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  3153   00153E  9281               	bcf	129,1,c	;volatile
  3154                           
  3155                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  3156   001540  9C83               	bcf	131,6,c	;volatile
  3157                           
  3158                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  3159   001542  9488               	bcf	136,2,c	;volatile
  3160                           
  3161                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  3162   001544  8279               	bsf	121,1,c	;volatile
  3163                           
  3164                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  3165   001546  8C7B               	bsf	123,6,c	;volatile
  3166                           
  3167                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  3168   001548  8480               	bsf	128,2,c	;volatile
  3169                           
  3170                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  3171   00154A  9287               	bcf	135,1,c	;volatile
  3172                           
  3173                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  3174   00154C  9881               	bcf	129,4,c	;volatile
  3175                           
  3176                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  3177   00154E  9E86               	bcf	134,7,c	;volatile
  3178                           
  3179                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  3180   001550  827F               	bsf	127,1,c	;volatile
  3181                           
  3182                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  3183   001552  8879               	bsf	121,4,c	;volatile
  3184                           
  3185                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  3186   001554  8E7E               	bsf	126,7,c	;volatile
  3187                           
  3188                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  3189   001556  9087               	bcf	135,0,c	;volatile
  3190                           
  3191                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  3192   001558  9E85               	bcf	133,7,c	;volatile
  3193                           
  3194                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  3195   00155A  9681               	bcf	129,3,c	;volatile
  3196                           
  3197                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  3198   00155C  807F               	bsf	127,0,c	;volatile
  3199                           
  3200                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  3201   00155E  8E7D               	bsf	125,7,c	;volatile
  3202                           
  3203                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  3204   001560  8679               	bsf	121,3,c	;volatile
  3205   001562  0012               	return		;funcret
  3206   001564                     __end_of_buggy_lights_init:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _Timer0_init *****************
  3210 ;; Defined at:
  3211 ;;		line 7 in file "timers.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text25
  3240   0016EA                     __ptext25:
  3241                           	callstack 0
  3242   0016EA                     _Timer0_init:
  3243                           	callstack 29
  3244   0016EA                     
  3245                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3246   0016EA  50D6               	movf	214,w,c	;volatile
  3247   0016EC  0B1F               	andlw	-225
  3248   0016EE  0940               	iorlw	64
  3249   0016F0  6ED6               	movwf	214,c	;volatile
  3250   0016F2                     
  3251                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3252   0016F2  88D6               	bsf	214,4,c	;volatile
  3253   0016F4                     
  3254                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3255   0016F4  88D5               	bsf	213,4,c	;volatile
  3256                           
  3257                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3258   0016F6  50D6               	movf	214,w,c	;volatile
  3259   0016F8  0BF0               	andlw	-16
  3260   0016FA  090E               	iorlw	14
  3261   0016FC  6ED6               	movwf	214,c	;volatile
  3262                           
  3263                           ;timers.c: 20:     TMR0H = 0;
  3264   0016FE  0E00               	movlw	0
  3265   001700  6ED4               	movwf	212,c	;volatile
  3266                           
  3267                           ;timers.c: 21:     TMR0L = 0;
  3268   001702  0E00               	movlw	0
  3269   001704  6ED3               	movwf	211,c	;volatile
  3270   001706                     
  3271                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3272   001706  8ED5               	bsf	213,7,c	;volatile
  3273   001708                     
  3274                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3275   001708  010E               	movlb	14	; () banked
  3276   00170A  8B29               	bsf	41,5,b	;volatile
  3277   00170C                     
  3278                           ; BSR set to: 14
  3279                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3280   00170C  8CF2               	bsf	242,6,c	;volatile
  3281   00170E                     
  3282                           ; BSR set to: 14
  3283                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3284   00170E  8EF2               	bsf	242,7,c	;volatile
  3285   001710                     
  3286                           ; BSR set to: 14
  3287   001710  0012               	return		;funcret
  3288   001712                     __end_of_Timer0_init:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _ISR *****************
  3292 ;; Defined at:
  3293 ;;		line 75 in file "timers.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;Total ram usage:        0 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		Interrupt level 2
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	intcode
  3321   000008                     __pintcode:
  3322                           	callstack 0
  3323   000008                     _ISR:
  3324                           	callstack 24
  3325                           
  3326                           ; BSR set to: 14
  3327                           ;incstack = 0
  3328   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3329   00000A                     
  3330                           ;timers.c: 78:     if (PIR0bits.TMR0IF) {
  3331   00000A  010E               	movlb	14	; () banked
  3332   00000C  AB33               	btfss	51,5,b	;volatile
  3333   00000E  EF0B  F000         	goto	i2u154_41
  3334   000012  EF0D  F000         	goto	i2u154_40
  3335   000016                     i2u154_41:
  3336   000016  EF1A  F000         	goto	i2l652
  3337   00001A                     i2u154_40:
  3338   00001A                     
  3339                           ; BSR set to: 14
  3340                           ;timers.c: 79:         if (returning) {
  3341   00001A  505E               	movf	_returning^0,w,c
  3342   00001C  B4D8               	btfsc	status,2,c
  3343   00001E  EF13  F000         	goto	i2u155_41
  3344   000022  EF15  F000         	goto	i2u155_40
  3345   000026                     i2u155_41:
  3346   000026  EF18  F000         	goto	i2l651
  3347   00002A                     i2u155_40:
  3348   00002A                     
  3349                           ; BSR set to: 14
  3350                           ;timers.c: 82:             returnFlag = 1;
  3351   00002A  0E01               	movlw	1
  3352   00002C  0100               	movlb	0	; () banked
  3353   00002E  6F9B               	movwf	_returnFlag& (0+255),b
  3354   000030                     i2l651:
  3355                           
  3356                           ;timers.c: 87:         PIR0bits.TMR0IF = 0;
  3357   000030  010E               	movlb	14	; () banked
  3358   000032  9B33               	bcf	51,5,b	;volatile
  3359   000034                     i2l652:
  3360                           
  3361                           ; BSR set to: 14
  3362   000034  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3363   000036  0011               	retfie		f
  3364   000038                     __end_of_ISR:
  3365                           	callstack 0
  3366                           
  3367                           	psect	rparam
  3368   000000                     
  3369                           	psect	temp
  3370   00005F                     btemp:
  3371                           	callstack 0
  3372   00005F                     	ds	1
  3373   000000                     int$flags	set	btemp
  3374   000000                     wtemp8	set	btemp+1
  3375   000000                     ttemp5	set	btemp+1
  3376   000000                     ttemp6	set	btemp+4
  3377   000000                     ttemp7	set	btemp+8
  3378                           
  3379                           	psect	idloc
  3380                           
  3381                           ;Config register IDLOC0 @ 0x200000
  3382                           ;	unspecified, using default values
  3383   200000                     	org	2097152
  3384   200000  FFFF               	dw	65535
  3385                           
  3386                           ;Config register IDLOC1 @ 0x200002
  3387                           ;	unspecified, using default values
  3388   200002                     	org	2097154
  3389   200002  FFFF               	dw	65535
  3390                           
  3391                           ;Config register IDLOC2 @ 0x200004
  3392                           ;	unspecified, using default values
  3393   200004                     	org	2097156
  3394   200004  FFFF               	dw	65535
  3395                           
  3396                           ;Config register IDLOC3 @ 0x200006
  3397                           ;	unspecified, using default values
  3398   200006                     	org	2097158
  3399   200006  FFFF               	dw	65535
  3400                           
  3401                           ;Config register IDLOC4 @ 0x200008
  3402                           ;	unspecified, using default values
  3403   200008                     	org	2097160
  3404   200008  FFFF               	dw	65535
  3405                           
  3406                           ;Config register IDLOC5 @ 0x20000A
  3407                           ;	unspecified, using default values
  3408   20000A                     	org	2097162
  3409   20000A  FFFF               	dw	65535
  3410                           
  3411                           ;Config register IDLOC6 @ 0x20000C
  3412                           ;	unspecified, using default values
  3413   20000C                     	org	2097164
  3414   20000C  FFFF               	dw	65535
  3415                           
  3416                           ;Config register IDLOC7 @ 0x20000E
  3417                           ;	unspecified, using default values
  3418   20000E                     	org	2097166
  3419   20000E  FFFF               	dw	65535
  3420                           
  3421                           	psect	config
  3422                           
  3423                           ;Config register CONFIG1L @ 0x300000
  3424                           ;	External Oscillator mode Selection bits
  3425                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3426                           ;	Power-up default value for COSC bits
  3427                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3428   300000                     	org	3145728
  3429   300000  AA                 	db	170
  3430                           
  3431                           ;Config register CONFIG1H @ 0x300001
  3432                           ;	unspecified, using default values
  3433                           ;	Clock Out Enable bit
  3434                           ;	CLKOUTEN = 0x1, unprogrammed default
  3435                           ;	Clock Switch Enable bit
  3436                           ;	CSWEN = 0x1, unprogrammed default
  3437                           ;	Fail-Safe Clock Monitor Enable bit
  3438                           ;	FCMEN = 0x1, unprogrammed default
  3439   300001                     	org	3145729
  3440   300001  FF                 	db	255
  3441                           
  3442                           ;Config register CONFIG2L @ 0x300002
  3443                           ;	unspecified, using default values
  3444                           ;	Master Clear Enable bit
  3445                           ;	MCLRE = 0x1, unprogrammed default
  3446                           ;	Power-up Timer Enable bit
  3447                           ;	PWRTE = 0x1, unprogrammed default
  3448                           ;	Low-power BOR enable bit
  3449                           ;	LPBOREN = 0x1, unprogrammed default
  3450                           ;	Brown-out Reset Enable bits
  3451                           ;	BOREN = 0x3, unprogrammed default
  3452   300002                     	org	3145730
  3453   300002  FF                 	db	255
  3454                           
  3455                           ;Config register CONFIG2H @ 0x300003
  3456                           ;	unspecified, using default values
  3457                           ;	Brown Out Reset Voltage selection bits
  3458                           ;	BORV = 0x3, unprogrammed default
  3459                           ;	ZCD Disable bit
  3460                           ;	ZCD = 0x1, unprogrammed default
  3461                           ;	PPSLOCK bit One-Way Set Enable bit
  3462                           ;	PPS1WAY = 0x1, unprogrammed default
  3463                           ;	Stack Full/Underflow Reset Enable bit
  3464                           ;	STVREN = 0x1, unprogrammed default
  3465                           ;	Debugger Enable bit
  3466                           ;	DEBUG = 0x1, unprogrammed default
  3467                           ;	Extended Instruction Set Enable bit
  3468                           ;	XINST = 0x1, unprogrammed default
  3469   300003                     	org	3145731
  3470   300003  FF                 	db	255
  3471                           
  3472                           ;Config register CONFIG3L @ 0x300004
  3473                           ;	WDT Period Select bits
  3474                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3475                           ;	WDT operating mode
  3476                           ;	WDTE = OFF, WDT Disabled
  3477   300004                     	org	3145732
  3478   300004  9F                 	db	159
  3479                           
  3480                           ;Config register CONFIG3H @ 0x300005
  3481                           ;	unspecified, using default values
  3482                           ;	WDT Window Select bits
  3483                           ;	WDTCWS = 0x7, unprogrammed default
  3484                           ;	WDT input clock selector
  3485                           ;	WDTCCS = 0x7, unprogrammed default
  3486   300005                     	org	3145733
  3487   300005  FF                 	db	255
  3488                           
  3489                           ;Config register CONFIG4L @ 0x300006
  3490                           ;	unspecified, using default values
  3491                           ;	Write Protection Block 0
  3492                           ;	WRT0 = 0x1, unprogrammed default
  3493                           ;	Write Protection Block 1
  3494                           ;	WRT1 = 0x1, unprogrammed default
  3495                           ;	Write Protection Block 2
  3496                           ;	WRT2 = 0x1, unprogrammed default
  3497                           ;	Write Protection Block 3
  3498                           ;	WRT3 = 0x1, unprogrammed default
  3499                           ;	Write Protection Block 3
  3500                           ;	WRT4 = 0x1, unprogrammed default
  3501                           ;	Write Protection Block 3
  3502                           ;	WRT5 = 0x1, unprogrammed default
  3503                           ;	Write Protection Block 3
  3504                           ;	WRT6 = 0x1, unprogrammed default
  3505                           ;	Write Protection Block 3
  3506                           ;	WRT7 = 0x1, unprogrammed default
  3507   300006                     	org	3145734
  3508   300006  FF                 	db	255
  3509                           
  3510                           ;Config register CONFIG4H @ 0x300007
  3511                           ;	unspecified, using default values
  3512                           ;	Configuration Register Write Protection bit
  3513                           ;	WRTC = 0x1, unprogrammed default
  3514                           ;	Boot Block Write Protection bit
  3515                           ;	WRTB = 0x1, unprogrammed default
  3516                           ;	Data EEPROM Write Protection bit
  3517                           ;	WRTD = 0x1, unprogrammed default
  3518                           ;	Scanner Enable bit
  3519                           ;	SCANE = 0x1, unprogrammed default
  3520                           ;	Low Voltage Programming Enable bit
  3521                           ;	LVP = 0x1, unprogrammed default
  3522   300007                     	org	3145735
  3523   300007  FF                 	db	255
  3524                           
  3525                           ;Config register CONFIG5L @ 0x300008
  3526                           ;	unspecified, using default values
  3527                           ;	UserNVM Program Memory Code Protection bit
  3528                           ;	CP = 0x1, unprogrammed default
  3529                           ;	DataNVM Memory Code Protection bit
  3530                           ;	CPD = 0x1, unprogrammed default
  3531   300008                     	org	3145736
  3532   300008  FF                 	db	255
  3533                           
  3534                           ;Config register CONFIG5H @ 0x300009
  3535                           ;	unspecified, using default values
  3536   300009                     	org	3145737
  3537   300009  FF                 	db	255
  3538                           
  3539                           ;Config register CONFIG6L @ 0x30000A
  3540                           ;	unspecified, using default values
  3541                           ;	Table Read Protection Block 0
  3542                           ;	EBTR0 = 0x1, unprogrammed default
  3543                           ;	Table Read Protection Block 1
  3544                           ;	EBTR1 = 0x1, unprogrammed default
  3545                           ;	Table Read Protection Block 2
  3546                           ;	EBTR2 = 0x1, unprogrammed default
  3547                           ;	Table Read Protection Block 3
  3548                           ;	EBTR3 = 0x1, unprogrammed default
  3549                           ;	Table Read Protection Block 4
  3550                           ;	EBTR4 = 0x1, unprogrammed default
  3551                           ;	Table Read Protection Block 5
  3552                           ;	EBTR5 = 0x1, unprogrammed default
  3553                           ;	Table Read Protection Block 6
  3554                           ;	EBTR6 = 0x1, unprogrammed default
  3555                           ;	Table Read Protection Block 7
  3556                           ;	EBTR7 = 0x1, unprogrammed default
  3557   30000A                     	org	3145738
  3558   30000A  FF                 	db	255
  3559                           
  3560                           ;Config register CONFIG6H @ 0x30000B
  3561                           ;	unspecified, using default values
  3562                           ;	Boot Block Table Read Protection bit
  3563                           ;	EBTRB = 0x1, unprogrammed default
  3564   30000B                     	org	3145739
  3565   30000B  FF                 	db	255
  3566                           tosu	equ	0xFFF
  3567                           tosh	equ	0xFFE
  3568                           tosl	equ	0xFFD
  3569                           stkptr	equ	0xFFC
  3570                           pclatu	equ	0xFFB
  3571                           pclath	equ	0xFFA
  3572                           pcl	equ	0xFF9
  3573                           tblptru	equ	0xFF8
  3574                           tblptrh	equ	0xFF7
  3575                           tblptrl	equ	0xFF6
  3576                           tablat	equ	0xFF5
  3577                           prodh	equ	0xFF4
  3578                           prodl	equ	0xFF3
  3579                           indf0	equ	0xFEF
  3580                           postinc0	equ	0xFEE
  3581                           postdec0	equ	0xFED
  3582                           preinc0	equ	0xFEC
  3583                           plusw0	equ	0xFEB
  3584                           fsr0h	equ	0xFEA
  3585                           fsr0l	equ	0xFE9
  3586                           wreg	equ	0xFE8
  3587                           indf1	equ	0xFE7
  3588                           postinc1	equ	0xFE6
  3589                           postdec1	equ	0xFE5
  3590                           preinc1	equ	0xFE4
  3591                           plusw1	equ	0xFE3
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           bsr	equ	0xFE0
  3595                           indf2	equ	0xFDF
  3596                           postinc2	equ	0xFDE
  3597                           postdec2	equ	0xFDD
  3598                           preinc2	equ	0xFDC
  3599                           plusw2	equ	0xFDB
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        63
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      94
    BANK0           160      0     141
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2630$buffer	PTR unsigned char  size(2) Largest target is 0

    S2630$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    4725
                                             66 COMRAM    22    22      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3916
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     288
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Red
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      62        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 12:02:12 2024

                 _turn180Delay 00B4                 _color_read_Red 14C6                _trail_timer_low 009C  
                           l31 1562                             l53 1696                             l56 1752  
                           l59 1514                   ___awdiv@sign 0006               _trail_timer_high 00D9  
                          l144 13AA                            l401 1774                            l242 16C2  
                          l410 146E                            l251 179E                            l260 15F0  
                          l404 1788                            l245 16E8                            l413 1732  
                          l254 17A8                            l239 16C0                            l248 17B2  
                          l257 1794                            l392 1770                            l628 1710  
                          l886 11B0                            l899 131A                            u500 15DA  
                          u501 15D2                            u360 16D2                            u361 16CE  
                          u370 16E8                            u371 16E4                            _ISR 0008  
                          u518 15DC                            u480 1784                            u481 1780  
                          u900 111A                            u901 1116                            u910 1140  
                          u911 113C                            u920 115E                            u921 115A  
                          u930 117A                            u931 1176                            u940 11A0  
                          u941 119C                            u950 127E                            u951 127A  
                          u960 1298                            u961 1294                            u890 1100  
                          u970 12B2                            u891 10FC                            u971 12AE  
                          u980 12D0                            u981 12CC                            u990 12E6  
                          u991 12E2                            _abs 1630                   ___awmod@sign 0006  
                          wreg 0FE8                    _squareDelay 00B0                           ?_ISR 0001  
                         l2001 16F4                           l2003 1706                           ?_abs 0007  
                         l2005 1708                           l2007 170C                           l1400 126A  
                         l2009 170E                           l1411 17B6                           l2301 12A0  
                         l1333 15AE                           l2311 12E6                           l2303 12B2  
                         l2321 1312                           l2313 12EE                           l2305 12BA  
                         l2251 1108                           l2315 12F4                           l2307 12C2  
                         l2331 11DC                           l1380 14BC                           l1621 16D2  
                         l2261 112E                           l2253 110C                           l2245 10EE  
                         l2309 12D0                           l2317 12FA                           l2341 163E  
                         l2333 11F8                           l2325 11B2                           l1381 14C4  
                         l1374 0FAC                           l2271 1164                           l2263 1140  
                         l2255 111A                           l2247 10F2                           l2319 130A  
                         l2335 122A                           l2327 11C2                           l1375 0FFE  
                         l2431 0E12                           l2273 117A                           l2265 1148  
                         l2281 1190                           l2257 1122                           l2249 1100  
                         l1385 164A                           l2329 11D2                           l2441 0E5C  
                         l2433 0E38                           l1619 16C2                           l2283 11A0  
                         l2275 1182                           l2267 1150                           l2259 1126  
                         l2291 1270                           l2339 1630                           l2451 0ED6  
                         l2443 0E7C                           l2435 0E40                           l2531 1470  
                         l1388 1662                           l2701 13A8                           l2541 140E  
                         l2285 11A8                           l2277 1184                           l2269 115E  
                         l2293 127E                           l2461 0F48                           l2453 0F06  
                         l2445 0E9C                           l2437 0E4E                           l2429 0E0A  
                         l2533 1474                           l1903 1516                           l1751 16A2  
                         l2543 1412                           l2279 118A                           l2295 1286  
                         l2471 0F98                           l2463 0F58                           l2455 0F22  
                         l2447 0EB4                           l2439 0E52                           l2535 1482  
                         l2551 1570                           l1753 16A8                           l1737 1774  
                         l2545 1438                           l2297 128A                           l2289 126C  
                         l2465 0F68                           l2473 0F9A                           l2457 0F26  
                         l2449 0EBE                           l2481 0FCC                           l2537 149C  
                         l2553 1578                           l2801 1058                           l1755 16AA  
                         l1683 17AA                           l1691 17A0                           l2539 1736  
                         l1771 15BE                           l1763 1796                           l1739 1784  
                         l2547 143C                           l2299 1298                           l2483 0FEE  
                         l2467 0F76                           l2459 0F38                           l2475 0FB8  
                         l2555 1580                           l2811 1078                           l2803 1060  
                         l1757 16AC                           l1749 1698                           l1685 17AE  
                         l1693 17A4                           l1773 15C6                           l1765 179A  
                         l2485 0FF6                           l2477 0FC0                           l2469 0F7E  
                         l2557 1598                           l2549 1564                           l2725 1712  
                         l2821 1086                           l2813 107C                           l2805 106C  
                         l1759 16AE                           l1687 178C                           l2671 168C  
                         l2663 1664                           l1775 15EC                           l1767 15B2  
                         l2559 15A6                           l2727 1728                           l2831 10CE  
                         l2823 1086                           l2815 107E                           l2807 1070  
                         l1689 1790                           l2665 1668                           l1777 15EE  
                         l1769 15B6                           l2673 14C6                           l2681 132C  
                         l2825 1092                           l2817 1080                           l2809 1074  
                         l2667 1672                           l2675 150C                           l2691 1386  
                         l2683 1352                           l2827 109E                           l2819 1084  
                         l2669 1682                           l2693 1390                           l2685 1356  
                         l2829 10AC                           l2781 101C                           l2695 1392  
                         l2687 137A                           l2679 131C                           l1991 176A  
                         l2791 103C                           l2783 1020                           l2775 1000  
                         l2697 139C                           l2689 1384                           l1993 176C  
                         l1985 1754                           l2793 1040                           l2785 1024  
                         l2777 1018                           l2699 139E                           l1995 176E  
                         l1987 175E                           l2795 1044                           l2787 102C  
                         l2779 1018                           l1997 16EA                           l1989 1760  
                         l2797 1048                           l2789 1034                           l1999 16F2  
                         l2799 1050                           STR_1 0E01                           STR_2 0E06  
                         u1000 130A                           u1001 1306                           u1010 11C2  
                         u1011 11BE                           u1020 11D2                           u1021 11CE  
                         u1030 11F8                           u1031 11F4                           u1040 122A  
                         u1041 1226                           u1050 163E                           u1051 163A  
                         u1300 0F68                           u1220 0E38                           u1301 0F64  
                         u1221 0E34                           u1310 0FAC                           u1230 0E7C  
                         u1311 0FA8                           u1231 0E78                           u1240 0E9C  
                         u1320 14BC                           u1241 0E98                           u1321 14B8  
                         u1330 1434                           u1250 0ED2                           u1410 10AC  
                         u1251 0ECC                           u1411 10A8                           u1340 145E  
                         u1260 0ED4                           u1420 10BE                           u1421 10B6  
                         u1350 146E                           u1270 0F38                           u1351 146A  
                         u1271 0F34                           u1280 0F48                   _BAUD4CONbits 0EE9  
                         u1337 142A                           u1281 0F44                           u1290 0F58  
                         u1347 1454                           u1291 0F54                           u1438 10C0  
                         _T2PR 0FBC                           u1957 100A                           u1967 10D8  
                         u1977 1678                           abs@a 0007                           _dbuf 0060  
                         _main 1000                           _prec 0098                           _nout 0094  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005F  
                         start 0038         __end_of_color_read_Red 1516                   ___param_bank 0000  
                        ??_ISR 0001                          ??_abs 0009                 _sendIntSerial4 1712  
                        ?_main 0001             _timer_high_pointer 005D                __end_of___awdiv 11B2  
              __end_of___awmod 131C                ___awdiv@divisor 0003                          i2l651 0030  
                        i2l652 0034                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010  
                 vfpfcnvrt@fmt 000C                          _TMR0H 0FD4                          _TMR0L 0FD3  
      __end_of_sendCharSerial4 178A     __end_of_I2C_2_Master_Start 17B4     __end_of_I2C_2_Master_Write 1796  
                  _turningGear 00C1                          _flags 009A                          _fputc 11B2  
                        _width 0096                          _putch 17B6              _turnRight135Delay 00B6  
                        tablat 0FF5                _turnLeft90Delay 00BC                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 0FD8  
                        wtemp8 0060                __end_of_sprintf 15B0          _I2C_2_Master_RepStart 1796  
              ?_color_read_Red 0005                __initialization 13AC                   __end_of_main 10EE  
       __end_of_sendIntSerial4 1734                         ??_main 0043                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2921 001A  
                       i2l2923 002A                         i2l2919 000A                         _RG6PPS 0E88  
                vfpfcnvrt@done 000F       __end_of_color_click_init 1698                         _RX4PPS 0E15  
                       _TX4REG 0EE4               _turnLeft135Delay 00B8                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001B                      ??___awdiv 0005  
                    ??___awmod 0005                ?_sendIntSerial4 0030                         clear_0 13EA  
                       clear_1 13F6               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       isa$std 0001                ___awmod@counter 0005                         fputc@c 0001  
                 __pdataCOMRAM 005D              _timer_low_pointer 00C0                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 14C6  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0021              _buggy_lights_init 1516  
                   __accesstop 0060        __end_of__initialization 1404         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 15F2            ??_buggy_lights_init 0001                  __end_of_fputc 126C  
                __end_of_putch 17B8            __end_of_Timer0_init 1712                        ??_fputc 0004  
    __end_of_buggy_lights_init 1564                        ??_putch 0001                     __pbssBANK0 0060  
                   __pbssBANK1 0100              _color_writetoaddr 1734                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 1754  
           _I2C_2_Master_Start 17AA                     _initUSART4 1754             _I2C_2_Master_Write 178A  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 16EA        sendStringSerial4@string 0002                        ___awdiv 10EE  
                      ___awmod 126C            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0018                   __psmallconst 0E00                        __pcinit 13AC  
                      __ramtop 0E00                        __ptext0 1000                        __ptext1 1712  
                      __ptext2 1564                        __ptext3 1470                        __ptext4 0E0A  
                      __ptext5 11B2                        __ptext6 17B6                        __ptext7 1630  
                      __ptext8 126C                        __ptext9 10EE                      _T2CONbits 0FBD  
             ___awmod@dividend 0001                      _T2HLTbits 0FBE                  _RxBufWriteCnt 005C  
                      main@idk 0045                        _sprintf 1564           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 1404                        fputc@fp 0003  
            ?_color_click_init 0001             ??_color_click_init 0005               ??_sendIntSerial4 0032  
            __end_of_vfpfcnvrt 1000                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0013                     ??_vfprintf 001B                     _returnFlag 009B  
              _initDCmotorsPWM 131C           sendIntSerial4@string 0032                      _PORTFbits 0F8E  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB                   _EUSART4RXbuf 0080                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001                     main@motorL 0047  
                   main@motorR 0050                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0012  
                  vfpfcnvrt@fp 000B                  __pidataCOMRAM 17B4            start_initialization 13AC  
                  __end_of_ISR 0038                    __end_of_abs 1664                  _TxBufWriteCnt 005A  
             _turnRight90Delay 00BA        __end_of_initDCmotorsPWM 13AC                    vfprintf@fmt 0019  
                  __pdataBANK0 00B0                    __pbssCOMRAM 0059                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 16C2              _I2C_2_Master_Init 1698              _I2C_2_Master_Read 15B0  
            _I2C_2_Master_Stop 17A0                   _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _headbuttDelay 00B2       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C  
                    _rampDelay 00C4              _sendStringSerial4 140E            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                       _PIE0bits 0E29             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       i2u154_40 001A                       i2u154_41 0016  
                     i2u155_40 002A                       i2u155_41 0026                       _PIR0bits 0E33  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0004                       _SSP2STAT 0ED8  
                    _returning 005E                      _vfpfcnvrt 0E0A      __end_of_I2C_2_Master_Idle 16EA  
    __end_of_I2C_2_Master_Init 16C2      __end_of_I2C_2_Master_Read 15F2      __end_of_I2C_2_Master_Stop 17AA  
  I2C_2_Master_Write@data_byte 0002                   _TxBufReadCnt 0059                     vfpfcnvrt@c 0017  
                    copy_data0 13C0      __end_of_sendStringSerial4 1470  __end_of_I2C_2_Master_RepStart 17A0  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001A  
                     __Lrparam 0000                     vfprintf@fp 0018                     ?_vfpfcnvrt 000B  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001E  
                   sprintf@ret 0021                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
           __end_of_initUSART4 1772                       __ptext10 140E                       __ptext11 1772  
                     __ptext20 17A0                       __ptext12 1754                       __ptext21 17AA  
                     __ptext13 131C                       __ptext22 16C2                       __ptext14 14C6  
                     __ptext23 1698                       __ptext15 1796                       __ptext24 1516  
                     __ptext16 15B0                       __ptext25 16EA                       __ptext17 1664  
                     __ptext18 1734                       __ptext19 178A                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     int$flags 005F                       _vfprintf 1470                     _INTCONbits 0FF2  
                     intlevel2 0000                      sprintf@ap 0023                   _topGearRight 00C2  
            _manoeuvre_pointer 00BF                    ??_vfpfcnvrt 000E               _color_click_init 1664  
        sendIntSerial4@integer 0030                    _topGearLeft 00C3                       sprintf@f 0024  
                     sprintf@s 001C                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
              _trail_manoeuvre 00C5                _manoeuvre_count 00BE                     _TX4STAbits 0EE8  
              _sendCharSerial4 1772  
