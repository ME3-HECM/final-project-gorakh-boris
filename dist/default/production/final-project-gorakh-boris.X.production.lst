

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 14:12:56 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 18/08/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F67K40 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   001782                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _timer_high_pointer
    86   001782  AF                 	db	low (_trail_timer_high+19)
    87                           
    88                           	psect	idataBANK0
    89   0014E2                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for _squareDelay
    93   0014E2  012C               	dw	300
    94                           
    95                           ;initializer for _headbuttDelay
    96   0014E4  0046               	dw	70
    97                           
    98                           ;initializer for _turn180Delay
    99   0014E6  01FE               	dw	510
   100                           
   101                           ;initializer for _turnRight135Delay
   102   0014E8  012C               	dw	300
   103                           
   104                           ;initializer for _turnLeft135Delay
   105   0014EA  012C               	dw	300
   106                           
   107                           ;initializer for _turnRight90Delay
   108   0014EC  00AF               	dw	175
   109                           
   110                           ;initializer for _turnLeft90Delay
   111   0014EE  00AF               	dw	175
   112                           
   113                           ;initializer for _manoeuvre_pointer
   114   0014F0  87                 	db	low (_trail_manoeuvre+19)
   115                           
   116                           ;initializer for _timer_low_pointer
   117   0014F1  9B                 	db	low (_trail_timer_low+19)
   118                           
   119                           ;initializer for _turningGear
   120   0014F2  2A                 	db	42
   121                           
   122                           ;initializer for _topGearRight
   123   0014F3  14                 	db	20
   124                           
   125                           ;initializer for _topGearLeft
   126   0014F4  14                 	db	20
   127                           
   128                           ;initializer for _rampDelay
   129   0014F5  08                 	db	8
   130                           
   131                           ;initializer for _trail_manoeuvre
   132   0014F6  65                 	db	101
   133   0014F7  66                 	db	102
   134   0014F8  67                 	db	103
   135   0014F9  68                 	db	104
   136   0014FA  69                 	db	105
   137   0014FB  6A                 	db	106
   138   0014FC  6B                 	db	107
   139   0014FD  6C                 	db	108
   140   0014FE  6D                 	db	109
   141   0014FF  64                 	db	100
   142   001500  65                 	db	101
   143   001501  66                 	db	102
   144   001502  67                 	db	103
   145   001503  68                 	db	104
   146   001504  69                 	db	105
   147   001505  6A                 	db	106
   148   001506  6B                 	db	107
   149   001507  6C                 	db	108
   150   001508  6D                 	db	109
   151   001509  64                 	db	100
   152                           
   153                           ;initializer for _trail_timer_low
   154   00150A  65                 	db	101
   155   00150B  66                 	db	102
   156   00150C  67                 	db	103
   157   00150D  68                 	db	104
   158   00150E  69                 	db	105
   159   00150F  6A                 	db	106
   160   001510  6B                 	db	107
   161   001511  6C                 	db	108
   162   001512  6D                 	db	109
   163   001513  64                 	db	100
   164   001514  65                 	db	101
   165   001515  66                 	db	102
   166   001516  67                 	db	103
   167   001517  68                 	db	104
   168   001518  69                 	db	105
   169   001519  6A                 	db	106
   170   00151A  6B                 	db	107
   171   00151B  6C                 	db	108
   172   00151C  6D                 	db	109
   173   00151D  64                 	db	100
   174                           
   175                           ;initializer for _trail_timer_high
   176   00151E  65                 	db	101
   177   00151F  66                 	db	102
   178   001520  67                 	db	103
   179   001521  68                 	db	104
   180   001522  69                 	db	105
   181   001523  6A                 	db	106
   182   001524  6B                 	db	107
   183   001525  6C                 	db	108
   184   001526  6D                 	db	109
   185   001527  64                 	db	100
   186   001528  65                 	db	101
   187   001529  66                 	db	102
   188   00152A  67                 	db	103
   189   00152B  68                 	db	104
   190   00152C  69                 	db	105
   191   00152D  6A                 	db	106
   192   00152E  6B                 	db	107
   193   00152F  6C                 	db	108
   194   001530  6D                 	db	109
   195   001531  64                 	db	100
   196   000000                     _TX4REG	set	3812
   197   000000                     _RC4STAbits	set	3815
   198   000000                     _SP4BRGH	set	3814
   199   000000                     _LATEbits	set	3965
   200   000000                     _TRISEbits	set	3973
   201   000000                     _LATGbits	set	3967
   202   000000                     _TRISGbits	set	3975
   203   000000                     _LATFbits	set	3966
   204   000000                     _LATHbits	set	3968
   205   000000                     _TRISFbits	set	3974
   206   000000                     _TRISHbits	set	3976
   207   000000                     _SSP2CON2bits	set	3802
   208   000000                     _RX4PPS	set	3605
   209   000000                     _SSP2CLKPPS	set	3612
   210   000000                     _SSP2DATPPS	set	3613
   211   000000                     _RC7PPS	set	3689
   212   000000                     _RE2PPS	set	3700
   213   000000                     _LATAbits	set	3961
   214   000000                     _LATDbits	set	3964
   215   000000                     _TRISDbits	set	3972
   216   000000                     _PORTFbits	set	3982
   217   000000                     _T2PR	set	4028
   218   000000                     _T2CONbits	set	4029
   219   000000                     _CCPR2H	set	4006
   220   000000                     _CCPR1H	set	4010
   221   000000                     _TRISCbits	set	3971
   222   000000                     _TRISAbits	set	3969
   223   000000                     _LATCbits	set	3963
   224   000000                     _RE4PPS	set	3702
   225   000000                     _RG6PPS	set	3720
   226   000000                     _RD5PPS	set	3695
   227   000000                     _ANSELDbits	set	3751
   228   000000                     _SSP2ADD	set	3798
   229   000000                     _SSP2CON1bits	set	3801
   230   000000                     _CCPR4H	set	3873
   231   000000                     _CCPR3H	set	3877
   232   000000                     _TMR0L	set	4051
   233   000000                     _TMR0H	set	4052
   234   000000                     _T0CON0bits	set	4053
   235   000000                     _T0CON1bits	set	4054
   236   000000                     _T2CLKCONbits	set	4031
   237   000000                     _T2HLTbits	set	4030
   238   000000                     _CCP1CONbits	set	4011
   239   000000                     _CCPTMRS0bits	set	4013
   240   000000                     _CCP2CONbits	set	4007
   241   000000                     _CCP3CONbits	set	3878
   242   000000                     _CCP4CONbits	set	3874
   243   000000                     _RC4REG	set	3811
   244   000000                     _SP4BRGL	set	3813
   245   000000                     _TX4STAbits	set	3816
   246   000000                     _BAUD4CONbits	set	3817
   247   000000                     _SSP2CON2	set	3802
   248   000000                     _SSP2STAT	set	3800
   249   000000                     _ANSELFbits	set	3764
   250   000000                     _SSP2BUF	set	3797
   251   000000                     _PIE0bits	set	3625
   252   000000                     _PIE4bits	set	3629
   253   000000                     _PIR4bits	set	3639
   254   000000                     _RC0PPS	set	3682
   255   000000                     _RD6PPS	set	3696
   256   000000                     _PIR0bits	set	3635
   257   000000                     _INTCONbits	set	4082
   258                           
   259                           	psect	smallconst
   260   000E00                     __psmallconst:
   261                           	callstack 0
   262   000E00  00                 	db	0
   263   000E01                     STR_1:
   264                           
   265                           ; BSR set to: 14
   266   000E01  25                 	db	37
   267   000E02  64                 	db	100	;'d'
   268   000E03  20                 	db	32
   269   000E04  0D                 	db	13
   270   000E05  00                 	db	0
   271   000E06                     STR_2:
   272                           
   273                           ; BSR set to: 14
   274   000E06  25                 	db	37
   275   000E07  64                 	db	100	;'d'
   276   000E08  00                 	db	0
   277   000E09  00                 	db	0	; dummy byte at the end
   278   000000                     
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282   001430                     __pcinit:
   283                           	callstack 0
   284   001430                     start_initialization:
   285                           	callstack 0
   286   001430                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Initialize objects allocated to BANK0 (80 bytes)
   290                           ; load TBLPTR registers with __pidataBANK0
   291   001430  0EE2               	movlw	low __pidataBANK0
   292   001432  6EF6               	movwf	tblptrl,c
   293   001434  0E14               	movlw	high __pidataBANK0
   294   001436  6EF7               	movwf	tblptrh,c
   295   001438  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   296   00143A  6EF8               	movwf	tblptru,c
   297   00143C  EE00  F060         	lfsr	0,__pdataBANK0
   298   001440  EE10 F050          	lfsr	1,80
   299   001444                     copy_data0:
   300   001444  0009               	tblrd		*+
   301   001446  CFF5 FFEE          	movff	tablat,postinc0
   302   00144A  50E5               	movf	postdec1,w,c
   303   00144C  50E1               	movf	fsr1l,w,c
   304   00144E  E1FA               	bnz	copy_data0
   305                           
   306                           ; Initialize objects allocated to COMRAM (1 bytes)
   307                           ; load TBLPTR registers with __pidataCOMRAM
   308   001450  0E82               	movlw	low __pidataCOMRAM
   309   001452  6EF6               	movwf	tblptrl,c
   310   001454  0E17               	movlw	high __pidataCOMRAM
   311   001456  6EF7               	movwf	tblptrh,c
   312   001458  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   313   00145A  6EF8               	movwf	tblptru,c
   314   00145C  0009               	tblrd		*+	;fetch initializer
   315   00145E  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   316                           
   317                           ; Clear objects allocated to BANK1 (60 bytes)
   318   001462  EE01  F000         	lfsr	0,__pbssBANK1
   319   001466  0E3C               	movlw	60
   320   001468                     clear_0:
   321   001468  6AEE               	clrf	postinc0,c
   322   00146A  06E8               	decf	wreg,f,c
   323   00146C  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to BANK0 (61 bytes)
   326   00146E  EE00  F0B0         	lfsr	0,__pbssBANK0
   327   001472  0E3D               	movlw	61
   328   001474                     clear_1:
   329   001474  6AEE               	clrf	postinc0,c
   330   001476  06E8               	decf	wreg,f,c
   331   001478  E1FD               	bnz	clear_1
   332                           
   333                           ; Clear objects allocated to COMRAM (4 bytes)
   334   00147A  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   335   00147C  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   336   00147E  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   337   001480  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   338   001482                     end_of_initialization:
   339                           	callstack 0
   340   001482                     __end_of__initialization:
   341                           	callstack 0
   342   001482  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343   001484  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344   001486  0100               	movlb	0
   345   001488  EF00  F008         	goto	_main	;jump to C main() function
   346                           
   347                           	psect	bssCOMRAM
   348   00005A                     __pbssCOMRAM:
   349                           	callstack 0
   350   00005A                     _TxBufReadCnt:
   351                           	callstack 0
   352   00005A                     	ds	1
   353   00005B                     _TxBufWriteCnt:
   354                           	callstack 0
   355   00005B                     	ds	1
   356   00005C                     _RxBufReadCnt:
   357                           	callstack 0
   358   00005C                     	ds	1
   359   00005D                     _RxBufWriteCnt:
   360                           	callstack 0
   361   00005D                     	ds	1
   362                           
   363                           	psect	dataCOMRAM
   364   00005E                     __pdataCOMRAM:
   365                           	callstack 0
   366   00005E                     _timer_high_pointer:
   367                           	callstack 0
   368   00005E                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371   0000B0                     __pbssBANK0:
   372                           	callstack 0
   373   0000B0                     _dbuf:
   374                           	callstack 0
   375   0000B0                     	ds	32
   376   0000D0                     _EUSART4RXbuf:
   377                           	callstack 0
   378   0000D0                     	ds	20
   379   0000E4                     _nout:
   380                           	callstack 0
   381   0000E4                     	ds	2
   382   0000E6                     _width:
   383                           	callstack 0
   384   0000E6                     	ds	2
   385   0000E8                     _prec:
   386                           	callstack 0
   387   0000E8                     	ds	2
   388   0000EA                     _flags:
   389                           	callstack 0
   390   0000EA                     	ds	1
   391   0000EB                     _manoeuvre_count:
   392                           	callstack 0
   393   0000EB                     	ds	1
   394   0000EC                     _backtrack:
   395                           	callstack 0
   396   0000EC                     	ds	1
   397                           
   398                           	psect	dataBANK0
   399   000060                     __pdataBANK0:
   400                           	callstack 0
   401   000060                     _squareDelay:
   402                           	callstack 0
   403   000060                     	ds	2
   404   000062                     _headbuttDelay:
   405                           	callstack 0
   406   000062                     	ds	2
   407   000064                     _turn180Delay:
   408                           	callstack 0
   409   000064                     	ds	2
   410   000066                     _turnRight135Delay:
   411                           	callstack 0
   412   000066                     	ds	2
   413   000068                     _turnLeft135Delay:
   414                           	callstack 0
   415   000068                     	ds	2
   416   00006A                     _turnRight90Delay:
   417                           	callstack 0
   418   00006A                     	ds	2
   419   00006C                     _turnLeft90Delay:
   420                           	callstack 0
   421   00006C                     	ds	2
   422   00006E                     _manoeuvre_pointer:
   423                           	callstack 0
   424   00006E                     	ds	1
   425   00006F                     _timer_low_pointer:
   426                           	callstack 0
   427   00006F                     	ds	1
   428   000070                     _turningGear:
   429                           	callstack 0
   430   000070                     	ds	1
   431   000071                     _topGearRight:
   432                           	callstack 0
   433   000071                     	ds	1
   434   000072                     _topGearLeft:
   435                           	callstack 0
   436   000072                     	ds	1
   437   000073                     _rampDelay:
   438                           	callstack 0
   439   000073                     	ds	1
   440   000074                     _trail_manoeuvre:
   441                           	callstack 0
   442   000074                     	ds	20
   443   000088                     _trail_timer_low:
   444                           	callstack 0
   445   000088                     	ds	20
   446   00009C                     _trail_timer_high:
   447                           	callstack 0
   448   00009C                     	ds	20
   449                           
   450                           	psect	bssBANK1
   451   000100                     __pbssBANK1:
   452                           	callstack 0
   453   000100                     _EUSART4TXbuf:
   454                           	callstack 0
   455   000100                     	ds	60
   456                           
   457                           	psect	cstackCOMRAM
   458   000001                     __pcstackCOMRAM:
   459                           	callstack 0
   460   000001                     ??_I2C_2_Master_Idle:
   461   000001                     ?___awdiv:
   462                           	callstack 0
   463   000001                     ?___awmod:
   464                           	callstack 0
   465   000001                     sendCharSerial4@charToSend:
   466                           	callstack 0
   467   000001                     readTrail@tH:
   468                           	callstack 0
   469   000001                     initDCmotorsPWM@PWMperiod:
   470                           	callstack 0
   471   000001                     ___awdiv@dividend:
   472                           	callstack 0
   473   000001                     ___awmod@dividend:
   474                           	callstack 0
   475   000001                     fputc@c:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x0
   479   000001                     	ds	1
   480   000002                     I2C_2_Master_Write@data_byte:
   481                           	callstack 0
   482   000002                     readTrail@tL:
   483                           	callstack 0
   484   000002                     sendStringSerial4@string:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x1
   488   000002                     	ds	1
   489   000003                     color_writetoaddr@value:
   490                           	callstack 0
   491   000003                     readTrail@man:
   492                           	callstack 0
   493   000003                     fputc@fp:
   494                           	callstack 0
   495   000003                     ___awdiv@divisor:
   496                           	callstack 0
   497   000003                     ___awmod@divisor:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x2
   501   000003                     	ds	1
   502   000004                     ??_fputc:
   503   000004                     color_writetoaddr@address:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x3
   507   000004                     	ds	1
   508   000005                     ??_color_click_init:
   509   000005                     ___awdiv@counter:
   510                           	callstack 0
   511   000005                     ___awmod@counter:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x4
   515   000005                     	ds	1
   516   000006                     ___awdiv@sign:
   517                           	callstack 0
   518   000006                     ___awmod@sign:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x5
   522   000006                     	ds	1
   523   000007                     ?_abs:
   524                           	callstack 0
   525   000007                     ___awdiv@quotient:
   526                           	callstack 0
   527   000007                     abs@a:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x6
   531   000007                     	ds	2
   532   000009                     ??_abs:
   533                           
   534                           ; 1 bytes @ 0x8
   535   000009                     	ds	2
   536   00000B                     ?_vfpfcnvrt:
   537                           	callstack 0
   538   00000B                     vfpfcnvrt@fp:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0xA
   542   00000B                     	ds	1
   543   00000C                     vfpfcnvrt@fmt:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xB
   547   00000C                     	ds	1
   548   00000D                     vfpfcnvrt@ap:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0xC
   552   00000D                     	ds	1
   553   00000E                     ??_vfpfcnvrt:
   554                           
   555                           ; 1 bytes @ 0xD
   556   00000E                     	ds	1
   557   00000F                     vfpfcnvrt@done:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0xE
   561   00000F                     	ds	1
   562   000010                     vfpfcnvrt@cnt:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xF
   566   000010                     	ds	2
   567   000012                     vfpfcnvrt@cp:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x11
   571   000012                     	ds	1
   572   000013                     vfpfcnvrt@convarg:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x12
   576   000013                     	ds	4
   577   000017                     vfpfcnvrt@c:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x16
   581   000017                     	ds	1
   582   000018                     ?_vfprintf:
   583                           	callstack 0
   584   000018                     vfprintf@fp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x17
   588   000018                     	ds	1
   589   000019                     vfprintf@fmt:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x18
   593   000019                     	ds	1
   594   00001A                     vfprintf@ap:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x19
   598   00001A                     	ds	1
   599   00001B                     vfprintf@cfmt:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1A
   603   00001B                     	ds	1
   604   00001C                     ?_sprintf:
   605                           	callstack 0
   606   00001C                     sprintf@s:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x1B
   610   00001C                     	ds	2
   611   00001E                     sprintf@fmt:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x1D
   615   00001E                     	ds	3
   616   000021                     sprintf@ret:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x20
   620   000021                     	ds	2
   621   000023                     sprintf@ap:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x22
   625   000023                     	ds	1
   626   000024                     sprintf@f:
   627                           	callstack 0
   628                           
   629                           ; 12 bytes @ 0x23
   630   000024                     	ds	12
   631   000030                     sendIntSerial4@integer:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2F
   635   000030                     	ds	2
   636   000032                     sendIntSerial4@string:
   637                           	callstack 0
   638                           
   639                           ; 17 bytes @ 0x31
   640   000032                     	ds	17
   641   000043                     ??_main:
   642                           
   643                           ; 1 bytes @ 0x42
   644   000043                     	ds	2
   645   000045                     main@timerH:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x44
   649   000045                     	ds	1
   650   000046                     main@timerL:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x45
   654   000046                     	ds	1
   655   000047                     main@mann:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x46
   659   000047                     	ds	1
   660   000048                     main@motorL:
   661                           	callstack 0
   662                           
   663                           ; 9 bytes @ 0x47
   664   000048                     	ds	9
   665   000051                     main@motorR:
   666                           	callstack 0
   667                           
   668                           ; 9 bytes @ 0x50
   669   000051                     	ds	9
   670                           
   671 ;;
   672 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   673 ;;
   674 ;; *************** function _main *****************
   675 ;; Defined at:
   676 ;;		line 26 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  motorR          9   80[COMRAM] struct DC_motor
   681 ;;  motorL          9   71[COMRAM] struct DC_motor
   682 ;;  PWMcycle        2    0        unsigned int 
   683 ;;  mann            1   70[COMRAM] unsigned char 
   684 ;;  timerL          1   69[COMRAM] unsigned char 
   685 ;;  timerH          1   68[COMRAM] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;Total ram usage:       23 bytes
   700 ;; Hardware stack levels required when called: 7
   701 ;; This function calls:
   702 ;;		_Timer0_init
   703 ;;		_buggy_lights_init
   704 ;;		_color_click_init
   705 ;;		_initDCmotorsPWM
   706 ;;		_initUSART4
   707 ;;		_readTrail
   708 ;;		_sendIntSerial4
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715   001000                     __ptext0:
   716                           	callstack 0
   717   001000                     _main:
   718                           	callstack 24
   719   001000                     
   720                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   721   001000  0E52               	movlw	82
   722   001002  6E44               	movwf	(??_main+1)^0,c
   723   001004  0E2B               	movlw	43
   724   001006  6E43               	movwf	??_main^0,c
   725   001008  0E00               	movlw	0
   726   00100A                     u1837:
   727   00100A  2EE8               	decfsz	wreg,f,c
   728   00100C  D7FE               	bra	u1837
   729   00100E  2E43               	decfsz	??_main^0,f,c
   730   001010  D7FC               	bra	u1837
   731   001012  2E44               	decfsz	(??_main+1)^0,f,c
   732   001014  D7FA               	bra	u1837
   733   001016  D000               	nop2	
   734   001018                     
   735                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   736   001018  0E00               	movlw	0
   737   00101A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   738   00101C  0E63               	movlw	99
   739   00101E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   740   001020  EC9F  F009         	call	_initDCmotorsPWM	;wreg free
   741   001024                     
   742                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   743   001024  0E00               	movlw	0
   744   001026  6E48               	movwf	main@motorL^0,c
   745   001028                     
   746                           ;main.c: 35:     motorL.direction = 1;
   747   001028  0E01               	movlw	1
   748   00102A  6E49               	movwf	(main@motorL+1)^0,c
   749   00102C                     
   750                           ;main.c: 36:     motorL.brakemode = 1;
   751   00102C  0E01               	movlw	1
   752   00102E  6E4A               	movwf	(main@motorL+2)^0,c
   753   001030                     
   754                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   755   001030  0E00               	movlw	0
   756   001032  6E4C               	movwf	(main@motorL+4)^0,c
   757   001034  0E63               	movlw	99
   758   001036  6E4B               	movwf	(main@motorL+3)^0,c
   759   001038                     
   760                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   761   001038  0EAA               	movlw	170
   762   00103A  6E4D               	movwf	(main@motorL+5)^0,c
   763   00103C  0E0F               	movlw	15
   764   00103E  6E4E               	movwf	(main@motorL+6)^0,c
   765   001040                     
   766                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   767   001040  0EA6               	movlw	166
   768   001042  6E4F               	movwf	(main@motorL+7)^0,c
   769   001044  0E0F               	movlw	15
   770   001046  6E50               	movwf	(main@motorL+8)^0,c
   771   001048                     
   772                           ;main.c: 41:     motorR.power = 0;
   773   001048  0E00               	movlw	0
   774   00104A  6E51               	movwf	main@motorR^0,c
   775   00104C                     
   776                           ;main.c: 42:     motorR.direction = 1;
   777   00104C  0E01               	movlw	1
   778   00104E  6E52               	movwf	(main@motorR+1)^0,c
   779   001050                     
   780                           ;main.c: 43:     motorR.brakemode = 1;
   781   001050  0E01               	movlw	1
   782   001052  6E53               	movwf	(main@motorR+2)^0,c
   783   001054                     
   784                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   785   001054  0E00               	movlw	0
   786   001056  6E55               	movwf	(main@motorR+4)^0,c
   787   001058  0E63               	movlw	99
   788   00105A  6E54               	movwf	(main@motorR+3)^0,c
   789   00105C                     
   790                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   791   00105C  0E25               	movlw	37
   792   00105E  6E56               	movwf	(main@motorR+5)^0,c
   793   001060  0E0F               	movlw	15
   794   001062  6E57               	movwf	(main@motorR+6)^0,c
   795   001064                     
   796                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   797   001064  0E21               	movlw	33
   798   001066  6E58               	movwf	(main@motorR+7)^0,c
   799   001068  0E0F               	movlw	15
   800   00106A  6E59               	movwf	(main@motorR+8)^0,c
   801   00106C                     
   802                           ;main.c: 48:     buggy_lights_init();
   803   00106C  EC99  F00A         	call	_buggy_lights_init	;wreg free
   804   001070                     
   805                           ;main.c: 49:     color_click_init();
   806   001070  EC1D  F00B         	call	_color_click_init	;wreg free
   807   001074                     
   808                           ;main.c: 50:     initUSART4();
   809   001074  EC95  F00B         	call	_initUSART4	;wreg free
   810   001078                     
   811                           ;main.c: 51:     Timer0_init();
   812   001078  EC60  F00B         	call	_Timer0_init	;wreg free
   813   00107C                     
   814                           ;main.c: 55:         TRISFbits.TRISF2 = 1;
   815   00107C  8486               	bsf	134,2,c	;volatile
   816   00107E                     
   817                           ;main.c: 56:         TRISFbits.TRISF3 = 1;
   818   00107E  8686               	bsf	134,3,c	;volatile
   819   001080                     
   820                           ;main.c: 58:         ANSELFbits.ANSELF2 = 0;
   821   001080  010E               	movlb	14	; () banked
   822   001082  95B4               	bcf	180,2,b	;volatile
   823   001084                     
   824                           ; BSR set to: 14
   825                           ;main.c: 59:         ANSELFbits.ANSELF3 = 0;
   826   001084  97B4               	bcf	180,3,b	;volatile
   827   001086                     
   828                           ; BSR set to: 14
   829                           ;main.c: 71:     unsigned char timerH = 0;
   830   001086  0E00               	movlw	0
   831   001088  6E45               	movwf	main@timerH^0,c
   832   00108A                     
   833                           ; BSR set to: 14
   834                           ;main.c: 72:     unsigned char timerL = 0;
   835   00108A  0E00               	movlw	0
   836   00108C  6E46               	movwf	main@timerL^0,c
   837   00108E                     
   838                           ; BSR set to: 14
   839                           ;main.c: 73:     unsigned char mann = 0;
   840   00108E  0E00               	movlw	0
   841   001090  6E47               	movwf	main@mann^0,c
   842   001092                     l2622:
   843                           
   844                           ;main.c: 78:         if (!PORTFbits.RF2) {
   845   001092  B48E               	btfsc	142,2,c	;volatile
   846   001094  EF4E  F008         	goto	u1351
   847   001098  EF50  F008         	goto	u1350
   848   00109C                     u1351:
   849   00109C  EF69  F008         	goto	l2628
   850   0010A0                     u1350:
   851   0010A0                     
   852                           ;main.c: 80:             readTrail(&timerH, &timerL, &mann);
   853   0010A0  0E45               	movlw	low main@timerH
   854   0010A2  6E01               	movwf	readTrail@tH^0,c
   855   0010A4  0E46               	movlw	low main@timerL
   856   0010A6  6E02               	movwf	readTrail@tL^0,c
   857   0010A8  0E47               	movlw	low main@mann
   858   0010AA  6E03               	movwf	readTrail@man^0,c
   859   0010AC  ECE6  F00A         	call	_readTrail	;wreg free
   860   0010B0                     
   861                           ;main.c: 81:             LATDbits.LATD7 = !LATDbits.LATD7;
   862   0010B0  AE7C               	btfss	124,7,c	;volatile
   863   0010B2  EF5D  F008         	goto	u1361
   864   0010B6  EF61  F008         	goto	u1360
   865   0010BA                     u1361:
   866   0010BA  6A43               	clrf	??_main^0,c
   867   0010BC  2A43               	incf	??_main^0,f,c
   868   0010BE  EF62  F008         	goto	u1378
   869   0010C2                     u1360:
   870   0010C2  6A43               	clrf	??_main^0,c
   871   0010C4                     u1378:
   872   0010C4  3243               	rrcf	??_main^0,f,c
   873   0010C6  3243               	rrcf	??_main^0,f,c
   874   0010C8  507C               	movf	124,w,c	;volatile
   875   0010CA  1843               	xorwf	??_main^0,w,c
   876   0010CC  0B7F               	andlw	-129
   877   0010CE  1843               	xorwf	??_main^0,w,c
   878   0010D0  6E7C               	movwf	124,c	;volatile
   879   0010D2                     l2628:
   880                           
   881                           ;main.c: 86:         sendIntSerial4(timerH);
   882   0010D2  C045  F030         	movff	main@timerH,sendIntSerial4@integer
   883   0010D6  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
   884   0010D8  EC74  F00B         	call	_sendIntSerial4	;wreg free
   885   0010DC                     
   886                           ;main.c: 87:         sendIntSerial4(timerL);
   887   0010DC  C046  F030         	movff	main@timerL,sendIntSerial4@integer
   888   0010E0  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
   889   0010E2  EC74  F00B         	call	_sendIntSerial4	;wreg free
   890   0010E6                     
   891                           ;main.c: 88:         sendIntSerial4(mann);
   892   0010E6  C047  F030         	movff	main@mann,sendIntSerial4@integer
   893   0010EA  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
   894   0010EC  EC74  F00B         	call	_sendIntSerial4	;wreg free
   895   0010F0                     
   896                           ;main.c: 89:         _delay((unsigned long)((500)*(64000000/4000.0)));
   897   0010F0  0E29               	movlw	41
   898   0010F2  6E44               	movwf	(??_main+1)^0,c
   899   0010F4  0E96               	movlw	150
   900   0010F6  6E43               	movwf	??_main^0,c
   901   0010F8  0E7F               	movlw	127
   902   0010FA                     u1847:
   903   0010FA  2EE8               	decfsz	wreg,f,c
   904   0010FC  D7FE               	bra	u1847
   905   0010FE  2E43               	decfsz	??_main^0,f,c
   906   001100  D7FC               	bra	u1847
   907   001102  2E44               	decfsz	(??_main+1)^0,f,c
   908   001104  D7FA               	bra	u1847
   909   001106  0000               	nop	
   910   001108  EF49  F008         	goto	l2622
   911   00110C  EF10  F000         	goto	start
   912   001110                     __end_of_main:
   913                           	callstack 0
   914                           
   915 ;; *************** function _sendIntSerial4 *****************
   916 ;; Defined at:
   917 ;;		line 43 in file "serial.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  integer         2   47[COMRAM] int 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  string         17   49[COMRAM] unsigned char [17]
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   932 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   934 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   935 ;;Total ram usage:       19 bytes
   936 ;; Hardware stack levels used: 1
   937 ;; Hardware stack levels required when called: 6
   938 ;; This function calls:
   939 ;;		_sendStringSerial4
   940 ;;		_sprintf
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text1
   947   0016E8                     __ptext1:
   948                           	callstack 0
   949   0016E8                     _sendIntSerial4:
   950                           	callstack 24
   951   0016E8                     
   952                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   953   0016E8  0E32               	movlw	low sendIntSerial4@string
   954   0016EA  6E1C               	movwf	sprintf@s^0,c
   955   0016EC  6A1D               	clrf	(sprintf@s+1)^0,c
   956   0016EE  0E01               	movlw	low STR_1
   957   0016F0  6E1E               	movwf	sprintf@fmt^0,c
   958   0016F2  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   959   0016F6  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   960   0016FA  ECC0  F00A         	call	_sprintf	;wreg free
   961   0016FE                     
   962                           ;serial.c: 46:     sendStringSerial4(string);
   963   0016FE  0E32               	movlw	low sendIntSerial4@string
   964   001700  6E02               	movwf	sendStringSerial4@string^0,c
   965   001702  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   966   001704  ECE7  F009         	call	_sendStringSerial4	;wreg free
   967   001708  0012               	return		;funcret
   968   00170A                     __end_of_sendIntSerial4:
   969                           	callstack 0
   970                           
   971 ;; *************** function _sprintf *****************
   972 ;; Defined at:
   973 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  s               2   27[COMRAM] PTR unsigned char 
   976 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   977 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   978 ;;		 -> STR_3(3), STR_1(5), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  f              12   35[COMRAM] struct _IO_FILE
   981 ;;  ret             2   32[COMRAM] int 
   982 ;;  ap              1   34[COMRAM] PTR void [1]
   983 ;;		 -> ?_sprintf(2), 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2   27[COMRAM] int 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   993 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;Total ram usage:       20 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 5
  1000 ;; This function calls:
  1001 ;;		_vfprintf
  1002 ;; This function is called by:
  1003 ;;		_sendIntSerial4
  1004 ;;		_sendArrayCharSerial4
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text2
  1009   001580                     __ptext2:
  1010                           	callstack 0
  1011   001580                     _sprintf:
  1012                           	callstack 24
  1013   001580  0E1F               	movlw	low (?_sprintf+3)
  1014   001582  6E23               	movwf	sprintf@ap^0,c
  1015   001584  C01C  F024         	movff	sprintf@s,sprintf@f
  1016   001588  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
  1017   00158C  0E00               	movlw	0
  1018   00158E  6E28               	movwf	(sprintf@f+4)^0,c
  1019   001590  0E00               	movlw	0
  1020   001592  6E27               	movwf	(sprintf@f+3)^0,c
  1021   001594  0E00               	movlw	0
  1022   001596  6E2F               	movwf	(sprintf@f+11)^0,c
  1023   001598  0E00               	movlw	0
  1024   00159A  6E2E               	movwf	(sprintf@f+10)^0,c
  1025   00159C  0E24               	movlw	low sprintf@f
  1026   00159E  6E18               	movwf	vfprintf@fp^0,c
  1027   0015A0  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  1028   0015A4  0E23               	movlw	low sprintf@ap
  1029   0015A6  6E1A               	movwf	vfprintf@ap^0,c
  1030   0015A8  EC46  F00A         	call	_vfprintf	;wreg free
  1031   0015AC  C018  F021         	movff	?_vfprintf,sprintf@ret
  1032   0015B0  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
  1033   0015B4  5027               	movf	(sprintf@f+3)^0,w,c
  1034   0015B6  241C               	addwf	sprintf@s^0,w,c
  1035   0015B8  6ED9               	movwf	fsr2l,c
  1036   0015BA  5028               	movf	(sprintf@f+4)^0,w,c
  1037   0015BC  201D               	addwfc	(sprintf@s+1)^0,w,c
  1038   0015BE  6EDA               	movwf	fsr2h,c
  1039   0015C0  6ADF               	clrf	indf2,c
  1040   0015C2  C021  F01C         	movff	sprintf@ret,?_sprintf
  1041   0015C6  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1042   0015CA  0012               	return		;funcret
  1043   0015CC                     __end_of_sprintf:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _vfprintf *****************
  1047 ;; Defined at:
  1048 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1051 ;;		 -> sprintf@f(12), 
  1052 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1053 ;;		 -> STR_3(3), STR_1(5), 
  1054 ;;  ap              1   25[COMRAM] PTR PTR void 
  1055 ;;		 -> sprintf@ap(1), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1058 ;;		 -> STR_3(3), STR_1(5), 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2   23[COMRAM] int 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1068 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;Total ram usage:        4 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 4
  1075 ;; This function calls:
  1076 ;;		_vfpfcnvrt
  1077 ;; This function is called by:
  1078 ;;		_sprintf
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text3
  1083   00148C                     __ptext3:
  1084                           	callstack 0
  1085   00148C                     _vfprintf:
  1086                           	callstack 24
  1087   00148C                     
  1088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1089   00148C  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1090   001490                     
  1091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1092   001490  0E00               	movlw	0
  1093   001492  0100               	movlb	0	; () banked
  1094   001494  6FE5               	movwf	(_nout+1)& (0+255),b
  1095   001496  0E00               	movlw	0
  1096   001498  6FE4               	movwf	_nout& (0+255),b
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1099   00149A  EF5C  F00A         	goto	l2340
  1100   00149E                     l2338:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1104   00149E  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1105   0014A2  0E1B               	movlw	low vfprintf@cfmt
  1106   0014A4  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1107   0014A6  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1108   0014AA  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1109   0014AE  500B               	movf	?_vfpfcnvrt^0,w,c
  1110   0014B0  0100               	movlb	0	; () banked
  1111   0014B2  27E4               	addwf	_nout& (0+255),f,b
  1112   0014B4  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1113   0014B6  23E5               	addwfc	(_nout+1)& (0+255),f,b
  1114   0014B8                     l2340:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1118   0014B8  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1119   0014BC                     	if	1	;There is more than 1 active tblptr byte
  1120   0014BC  0E0E               	movlw	high __smallconst
  1121   0014BE  6EF7               	movwf	tblptrh,c
  1122   0014C0                     	endif
  1123   0014C0                     	if	0	;tblptru may be non-zero
  1124   0014C0                     	endif
  1125   0014C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1126   0014C0  0E00               	movlw	low (__smallconst shr (0+16))
  1127   0014C2  6EF8               	movwf	tblptru,c
  1128   0014C4                     	endif
  1129   0014C4  0008               	tblrd		*
  1130   0014C6  50F5               	movf	tablat,w,c
  1131   0014C8  0900               	iorlw	0
  1132   0014CA  A4D8               	btfss	status,2,c
  1133   0014CC  EF6A  F00A         	goto	u1101
  1134   0014D0  EF6C  F00A         	goto	u1100
  1135   0014D4                     u1101:
  1136   0014D4  EF4F  F00A         	goto	l2338
  1137   0014D8                     u1100:
  1138   0014D8                     
  1139                           ; BSR set to: 0
  1140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1141   0014D8  C0E4  F018         	movff	_nout,?_vfprintf
  1142   0014DC  C0E5  F019         	movff	_nout+1,?_vfprintf+1
  1143   0014E0                     
  1144                           ; BSR set to: 0
  1145   0014E0  0012               	return		;funcret
  1146   0014E2                     __end_of_vfprintf:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _vfpfcnvrt *****************
  1150 ;; Defined at:
  1151 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1154 ;;		 -> sprintf@f(12), 
  1155 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1156 ;;		 -> vfprintf@cfmt(1), 
  1157 ;;  ap              1   12[COMRAM] PTR PTR void 
  1158 ;;		 -> sprintf@ap(1), 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  convarg         4   18[COMRAM] struct .
  1161 ;;  cnt             2   15[COMRAM] int 
  1162 ;;  c               1   22[COMRAM] unsigned char 
  1163 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1164 ;;		 -> STR_3(3), STR_1(5), 
  1165 ;;  done            1   14[COMRAM] _Bool 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  2   10[COMRAM] int 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1175 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1176 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;Total ram usage:       13 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 3
  1182 ;; This function calls:
  1183 ;;		___awdiv
  1184 ;;		___awmod
  1185 ;;		_abs
  1186 ;;		_fputc
  1187 ;; This function is called by:
  1188 ;;		_vfprintf
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text4
  1193   000E0A                     __ptext4:
  1194                           	callstack 0
  1195   000E0A                     _vfpfcnvrt:
  1196                           	callstack 24
  1197   000E0A                     
  1198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1199   000E0A  0E00               	movlw	0
  1200   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1201   000E0E  0E00               	movlw	0
  1202   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1203   000E12                     
  1204                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1205   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1206   000E14  6ED9               	movwf	fsr2l,c
  1207   000E16  6ADA               	clrf	fsr2h,c
  1208   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1209   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1210   000E1C  0E0E               	movlw	high __smallconst
  1211   000E1E  6EF7               	movwf	tblptrh,c
  1212   000E20                     	endif
  1213   000E20                     	if	0	;tblptru may be non-zero
  1214   000E20                     	endif
  1215   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1216   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1217   000E22  6EF8               	movwf	tblptru,c
  1218   000E24                     	endif
  1219   000E24  0008               	tblrd		*
  1220   000E26  50F5               	movf	tablat,w,c
  1221   000E28  0A25               	xorlw	37
  1222   000E2A  A4D8               	btfss	status,2,c
  1223   000E2C  EF1A  F007         	goto	u981
  1224   000E30  EF1C  F007         	goto	u980
  1225   000E34                     u981:
  1226   000E34  EFE6  F007         	goto	l2310
  1227   000E38                     u980:
  1228   000E38                     
  1229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1230   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1231   000E3A  6ED9               	movwf	fsr2l,c
  1232   000E3C  6ADA               	clrf	fsr2h,c
  1233   000E3E  2ADF               	incf	indf2,f,c
  1234   000E40                     
  1235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1236   000E40  0E00               	movlw	0
  1237   000E42  0100               	movlb	0	; () banked
  1238   000E44  6FE7               	movwf	(_width+1)& (0+255),b
  1239   000E46  0E00               	movlw	0
  1240   000E48  6FE6               	movwf	_width& (0+255),b
  1241   000E4A  C0E6  F0EA         	movff	_width,_flags
  1242   000E4E                     
  1243                           ; BSR set to: 0
  1244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1245   000E4E  69E8               	setf	_prec& (0+255),b
  1246   000E50  69E9               	setf	(_prec+1)& (0+255),b
  1247   000E52                     
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1250   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1251   000E54  6ED9               	movwf	fsr2l,c
  1252   000E56  6ADA               	clrf	fsr2h,c
  1253   000E58  50DF               	movf	indf2,w,c
  1254   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1255   000E5C                     
  1256                           ; BSR set to: 0
  1257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1258   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1259   000E60                     	if	1	;There is more than 1 active tblptr byte
  1260   000E60  0E0E               	movlw	high __smallconst
  1261   000E62  6EF7               	movwf	tblptrh,c
  1262   000E64                     	endif
  1263   000E64                     	if	0	;tblptru may be non-zero
  1264   000E64                     	endif
  1265   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1266   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1267   000E66  6EF8               	movwf	tblptru,c
  1268   000E68                     	endif
  1269   000E68  0008               	tblrd		*
  1270   000E6A  50F5               	movf	tablat,w,c
  1271   000E6C  0A64               	xorlw	100
  1272   000E6E  B4D8               	btfsc	status,2,c
  1273   000E70  EF3C  F007         	goto	u991
  1274   000E74  EF3E  F007         	goto	u990
  1275   000E78                     u991:
  1276   000E78  EF4E  F007         	goto	l2274
  1277   000E7C                     u990:
  1278   000E7C                     
  1279                           ; BSR set to: 0
  1280   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1281   000E80                     	if	1	;There is more than 1 active tblptr byte
  1282   000E80  0E0E               	movlw	high __smallconst
  1283   000E82  6EF7               	movwf	tblptrh,c
  1284   000E84                     	endif
  1285   000E84                     	if	0	;tblptru may be non-zero
  1286   000E84                     	endif
  1287   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1288   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1289   000E86  6EF8               	movwf	tblptru,c
  1290   000E88                     	endif
  1291   000E88  0008               	tblrd		*
  1292   000E8A  50F5               	movf	tablat,w,c
  1293   000E8C  0A69               	xorlw	105
  1294   000E8E  A4D8               	btfss	status,2,c
  1295   000E90  EF4C  F007         	goto	u1001
  1296   000E94  EF4E  F007         	goto	u1000
  1297   000E98                     u1001:
  1298   000E98  EFDC  F007         	goto	l2304
  1299   000E9C                     u1000:
  1300   000E9C                     l2274:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1304   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1305   000E9E  6ED9               	movwf	fsr2l,c
  1306   000EA0  6ADA               	clrf	fsr2h,c
  1307   000EA2  0E02               	movlw	2
  1308   000EA4  26DF               	addwf	indf2,f,c
  1309   000EA6  5CDF               	subwf	indf2,w,c
  1310   000EA8  6ED9               	movwf	fsr2l,c
  1311   000EAA  6ADA               	clrf	fsr2h,c
  1312   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1313   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1314   000EB4                     
  1315                           ; BSR set to: 0
  1316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1317   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1318   000EB6  6ED9               	movwf	fsr2l,c
  1319   000EB8  6ADA               	clrf	fsr2h,c
  1320   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1321   000EBC  6EDF               	movwf	indf2,c
  1322   000EBE                     
  1323                           ; BSR set to: 0
  1324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1325   000EBE  0E20               	movlw	32
  1326   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1329   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1330   000EC4  EF66  F007         	goto	u1011
  1331   000EC8  EF69  F007         	goto	u1010
  1332   000ECC                     u1011:
  1333   000ECC  0E01               	movlw	1
  1334   000ECE  EF6A  F007         	goto	u1020
  1335   000ED2                     u1010:
  1336   000ED2  0E00               	movlw	0
  1337   000ED4                     u1020:
  1338   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1339   000ED6                     l2280:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1342   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1343   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1344   000EDA  0FB0               	addlw	low _dbuf
  1345   000EDC  6ED9               	movwf	fsr2l,c
  1346   000EDE  6ADA               	clrf	fsr2h,c
  1347   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1348   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1349   000EE8  0E00               	movlw	0
  1350   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1351   000EEC  0E0A               	movlw	10
  1352   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1353   000EF0  EC47  F009         	call	___awmod	;wreg free
  1354   000EF4  C001  F007         	movff	?___awmod,abs@a
  1355   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1356   000EFC  EC03  F00B         	call	_abs	;wreg free
  1357   000F00  5007               	movf	?_abs^0,w,c
  1358   000F02  0F30               	addlw	48
  1359   000F04  6EDF               	movwf	indf2,c
  1360   000F06                     
  1361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1362   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1363   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1364   000F0E  0E00               	movlw	0
  1365   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1366   000F12  0E0A               	movlw	10
  1367   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1368   000F16  EC88  F008         	call	___awdiv	;wreg free
  1369   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1370   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1371   000F22                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1373   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1374   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1375   000F26                     
  1376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1377   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1378   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1379   000F2A  B4D8               	btfsc	status,2,c
  1380   000F2C  EF9A  F007         	goto	u1031
  1381   000F30  EF9C  F007         	goto	u1030
  1382   000F34                     u1031:
  1383   000F34  EFA4  F007         	goto	l2290
  1384   000F38                     u1030:
  1385   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1386   000F3A  A4D8               	btfss	status,2,c
  1387   000F3C  EFA2  F007         	goto	u1041
  1388   000F40  EFA4  F007         	goto	u1040
  1389   000F44                     u1041:
  1390   000F44  EF6B  F007         	goto	l2280
  1391   000F48                     u1040:
  1392   000F48                     l2290:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1395   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1396   000F4A  B4D8               	btfsc	status,2,c
  1397   000F4C  EFAA  F007         	goto	u1051
  1398   000F50  EFAC  F007         	goto	u1050
  1399   000F54                     u1051:
  1400   000F54  EFCD  F007         	goto	l2302
  1401   000F58                     u1050:
  1402   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1403   000F5A  B4D8               	btfsc	status,2,c
  1404   000F5C  EFB2  F007         	goto	u1061
  1405   000F60  EFB4  F007         	goto	u1060
  1406   000F64                     u1061:
  1407   000F64  EFCD  F007         	goto	l2302
  1408   000F68                     u1060:
  1409   000F68                     
  1410                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1411   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1412   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1413   000F6C  0FB0               	addlw	low _dbuf
  1414   000F6E  6ED9               	movwf	fsr2l,c
  1415   000F70  6ADA               	clrf	fsr2h,c
  1416   000F72  0E2D               	movlw	45
  1417   000F74  6EDF               	movwf	indf2,c
  1418   000F76                     
  1419                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1420   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1421   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1422   000F7A  EFCD  F007         	goto	l2302
  1423   000F7E                     l2298:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1426   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1427   000F80  0FB0               	addlw	low _dbuf
  1428   000F82  6ED9               	movwf	fsr2l,c
  1429   000F84  6ADA               	clrf	fsr2h,c
  1430   000F86  50DF               	movf	indf2,w,c
  1431   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1432   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1433   000F8C  6E01               	movwf	fputc@c^0,c
  1434   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1435   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1436   000F94  ECEA  F008         	call	_fputc	;wreg free
  1437   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1438   000F9A                     l2302:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1441   000F9A  0E20               	movlw	32
  1442   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1443   000F9E  A4D8               	btfss	status,2,c
  1444   000FA0  EFD4  F007         	goto	u1071
  1445   000FA4  EFD6  F007         	goto	u1070
  1446   000FA8                     u1071:
  1447   000FA8  EFBF  F007         	goto	l2298
  1448   000FAC                     u1070:
  1449   000FAC                     
  1450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1451   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1452   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1453   000FB4  EFFF  F007         	goto	l1328
  1454   000FB8                     l2304:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1458   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1459   000FBA  6ED9               	movwf	fsr2l,c
  1460   000FBC  6ADA               	clrf	fsr2h,c
  1461   000FBE  2ADF               	incf	indf2,f,c
  1462   000FC0                     
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1465   000FC0  0E00               	movlw	0
  1466   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1467   000FC4  0E00               	movlw	0
  1468   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1469   000FC8  EFFF  F007         	goto	l1328
  1470   000FCC                     l2310:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1473   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1474   000FCE  6ED9               	movwf	fsr2l,c
  1475   000FD0  6ADA               	clrf	fsr2h,c
  1476   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1477   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1478   000FD6  0E0E               	movlw	high __smallconst
  1479   000FD8  6EF7               	movwf	tblptrh,c
  1480   000FDA                     	endif
  1481   000FDA                     	if	0	;tblptru may be non-zero
  1482   000FDA                     	endif
  1483   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1484   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1485   000FDC  6EF8               	movwf	tblptru,c
  1486   000FDE                     	endif
  1487   000FDE  0008               	tblrd		*
  1488   000FE0  50F5               	movf	tablat,w,c
  1489   000FE2  6E01               	movwf	fputc@c^0,c
  1490   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1491   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1492   000FEA  ECEA  F008         	call	_fputc	;wreg free
  1493   000FEE                     
  1494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1495   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1496   000FF0  6ED9               	movwf	fsr2l,c
  1497   000FF2  6ADA               	clrf	fsr2h,c
  1498   000FF4  2ADF               	incf	indf2,f,c
  1499   000FF6                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1501   000FF6  0E00               	movlw	0
  1502   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1503   000FFA  0E01               	movlw	1
  1504   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1505   000FFE                     l1328:
  1506   000FFE  0012               	return		;funcret
  1507   001000                     __end_of_vfpfcnvrt:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _fputc *****************
  1511 ;; Defined at:
  1512 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  c               2    0[COMRAM] int 
  1515 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1516 ;;		 -> sprintf@f(12), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2    0[COMRAM] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;Total ram usage:        8 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 2
  1535 ;; This function calls:
  1536 ;;		_putch
  1537 ;; This function is called by:
  1538 ;;		_vfpfcnvrt
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text5
  1543   0011D4                     __ptext5:
  1544                           	callstack 0
  1545   0011D4                     _fputc:
  1546                           	callstack 24
  1547   0011D4  5003               	movf	fputc@fp^0,w,c
  1548   0011D6  B4D8               	btfsc	status,2,c
  1549   0011D8  EFF0  F008         	goto	u931
  1550   0011DC  EFF2  F008         	goto	u930
  1551   0011E0                     u931:
  1552   0011E0  EFFA  F008         	goto	l2244
  1553   0011E4                     u930:
  1554   0011E4  5003               	movf	fputc@fp^0,w,c
  1555   0011E6  A4D8               	btfss	status,2,c
  1556   0011E8  EFF8  F008         	goto	u941
  1557   0011EC  EFFA  F008         	goto	u940
  1558   0011F0                     u941:
  1559   0011F0  EFFF  F008         	goto	l2246
  1560   0011F4                     u940:
  1561   0011F4                     l2244:
  1562   0011F4  5001               	movf	fputc@c^0,w,c
  1563   0011F6  ECC0  F00B         	call	_putch
  1564   0011FA  EF46  F009         	goto	l1353
  1565   0011FE                     l2246:
  1566   0011FE  5003               	movf	fputc@fp^0,w,c
  1567   001200  6ED9               	movwf	fsr2l,c
  1568   001202  6ADA               	clrf	fsr2h,c
  1569   001204  0E0A               	movlw	10
  1570   001206  26D9               	addwf	fsr2l,f,c
  1571   001208  50DE               	movf	postinc2,w,c
  1572   00120A  10DE               	iorwf	postinc2,w,c
  1573   00120C  B4D8               	btfsc	status,2,c
  1574   00120E  EF0B  F009         	goto	u951
  1575   001212  EF0D  F009         	goto	u950
  1576   001216                     u951:
  1577   001216  EF26  F009         	goto	l2250
  1578   00121A                     u950:
  1579   00121A  5003               	movf	fputc@fp^0,w,c
  1580   00121C  6ED9               	movwf	fsr2l,c
  1581   00121E  6ADA               	clrf	fsr2h,c
  1582   001220  0E0A               	movlw	10
  1583   001222  26D9               	addwf	fsr2l,f,c
  1584   001224  5003               	movf	fputc@fp^0,w,c
  1585   001226  6EE1               	movwf	fsr1l,c
  1586   001228  6AE2               	clrf	fsr1h,c
  1587   00122A  0E03               	movlw	3
  1588   00122C  26E1               	addwf	fsr1l,f,c
  1589   00122E  50DE               	movf	postinc2,w,c
  1590   001230  5CE6               	subwf	postinc1,w,c
  1591   001232  50E6               	movf	postinc1,w,c
  1592   001234  0A80               	xorlw	128
  1593   001236  6E08               	movwf	(??_fputc+4)^0,c
  1594   001238  50DE               	movf	postinc2,w,c
  1595   00123A  0A80               	xorlw	128
  1596   00123C  5808               	subwfb	(??_fputc+4)^0,w,c
  1597   00123E  B0D8               	btfsc	status,0,c
  1598   001240  EF24  F009         	goto	u961
  1599   001244  EF26  F009         	goto	u960
  1600   001248                     u961:
  1601   001248  EF46  F009         	goto	l1353
  1602   00124C                     u960:
  1603   00124C                     l2250:
  1604   00124C  5003               	movf	fputc@fp^0,w,c
  1605   00124E  6ED9               	movwf	fsr2l,c
  1606   001250  6ADA               	clrf	fsr2h,c
  1607   001252  0E03               	movlw	3
  1608   001254  26D9               	addwf	fsr2l,f,c
  1609   001256  CFDE F004          	movff	postinc2,??_fputc
  1610   00125A  CFDD F005          	movff	postdec2,??_fputc+1
  1611   00125E  5003               	movf	fputc@fp^0,w,c
  1612   001260  6ED9               	movwf	fsr2l,c
  1613   001262  6ADA               	clrf	fsr2h,c
  1614   001264  CFDE F006          	movff	postinc2,??_fputc+2
  1615   001268  CFDD F007          	movff	postdec2,??_fputc+3
  1616   00126C  5004               	movf	??_fputc^0,w,c
  1617   00126E  2406               	addwf	(??_fputc+2)^0,w,c
  1618   001270  6ED9               	movwf	fsr2l,c
  1619   001272  5005               	movf	(??_fputc+1)^0,w,c
  1620   001274  2007               	addwfc	(??_fputc+3)^0,w,c
  1621   001276  6EDA               	movwf	fsr2h,c
  1622   001278  C001  FFDF         	movff	fputc@c,indf2
  1623   00127C  5003               	movf	fputc@fp^0,w,c
  1624   00127E  6ED9               	movwf	fsr2l,c
  1625   001280  6ADA               	clrf	fsr2h,c
  1626   001282  0E03               	movlw	3
  1627   001284  26D9               	addwf	fsr2l,f,c
  1628   001286  2ADE               	incf	postinc2,f,c
  1629   001288  0E00               	movlw	0
  1630   00128A  22DD               	addwfc	postdec2,f,c
  1631   00128C                     l1353:
  1632   00128C  0012               	return		;funcret
  1633   00128E                     __end_of_fputc:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _putch *****************
  1637 ;; Defined at:
  1638 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  c               1    wreg     unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  c               1    0[COMRAM] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_fputc
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text6
  1667   001780                     __ptext6:
  1668                           	callstack 0
  1669   001780                     _putch:
  1670                           	callstack 24
  1671   001780  0012               	return		;funcret
  1672   001782                     __end_of_putch:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _abs *****************
  1676 ;; Defined at:
  1677 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  a               2    6[COMRAM] int 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2    6[COMRAM] int 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;Total ram usage:        4 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_vfpfcnvrt
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text7
  1706   001606                     __ptext7:
  1707                           	callstack 0
  1708   001606                     _abs:
  1709                           	callstack 25
  1710   001606  BE08               	btfsc	(abs@a+1)^0,7,c
  1711   001608  EF08  F00B         	goto	u971
  1712   00160C  EF0A  F00B         	goto	u970
  1713   001610                     u971:
  1714   001610  EF10  F00B         	goto	l1338
  1715   001614                     u970:
  1716   001614  C007  F007         	movff	abs@a,?_abs
  1717   001618  C008  F008         	movff	abs@a+1,?_abs+1
  1718   00161C  EF1C  F00B         	goto	l1341
  1719   001620                     l1338:
  1720   001620  C007  F009         	movff	abs@a,??_abs
  1721   001624  C008  F00A         	movff	abs@a+1,??_abs+1
  1722   001628  1E09               	comf	??_abs^0,f,c
  1723   00162A  1E0A               	comf	(??_abs+1)^0,f,c
  1724   00162C  4A09               	infsnz	??_abs^0,f,c
  1725   00162E  2A0A               	incf	(??_abs+1)^0,f,c
  1726   001630  C009  F007         	movff	??_abs,?_abs
  1727   001634  C00A  F008         	movff	??_abs+1,?_abs+1
  1728   001638                     l1341:
  1729   001638  0012               	return		;funcret
  1730   00163A                     __end_of_abs:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function ___awmod *****************
  1734 ;; Defined at:
  1735 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  dividend        2    0[COMRAM] int 
  1738 ;;  divisor         2    2[COMRAM] int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  sign            1    5[COMRAM] unsigned char 
  1741 ;;  counter         1    4[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  2    0[COMRAM] int 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;Total ram usage:        6 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_vfpfcnvrt
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text8
  1766   00128E                     __ptext8:
  1767                           	callstack 0
  1768   00128E                     ___awmod:
  1769                           	callstack 25
  1770   00128E  0E00               	movlw	0
  1771   001290  6E06               	movwf	___awmod@sign^0,c
  1772   001292  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1773   001294  EF50  F009         	goto	u870
  1774   001298  EF4E  F009         	goto	u871
  1775   00129C                     u871:
  1776   00129C  EF56  F009         	goto	l2212
  1777   0012A0                     u870:
  1778   0012A0  6C01               	negf	___awmod@dividend^0,c
  1779   0012A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1780   0012A4  B0D8               	btfsc	status,0,c
  1781   0012A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1782   0012A8  0E01               	movlw	1
  1783   0012AA  6E06               	movwf	___awmod@sign^0,c
  1784   0012AC                     l2212:
  1785   0012AC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1786   0012AE  EF5D  F009         	goto	u880
  1787   0012B2  EF5B  F009         	goto	u881
  1788   0012B6                     u881:
  1789   0012B6  EF61  F009         	goto	l2216
  1790   0012BA                     u880:
  1791   0012BA  6C03               	negf	___awmod@divisor^0,c
  1792   0012BC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1793   0012BE  B0D8               	btfsc	status,0,c
  1794   0012C0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1795   0012C2                     l2216:
  1796   0012C2  5003               	movf	___awmod@divisor^0,w,c
  1797   0012C4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1798   0012C6  B4D8               	btfsc	status,2,c
  1799   0012C8  EF68  F009         	goto	u891
  1800   0012CC  EF6A  F009         	goto	u890
  1801   0012D0                     u891:
  1802   0012D0  EF8E  F009         	goto	l2232
  1803   0012D4                     u890:
  1804   0012D4  0E01               	movlw	1
  1805   0012D6  6E05               	movwf	___awmod@counter^0,c
  1806   0012D8  EF72  F009         	goto	l2222
  1807   0012DC                     l2220:
  1808   0012DC  90D8               	bcf	status,0,c
  1809   0012DE  3603               	rlcf	___awmod@divisor^0,f,c
  1810   0012E0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1811   0012E2  2A05               	incf	___awmod@counter^0,f,c
  1812   0012E4                     l2222:
  1813   0012E4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1814   0012E6  EF77  F009         	goto	u901
  1815   0012EA  EF79  F009         	goto	u900
  1816   0012EE                     u901:
  1817   0012EE  EF6E  F009         	goto	l2220
  1818   0012F2                     u900:
  1819   0012F2                     l2224:
  1820   0012F2  5003               	movf	___awmod@divisor^0,w,c
  1821   0012F4  5C01               	subwf	___awmod@dividend^0,w,c
  1822   0012F6  5004               	movf	(___awmod@divisor+1)^0,w,c
  1823   0012F8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1824   0012FA  A0D8               	btfss	status,0,c
  1825   0012FC  EF82  F009         	goto	u911
  1826   001300  EF84  F009         	goto	u910
  1827   001304                     u911:
  1828   001304  EF88  F009         	goto	l2228
  1829   001308                     u910:
  1830   001308  5003               	movf	___awmod@divisor^0,w,c
  1831   00130A  5E01               	subwf	___awmod@dividend^0,f,c
  1832   00130C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1833   00130E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1834   001310                     l2228:
  1835   001310  90D8               	bcf	status,0,c
  1836   001312  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1837   001314  3203               	rrcf	___awmod@divisor^0,f,c
  1838   001316  2E05               	decfsz	___awmod@counter^0,f,c
  1839   001318  EF79  F009         	goto	l2224
  1840   00131C                     l2232:
  1841   00131C  5006               	movf	___awmod@sign^0,w,c
  1842   00131E  B4D8               	btfsc	status,2,c
  1843   001320  EF94  F009         	goto	u921
  1844   001324  EF96  F009         	goto	u920
  1845   001328                     u921:
  1846   001328  EF9A  F009         	goto	l2236
  1847   00132C                     u920:
  1848   00132C  6C01               	negf	___awmod@dividend^0,c
  1849   00132E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1850   001330  B0D8               	btfsc	status,0,c
  1851   001332  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1852   001334                     l2236:
  1853   001334  C001  F001         	movff	___awmod@dividend,?___awmod
  1854   001338  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1855   00133C  0012               	return		;funcret
  1856   00133E                     __end_of___awmod:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function ___awdiv *****************
  1860 ;; Defined at:
  1861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  dividend        2    0[COMRAM] int 
  1864 ;;  divisor         2    2[COMRAM] int 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  quotient        2    6[COMRAM] int 
  1867 ;;  sign            1    5[COMRAM] unsigned char 
  1868 ;;  counter         1    4[COMRAM] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2    0[COMRAM] int 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;Total ram usage:        8 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_vfpfcnvrt
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text9
  1893   001110                     __ptext9:
  1894                           	callstack 0
  1895   001110                     ___awdiv:
  1896                           	callstack 25
  1897   001110  0E00               	movlw	0
  1898   001112  6E06               	movwf	___awdiv@sign^0,c
  1899   001114  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1900   001116  EF91  F008         	goto	u810
  1901   00111A  EF8F  F008         	goto	u811
  1902   00111E                     u811:
  1903   00111E  EF97  F008         	goto	l2168
  1904   001122                     u810:
  1905   001122  6C03               	negf	___awdiv@divisor^0,c
  1906   001124  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1907   001126  B0D8               	btfsc	status,0,c
  1908   001128  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1909   00112A  0E01               	movlw	1
  1910   00112C  6E06               	movwf	___awdiv@sign^0,c
  1911   00112E                     l2168:
  1912   00112E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1913   001130  EF9E  F008         	goto	u820
  1914   001134  EF9C  F008         	goto	u821
  1915   001138                     u821:
  1916   001138  EFA4  F008         	goto	l2174
  1917   00113C                     u820:
  1918   00113C  6C01               	negf	___awdiv@dividend^0,c
  1919   00113E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1920   001140  B0D8               	btfsc	status,0,c
  1921   001142  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1922   001144  0E01               	movlw	1
  1923   001146  1A06               	xorwf	___awdiv@sign^0,f,c
  1924   001148                     l2174:
  1925   001148  0E00               	movlw	0
  1926   00114A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1927   00114C  0E00               	movlw	0
  1928   00114E  6E07               	movwf	___awdiv@quotient^0,c
  1929   001150  5003               	movf	___awdiv@divisor^0,w,c
  1930   001152  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1931   001154  B4D8               	btfsc	status,2,c
  1932   001156  EFAF  F008         	goto	u831
  1933   00115A  EFB1  F008         	goto	u830
  1934   00115E                     u831:
  1935   00115E  EFD9  F008         	goto	l2196
  1936   001162                     u830:
  1937   001162  0E01               	movlw	1
  1938   001164  6E05               	movwf	___awdiv@counter^0,c
  1939   001166  EFB9  F008         	goto	l2182
  1940   00116A                     l2180:
  1941   00116A  90D8               	bcf	status,0,c
  1942   00116C  3603               	rlcf	___awdiv@divisor^0,f,c
  1943   00116E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1944   001170  2A05               	incf	___awdiv@counter^0,f,c
  1945   001172                     l2182:
  1946   001172  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1947   001174  EFBE  F008         	goto	u841
  1948   001178  EFC0  F008         	goto	u840
  1949   00117C                     u841:
  1950   00117C  EFB5  F008         	goto	l2180
  1951   001180                     u840:
  1952   001180                     l2184:
  1953   001180  90D8               	bcf	status,0,c
  1954   001182  3607               	rlcf	___awdiv@quotient^0,f,c
  1955   001184  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1956   001186  5003               	movf	___awdiv@divisor^0,w,c
  1957   001188  5C01               	subwf	___awdiv@dividend^0,w,c
  1958   00118A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1959   00118C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1960   00118E  A0D8               	btfss	status,0,c
  1961   001190  EFCC  F008         	goto	u851
  1962   001194  EFCE  F008         	goto	u850
  1963   001198                     u851:
  1964   001198  EFD3  F008         	goto	l2192
  1965   00119C                     u850:
  1966   00119C  5003               	movf	___awdiv@divisor^0,w,c
  1967   00119E  5E01               	subwf	___awdiv@dividend^0,f,c
  1968   0011A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1969   0011A2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1970   0011A4  8007               	bsf	___awdiv@quotient^0,0,c
  1971   0011A6                     l2192:
  1972   0011A6  90D8               	bcf	status,0,c
  1973   0011A8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1974   0011AA  3203               	rrcf	___awdiv@divisor^0,f,c
  1975   0011AC  2E05               	decfsz	___awdiv@counter^0,f,c
  1976   0011AE  EFC0  F008         	goto	l2184
  1977   0011B2                     l2196:
  1978   0011B2  5006               	movf	___awdiv@sign^0,w,c
  1979   0011B4  B4D8               	btfsc	status,2,c
  1980   0011B6  EFDF  F008         	goto	u861
  1981   0011BA  EFE1  F008         	goto	u860
  1982   0011BE                     u861:
  1983   0011BE  EFE5  F008         	goto	l2200
  1984   0011C2                     u860:
  1985   0011C2  6C07               	negf	___awdiv@quotient^0,c
  1986   0011C4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1987   0011C6  B0D8               	btfsc	status,0,c
  1988   0011C8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1989   0011CA                     l2200:
  1990   0011CA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1991   0011CE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1992   0011D2  0012               	return		;funcret
  1993   0011D4                     __end_of___awdiv:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _sendStringSerial4 *****************
  1997 ;; Defined at:
  1998 ;;		line 35 in file "serial.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  string          2    1[COMRAM] PTR unsigned char 
  2001 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;Total ram usage:        2 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 2
  2020 ;; This function calls:
  2021 ;;		_sendCharSerial4
  2022 ;; This function is called by:
  2023 ;;		_sendIntSerial4
  2024 ;;		_sendArrayCharSerial4
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text10
  2029   0013CE                     __ptext10:
  2030                           	callstack 0
  2031   0013CE                     _sendStringSerial4:
  2032                           	callstack 27
  2033   0013CE                     
  2034                           ;serial.c: 37:     while(*string != 0){
  2035   0013CE  EFFE  F009         	goto	l2436
  2036   0013D2                     l2432:
  2037                           
  2038                           ;serial.c: 38:   sendCharSerial4(*string++);
  2039   0013D2  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2040   0013D6  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2041   0013DA  0E00               	movlw	low (__smallconst shr (0+16))
  2042   0013DC  6EF8               	movwf	tblptru,c
  2043   0013DE  0E0D               	movlw	(high __ramtop+-1)
  2044   0013E0  64F7               	cpfsgt	tblptrh,c
  2045   0013E2  D003               	bra	u1277
  2046   0013E4  0008               	tblrd		*
  2047   0013E6  50F5               	movf	tablat,w,c
  2048   0013E8  D005               	bra	u1270
  2049   0013EA                     u1277:
  2050   0013EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2051   0013EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2052   0013F2  50EF               	movf	indf0,w,c
  2053   0013F4                     u1270:
  2054   0013F4  ECA4  F00B         	call	_sendCharSerial4
  2055   0013F8  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2056   0013FA  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2057   0013FC                     l2436:
  2058                           
  2059                           ;serial.c: 37:     while(*string != 0){
  2060   0013FC  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2061   001400  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2062   001404  0E00               	movlw	low (__smallconst shr (0+16))
  2063   001406  6EF8               	movwf	tblptru,c
  2064   001408  0E0D               	movlw	(high __ramtop+-1)
  2065   00140A  64F7               	cpfsgt	tblptrh,c
  2066   00140C  D003               	bra	u1287
  2067   00140E  0008               	tblrd		*
  2068   001410  50F5               	movf	tablat,w,c
  2069   001412  D005               	bra	u1280
  2070   001414                     u1287:
  2071   001414  CFF6 FFE9          	movff	tblptrl,fsr0l
  2072   001418  CFF7 FFEA          	movff	tblptrh,fsr0h
  2073   00141C  50EF               	movf	indf0,w,c
  2074   00141E                     u1280:
  2075   00141E  0900               	iorlw	0
  2076   001420  A4D8               	btfss	status,2,c
  2077   001422  EF15  F00A         	goto	u1291
  2078   001426  EF17  F00A         	goto	u1290
  2079   00142A                     u1291:
  2080   00142A  EFE9  F009         	goto	l2432
  2081   00142E                     u1290:
  2082   00142E  0012               	return		;funcret
  2083   001430                     __end_of_sendStringSerial4:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _sendCharSerial4 *****************
  2087 ;; Defined at:
  2088 ;;		line 29 in file "serial.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  charToSend      1    wreg     unsigned char 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  charToSend      1    0[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;Total ram usage:        1 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 1
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_sendStringSerial4
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text11
  2117   001748                     __ptext11:
  2118                           	callstack 0
  2119   001748                     _sendCharSerial4:
  2120                           	callstack 27
  2121                           
  2122                           ;incstack = 0
  2123                           ;sendCharSerial4@charToSend stored from wreg
  2124   001748  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2125   00174A                     l399:
  2126   00174A  010E               	movlb	14	; () banked
  2127   00174C  A537               	btfss	55,2,b	;volatile
  2128   00174E  EFAB  F00B         	goto	u321
  2129   001752  EFAD  F00B         	goto	u320
  2130   001756                     u321:
  2131   001756  EFA5  F00B         	goto	l399
  2132   00175A                     u320:
  2133   00175A                     
  2134                           ; BSR set to: 14
  2135                           ;serial.c: 31:     TX4REG = charToSend;
  2136   00175A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2137   00175E                     
  2138                           ; BSR set to: 14
  2139   00175E  0012               	return		;funcret
  2140   001760                     __end_of_sendCharSerial4:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _readTrail *****************
  2144 ;; Defined at:
  2145 ;;		line 42 in file "timers.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  tH              1    0[COMRAM] PTR unsigned char 
  2148 ;;		 -> main@timerH(1), 
  2149 ;;  tL              1    1[COMRAM] PTR unsigned char 
  2150 ;;		 -> main@timerL(1), 
  2151 ;;  man             1    2[COMRAM] PTR unsigned char 
  2152 ;;		 -> main@mann(1), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2164 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;Total ram usage:        3 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 1
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text12
  2179   0015CC                     __ptext12:
  2180                           	callstack 0
  2181   0015CC                     _readTrail:
  2182                           	callstack 29
  2183   0015CC                     
  2184                           ;timers.c: 43:     *tH = *timer_high_pointer;
  2185   0015CC  505E               	movf	_timer_high_pointer^0,w,c
  2186   0015CE  6ED9               	movwf	fsr2l,c
  2187   0015D0  6ADA               	clrf	fsr2h,c
  2188   0015D2  5001               	movf	readTrail@tH^0,w,c
  2189   0015D4  6EE1               	movwf	fsr1l,c
  2190   0015D6  6AE2               	clrf	fsr1h,c
  2191   0015D8  CFDF FFE7          	movff	indf2,indf1
  2192                           
  2193                           ;timers.c: 44:     *tL = *timer_low_pointer;
  2194   0015DC  0100               	movlb	0	; () banked
  2195   0015DE  516F               	movf	_timer_low_pointer& (0+255),w,b
  2196   0015E0  6ED9               	movwf	fsr2l,c
  2197   0015E2  6ADA               	clrf	fsr2h,c
  2198   0015E4  5002               	movf	readTrail@tL^0,w,c
  2199   0015E6  6EE1               	movwf	fsr1l,c
  2200   0015E8  6AE2               	clrf	fsr1h,c
  2201   0015EA  CFDF FFE7          	movff	indf2,indf1
  2202                           
  2203                           ;timers.c: 45:     *man = *manoeuvre_pointer;
  2204   0015EE  516E               	movf	_manoeuvre_pointer& (0+255),w,b
  2205   0015F0  6ED9               	movwf	fsr2l,c
  2206   0015F2  6ADA               	clrf	fsr2h,c
  2207   0015F4  5003               	movf	readTrail@man^0,w,c
  2208   0015F6  6EE1               	movwf	fsr1l,c
  2209   0015F8  6AE2               	clrf	fsr1h,c
  2210   0015FA  CFDF FFE7          	movff	indf2,indf1
  2211   0015FE                     
  2212                           ; BSR set to: 0
  2213                           ;timers.c: 47:     timer_high_pointer --;
  2214   0015FE  065E               	decf	_timer_high_pointer^0,f,c
  2215   001600                     
  2216                           ; BSR set to: 0
  2217                           ;timers.c: 48:     timer_low_pointer --;
  2218   001600  076F               	decf	_timer_low_pointer& (0+255),f,b
  2219   001602                     
  2220                           ; BSR set to: 0
  2221                           ;timers.c: 49:     manoeuvre_pointer --;
  2222   001602  076E               	decf	_manoeuvre_pointer& (0+255),f,b
  2223   001604                     
  2224                           ; BSR set to: 0
  2225   001604  0012               	return		;funcret
  2226   001606                     __end_of_readTrail:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _initUSART4 *****************
  2230 ;; Defined at:
  2231 ;;		line 5 in file "serial.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used: 1
  2251 ;; Hardware stack levels required when called: 1
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_main
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text13
  2260   00172A                     __ptext13:
  2261                           	callstack 0
  2262   00172A                     _initUSART4:
  2263                           	callstack 29
  2264   00172A                     
  2265                           ;serial.c: 9:     RC0PPS = 0x12;
  2266   00172A  0E12               	movlw	18
  2267   00172C  010E               	movlb	14	; () banked
  2268   00172E  6F62               	movwf	98,b	;volatile
  2269                           
  2270                           ;serial.c: 10:     RX4PPS = 0x11;
  2271   001730  0E11               	movlw	17
  2272   001732  6F15               	movwf	21,b	;volatile
  2273   001734                     
  2274                           ; BSR set to: 14
  2275                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2276   001734  97E9               	bcf	233,3,b	;volatile
  2277   001736                     
  2278                           ; BSR set to: 14
  2279                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2280   001736  95E8               	bcf	232,2,b	;volatile
  2281                           
  2282                           ;serial.c: 14:     SP4BRGL = 51;
  2283   001738  0E33               	movlw	51
  2284   00173A  6FE5               	movwf	229,b	;volatile
  2285                           
  2286                           ;serial.c: 15:     SP4BRGH = 0;
  2287   00173C  0E00               	movlw	0
  2288   00173E  6FE6               	movwf	230,b	;volatile
  2289   001740                     
  2290                           ; BSR set to: 14
  2291                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2292   001740  89E7               	bsf	231,4,b	;volatile
  2293   001742                     
  2294                           ; BSR set to: 14
  2295                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2296   001742  8BE8               	bsf	232,5,b	;volatile
  2297   001744                     
  2298                           ; BSR set to: 14
  2299                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2300   001744  8FE7               	bsf	231,7,b	;volatile
  2301   001746                     
  2302                           ; BSR set to: 14
  2303   001746  0012               	return		;funcret
  2304   001748                     __end_of_initUSART4:
  2305                           	callstack 0
  2306                           
  2307 ;; *************** function _initDCmotorsPWM *****************
  2308 ;; Defined at:
  2309 ;;		line 5 in file "dc_motor.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;Total ram usage:        2 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text14
  2338   00133E                     __ptext14:
  2339                           	callstack 0
  2340   00133E                     _initDCmotorsPWM:
  2341                           	callstack 29
  2342   00133E                     
  2343                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2344   00133E  9485               	bcf	133,2,c	;volatile
  2345                           
  2346                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2347   001340  9885               	bcf	133,4,c	;volatile
  2348                           
  2349                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2350   001342  9E83               	bcf	131,7,c	;volatile
  2351                           
  2352                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2353   001344  9C87               	bcf	135,6,c	;volatile
  2354                           
  2355                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2356   001346  947D               	bcf	125,2,c	;volatile
  2357                           
  2358                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2359   001348  987D               	bcf	125,4,c	;volatile
  2360                           
  2361                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2362   00134A  9E7B               	bcf	123,7,c	;volatile
  2363                           
  2364                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2365   00134C  9C7F               	bcf	127,6,c	;volatile
  2366   00134E                     
  2367                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2368   00134E  0E05               	movlw	5
  2369   001350  010E               	movlb	14	; () banked
  2370   001352  6F74               	movwf	116,b	;volatile
  2371                           
  2372                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2373   001354  0E06               	movlw	6
  2374   001356  6F76               	movwf	118,b	;volatile
  2375                           
  2376                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2377   001358  0E07               	movlw	7
  2378   00135A  6F69               	movwf	105,b	;volatile
  2379                           
  2380                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2381   00135C  0E08               	movlw	8
  2382   00135E  6F88               	movwf	136,b	;volatile
  2383                           
  2384                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2385   001360  50BD               	movf	189,w,c	;volatile
  2386   001362  0B8F               	andlw	-113
  2387   001364  0940               	iorlw	64
  2388   001366  6EBD               	movwf	189,c	;volatile
  2389                           
  2390                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2391   001368  0EE0               	movlw	-32
  2392   00136A  16BE               	andwf	190,f,c	;volatile
  2393                           
  2394                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2395   00136C  50BF               	movf	191,w,c	;volatile
  2396   00136E  0BF0               	andlw	-16
  2397   001370  0901               	iorlw	1
  2398   001372  6EBF               	movwf	191,c	;volatile
  2399   001374                     
  2400                           ; BSR set to: 14
  2401                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2402   001374  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2403   001378                     
  2404                           ; BSR set to: 14
  2405                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2406   001378  8EBD               	bsf	189,7,c	;volatile
  2407                           
  2408                           ;dc_motor.c: 35:     CCPR1H=0;
  2409   00137A  0E00               	movlw	0
  2410   00137C  6EAA               	movwf	170,c	;volatile
  2411                           
  2412                           ;dc_motor.c: 36:     CCPR2H=0;
  2413   00137E  0E00               	movlw	0
  2414   001380  6EA6               	movwf	166,c	;volatile
  2415                           
  2416                           ;dc_motor.c: 37:     CCPR3H=0;
  2417   001382  0E00               	movlw	0
  2418   001384  010F               	movlb	15	; () banked
  2419   001386  6F25               	movwf	37,b	;volatile
  2420                           
  2421                           ;dc_motor.c: 38:     CCPR4H=0;
  2422   001388  0E00               	movlw	0
  2423   00138A  6F21               	movwf	33,b	;volatile
  2424                           
  2425                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2426   00138C  0EFC               	movlw	-4
  2427   00138E  16AD               	andwf	173,f,c	;volatile
  2428                           
  2429                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2430   001390  0EF3               	movlw	-13
  2431   001392  16AD               	andwf	173,f,c	;volatile
  2432                           
  2433                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2434   001394  0ECF               	movlw	-49
  2435   001396  16AD               	andwf	173,f,c	;volatile
  2436                           
  2437                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2438   001398  0E3F               	movlw	-193
  2439   00139A  16AD               	andwf	173,f,c	;volatile
  2440   00139C                     
  2441                           ; BSR set to: 15
  2442                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2443   00139C  88AB               	bsf	171,4,c	;volatile
  2444                           
  2445                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2446   00139E  50AB               	movf	171,w,c	;volatile
  2447   0013A0  0BF0               	andlw	-16
  2448   0013A2  090C               	iorlw	12
  2449   0013A4  6EAB               	movwf	171,c	;volatile
  2450   0013A6                     
  2451                           ; BSR set to: 15
  2452                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2453   0013A6  8EAB               	bsf	171,7,c	;volatile
  2454   0013A8                     
  2455                           ; BSR set to: 15
  2456                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2457   0013A8  88A7               	bsf	167,4,c	;volatile
  2458                           
  2459                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2460   0013AA  50A7               	movf	167,w,c	;volatile
  2461   0013AC  0BF0               	andlw	-16
  2462   0013AE  090C               	iorlw	12
  2463   0013B0  6EA7               	movwf	167,c	;volatile
  2464   0013B2                     
  2465                           ; BSR set to: 15
  2466                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2467   0013B2  8EA7               	bsf	167,7,c	;volatile
  2468   0013B4                     
  2469                           ; BSR set to: 15
  2470                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2471   0013B4  8926               	bsf	38,4,b	;volatile
  2472                           
  2473                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2474   0013B6  5126               	movf	38,w,b	;volatile
  2475   0013B8  0BF0               	andlw	-16
  2476   0013BA  090C               	iorlw	12
  2477   0013BC  6F26               	movwf	38,b	;volatile
  2478   0013BE                     
  2479                           ; BSR set to: 15
  2480                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2481   0013BE  8F26               	bsf	38,7,b	;volatile
  2482   0013C0                     
  2483                           ; BSR set to: 15
  2484                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2485   0013C0  8922               	bsf	34,4,b	;volatile
  2486                           
  2487                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2488   0013C2  5122               	movf	34,w,b	;volatile
  2489   0013C4  0BF0               	andlw	-16
  2490   0013C6  090C               	iorlw	12
  2491   0013C8  6F22               	movwf	34,b	;volatile
  2492   0013CA                     
  2493                           ; BSR set to: 15
  2494                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2495   0013CA  8F22               	bsf	34,7,b	;volatile
  2496   0013CC                     
  2497                           ; BSR set to: 15
  2498   0013CC  0012               	return		;funcret
  2499   0013CE                     __end_of_initDCmotorsPWM:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _color_click_init *****************
  2503 ;; Defined at:
  2504 ;;		line 5 in file "color.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;Total ram usage:        1 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 4
  2525 ;; This function calls:
  2526 ;;		_I2C_2_Master_Init
  2527 ;;		_color_writetoaddr
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text15
  2534   00163A                     __ptext15:
  2535                           	callstack 0
  2536   00163A                     _color_click_init:
  2537                           	callstack 26
  2538   00163A                     
  2539                           ;color.c: 8:     I2C_2_Master_Init();
  2540   00163A  EC37  F00B         	call	_I2C_2_Master_Init	;wreg free
  2541   00163E                     
  2542                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2543   00163E  0E01               	movlw	1
  2544   001640  6E03               	movwf	color_writetoaddr@value^0,c
  2545   001642  0E00               	movlw	0
  2546   001644  EC85  F00B         	call	_color_writetoaddr
  2547   001648                     
  2548                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2549   001648  0E3F               	movlw	63
  2550   00164A  6E05               	movwf	??_color_click_init^0,c
  2551   00164C  0E55               	movlw	85
  2552   00164E                     u1857:
  2553   00164E  2EE8               	decfsz	wreg,f,c
  2554   001650  D7FE               	bra	u1857
  2555   001652  2E05               	decfsz	??_color_click_init^0,f,c
  2556   001654  D7FC               	bra	u1857
  2557   001656  0000               	nop	
  2558   001658                     
  2559                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2560   001658  0E03               	movlw	3
  2561   00165A  6E03               	movwf	color_writetoaddr@value^0,c
  2562   00165C  0E00               	movlw	0
  2563   00165E  EC85  F00B         	call	_color_writetoaddr
  2564   001662                     
  2565                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2566   001662  0ED5               	movlw	213
  2567   001664  6E03               	movwf	color_writetoaddr@value^0,c
  2568   001666  0E01               	movlw	1
  2569   001668  EC85  F00B         	call	_color_writetoaddr
  2570   00166C  0012               	return		;funcret
  2571   00166E                     __end_of_color_click_init:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _color_writetoaddr *****************
  2575 ;; Defined at:
  2576 ;;		line 21 in file "color.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  address         1    wreg     unsigned char 
  2579 ;;  value           1    2[COMRAM] unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  address         1    3[COMRAM] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;Total ram usage:        2 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 3
  2598 ;; This function calls:
  2599 ;;		_I2C_2_Master_Start
  2600 ;;		_I2C_2_Master_Stop
  2601 ;;		_I2C_2_Master_Write
  2602 ;; This function is called by:
  2603 ;;		_color_click_init
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text16
  2608   00170A                     __ptext16:
  2609                           	callstack 0
  2610   00170A                     _color_writetoaddr:
  2611                           	callstack 26
  2612                           
  2613                           ;incstack = 0
  2614                           ;color_writetoaddr@address stored from wreg
  2615   00170A  6E04               	movwf	color_writetoaddr@address^0,c
  2616   00170C                     
  2617                           ;color.c: 22:     I2C_2_Master_Start();
  2618   00170C  ECBB  F00B         	call	_I2C_2_Master_Start	;wreg free
  2619                           
  2620                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2621   001710  0E52               	movlw	82
  2622   001712  ECB0  F00B         	call	_I2C_2_Master_Write
  2623                           
  2624                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2625   001716  5004               	movf	color_writetoaddr@address^0,w,c
  2626   001718  0980               	iorlw	128
  2627   00171A  ECB0  F00B         	call	_I2C_2_Master_Write
  2628                           
  2629                           ;color.c: 25:     I2C_2_Master_Write(value);
  2630   00171E  5003               	movf	color_writetoaddr@value^0,w,c
  2631   001720  ECB0  F00B         	call	_I2C_2_Master_Write
  2632                           
  2633                           ;color.c: 26:     I2C_2_Master_Stop();
  2634   001724  ECB6  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2635   001728  0012               	return		;funcret
  2636   00172A                     __end_of_color_writetoaddr:
  2637                           	callstack 0
  2638                           
  2639 ;; *************** function _I2C_2_Master_Write *****************
  2640 ;; Defined at:
  2641 ;;		line 45 in file "i2c.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  data_byte       1    wreg     unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  data_byte       1    1[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;Total ram usage:        1 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 2
  2662 ;; This function calls:
  2663 ;;		_I2C_2_Master_Idle
  2664 ;; This function is called by:
  2665 ;;		_color_writetoaddr
  2666 ;;		_color_read_Red
  2667 ;;		_color_read_Blue
  2668 ;;		_color_read_Green
  2669 ;;		_color_read_Clear
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text17
  2674   001760                     __ptext17:
  2675                           	callstack 0
  2676   001760                     _I2C_2_Master_Write:
  2677                           	callstack 26
  2678                           
  2679                           ;incstack = 0
  2680                           ;I2C_2_Master_Write@data_byte stored from wreg
  2681   001760  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2682   001762                     
  2683                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2684   001762  EC4C  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2685   001766                     
  2686                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2687   001766  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2688   00176A  0012               	return		;funcret
  2689   00176C                     __end_of_I2C_2_Master_Write:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _I2C_2_Master_Stop *****************
  2693 ;; Defined at:
  2694 ;;		line 39 in file "i2c.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 2
  2715 ;; This function calls:
  2716 ;;		_I2C_2_Master_Idle
  2717 ;; This function is called by:
  2718 ;;		_color_writetoaddr
  2719 ;;		_color_read_Red
  2720 ;;		_color_read_Blue
  2721 ;;		_color_read_Green
  2722 ;;		_color_read_Clear
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text18
  2727   00176C                     __ptext18:
  2728                           	callstack 0
  2729   00176C                     _I2C_2_Master_Stop:
  2730                           	callstack 26
  2731   00176C                     
  2732                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2733   00176C  EC4C  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2734   001770                     
  2735                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2736   001770  010E               	movlb	14	; () banked
  2737   001772  85DA               	bsf	218,2,b	;volatile
  2738   001774                     
  2739                           ; BSR set to: 14
  2740   001774  0012               	return		;funcret
  2741   001776                     __end_of_I2C_2_Master_Stop:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _I2C_2_Master_Start *****************
  2745 ;; Defined at:
  2746 ;;		line 27 in file "i2c.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 2
  2767 ;; This function calls:
  2768 ;;		_I2C_2_Master_Idle
  2769 ;; This function is called by:
  2770 ;;		_color_writetoaddr
  2771 ;;		_color_read_Red
  2772 ;;		_color_read_Blue
  2773 ;;		_color_read_Green
  2774 ;;		_color_read_Clear
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text19
  2779   001776                     __ptext19:
  2780                           	callstack 0
  2781   001776                     _I2C_2_Master_Start:
  2782                           	callstack 26
  2783   001776                     
  2784                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2785   001776  EC4C  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2786   00177A                     
  2787                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2788   00177A  010E               	movlb	14	; () banked
  2789   00177C  81DA               	bsf	218,0,b	;volatile
  2790   00177E                     
  2791                           ; BSR set to: 14
  2792   00177E  0012               	return		;funcret
  2793   001780                     __end_of_I2C_2_Master_Start:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _I2C_2_Master_Idle *****************
  2797 ;; Defined at:
  2798 ;;		line 22 in file "i2c.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_I2C_2_Master_Start
  2823 ;;		_I2C_2_Master_Stop
  2824 ;;		_I2C_2_Master_Write
  2825 ;;		_I2C_2_Master_RepStart
  2826 ;;		_I2C_2_Master_Read
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text20
  2831   001698                     __ptext20:
  2832                           	callstack 0
  2833   001698                     _I2C_2_Master_Idle:
  2834                           	callstack 26
  2835   001698                     l242:
  2836   001698  010E               	movlb	14	; () banked
  2837   00169A  B5D8               	btfsc	216,2,b	;volatile
  2838   00169C  EF52  F00B         	goto	u181
  2839   0016A0  EF54  F00B         	goto	u180
  2840   0016A4                     u181:
  2841   0016A4  EF4C  F00B         	goto	l242
  2842   0016A8                     u180:
  2843   0016A8                     
  2844                           ; BSR set to: 14
  2845   0016A8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2846   0016AC  0E1F               	movlw	31
  2847   0016AE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2848   0016B0  A4D8               	btfss	status,2,c
  2849   0016B2  EF5D  F00B         	goto	u191
  2850   0016B6  EF5F  F00B         	goto	u190
  2851   0016BA                     u191:
  2852   0016BA  EF4C  F00B         	goto	l242
  2853   0016BE                     u190:
  2854   0016BE                     
  2855                           ; BSR set to: 14
  2856   0016BE  0012               	return		;funcret
  2857   0016C0                     __end_of_I2C_2_Master_Idle:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _I2C_2_Master_Init *****************
  2861 ;; Defined at:
  2862 ;;		line 4 in file "i2c.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_color_click_init
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text21
  2891   00166E                     __ptext21:
  2892                           	callstack 0
  2893   00166E                     _I2C_2_Master_Init:
  2894                           	callstack 28
  2895   00166E                     
  2896                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2897   00166E  010E               	movlb	14	; () banked
  2898   001670  51D9               	movf	217,w,b	;volatile
  2899   001672  0BF0               	andlw	-16
  2900   001674  0908               	iorlw	8
  2901   001676  6FD9               	movwf	217,b	;volatile
  2902   001678                     
  2903                           ; BSR set to: 14
  2904                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2905   001678  8BD9               	bsf	217,5,b	;volatile
  2906                           
  2907                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2908   00167A  0E9F               	movlw	159
  2909   00167C  6FD6               	movwf	214,b	;volatile
  2910   00167E                     
  2911                           ; BSR set to: 14
  2912                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2913   00167E  8A84               	bsf	132,5,c	;volatile
  2914   001680                     
  2915                           ; BSR set to: 14
  2916                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2917   001680  8C84               	bsf	132,6,c	;volatile
  2918   001682                     
  2919                           ; BSR set to: 14
  2920                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2921   001682  9BA7               	bcf	167,5,b	;volatile
  2922   001684                     
  2923                           ; BSR set to: 14
  2924                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2925   001684  9DA7               	bcf	167,6,b	;volatile
  2926                           
  2927                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2928   001686  0E1D               	movlw	29
  2929   001688  6F1D               	movwf	29,b	;volatile
  2930                           
  2931                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2932   00168A  0E1E               	movlw	30
  2933   00168C  6F1C               	movwf	28,b	;volatile
  2934                           
  2935                           ;i2c.c: 18:   RD5PPS=0x1C;
  2936   00168E  0E1C               	movlw	28
  2937   001690  6F6F               	movwf	111,b	;volatile
  2938                           
  2939                           ;i2c.c: 19:   RD6PPS=0x1B;
  2940   001692  0E1B               	movlw	27
  2941   001694  6F70               	movwf	112,b	;volatile
  2942   001696                     
  2943                           ; BSR set to: 14
  2944   001696  0012               	return		;funcret
  2945   001698                     __end_of_I2C_2_Master_Init:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _buggy_lights_init *****************
  2949 ;; Defined at:
  2950 ;;		line 4 in file "buggy_lights.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		None
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text22
  2979   001532                     __ptext22:
  2980                           	callstack 0
  2981   001532                     _buggy_lights_init:
  2982                           	callstack 29
  2983   001532                     
  2984                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  2985   001532  9884               	bcf	132,4,c	;volatile
  2986                           
  2987                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  2988   001534  9288               	bcf	136,1,c	;volatile
  2989                           
  2990                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  2991   001536  9684               	bcf	132,3,c	;volatile
  2992                           
  2993                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  2994   001538  9086               	bcf	134,0,c	;volatile
  2995                           
  2996                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  2997   00153A  9088               	bcf	136,0,c	;volatile
  2998                           
  2999                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  3000   00153C  887C               	bsf	124,4,c	;volatile
  3001                           
  3002                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  3003   00153E  8280               	bsf	128,1,c	;volatile
  3004                           
  3005                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  3006   001540  867C               	bsf	124,3,c	;volatile
  3007                           
  3008                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  3009   001542  807E               	bsf	126,0,c	;volatile
  3010                           
  3011                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  3012   001544  8080               	bsf	128,0,c	;volatile
  3013                           
  3014                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  3015   001546  9E84               	bcf	132,7,c	;volatile
  3016                           
  3017                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  3018   001548  9688               	bcf	136,3,c	;volatile
  3019                           
  3020                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  3021   00154A  8E7C               	bsf	124,7,c	;volatile
  3022                           
  3023                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  3024   00154C  8680               	bsf	128,3,c	;volatile
  3025                           
  3026                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  3027   00154E  9081               	bcf	129,0,c	;volatile
  3028                           
  3029                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  3030   001550  9483               	bcf	131,2,c	;volatile
  3031                           
  3032                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  3033   001552  9084               	bcf	132,0,c	;volatile
  3034                           
  3035                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  3036   001554  8079               	bsf	121,0,c	;volatile
  3037                           
  3038                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  3039   001556  847B               	bsf	123,2,c	;volatile
  3040                           
  3041                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  3042   001558  807C               	bsf	124,0,c	;volatile
  3043                           
  3044                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  3045   00155A  9281               	bcf	129,1,c	;volatile
  3046                           
  3047                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  3048   00155C  9C83               	bcf	131,6,c	;volatile
  3049                           
  3050                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  3051   00155E  9488               	bcf	136,2,c	;volatile
  3052                           
  3053                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  3054   001560  8279               	bsf	121,1,c	;volatile
  3055                           
  3056                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  3057   001562  8C7B               	bsf	123,6,c	;volatile
  3058                           
  3059                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  3060   001564  8480               	bsf	128,2,c	;volatile
  3061                           
  3062                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  3063   001566  9287               	bcf	135,1,c	;volatile
  3064                           
  3065                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  3066   001568  9881               	bcf	129,4,c	;volatile
  3067                           
  3068                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  3069   00156A  9E86               	bcf	134,7,c	;volatile
  3070                           
  3071                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  3072   00156C  827F               	bsf	127,1,c	;volatile
  3073                           
  3074                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  3075   00156E  8879               	bsf	121,4,c	;volatile
  3076                           
  3077                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  3078   001570  8E7E               	bsf	126,7,c	;volatile
  3079                           
  3080                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  3081   001572  9087               	bcf	135,0,c	;volatile
  3082                           
  3083                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  3084   001574  9E85               	bcf	133,7,c	;volatile
  3085                           
  3086                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  3087   001576  9681               	bcf	129,3,c	;volatile
  3088                           
  3089                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  3090   001578  807F               	bsf	127,0,c	;volatile
  3091                           
  3092                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  3093   00157A  8E7D               	bsf	125,7,c	;volatile
  3094                           
  3095                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  3096   00157C  8679               	bsf	121,3,c	;volatile
  3097   00157E  0012               	return		;funcret
  3098   001580                     __end_of_buggy_lights_init:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _Timer0_init *****************
  3102 ;; Defined at:
  3103 ;;		line 8 in file "timers.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text23
  3132   0016C0                     __ptext23:
  3133                           	callstack 0
  3134   0016C0                     _Timer0_init:
  3135                           	callstack 29
  3136   0016C0                     
  3137                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  3138   0016C0  50D6               	movf	214,w,c	;volatile
  3139   0016C2  0B1F               	andlw	-225
  3140   0016C4  0940               	iorlw	64
  3141   0016C6  6ED6               	movwf	214,c	;volatile
  3142   0016C8                     
  3143                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  3144   0016C8  88D6               	bsf	214,4,c	;volatile
  3145   0016CA                     
  3146                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  3147   0016CA  88D5               	bsf	213,4,c	;volatile
  3148                           
  3149                           ;timers.c: 14:     T0CON1bits.T0CKPS=0b1110;
  3150   0016CC  50D6               	movf	214,w,c	;volatile
  3151   0016CE  0BF0               	andlw	-16
  3152   0016D0  090E               	iorlw	14
  3153   0016D2  6ED6               	movwf	214,c	;volatile
  3154                           
  3155                           ;timers.c: 21:     TMR0H = 0;
  3156   0016D4  0E00               	movlw	0
  3157   0016D6  6ED4               	movwf	212,c	;volatile
  3158                           
  3159                           ;timers.c: 22:     TMR0L = 0;
  3160   0016D8  0E00               	movlw	0
  3161   0016DA  6ED3               	movwf	211,c	;volatile
  3162   0016DC                     
  3163                           ;timers.c: 24:     T0CON0bits.T0EN=1;
  3164   0016DC  8ED5               	bsf	213,7,c	;volatile
  3165   0016DE                     
  3166                           ;timers.c: 25:     PIE0bits.TMR0IE = 1;
  3167   0016DE  010E               	movlb	14	; () banked
  3168   0016E0  8B29               	bsf	41,5,b	;volatile
  3169   0016E2                     
  3170                           ; BSR set to: 14
  3171                           ;timers.c: 26:     INTCONbits.PEIE = 1;
  3172   0016E2  8CF2               	bsf	242,6,c	;volatile
  3173   0016E4                     
  3174                           ; BSR set to: 14
  3175                           ;timers.c: 27:     INTCONbits.GIE = 1;
  3176   0016E4  8EF2               	bsf	242,7,c	;volatile
  3177   0016E6                     
  3178                           ; BSR set to: 14
  3179   0016E6  0012               	return		;funcret
  3180   0016E8                     __end_of_Timer0_init:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _ISR *****************
  3184 ;; Defined at:
  3185 ;;		line 52 in file "timers.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		None
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		Interrupt level 2
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	intcode
  3213   000008                     __pintcode:
  3214                           	callstack 0
  3215   000008                     _ISR:
  3216                           	callstack 24
  3217                           
  3218                           ; BSR set to: 14
  3219                           ;incstack = 0
  3220   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3221   00000A                     
  3222                           ;timers.c: 55:     if (PIR0bits.TMR0IF) {
  3223   00000A  010E               	movlb	14	; () banked
  3224   00000C  AB33               	btfss	51,5,b	;volatile
  3225   00000E  EF0B  F000         	goto	i2u143_41
  3226   000012  EF0D  F000         	goto	i2u143_40
  3227   000016                     i2u143_41:
  3228   000016  EF0E  F000         	goto	i2l605
  3229   00001A                     i2u143_40:
  3230   00001A                     
  3231                           ; BSR set to: 14
  3232                           ;timers.c: 63:         PIR0bits.TMR0IF = 0;
  3233   00001A  9B33               	bcf	51,5,b	;volatile
  3234   00001C                     i2l605:
  3235                           
  3236                           ; BSR set to: 14
  3237   00001C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3238   00001E  0011               	retfie		f
  3239   000020                     __end_of_ISR:
  3240                           	callstack 0
  3241                           
  3242                           	psect	rparam
  3243   000000                     
  3244                           	psect	temp
  3245   00005F                     btemp:
  3246                           	callstack 0
  3247   00005F                     	ds	1
  3248   000000                     int$flags	set	btemp
  3249   000000                     wtemp8	set	btemp+1
  3250   000000                     ttemp5	set	btemp+1
  3251   000000                     ttemp6	set	btemp+4
  3252   000000                     ttemp7	set	btemp+8
  3253                           
  3254                           	psect	idloc
  3255                           
  3256                           ;Config register IDLOC0 @ 0x200000
  3257                           ;	unspecified, using default values
  3258   200000                     	org	2097152
  3259   200000  FFFF               	dw	65535
  3260                           
  3261                           ;Config register IDLOC1 @ 0x200002
  3262                           ;	unspecified, using default values
  3263   200002                     	org	2097154
  3264   200002  FFFF               	dw	65535
  3265                           
  3266                           ;Config register IDLOC2 @ 0x200004
  3267                           ;	unspecified, using default values
  3268   200004                     	org	2097156
  3269   200004  FFFF               	dw	65535
  3270                           
  3271                           ;Config register IDLOC3 @ 0x200006
  3272                           ;	unspecified, using default values
  3273   200006                     	org	2097158
  3274   200006  FFFF               	dw	65535
  3275                           
  3276                           ;Config register IDLOC4 @ 0x200008
  3277                           ;	unspecified, using default values
  3278   200008                     	org	2097160
  3279   200008  FFFF               	dw	65535
  3280                           
  3281                           ;Config register IDLOC5 @ 0x20000A
  3282                           ;	unspecified, using default values
  3283   20000A                     	org	2097162
  3284   20000A  FFFF               	dw	65535
  3285                           
  3286                           ;Config register IDLOC6 @ 0x20000C
  3287                           ;	unspecified, using default values
  3288   20000C                     	org	2097164
  3289   20000C  FFFF               	dw	65535
  3290                           
  3291                           ;Config register IDLOC7 @ 0x20000E
  3292                           ;	unspecified, using default values
  3293   20000E                     	org	2097166
  3294   20000E  FFFF               	dw	65535
  3295                           
  3296                           	psect	config
  3297                           
  3298                           ;Config register CONFIG1L @ 0x300000
  3299                           ;	External Oscillator mode Selection bits
  3300                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3301                           ;	Power-up default value for COSC bits
  3302                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3303   300000                     	org	3145728
  3304   300000  AA                 	db	170
  3305                           
  3306                           ;Config register CONFIG1H @ 0x300001
  3307                           ;	unspecified, using default values
  3308                           ;	Clock Out Enable bit
  3309                           ;	CLKOUTEN = 0x1, unprogrammed default
  3310                           ;	Clock Switch Enable bit
  3311                           ;	CSWEN = 0x1, unprogrammed default
  3312                           ;	Fail-Safe Clock Monitor Enable bit
  3313                           ;	FCMEN = 0x1, unprogrammed default
  3314   300001                     	org	3145729
  3315   300001  FF                 	db	255
  3316                           
  3317                           ;Config register CONFIG2L @ 0x300002
  3318                           ;	unspecified, using default values
  3319                           ;	Master Clear Enable bit
  3320                           ;	MCLRE = 0x1, unprogrammed default
  3321                           ;	Power-up Timer Enable bit
  3322                           ;	PWRTE = 0x1, unprogrammed default
  3323                           ;	Low-power BOR enable bit
  3324                           ;	LPBOREN = 0x1, unprogrammed default
  3325                           ;	Brown-out Reset Enable bits
  3326                           ;	BOREN = 0x3, unprogrammed default
  3327   300002                     	org	3145730
  3328   300002  FF                 	db	255
  3329                           
  3330                           ;Config register CONFIG2H @ 0x300003
  3331                           ;	unspecified, using default values
  3332                           ;	Brown Out Reset Voltage selection bits
  3333                           ;	BORV = 0x3, unprogrammed default
  3334                           ;	ZCD Disable bit
  3335                           ;	ZCD = 0x1, unprogrammed default
  3336                           ;	PPSLOCK bit One-Way Set Enable bit
  3337                           ;	PPS1WAY = 0x1, unprogrammed default
  3338                           ;	Stack Full/Underflow Reset Enable bit
  3339                           ;	STVREN = 0x1, unprogrammed default
  3340                           ;	Debugger Enable bit
  3341                           ;	DEBUG = 0x1, unprogrammed default
  3342                           ;	Extended Instruction Set Enable bit
  3343                           ;	XINST = 0x1, unprogrammed default
  3344   300003                     	org	3145731
  3345   300003  FF                 	db	255
  3346                           
  3347                           ;Config register CONFIG3L @ 0x300004
  3348                           ;	WDT Period Select bits
  3349                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3350                           ;	WDT operating mode
  3351                           ;	WDTE = OFF, WDT Disabled
  3352   300004                     	org	3145732
  3353   300004  9F                 	db	159
  3354                           
  3355                           ;Config register CONFIG3H @ 0x300005
  3356                           ;	unspecified, using default values
  3357                           ;	WDT Window Select bits
  3358                           ;	WDTCWS = 0x7, unprogrammed default
  3359                           ;	WDT input clock selector
  3360                           ;	WDTCCS = 0x7, unprogrammed default
  3361   300005                     	org	3145733
  3362   300005  FF                 	db	255
  3363                           
  3364                           ;Config register CONFIG4L @ 0x300006
  3365                           ;	unspecified, using default values
  3366                           ;	Write Protection Block 0
  3367                           ;	WRT0 = 0x1, unprogrammed default
  3368                           ;	Write Protection Block 1
  3369                           ;	WRT1 = 0x1, unprogrammed default
  3370                           ;	Write Protection Block 2
  3371                           ;	WRT2 = 0x1, unprogrammed default
  3372                           ;	Write Protection Block 3
  3373                           ;	WRT3 = 0x1, unprogrammed default
  3374                           ;	Write Protection Block 3
  3375                           ;	WRT4 = 0x1, unprogrammed default
  3376                           ;	Write Protection Block 3
  3377                           ;	WRT5 = 0x1, unprogrammed default
  3378                           ;	Write Protection Block 3
  3379                           ;	WRT6 = 0x1, unprogrammed default
  3380                           ;	Write Protection Block 3
  3381                           ;	WRT7 = 0x1, unprogrammed default
  3382   300006                     	org	3145734
  3383   300006  FF                 	db	255
  3384                           
  3385                           ;Config register CONFIG4H @ 0x300007
  3386                           ;	unspecified, using default values
  3387                           ;	Configuration Register Write Protection bit
  3388                           ;	WRTC = 0x1, unprogrammed default
  3389                           ;	Boot Block Write Protection bit
  3390                           ;	WRTB = 0x1, unprogrammed default
  3391                           ;	Data EEPROM Write Protection bit
  3392                           ;	WRTD = 0x1, unprogrammed default
  3393                           ;	Scanner Enable bit
  3394                           ;	SCANE = 0x1, unprogrammed default
  3395                           ;	Low Voltage Programming Enable bit
  3396                           ;	LVP = 0x1, unprogrammed default
  3397   300007                     	org	3145735
  3398   300007  FF                 	db	255
  3399                           
  3400                           ;Config register CONFIG5L @ 0x300008
  3401                           ;	unspecified, using default values
  3402                           ;	UserNVM Program Memory Code Protection bit
  3403                           ;	CP = 0x1, unprogrammed default
  3404                           ;	DataNVM Memory Code Protection bit
  3405                           ;	CPD = 0x1, unprogrammed default
  3406   300008                     	org	3145736
  3407   300008  FF                 	db	255
  3408                           
  3409                           ;Config register CONFIG5H @ 0x300009
  3410                           ;	unspecified, using default values
  3411   300009                     	org	3145737
  3412   300009  FF                 	db	255
  3413                           
  3414                           ;Config register CONFIG6L @ 0x30000A
  3415                           ;	unspecified, using default values
  3416                           ;	Table Read Protection Block 0
  3417                           ;	EBTR0 = 0x1, unprogrammed default
  3418                           ;	Table Read Protection Block 1
  3419                           ;	EBTR1 = 0x1, unprogrammed default
  3420                           ;	Table Read Protection Block 2
  3421                           ;	EBTR2 = 0x1, unprogrammed default
  3422                           ;	Table Read Protection Block 3
  3423                           ;	EBTR3 = 0x1, unprogrammed default
  3424                           ;	Table Read Protection Block 4
  3425                           ;	EBTR4 = 0x1, unprogrammed default
  3426                           ;	Table Read Protection Block 5
  3427                           ;	EBTR5 = 0x1, unprogrammed default
  3428                           ;	Table Read Protection Block 6
  3429                           ;	EBTR6 = 0x1, unprogrammed default
  3430                           ;	Table Read Protection Block 7
  3431                           ;	EBTR7 = 0x1, unprogrammed default
  3432   30000A                     	org	3145738
  3433   30000A  FF                 	db	255
  3434                           
  3435                           ;Config register CONFIG6H @ 0x30000B
  3436                           ;	unspecified, using default values
  3437                           ;	Boot Block Table Read Protection bit
  3438                           ;	EBTRB = 0x1, unprogrammed default
  3439   30000B                     	org	3145739
  3440   30000B  FF                 	db	255
  3441                           tosu	equ	0xFFF
  3442                           tosh	equ	0xFFE
  3443                           tosl	equ	0xFFD
  3444                           stkptr	equ	0xFFC
  3445                           pclatu	equ	0xFFB
  3446                           pclath	equ	0xFFA
  3447                           pcl	equ	0xFF9
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           indf0	equ	0xFEF
  3455                           postinc0	equ	0xFEE
  3456                           postdec0	equ	0xFED
  3457                           preinc0	equ	0xFEC
  3458                           plusw0	equ	0xFEB
  3459                           fsr0h	equ	0xFEA
  3460                           fsr0l	equ	0xFE9
  3461                           wreg	equ	0xFE8
  3462                           indf1	equ	0xFE7
  3463                           postinc1	equ	0xFE6
  3464                           postdec1	equ	0xFE5
  3465                           preinc1	equ	0xFE4
  3466                           plusw1	equ	0xFE3
  3467                           fsr1h	equ	0xFE2
  3468                           fsr1l	equ	0xFE1
  3469                           bsr	equ	0xFE0
  3470                           indf2	equ	0xFDF
  3471                           postinc2	equ	0xFDE
  3472                           postdec2	equ	0xFDD
  3473                           preinc2	equ	0xFDC
  3474                           plusw2	equ	0xFDB
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        81
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      94
    BANK0           160      0     141
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    readTrail@man	PTR unsigned char  size(1) Largest target is 1
		 -> main@mann(COMRAM[1]), 

    readTrail@tH	PTR unsigned char  size(1) Largest target is 1
		 -> main@timerH(COMRAM[1]), 

    readTrail@tL	PTR unsigned char  size(1) Largest target is 1
		 -> main@timerL(COMRAM[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2567$buffer	PTR unsigned char  size(2) Largest target is 0

    S2567$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    5197
                                             66 COMRAM    23    23      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                          _readTrail
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    4068
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     288
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readTrail                                            3     0      3     294
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _readTrail
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      62        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 14:12:56 2024

               _turn180Delay 0064              _trail_timer_low 0088                           l31 157E  
                         l53 166C                           l56 1728                 ___awdiv@sign 0006  
           _trail_timer_high 009C                          l144 13CC                          l242 1698  
                        l402 175E                          l411 1708                          l245 16BE  
                        l254 1774                          l239 1696                          l248 177E  
                        l408 142E                          l257 176A                          l390 1746  
                        l591 16E6                          l399 174A                          l852 133C  
                        l597 1604                          l839 11D2                          u320 175A  
                        u321 1756                          u180 16A8                          u181 16A4  
                        u190 16BE                          u191 16BA                          _ISR 0008  
                        u810 1122                          u811 111E                          u820 113C  
                        u900 12F2                          u821 1138                          u901 12EE  
                        u830 1162                          u910 1308                          u831 115E  
                        u911 1304                          u840 1180                          u920 132C  
                        u841 117C                          u921 1328                          u850 119C  
                        u930 11E4                          u851 1198                          u931 11E0  
                        u860 11C2                          u940 11F4                          u861 11BE  
                        u941 11F0                          u870 12A0                          u950 121A  
                        u871 129C                          u951 1216                          u880 12BA  
                        u960 124C                          u881 12B6                          u961 1248  
                        u890 12D4                          u970 1614                          u891 12D0  
                        u971 1610                          u980 0E38                          u981 0E34  
                        u990 0E7C                          u991 0E78                          _abs 1606  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 0060  
                       ?_ISR 0001                         ?_abs 0007                         l2200 11CA  
                       l2210 12A8                         l2220 12DC                         l2212 12AC  
                       l2204 128E                         l2300 0F98                         l1341 1638  
                       l1333 14D8                         l2230 1316                         l2222 12E4  
                       l2214 12BA                         l2206 1292                         l2302 0F9A  
                       l2310 0FCC                         l1334 14E0                         l1327 0FAC  
                       l2160 1110                         l2224 12F2                         l2232 131C  
                       l2216 12C2                         l2208 12A0                         l2240 11D4  
                       l2312 0FEE                         l1328 0FFE                         l2304 0FB8  
                       l1353 128C                         l2170 113C                         l2162 1114  
                       l2234 132C                         l2226 1308                         l2218 12D4  
                       l1338 1620                         l2250 124C                         l2242 11E4  
                       l2314 0FF6                         l2306 0FC0                         l1540 1766  
                       l2180 116A                         l2172 1144                         l2164 1122  
                       l2236 1334                         l2228 1310                         l1364 1780  
                       l2244 11F4                         l2260 0E12                         l2340 14B8  
                       l1470 1698                         l1534 1776                         l1542 176C  
                       l2342 170C                         l2430 13CE                         l2190 11A4  
                       l2182 1172                         l2174 1148                         l2166 112A  
                       l2254 1606                         l2246 11FE                         l2270 0E5C  
                       l2262 0E38                         l2334 148C                         l1286 15CA  
                       l1472 16A8                         l1536 177A                         l1544 1770  
                       l2432 13D2                         l2192 11A6                         l2184 1180  
                       l2176 1150                         l2168 112E                         l2256 1614  
                       l2248 121A                         l2280 0ED6                         l2272 0E7C  
                       l2264 0E40                         l2336 1490                         l2440 158C  
                       l2600 106C                         l1538 1762                         l2530 15FE  
                       l1562 174A                         l2434 13F8                         l2194 11AC  
                       l2186 1186                         l2178 1162                         l2290 0F48  
                       l2282 0F06                         l2274 0E9C                         l2266 0E4E  
                       l2258 0E0A                         l2338 149E                         l2442 1594  
                       l2610 107E                         l2602 1070                         l1580 1680  
                       l2460 1662                         l2452 163A                         l2532 1600  
                       l1564 175A                         l2436 13FC                         l2188 119C  
                       l2196 11B2                         l2292 0F58                         l2284 0F22  
                       l2276 0EB4                         l2268 0E52                         l2444 159C  
                       l2620 108E                         l2612 1080                         l2604 1074  
                       l1582 1682                         l1574 166E                         l2454 163E  
                       l2470 139C                         l2462 133E                         l1830 1742  
                       l1822 172A                         l2534 1602                         l2198 11C2  
                       l2294 0F68                         l2286 0F26                         l2278 0EBE  
                       l2446 15B4                         l2438 1580                         l2630 10DC  
                       l2622 1092                         l2614 1084                         l2606 1078  
                       l1840 16DC                         l1584 1684                         l1576 1678  
                       l2456 1648                         l2480 13BE                         l2472 13A6  
                       l2464 134E                         l1832 1744                         l1824 1734  
                       l2528 15CC                         l2296 0F76                         l2288 0F38  
                       l2448 15C2                         l2536 16E8                         l2632 10E6  
                       l2624 10A0                         l2616 1086                         l2608 107C  
                       l1842 16DE                         l1834 16C0                         l1578 167E  
                       l2458 1658                         l2482 13C0                         l2474 13A8  
                       l2466 1374                         l1826 1736                         l2298 0F7E  
                       l2538 16FE                         l2634 10F0                         l2626 10B0  
                       l2618 108A                         l2570 1000                         l1844 16E2  
                       l1836 16C8                         l2484 13CA                         l2476 13B2  
                       l2468 1378                         l1828 1740                         l2628 10D2  
                       l2580 102C                         l2572 1018                         l1846 16E4  
                       l1838 16CA                         l2478 13B4                         l2590 104C  
                       l2582 1030                         l2574 1018                         l1696 1532  
                       l2592 1050                         l2584 1038                         l2576 1024  
                       l2594 1054                         l2586 1040                         l2578 1028  
                       l2596 105C                         l2588 1048                         l2598 1064  
                       STR_1 0E01                         STR_2 0E06                         u1000 0E9C  
                       u1001 0E98                         u1010 0ED2                         u1011 0ECC  
                       u1020 0ED4                         u1100 14D8                         u1101 14D4  
                       u1030 0F38                         u1031 0F34                         u1040 0F48  
                       u1041 0F44                         u1050 0F58                         u1051 0F54  
                       u1060 0F68                         u1061 0F64                         u1070 0FAC  
                       u1071 0FA8                         u1270 13F4                         u1350 10A0  
                       u1351 109C                         u1280 141E                         u1360 10C2  
               _BAUD4CONbits 0EE9                         u1361 10BA                         u1290 142E  
                       u1291 142A                         u1277 13EA                         u1287 1414  
                       u1378 10C4                         _T2PR 0FBC                         u1837 100A  
                       u1847 10FA                         u1857 164E                         abs@a 0007  
                       _dbuf 00B0                         _main 1000                         _prec 00E8  
                       _nout 00E4                         fsr0h 0FEA                         fsr1h 0FE2  
                       indf0 0FEF                         fsr2h 0FDA                         fsr0l 0FE9  
                       indf1 0FE7                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 005F                         start 0020  
               ___param_bank 0000                        ??_ISR 0001                        ??_abs 0009  
             _sendIntSerial4 16E8                        ?_main 0001           _timer_high_pointer 005E  
            __end_of___awdiv 11D4              __end_of___awmod 133E              ___awdiv@divisor 0003  
                      i2l604 001A                        i2l605 001C              ___awdiv@counter 0005  
               vfpfcnvrt@cnt 0010                 vfpfcnvrt@fmt 000C                        _TMR0H 0FD4  
                      _TMR0L 0FD3      __end_of_sendCharSerial4 1760   __end_of_I2C_2_Master_Start 1780  
 __end_of_I2C_2_Master_Write 176C                  _turningGear 0070                        _flags 00EA  
                      _fputc 11D4                        _width 00E6                        _putch 1780  
          _turnRight135Delay 0066                        tablat 0FF5              _turnLeft90Delay 006C  
                      ttemp5 0060                        ttemp6 0063                        ttemp7 0067  
                      status 0FD8                        wtemp8 0060              __end_of_sprintf 15CC  
            __initialization 1430                 __end_of_main 1110       __end_of_sendIntSerial4 170A  
                     ??_main 0043                __activetblptr 0003                       ?_fputc 0001  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0001                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       _RG6PPS 0E88                       i2l2796 000A  
              vfpfcnvrt@done 000F     __end_of_color_click_init 166E                       _RX4PPS 0E15  
                     _TX4REG 0EE4             _turnLeft135Delay 0068                ??_Timer0_init 0001  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 001B                    ??___awdiv 0005  
                  ??___awmod 0005              ?_sendIntSerial4 0030                       clear_0 1468  
                     clear_1 1474             ___awdiv@quotient 0007              ___awmod@divisor 0003  
                readTrail@tH 0001                  readTrail@tL 0002                       isa$std 0001  
            ___awmod@counter 0005                       fputc@c 0001                 __pdataCOMRAM 005E  
          _timer_low_pointer 006F                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8             ?_sendCharSerial4 0001  
                     putch@c 0001             __end_of_vfprintf 14E2            ??_initDCmotorsPWM 0003  
                  ??_sprintf 0021            _buggy_lights_init 1532                   __accesstop 0060  
    __end_of__initialization 1482           ?_buggy_lights_init 0001                ___rparam_used 0001  
             __pcstackCOMRAM 0001                 __pidataBANK0 14E2          ??_buggy_lights_init 0001  
              __end_of_fputc 128E                __end_of_putch 1782          __end_of_Timer0_init 16E8  
                    ??_fputc 0004    __end_of_buggy_lights_init 1580                      ??_putch 0001  
                 __pbssBANK0 00B0                   __pbssBANK1 0100            _color_writetoaddr 170A  
               _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003          ??_color_writetoaddr 0004  
                    _SP4BRGH 0EE6                      _SP4BRGL 0EE5                      _SSP2ADD 0ED6  
                    _SSP2BUF 0ED5       color_writetoaddr@value 0003    __end_of_color_writetoaddr 172A  
         _I2C_2_Master_Start 1776                   _initUSART4 172A           _I2C_2_Master_Write 1760  
                    __Hparam 0000                      __Lparam 0000                  _Timer0_init 16C0  
    sendStringSerial4@string 0002                      ___awdiv 1110                      ___awmod 128E  
        ?_I2C_2_Master_Start 0001          ?_I2C_2_Master_Write 0001                    ?_vfprintf 0018  
               __psmallconst 0E00                      __pcinit 1430                      __ramtop 0E00  
                    __ptext0 1000                      __ptext1 16E8                      __ptext2 1580  
                    __ptext3 148C                      __ptext4 0E0A                      __ptext5 11D4  
                    __ptext6 1780                      __ptext7 1606                      __ptext8 128E  
                    __ptext9 1110                    _T2CONbits 0FBD            __end_of_readTrail 1606  
           ___awmod@dividend 0001                    _T2HLTbits 0FBE                 readTrail@man 0003  
              _RxBufWriteCnt 005D                      _sprintf 1580         ??_I2C_2_Master_Start 0002  
       ??_I2C_2_Master_Write 0002         end_of_initialization 1482                      fputc@fp 0003  
          ?_color_click_init 0001           ??_color_click_init 0005             ??_sendIntSerial4 0032  
          __end_of_vfpfcnvrt 1000                      postdec1 0FE5                      postdec2 0FDD  
                    postinc0 0FEE                      postinc1 0FE6                      postinc2 0FDE  
           vfpfcnvrt@convarg 0013                   ??_vfprintf 001B              _initDCmotorsPWM 133E  
       sendIntSerial4@string 0032                    _PORTFbits 0F8E                    _TRISAbits 0F81  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
   color_writetoaddr@address 0004                  _CCP1CONbits 0FAB                 _EUSART4RXbuf 00D0  
               _EUSART4TXbuf 0100                  _CCP2CONbits 0FA7                  _CCP3CONbits 0F26  
                ?_initUSART4 0001                  _CCP4CONbits 0F22    sendCharSerial4@charToSend 0001  
                 main@motorL 0048                   main@motorR 0051                   main@timerH 0045  
                 main@timerL 0046                  vfpfcnvrt@ap 000D                  vfpfcnvrt@cp 0012  
                vfpfcnvrt@fp 000B                __pidataCOMRAM 1782          start_initialization 1430  
                __end_of_ISR 0020                  __end_of_abs 163A                _TxBufWriteCnt 005B  
           _turnRight90Delay 006A      __end_of_initDCmotorsPWM 13CE                  vfprintf@fmt 0019  
                __pdataBANK0 0060                  __pbssCOMRAM 005A                    _backtrack 00EC  
               ?_Timer0_init 0001                    __pintcode 0008                     ?___awdiv 0001  
                   ?___awmod 0001                  __smallconst 0E00            _I2C_2_Master_Idle 1698  
          _I2C_2_Master_Init 166E            _I2C_2_Master_Stop 176C                 _RxBufReadCnt 005C  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001  
              _headbuttDelay 0062                    _readTrail 15CC     initDCmotorsPWM@PWMperiod 0001  
                   ?_sprintf 001C                    _rampDelay 0073            _sendStringSerial4 13CE  
        ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001                     _LATAbits 0F79  
        ??_I2C_2_Master_Stop 0002                     _LATCbits 0F7B                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0002  
                   _PIE4bits 0E2D                     i2u143_40 001A                     i2u143_41 0016  
                   _PIR0bits 0E33                     _PIR4bits 0E37             ?_initDCmotorsPWM 0001  
          ??_sendCharSerial4 0001                     _SSP2CON2 0EDA          ??_sendStringSerial4 0004  
                   _SSP2STAT 0ED8                    _vfpfcnvrt 0E0A    __end_of_I2C_2_Master_Idle 16C0  
  __end_of_I2C_2_Master_Init 1698    __end_of_I2C_2_Master_Stop 1776  I2C_2_Master_Write@data_byte 0002  
               _TxBufReadCnt 005A                   ?_readTrail 0001                   vfpfcnvrt@c 0017  
                  copy_data0 1444    __end_of_sendStringSerial4 1430                 ??_initUSART4 0001  
                   __Hrparam 0000                   vfprintf@ap 001A                     __Lrparam 0000  
                 vfprintf@fp 0018                   ?_vfpfcnvrt 000B                   _ANSELDbits 0EA7  
                 _ANSELFbits 0EB4                   sprintf@fmt 001E                   sprintf@ret 0021  
                 _T0CON0bits 0FD5                   _T0CON1bits 0FD6           __end_of_initUSART4 1748  
                   __ptext10 13CE                     __ptext11 1748                     __ptext20 1698  
                   __ptext12 15CC                     __ptext21 166E                     __ptext13 172A  
                   __ptext22 1532                     __ptext14 133E                     __ptext23 16C0  
                   __ptext15 163A                     __ptext16 170A                     __ptext17 1760  
                   __ptext18 176C                     __ptext19 1776                 _SSP2CON1bits 0ED9  
               _SSP2CON2bits 0EDA                     isa$xinst 0000                   _RC4STAbits 0EE7  
                   int$flags 005F                     _vfprintf 148C                     main@mann 0047  
                 _INTCONbits 0FF2                  ??_readTrail 0004                     intlevel2 0000  
                  sprintf@ap 0023                 _topGearRight 0071            _manoeuvre_pointer 006E  
                ??_vfpfcnvrt 000E             _color_click_init 163A        sendIntSerial4@integer 0030  
                _topGearLeft 0072                     sprintf@f 0024                     sprintf@s 001C  
                 _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C              _trail_manoeuvre 0074  
            _manoeuvre_count 00EB                   _TX4STAbits 0EE8              _sendCharSerial4 1748  
