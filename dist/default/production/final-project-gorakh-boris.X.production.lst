

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 13:33:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 18/08/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F67K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataBANK0
    85   001790                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _squareDelay
    89   001790  012C               	dw	300
    90                           
    91                           ;initializer for _headbuttDelay
    92   001792  0046               	dw	70
    93                           
    94                           ;initializer for _turn180Delay
    95   001794  01FE               	dw	510
    96                           
    97                           ;initializer for _turnRight135Delay
    98   001796  012C               	dw	300
    99                           
   100                           ;initializer for _turnLeft135Delay
   101   001798  012C               	dw	300
   102                           
   103                           ;initializer for _turnRight90Delay
   104   00179A  00AF               	dw	175
   105                           
   106                           ;initializer for _turnLeft90Delay
   107   00179C  00AF               	dw	175
   108                           
   109                           ;initializer for _manoeuvre_pointer
   110   00179E  A2                 	db	low _trail_manoeuvre
   111                           
   112                           ;initializer for _timer_low_pointer
   113   00179F  B6                 	db	low _trail_timer_low
   114                           
   115                           ;initializer for _timer_high_pointer
   116   0017A0  DF                 	db	low _trail_timer_high
   117                           
   118                           ;initializer for _turningGear
   119   0017A1  2A                 	db	42
   120                           
   121                           ;initializer for _topGearRight
   122   0017A2  14                 	db	20
   123                           
   124                           ;initializer for _topGearLeft
   125   0017A3  14                 	db	20
   126                           
   127                           ;initializer for _rampDelay
   128   0017A4  08                 	db	8
   129                           
   130                           ;initializer for _trail_timer_high
   131   0017A5  03                 	db	3
   132   0017A6  06                 	db	6
   133   0017A7  03                 	db	3
   134   0017A8  06                 	db	6
   135   0017A9  03                 	db	3
   136   0017AA  06                 	db	6
   137   0017AB  03                 	db	3
   138   0017AC  06                 	db	6
   139   0017AD  03                 	db	3
   140   0017AE  06                 	db	6
   141   0017AF  03                 	db	3
   142   0017B0  06                 	db	6
   143   0017B1  03                 	db	3
   144   0017B2  06                 	db	6
   145   0017B3  03                 	db	3
   146   0017B4  06                 	db	6
   147   0017B5  03                 	db	3
   148   0017B6  06                 	db	6
   149   0017B7  03                 	db	3
   150   0017B8  06                 	db	6
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _LATEbits	set	3965
   155   000000                     _TRISEbits	set	3973
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISGbits	set	3975
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATHbits	set	3968
   160   000000                     _TRISFbits	set	3974
   161   000000                     _TRISHbits	set	3976
   162   000000                     _SSP2CON2bits	set	3802
   163   000000                     _RX4PPS	set	3605
   164   000000                     _SSP2CLKPPS	set	3612
   165   000000                     _SSP2DATPPS	set	3613
   166   000000                     _RC7PPS	set	3689
   167   000000                     _RE2PPS	set	3700
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATDbits	set	3964
   170   000000                     _TRISDbits	set	3972
   171   000000                     _PORTFbits	set	3982
   172   000000                     _T2PR	set	4028
   173   000000                     _T2CONbits	set	4029
   174   000000                     _CCPR2H	set	4006
   175   000000                     _CCPR1H	set	4010
   176   000000                     _TRISCbits	set	3971
   177   000000                     _TRISAbits	set	3969
   178   000000                     _LATCbits	set	3963
   179   000000                     _RE4PPS	set	3702
   180   000000                     _RG6PPS	set	3720
   181   000000                     _RD5PPS	set	3695
   182   000000                     _ANSELDbits	set	3751
   183   000000                     _SSP2ADD	set	3798
   184   000000                     _SSP2CON1bits	set	3801
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _CCP2CONbits	set	4007
   196   000000                     _CCP3CONbits	set	3878
   197   000000                     _CCP4CONbits	set	3874
   198   000000                     _RC4REG	set	3811
   199   000000                     _SP4BRGL	set	3813
   200   000000                     _TX4STAbits	set	3816
   201   000000                     _BAUD4CONbits	set	3817
   202   000000                     _SSP2CON2	set	3802
   203   000000                     _SSP2STAT	set	3800
   204   000000                     _ANSELFbits	set	3764
   205   000000                     _SSP2BUF	set	3797
   206   000000                     _PIE0bits	set	3625
   207   000000                     _PIE4bits	set	3629
   208   000000                     _PIR4bits	set	3639
   209   000000                     _RC0PPS	set	3682
   210   000000                     _RD6PPS	set	3696
   211   000000                     _PIR0bits	set	3635
   212   000000                     _INTCONbits	set	4082
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_1:
   219                           
   220                           ; BSR set to: 14
   221   000E01  25                 	db	37
   222   000E02  64                 	db	100	;'d'
   223   000E03  20                 	db	32
   224   000E04  0D                 	db	13
   225   000E05  00                 	db	0
   226   000E06                     STR_2:
   227                           
   228                           ; BSR set to: 14
   229   000E06  25                 	db	37
   230   000E07  64                 	db	100	;'d'
   231   000E08  20                 	db	32
   232   000E09  00                 	db	0
   233   000E0A  00                 	db	0	; dummy byte at the end
   234   000000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238   00164C                     __pcinit:
   239                           	callstack 0
   240   00164C                     start_initialization:
   241                           	callstack 0
   242   00164C                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK0 (41 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247   00164C  0E90               	movlw	low __pidataBANK0
   248   00164E  6EF6               	movwf	tblptrl,c
   249   001650  0E17               	movlw	high __pidataBANK0
   250   001652  6EF7               	movwf	tblptrh,c
   251   001654  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252   001656  6EF8               	movwf	tblptru,c
   253   001658  EE00  F0CA         	lfsr	0,__pdataBANK0
   254   00165C  EE10 F029          	lfsr	1,41
   255   001660                     copy_data0:
   256   001660  0009               	tblrd		*+
   257   001662  CFF5 FFEE          	movff	tablat,postinc0
   258   001666  50E5               	movf	postdec1,w,c
   259   001668  50E1               	movf	fsr1l,w,c
   260   00166A  E1FA               	bnz	copy_data0
   261                           
   262                           ; Clear objects allocated to BANK1 (60 bytes)
   263   00166C  EE01  F000         	lfsr	0,__pbssBANK1
   264   001670  0E3C               	movlw	60
   265   001672                     clear_0:
   266   001672  6AEE               	clrf	postinc0,c
   267   001674  06E8               	decf	wreg,f,c
   268   001676  E1FD               	bnz	clear_0
   269                           
   270                           ; Clear objects allocated to BANK0 (106 bytes)
   271   001678  EE00  F060         	lfsr	0,__pbssBANK0
   272   00167C  0E6A               	movlw	106
   273   00167E                     clear_1:
   274   00167E  6AEE               	clrf	postinc0,c
   275   001680  06E8               	decf	wreg,f,c
   276   001682  E1FD               	bnz	clear_1
   277   001684                     end_of_initialization:
   278                           	callstack 0
   279   001684                     __end_of__initialization:
   280                           	callstack 0
   281   001684  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282   001686  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283   001688  0100               	movlb	0
   284   00168A  EF01  F008         	goto	_main	;jump to C main() function
   285                           
   286                           	psect	bssBANK0
   287   000060                     __pbssBANK0:
   288                           	callstack 0
   289   000060                     _dbuf:
   290                           	callstack 0
   291   000060                     	ds	32
   292   000080                     _EUSART4RXbuf:
   293                           	callstack 0
   294   000080                     	ds	20
   295   000094                     _nout:
   296                           	callstack 0
   297   000094                     	ds	2
   298   000096                     _width:
   299                           	callstack 0
   300   000096                     	ds	2
   301   000098                     _prec:
   302                           	callstack 0
   303   000098                     	ds	2
   304   00009A                     _flags:
   305                           	callstack 0
   306   00009A                     	ds	1
   307   00009B                     _manoeuvre_count:
   308                           	callstack 0
   309   00009B                     	ds	1
   310   00009C                     _returnFlag:
   311                           	callstack 0
   312   00009C                     	ds	1
   313   00009D                     _returning:
   314                           	callstack 0
   315   00009D                     	ds	1
   316   00009E                     _TxBufReadCnt:
   317                           	callstack 0
   318   00009E                     	ds	1
   319   00009F                     _TxBufWriteCnt:
   320                           	callstack 0
   321   00009F                     	ds	1
   322   0000A0                     _RxBufReadCnt:
   323                           	callstack 0
   324   0000A0                     	ds	1
   325   0000A1                     _RxBufWriteCnt:
   326                           	callstack 0
   327   0000A1                     	ds	1
   328   0000A2                     _trail_manoeuvre:
   329                           	callstack 0
   330   0000A2                     	ds	20
   331   0000B6                     _trail_timer_low:
   332                           	callstack 0
   333   0000B6                     	ds	20
   334                           
   335                           	psect	dataBANK0
   336   0000CA                     __pdataBANK0:
   337                           	callstack 0
   338   0000CA                     _squareDelay:
   339                           	callstack 0
   340   0000CA                     	ds	2
   341   0000CC                     _headbuttDelay:
   342                           	callstack 0
   343   0000CC                     	ds	2
   344   0000CE                     _turn180Delay:
   345                           	callstack 0
   346   0000CE                     	ds	2
   347   0000D0                     _turnRight135Delay:
   348                           	callstack 0
   349   0000D0                     	ds	2
   350   0000D2                     _turnLeft135Delay:
   351                           	callstack 0
   352   0000D2                     	ds	2
   353   0000D4                     _turnRight90Delay:
   354                           	callstack 0
   355   0000D4                     	ds	2
   356   0000D6                     _turnLeft90Delay:
   357                           	callstack 0
   358   0000D6                     	ds	2
   359   0000D8                     _manoeuvre_pointer:
   360                           	callstack 0
   361   0000D8                     	ds	1
   362   0000D9                     _timer_low_pointer:
   363                           	callstack 0
   364   0000D9                     	ds	1
   365   0000DA                     _timer_high_pointer:
   366                           	callstack 0
   367   0000DA                     	ds	1
   368   0000DB                     _turningGear:
   369                           	callstack 0
   370   0000DB                     	ds	1
   371   0000DC                     _topGearRight:
   372                           	callstack 0
   373   0000DC                     	ds	1
   374   0000DD                     _topGearLeft:
   375                           	callstack 0
   376   0000DD                     	ds	1
   377   0000DE                     _rampDelay:
   378                           	callstack 0
   379   0000DE                     	ds	1
   380   0000DF                     _trail_timer_high:
   381                           	callstack 0
   382   0000DF                     	ds	20
   383                           
   384                           	psect	bssBANK1
   385   000100                     __pbssBANK1:
   386                           	callstack 0
   387   000100                     _EUSART4TXbuf:
   388                           	callstack 0
   389   000100                     	ds	60
   390                           
   391                           	psect	cstackCOMRAM
   392   000001                     __pcstackCOMRAM:
   393                           	callstack 0
   394   000001                     ??_I2C_2_Master_Idle:
   395   000001                     ?___awdiv:
   396                           	callstack 0
   397   000001                     ?___awmod:
   398                           	callstack 0
   399   000001                     sendCharSerial4@charToSend:
   400                           	callstack 0
   401   000001                     initDCmotorsPWM@PWMperiod:
   402                           	callstack 0
   403   000001                     ___awdiv@dividend:
   404                           	callstack 0
   405   000001                     ___awmod@dividend:
   406                           	callstack 0
   407   000001                     fputc@c:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411   000001                     	ds	1
   412   000002                     ??_I2C_2_Master_Read:
   413   000002                     I2C_2_Master_Write@data_byte:
   414                           	callstack 0
   415   000002                     sendStringSerial4@string:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1
   419   000002                     	ds	1
   420   000003                     color_writetoaddr@value:
   421                           	callstack 0
   422   000003                     I2C_2_Master_Read@ack:
   423                           	callstack 0
   424   000003                     fputc@fp:
   425                           	callstack 0
   426   000003                     ___awdiv@divisor:
   427                           	callstack 0
   428   000003                     ___awmod@divisor:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x2
   432   000003                     	ds	1
   433   000004                     ??_fputc:
   434   000004                     color_writetoaddr@address:
   435                           	callstack 0
   436   000004                     I2C_2_Master_Read@tmp:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x3
   440   000004                     	ds	1
   441   000005                     ??_color_click_init:
   442   000005                     ?_color_read_Red:
   443                           	callstack 0
   444   000005                     ?_color_read_Blue:
   445                           	callstack 0
   446   000005                     ?_color_read_Green:
   447                           	callstack 0
   448   000005                     ?_color_read_Clear:
   449                           	callstack 0
   450   000005                     ___awdiv@counter:
   451                           	callstack 0
   452   000005                     ___awmod@counter:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x4
   456   000005                     	ds	1
   457   000006                     ___awdiv@sign:
   458                           	callstack 0
   459   000006                     ___awmod@sign:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x5
   463   000006                     	ds	1
   464   000007                     ??_color_read_Red:
   465   000007                     ??_color_read_Blue:
   466   000007                     ??_color_read_Green:
   467   000007                     ??_color_read_Clear:
   468   000007                     ?_abs:
   469                           	callstack 0
   470   000007                     ___awdiv@quotient:
   471                           	callstack 0
   472   000007                     abs@a:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x6
   476   000007                     	ds	2
   477   000009                     ??_abs:
   478                           
   479                           ; 1 bytes @ 0x8
   480   000009                     	ds	1
   481   00000A                     color_read_Red@tmp:
   482                           	callstack 0
   483   00000A                     color_read_Blue@tmp:
   484                           	callstack 0
   485   00000A                     color_read_Green@tmp:
   486                           	callstack 0
   487   00000A                     color_read_Clear@tmp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x9
   491   00000A                     	ds	1
   492   00000B                     ?_vfpfcnvrt:
   493                           	callstack 0
   494   00000B                     vfpfcnvrt@fp:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xA
   498   00000B                     	ds	1
   499   00000C                     getRGBCval@p:
   500                           	callstack 0
   501   00000C                     vfpfcnvrt@fmt:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xB
   505   00000C                     	ds	1
   506   00000D                     vfpfcnvrt@ap:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0xC
   510   00000D                     	ds	1
   511   00000E                     ??_vfpfcnvrt:
   512                           
   513                           ; 1 bytes @ 0xD
   514   00000E                     	ds	1
   515   00000F                     vfpfcnvrt@done:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0xE
   519   00000F                     	ds	1
   520   000010                     vfpfcnvrt@cnt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xF
   524   000010                     	ds	2
   525   000012                     vfpfcnvrt@cp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x11
   529   000012                     	ds	1
   530   000013                     vfpfcnvrt@convarg:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x12
   534   000013                     	ds	4
   535   000017                     vfpfcnvrt@c:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x16
   539   000017                     	ds	1
   540   000018                     ?_vfprintf:
   541                           	callstack 0
   542   000018                     vfprintf@fp:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x17
   546   000018                     	ds	1
   547   000019                     vfprintf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x18
   551   000019                     	ds	1
   552   00001A                     vfprintf@ap:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x19
   556   00001A                     	ds	1
   557   00001B                     vfprintf@cfmt:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x1A
   561   00001B                     	ds	1
   562   00001C                     ?_sprintf:
   563                           	callstack 0
   564   00001C                     sprintf@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x1B
   568   00001C                     	ds	2
   569   00001E                     sprintf@fmt:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x1D
   573   00001E                     	ds	3
   574   000021                     sprintf@ret:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578   000021                     	ds	2
   579   000023                     sprintf@ap:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x22
   583   000023                     	ds	1
   584   000024                     sprintf@f:
   585                           	callstack 0
   586                           
   587                           ; 12 bytes @ 0x23
   588   000024                     	ds	12
   589   000030                     sendIntSerial4@integer:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2F
   593   000030                     	ds	2
   594   000032                     sendIntSerial4@string:
   595                           	callstack 0
   596                           
   597                           ; 17 bytes @ 0x31
   598   000032                     	ds	17
   599   000043                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x42
   602   000043                     	ds	2
   603   000045                     main@measured_colour:
   604                           	callstack 0
   605                           
   606                           ; 8 bytes @ 0x44
   607   000045                     	ds	8
   608   00004D                     main@motorL:
   609                           	callstack 0
   610                           
   611                           ; 9 bytes @ 0x4C
   612   00004D                     	ds	9
   613   000056                     main@motorR:
   614                           	callstack 0
   615                           
   616                           ; 9 bytes @ 0x55
   617   000056                     	ds	9
   618                           
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 26 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  motorR          9   85[COMRAM] struct DC_motor
   629 ;;  motorL          9   76[COMRAM] struct DC_motor
   630 ;;  measured_col    8   68[COMRAM] struct RGBC_val
   631 ;;  PWMcycle        2    0        unsigned int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;Total ram usage:       28 bytes
   646 ;; Hardware stack levels required when called: 7
   647 ;; This function calls:
   648 ;;		_Timer0_init
   649 ;;		_buggy_lights_init
   650 ;;		_color_click_init
   651 ;;		_getRGBCval
   652 ;;		_initDCmotorsPWM
   653 ;;		_initUSART4
   654 ;;		_sendIntSerial4
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661   001002                     __ptext0:
   662                           	callstack 0
   663   001002                     _main:
   664                           	callstack 24
   665   001002                     
   666                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   667   001002  0E52               	movlw	82
   668   001004  6E44               	movwf	(??_main+1)^0,c
   669   001006  0E2B               	movlw	43
   670   001008  6E43               	movwf	??_main^0,c
   671   00100A  0E00               	movlw	0
   672   00100C                     u1907:
   673   00100C  2EE8               	decfsz	wreg,f,c
   674   00100E  D7FE               	bra	u1907
   675   001010  2E43               	decfsz	??_main^0,f,c
   676   001012  D7FC               	bra	u1907
   677   001014  2E44               	decfsz	(??_main+1)^0,f,c
   678   001016  D7FA               	bra	u1907
   679   001018  D000               	nop2	
   680   00101A                     
   681                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   682   00101A  0E00               	movlw	0
   683   00101C  6E4D               	movwf	main@motorL^0,c
   684   00101E                     
   685                           ;main.c: 33:     motorL.direction = 1;
   686   00101E  0E01               	movlw	1
   687   001020  6E4E               	movwf	(main@motorL+1)^0,c
   688   001022                     
   689                           ;main.c: 34:     motorL.brakemode = 1;
   690   001022  0E01               	movlw	1
   691   001024  6E4F               	movwf	(main@motorL+2)^0,c
   692   001026                     
   693                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   694   001026  0E00               	movlw	0
   695   001028  6E51               	movwf	(main@motorL+4)^0,c
   696   00102A  0E63               	movlw	99
   697   00102C  6E50               	movwf	(main@motorL+3)^0,c
   698   00102E                     
   699                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   700   00102E  0EAA               	movlw	170
   701   001030  6E52               	movwf	(main@motorL+5)^0,c
   702   001032  0E0F               	movlw	15
   703   001034  6E53               	movwf	(main@motorL+6)^0,c
   704   001036                     
   705                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   706   001036  0EA6               	movlw	166
   707   001038  6E54               	movwf	(main@motorL+7)^0,c
   708   00103A  0E0F               	movlw	15
   709   00103C  6E55               	movwf	(main@motorL+8)^0,c
   710   00103E                     
   711                           ;main.c: 39:     motorR.power = 0;
   712   00103E  0E00               	movlw	0
   713   001040  6E56               	movwf	main@motorR^0,c
   714   001042                     
   715                           ;main.c: 40:     motorR.direction = 1;
   716   001042  0E01               	movlw	1
   717   001044  6E57               	movwf	(main@motorR+1)^0,c
   718   001046                     
   719                           ;main.c: 41:     motorR.brakemode = 1;
   720   001046  0E01               	movlw	1
   721   001048  6E58               	movwf	(main@motorR+2)^0,c
   722   00104A                     
   723                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   724   00104A  0E00               	movlw	0
   725   00104C  6E5A               	movwf	(main@motorR+4)^0,c
   726   00104E  0E63               	movlw	99
   727   001050  6E59               	movwf	(main@motorR+3)^0,c
   728   001052                     
   729                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   730   001052  0E25               	movlw	37
   731   001054  6E5B               	movwf	(main@motorR+5)^0,c
   732   001056  0E0F               	movlw	15
   733   001058  6E5C               	movwf	(main@motorR+6)^0,c
   734   00105A                     
   735                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   736   00105A  0E21               	movlw	33
   737   00105C  6E5D               	movwf	(main@motorR+7)^0,c
   738   00105E  0E0F               	movlw	15
   739   001060  6E5E               	movwf	(main@motorR+8)^0,c
   740   001062                     
   741                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   742   001062  0E00               	movlw	0
   743   001064  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   744   001066  0E63               	movlw	99
   745   001068  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   746   00106A  EC91  F009         	call	_initDCmotorsPWM	;wreg free
   747   00106E                     
   748                           ;main.c: 47:     buggy_lights_init();
   749   00106E  EC9C  F00B         	call	_buggy_lights_init	;wreg free
   750   001072                     
   751                           ;main.c: 48:     color_click_init();
   752   001072  EC82  F00B         	call	_color_click_init	;wreg free
   753   001076                     
   754                           ;main.c: 49:     initUSART4();
   755   001076  EC26  F00C         	call	_initUSART4	;wreg free
   756   00107A                     
   757                           ;main.c: 50:     Timer0_init();
   758   00107A  ECF1  F00B         	call	_Timer0_init	;wreg free
   759   00107E                     
   760                           ;main.c: 54:         TRISDbits.TRISD7 = 0;
   761   00107E  9E84               	bcf	132,7,c	;volatile
   762   001080                     
   763                           ;main.c: 55:         TRISHbits.TRISH3 = 0;
   764   001080  9688               	bcf	136,3,c	;volatile
   765   001082                     
   766                           ;main.c: 57:         LATDbits.LATD7 = 1;
   767   001082  8E7C               	bsf	124,7,c	;volatile
   768   001084                     
   769                           ;main.c: 58:         LATHbits.LATH3 = 1;
   770   001084  8680               	bsf	128,3,c	;volatile
   771   001086                     
   772                           ;main.c: 62:         TRISFbits.TRISF2 = 1;
   773   001086  8486               	bsf	134,2,c	;volatile
   774   001088                     
   775                           ;main.c: 63:         TRISFbits.TRISF3 = 1;
   776   001088  8686               	bsf	134,3,c	;volatile
   777   00108A                     
   778                           ;main.c: 65:         ANSELFbits.ANSELF2 = 0;
   779   00108A  010E               	movlb	14	; () banked
   780   00108C  95B4               	bcf	180,2,b	;volatile
   781   00108E                     
   782                           ; BSR set to: 14
   783                           ;main.c: 66:         ANSELFbits.ANSELF3 = 0;
   784   00108E  97B4               	bcf	180,3,b	;volatile
   785   001090                     l2869:
   786                           
   787                           ;main.c: 85:         getRGBCval(&measured_colour);
   788   001090  0E45               	movlw	low main@measured_colour
   789   001092  6E0C               	movwf	getRGBCval@p^0,c
   790   001094  EC35  F00A         	call	_getRGBCval	;wreg free
   791   001098                     
   792                           ;main.c: 86:         sendIntSerial4((int)measured_colour.C);
   793   001098  C04B  F030         	movff	main@measured_colour+6,sendIntSerial4@integer
   794   00109C  C04C  F031         	movff	main@measured_colour+7,sendIntSerial4@integer+1
   795   0010A0  EC05  F00C         	call	_sendIntSerial4	;wreg free
   796   0010A4                     
   797                           ;main.c: 89:         if (!PORTFbits.RF2) {
   798   0010A4  B48E               	btfsc	142,2,c	;volatile
   799   0010A6  EF57  F008         	goto	u1351
   800   0010AA  EF59  F008         	goto	u1350
   801   0010AE                     u1351:
   802   0010AE  EF6A  F008         	goto	l2877
   803   0010B2                     u1350:
   804   0010B2                     
   805                           ;main.c: 90:             LATDbits.LATD7 = !LATDbits.LATD7;
   806   0010B2  AE7C               	btfss	124,7,c	;volatile
   807   0010B4  EF5E  F008         	goto	u1361
   808   0010B8  EF62  F008         	goto	u1360
   809   0010BC                     u1361:
   810   0010BC  6A43               	clrf	??_main^0,c
   811   0010BE  2A43               	incf	??_main^0,f,c
   812   0010C0  EF63  F008         	goto	u1378
   813   0010C4                     u1360:
   814   0010C4  6A43               	clrf	??_main^0,c
   815   0010C6                     u1378:
   816   0010C6  3243               	rrcf	??_main^0,f,c
   817   0010C8  3243               	rrcf	??_main^0,f,c
   818   0010CA  507C               	movf	124,w,c	;volatile
   819   0010CC  1843               	xorwf	??_main^0,w,c
   820   0010CE  0B7F               	andlw	-129
   821   0010D0  1843               	xorwf	??_main^0,w,c
   822   0010D2  6E7C               	movwf	124,c	;volatile
   823   0010D4                     l2877:
   824                           
   825                           ;main.c: 95:         _delay((unsigned long)((100)*(64000000/4000.0)));
   826   0010D4  0E09               	movlw	9
   827   0010D6  6E44               	movwf	(??_main+1)^0,c
   828   0010D8  0E1E               	movlw	30
   829   0010DA  6E43               	movwf	??_main^0,c
   830   0010DC  0EE4               	movlw	228
   831   0010DE                     u1917:
   832   0010DE  2EE8               	decfsz	wreg,f,c
   833   0010E0  D7FE               	bra	u1917
   834   0010E2  2E43               	decfsz	??_main^0,f,c
   835   0010E4  D7FC               	bra	u1917
   836   0010E6  2E44               	decfsz	(??_main+1)^0,f,c
   837   0010E8  D7FA               	bra	u1917
   838   0010EA  D000               	nop2	
   839   0010EC  EF48  F008         	goto	l2869
   840   0010F0  EF1C  F000         	goto	start
   841   0010F4                     __end_of_main:
   842                           	callstack 0
   843                           
   844 ;; *************** function _sendIntSerial4 *****************
   845 ;; Defined at:
   846 ;;		line 43 in file "serial.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  integer         2   47[COMRAM] int 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  string         17   49[COMRAM] unsigned char [17]
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   864 ;;Total ram usage:       19 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 6
   867 ;; This function calls:
   868 ;;		_sendStringSerial4
   869 ;;		_sprintf
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text1
   876   00180A                     __ptext1:
   877                           	callstack 0
   878   00180A                     _sendIntSerial4:
   879                           	callstack 24
   880   00180A                     
   881                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   882   00180A  0E32               	movlw	low sendIntSerial4@string
   883   00180C  6E1C               	movwf	sprintf@s^0,c
   884   00180E  6A1D               	clrf	(sprintf@s+1)^0,c
   885   001810  0E01               	movlw	low STR_1
   886   001812  6E1E               	movwf	sprintf@fmt^0,c
   887   001814  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   888   001818  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   889   00181C  EC00  F00B         	call	_sprintf	;wreg free
   890   001820                     
   891                           ;serial.c: 46:     sendStringSerial4(string);
   892   001820  0E32               	movlw	low sendIntSerial4@string
   893   001822  6E02               	movwf	sendStringSerial4@string^0,c
   894   001824  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   895   001826  ECD9  F009         	call	_sendStringSerial4	;wreg free
   896   00182A  0012               	return		;funcret
   897   00182C                     __end_of_sendIntSerial4:
   898                           	callstack 0
   899                           
   900 ;; *************** function _sprintf *****************
   901 ;; Defined at:
   902 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  s               2   27[COMRAM] PTR unsigned char 
   905 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   906 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   907 ;;		 -> STR_3(4), STR_1(5), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  f              12   35[COMRAM] struct _IO_FILE
   910 ;;  ret             2   32[COMRAM] int 
   911 ;;  ap              1   34[COMRAM] PTR void [1]
   912 ;;		 -> ?_sprintf(2), 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  2   27[COMRAM] int 
   915 ;; Registers used:
   916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   922 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   926 ;;Total ram usage:       20 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 5
   929 ;; This function calls:
   930 ;;		_vfprintf
   931 ;; This function is called by:
   932 ;;		_sendIntSerial4
   933 ;;		_sendArrayCharSerial4
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text2
   938   001600                     __ptext2:
   939                           	callstack 0
   940   001600                     _sprintf:
   941                           	callstack 24
   942   001600  0E1F               	movlw	low (?_sprintf+3)
   943   001602  6E23               	movwf	sprintf@ap^0,c
   944   001604  C01C  F024         	movff	sprintf@s,sprintf@f
   945   001608  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
   946   00160C  0E00               	movlw	0
   947   00160E  6E28               	movwf	(sprintf@f+4)^0,c
   948   001610  0E00               	movlw	0
   949   001612  6E27               	movwf	(sprintf@f+3)^0,c
   950   001614  0E00               	movlw	0
   951   001616  6E2F               	movwf	(sprintf@f+11)^0,c
   952   001618  0E00               	movlw	0
   953   00161A  6E2E               	movwf	(sprintf@f+10)^0,c
   954   00161C  0E24               	movlw	low sprintf@f
   955   00161E  6E18               	movwf	vfprintf@fp^0,c
   956   001620  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
   957   001624  0E23               	movlw	low sprintf@ap
   958   001626  6E1A               	movwf	vfprintf@ap^0,c
   959   001628  EC0A  F00A         	call	_vfprintf	;wreg free
   960   00162C  C018  F021         	movff	?_vfprintf,sprintf@ret
   961   001630  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
   962   001634  5027               	movf	(sprintf@f+3)^0,w,c
   963   001636  241C               	addwf	sprintf@s^0,w,c
   964   001638  6ED9               	movwf	fsr2l,c
   965   00163A  5028               	movf	(sprintf@f+4)^0,w,c
   966   00163C  201D               	addwfc	(sprintf@s+1)^0,w,c
   967   00163E  6EDA               	movwf	fsr2h,c
   968   001640  6ADF               	clrf	indf2,c
   969   001642  C021  F01C         	movff	sprintf@ret,?_sprintf
   970   001646  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
   971   00164A  0012               	return		;funcret
   972   00164C                     __end_of_sprintf:
   973                           	callstack 0
   974                           
   975 ;; *************** function _vfprintf *****************
   976 ;; Defined at:
   977 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
   980 ;;		 -> sprintf@f(12), 
   981 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
   982 ;;		 -> STR_3(4), STR_1(5), 
   983 ;;  ap              1   25[COMRAM] PTR PTR void 
   984 ;;		 -> sprintf@ap(1), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
   987 ;;		 -> STR_3(4), STR_1(5), 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2   23[COMRAM] int 
   990 ;; Registers used:
   991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   997 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;Total ram usage:        4 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 4
  1004 ;; This function calls:
  1005 ;;		_vfpfcnvrt
  1006 ;; This function is called by:
  1007 ;;		_sprintf
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text3
  1012   001414                     __ptext3:
  1013                           	callstack 0
  1014   001414                     _vfprintf:
  1015                           	callstack 24
  1016   001414                     
  1017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1018   001414  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1019   001418                     
  1020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1021   001418  0E00               	movlw	0
  1022   00141A  0100               	movlb	0	; () banked
  1023   00141C  6F95               	movwf	(_nout+1)& (0+255),b
  1024   00141E  0E00               	movlw	0
  1025   001420  6F94               	movwf	_nout& (0+255),b
  1026                           
  1027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1028   001422  EF20  F00A         	goto	l2555
  1029   001426                     l2553:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1033   001426  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1034   00142A  0E1B               	movlw	low vfprintf@cfmt
  1035   00142C  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1036   00142E  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1037   001432  EC06  F007         	call	_vfpfcnvrt	;wreg free
  1038   001436  500B               	movf	?_vfpfcnvrt^0,w,c
  1039   001438  0100               	movlb	0	; () banked
  1040   00143A  2794               	addwf	_nout& (0+255),f,b
  1041   00143C  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1042   00143E  2395               	addwfc	(_nout+1)& (0+255),f,b
  1043   001440                     l2555:
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1047   001440  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1048   001444                     	if	1	;There is more than 1 active tblptr byte
  1049   001444  0E0E               	movlw	high __smallconst
  1050   001446  6EF7               	movwf	tblptrh,c
  1051   001448                     	endif
  1052   001448                     	if	0	;tblptru may be non-zero
  1053   001448                     	endif
  1054   001448                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1055   001448  0E00               	movlw	low (__smallconst shr (0+16))
  1056   00144A  6EF8               	movwf	tblptru,c
  1057   00144C                     	endif
  1058   00144C  0008               	tblrd		*
  1059   00144E  50F5               	movf	tablat,w,c
  1060   001450  0900               	iorlw	0
  1061   001452  A4D8               	btfss	status,2,c
  1062   001454  EF2E  F00A         	goto	u1241
  1063   001458  EF30  F00A         	goto	u1240
  1064   00145C                     u1241:
  1065   00145C  EF13  F00A         	goto	l2553
  1066   001460                     u1240:
  1067   001460                     
  1068                           ; BSR set to: 0
  1069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1070   001460  C094  F018         	movff	_nout,?_vfprintf
  1071   001464  C095  F019         	movff	_nout+1,?_vfprintf+1
  1072   001468                     
  1073                           ; BSR set to: 0
  1074   001468  0012               	return		;funcret
  1075   00146A                     __end_of_vfprintf:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _vfpfcnvrt *****************
  1079 ;; Defined at:
  1080 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1083 ;;		 -> sprintf@f(12), 
  1084 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1085 ;;		 -> vfprintf@cfmt(1), 
  1086 ;;  ap              1   12[COMRAM] PTR PTR void 
  1087 ;;		 -> sprintf@ap(1), 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  convarg         4   18[COMRAM] struct .
  1090 ;;  cnt             2   15[COMRAM] int 
  1091 ;;  c               1   22[COMRAM] unsigned char 
  1092 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1093 ;;		 -> STR_3(4), STR_1(5), 
  1094 ;;  done            1   14[COMRAM] _Bool 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2   10[COMRAM] int 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:       13 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 3
  1111 ;; This function calls:
  1112 ;;		___awdiv
  1113 ;;		___awmod
  1114 ;;		_abs
  1115 ;;		_fputc
  1116 ;; This function is called by:
  1117 ;;		_vfprintf
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text4
  1122   000E0C                     __ptext4:
  1123                           	callstack 0
  1124   000E0C                     _vfpfcnvrt:
  1125                           	callstack 24
  1126   000E0C                     
  1127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1128   000E0C  0E00               	movlw	0
  1129   000E0E  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1130   000E10  0E00               	movlw	0
  1131   000E12  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1132   000E14                     
  1133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1134   000E14  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1135   000E16  6ED9               	movwf	fsr2l,c
  1136   000E18  6ADA               	clrf	fsr2h,c
  1137   000E1A  CFDF FFF6          	movff	indf2,tblptrl
  1138   000E1E                     	if	1	;There is more than 1 active tblptr byte
  1139   000E1E  0E0E               	movlw	high __smallconst
  1140   000E20  6EF7               	movwf	tblptrh,c
  1141   000E22                     	endif
  1142   000E22                     	if	0	;tblptru may be non-zero
  1143   000E22                     	endif
  1144   000E22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1145   000E22  0E00               	movlw	low (__smallconst shr (0+16))
  1146   000E24  6EF8               	movwf	tblptru,c
  1147   000E26                     	endif
  1148   000E26  0008               	tblrd		*
  1149   000E28  50F5               	movf	tablat,w,c
  1150   000E2A  0A25               	xorlw	37
  1151   000E2C  A4D8               	btfss	status,2,c
  1152   000E2E  EF1B  F007         	goto	u1141
  1153   000E32  EF1D  F007         	goto	u1140
  1154   000E36                     u1141:
  1155   000E36  EFE7  F007         	goto	l2499
  1156   000E3A                     u1140:
  1157   000E3A                     
  1158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1159   000E3A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1160   000E3C  6ED9               	movwf	fsr2l,c
  1161   000E3E  6ADA               	clrf	fsr2h,c
  1162   000E40  2ADF               	incf	indf2,f,c
  1163   000E42                     
  1164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1165   000E42  0E00               	movlw	0
  1166   000E44  0100               	movlb	0	; () banked
  1167   000E46  6F97               	movwf	(_width+1)& (0+255),b
  1168   000E48  0E00               	movlw	0
  1169   000E4A  6F96               	movwf	_width& (0+255),b
  1170   000E4C  C096  F09A         	movff	_width,_flags
  1171   000E50                     
  1172                           ; BSR set to: 0
  1173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1174   000E50  6998               	setf	_prec& (0+255),b
  1175   000E52  6999               	setf	(_prec+1)& (0+255),b
  1176   000E54                     
  1177                           ; BSR set to: 0
  1178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1179   000E54  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1180   000E56  6ED9               	movwf	fsr2l,c
  1181   000E58  6ADA               	clrf	fsr2h,c
  1182   000E5A  50DF               	movf	indf2,w,c
  1183   000E5C  6E12               	movwf	vfpfcnvrt@cp^0,c
  1184   000E5E                     
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1187   000E5E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1188   000E62                     	if	1	;There is more than 1 active tblptr byte
  1189   000E62  0E0E               	movlw	high __smallconst
  1190   000E64  6EF7               	movwf	tblptrh,c
  1191   000E66                     	endif
  1192   000E66                     	if	0	;tblptru may be non-zero
  1193   000E66                     	endif
  1194   000E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1195   000E66  0E00               	movlw	low (__smallconst shr (0+16))
  1196   000E68  6EF8               	movwf	tblptru,c
  1197   000E6A                     	endif
  1198   000E6A  0008               	tblrd		*
  1199   000E6C  50F5               	movf	tablat,w,c
  1200   000E6E  0A64               	xorlw	100
  1201   000E70  B4D8               	btfsc	status,2,c
  1202   000E72  EF3D  F007         	goto	u1151
  1203   000E76  EF3F  F007         	goto	u1150
  1204   000E7A                     u1151:
  1205   000E7A  EF4F  F007         	goto	l2463
  1206   000E7E                     u1150:
  1207   000E7E                     
  1208                           ; BSR set to: 0
  1209   000E7E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1210   000E82                     	if	1	;There is more than 1 active tblptr byte
  1211   000E82  0E0E               	movlw	high __smallconst
  1212   000E84  6EF7               	movwf	tblptrh,c
  1213   000E86                     	endif
  1214   000E86                     	if	0	;tblptru may be non-zero
  1215   000E86                     	endif
  1216   000E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1217   000E86  0E00               	movlw	low (__smallconst shr (0+16))
  1218   000E88  6EF8               	movwf	tblptru,c
  1219   000E8A                     	endif
  1220   000E8A  0008               	tblrd		*
  1221   000E8C  50F5               	movf	tablat,w,c
  1222   000E8E  0A69               	xorlw	105
  1223   000E90  A4D8               	btfss	status,2,c
  1224   000E92  EF4D  F007         	goto	u1161
  1225   000E96  EF4F  F007         	goto	u1160
  1226   000E9A                     u1161:
  1227   000E9A  EFDD  F007         	goto	l2493
  1228   000E9E                     u1160:
  1229   000E9E                     l2463:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1233   000E9E  500D               	movf	vfpfcnvrt@ap^0,w,c
  1234   000EA0  6ED9               	movwf	fsr2l,c
  1235   000EA2  6ADA               	clrf	fsr2h,c
  1236   000EA4  0E02               	movlw	2
  1237   000EA6  26DF               	addwf	indf2,f,c
  1238   000EA8  5CDF               	subwf	indf2,w,c
  1239   000EAA  6ED9               	movwf	fsr2l,c
  1240   000EAC  6ADA               	clrf	fsr2h,c
  1241   000EAE  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1242   000EB2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1243   000EB6                     
  1244                           ; BSR set to: 0
  1245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1246   000EB6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1247   000EB8  6ED9               	movwf	fsr2l,c
  1248   000EBA  6ADA               	clrf	fsr2h,c
  1249   000EBC  2812               	incf	vfpfcnvrt@cp^0,w,c
  1250   000EBE  6EDF               	movwf	indf2,c
  1251   000EC0                     
  1252                           ; BSR set to: 0
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1254   000EC0  0E20               	movlw	32
  1255   000EC2  6E17               	movwf	vfpfcnvrt@c^0,c
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1258   000EC4  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1259   000EC6  EF67  F007         	goto	u1171
  1260   000ECA  EF6A  F007         	goto	u1170
  1261   000ECE                     u1171:
  1262   000ECE  0E01               	movlw	1
  1263   000ED0  EF6B  F007         	goto	u1180
  1264   000ED4                     u1170:
  1265   000ED4  0E00               	movlw	0
  1266   000ED6                     u1180:
  1267   000ED6  6E0F               	movwf	vfpfcnvrt@done^0,c
  1268   000ED8                     l2469:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1271   000ED8  0617               	decf	vfpfcnvrt@c^0,f,c
  1272   000EDA  5017               	movf	vfpfcnvrt@c^0,w,c
  1273   000EDC  0F60               	addlw	low _dbuf
  1274   000EDE  6ED9               	movwf	fsr2l,c
  1275   000EE0  6ADA               	clrf	fsr2h,c
  1276   000EE2  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1277   000EE6  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1278   000EEA  0E00               	movlw	0
  1279   000EEC  6E04               	movwf	(___awmod@divisor+1)^0,c
  1280   000EEE  0E0A               	movlw	10
  1281   000EF0  6E03               	movwf	___awmod@divisor^0,c
  1282   000EF2  EC39  F009         	call	___awmod	;wreg free
  1283   000EF6  C001  F007         	movff	?___awmod,abs@a
  1284   000EFA  C002  F008         	movff	?___awmod+1,abs@a+1
  1285   000EFE  EC68  F00B         	call	_abs	;wreg free
  1286   000F02  5007               	movf	?_abs^0,w,c
  1287   000F04  0F30               	addlw	48
  1288   000F06  6EDF               	movwf	indf2,c
  1289   000F08                     
  1290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1291   000F08  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1292   000F0C  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1293   000F10  0E00               	movlw	0
  1294   000F12  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1295   000F14  0E0A               	movlw	10
  1296   000F16  6E03               	movwf	___awdiv@divisor^0,c
  1297   000F18  EC7A  F008         	call	___awdiv	;wreg free
  1298   000F1C  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1299   000F20  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1300   000F24                     
  1301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1302   000F24  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1303   000F26  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1304   000F28                     
  1305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1306   000F28  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1307   000F2A  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1308   000F2C  B4D8               	btfsc	status,2,c
  1309   000F2E  EF9B  F007         	goto	u1191
  1310   000F32  EF9D  F007         	goto	u1190
  1311   000F36                     u1191:
  1312   000F36  EFA5  F007         	goto	l2479
  1313   000F3A                     u1190:
  1314   000F3A  5017               	movf	vfpfcnvrt@c^0,w,c
  1315   000F3C  A4D8               	btfss	status,2,c
  1316   000F3E  EFA3  F007         	goto	u1201
  1317   000F42  EFA5  F007         	goto	u1200
  1318   000F46                     u1201:
  1319   000F46  EF6C  F007         	goto	l2469
  1320   000F4A                     u1200:
  1321   000F4A                     l2479:
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1324   000F4A  5017               	movf	vfpfcnvrt@c^0,w,c
  1325   000F4C  B4D8               	btfsc	status,2,c
  1326   000F4E  EFAB  F007         	goto	u1211
  1327   000F52  EFAD  F007         	goto	u1210
  1328   000F56                     u1211:
  1329   000F56  EFCE  F007         	goto	l2491
  1330   000F5A                     u1210:
  1331   000F5A  500F               	movf	vfpfcnvrt@done^0,w,c
  1332   000F5C  B4D8               	btfsc	status,2,c
  1333   000F5E  EFB3  F007         	goto	u1221
  1334   000F62  EFB5  F007         	goto	u1220
  1335   000F66                     u1221:
  1336   000F66  EFCE  F007         	goto	l2491
  1337   000F6A                     u1220:
  1338   000F6A                     
  1339                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1340   000F6A  0617               	decf	vfpfcnvrt@c^0,f,c
  1341   000F6C  5017               	movf	vfpfcnvrt@c^0,w,c
  1342   000F6E  0F60               	addlw	low _dbuf
  1343   000F70  6ED9               	movwf	fsr2l,c
  1344   000F72  6ADA               	clrf	fsr2h,c
  1345   000F74  0E2D               	movlw	45
  1346   000F76  6EDF               	movwf	indf2,c
  1347   000F78                     
  1348                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1349   000F78  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1350   000F7A  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1351   000F7C  EFCE  F007         	goto	l2491
  1352   000F80                     l2487:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1355   000F80  5017               	movf	vfpfcnvrt@c^0,w,c
  1356   000F82  0F60               	addlw	low _dbuf
  1357   000F84  6ED9               	movwf	fsr2l,c
  1358   000F86  6ADA               	clrf	fsr2h,c
  1359   000F88  50DF               	movf	indf2,w,c
  1360   000F8A  6E0E               	movwf	??_vfpfcnvrt^0,c
  1361   000F8C  500E               	movf	??_vfpfcnvrt^0,w,c
  1362   000F8E  6E01               	movwf	fputc@c^0,c
  1363   000F90  6A02               	clrf	(fputc@c+1)^0,c
  1364   000F92  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1365   000F96  ECDC  F008         	call	_fputc	;wreg free
  1366   000F9A  2A17               	incf	vfpfcnvrt@c^0,f,c
  1367   000F9C                     l2491:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1370   000F9C  0E20               	movlw	32
  1371   000F9E  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1372   000FA0  A4D8               	btfss	status,2,c
  1373   000FA2  EFD5  F007         	goto	u1231
  1374   000FA6  EFD7  F007         	goto	u1230
  1375   000FAA                     u1231:
  1376   000FAA  EFC0  F007         	goto	l2487
  1377   000FAE                     u1230:
  1378   000FAE                     
  1379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1380   000FAE  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1381   000FB2  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1382   000FB6  EF00  F008         	goto	l1389
  1383   000FBA                     l2493:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1387   000FBA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1388   000FBC  6ED9               	movwf	fsr2l,c
  1389   000FBE  6ADA               	clrf	fsr2h,c
  1390   000FC0  2ADF               	incf	indf2,f,c
  1391   000FC2                     
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1394   000FC2  0E00               	movlw	0
  1395   000FC4  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1396   000FC6  0E00               	movlw	0
  1397   000FC8  6E0B               	movwf	?_vfpfcnvrt^0,c
  1398   000FCA  EF00  F008         	goto	l1389
  1399   000FCE                     l2499:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1402   000FCE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1403   000FD0  6ED9               	movwf	fsr2l,c
  1404   000FD2  6ADA               	clrf	fsr2h,c
  1405   000FD4  CFDF FFF6          	movff	indf2,tblptrl
  1406   000FD8                     	if	1	;There is more than 1 active tblptr byte
  1407   000FD8  0E0E               	movlw	high __smallconst
  1408   000FDA  6EF7               	movwf	tblptrh,c
  1409   000FDC                     	endif
  1410   000FDC                     	if	0	;tblptru may be non-zero
  1411   000FDC                     	endif
  1412   000FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1413   000FDC  0E00               	movlw	low (__smallconst shr (0+16))
  1414   000FDE  6EF8               	movwf	tblptru,c
  1415   000FE0                     	endif
  1416   000FE0  0008               	tblrd		*
  1417   000FE2  50F5               	movf	tablat,w,c
  1418   000FE4  6E01               	movwf	fputc@c^0,c
  1419   000FE6  6A02               	clrf	(fputc@c+1)^0,c
  1420   000FE8  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1421   000FEC  ECDC  F008         	call	_fputc	;wreg free
  1422   000FF0                     
  1423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1424   000FF0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1425   000FF2  6ED9               	movwf	fsr2l,c
  1426   000FF4  6ADA               	clrf	fsr2h,c
  1427   000FF6  2ADF               	incf	indf2,f,c
  1428   000FF8                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1430   000FF8  0E00               	movlw	0
  1431   000FFA  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1432   000FFC  0E01               	movlw	1
  1433   000FFE  6E0B               	movwf	?_vfpfcnvrt^0,c
  1434   001000                     l1389:
  1435   001000  0012               	return		;funcret
  1436   001002                     __end_of_vfpfcnvrt:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _fputc *****************
  1440 ;; Defined at:
  1441 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  c               2    0[COMRAM] int 
  1444 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1445 ;;		 -> sprintf@f(12), 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2    0[COMRAM] int 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1457 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;Total ram usage:        8 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 2
  1464 ;; This function calls:
  1465 ;;		_putch
  1466 ;; This function is called by:
  1467 ;;		_vfpfcnvrt
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text5
  1472   0011B8                     __ptext5:
  1473                           	callstack 0
  1474   0011B8                     _fputc:
  1475                           	callstack 24
  1476   0011B8  5003               	movf	fputc@fp^0,w,c
  1477   0011BA  B4D8               	btfsc	status,2,c
  1478   0011BC  EFE2  F008         	goto	u931
  1479   0011C0  EFE4  F008         	goto	u930
  1480   0011C4                     u931:
  1481   0011C4  EFEC  F008         	goto	l2347
  1482   0011C8                     u930:
  1483   0011C8  5003               	movf	fputc@fp^0,w,c
  1484   0011CA  A4D8               	btfss	status,2,c
  1485   0011CC  EFEA  F008         	goto	u941
  1486   0011D0  EFEC  F008         	goto	u940
  1487   0011D4                     u941:
  1488   0011D4  EFF1  F008         	goto	l2349
  1489   0011D8                     u940:
  1490   0011D8                     l2347:
  1491   0011D8  5001               	movf	fputc@c^0,w,c
  1492   0011DA  EC56  F00C         	call	_putch
  1493   0011DE  EF38  F009         	goto	l1414
  1494   0011E2                     l2349:
  1495   0011E2  5003               	movf	fputc@fp^0,w,c
  1496   0011E4  6ED9               	movwf	fsr2l,c
  1497   0011E6  6ADA               	clrf	fsr2h,c
  1498   0011E8  0E0A               	movlw	10
  1499   0011EA  26D9               	addwf	fsr2l,f,c
  1500   0011EC  50DE               	movf	postinc2,w,c
  1501   0011EE  10DE               	iorwf	postinc2,w,c
  1502   0011F0  B4D8               	btfsc	status,2,c
  1503   0011F2  EFFD  F008         	goto	u951
  1504   0011F6  EFFF  F008         	goto	u950
  1505   0011FA                     u951:
  1506   0011FA  EF18  F009         	goto	l2353
  1507   0011FE                     u950:
  1508   0011FE  5003               	movf	fputc@fp^0,w,c
  1509   001200  6ED9               	movwf	fsr2l,c
  1510   001202  6ADA               	clrf	fsr2h,c
  1511   001204  0E0A               	movlw	10
  1512   001206  26D9               	addwf	fsr2l,f,c
  1513   001208  5003               	movf	fputc@fp^0,w,c
  1514   00120A  6EE1               	movwf	fsr1l,c
  1515   00120C  6AE2               	clrf	fsr1h,c
  1516   00120E  0E03               	movlw	3
  1517   001210  26E1               	addwf	fsr1l,f,c
  1518   001212  50DE               	movf	postinc2,w,c
  1519   001214  5CE6               	subwf	postinc1,w,c
  1520   001216  50E6               	movf	postinc1,w,c
  1521   001218  0A80               	xorlw	128
  1522   00121A  6E08               	movwf	(??_fputc+4)^0,c
  1523   00121C  50DE               	movf	postinc2,w,c
  1524   00121E  0A80               	xorlw	128
  1525   001220  5808               	subwfb	(??_fputc+4)^0,w,c
  1526   001222  B0D8               	btfsc	status,0,c
  1527   001224  EF16  F009         	goto	u961
  1528   001228  EF18  F009         	goto	u960
  1529   00122C                     u961:
  1530   00122C  EF38  F009         	goto	l1414
  1531   001230                     u960:
  1532   001230                     l2353:
  1533   001230  5003               	movf	fputc@fp^0,w,c
  1534   001232  6ED9               	movwf	fsr2l,c
  1535   001234  6ADA               	clrf	fsr2h,c
  1536   001236  0E03               	movlw	3
  1537   001238  26D9               	addwf	fsr2l,f,c
  1538   00123A  CFDE F004          	movff	postinc2,??_fputc
  1539   00123E  CFDD F005          	movff	postdec2,??_fputc+1
  1540   001242  5003               	movf	fputc@fp^0,w,c
  1541   001244  6ED9               	movwf	fsr2l,c
  1542   001246  6ADA               	clrf	fsr2h,c
  1543   001248  CFDE F006          	movff	postinc2,??_fputc+2
  1544   00124C  CFDD F007          	movff	postdec2,??_fputc+3
  1545   001250  5004               	movf	??_fputc^0,w,c
  1546   001252  2406               	addwf	(??_fputc+2)^0,w,c
  1547   001254  6ED9               	movwf	fsr2l,c
  1548   001256  5005               	movf	(??_fputc+1)^0,w,c
  1549   001258  2007               	addwfc	(??_fputc+3)^0,w,c
  1550   00125A  6EDA               	movwf	fsr2h,c
  1551   00125C  C001  FFDF         	movff	fputc@c,indf2
  1552   001260  5003               	movf	fputc@fp^0,w,c
  1553   001262  6ED9               	movwf	fsr2l,c
  1554   001264  6ADA               	clrf	fsr2h,c
  1555   001266  0E03               	movlw	3
  1556   001268  26D9               	addwf	fsr2l,f,c
  1557   00126A  2ADE               	incf	postinc2,f,c
  1558   00126C  0E00               	movlw	0
  1559   00126E  22DD               	addwfc	postdec2,f,c
  1560   001270                     l1414:
  1561   001270  0012               	return		;funcret
  1562   001272                     __end_of_fputc:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _putch *****************
  1566 ;; Defined at:
  1567 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  c               1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  c               1    0[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_fputc
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text6
  1596   0018AC                     __ptext6:
  1597                           	callstack 0
  1598   0018AC                     _putch:
  1599                           	callstack 24
  1600   0018AC  0012               	return		;funcret
  1601   0018AE                     __end_of_putch:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _abs *****************
  1605 ;; Defined at:
  1606 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  a               2    6[COMRAM] int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  2    6[COMRAM] int 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;Total ram usage:        4 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_vfpfcnvrt
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text7
  1635   0016D0                     __ptext7:
  1636                           	callstack 0
  1637   0016D0                     _abs:
  1638                           	callstack 25
  1639   0016D0  BE08               	btfsc	(abs@a+1)^0,7,c
  1640   0016D2  EF6D  F00B         	goto	u971
  1641   0016D6  EF6F  F00B         	goto	u970
  1642   0016DA                     u971:
  1643   0016DA  EF75  F00B         	goto	l1399
  1644   0016DE                     u970:
  1645   0016DE  C007  F007         	movff	abs@a,?_abs
  1646   0016E2  C008  F008         	movff	abs@a+1,?_abs+1
  1647   0016E6  EF81  F00B         	goto	l1402
  1648   0016EA                     l1399:
  1649   0016EA  C007  F009         	movff	abs@a,??_abs
  1650   0016EE  C008  F00A         	movff	abs@a+1,??_abs+1
  1651   0016F2  1E09               	comf	??_abs^0,f,c
  1652   0016F4  1E0A               	comf	(??_abs+1)^0,f,c
  1653   0016F6  4A09               	infsnz	??_abs^0,f,c
  1654   0016F8  2A0A               	incf	(??_abs+1)^0,f,c
  1655   0016FA  C009  F007         	movff	??_abs,?_abs
  1656   0016FE  C00A  F008         	movff	??_abs+1,?_abs+1
  1657   001702                     l1402:
  1658   001702  0012               	return		;funcret
  1659   001704                     __end_of_abs:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function ___awmod *****************
  1663 ;; Defined at:
  1664 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dividend        2    0[COMRAM] int 
  1667 ;;  divisor         2    2[COMRAM] int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  sign            1    5[COMRAM] unsigned char 
  1670 ;;  counter         1    4[COMRAM] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2    0[COMRAM] int 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;Total ram usage:        6 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_vfpfcnvrt
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text8
  1695   001272                     __ptext8:
  1696                           	callstack 0
  1697   001272                     ___awmod:
  1698                           	callstack 25
  1699   001272  0E00               	movlw	0
  1700   001274  6E06               	movwf	___awmod@sign^0,c
  1701   001276  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1702   001278  EF42  F009         	goto	u870
  1703   00127C  EF40  F009         	goto	u871
  1704   001280                     u871:
  1705   001280  EF48  F009         	goto	l2315
  1706   001284                     u870:
  1707   001284  6C01               	negf	___awmod@dividend^0,c
  1708   001286  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1709   001288  B0D8               	btfsc	status,0,c
  1710   00128A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1711   00128C  0E01               	movlw	1
  1712   00128E  6E06               	movwf	___awmod@sign^0,c
  1713   001290                     l2315:
  1714   001290  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1715   001292  EF4F  F009         	goto	u880
  1716   001296  EF4D  F009         	goto	u881
  1717   00129A                     u881:
  1718   00129A  EF53  F009         	goto	l2319
  1719   00129E                     u880:
  1720   00129E  6C03               	negf	___awmod@divisor^0,c
  1721   0012A0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1722   0012A2  B0D8               	btfsc	status,0,c
  1723   0012A4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1724   0012A6                     l2319:
  1725   0012A6  5003               	movf	___awmod@divisor^0,w,c
  1726   0012A8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1727   0012AA  B4D8               	btfsc	status,2,c
  1728   0012AC  EF5A  F009         	goto	u891
  1729   0012B0  EF5C  F009         	goto	u890
  1730   0012B4                     u891:
  1731   0012B4  EF80  F009         	goto	l2335
  1732   0012B8                     u890:
  1733   0012B8  0E01               	movlw	1
  1734   0012BA  6E05               	movwf	___awmod@counter^0,c
  1735   0012BC  EF64  F009         	goto	l2325
  1736   0012C0                     l2323:
  1737   0012C0  90D8               	bcf	status,0,c
  1738   0012C2  3603               	rlcf	___awmod@divisor^0,f,c
  1739   0012C4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1740   0012C6  2A05               	incf	___awmod@counter^0,f,c
  1741   0012C8                     l2325:
  1742   0012C8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1743   0012CA  EF69  F009         	goto	u901
  1744   0012CE  EF6B  F009         	goto	u900
  1745   0012D2                     u901:
  1746   0012D2  EF60  F009         	goto	l2323
  1747   0012D6                     u900:
  1748   0012D6                     l2327:
  1749   0012D6  5003               	movf	___awmod@divisor^0,w,c
  1750   0012D8  5C01               	subwf	___awmod@dividend^0,w,c
  1751   0012DA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1752   0012DC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1753   0012DE  A0D8               	btfss	status,0,c
  1754   0012E0  EF74  F009         	goto	u911
  1755   0012E4  EF76  F009         	goto	u910
  1756   0012E8                     u911:
  1757   0012E8  EF7A  F009         	goto	l2331
  1758   0012EC                     u910:
  1759   0012EC  5003               	movf	___awmod@divisor^0,w,c
  1760   0012EE  5E01               	subwf	___awmod@dividend^0,f,c
  1761   0012F0  5004               	movf	(___awmod@divisor+1)^0,w,c
  1762   0012F2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1763   0012F4                     l2331:
  1764   0012F4  90D8               	bcf	status,0,c
  1765   0012F6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1766   0012F8  3203               	rrcf	___awmod@divisor^0,f,c
  1767   0012FA  2E05               	decfsz	___awmod@counter^0,f,c
  1768   0012FC  EF6B  F009         	goto	l2327
  1769   001300                     l2335:
  1770   001300  5006               	movf	___awmod@sign^0,w,c
  1771   001302  B4D8               	btfsc	status,2,c
  1772   001304  EF86  F009         	goto	u921
  1773   001308  EF88  F009         	goto	u920
  1774   00130C                     u921:
  1775   00130C  EF8C  F009         	goto	l2339
  1776   001310                     u920:
  1777   001310  6C01               	negf	___awmod@dividend^0,c
  1778   001312  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1779   001314  B0D8               	btfsc	status,0,c
  1780   001316  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1781   001318                     l2339:
  1782   001318  C001  F001         	movff	___awmod@dividend,?___awmod
  1783   00131C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1784   001320  0012               	return		;funcret
  1785   001322                     __end_of___awmod:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function ___awdiv *****************
  1789 ;; Defined at:
  1790 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  dividend        2    0[COMRAM] int 
  1793 ;;  divisor         2    2[COMRAM] int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  quotient        2    6[COMRAM] int 
  1796 ;;  sign            1    5[COMRAM] unsigned char 
  1797 ;;  counter         1    4[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2    0[COMRAM] int 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;Total ram usage:        8 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_vfpfcnvrt
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text9
  1822   0010F4                     __ptext9:
  1823                           	callstack 0
  1824   0010F4                     ___awdiv:
  1825                           	callstack 25
  1826   0010F4  0E00               	movlw	0
  1827   0010F6  6E06               	movwf	___awdiv@sign^0,c
  1828   0010F8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1829   0010FA  EF83  F008         	goto	u810
  1830   0010FE  EF81  F008         	goto	u811
  1831   001102                     u811:
  1832   001102  EF89  F008         	goto	l2271
  1833   001106                     u810:
  1834   001106  6C03               	negf	___awdiv@divisor^0,c
  1835   001108  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1836   00110A  B0D8               	btfsc	status,0,c
  1837   00110C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1838   00110E  0E01               	movlw	1
  1839   001110  6E06               	movwf	___awdiv@sign^0,c
  1840   001112                     l2271:
  1841   001112  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1842   001114  EF90  F008         	goto	u820
  1843   001118  EF8E  F008         	goto	u821
  1844   00111C                     u821:
  1845   00111C  EF96  F008         	goto	l2277
  1846   001120                     u820:
  1847   001120  6C01               	negf	___awdiv@dividend^0,c
  1848   001122  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1849   001124  B0D8               	btfsc	status,0,c
  1850   001126  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1851   001128  0E01               	movlw	1
  1852   00112A  1A06               	xorwf	___awdiv@sign^0,f,c
  1853   00112C                     l2277:
  1854   00112C  0E00               	movlw	0
  1855   00112E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1856   001130  0E00               	movlw	0
  1857   001132  6E07               	movwf	___awdiv@quotient^0,c
  1858   001134  5003               	movf	___awdiv@divisor^0,w,c
  1859   001136  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1860   001138  B4D8               	btfsc	status,2,c
  1861   00113A  EFA1  F008         	goto	u831
  1862   00113E  EFA3  F008         	goto	u830
  1863   001142                     u831:
  1864   001142  EFCB  F008         	goto	l2299
  1865   001146                     u830:
  1866   001146  0E01               	movlw	1
  1867   001148  6E05               	movwf	___awdiv@counter^0,c
  1868   00114A  EFAB  F008         	goto	l2285
  1869   00114E                     l2283:
  1870   00114E  90D8               	bcf	status,0,c
  1871   001150  3603               	rlcf	___awdiv@divisor^0,f,c
  1872   001152  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1873   001154  2A05               	incf	___awdiv@counter^0,f,c
  1874   001156                     l2285:
  1875   001156  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1876   001158  EFB0  F008         	goto	u841
  1877   00115C  EFB2  F008         	goto	u840
  1878   001160                     u841:
  1879   001160  EFA7  F008         	goto	l2283
  1880   001164                     u840:
  1881   001164                     l2287:
  1882   001164  90D8               	bcf	status,0,c
  1883   001166  3607               	rlcf	___awdiv@quotient^0,f,c
  1884   001168  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1885   00116A  5003               	movf	___awdiv@divisor^0,w,c
  1886   00116C  5C01               	subwf	___awdiv@dividend^0,w,c
  1887   00116E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1888   001170  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1889   001172  A0D8               	btfss	status,0,c
  1890   001174  EFBE  F008         	goto	u851
  1891   001178  EFC0  F008         	goto	u850
  1892   00117C                     u851:
  1893   00117C  EFC5  F008         	goto	l2295
  1894   001180                     u850:
  1895   001180  5003               	movf	___awdiv@divisor^0,w,c
  1896   001182  5E01               	subwf	___awdiv@dividend^0,f,c
  1897   001184  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1898   001186  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1899   001188  8007               	bsf	___awdiv@quotient^0,0,c
  1900   00118A                     l2295:
  1901   00118A  90D8               	bcf	status,0,c
  1902   00118C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1903   00118E  3203               	rrcf	___awdiv@divisor^0,f,c
  1904   001190  2E05               	decfsz	___awdiv@counter^0,f,c
  1905   001192  EFB2  F008         	goto	l2287
  1906   001196                     l2299:
  1907   001196  5006               	movf	___awdiv@sign^0,w,c
  1908   001198  B4D8               	btfsc	status,2,c
  1909   00119A  EFD1  F008         	goto	u861
  1910   00119E  EFD3  F008         	goto	u860
  1911   0011A2                     u861:
  1912   0011A2  EFD7  F008         	goto	l2303
  1913   0011A6                     u860:
  1914   0011A6  6C07               	negf	___awdiv@quotient^0,c
  1915   0011A8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1916   0011AA  B0D8               	btfsc	status,0,c
  1917   0011AC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1918   0011AE                     l2303:
  1919   0011AE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1920   0011B2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1921   0011B6  0012               	return		;funcret
  1922   0011B8                     __end_of___awdiv:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _sendStringSerial4 *****************
  1926 ;; Defined at:
  1927 ;;		line 35 in file "serial.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  string          2    1[COMRAM] PTR unsigned char 
  1930 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;Total ram usage:        2 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 2
  1949 ;; This function calls:
  1950 ;;		_sendCharSerial4
  1951 ;; This function is called by:
  1952 ;;		_sendIntSerial4
  1953 ;;		_sendArrayCharSerial4
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text10
  1958   0013B2                     __ptext10:
  1959                           	callstack 0
  1960   0013B2                     _sendStringSerial4:
  1961                           	callstack 27
  1962   0013B2                     
  1963                           ;serial.c: 37:     while(*string != 0){
  1964   0013B2  EFF0  F009         	goto	l2589
  1965   0013B6                     l2585:
  1966                           
  1967                           ;serial.c: 38:   sendCharSerial4(*string++);
  1968   0013B6  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1969   0013BA  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1970   0013BE  0E00               	movlw	low (__smallconst shr (0+16))
  1971   0013C0  6EF8               	movwf	tblptru,c
  1972   0013C2  0E0D               	movlw	(high __ramtop+-1)
  1973   0013C4  64F7               	cpfsgt	tblptrh,c
  1974   0013C6  D003               	bra	u1257
  1975   0013C8  0008               	tblrd		*
  1976   0013CA  50F5               	movf	tablat,w,c
  1977   0013CC  D005               	bra	u1250
  1978   0013CE                     u1257:
  1979   0013CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1980   0013D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1981   0013D6  50EF               	movf	indf0,w,c
  1982   0013D8                     u1250:
  1983   0013D8  EC35  F00C         	call	_sendCharSerial4
  1984   0013DC  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1985   0013DE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1986   0013E0                     l2589:
  1987                           
  1988                           ;serial.c: 37:     while(*string != 0){
  1989   0013E0  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1990   0013E4  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1991   0013E8  0E00               	movlw	low (__smallconst shr (0+16))
  1992   0013EA  6EF8               	movwf	tblptru,c
  1993   0013EC  0E0D               	movlw	(high __ramtop+-1)
  1994   0013EE  64F7               	cpfsgt	tblptrh,c
  1995   0013F0  D003               	bra	u1267
  1996   0013F2  0008               	tblrd		*
  1997   0013F4  50F5               	movf	tablat,w,c
  1998   0013F6  D005               	bra	u1260
  1999   0013F8                     u1267:
  2000   0013F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  2001   0013FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  2002   001400  50EF               	movf	indf0,w,c
  2003   001402                     u1260:
  2004   001402  0900               	iorlw	0
  2005   001404  A4D8               	btfss	status,2,c
  2006   001406  EF07  F00A         	goto	u1271
  2007   00140A  EF09  F00A         	goto	u1270
  2008   00140E                     u1271:
  2009   00140E  EFDB  F009         	goto	l2585
  2010   001412                     u1270:
  2011   001412  0012               	return		;funcret
  2012   001414                     __end_of_sendStringSerial4:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _sendCharSerial4 *****************
  2016 ;; Defined at:
  2017 ;;		line 29 in file "serial.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  charToSend      1    wreg     unsigned char 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  charToSend      1    0[COMRAM] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;Total ram usage:        1 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_sendStringSerial4
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text11
  2046   00186A                     __ptext11:
  2047                           	callstack 0
  2048   00186A                     _sendCharSerial4:
  2049                           	callstack 27
  2050                           
  2051                           ;incstack = 0
  2052                           ;sendCharSerial4@charToSend stored from wreg
  2053   00186A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2054   00186C                     l415:
  2055   00186C  010E               	movlb	14	; () banked
  2056   00186E  A537               	btfss	55,2,b	;volatile
  2057   001870  EF3C  F00C         	goto	u501
  2058   001874  EF3E  F00C         	goto	u500
  2059   001878                     u501:
  2060   001878  EF36  F00C         	goto	l415
  2061   00187C                     u500:
  2062   00187C                     
  2063                           ; BSR set to: 14
  2064                           ;serial.c: 31:     TX4REG = charToSend;
  2065   00187C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2066   001880                     
  2067                           ; BSR set to: 14
  2068   001880  0012               	return		;funcret
  2069   001882                     __end_of_sendCharSerial4:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _initUSART4 *****************
  2073 ;; Defined at:
  2074 ;;		line 5 in file "serial.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text12
  2103   00184C                     __ptext12:
  2104                           	callstack 0
  2105   00184C                     _initUSART4:
  2106                           	callstack 29
  2107   00184C                     
  2108                           ;serial.c: 9:     RC0PPS = 0x12;
  2109   00184C  0E12               	movlw	18
  2110   00184E  010E               	movlb	14	; () banked
  2111   001850  6F62               	movwf	98,b	;volatile
  2112                           
  2113                           ;serial.c: 10:     RX4PPS = 0x11;
  2114   001852  0E11               	movlw	17
  2115   001854  6F15               	movwf	21,b	;volatile
  2116   001856                     
  2117                           ; BSR set to: 14
  2118                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2119   001856  97E9               	bcf	233,3,b	;volatile
  2120   001858                     
  2121                           ; BSR set to: 14
  2122                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2123   001858  95E8               	bcf	232,2,b	;volatile
  2124                           
  2125                           ;serial.c: 14:     SP4BRGL = 51;
  2126   00185A  0E33               	movlw	51
  2127   00185C  6FE5               	movwf	229,b	;volatile
  2128                           
  2129                           ;serial.c: 15:     SP4BRGH = 0;
  2130   00185E  0E00               	movlw	0
  2131   001860  6FE6               	movwf	230,b	;volatile
  2132   001862                     
  2133                           ; BSR set to: 14
  2134                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2135   001862  89E7               	bsf	231,4,b	;volatile
  2136   001864                     
  2137                           ; BSR set to: 14
  2138                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2139   001864  8BE8               	bsf	232,5,b	;volatile
  2140   001866                     
  2141                           ; BSR set to: 14
  2142                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2143   001866  8FE7               	bsf	231,7,b	;volatile
  2144   001868                     
  2145                           ; BSR set to: 14
  2146   001868  0012               	return		;funcret
  2147   00186A                     __end_of_initUSART4:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _initDCmotorsPWM *****************
  2151 ;; Defined at:
  2152 ;;		line 5 in file "dc_motor.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text13
  2181   001322                     __ptext13:
  2182                           	callstack 0
  2183   001322                     _initDCmotorsPWM:
  2184                           	callstack 29
  2185   001322                     
  2186                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2187   001322  9485               	bcf	133,2,c	;volatile
  2188                           
  2189                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2190   001324  9885               	bcf	133,4,c	;volatile
  2191                           
  2192                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2193   001326  9E83               	bcf	131,7,c	;volatile
  2194                           
  2195                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2196   001328  9C87               	bcf	135,6,c	;volatile
  2197                           
  2198                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2199   00132A  947D               	bcf	125,2,c	;volatile
  2200                           
  2201                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2202   00132C  987D               	bcf	125,4,c	;volatile
  2203                           
  2204                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2205   00132E  9E7B               	bcf	123,7,c	;volatile
  2206                           
  2207                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2208   001330  9C7F               	bcf	127,6,c	;volatile
  2209   001332                     
  2210                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2211   001332  0E05               	movlw	5
  2212   001334  010E               	movlb	14	; () banked
  2213   001336  6F74               	movwf	116,b	;volatile
  2214                           
  2215                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2216   001338  0E06               	movlw	6
  2217   00133A  6F76               	movwf	118,b	;volatile
  2218                           
  2219                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2220   00133C  0E07               	movlw	7
  2221   00133E  6F69               	movwf	105,b	;volatile
  2222                           
  2223                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2224   001340  0E08               	movlw	8
  2225   001342  6F88               	movwf	136,b	;volatile
  2226                           
  2227                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2228   001344  50BD               	movf	189,w,c	;volatile
  2229   001346  0B8F               	andlw	-113
  2230   001348  0940               	iorlw	64
  2231   00134A  6EBD               	movwf	189,c	;volatile
  2232                           
  2233                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2234   00134C  0EE0               	movlw	-32
  2235   00134E  16BE               	andwf	190,f,c	;volatile
  2236                           
  2237                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2238   001350  50BF               	movf	191,w,c	;volatile
  2239   001352  0BF0               	andlw	-16
  2240   001354  0901               	iorlw	1
  2241   001356  6EBF               	movwf	191,c	;volatile
  2242   001358                     
  2243                           ; BSR set to: 14
  2244                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2245   001358  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2246   00135C                     
  2247                           ; BSR set to: 14
  2248                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2249   00135C  8EBD               	bsf	189,7,c	;volatile
  2250                           
  2251                           ;dc_motor.c: 35:     CCPR1H=0;
  2252   00135E  0E00               	movlw	0
  2253   001360  6EAA               	movwf	170,c	;volatile
  2254                           
  2255                           ;dc_motor.c: 36:     CCPR2H=0;
  2256   001362  0E00               	movlw	0
  2257   001364  6EA6               	movwf	166,c	;volatile
  2258                           
  2259                           ;dc_motor.c: 37:     CCPR3H=0;
  2260   001366  0E00               	movlw	0
  2261   001368  010F               	movlb	15	; () banked
  2262   00136A  6F25               	movwf	37,b	;volatile
  2263                           
  2264                           ;dc_motor.c: 38:     CCPR4H=0;
  2265   00136C  0E00               	movlw	0
  2266   00136E  6F21               	movwf	33,b	;volatile
  2267                           
  2268                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2269   001370  0EFC               	movlw	-4
  2270   001372  16AD               	andwf	173,f,c	;volatile
  2271                           
  2272                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2273   001374  0EF3               	movlw	-13
  2274   001376  16AD               	andwf	173,f,c	;volatile
  2275                           
  2276                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2277   001378  0ECF               	movlw	-49
  2278   00137A  16AD               	andwf	173,f,c	;volatile
  2279                           
  2280                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2281   00137C  0E3F               	movlw	-193
  2282   00137E  16AD               	andwf	173,f,c	;volatile
  2283   001380                     
  2284                           ; BSR set to: 15
  2285                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2286   001380  88AB               	bsf	171,4,c	;volatile
  2287                           
  2288                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2289   001382  50AB               	movf	171,w,c	;volatile
  2290   001384  0BF0               	andlw	-16
  2291   001386  090C               	iorlw	12
  2292   001388  6EAB               	movwf	171,c	;volatile
  2293   00138A                     
  2294                           ; BSR set to: 15
  2295                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2296   00138A  8EAB               	bsf	171,7,c	;volatile
  2297   00138C                     
  2298                           ; BSR set to: 15
  2299                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2300   00138C  88A7               	bsf	167,4,c	;volatile
  2301                           
  2302                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2303   00138E  50A7               	movf	167,w,c	;volatile
  2304   001390  0BF0               	andlw	-16
  2305   001392  090C               	iorlw	12
  2306   001394  6EA7               	movwf	167,c	;volatile
  2307   001396                     
  2308                           ; BSR set to: 15
  2309                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2310   001396  8EA7               	bsf	167,7,c	;volatile
  2311   001398                     
  2312                           ; BSR set to: 15
  2313                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2314   001398  8926               	bsf	38,4,b	;volatile
  2315                           
  2316                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2317   00139A  5126               	movf	38,w,b	;volatile
  2318   00139C  0BF0               	andlw	-16
  2319   00139E  090C               	iorlw	12
  2320   0013A0  6F26               	movwf	38,b	;volatile
  2321   0013A2                     
  2322                           ; BSR set to: 15
  2323                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2324   0013A2  8F26               	bsf	38,7,b	;volatile
  2325   0013A4                     
  2326                           ; BSR set to: 15
  2327                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2328   0013A4  8922               	bsf	34,4,b	;volatile
  2329                           
  2330                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2331   0013A6  5122               	movf	34,w,b	;volatile
  2332   0013A8  0BF0               	andlw	-16
  2333   0013AA  090C               	iorlw	12
  2334   0013AC  6F22               	movwf	34,b	;volatile
  2335   0013AE                     
  2336                           ; BSR set to: 15
  2337                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2338   0013AE  8F22               	bsf	34,7,b	;volatile
  2339   0013B0                     
  2340                           ; BSR set to: 15
  2341   0013B0  0012               	return		;funcret
  2342   0013B2                     __end_of_initDCmotorsPWM:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _getRGBCval *****************
  2346 ;; Defined at:
  2347 ;;		line 84 in file "color.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2350 ;;		 -> main@measured_colour(8), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2362 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;Total ram usage:        1 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 4
  2369 ;; This function calls:
  2370 ;;		_color_read_Blue
  2371 ;;		_color_read_Clear
  2372 ;;		_color_read_Green
  2373 ;;		_color_read_Red
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text14
  2380   00146A                     __ptext14:
  2381                           	callstack 0
  2382   00146A                     _getRGBCval:
  2383                           	callstack 26
  2384   00146A                     
  2385                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2386   00146A  EC60  F00A         	call	_color_read_Red	;wreg free
  2387   00146E  500C               	movf	getRGBCval@p^0,w,c
  2388   001470  6ED9               	movwf	fsr2l,c
  2389   001472  6ADA               	clrf	fsr2h,c
  2390   001474  C005  FFDE         	movff	?_color_read_Red,postinc2
  2391   001478  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2392                           
  2393                           ;color.c: 87:     p->B = color_read_Blue();
  2394   00147C  ECD8  F00A         	call	_color_read_Blue	;wreg free
  2395   001480  500C               	movf	getRGBCval@p^0,w,c
  2396   001482  6ED9               	movwf	fsr2l,c
  2397   001484  6ADA               	clrf	fsr2h,c
  2398   001486  0E04               	movlw	4
  2399   001488  26D9               	addwf	fsr2l,f,c
  2400   00148A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2401   00148E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2402                           
  2403                           ;color.c: 88:     p->G = color_read_Green();
  2404   001492  EC88  F00A         	call	_color_read_Green	;wreg free
  2405   001496  500C               	movf	getRGBCval@p^0,w,c
  2406   001498  6ED9               	movwf	fsr2l,c
  2407   00149A  6ADA               	clrf	fsr2h,c
  2408   00149C  0E02               	movlw	2
  2409   00149E  26D9               	addwf	fsr2l,f,c
  2410   0014A0  C005  FFDE         	movff	?_color_read_Green,postinc2
  2411   0014A4  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2412                           
  2413                           ;color.c: 89:     p->C = color_read_Clear();
  2414   0014A8  ECB0  F00A         	call	_color_read_Clear	;wreg free
  2415   0014AC  500C               	movf	getRGBCval@p^0,w,c
  2416   0014AE  6ED9               	movwf	fsr2l,c
  2417   0014B0  6ADA               	clrf	fsr2h,c
  2418   0014B2  0E06               	movlw	6
  2419   0014B4  26D9               	addwf	fsr2l,f,c
  2420   0014B6  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2421   0014BA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2422   0014BE  0012               	return		;funcret
  2423   0014C0                     __end_of_getRGBCval:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _color_read_Red *****************
  2427 ;; Defined at:
  2428 ;;		line 28 in file "color.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  tmp             2    9[COMRAM] unsigned int 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2    4[COMRAM] unsigned int 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;Total ram usage:        7 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 3
  2449 ;; This function calls:
  2450 ;;		_I2C_2_Master_Read
  2451 ;;		_I2C_2_Master_RepStart
  2452 ;;		_I2C_2_Master_Start
  2453 ;;		_I2C_2_Master_Stop
  2454 ;;		_I2C_2_Master_Write
  2455 ;; This function is called by:
  2456 ;;		_getRGBCval
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text15
  2461   0014C0                     __ptext15:
  2462                           	callstack 0
  2463   0014C0                     _color_read_Red:
  2464                           	callstack 26
  2465   0014C0                     
  2466                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2467   0014C0  EC51  F00C         	call	_I2C_2_Master_Start	;wreg free
  2468                           
  2469                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2470   0014C4  0E52               	movlw	82
  2471   0014C6  EC41  F00C         	call	_I2C_2_Master_Write
  2472                           
  2473                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2474   0014CA  0EB6               	movlw	182
  2475   0014CC  EC41  F00C         	call	_I2C_2_Master_Write
  2476                           
  2477                           ;color.c: 34:  I2C_2_Master_RepStart();
  2478   0014D0  EC47  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2479                           
  2480                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2481   0014D4  0E53               	movlw	83
  2482   0014D6  EC41  F00C         	call	_I2C_2_Master_Write
  2483                           
  2484                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2485   0014DA  0E01               	movlw	1
  2486   0014DC  EC47  F00B         	call	_I2C_2_Master_Read
  2487   0014E0  6E07               	movwf	??_color_read_Red^0,c
  2488   0014E2  5007               	movf	??_color_read_Red^0,w,c
  2489   0014E4  6E0A               	movwf	color_read_Red@tmp^0,c
  2490   0014E6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2491                           
  2492                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2493   0014E8  0E00               	movlw	0
  2494   0014EA  EC47  F00B         	call	_I2C_2_Master_Read
  2495   0014EE  6E07               	movwf	??_color_read_Red^0,c
  2496   0014F0  5007               	movf	??_color_read_Red^0,w,c
  2497   0014F2  6E09               	movwf	(??_color_read_Red+2)^0,c
  2498   0014F4  6A08               	clrf	(??_color_read_Red+1)^0,c
  2499   0014F6  500A               	movf	color_read_Red@tmp^0,w,c
  2500   0014F8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2501   0014FA  6E0A               	movwf	color_read_Red@tmp^0,c
  2502   0014FC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2503   0014FE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2504   001500  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2505                           
  2506                           ;color.c: 38:  I2C_2_Master_Stop();
  2507   001502  EC4C  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2508   001506                     
  2509                           ;color.c: 39:  return tmp;
  2510   001506  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2511   00150A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2512   00150E  0012               	return		;funcret
  2513   001510                     __end_of_color_read_Red:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _color_read_Green *****************
  2517 ;; Defined at:
  2518 ;;		line 56 in file "color.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  tmp             2    9[COMRAM] unsigned int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2    4[COMRAM] unsigned int 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;Total ram usage:        7 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 3
  2539 ;; This function calls:
  2540 ;;		_I2C_2_Master_Read
  2541 ;;		_I2C_2_Master_RepStart
  2542 ;;		_I2C_2_Master_Start
  2543 ;;		_I2C_2_Master_Stop
  2544 ;;		_I2C_2_Master_Write
  2545 ;; This function is called by:
  2546 ;;		_getRGBCval
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text16
  2551   001510                     __ptext16:
  2552                           	callstack 0
  2553   001510                     _color_read_Green:
  2554                           	callstack 26
  2555   001510                     
  2556                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2557   001510  EC51  F00C         	call	_I2C_2_Master_Start	;wreg free
  2558                           
  2559                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2560   001514  0E52               	movlw	82
  2561   001516  EC41  F00C         	call	_I2C_2_Master_Write
  2562                           
  2563                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2564   00151A  0EB8               	movlw	184
  2565   00151C  EC41  F00C         	call	_I2C_2_Master_Write
  2566                           
  2567                           ;color.c: 62:  I2C_2_Master_RepStart();
  2568   001520  EC47  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2569                           
  2570                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2571   001524  0E53               	movlw	83
  2572   001526  EC41  F00C         	call	_I2C_2_Master_Write
  2573                           
  2574                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2575   00152A  0E01               	movlw	1
  2576   00152C  EC47  F00B         	call	_I2C_2_Master_Read
  2577   001530  6E07               	movwf	??_color_read_Green^0,c
  2578   001532  5007               	movf	??_color_read_Green^0,w,c
  2579   001534  6E0A               	movwf	color_read_Green@tmp^0,c
  2580   001536  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2581                           
  2582                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2583   001538  0E00               	movlw	0
  2584   00153A  EC47  F00B         	call	_I2C_2_Master_Read
  2585   00153E  6E07               	movwf	??_color_read_Green^0,c
  2586   001540  5007               	movf	??_color_read_Green^0,w,c
  2587   001542  6E09               	movwf	(??_color_read_Green+2)^0,c
  2588   001544  6A08               	clrf	(??_color_read_Green+1)^0,c
  2589   001546  500A               	movf	color_read_Green@tmp^0,w,c
  2590   001548  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2591   00154A  6E0A               	movwf	color_read_Green@tmp^0,c
  2592   00154C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2593   00154E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2594   001550  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2595                           
  2596                           ;color.c: 66:  I2C_2_Master_Stop();
  2597   001552  EC4C  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2598   001556                     
  2599                           ;color.c: 67:  return tmp;
  2600   001556  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2601   00155A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2602   00155E  0012               	return		;funcret
  2603   001560                     __end_of_color_read_Green:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _color_read_Clear *****************
  2607 ;; Defined at:
  2608 ;;		line 70 in file "color.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  tmp             2    9[COMRAM] unsigned int 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    4[COMRAM] unsigned int 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;Total ram usage:        7 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 3
  2629 ;; This function calls:
  2630 ;;		_I2C_2_Master_Read
  2631 ;;		_I2C_2_Master_RepStart
  2632 ;;		_I2C_2_Master_Start
  2633 ;;		_I2C_2_Master_Stop
  2634 ;;		_I2C_2_Master_Write
  2635 ;; This function is called by:
  2636 ;;		_getRGBCval
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text17
  2641   001560                     __ptext17:
  2642                           	callstack 0
  2643   001560                     _color_read_Clear:
  2644                           	callstack 26
  2645   001560                     
  2646                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2647   001560  EC51  F00C         	call	_I2C_2_Master_Start	;wreg free
  2648                           
  2649                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2650   001564  0E52               	movlw	82
  2651   001566  EC41  F00C         	call	_I2C_2_Master_Write
  2652                           
  2653                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2654   00156A  0EB4               	movlw	180
  2655   00156C  EC41  F00C         	call	_I2C_2_Master_Write
  2656                           
  2657                           ;color.c: 76:  I2C_2_Master_RepStart();
  2658   001570  EC47  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2659                           
  2660                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2661   001574  0E53               	movlw	83
  2662   001576  EC41  F00C         	call	_I2C_2_Master_Write
  2663                           
  2664                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2665   00157A  0E01               	movlw	1
  2666   00157C  EC47  F00B         	call	_I2C_2_Master_Read
  2667   001580  6E07               	movwf	??_color_read_Clear^0,c
  2668   001582  5007               	movf	??_color_read_Clear^0,w,c
  2669   001584  6E0A               	movwf	color_read_Clear@tmp^0,c
  2670   001586  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2671                           
  2672                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2673   001588  0E00               	movlw	0
  2674   00158A  EC47  F00B         	call	_I2C_2_Master_Read
  2675   00158E  6E07               	movwf	??_color_read_Clear^0,c
  2676   001590  5007               	movf	??_color_read_Clear^0,w,c
  2677   001592  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2678   001594  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2679   001596  500A               	movf	color_read_Clear@tmp^0,w,c
  2680   001598  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2681   00159A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2682   00159C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2683   00159E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2684   0015A0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2685                           
  2686                           ;color.c: 80:  I2C_2_Master_Stop();
  2687   0015A2  EC4C  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2688   0015A6                     
  2689                           ;color.c: 81:  return tmp;
  2690   0015A6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2691   0015AA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2692   0015AE  0012               	return		;funcret
  2693   0015B0                     __end_of_color_read_Clear:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _color_read_Blue *****************
  2697 ;; Defined at:
  2698 ;;		line 42 in file "color.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  tmp             2    9[COMRAM] unsigned int 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    4[COMRAM] unsigned int 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;Total ram usage:        7 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 3
  2719 ;; This function calls:
  2720 ;;		_I2C_2_Master_Read
  2721 ;;		_I2C_2_Master_RepStart
  2722 ;;		_I2C_2_Master_Start
  2723 ;;		_I2C_2_Master_Stop
  2724 ;;		_I2C_2_Master_Write
  2725 ;; This function is called by:
  2726 ;;		_getRGBCval
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text18
  2731   0015B0                     __ptext18:
  2732                           	callstack 0
  2733   0015B0                     _color_read_Blue:
  2734                           	callstack 26
  2735   0015B0                     
  2736                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2737   0015B0  EC51  F00C         	call	_I2C_2_Master_Start	;wreg free
  2738                           
  2739                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2740   0015B4  0E52               	movlw	82
  2741   0015B6  EC41  F00C         	call	_I2C_2_Master_Write
  2742                           
  2743                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2744   0015BA  0EBA               	movlw	186
  2745   0015BC  EC41  F00C         	call	_I2C_2_Master_Write
  2746                           
  2747                           ;color.c: 48:  I2C_2_Master_RepStart();
  2748   0015C0  EC47  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2749                           
  2750                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2751   0015C4  0E53               	movlw	83
  2752   0015C6  EC41  F00C         	call	_I2C_2_Master_Write
  2753                           
  2754                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2755   0015CA  0E01               	movlw	1
  2756   0015CC  EC47  F00B         	call	_I2C_2_Master_Read
  2757   0015D0  6E07               	movwf	??_color_read_Blue^0,c
  2758   0015D2  5007               	movf	??_color_read_Blue^0,w,c
  2759   0015D4  6E0A               	movwf	color_read_Blue@tmp^0,c
  2760   0015D6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2761                           
  2762                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2763   0015D8  0E00               	movlw	0
  2764   0015DA  EC47  F00B         	call	_I2C_2_Master_Read
  2765   0015DE  6E07               	movwf	??_color_read_Blue^0,c
  2766   0015E0  5007               	movf	??_color_read_Blue^0,w,c
  2767   0015E2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2768   0015E4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2769   0015E6  500A               	movf	color_read_Blue@tmp^0,w,c
  2770   0015E8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2771   0015EA  6E0A               	movwf	color_read_Blue@tmp^0,c
  2772   0015EC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2773   0015EE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2774   0015F0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2775                           
  2776                           ;color.c: 52:  I2C_2_Master_Stop();
  2777   0015F2  EC4C  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2778   0015F6                     
  2779                           ;color.c: 53:  return tmp;
  2780   0015F6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2781   0015FA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2782   0015FE  0012               	return		;funcret
  2783   001600                     __end_of_color_read_Blue:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function _I2C_2_Master_RepStart *****************
  2787 ;; Defined at:
  2788 ;;		line 33 in file "i2c.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		_I2C_2_Master_Idle
  2811 ;; This function is called by:
  2812 ;;		_color_read_Red
  2813 ;;		_color_read_Blue
  2814 ;;		_color_read_Green
  2815 ;;		_color_read_Clear
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text19
  2820   00188E                     __ptext19:
  2821                           	callstack 0
  2822   00188E                     _I2C_2_Master_RepStart:
  2823                           	callstack 26
  2824   00188E                     
  2825                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2826   00188E  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2827   001892                     
  2828                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2829   001892  010E               	movlb	14	; () banked
  2830   001894  83DA               	bsf	218,1,b	;volatile
  2831   001896                     
  2832                           ; BSR set to: 14
  2833   001896  0012               	return		;funcret
  2834   001898                     __end_of_I2C_2_Master_RepStart:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _I2C_2_Master_Read *****************
  2838 ;; Defined at:
  2839 ;;		line 51 in file "i2c.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  ack             1    wreg     unsigned char 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  ack             1    2[COMRAM] unsigned char 
  2844 ;;  tmp             1    3[COMRAM] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      unsigned char 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;Total ram usage:        3 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 2
  2861 ;; This function calls:
  2862 ;;		_I2C_2_Master_Idle
  2863 ;; This function is called by:
  2864 ;;		_color_read_Red
  2865 ;;		_color_read_Blue
  2866 ;;		_color_read_Green
  2867 ;;		_color_read_Clear
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text20
  2872   00168E                     __ptext20:
  2873                           	callstack 0
  2874   00168E                     _I2C_2_Master_Read:
  2875                           	callstack 26
  2876                           
  2877                           ; BSR set to: 14
  2878                           ;incstack = 0
  2879                           ;I2C_2_Master_Read@ack stored from wreg
  2880   00168E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2881   001690                     
  2882                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2883   001690  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2884   001694                     
  2885                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2886   001694  010E               	movlb	14	; () banked
  2887   001696  87DA               	bsf	218,3,b	;volatile
  2888                           
  2889                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2890   001698  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2891   00169C                     
  2892                           ;i2c.c: 57:   tmp = SSP2BUF;
  2893   00169C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2894                           
  2895                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2896   0016A0  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2897   0016A4                     
  2898                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2899   0016A4  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2900   0016A6  B4D8               	btfsc	status,2,c
  2901   0016A8  EF58  F00B         	goto	u481
  2902   0016AC  EF5C  F00B         	goto	u480
  2903   0016B0                     u481:
  2904   0016B0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2905   0016B2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2906   0016B4  EF5D  F00B         	goto	u498
  2907   0016B8                     u480:
  2908   0016B8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2909   0016BA                     u498:
  2910   0016BA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2911   0016BC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2912   0016BE  010E               	movlb	14	; () banked
  2913   0016C0  51DA               	movf	218,w,b	;volatile
  2914   0016C2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2915   0016C4  0BDF               	andlw	-33
  2916   0016C6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2917   0016C8  6FDA               	movwf	218,b	;volatile
  2918   0016CA                     
  2919                           ; BSR set to: 14
  2920                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2921   0016CA  89DA               	bsf	218,4,b	;volatile
  2922   0016CC                     
  2923                           ; BSR set to: 14
  2924                           ;i2c.c: 61:   return tmp;
  2925   0016CC  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2926   0016CE                     
  2927                           ; BSR set to: 14
  2928   0016CE  0012               	return		;funcret
  2929   0016D0                     __end_of_I2C_2_Master_Read:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _color_click_init *****************
  2933 ;; Defined at:
  2934 ;;		line 4 in file "color.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;Total ram usage:        1 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 4
  2955 ;; This function calls:
  2956 ;;		_I2C_2_Master_Init
  2957 ;;		_color_writetoaddr
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text21
  2964   001704                     __ptext21:
  2965                           	callstack 0
  2966   001704                     _color_click_init:
  2967                           	callstack 26
  2968   001704                     
  2969                           ;color.c: 7:     I2C_2_Master_Init();
  2970   001704  ECB3  F00B         	call	_I2C_2_Master_Init	;wreg free
  2971   001708                     
  2972                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  2973   001708  0E01               	movlw	1
  2974   00170A  6E03               	movwf	color_writetoaddr@value^0,c
  2975   00170C  0E00               	movlw	0
  2976   00170E  EC16  F00C         	call	_color_writetoaddr
  2977   001712                     
  2978                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2979   001712  0E3F               	movlw	63
  2980   001714  6E05               	movwf	??_color_click_init^0,c
  2981   001716  0E55               	movlw	85
  2982   001718                     u1927:
  2983   001718  2EE8               	decfsz	wreg,f,c
  2984   00171A  D7FE               	bra	u1927
  2985   00171C  2E05               	decfsz	??_color_click_init^0,f,c
  2986   00171E  D7FC               	bra	u1927
  2987   001720  0000               	nop	
  2988   001722                     
  2989                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  2990   001722  0E03               	movlw	3
  2991   001724  6E03               	movwf	color_writetoaddr@value^0,c
  2992   001726  0E00               	movlw	0
  2993   001728  EC16  F00C         	call	_color_writetoaddr
  2994   00172C                     
  2995                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  2996   00172C  0ED5               	movlw	213
  2997   00172E  6E03               	movwf	color_writetoaddr@value^0,c
  2998   001730  0E01               	movlw	1
  2999   001732  EC16  F00C         	call	_color_writetoaddr
  3000   001736  0012               	return		;funcret
  3001   001738                     __end_of_color_click_init:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _color_writetoaddr *****************
  3005 ;; Defined at:
  3006 ;;		line 20 in file "color.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  address         1    wreg     unsigned char 
  3009 ;;  value           1    2[COMRAM] unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  address         1    3[COMRAM] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;Total ram usage:        2 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 3
  3028 ;; This function calls:
  3029 ;;		_I2C_2_Master_Start
  3030 ;;		_I2C_2_Master_Stop
  3031 ;;		_I2C_2_Master_Write
  3032 ;; This function is called by:
  3033 ;;		_color_click_init
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text22
  3038   00182C                     __ptext22:
  3039                           	callstack 0
  3040   00182C                     _color_writetoaddr:
  3041                           	callstack 26
  3042                           
  3043                           ;incstack = 0
  3044                           ;color_writetoaddr@address stored from wreg
  3045   00182C  6E04               	movwf	color_writetoaddr@address^0,c
  3046   00182E                     
  3047                           ;color.c: 21:     I2C_2_Master_Start();
  3048   00182E  EC51  F00C         	call	_I2C_2_Master_Start	;wreg free
  3049                           
  3050                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3051   001832  0E52               	movlw	82
  3052   001834  EC41  F00C         	call	_I2C_2_Master_Write
  3053                           
  3054                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3055   001838  5004               	movf	color_writetoaddr@address^0,w,c
  3056   00183A  0980               	iorlw	128
  3057   00183C  EC41  F00C         	call	_I2C_2_Master_Write
  3058                           
  3059                           ;color.c: 24:     I2C_2_Master_Write(value);
  3060   001840  5003               	movf	color_writetoaddr@value^0,w,c
  3061   001842  EC41  F00C         	call	_I2C_2_Master_Write
  3062                           
  3063                           ;color.c: 25:     I2C_2_Master_Stop();
  3064   001846  EC4C  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3065   00184A  0012               	return		;funcret
  3066   00184C                     __end_of_color_writetoaddr:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _I2C_2_Master_Write *****************
  3070 ;; Defined at:
  3071 ;;		line 45 in file "i2c.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  data_byte       1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  data_byte       1    1[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        1 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 2
  3092 ;; This function calls:
  3093 ;;		_I2C_2_Master_Idle
  3094 ;; This function is called by:
  3095 ;;		_color_writetoaddr
  3096 ;;		_color_read_Red
  3097 ;;		_color_read_Blue
  3098 ;;		_color_read_Green
  3099 ;;		_color_read_Clear
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text23
  3104   001882                     __ptext23:
  3105                           	callstack 0
  3106   001882                     _I2C_2_Master_Write:
  3107                           	callstack 26
  3108                           
  3109                           ;incstack = 0
  3110                           ;I2C_2_Master_Write@data_byte stored from wreg
  3111   001882  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3112   001884                     
  3113                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3114   001884  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3115   001888                     
  3116                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3117   001888  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3118   00188C  0012               	return		;funcret
  3119   00188E                     __end_of_I2C_2_Master_Write:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _I2C_2_Master_Stop *****************
  3123 ;; Defined at:
  3124 ;;		line 39 in file "i2c.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 2
  3145 ;; This function calls:
  3146 ;;		_I2C_2_Master_Idle
  3147 ;; This function is called by:
  3148 ;;		_color_writetoaddr
  3149 ;;		_color_read_Red
  3150 ;;		_color_read_Blue
  3151 ;;		_color_read_Green
  3152 ;;		_color_read_Clear
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text24
  3157   001898                     __ptext24:
  3158                           	callstack 0
  3159   001898                     _I2C_2_Master_Stop:
  3160                           	callstack 26
  3161   001898                     
  3162                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3163   001898  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3164   00189C                     
  3165                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3166   00189C  010E               	movlb	14	; () banked
  3167   00189E  85DA               	bsf	218,2,b	;volatile
  3168   0018A0                     
  3169                           ; BSR set to: 14
  3170   0018A0  0012               	return		;funcret
  3171   0018A2                     __end_of_I2C_2_Master_Stop:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _I2C_2_Master_Start *****************
  3175 ;; Defined at:
  3176 ;;		line 27 in file "i2c.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 2
  3197 ;; This function calls:
  3198 ;;		_I2C_2_Master_Idle
  3199 ;; This function is called by:
  3200 ;;		_color_writetoaddr
  3201 ;;		_color_read_Red
  3202 ;;		_color_read_Blue
  3203 ;;		_color_read_Green
  3204 ;;		_color_read_Clear
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text25
  3209   0018A2                     __ptext25:
  3210                           	callstack 0
  3211   0018A2                     _I2C_2_Master_Start:
  3212                           	callstack 26
  3213   0018A2                     
  3214                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3215   0018A2  ECDD  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3216   0018A6                     
  3217                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3218   0018A6  010E               	movlb	14	; () banked
  3219   0018A8  81DA               	bsf	218,0,b	;volatile
  3220   0018AA                     
  3221                           ; BSR set to: 14
  3222   0018AA  0012               	return		;funcret
  3223   0018AC                     __end_of_I2C_2_Master_Start:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _I2C_2_Master_Idle *****************
  3227 ;; Defined at:
  3228 ;;		line 22 in file "i2c.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;Total ram usage:        1 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_I2C_2_Master_Start
  3253 ;;		_I2C_2_Master_RepStart
  3254 ;;		_I2C_2_Master_Stop
  3255 ;;		_I2C_2_Master_Write
  3256 ;;		_I2C_2_Master_Read
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text26
  3261   0017BA                     __ptext26:
  3262                           	callstack 0
  3263   0017BA                     _I2C_2_Master_Idle:
  3264                           	callstack 26
  3265   0017BA                     l250:
  3266   0017BA  010E               	movlb	14	; () banked
  3267   0017BC  B5D8               	btfsc	216,2,b	;volatile
  3268   0017BE  EFE3  F00B         	goto	u361
  3269   0017C2  EFE5  F00B         	goto	u360
  3270   0017C6                     u361:
  3271   0017C6  EFDD  F00B         	goto	l250
  3272   0017CA                     u360:
  3273   0017CA                     
  3274                           ; BSR set to: 14
  3275   0017CA  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3276   0017CE  0E1F               	movlw	31
  3277   0017D0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3278   0017D2  A4D8               	btfss	status,2,c
  3279   0017D4  EFEE  F00B         	goto	u371
  3280   0017D8  EFF0  F00B         	goto	u370
  3281   0017DC                     u371:
  3282   0017DC  EFDD  F00B         	goto	l250
  3283   0017E0                     u370:
  3284   0017E0                     
  3285                           ; BSR set to: 14
  3286   0017E0  0012               	return		;funcret
  3287   0017E2                     __end_of_I2C_2_Master_Idle:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _I2C_2_Master_Init *****************
  3291 ;; Defined at:
  3292 ;;		line 4 in file "i2c.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_color_click_init
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text27
  3321   001766                     __ptext27:
  3322                           	callstack 0
  3323   001766                     _I2C_2_Master_Init:
  3324                           	callstack 28
  3325   001766                     
  3326                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3327   001766  010E               	movlb	14	; () banked
  3328   001768  51D9               	movf	217,w,b	;volatile
  3329   00176A  0BF0               	andlw	-16
  3330   00176C  0908               	iorlw	8
  3331   00176E  6FD9               	movwf	217,b	;volatile
  3332   001770                     
  3333                           ; BSR set to: 14
  3334                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3335   001770  8BD9               	bsf	217,5,b	;volatile
  3336                           
  3337                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3338   001772  0E9F               	movlw	159
  3339   001774  6FD6               	movwf	214,b	;volatile
  3340   001776                     
  3341                           ; BSR set to: 14
  3342                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3343   001776  8A84               	bsf	132,5,c	;volatile
  3344   001778                     
  3345                           ; BSR set to: 14
  3346                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3347   001778  8C84               	bsf	132,6,c	;volatile
  3348   00177A                     
  3349                           ; BSR set to: 14
  3350                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3351   00177A  9BA7               	bcf	167,5,b	;volatile
  3352   00177C                     
  3353                           ; BSR set to: 14
  3354                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3355   00177C  9DA7               	bcf	167,6,b	;volatile
  3356                           
  3357                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3358   00177E  0E1D               	movlw	29
  3359   001780  6F1D               	movwf	29,b	;volatile
  3360                           
  3361                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3362   001782  0E1E               	movlw	30
  3363   001784  6F1C               	movwf	28,b	;volatile
  3364                           
  3365                           ;i2c.c: 18:   RD5PPS=0x1C;
  3366   001786  0E1C               	movlw	28
  3367   001788  6F6F               	movwf	111,b	;volatile
  3368                           
  3369                           ;i2c.c: 19:   RD6PPS=0x1B;
  3370   00178A  0E1B               	movlw	27
  3371   00178C  6F70               	movwf	112,b	;volatile
  3372   00178E                     
  3373                           ; BSR set to: 14
  3374   00178E  0012               	return		;funcret
  3375   001790                     __end_of_I2C_2_Master_Init:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _buggy_lights_init *****************
  3379 ;; Defined at:
  3380 ;;		line 4 in file "buggy_lights.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		None
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text28
  3409   001738                     __ptext28:
  3410                           	callstack 0
  3411   001738                     _buggy_lights_init:
  3412                           	callstack 29
  3413   001738                     
  3414                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3415   001738  9884               	bcf	132,4,c	;volatile
  3416                           
  3417                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3418   00173A  9288               	bcf	136,1,c	;volatile
  3419                           
  3420                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3421   00173C  9684               	bcf	132,3,c	;volatile
  3422                           
  3423                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3424   00173E  9086               	bcf	134,0,c	;volatile
  3425                           
  3426                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3427   001740  9088               	bcf	136,0,c	;volatile
  3428                           
  3429                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  3430   001742  987C               	bcf	124,4,c	;volatile
  3431                           
  3432                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  3433   001744  9280               	bcf	128,1,c	;volatile
  3434                           
  3435                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  3436   001746  967C               	bcf	124,3,c	;volatile
  3437                           
  3438                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  3439   001748  907E               	bcf	126,0,c	;volatile
  3440                           
  3441                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  3442   00174A  9080               	bcf	128,0,c	;volatile
  3443                           
  3444                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  3445   00174C  9287               	bcf	135,1,c	;volatile
  3446                           
  3447                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  3448   00174E  9881               	bcf	129,4,c	;volatile
  3449                           
  3450                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  3451   001750  9E86               	bcf	134,7,c	;volatile
  3452                           
  3453                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 1;
  3454   001752  827F               	bsf	127,1,c	;volatile
  3455                           
  3456                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 1;
  3457   001754  8879               	bsf	121,4,c	;volatile
  3458                           
  3459                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 1;
  3460   001756  8E7E               	bsf	126,7,c	;volatile
  3461                           
  3462                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  3463   001758  9087               	bcf	135,0,c	;volatile
  3464                           
  3465                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  3466   00175A  9E85               	bcf	133,7,c	;volatile
  3467                           
  3468                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  3469   00175C  9681               	bcf	129,3,c	;volatile
  3470                           
  3471                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 1;
  3472   00175E  807F               	bsf	127,0,c	;volatile
  3473                           
  3474                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 1;
  3475   001760  8E7D               	bsf	125,7,c	;volatile
  3476                           
  3477                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 1;
  3478   001762  8679               	bsf	121,3,c	;volatile
  3479   001764  0012               	return		;funcret
  3480   001766                     __end_of_buggy_lights_init:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _Timer0_init *****************
  3484 ;; Defined at:
  3485 ;;		line 7 in file "timers.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text29
  3514   0017E2                     __ptext29:
  3515                           	callstack 0
  3516   0017E2                     _Timer0_init:
  3517                           	callstack 29
  3518   0017E2                     
  3519                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3520   0017E2  50D6               	movf	214,w,c	;volatile
  3521   0017E4  0B1F               	andlw	-225
  3522   0017E6  0940               	iorlw	64
  3523   0017E8  6ED6               	movwf	214,c	;volatile
  3524   0017EA                     
  3525                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3526   0017EA  88D6               	bsf	214,4,c	;volatile
  3527   0017EC                     
  3528                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3529   0017EC  88D5               	bsf	213,4,c	;volatile
  3530                           
  3531                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3532   0017EE  50D6               	movf	214,w,c	;volatile
  3533   0017F0  0BF0               	andlw	-16
  3534   0017F2  090E               	iorlw	14
  3535   0017F4  6ED6               	movwf	214,c	;volatile
  3536                           
  3537                           ;timers.c: 20:     TMR0H = 0;
  3538   0017F6  0E00               	movlw	0
  3539   0017F8  6ED4               	movwf	212,c	;volatile
  3540                           
  3541                           ;timers.c: 21:     TMR0L = 0;
  3542   0017FA  0E00               	movlw	0
  3543   0017FC  6ED3               	movwf	211,c	;volatile
  3544   0017FE                     
  3545                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3546   0017FE  8ED5               	bsf	213,7,c	;volatile
  3547   001800                     
  3548                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3549   001800  010E               	movlb	14	; () banked
  3550   001802  8B29               	bsf	41,5,b	;volatile
  3551   001804                     
  3552                           ; BSR set to: 14
  3553                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3554   001804  8CF2               	bsf	242,6,c	;volatile
  3555   001806                     
  3556                           ; BSR set to: 14
  3557                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3558   001806  8EF2               	bsf	242,7,c	;volatile
  3559   001808                     
  3560                           ; BSR set to: 14
  3561   001808  0012               	return		;funcret
  3562   00180A                     __end_of_Timer0_init:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _ISR *****************
  3566 ;; Defined at:
  3567 ;;		line 75 in file "timers.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		Interrupt level 2
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	intcode
  3595   000008                     __pintcode:
  3596                           	callstack 0
  3597   000008                     _ISR:
  3598                           	callstack 24
  3599                           
  3600                           ; BSR set to: 14
  3601                           ;incstack = 0
  3602   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3603   00000A                     
  3604                           ;timers.c: 78:     if (PIR0bits.TMR0IF) {
  3605   00000A  010E               	movlb	14	; () banked
  3606   00000C  AB33               	btfss	51,5,b	;volatile
  3607   00000E  EF0B  F000         	goto	i2u149_41
  3608   000012  EF0D  F000         	goto	i2u149_40
  3609   000016                     i2u149_41:
  3610   000016  EF1A  F000         	goto	i2l666
  3611   00001A                     i2u149_40:
  3612   00001A                     
  3613                           ; BSR set to: 14
  3614                           ;timers.c: 79:         if (returning) {
  3615   00001A  0100               	movlb	0	; () banked
  3616   00001C  519D               	movf	_returning& (0+255),w,b
  3617   00001E  B4D8               	btfsc	status,2,c
  3618   000020  EF14  F000         	goto	i2u150_41
  3619   000024  EF16  F000         	goto	i2u150_40
  3620   000028                     i2u150_41:
  3621   000028  EF18  F000         	goto	i2l665
  3622   00002C                     i2u150_40:
  3623   00002C                     
  3624                           ; BSR set to: 0
  3625                           ;timers.c: 82:             returnFlag = 1;
  3626   00002C  0E01               	movlw	1
  3627   00002E  6F9C               	movwf	_returnFlag& (0+255),b
  3628   000030                     i2l665:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;timers.c: 87:         PIR0bits.TMR0IF = 0;
  3632   000030  010E               	movlb	14	; () banked
  3633   000032  9B33               	bcf	51,5,b	;volatile
  3634   000034                     i2l666:
  3635                           
  3636                           ; BSR set to: 14
  3637   000034  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3638   000036  0011               	retfie		f
  3639   000038                     __end_of_ISR:
  3640                           	callstack 0
  3641                           
  3642                           	psect	rparam
  3643   000000                     
  3644                           	psect	temp
  3645   00005F                     btemp:
  3646                           	callstack 0
  3647   00005F                     	ds	1
  3648   000000                     int$flags	set	btemp
  3649   000000                     wtemp8	set	btemp+1
  3650   000000                     ttemp5	set	btemp+1
  3651   000000                     ttemp6	set	btemp+4
  3652   000000                     ttemp7	set	btemp+8
  3653                           
  3654                           	psect	idloc
  3655                           
  3656                           ;Config register IDLOC0 @ 0x200000
  3657                           ;	unspecified, using default values
  3658   200000                     	org	2097152
  3659   200000  FFFF               	dw	65535
  3660                           
  3661                           ;Config register IDLOC1 @ 0x200002
  3662                           ;	unspecified, using default values
  3663   200002                     	org	2097154
  3664   200002  FFFF               	dw	65535
  3665                           
  3666                           ;Config register IDLOC2 @ 0x200004
  3667                           ;	unspecified, using default values
  3668   200004                     	org	2097156
  3669   200004  FFFF               	dw	65535
  3670                           
  3671                           ;Config register IDLOC3 @ 0x200006
  3672                           ;	unspecified, using default values
  3673   200006                     	org	2097158
  3674   200006  FFFF               	dw	65535
  3675                           
  3676                           ;Config register IDLOC4 @ 0x200008
  3677                           ;	unspecified, using default values
  3678   200008                     	org	2097160
  3679   200008  FFFF               	dw	65535
  3680                           
  3681                           ;Config register IDLOC5 @ 0x20000A
  3682                           ;	unspecified, using default values
  3683   20000A                     	org	2097162
  3684   20000A  FFFF               	dw	65535
  3685                           
  3686                           ;Config register IDLOC6 @ 0x20000C
  3687                           ;	unspecified, using default values
  3688   20000C                     	org	2097164
  3689   20000C  FFFF               	dw	65535
  3690                           
  3691                           ;Config register IDLOC7 @ 0x20000E
  3692                           ;	unspecified, using default values
  3693   20000E                     	org	2097166
  3694   20000E  FFFF               	dw	65535
  3695                           
  3696                           	psect	config
  3697                           
  3698                           ;Config register CONFIG1L @ 0x300000
  3699                           ;	External Oscillator mode Selection bits
  3700                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3701                           ;	Power-up default value for COSC bits
  3702                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3703   300000                     	org	3145728
  3704   300000  AA                 	db	170
  3705                           
  3706                           ;Config register CONFIG1H @ 0x300001
  3707                           ;	unspecified, using default values
  3708                           ;	Clock Out Enable bit
  3709                           ;	CLKOUTEN = 0x1, unprogrammed default
  3710                           ;	Clock Switch Enable bit
  3711                           ;	CSWEN = 0x1, unprogrammed default
  3712                           ;	Fail-Safe Clock Monitor Enable bit
  3713                           ;	FCMEN = 0x1, unprogrammed default
  3714   300001                     	org	3145729
  3715   300001  FF                 	db	255
  3716                           
  3717                           ;Config register CONFIG2L @ 0x300002
  3718                           ;	unspecified, using default values
  3719                           ;	Master Clear Enable bit
  3720                           ;	MCLRE = 0x1, unprogrammed default
  3721                           ;	Power-up Timer Enable bit
  3722                           ;	PWRTE = 0x1, unprogrammed default
  3723                           ;	Low-power BOR enable bit
  3724                           ;	LPBOREN = 0x1, unprogrammed default
  3725                           ;	Brown-out Reset Enable bits
  3726                           ;	BOREN = 0x3, unprogrammed default
  3727   300002                     	org	3145730
  3728   300002  FF                 	db	255
  3729                           
  3730                           ;Config register CONFIG2H @ 0x300003
  3731                           ;	unspecified, using default values
  3732                           ;	Brown Out Reset Voltage selection bits
  3733                           ;	BORV = 0x3, unprogrammed default
  3734                           ;	ZCD Disable bit
  3735                           ;	ZCD = 0x1, unprogrammed default
  3736                           ;	PPSLOCK bit One-Way Set Enable bit
  3737                           ;	PPS1WAY = 0x1, unprogrammed default
  3738                           ;	Stack Full/Underflow Reset Enable bit
  3739                           ;	STVREN = 0x1, unprogrammed default
  3740                           ;	Debugger Enable bit
  3741                           ;	DEBUG = 0x1, unprogrammed default
  3742                           ;	Extended Instruction Set Enable bit
  3743                           ;	XINST = 0x1, unprogrammed default
  3744   300003                     	org	3145731
  3745   300003  FF                 	db	255
  3746                           
  3747                           ;Config register CONFIG3L @ 0x300004
  3748                           ;	WDT Period Select bits
  3749                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3750                           ;	WDT operating mode
  3751                           ;	WDTE = OFF, WDT Disabled
  3752   300004                     	org	3145732
  3753   300004  9F                 	db	159
  3754                           
  3755                           ;Config register CONFIG3H @ 0x300005
  3756                           ;	unspecified, using default values
  3757                           ;	WDT Window Select bits
  3758                           ;	WDTCWS = 0x7, unprogrammed default
  3759                           ;	WDT input clock selector
  3760                           ;	WDTCCS = 0x7, unprogrammed default
  3761   300005                     	org	3145733
  3762   300005  FF                 	db	255
  3763                           
  3764                           ;Config register CONFIG4L @ 0x300006
  3765                           ;	unspecified, using default values
  3766                           ;	Write Protection Block 0
  3767                           ;	WRT0 = 0x1, unprogrammed default
  3768                           ;	Write Protection Block 1
  3769                           ;	WRT1 = 0x1, unprogrammed default
  3770                           ;	Write Protection Block 2
  3771                           ;	WRT2 = 0x1, unprogrammed default
  3772                           ;	Write Protection Block 3
  3773                           ;	WRT3 = 0x1, unprogrammed default
  3774                           ;	Write Protection Block 3
  3775                           ;	WRT4 = 0x1, unprogrammed default
  3776                           ;	Write Protection Block 3
  3777                           ;	WRT5 = 0x1, unprogrammed default
  3778                           ;	Write Protection Block 3
  3779                           ;	WRT6 = 0x1, unprogrammed default
  3780                           ;	Write Protection Block 3
  3781                           ;	WRT7 = 0x1, unprogrammed default
  3782   300006                     	org	3145734
  3783   300006  FF                 	db	255
  3784                           
  3785                           ;Config register CONFIG4H @ 0x300007
  3786                           ;	unspecified, using default values
  3787                           ;	Configuration Register Write Protection bit
  3788                           ;	WRTC = 0x1, unprogrammed default
  3789                           ;	Boot Block Write Protection bit
  3790                           ;	WRTB = 0x1, unprogrammed default
  3791                           ;	Data EEPROM Write Protection bit
  3792                           ;	WRTD = 0x1, unprogrammed default
  3793                           ;	Scanner Enable bit
  3794                           ;	SCANE = 0x1, unprogrammed default
  3795                           ;	Low Voltage Programming Enable bit
  3796                           ;	LVP = 0x1, unprogrammed default
  3797   300007                     	org	3145735
  3798   300007  FF                 	db	255
  3799                           
  3800                           ;Config register CONFIG5L @ 0x300008
  3801                           ;	unspecified, using default values
  3802                           ;	UserNVM Program Memory Code Protection bit
  3803                           ;	CP = 0x1, unprogrammed default
  3804                           ;	DataNVM Memory Code Protection bit
  3805                           ;	CPD = 0x1, unprogrammed default
  3806   300008                     	org	3145736
  3807   300008  FF                 	db	255
  3808                           
  3809                           ;Config register CONFIG5H @ 0x300009
  3810                           ;	unspecified, using default values
  3811   300009                     	org	3145737
  3812   300009  FF                 	db	255
  3813                           
  3814                           ;Config register CONFIG6L @ 0x30000A
  3815                           ;	unspecified, using default values
  3816                           ;	Table Read Protection Block 0
  3817                           ;	EBTR0 = 0x1, unprogrammed default
  3818                           ;	Table Read Protection Block 1
  3819                           ;	EBTR1 = 0x1, unprogrammed default
  3820                           ;	Table Read Protection Block 2
  3821                           ;	EBTR2 = 0x1, unprogrammed default
  3822                           ;	Table Read Protection Block 3
  3823                           ;	EBTR3 = 0x1, unprogrammed default
  3824                           ;	Table Read Protection Block 4
  3825                           ;	EBTR4 = 0x1, unprogrammed default
  3826                           ;	Table Read Protection Block 5
  3827                           ;	EBTR5 = 0x1, unprogrammed default
  3828                           ;	Table Read Protection Block 6
  3829                           ;	EBTR6 = 0x1, unprogrammed default
  3830                           ;	Table Read Protection Block 7
  3831                           ;	EBTR7 = 0x1, unprogrammed default
  3832   30000A                     	org	3145738
  3833   30000A  FF                 	db	255
  3834                           
  3835                           ;Config register CONFIG6H @ 0x30000B
  3836                           ;	unspecified, using default values
  3837                           ;	Boot Block Table Read Protection bit
  3838                           ;	EBTRB = 0x1, unprogrammed default
  3839   30000B                     	org	3145739
  3840   30000B  FF                 	db	255
  3841                           tosu	equ	0xFFF
  3842                           tosh	equ	0xFFE
  3843                           tosl	equ	0xFFD
  3844                           stkptr	equ	0xFFC
  3845                           pclatu	equ	0xFFB
  3846                           pclath	equ	0xFFA
  3847                           pcl	equ	0xFF9
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           indf0	equ	0xFEF
  3855                           postinc0	equ	0xFEE
  3856                           postdec0	equ	0xFED
  3857                           preinc0	equ	0xFEC
  3858                           plusw0	equ	0xFEB
  3859                           fsr0h	equ	0xFEA
  3860                           fsr0l	equ	0xFE9
  3861                           wreg	equ	0xFE8
  3862                           indf1	equ	0xFE7
  3863                           postinc1	equ	0xFE6
  3864                           postdec1	equ	0xFE5
  3865                           preinc1	equ	0xFE4
  3866                           plusw1	equ	0xFE3
  3867                           fsr1h	equ	0xFE2
  3868                           fsr1l	equ	0xFE1
  3869                           bsr	equ	0xFE0
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           postdec2	equ	0xFDD
  3873                           preinc2	equ	0xFDC
  3874                           plusw2	equ	0xFDB
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        41
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160      0     147
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2660$buffer	PTR unsigned char  size(2) Largest target is 0

    S2660$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5191
                                             66 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3916
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     288
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     528
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      62        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 13:33:06 2024

                 _turn180Delay 00CE                 _color_read_Red 14C0                _color_read_Blue 15B0  
              _trail_timer_low 00B6                             l27 1764                             l61 1736  
                           l70 15FE                             l64 184A                             l73 155E  
                           l67 150E                             l76 15AE                             l79 14BE  
                 ___awdiv@sign 0006               _trail_timer_high 00DF               _color_read_Clear 1560  
             _color_read_Green 1510                            l152 13B0                            l250 17BA  
                          l253 17E0                            l262 18A0                            l406 1868  
                          l247 178E                            l415 186C                            l256 18AA  
                          l424 1412                            l265 188C                            l418 1880  
                          l259 1896                            l427 182A                            l268 16CE  
                          l642 1808                            l900 11B6                            l913 1320  
                          u500 187C                            u501 1878                            u360 17CA  
                          u361 17C6                            u370 17E0                            u371 17DC  
                          _ISR 0008                            u480 16B8                            u481 16B0  
                          u810 1106                            u811 1102                            u820 1120  
                          u900 12D6                            u821 111C                            u901 12D2  
                          u830 1146                            u910 12EC                            u831 1142  
                          u911 12E8                            u840 1164                            u920 1310  
                          u841 1160                            u921 130C                            u498 16BA  
                          u850 1180                            u930 11C8                            u851 117C  
                          u931 11C4                            u860 11A6                            u940 11D8  
                          u861 11A2                            u941 11D4                            u870 1284  
                          u950 11FE                            u871 1280                            u951 11FA  
                          u880 129E                            u960 1230                            u881 129A  
                          u961 122C                            u890 12B8                            u970 16DE  
                          u891 12B4                            u971 16DA                            _abs 16D0  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00CA  
                         ?_ISR 0001                           l2001 184C                           l2011 1866  
                         l2003 1856                           ?_abs 0007                           l2021 1800  
                         l2013 17E2                           l2005 1858                           l2023 1804  
                         l2015 17EA                           l2007 1862                           l2025 1806  
                         l2017 17EC                           l2009 1864                           l1402 1702  
                         l2019 17FE                           l2301 11A6                           l1414 1270  
                         l2303 11AE                           l2311 1284                           l2321 12B8  
                         l2313 128C                           l1425 18AC                           l2331 12F4  
                         l2323 12C0                           l2315 1290                           l2307 1272  
                         l1347 164A                           l1701 1884                           l2333 12FA  
                         l2325 12C8                           l2317 129E                           l2309 1276  
                         l2501 0FF0                           l1703 1888                           l1711 1892  
                         l2271 1112                           l2263 10F4                           l2327 12D6  
                         l2335 1300                           l2319 12A6                           l2351 11FE  
                         l2343 11B8                           l2503 0FF8                           l1633 17BA  
                         l1705 1898                           l1721 16CA                           l1713 1690  
                         l2281 1146                           l2273 1120                           l2265 10F8  
                         l2337 1310                           l2329 12EC                           l2353 1230  
                         l2345 11C8                           l2601 1642                           l1394 1460  
                         l1635 17CA                           l1707 189C                           l1723 16CC  
                         l1715 1694                           l2291 1180                           l2283 114E  
                         l2275 1128                           l2267 1106                           l2339 1318  
                         l2347 11D8                           l2451 0E3A                           l1395 1468  
                         l1388 0FAE                           l1717 169C                           l1709 188E  
                         l2293 1188                           l2285 1156                           l2277 112C  
                         l2269 110E                           l2357 16D0                           l2349 11E2  
                         l1389 1000                           l2461 0E7E                           l2453 0E42  
                         l2711 1722                           l1719 16A4                           l2295 118A  
                         l2287 1164                           l2279 1134                           l2359 16DE  
                         l1399 16EA                           l2471 0F08                           l2463 0E9E  
                         l2455 0E50                           l2447 0E0C                           l2551 1418  
                         l2713 172C                           l2705 1704                           l2561 1506  
                         l2721 1358                           l2297 1190                           l2289 116A  
                         l2481 0F5A                           l2473 0F24                           l2465 0EB6  
                         l2457 0E54                           l2449 0E14                           l2553 1426  
                         l2707 1708                           l2571 1510                           l2715 146A  
                         l2731 1396                           l2723 135C                           l1771 187C  
                         l2299 1196                           l2483 0F6A                           l2491 0F9C  
                         l2475 0F28                           l2467 0EC0                           l2459 0E5E  
                         l2555 1440                           l1941 1738                           l1781 1766  
                         l2557 182E                           l2709 1712                           l2565 15B0  
                         l2573 1556                           l2733 1398                           l2725 1380  
                         l2717 1322                           l2485 0F78                           l2477 0F3A  
                         l2469 0ED8                           l2493 0FBA                           l2549 1414  
                         l2821 101E                           l1791 177C                           l1783 1770  
                         l2567 15F6                           l2559 14C0                           l2735 13A2  
                         l2727 138A                           l2719 1332                           l2583 13B2  
                         l2495 0FC2                           l2487 0F80                           l2479 0F4A  
                         l2591 1600                           l2831 103E                           l2823 1022  
                         l2815 1002                           l1785 1776                           l1697 18A2  
                         l2577 1560                           l2737 13A4                           l2729 138C  
                         l1769 186C                           l2585 13B6                           l2489 0F9A  
                         l2593 160C                           l2841 105A                           l2833 1042  
                         l2825 1026                           l2817 101A                           l1787 1778  
                         l1699 18A6                           l2579 15A6                           l2739 13AE  
                         l2587 13DC                           l2499 0FCE                           l2595 1614  
                         l2763 180A                           l2851 107A                           l2843 1062  
                         l2835 1046                           l2827 102E                           l2819 101A  
                         l1789 177A                           l2589 13E0                           l2597 161C  
                         l2765 1820                           l2861 1086                           l2853 107E  
                         l2845 106E                           l2837 104A                           l2829 1036  
                         l2599 1634                           l2871 1098                           l2863 1088  
                         l2855 1080                           l2847 1072                           l2839 1052  
                         l2873 10A4                           l2865 108A                           l2857 1082  
                         l2849 1076                           l2875 10B2                           l2867 108E  
                         l2859 1084                           l2877 10D4                           l2869 1090  
                         STR_1 0E01                           STR_2 0E06                           u1200 0F4A  
                         u1201 0F46                           u1210 0F5A                           u1211 0F56  
                         u1220 0F6A                           u1140 0E3A                           u1221 0F66  
                         u1141 0E36                           u1230 0FAE                           u1150 0E7E  
                         u1231 0FAA                           u1151 0E7A                           u1160 0E9E  
                         u1240 1460                           u1161 0E9A                           u1241 145C  
                         u1250 13D8                           u1170 0ED4                           u1171 0ECE  
                         u1260 1402                           u1180 0ED6                           u1270 1412  
                         u1190 0F3A                           u1350 10B2                           u1271 140E  
                         u1191 0F36                           u1351 10AE                           u1360 10C4  
                 _BAUD4CONbits 0EE9                           u1257 13CE                           u1361 10BC  
                         u1267 13F8                           u1378 10C6                           _T2PR 0FBC  
                         u1907 100C                           u1917 10DE                           u1927 1718  
                         abs@a 0007                           _dbuf 0060                           _main 1002  
                         _prec 0098                           _nout 0094                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F                           start 0038  
       __end_of_color_read_Red 1510                   ___param_bank 0000                          ??_ISR 0001  
                        ??_abs 0009                 _sendIntSerial4 180A                          ?_main 0001  
           _timer_high_pointer 00DA                __end_of___awdiv 11B8                __end_of___awmod 1322  
              ___awdiv@divisor 0003                          i2l665 0030                          i2l666 0034  
              ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 1882  
   __end_of_I2C_2_Master_Start 18AC     __end_of_I2C_2_Master_Write 188E                    _turningGear 00DB  
                        _flags 009A                          _fputc 11B8                          _width 0096  
                        _putch 18AC              _turnRight135Delay 00D0                          tablat 0FF5  
              _turnLeft90Delay 00D6                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
              __end_of_sprintf 164C        __end_of_color_read_Blue 1600          _I2C_2_Master_RepStart 188E  
              ?_color_read_Red 0005                __initialization 164C                   __end_of_main 10F4  
       __end_of_sendIntSerial4 182C                         ??_main 0043                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2971 001A  
                       _RG6PPS 0E88                         i2l2973 002C                         i2l2969 000A  
                vfpfcnvrt@done 000F       __end_of_color_click_init 1738                         _RX4PPS 0E15  
                       _TX4REG 0EE4               _turnLeft135Delay 00D2                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001B                      ??___awdiv 0005  
                    ??___awmod 0005                ?_sendIntSerial4 0030                         clear_0 1672  
                       clear_1 167E               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       isa$std 0001                ___awmod@counter 0005                         fputc@c 0001  
            _timer_low_pointer 00D9                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 146A              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0021              _buggy_lights_init 1738                     __accesstop 0060  
      __end_of__initialization 1684       __end_of_color_read_Clear 15B0       __end_of_color_read_Green 1560  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 1790  
          ??_buggy_lights_init 0001                  __end_of_fputc 1272                  __end_of_putch 18AE  
          __end_of_Timer0_init 180A                        ??_fputc 0004      __end_of_buggy_lights_init 1766  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 146A              _color_writetoaddr 182C                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 184C  
           _I2C_2_Master_Start 18A2                     _initUSART4 184C             _I2C_2_Master_Write 1882  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 17E2        sendStringSerial4@string 0002                        ___awdiv 10F4  
                      ___awmod 1272            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0018                   __psmallconst 0E00                        __pcinit 164C  
                      __ramtop 0E00                        __ptext0 1002                        __ptext1 180A  
                      __ptext2 1600                        __ptext3 1414                        __ptext4 0E0C  
                      __ptext5 11B8                        __ptext6 18AC                        __ptext7 16D0  
                      __ptext8 1272                        __ptext9 10F4                      _T2CONbits 0FBD  
             ___awmod@dividend 0001                      _T2HLTbits 0FBE                  _RxBufWriteCnt 00A1  
                      _sprintf 1600           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 1684                    ?_getRGBCval 000C                        fputc@fp 0003  
            ?_color_click_init 0001             ??_color_click_init 0005               ??_sendIntSerial4 0032  
            __end_of_vfpfcnvrt 1002                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0013                     ??_vfprintf 001B                     _returnFlag 009C  
              _initDCmotorsPWM 1322           sendIntSerial4@string 0032                      _PORTFbits 0F8E  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0080  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 004D                     main@motorR 0056  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0012                    vfpfcnvrt@fp 000B            color_read_Clear@tmp 000A  
          start_initialization 164C                    __end_of_ISR 0038                    __end_of_abs 1704  
                _TxBufWriteCnt 009F               _turnRight90Delay 00D4            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 13B2                    vfprintf@fmt 0019                    __pdataBANK0 00CA  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___awdiv 0001  
                     ?___awmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 17BA              _I2C_2_Master_Init 1766  
            _I2C_2_Master_Read 168E              _I2C_2_Master_Stop 1898                   _RxBufReadCnt 00A0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                  _headbuttDelay 00CC       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 001C                      _rampDelay 00DE                   ??_getRGBCval 000D  
            _sendStringSerial4 13B2            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 0F7B                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E                       _LATGbits 0F7F                       _LATHbits 0F80  
                     _PIE0bits 0E29             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                     i2u150_40 002C                       i2u150_41 0028                       i2u149_40 001A  
                     i2u149_41 0016                       _PIR0bits 0E33                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 009D  
                    _vfpfcnvrt 0E0C      __end_of_I2C_2_Master_Idle 17E2      __end_of_I2C_2_Master_Init 1790  
    __end_of_I2C_2_Master_Read 16D0      __end_of_I2C_2_Master_Stop 18A2    I2C_2_Master_Write@data_byte 0002  
           __end_of_getRGBCval 14C0              ??_color_read_Blue 0007                   _TxBufReadCnt 009E  
                   vfpfcnvrt@c 0017                      copy_data0 1660      __end_of_sendStringSerial4 1414  
__end_of_I2C_2_Master_RepStart 1898             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 001A                       __Lrparam 0000  
                   vfprintf@fp 0018                     ?_vfpfcnvrt 000B                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                     sprintf@fmt 001E                     sprintf@ret 0021  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6             __end_of_initUSART4 186A  
                     __ptext10 13B2                       __ptext11 186A                       __ptext20 168E  
                     __ptext12 184C                       __ptext21 1704                       __ptext13 1322  
                     __ptext22 182C                       __ptext14 146A                       __ptext23 1882  
                     __ptext15 14C0                       __ptext24 1898                       __ptext16 1510  
                     __ptext25 18A2                       __ptext17 1560                       __ptext26 17BA  
                     __ptext18 15B0                       __ptext27 1766                       __ptext19 188E  
                     __ptext28 1738                       __ptext29 17E2                    getRGBCval@p 000C  
          main@measured_colour 0045                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005F  
                     _vfprintf 1414                     _INTCONbits 0FF2                       intlevel2 0000  
                    sprintf@ap 0023                   _topGearRight 00DC              _manoeuvre_pointer 00D8  
                  ??_vfpfcnvrt 000E               _color_click_init 1704          sendIntSerial4@integer 0030  
                  _topGearLeft 00DD                       sprintf@f 0024                       sprintf@s 001C  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                _trail_manoeuvre 00A2  
              _manoeuvre_count 009B                     _TX4STAbits 0EE8                _sendCharSerial4 186A  
