

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Feb 28 14:07:30 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Generated 18/08/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F67K40 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   001636                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _turnLeft90Delay
    82   001636  00AF               	dw	175
    83                           
    84                           ;initializer for _turningGear
    85   001638  2A                 	db	42
    86                           
    87                           ;initializer for _topGearRight
    88   001639  20                 	db	32
    89                           
    90                           ;initializer for _topGearLeft
    91   00163A  1E                 	db	30
    92                           
    93                           ;initializer for _rampDelay
    94   00163B  08                 	db	8
    95                           
    96                           	psect	idataBANK0
    97   00160A                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _squareDelay
   101   00160A  012C               	dw	300
   102                           
   103                           ;initializer for _headbuttDelay
   104   00160C  0046               	dw	70
   105                           
   106                           ;initializer for _turn180Delay
   107   00160E  01FE               	dw	510
   108                           
   109                           ;initializer for _turnRight135Delay
   110   001610  012C               	dw	300
   111                           
   112                           ;initializer for _turnLeft135Delay
   113   001612  012C               	dw	300
   114                           
   115                           ;initializer for _turnRight90Delay
   116   001614  00AF               	dw	175
   117   000000                     _TX4REG	set	3812
   118   000000                     _RC4STAbits	set	3815
   119   000000                     _SP4BRGH	set	3814
   120   000000                     _LATEbits	set	3965
   121   000000                     _TRISEbits	set	3973
   122   000000                     _LATGbits	set	3967
   123   000000                     _TRISGbits	set	3975
   124   000000                     _LATFbits	set	3966
   125   000000                     _LATHbits	set	3968
   126   000000                     _TRISFbits	set	3974
   127   000000                     _TRISHbits	set	3976
   128   000000                     _SSP2CON2bits	set	3802
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _RC7PPS	set	3689
   133   000000                     _RE2PPS	set	3700
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATDbits	set	3964
   136   000000                     _TRISDbits	set	3972
   137   000000                     _T2PR	set	4028
   138   000000                     _T2CONbits	set	4029
   139   000000                     _CCPR2H	set	4006
   140   000000                     _CCPR1H	set	4010
   141   000000                     _TRISCbits	set	3971
   142   000000                     _TRISAbits	set	3969
   143   000000                     _LATCbits	set	3963
   144   000000                     _RE4PPS	set	3702
   145   000000                     _RG6PPS	set	3720
   146   000000                     _RD5PPS	set	3695
   147   000000                     _ANSELDbits	set	3751
   148   000000                     _SSP2ADD	set	3798
   149   000000                     _SSP2CON1bits	set	3801
   150   000000                     _CCPR4H	set	3873
   151   000000                     _CCPR3H	set	3877
   152   000000                     _T2CLKCONbits	set	4031
   153   000000                     _T2HLTbits	set	4030
   154   000000                     _CCP1CONbits	set	4011
   155   000000                     _CCPTMRS0bits	set	4013
   156   000000                     _CCP2CONbits	set	4007
   157   000000                     _CCP3CONbits	set	3878
   158   000000                     _CCP4CONbits	set	3874
   159   000000                     _RC4REG	set	3811
   160   000000                     _SP4BRGL	set	3813
   161   000000                     _TX4STAbits	set	3816
   162   000000                     _BAUD4CONbits	set	3817
   163   000000                     _SSP2CON2	set	3802
   164   000000                     _SSP2STAT	set	3800
   165   000000                     _SSP2BUF	set	3797
   166   000000                     _PIE4bits	set	3629
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169   000000                     _RD6PPS	set	3696
   170                           
   171                           	psect	smallconst
   172   000E00                     __psmallconst:
   173                           	callstack 0
   174   000E00  00                 	db	0
   175   000E01                     STR_1:
   176   000E01  25                 	db	37
   177   000E02  64                 	db	100	;'d'
   178   000E03  20                 	db	32
   179   000E04  0D                 	db	13
   180   000E05  00                 	db	0
   181   000E06  00                 	db	0	; dummy byte at the end
   182   000000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   0013B6                     __pcinit:
   187                           	callstack 0
   188   0013B6                     start_initialization:
   189                           	callstack 0
   190   0013B6                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (12 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195   0013B6  0E0A               	movlw	low __pidataBANK0
   196   0013B8  6EF6               	movwf	tblptrl,c
   197   0013BA  0E16               	movlw	high __pidataBANK0
   198   0013BC  6EF7               	movwf	tblptrh,c
   199   0013BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200   0013C0  6EF8               	movwf	tblptru,c
   201   0013C2  EE00  F0D4         	lfsr	0,__pdataBANK0
   202   0013C6  EE10 F00C          	lfsr	1,12
   203   0013CA                     copy_data0:
   204   0013CA  0009               	tblrd		*+
   205   0013CC  CFF5 FFEE          	movff	tablat,postinc0
   206   0013D0  50E5               	movf	postdec1,w,c
   207   0013D2  50E1               	movf	fsr1l,w,c
   208   0013D4  E1FA               	bnz	copy_data0
   209                           
   210                           ; Initialize objects allocated to COMRAM (6 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212   0013D6  0E36               	movlw	low __pidataCOMRAM
   213   0013D8  6EF6               	movwf	tblptrl,c
   214   0013DA  0E16               	movlw	high __pidataCOMRAM
   215   0013DC  6EF7               	movwf	tblptrh,c
   216   0013DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217   0013E0  6EF8               	movwf	tblptru,c
   218   0013E2  EE00  F054         	lfsr	0,__pdataCOMRAM
   219   0013E6  EE10 F006          	lfsr	1,6
   220   0013EA                     copy_data1:
   221   0013EA  0009               	tblrd		*+
   222   0013EC  CFF5 FFEE          	movff	tablat,postinc0
   223   0013F0  50E5               	movf	postdec1,w,c
   224   0013F2  50E1               	movf	fsr1l,w,c
   225   0013F4  E1FA               	bnz	copy_data1
   226                           
   227                           ; Clear objects allocated to BANK0 (116 bytes)
   228   0013F6  EE00  F060         	lfsr	0,__pbssBANK0
   229   0013FA  0E74               	movlw	116
   230   0013FC                     clear_0:
   231   0013FC  6AEE               	clrf	postinc0,c
   232   0013FE  06E8               	decf	wreg,f,c
   233   001400  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to COMRAM (5 bytes)
   236   001402  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   237   001404  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   238   001406  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   239   001408  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   240   00140A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   241   00140C                     end_of_initialization:
   242                           	callstack 0
   243   00140C                     __end_of__initialization:
   244                           	callstack 0
   245   00140C  0100               	movlb	0
   246   00140E  EFF8  F008         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMRAM
   249   00005A                     __pbssCOMRAM:
   250                           	callstack 0
   251   00005A                     _flags:
   252                           	callstack 0
   253   00005A                     	ds	1
   254   00005B                     _TxBufReadCnt:
   255                           	callstack 0
   256   00005B                     	ds	1
   257   00005C                     _TxBufWriteCnt:
   258                           	callstack 0
   259   00005C                     	ds	1
   260   00005D                     _RxBufReadCnt:
   261                           	callstack 0
   262   00005D                     	ds	1
   263   00005E                     _RxBufWriteCnt:
   264                           	callstack 0
   265   00005E                     	ds	1
   266                           
   267                           	psect	dataCOMRAM
   268   000054                     __pdataCOMRAM:
   269                           	callstack 0
   270   000054                     _turnLeft90Delay:
   271                           	callstack 0
   272   000054                     	ds	2
   273   000056                     _turningGear:
   274                           	callstack 0
   275   000056                     	ds	1
   276   000057                     _topGearRight:
   277                           	callstack 0
   278   000057                     	ds	1
   279   000058                     _topGearLeft:
   280                           	callstack 0
   281   000058                     	ds	1
   282   000059                     _rampDelay:
   283                           	callstack 0
   284   000059                     	ds	1
   285                           
   286                           	psect	bssBANK0
   287   000060                     __pbssBANK0:
   288                           	callstack 0
   289   000060                     _EUSART4TXbuf:
   290                           	callstack 0
   291   000060                     	ds	60
   292   00009C                     _dbuf:
   293                           	callstack 0
   294   00009C                     	ds	32
   295   0000BC                     _EUSART4RXbuf:
   296                           	callstack 0
   297   0000BC                     	ds	20
   298   0000D0                     _width:
   299                           	callstack 0
   300   0000D0                     	ds	2
   301   0000D2                     _prec:
   302                           	callstack 0
   303   0000D2                     	ds	2
   304                           
   305                           	psect	dataBANK0
   306   0000D4                     __pdataBANK0:
   307                           	callstack 0
   308   0000D4                     _squareDelay:
   309                           	callstack 0
   310   0000D4                     	ds	2
   311   0000D6                     _headbuttDelay:
   312                           	callstack 0
   313   0000D6                     	ds	2
   314   0000D8                     _turn180Delay:
   315                           	callstack 0
   316   0000D8                     	ds	2
   317   0000DA                     _turnRight135Delay:
   318                           	callstack 0
   319   0000DA                     	ds	2
   320   0000DC                     _turnLeft135Delay:
   321                           	callstack 0
   322   0000DC                     	ds	2
   323   0000DE                     _turnRight90Delay:
   324                           	callstack 0
   325   0000DE                     	ds	2
   326                           
   327                           	psect	cstackCOMRAM
   328   000001                     __pcstackCOMRAM:
   329                           	callstack 0
   330   000001                     ??_lights_flashing:
   331   000001                     ??_I2C_2_Master_Idle:
   332   000001                     ?___awdiv:
   333                           	callstack 0
   334   000001                     ?___awmod:
   335                           	callstack 0
   336   000001                     sendCharSerial4@charToSend:
   337                           	callstack 0
   338   000001                     initDCmotorsPWM@PWMperiod:
   339                           	callstack 0
   340   000001                     ___awdiv@dividend:
   341                           	callstack 0
   342   000001                     ___awmod@dividend:
   343                           	callstack 0
   344   000001                     fputc@c:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x0
   348   000001                     	ds	1
   349   000002                     I2C_2_Master_Write@data_byte:
   350                           	callstack 0
   351   000002                     sendStringSerial4@string:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x1
   355   000002                     	ds	1
   356   000003                     color_writetoaddr@value:
   357                           	callstack 0
   358   000003                     fputc@fp:
   359                           	callstack 0
   360   000003                     ___awdiv@divisor:
   361                           	callstack 0
   362   000003                     ___awmod@divisor:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x2
   366   000003                     	ds	1
   367   000004                     ??_fputc:
   368   000004                     color_writetoaddr@address:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x3
   372   000004                     	ds	1
   373   000005                     ??_color_click_init:
   374   000005                     ___awdiv@counter:
   375                           	callstack 0
   376   000005                     ___awmod@counter:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x4
   380   000005                     	ds	1
   381   000006                     ___awdiv@sign:
   382                           	callstack 0
   383   000006                     ___awmod@sign:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x5
   387   000006                     	ds	1
   388   000007                     ?_abs:
   389                           	callstack 0
   390   000007                     ___awdiv@quotient:
   391                           	callstack 0
   392   000007                     abs@a:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x6
   396   000007                     	ds	2
   397   000009                     ??_abs:
   398                           
   399                           ; 1 bytes @ 0x8
   400   000009                     	ds	2
   401   00000B                     vfpfcnvrt@fp:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xA
   405   00000B                     	ds	1
   406   00000C                     vfpfcnvrt@fmt:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0xB
   410   00000C                     	ds	1
   411   00000D                     vfpfcnvrt@ap:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xC
   415   00000D                     	ds	1
   416   00000E                     ??_vfpfcnvrt:
   417                           
   418                           ; 1 bytes @ 0xD
   419   00000E                     	ds	1
   420   00000F                     vfpfcnvrt@done:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xE
   424   00000F                     	ds	1
   425   000010                     vfpfcnvrt@cp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xF
   429   000010                     	ds	1
   430   000011                     vfpfcnvrt@convarg:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x10
   434   000011                     	ds	4
   435   000015                     vfpfcnvrt@c:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x14
   439   000015                     	ds	1
   440   000016                     ?_vfprintf:
   441                           	callstack 0
   442   000016                     vfprintf@fp:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x15
   446   000016                     	ds	1
   447   000017                     vfprintf@fmt:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x16
   451   000017                     	ds	1
   452   000018                     vfprintf@ap:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x17
   456   000018                     	ds	1
   457   000019                     vfprintf@cfmt:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x18
   461   000019                     	ds	1
   462   00001A                     ?_sprintf:
   463                           	callstack 0
   464   00001A                     sprintf@s:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x19
   468   00001A                     	ds	1
   469   00001B                     sprintf@fmt:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x1A
   473   00001B                     	ds	3
   474   00001E                     sprintf@ap:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x1D
   478   00001E                     	ds	1
   479   00001F                     sprintf@f:
   480                           	callstack 0
   481                           
   482                           ; 12 bytes @ 0x1E
   483   00001F                     	ds	12
   484   00002B                     sendIntSerial4@integer:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x2A
   488   00002B                     	ds	2
   489   00002D                     sendIntSerial4@string:
   490                           	callstack 0
   491                           
   492                           ; 17 bytes @ 0x2C
   493   00002D                     	ds	17
   494   00003E                     ??_main:
   495                           
   496                           ; 1 bytes @ 0x3D
   497   00003E                     	ds	2
   498   000040                     main@count:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x3F
   502   000040                     	ds	2
   503   000042                     main@motorL:
   504                           	callstack 0
   505                           
   506                           ; 9 bytes @ 0x41
   507   000042                     	ds	9
   508   00004B                     main@motorR:
   509                           	callstack 0
   510                           
   511                           ; 9 bytes @ 0x4A
   512   00004B                     	ds	9
   513                           
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 25 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  motorR          9   74[COMRAM] struct DC_motor
   524 ;;  motorL          9   65[COMRAM] struct DC_motor
   525 ;;  PWMcycle        2    0        unsigned int 
   526 ;;  count           2   63[COMRAM] int 
   527 ;;  backtrack       1    0        unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   538 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   541 ;;Total ram usage:       22 bytes
   542 ;; Hardware stack levels required when called: 6
   543 ;; This function calls:
   544 ;;		_buggy_lights_init
   545 ;;		_color_click_init
   546 ;;		_initDCmotorsPWM
   547 ;;		_initUSART4
   548 ;;		_lights_flashing
   549 ;;		_sendIntSerial4
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556   0011F0                     __ptext0:
   557                           	callstack 0
   558   0011F0                     _main:
   559                           	callstack 25
   560   0011F0                     
   561                           ;main.c: 26:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   562   0011F0  0E52               	movlw	82
   563   0011F2  6E3F               	movwf	(??_main+1)^0,c
   564   0011F4  0E2B               	movlw	43
   565   0011F6  6E3E               	movwf	??_main^0,c
   566   0011F8  0E00               	movlw	0
   567   0011FA                     u1697:
   568   0011FA  2EE8               	decfsz	wreg,f,c
   569   0011FC  D7FE               	bra	u1697
   570   0011FE  2E3E               	decfsz	??_main^0,f,c
   571   001200  D7FC               	bra	u1697
   572   001202  2E3F               	decfsz	(??_main+1)^0,f,c
   573   001204  D7FA               	bra	u1697
   574   001206  D000               	nop2	
   575   001208                     
   576                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
   577   001208  0E00               	movlw	0
   578   00120A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   579   00120C  0E63               	movlw	99
   580   00120E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   581   001210  EC93  F009         	call	_initDCmotorsPWM	;wreg free
   582   001214                     
   583                           ;main.c: 31:     struct DC_motor motorL, motorR;;main.c: 33:     motorL.power = 0;
   584   001214  0E00               	movlw	0
   585   001216  6E42               	movwf	main@motorL^0,c
   586   001218                     
   587                           ;main.c: 34:     motorL.direction = 1;
   588   001218  0E01               	movlw	1
   589   00121A  6E43               	movwf	(main@motorL+1)^0,c
   590   00121C                     
   591                           ;main.c: 35:     motorL.brakemode = 1;
   592   00121C  0E01               	movlw	1
   593   00121E  6E44               	movwf	(main@motorL+2)^0,c
   594   001220                     
   595                           ;main.c: 36:     motorL.PWMperiod = PWMcycle;
   596   001220  0E00               	movlw	0
   597   001222  6E46               	movwf	(main@motorL+4)^0,c
   598   001224  0E63               	movlw	99
   599   001226  6E45               	movwf	(main@motorL+3)^0,c
   600   001228                     
   601                           ;main.c: 37:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   602   001228  0EAA               	movlw	170
   603   00122A  6E47               	movwf	(main@motorL+5)^0,c
   604   00122C  0E0F               	movlw	15
   605   00122E  6E48               	movwf	(main@motorL+6)^0,c
   606   001230                     
   607                           ;main.c: 38:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   608   001230  0EA6               	movlw	166
   609   001232  6E49               	movwf	(main@motorL+7)^0,c
   610   001234  0E0F               	movlw	15
   611   001236  6E4A               	movwf	(main@motorL+8)^0,c
   612   001238                     
   613                           ;main.c: 40:     motorR.power = 0;
   614   001238  0E00               	movlw	0
   615   00123A  6E4B               	movwf	main@motorR^0,c
   616   00123C                     
   617                           ;main.c: 41:     motorR.direction = 1;
   618   00123C  0E01               	movlw	1
   619   00123E  6E4C               	movwf	(main@motorR+1)^0,c
   620   001240                     
   621                           ;main.c: 42:     motorR.brakemode = 1;
   622   001240  0E01               	movlw	1
   623   001242  6E4D               	movwf	(main@motorR+2)^0,c
   624   001244                     
   625                           ;main.c: 43:     motorR.PWMperiod = PWMcycle;
   626   001244  0E00               	movlw	0
   627   001246  6E4F               	movwf	(main@motorR+4)^0,c
   628   001248  0E63               	movlw	99
   629   00124A  6E4E               	movwf	(main@motorR+3)^0,c
   630   00124C                     
   631                           ;main.c: 44:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   632   00124C  0E25               	movlw	37
   633   00124E  6E50               	movwf	(main@motorR+5)^0,c
   634   001250  0E0F               	movlw	15
   635   001252  6E51               	movwf	(main@motorR+6)^0,c
   636   001254                     
   637                           ;main.c: 45:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   638   001254  0E21               	movlw	33
   639   001256  6E52               	movwf	(main@motorR+7)^0,c
   640   001258  0E0F               	movlw	15
   641   00125A  6E53               	movwf	(main@motorR+8)^0,c
   642   00125C                     
   643                           ;main.c: 47:     buggy_lights_init();
   644   00125C  ECA2  F00A         	call	_buggy_lights_init	;wreg free
   645   001260                     
   646                           ;main.c: 48:     color_click_init();
   647   001260  EC5E  F00A         	call	_color_click_init	;wreg free
   648   001264                     
   649                           ;main.c: 49:     initUSART4();
   650   001264  ECEA  F00A         	call	_initUSART4	;wreg free
   651   001268                     
   652                           ;main.c: 62:     int count = 0;
   653   001268  0E00               	movlw	0
   654   00126A  6E41               	movwf	(main@count+1)^0,c
   655   00126C  0E00               	movlw	0
   656   00126E  6E40               	movwf	main@count^0,c
   657   001270                     l2399:
   658                           
   659                           ;main.c: 65:         lights_flashing();
   660   001270  EC46  F009         	call	_lights_flashing	;wreg free
   661   001274                     
   662                           ;main.c: 66:         sendIntSerial4(count);
   663   001274  C040  F02B         	movff	main@count,sendIntSerial4@integer
   664   001278  C041  F02C         	movff	main@count+1,sendIntSerial4@integer+1
   665   00127C  ECDB  F00A         	call	_sendIntSerial4	;wreg free
   666   001280                     
   667                           ;main.c: 67:         count++;
   668   001280  4A40               	infsnz	main@count^0,f,c
   669   001282  2A41               	incf	(main@count+1)^0,f,c
   670   001284  EF38  F009         	goto	l2399
   671   001288  EF00  F000         	goto	start
   672   00128C                     __end_of_main:
   673                           	callstack 0
   674                           
   675 ;; *************** function _sendIntSerial4 *****************
   676 ;; Defined at:
   677 ;;		line 44 in file "serial.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  integer         2   42[COMRAM] int 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  string         17   44[COMRAM] unsigned char [17]
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   692 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   694 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   695 ;;Total ram usage:       19 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 5
   698 ;; This function calls:
   699 ;;		_sendStringSerial4
   700 ;;		_sprintf
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text1
   707   0015B6                     __ptext1:
   708                           	callstack 0
   709   0015B6                     _sendIntSerial4:
   710                           	callstack 25
   711   0015B6                     
   712                           ;serial.c: 45:     char string[sizeof(int) * 8 + 1];;serial.c: 46:     sprintf(string, "
      +                          %d \r", integer);
   713   0015B6  0E2D               	movlw	low sendIntSerial4@string
   714   0015B8  6E1A               	movwf	sprintf@s^0,c
   715   0015BA  0E01               	movlw	low STR_1
   716   0015BC  6E1B               	movwf	sprintf@fmt^0,c
   717   0015BE  C02B  F01C         	movff	sendIntSerial4@integer,?_sprintf+2
   718   0015C2  C02C  F01D         	movff	sendIntSerial4@integer+1,?_sprintf+3
   719   0015C6  EC2A  F00A         	call	_sprintf	;wreg free
   720   0015CA                     
   721                           ;serial.c: 47:     sendStringSerial4(string);
   722   0015CA  0E2D               	movlw	low sendIntSerial4@string
   723   0015CC  6E02               	movwf	sendStringSerial4@string^0,c
   724   0015CE  EC78  F00A         	call	_sendStringSerial4	;wreg free
   725   0015D2  0012               	return		;funcret
   726   0015D4                     __end_of_sendIntSerial4:
   727                           	callstack 0
   728                           
   729 ;; *************** function _sprintf *****************
   730 ;; Defined at:
   731 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  s               1   25[COMRAM] PTR unsigned char 
   734 ;;		 -> sendIntSerial4@string(17), 
   735 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   736 ;;		 -> STR_1(5), 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  f              12   30[COMRAM] struct _IO_FILE
   739 ;;  ret             2    0        int 
   740 ;;  ap              1   29[COMRAM] PTR void [1]
   741 ;;		 -> ?_sprintf(2), 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  2   25[COMRAM] int 
   744 ;; Registers used:
   745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;Total ram usage:       17 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 4
   758 ;; This function calls:
   759 ;;		_vfprintf
   760 ;; This function is called by:
   761 ;;		_sendIntSerial4
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text2
   766   001454                     __ptext2:
   767                           	callstack 0
   768   001454                     _sprintf:
   769                           	callstack 25
   770   001454  0E1C               	movlw	low (?_sprintf+2)
   771   001456  6E1E               	movwf	sprintf@ap^0,c
   772   001458  C01A  F01F         	movff	sprintf@s,sprintf@f
   773   00145C  0E00               	movlw	0
   774   00145E  6E23               	movwf	(sprintf@f+4)^0,c
   775   001460  0E00               	movlw	0
   776   001462  6E22               	movwf	(sprintf@f+3)^0,c
   777   001464  0E00               	movlw	0
   778   001466  6E2A               	movwf	(sprintf@f+11)^0,c
   779   001468  0E00               	movlw	0
   780   00146A  6E29               	movwf	(sprintf@f+10)^0,c
   781   00146C  0E1F               	movlw	low sprintf@f
   782   00146E  6E16               	movwf	vfprintf@fp^0,c
   783   001470  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   784   001474  0E1E               	movlw	low sprintf@ap
   785   001476  6E18               	movwf	vfprintf@ap^0,c
   786   001478  EC09  F00A         	call	_vfprintf	;wreg free
   787   00147C  501A               	movf	sprintf@s^0,w,c
   788   00147E  2422               	addwf	(sprintf@f+3)^0,w,c
   789   001480  6ED9               	movwf	fsr2l,c
   790   001482  6ADA               	clrf	fsr2h,c
   791   001484  6ADF               	clrf	indf2,c
   792   001486  0012               	return		;funcret
   793   001488                     __end_of_sprintf:
   794                           	callstack 0
   795                           
   796 ;; *************** function _vfprintf *****************
   797 ;; Defined at:
   798 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
   801 ;;		 -> sprintf@f(12), 
   802 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   803 ;;		 -> STR_1(5), 
   804 ;;  ap              1   23[COMRAM] PTR PTR void 
   805 ;;		 -> sprintf@ap(1), 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   808 ;;		 -> STR_1(5), 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2   21[COMRAM] int 
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   818 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   822 ;;Total ram usage:        4 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 3
   825 ;; This function calls:
   826 ;;		_vfpfcnvrt
   827 ;; This function is called by:
   828 ;;		_sprintf
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text3
   833   001412                     __ptext3:
   834                           	callstack 0
   835   001412                     _vfprintf:
   836                           	callstack 25
   837   001412                     
   838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   839   001412  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
   840                           
   841                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   842   001416  EF15  F00A         	goto	l2135
   843   00141A                     l2133:
   844                           
   845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   846   00141A  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
   847   00141E  0E19               	movlw	low vfprintf@cfmt
   848   001420  6E0C               	movwf	vfpfcnvrt@fmt^0,c
   849   001422  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
   850   001426  EC04  F007         	call	_vfpfcnvrt	;wreg free
   851   00142A                     l2135:
   852                           
   853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   854   00142A  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
   855   00142E                     	if	1	;There is more than 1 active tblptr byte
   856   00142E  0E0E               	movlw	high __smallconst
   857   001430  6EF7               	movwf	tblptrh,c
   858   001432                     	endif
   859   001432                     	if	0	;tblptru may be non-zero
   860   001432                     	endif
   861   001432                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   862   001432  0E00               	movlw	low (__smallconst shr (0+16))
   863   001434  6EF8               	movwf	tblptru,c
   864   001436                     	endif
   865   001436  0008               	tblrd		*
   866   001438  50F5               	movf	tablat,w,c
   867   00143A  0900               	iorlw	0
   868   00143C  A4D8               	btfss	status,2,c
   869   00143E  EF23  F00A         	goto	u1031
   870   001442  EF25  F00A         	goto	u1030
   871   001446                     u1031:
   872   001446  EF0D  F00A         	goto	l2133
   873   00144A                     u1030:
   874   00144A                     
   875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   876   00144A  0E00               	movlw	0
   877   00144C  6E17               	movwf	(?_vfprintf+1)^0,c
   878   00144E  0E00               	movlw	0
   879   001450  6E16               	movwf	?_vfprintf^0,c
   880   001452  0012               	return		;funcret
   881   001454                     __end_of_vfprintf:
   882                           	callstack 0
   883                           
   884 ;; *************** function _vfpfcnvrt *****************
   885 ;; Defined at:
   886 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
   889 ;;		 -> sprintf@f(12), 
   890 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
   891 ;;		 -> vfprintf@cfmt(1), 
   892 ;;  ap              1   12[COMRAM] PTR PTR void 
   893 ;;		 -> sprintf@ap(1), 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  convarg         4   16[COMRAM] struct .
   896 ;;  c               1   20[COMRAM] unsigned char 
   897 ;;  cp              1   15[COMRAM] PTR unsigned char 
   898 ;;		 -> STR_1(5), 
   899 ;;  done            1   14[COMRAM] _Bool 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;Total ram usage:       11 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 2
   916 ;; This function calls:
   917 ;;		___awdiv
   918 ;;		___awmod
   919 ;;		_abs
   920 ;;		_fputc
   921 ;; This function is called by:
   922 ;;		_vfprintf
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text4
   927   000E08                     __ptext4:
   928                           	callstack 0
   929   000E08                     _vfpfcnvrt:
   930                           	callstack 25
   931   000E08                     
   932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   933   000E08  500C               	movf	vfpfcnvrt@fmt^0,w,c
   934   000E0A  6ED9               	movwf	fsr2l,c
   935   000E0C  6ADA               	clrf	fsr2h,c
   936   000E0E  CFDF FFF6          	movff	indf2,tblptrl
   937   000E12                     	if	1	;There is more than 1 active tblptr byte
   938   000E12  0E0E               	movlw	high __smallconst
   939   000E14  6EF7               	movwf	tblptrh,c
   940   000E16                     	endif
   941   000E16                     	if	0	;tblptru may be non-zero
   942   000E16                     	endif
   943   000E16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   944   000E16  0E00               	movlw	low (__smallconst shr (0+16))
   945   000E18  6EF8               	movwf	tblptru,c
   946   000E1A                     	endif
   947   000E1A  0008               	tblrd		*
   948   000E1C  50F5               	movf	tablat,w,c
   949   000E1E  0A25               	xorlw	37
   950   000E20  A4D8               	btfss	status,2,c
   951   000E22  EF15  F007         	goto	u911
   952   000E26  EF17  F007         	goto	u910
   953   000E2A                     u911:
   954   000E2A  EFD5  F007         	goto	l2109
   955   000E2E                     u910:
   956   000E2E                     
   957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   958   000E2E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   959   000E30  6ED9               	movwf	fsr2l,c
   960   000E32  6ADA               	clrf	fsr2h,c
   961   000E34  2ADF               	incf	indf2,f,c
   962   000E36                     
   963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   964   000E36  0E00               	movlw	0
   965   000E38  0100               	movlb	0	; () banked
   966   000E3A  6FD1               	movwf	(_width+1)& (0+255),b
   967   000E3C  0E00               	movlw	0
   968   000E3E  6FD0               	movwf	_width& (0+255),b
   969   000E40  C0D0  F05A         	movff	_width,_flags
   970   000E44                     
   971                           ; BSR set to: 0
   972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   973   000E44  69D2               	setf	_prec& (0+255),b
   974   000E46  69D3               	setf	(_prec+1)& (0+255),b
   975   000E48                     
   976                           ; BSR set to: 0
   977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   978   000E48  500C               	movf	vfpfcnvrt@fmt^0,w,c
   979   000E4A  6ED9               	movwf	fsr2l,c
   980   000E4C  6ADA               	clrf	fsr2h,c
   981   000E4E  50DF               	movf	indf2,w,c
   982   000E50  6E10               	movwf	vfpfcnvrt@cp^0,c
   983   000E52                     
   984                           ; BSR set to: 0
   985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   986   000E52  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   987   000E56                     	if	1	;There is more than 1 active tblptr byte
   988   000E56  0E0E               	movlw	high __smallconst
   989   000E58  6EF7               	movwf	tblptrh,c
   990   000E5A                     	endif
   991   000E5A                     	if	0	;tblptru may be non-zero
   992   000E5A                     	endif
   993   000E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   994   000E5A  0E00               	movlw	low (__smallconst shr (0+16))
   995   000E5C  6EF8               	movwf	tblptru,c
   996   000E5E                     	endif
   997   000E5E  0008               	tblrd		*
   998   000E60  50F5               	movf	tablat,w,c
   999   000E62  0A64               	xorlw	100
  1000   000E64  B4D8               	btfsc	status,2,c
  1001   000E66  EF37  F007         	goto	u921
  1002   000E6A  EF39  F007         	goto	u920
  1003   000E6E                     u921:
  1004   000E6E  EF49  F007         	goto	l2079
  1005   000E72                     u920:
  1006   000E72                     
  1007                           ; BSR set to: 0
  1008   000E72  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1009   000E76                     	if	1	;There is more than 1 active tblptr byte
  1010   000E76  0E0E               	movlw	high __smallconst
  1011   000E78  6EF7               	movwf	tblptrh,c
  1012   000E7A                     	endif
  1013   000E7A                     	if	0	;tblptru may be non-zero
  1014   000E7A                     	endif
  1015   000E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1016   000E7A  0E00               	movlw	low (__smallconst shr (0+16))
  1017   000E7C  6EF8               	movwf	tblptru,c
  1018   000E7E                     	endif
  1019   000E7E  0008               	tblrd		*
  1020   000E80  50F5               	movf	tablat,w,c
  1021   000E82  0A69               	xorlw	105
  1022   000E84  A4D8               	btfss	status,2,c
  1023   000E86  EF47  F007         	goto	u931
  1024   000E8A  EF49  F007         	goto	u930
  1025   000E8E                     u931:
  1026   000E8E  EFCF  F007         	goto	l2105
  1027   000E92                     u930:
  1028   000E92                     l2079:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1032   000E92  500D               	movf	vfpfcnvrt@ap^0,w,c
  1033   000E94  6ED9               	movwf	fsr2l,c
  1034   000E96  6ADA               	clrf	fsr2h,c
  1035   000E98  0E02               	movlw	2
  1036   000E9A  26DF               	addwf	indf2,f,c
  1037   000E9C  5CDF               	subwf	indf2,w,c
  1038   000E9E  6ED9               	movwf	fsr2l,c
  1039   000EA0  6ADA               	clrf	fsr2h,c
  1040   000EA2  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1041   000EA6  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1042   000EAA                     
  1043                           ; BSR set to: 0
  1044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1045   000EAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1046   000EAC  6ED9               	movwf	fsr2l,c
  1047   000EAE  6ADA               	clrf	fsr2h,c
  1048   000EB0  2810               	incf	vfpfcnvrt@cp^0,w,c
  1049   000EB2  6EDF               	movwf	indf2,c
  1050   000EB4                     
  1051                           ; BSR set to: 0
  1052                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1053   000EB4  0E20               	movlw	32
  1054   000EB6  6E15               	movwf	vfpfcnvrt@c^0,c
  1055                           
  1056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1057   000EB8  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1058   000EBA  EF61  F007         	goto	u941
  1059   000EBE  EF64  F007         	goto	u940
  1060   000EC2                     u941:
  1061   000EC2  0E01               	movlw	1
  1062   000EC4  EF65  F007         	goto	u950
  1063   000EC8                     u940:
  1064   000EC8  0E00               	movlw	0
  1065   000ECA                     u950:
  1066   000ECA  6E0F               	movwf	vfpfcnvrt@done^0,c
  1067   000ECC                     l2085:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1070   000ECC  0615               	decf	vfpfcnvrt@c^0,f,c
  1071   000ECE  5015               	movf	vfpfcnvrt@c^0,w,c
  1072   000ED0  0F9C               	addlw	low _dbuf
  1073   000ED2  6ED9               	movwf	fsr2l,c
  1074   000ED4  6ADA               	clrf	fsr2h,c
  1075   000ED6  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1076   000EDA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1077   000EDE  0E00               	movlw	0
  1078   000EE0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1079   000EE2  0E0A               	movlw	10
  1080   000EE4  6E03               	movwf	___awmod@divisor^0,c
  1081   000EE6  EC4B  F008         	call	___awmod	;wreg free
  1082   000EEA  C001  F007         	movff	?___awmod,abs@a
  1083   000EEE  C002  F008         	movff	?___awmod+1,abs@a+1
  1084   000EF2  EC44  F00A         	call	_abs	;wreg free
  1085   000EF6  5007               	movf	?_abs^0,w,c
  1086   000EF8  0F30               	addlw	48
  1087   000EFA  6EDF               	movwf	indf2,c
  1088   000EFC                     
  1089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1090   000EFC  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1091   000F00  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1092   000F04  0E00               	movlw	0
  1093   000F06  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1094   000F08  0E0A               	movlw	10
  1095   000F0A  6E03               	movwf	___awdiv@divisor^0,c
  1096   000F0C  ECE9  F007         	call	___awdiv	;wreg free
  1097   000F10  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1098   000F14  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1099   000F18                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1101   000F18  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1102   000F1A  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1103   000F1C  B4D8               	btfsc	status,2,c
  1104   000F1E  EF93  F007         	goto	u961
  1105   000F22  EF95  F007         	goto	u960
  1106   000F26                     u961:
  1107   000F26  EF9D  F007         	goto	l2093
  1108   000F2A                     u960:
  1109   000F2A  5015               	movf	vfpfcnvrt@c^0,w,c
  1110   000F2C  A4D8               	btfss	status,2,c
  1111   000F2E  EF9B  F007         	goto	u971
  1112   000F32  EF9D  F007         	goto	u970
  1113   000F36                     u971:
  1114   000F36  EF66  F007         	goto	l2085
  1115   000F3A                     u970:
  1116   000F3A                     l2093:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1119   000F3A  5015               	movf	vfpfcnvrt@c^0,w,c
  1120   000F3C  B4D8               	btfsc	status,2,c
  1121   000F3E  EFA3  F007         	goto	u981
  1122   000F42  EFA5  F007         	goto	u980
  1123   000F46                     u981:
  1124   000F46  EFC4  F007         	goto	l2103
  1125   000F4A                     u980:
  1126   000F4A  500F               	movf	vfpfcnvrt@done^0,w,c
  1127   000F4C  B4D8               	btfsc	status,2,c
  1128   000F4E  EFAB  F007         	goto	u991
  1129   000F52  EFAD  F007         	goto	u990
  1130   000F56                     u991:
  1131   000F56  EFC4  F007         	goto	l2103
  1132   000F5A                     u990:
  1133   000F5A                     
  1134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1135   000F5A  0615               	decf	vfpfcnvrt@c^0,f,c
  1136   000F5C  5015               	movf	vfpfcnvrt@c^0,w,c
  1137   000F5E  0F9C               	addlw	low _dbuf
  1138   000F60  6ED9               	movwf	fsr2l,c
  1139   000F62  6ADA               	clrf	fsr2h,c
  1140   000F64  0E2D               	movlw	45
  1141   000F66  6EDF               	movwf	indf2,c
  1142   000F68  EFC4  F007         	goto	l2103
  1143   000F6C                     l2099:
  1144                           
  1145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1146   000F6C  5015               	movf	vfpfcnvrt@c^0,w,c
  1147   000F6E  0F9C               	addlw	low _dbuf
  1148   000F70  6ED9               	movwf	fsr2l,c
  1149   000F72  6ADA               	clrf	fsr2h,c
  1150   000F74  50DF               	movf	indf2,w,c
  1151   000F76  6E0E               	movwf	??_vfpfcnvrt^0,c
  1152   000F78  500E               	movf	??_vfpfcnvrt^0,w,c
  1153   000F7A  6E01               	movwf	fputc@c^0,c
  1154   000F7C  6A02               	clrf	(fputc@c+1)^0,c
  1155   000F7E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1156   000F82  ECA3  F008         	call	_fputc	;wreg free
  1157   000F86  2A15               	incf	vfpfcnvrt@c^0,f,c
  1158   000F88                     l2103:
  1159                           
  1160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1161   000F88  0E20               	movlw	32
  1162   000F8A  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1163   000F8C  A4D8               	btfss	status,2,c
  1164   000F8E  EFCB  F007         	goto	u1001
  1165   000F92  EFCD  F007         	goto	u1000
  1166   000F96                     u1001:
  1167   000F96  EFB6  F007         	goto	l2099
  1168   000F9A                     u1000:
  1169   000F9A  EFE8  F007         	goto	l1217
  1170   000F9E                     l2105:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1173   000F9E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1174   000FA0  6ED9               	movwf	fsr2l,c
  1175   000FA2  6ADA               	clrf	fsr2h,c
  1176   000FA4  2ADF               	incf	indf2,f,c
  1177   000FA6  EFE8  F007         	goto	l1217
  1178   000FAA                     l2109:
  1179                           
  1180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1181   000FAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1182   000FAC  6ED9               	movwf	fsr2l,c
  1183   000FAE  6ADA               	clrf	fsr2h,c
  1184   000FB0  CFDF FFF6          	movff	indf2,tblptrl
  1185   000FB4                     	if	1	;There is more than 1 active tblptr byte
  1186   000FB4  0E0E               	movlw	high __smallconst
  1187   000FB6  6EF7               	movwf	tblptrh,c
  1188   000FB8                     	endif
  1189   000FB8                     	if	0	;tblptru may be non-zero
  1190   000FB8                     	endif
  1191   000FB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1192   000FB8  0E00               	movlw	low (__smallconst shr (0+16))
  1193   000FBA  6EF8               	movwf	tblptru,c
  1194   000FBC                     	endif
  1195   000FBC  0008               	tblrd		*
  1196   000FBE  50F5               	movf	tablat,w,c
  1197   000FC0  6E01               	movwf	fputc@c^0,c
  1198   000FC2  6A02               	clrf	(fputc@c+1)^0,c
  1199   000FC4  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1200   000FC8  ECA3  F008         	call	_fputc	;wreg free
  1201   000FCC  EFCF  F007         	goto	l2105
  1202   000FD0                     l1217:
  1203   000FD0  0012               	return		;funcret
  1204   000FD2                     __end_of_vfpfcnvrt:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _fputc *****************
  1208 ;; Defined at:
  1209 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  c               2    0[COMRAM] int 
  1212 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1213 ;;		 -> sprintf@f(12), 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  2    0[COMRAM] int 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1225 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;Total ram usage:        8 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 1
  1232 ;; This function calls:
  1233 ;;		_putch
  1234 ;; This function is called by:
  1235 ;;		_vfpfcnvrt
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text5
  1240   001146                     __ptext5:
  1241                           	callstack 0
  1242   001146                     _fputc:
  1243                           	callstack 25
  1244   001146  5003               	movf	fputc@fp^0,w,c
  1245   001148  B4D8               	btfsc	status,2,c
  1246   00114A  EFA9  F008         	goto	u861
  1247   00114E  EFAB  F008         	goto	u860
  1248   001152                     u861:
  1249   001152  EFB3  F008         	goto	l2051
  1250   001156                     u860:
  1251   001156  5003               	movf	fputc@fp^0,w,c
  1252   001158  A4D8               	btfss	status,2,c
  1253   00115A  EFB1  F008         	goto	u871
  1254   00115E  EFB3  F008         	goto	u870
  1255   001162                     u871:
  1256   001162  EFB8  F008         	goto	l2053
  1257   001166                     u870:
  1258   001166                     l2051:
  1259   001166  5001               	movf	fputc@c^0,w,c
  1260   001168  EC1E  F00B         	call	_putch
  1261   00116C  EFF7  F008         	goto	l1242
  1262   001170                     l2053:
  1263   001170  5003               	movf	fputc@fp^0,w,c
  1264   001172  6ED9               	movwf	fsr2l,c
  1265   001174  6ADA               	clrf	fsr2h,c
  1266   001176  0E0A               	movlw	10
  1267   001178  26D9               	addwf	fsr2l,f,c
  1268   00117A  50DE               	movf	postinc2,w,c
  1269   00117C  10DE               	iorwf	postinc2,w,c
  1270   00117E  B4D8               	btfsc	status,2,c
  1271   001180  EFC4  F008         	goto	u881
  1272   001184  EFC6  F008         	goto	u880
  1273   001188                     u881:
  1274   001188  EFDF  F008         	goto	l2057
  1275   00118C                     u880:
  1276   00118C  5003               	movf	fputc@fp^0,w,c
  1277   00118E  6ED9               	movwf	fsr2l,c
  1278   001190  6ADA               	clrf	fsr2h,c
  1279   001192  0E0A               	movlw	10
  1280   001194  26D9               	addwf	fsr2l,f,c
  1281   001196  5003               	movf	fputc@fp^0,w,c
  1282   001198  6EE1               	movwf	fsr1l,c
  1283   00119A  6AE2               	clrf	fsr1h,c
  1284   00119C  0E03               	movlw	3
  1285   00119E  26E1               	addwf	fsr1l,f,c
  1286   0011A0  50DE               	movf	postinc2,w,c
  1287   0011A2  5CE6               	subwf	postinc1,w,c
  1288   0011A4  50E6               	movf	postinc1,w,c
  1289   0011A6  0A80               	xorlw	128
  1290   0011A8  6E08               	movwf	(??_fputc+4)^0,c
  1291   0011AA  50DE               	movf	postinc2,w,c
  1292   0011AC  0A80               	xorlw	128
  1293   0011AE  5808               	subwfb	(??_fputc+4)^0,w,c
  1294   0011B0  B0D8               	btfsc	status,0,c
  1295   0011B2  EFDD  F008         	goto	u891
  1296   0011B6  EFDF  F008         	goto	u890
  1297   0011BA                     u891:
  1298   0011BA  EFF7  F008         	goto	l1242
  1299   0011BE                     u890:
  1300   0011BE                     l2057:
  1301   0011BE  5003               	movf	fputc@fp^0,w,c
  1302   0011C0  6ED9               	movwf	fsr2l,c
  1303   0011C2  6ADA               	clrf	fsr2h,c
  1304   0011C4  0E03               	movlw	3
  1305   0011C6  26D9               	addwf	fsr2l,f,c
  1306   0011C8  50DF               	movf	indf2,w,c
  1307   0011CA  6E04               	movwf	??_fputc^0,c
  1308   0011CC  5003               	movf	fputc@fp^0,w,c
  1309   0011CE  6ED9               	movwf	fsr2l,c
  1310   0011D0  6ADA               	clrf	fsr2h,c
  1311   0011D2  50DF               	movf	indf2,w,c
  1312   0011D4  2404               	addwf	??_fputc^0,w,c
  1313   0011D6  6ED9               	movwf	fsr2l,c
  1314   0011D8  6ADA               	clrf	fsr2h,c
  1315   0011DA  C001  FFDF         	movff	fputc@c,indf2
  1316   0011DE  5003               	movf	fputc@fp^0,w,c
  1317   0011E0  6ED9               	movwf	fsr2l,c
  1318   0011E2  6ADA               	clrf	fsr2h,c
  1319   0011E4  0E03               	movlw	3
  1320   0011E6  26D9               	addwf	fsr2l,f,c
  1321   0011E8  2ADE               	incf	postinc2,f,c
  1322   0011EA  0E00               	movlw	0
  1323   0011EC  22DD               	addwfc	postdec2,f,c
  1324   0011EE                     l1242:
  1325   0011EE  0012               	return		;funcret
  1326   0011F0                     __end_of_fputc:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _putch *****************
  1330 ;; Defined at:
  1331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  c               1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  c               1    0[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;Total ram usage:        0 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_fputc
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text6
  1359   00163C                     __ptext6:
  1360                           	callstack 0
  1361   00163C                     _putch:
  1362                           	callstack 25
  1363   00163C  0012               	return		;funcret
  1364   00163E                     __end_of_putch:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function _abs *****************
  1368 ;; Defined at:
  1369 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  a               2    6[COMRAM] int 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  2    6[COMRAM] int 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1386 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1387 ;;Total ram usage:        4 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_vfpfcnvrt
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text7
  1397   001488                     __ptext7:
  1398                           	callstack 0
  1399   001488                     _abs:
  1400                           	callstack 26
  1401   001488  BE08               	btfsc	(abs@a+1)^0,7,c
  1402   00148A  EF49  F00A         	goto	u901
  1403   00148E  EF4B  F00A         	goto	u900
  1404   001492                     u901:
  1405   001492  EF51  F00A         	goto	l1227
  1406   001496                     u900:
  1407   001496  C007  F007         	movff	abs@a,?_abs
  1408   00149A  C008  F008         	movff	abs@a+1,?_abs+1
  1409   00149E  EF5D  F00A         	goto	l1230
  1410   0014A2                     l1227:
  1411   0014A2  C007  F009         	movff	abs@a,??_abs
  1412   0014A6  C008  F00A         	movff	abs@a+1,??_abs+1
  1413   0014AA  1E09               	comf	??_abs^0,f,c
  1414   0014AC  1E0A               	comf	(??_abs+1)^0,f,c
  1415   0014AE  4A09               	infsnz	??_abs^0,f,c
  1416   0014B0  2A0A               	incf	(??_abs+1)^0,f,c
  1417   0014B2  C009  F007         	movff	??_abs,?_abs
  1418   0014B6  C00A  F008         	movff	??_abs+1,?_abs+1
  1419   0014BA                     l1230:
  1420   0014BA  0012               	return		;funcret
  1421   0014BC                     __end_of_abs:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function ___awmod *****************
  1425 ;; Defined at:
  1426 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  dividend        2    0[COMRAM] int 
  1429 ;;  divisor         2    2[COMRAM] int 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  sign            1    5[COMRAM] unsigned char 
  1432 ;;  counter         1    4[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  2    0[COMRAM] int 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;Total ram usage:        6 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_vfpfcnvrt
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text8
  1456   001096                     __ptext8:
  1457                           	callstack 0
  1458   001096                     ___awmod:
  1459                           	callstack 26
  1460   001096  0E00               	movlw	0
  1461   001098  6E06               	movwf	___awmod@sign^0,c
  1462   00109A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1463   00109C  EF54  F008         	goto	u800
  1464   0010A0  EF52  F008         	goto	u801
  1465   0010A4                     u801:
  1466   0010A4  EF5A  F008         	goto	l2019
  1467   0010A8                     u800:
  1468   0010A8  6C01               	negf	___awmod@dividend^0,c
  1469   0010AA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1470   0010AC  B0D8               	btfsc	status,0,c
  1471   0010AE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1472   0010B0  0E01               	movlw	1
  1473   0010B2  6E06               	movwf	___awmod@sign^0,c
  1474   0010B4                     l2019:
  1475   0010B4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1476   0010B6  EF61  F008         	goto	u810
  1477   0010BA  EF5F  F008         	goto	u811
  1478   0010BE                     u811:
  1479   0010BE  EF65  F008         	goto	l2023
  1480   0010C2                     u810:
  1481   0010C2  6C03               	negf	___awmod@divisor^0,c
  1482   0010C4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1483   0010C6  B0D8               	btfsc	status,0,c
  1484   0010C8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1485   0010CA                     l2023:
  1486   0010CA  5003               	movf	___awmod@divisor^0,w,c
  1487   0010CC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1488   0010CE  B4D8               	btfsc	status,2,c
  1489   0010D0  EF6C  F008         	goto	u821
  1490   0010D4  EF6E  F008         	goto	u820
  1491   0010D8                     u821:
  1492   0010D8  EF92  F008         	goto	l2039
  1493   0010DC                     u820:
  1494   0010DC  0E01               	movlw	1
  1495   0010DE  6E05               	movwf	___awmod@counter^0,c
  1496   0010E0  EF76  F008         	goto	l2029
  1497   0010E4                     l2027:
  1498   0010E4  90D8               	bcf	status,0,c
  1499   0010E6  3603               	rlcf	___awmod@divisor^0,f,c
  1500   0010E8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1501   0010EA  2A05               	incf	___awmod@counter^0,f,c
  1502   0010EC                     l2029:
  1503   0010EC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1504   0010EE  EF7B  F008         	goto	u831
  1505   0010F2  EF7D  F008         	goto	u830
  1506   0010F6                     u831:
  1507   0010F6  EF72  F008         	goto	l2027
  1508   0010FA                     u830:
  1509   0010FA                     l2031:
  1510   0010FA  5003               	movf	___awmod@divisor^0,w,c
  1511   0010FC  5C01               	subwf	___awmod@dividend^0,w,c
  1512   0010FE  5004               	movf	(___awmod@divisor+1)^0,w,c
  1513   001100  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1514   001102  A0D8               	btfss	status,0,c
  1515   001104  EF86  F008         	goto	u841
  1516   001108  EF88  F008         	goto	u840
  1517   00110C                     u841:
  1518   00110C  EF8C  F008         	goto	l2035
  1519   001110                     u840:
  1520   001110  5003               	movf	___awmod@divisor^0,w,c
  1521   001112  5E01               	subwf	___awmod@dividend^0,f,c
  1522   001114  5004               	movf	(___awmod@divisor+1)^0,w,c
  1523   001116  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1524   001118                     l2035:
  1525   001118  90D8               	bcf	status,0,c
  1526   00111A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1527   00111C  3203               	rrcf	___awmod@divisor^0,f,c
  1528   00111E  2E05               	decfsz	___awmod@counter^0,f,c
  1529   001120  EF7D  F008         	goto	l2031
  1530   001124                     l2039:
  1531   001124  5006               	movf	___awmod@sign^0,w,c
  1532   001126  B4D8               	btfsc	status,2,c
  1533   001128  EF98  F008         	goto	u851
  1534   00112C  EF9A  F008         	goto	u850
  1535   001130                     u851:
  1536   001130  EF9E  F008         	goto	l2043
  1537   001134                     u850:
  1538   001134  6C01               	negf	___awmod@dividend^0,c
  1539   001136  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1540   001138  B0D8               	btfsc	status,0,c
  1541   00113A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1542   00113C                     l2043:
  1543   00113C  C001  F001         	movff	___awmod@dividend,?___awmod
  1544   001140  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1545   001144  0012               	return		;funcret
  1546   001146                     __end_of___awmod:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function ___awdiv *****************
  1550 ;; Defined at:
  1551 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  dividend        2    0[COMRAM] int 
  1554 ;;  divisor         2    2[COMRAM] int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  quotient        2    6[COMRAM] int 
  1557 ;;  sign            1    5[COMRAM] unsigned char 
  1558 ;;  counter         1    4[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    0[COMRAM] int 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;Total ram usage:        8 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_vfpfcnvrt
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text9
  1582   000FD2                     __ptext9:
  1583                           	callstack 0
  1584   000FD2                     ___awdiv:
  1585                           	callstack 26
  1586   000FD2  0E00               	movlw	0
  1587   000FD4  6E06               	movwf	___awdiv@sign^0,c
  1588   000FD6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1589   000FD8  EFF2  F007         	goto	u740
  1590   000FDC  EFF0  F007         	goto	u741
  1591   000FE0                     u741:
  1592   000FE0  EFF8  F007         	goto	l1975
  1593   000FE4                     u740:
  1594   000FE4  6C03               	negf	___awdiv@divisor^0,c
  1595   000FE6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1596   000FE8  B0D8               	btfsc	status,0,c
  1597   000FEA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1598   000FEC  0E01               	movlw	1
  1599   000FEE  6E06               	movwf	___awdiv@sign^0,c
  1600   000FF0                     l1975:
  1601   000FF0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1602   000FF2  EFFF  F007         	goto	u750
  1603   000FF6  EFFD  F007         	goto	u751
  1604   000FFA                     u751:
  1605   000FFA  EF05  F008         	goto	l1981
  1606   000FFE                     u750:
  1607   000FFE  6C01               	negf	___awdiv@dividend^0,c
  1608   001000  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1609   001002  B0D8               	btfsc	status,0,c
  1610   001004  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1611   001006  0E01               	movlw	1
  1612   001008  1A06               	xorwf	___awdiv@sign^0,f,c
  1613   00100A                     l1981:
  1614   00100A  0E00               	movlw	0
  1615   00100C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1616   00100E  0E00               	movlw	0
  1617   001010  6E07               	movwf	___awdiv@quotient^0,c
  1618   001012  5003               	movf	___awdiv@divisor^0,w,c
  1619   001014  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1620   001016  B4D8               	btfsc	status,2,c
  1621   001018  EF10  F008         	goto	u761
  1622   00101C  EF12  F008         	goto	u760
  1623   001020                     u761:
  1624   001020  EF3A  F008         	goto	l2003
  1625   001024                     u760:
  1626   001024  0E01               	movlw	1
  1627   001026  6E05               	movwf	___awdiv@counter^0,c
  1628   001028  EF1A  F008         	goto	l1989
  1629   00102C                     l1987:
  1630   00102C  90D8               	bcf	status,0,c
  1631   00102E  3603               	rlcf	___awdiv@divisor^0,f,c
  1632   001030  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1633   001032  2A05               	incf	___awdiv@counter^0,f,c
  1634   001034                     l1989:
  1635   001034  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1636   001036  EF1F  F008         	goto	u771
  1637   00103A  EF21  F008         	goto	u770
  1638   00103E                     u771:
  1639   00103E  EF16  F008         	goto	l1987
  1640   001042                     u770:
  1641   001042                     l1991:
  1642   001042  90D8               	bcf	status,0,c
  1643   001044  3607               	rlcf	___awdiv@quotient^0,f,c
  1644   001046  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1645   001048  5003               	movf	___awdiv@divisor^0,w,c
  1646   00104A  5C01               	subwf	___awdiv@dividend^0,w,c
  1647   00104C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1648   00104E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1649   001050  A0D8               	btfss	status,0,c
  1650   001052  EF2D  F008         	goto	u781
  1651   001056  EF2F  F008         	goto	u780
  1652   00105A                     u781:
  1653   00105A  EF34  F008         	goto	l1999
  1654   00105E                     u780:
  1655   00105E  5003               	movf	___awdiv@divisor^0,w,c
  1656   001060  5E01               	subwf	___awdiv@dividend^0,f,c
  1657   001062  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1658   001064  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1659   001066  8007               	bsf	___awdiv@quotient^0,0,c
  1660   001068                     l1999:
  1661   001068  90D8               	bcf	status,0,c
  1662   00106A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1663   00106C  3203               	rrcf	___awdiv@divisor^0,f,c
  1664   00106E  2E05               	decfsz	___awdiv@counter^0,f,c
  1665   001070  EF21  F008         	goto	l1991
  1666   001074                     l2003:
  1667   001074  5006               	movf	___awdiv@sign^0,w,c
  1668   001076  B4D8               	btfsc	status,2,c
  1669   001078  EF40  F008         	goto	u791
  1670   00107C  EF42  F008         	goto	u790
  1671   001080                     u791:
  1672   001080  EF46  F008         	goto	l2007
  1673   001084                     u790:
  1674   001084  6C07               	negf	___awdiv@quotient^0,c
  1675   001086  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1676   001088  B0D8               	btfsc	status,0,c
  1677   00108A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1678   00108C                     l2007:
  1679   00108C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1680   001090  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1681   001094  0012               	return		;funcret
  1682   001096                     __end_of___awdiv:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _sendStringSerial4 *****************
  1686 ;; Defined at:
  1687 ;;		line 36 in file "serial.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  string          1    1[COMRAM] PTR unsigned char 
  1690 ;;		 -> sendIntSerial4@string(17), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1702 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;Total ram usage:        1 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 1
  1709 ;; This function calls:
  1710 ;;		_sendCharSerial4
  1711 ;; This function is called by:
  1712 ;;		_sendIntSerial4
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text10
  1717   0014F0                     __ptext10:
  1718                           	callstack 0
  1719   0014F0                     _sendStringSerial4:
  1720                           	callstack 28
  1721   0014F0                     
  1722                           ;serial.c: 38:     while(*string != 0){
  1723   0014F0  EF81  F00A         	goto	l2235
  1724   0014F4                     l2231:
  1725                           
  1726                           ;serial.c: 39:   sendCharSerial4(*string++);
  1727   0014F4  5002               	movf	sendStringSerial4@string^0,w,c
  1728   0014F6  6ED9               	movwf	fsr2l,c
  1729   0014F8  6ADA               	clrf	fsr2h,c
  1730   0014FA  50DF               	movf	indf2,w,c
  1731   0014FC  ECF9  F00A         	call	_sendCharSerial4
  1732   001500  2A02               	incf	sendStringSerial4@string^0,f,c
  1733   001502                     l2235:
  1734                           
  1735                           ;serial.c: 38:     while(*string != 0){
  1736   001502  5002               	movf	sendStringSerial4@string^0,w,c
  1737   001504  6ED9               	movwf	fsr2l,c
  1738   001506  6ADA               	clrf	fsr2h,c
  1739   001508  50DF               	movf	indf2,w,c
  1740   00150A  A4D8               	btfss	status,2,c
  1741   00150C  EF8A  F00A         	goto	u1201
  1742   001510  EF8C  F00A         	goto	u1200
  1743   001514                     u1201:
  1744   001514  EF7A  F00A         	goto	l2231
  1745   001518                     u1200:
  1746   001518  0012               	return		;funcret
  1747   00151A                     __end_of_sendStringSerial4:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _sendCharSerial4 *****************
  1751 ;; Defined at:
  1752 ;;		line 30 in file "serial.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  charToSend      1    wreg     unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  charToSend      1    0[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;Total ram usage:        1 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_sendStringSerial4
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text11
  1780   0015F2                     __ptext11:
  1781                           	callstack 0
  1782   0015F2                     _sendCharSerial4:
  1783                           	callstack 28
  1784                           
  1785                           ;incstack = 0
  1786                           ;sendCharSerial4@charToSend stored from wreg
  1787   0015F2  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1788   0015F4                     l366:
  1789   0015F4  010E               	movlb	14	; () banked
  1790   0015F6  A537               	btfss	55,2,b	;volatile
  1791   0015F8  EF00  F00B         	goto	u321
  1792   0015FC  EF02  F00B         	goto	u320
  1793   001600                     u321:
  1794   001600  EFFA  F00A         	goto	l366
  1795   001604                     u320:
  1796   001604                     
  1797                           ; BSR set to: 14
  1798                           ;serial.c: 32:     TX4REG = charToSend;
  1799   001604  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1800   001608                     
  1801                           ; BSR set to: 14
  1802   001608  0012               	return		;funcret
  1803   00160A                     __end_of_sendCharSerial4:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _lights_flashing *****************
  1807 ;; Defined at:
  1808 ;;		line 39 in file "buggy_lights.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text12
  1836   00128C                     __ptext12:
  1837                           	callstack 0
  1838   00128C                     _lights_flashing:
  1839                           	callstack 30
  1840   00128C                     
  1841                           ;buggy_lights.c: 41:     LATDbits.LATD4 = !LATDbits.LATD4;
  1842   00128C  A87C               	btfss	124,4,c	;volatile
  1843   00128E  EF4B  F009         	goto	u511
  1844   001292  EF4F  F009         	goto	u510
  1845   001296                     u511:
  1846   001296  6A01               	clrf	??_lights_flashing^0,c
  1847   001298  2A01               	incf	??_lights_flashing^0,f,c
  1848   00129A  EF50  F009         	goto	u528
  1849   00129E                     u510:
  1850   00129E  6A01               	clrf	??_lights_flashing^0,c
  1851   0012A0                     u528:
  1852   0012A0  3A01               	swapf	??_lights_flashing^0,f,c
  1853   0012A2  507C               	movf	124,w,c	;volatile
  1854   0012A4  1801               	xorwf	??_lights_flashing^0,w,c
  1855   0012A6  0BEF               	andlw	-17
  1856   0012A8  1801               	xorwf	??_lights_flashing^0,w,c
  1857   0012AA  6E7C               	movwf	124,c	;volatile
  1858                           
  1859                           ;buggy_lights.c: 42:     LATDbits.LATD3 = !LATDbits.LATD3;
  1860   0012AC  A67C               	btfss	124,3,c	;volatile
  1861   0012AE  EF5B  F009         	goto	u531
  1862   0012B2  EF5F  F009         	goto	u530
  1863   0012B6                     u531:
  1864   0012B6  6A01               	clrf	??_lights_flashing^0,c
  1865   0012B8  2A01               	incf	??_lights_flashing^0,f,c
  1866   0012BA  EF60  F009         	goto	u548
  1867   0012BE                     u530:
  1868   0012BE  6A01               	clrf	??_lights_flashing^0,c
  1869   0012C0                     u548:
  1870   0012C0  4601               	rlncf	??_lights_flashing^0,f,c
  1871   0012C2  4601               	rlncf	??_lights_flashing^0,f,c
  1872   0012C4  4601               	rlncf	??_lights_flashing^0,f,c
  1873   0012C6  507C               	movf	124,w,c	;volatile
  1874   0012C8  1801               	xorwf	??_lights_flashing^0,w,c
  1875   0012CA  0BF7               	andlw	-9
  1876   0012CC  1801               	xorwf	??_lights_flashing^0,w,c
  1877   0012CE  6E7C               	movwf	124,c	;volatile
  1878   0012D0                     
  1879                           ;buggy_lights.c: 43:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1880   0012D0  0E29               	movlw	41
  1881   0012D2  6E02               	movwf	(??_lights_flashing+1)^0,c
  1882   0012D4  0E96               	movlw	150
  1883   0012D6  6E01               	movwf	??_lights_flashing^0,c
  1884   0012D8  0E7F               	movlw	127
  1885   0012DA                     u1707:
  1886   0012DA  2EE8               	decfsz	wreg,f,c
  1887   0012DC  D7FE               	bra	u1707
  1888   0012DE  2E01               	decfsz	??_lights_flashing^0,f,c
  1889   0012E0  D7FC               	bra	u1707
  1890   0012E2  2E02               	decfsz	(??_lights_flashing+1)^0,f,c
  1891   0012E4  D7FA               	bra	u1707
  1892   0012E6  0000               	nop	
  1893   0012E8                     
  1894                           ;buggy_lights.c: 44:     LATFbits.LATF0 = !LATFbits.LATF0;
  1895   0012E8  A07E               	btfss	126,0,c	;volatile
  1896   0012EA  EF79  F009         	goto	u551
  1897   0012EE  EF7D  F009         	goto	u550
  1898   0012F2                     u551:
  1899   0012F2  6A01               	clrf	??_lights_flashing^0,c
  1900   0012F4  2A01               	incf	??_lights_flashing^0,f,c
  1901   0012F6  EF7E  F009         	goto	u568
  1902   0012FA                     u550:
  1903   0012FA  6A01               	clrf	??_lights_flashing^0,c
  1904   0012FC                     u568:
  1905   0012FC  507E               	movf	126,w,c	;volatile
  1906   0012FE  1801               	xorwf	??_lights_flashing^0,w,c
  1907   001300  0BFE               	andlw	-2
  1908   001302  1801               	xorwf	??_lights_flashing^0,w,c
  1909   001304  6E7E               	movwf	126,c	;volatile
  1910   001306                     
  1911                           ;buggy_lights.c: 45:     LATHbits.LATH0 = !LATHbits.LATH0;
  1912   001306  A080               	btfss	128,0,c	;volatile
  1913   001308  EF88  F009         	goto	u571
  1914   00130C  EF8C  F009         	goto	u570
  1915   001310                     u571:
  1916   001310  6A01               	clrf	??_lights_flashing^0,c
  1917   001312  2A01               	incf	??_lights_flashing^0,f,c
  1918   001314  EF8D  F009         	goto	u588
  1919   001318                     u570:
  1920   001318  6A01               	clrf	??_lights_flashing^0,c
  1921   00131A                     u588:
  1922   00131A  5080               	movf	128,w,c	;volatile
  1923   00131C  1801               	xorwf	??_lights_flashing^0,w,c
  1924   00131E  0BFE               	andlw	-2
  1925   001320  1801               	xorwf	??_lights_flashing^0,w,c
  1926   001322  6E80               	movwf	128,c	;volatile
  1927   001324  0012               	return		;funcret
  1928   001326                     __end_of_lights_flashing:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _initUSART4 *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "serial.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text13
  1961   0015D4                     __ptext13:
  1962                           	callstack 0
  1963   0015D4                     _initUSART4:
  1964                           	callstack 30
  1965   0015D4                     
  1966                           ;serial.c: 9:     RC0PPS = 0x12;
  1967   0015D4  0E12               	movlw	18
  1968   0015D6  010E               	movlb	14	; () banked
  1969   0015D8  6F62               	movwf	98,b	;volatile
  1970                           
  1971                           ;serial.c: 10:     RX4PPS = 0x11;
  1972   0015DA  0E11               	movlw	17
  1973   0015DC  6F15               	movwf	21,b	;volatile
  1974   0015DE                     
  1975                           ; BSR set to: 14
  1976                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1977   0015DE  97E9               	bcf	233,3,b	;volatile
  1978   0015E0                     
  1979                           ; BSR set to: 14
  1980                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1981   0015E0  95E8               	bcf	232,2,b	;volatile
  1982                           
  1983                           ;serial.c: 15:     SP4BRGL = 51;
  1984   0015E2  0E33               	movlw	51
  1985   0015E4  6FE5               	movwf	229,b	;volatile
  1986                           
  1987                           ;serial.c: 16:     SP4BRGH = 0;
  1988   0015E6  0E00               	movlw	0
  1989   0015E8  6FE6               	movwf	230,b	;volatile
  1990   0015EA                     
  1991                           ; BSR set to: 14
  1992                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1993   0015EA  89E7               	bsf	231,4,b	;volatile
  1994   0015EC                     
  1995                           ; BSR set to: 14
  1996                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1997   0015EC  8BE8               	bsf	232,5,b	;volatile
  1998   0015EE                     
  1999                           ; BSR set to: 14
  2000                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  2001   0015EE  8FE7               	bsf	231,7,b	;volatile
  2002   0015F0                     
  2003                           ; BSR set to: 14
  2004   0015F0  0012               	return		;funcret
  2005   0015F2                     __end_of_initUSART4:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _initDCmotorsPWM *****************
  2009 ;; Defined at:
  2010 ;;		line 5 in file "dc_motor.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text14
  2038   001326                     __ptext14:
  2039                           	callstack 0
  2040   001326                     _initDCmotorsPWM:
  2041                           	callstack 30
  2042   001326                     
  2043                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2044   001326  9485               	bcf	133,2,c	;volatile
  2045                           
  2046                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2047   001328  9885               	bcf	133,4,c	;volatile
  2048                           
  2049                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2050   00132A  9E83               	bcf	131,7,c	;volatile
  2051                           
  2052                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2053   00132C  9C87               	bcf	135,6,c	;volatile
  2054                           
  2055                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2056   00132E  947D               	bcf	125,2,c	;volatile
  2057                           
  2058                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2059   001330  987D               	bcf	125,4,c	;volatile
  2060                           
  2061                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2062   001332  9E7B               	bcf	123,7,c	;volatile
  2063                           
  2064                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2065   001334  9C7F               	bcf	127,6,c	;volatile
  2066   001336                     
  2067                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2068   001336  0E05               	movlw	5
  2069   001338  010E               	movlb	14	; () banked
  2070   00133A  6F74               	movwf	116,b	;volatile
  2071                           
  2072                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2073   00133C  0E06               	movlw	6
  2074   00133E  6F76               	movwf	118,b	;volatile
  2075                           
  2076                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2077   001340  0E07               	movlw	7
  2078   001342  6F69               	movwf	105,b	;volatile
  2079                           
  2080                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2081   001344  0E08               	movlw	8
  2082   001346  6F88               	movwf	136,b	;volatile
  2083                           
  2084                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2085   001348  50BD               	movf	189,w,c	;volatile
  2086   00134A  0B8F               	andlw	-113
  2087   00134C  0940               	iorlw	64
  2088   00134E  6EBD               	movwf	189,c	;volatile
  2089                           
  2090                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2091   001350  0EE0               	movlw	-32
  2092   001352  16BE               	andwf	190,f,c	;volatile
  2093                           
  2094                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2095   001354  50BF               	movf	191,w,c	;volatile
  2096   001356  0BF0               	andlw	-16
  2097   001358  0901               	iorlw	1
  2098   00135A  6EBF               	movwf	191,c	;volatile
  2099   00135C                     
  2100                           ; BSR set to: 14
  2101                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  2102   00135C  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2103   001360                     
  2104                           ; BSR set to: 14
  2105                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2106   001360  8EBD               	bsf	189,7,c	;volatile
  2107                           
  2108                           ;dc_motor.c: 35:     CCPR1H=0;
  2109   001362  0E00               	movlw	0
  2110   001364  6EAA               	movwf	170,c	;volatile
  2111                           
  2112                           ;dc_motor.c: 36:     CCPR2H=0;
  2113   001366  0E00               	movlw	0
  2114   001368  6EA6               	movwf	166,c	;volatile
  2115                           
  2116                           ;dc_motor.c: 37:     CCPR3H=0;
  2117   00136A  0E00               	movlw	0
  2118   00136C  010F               	movlb	15	; () banked
  2119   00136E  6F25               	movwf	37,b	;volatile
  2120                           
  2121                           ;dc_motor.c: 38:     CCPR4H=0;
  2122   001370  0E00               	movlw	0
  2123   001372  6F21               	movwf	33,b	;volatile
  2124                           
  2125                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2126   001374  0EFC               	movlw	-4
  2127   001376  16AD               	andwf	173,f,c	;volatile
  2128                           
  2129                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2130   001378  0EF3               	movlw	-13
  2131   00137A  16AD               	andwf	173,f,c	;volatile
  2132                           
  2133                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2134   00137C  0ECF               	movlw	-49
  2135   00137E  16AD               	andwf	173,f,c	;volatile
  2136                           
  2137                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2138   001380  0E3F               	movlw	-193
  2139   001382  16AD               	andwf	173,f,c	;volatile
  2140   001384                     
  2141                           ; BSR set to: 15
  2142                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2143   001384  88AB               	bsf	171,4,c	;volatile
  2144                           
  2145                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2146   001386  50AB               	movf	171,w,c	;volatile
  2147   001388  0BF0               	andlw	-16
  2148   00138A  090C               	iorlw	12
  2149   00138C  6EAB               	movwf	171,c	;volatile
  2150   00138E                     
  2151                           ; BSR set to: 15
  2152                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2153   00138E  8EAB               	bsf	171,7,c	;volatile
  2154   001390                     
  2155                           ; BSR set to: 15
  2156                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2157   001390  88A7               	bsf	167,4,c	;volatile
  2158                           
  2159                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2160   001392  50A7               	movf	167,w,c	;volatile
  2161   001394  0BF0               	andlw	-16
  2162   001396  090C               	iorlw	12
  2163   001398  6EA7               	movwf	167,c	;volatile
  2164   00139A                     
  2165                           ; BSR set to: 15
  2166                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2167   00139A  8EA7               	bsf	167,7,c	;volatile
  2168   00139C                     
  2169                           ; BSR set to: 15
  2170                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2171   00139C  8926               	bsf	38,4,b	;volatile
  2172                           
  2173                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2174   00139E  5126               	movf	38,w,b	;volatile
  2175   0013A0  0BF0               	andlw	-16
  2176   0013A2  090C               	iorlw	12
  2177   0013A4  6F26               	movwf	38,b	;volatile
  2178   0013A6                     
  2179                           ; BSR set to: 15
  2180                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2181   0013A6  8F26               	bsf	38,7,b	;volatile
  2182   0013A8                     
  2183                           ; BSR set to: 15
  2184                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2185   0013A8  8922               	bsf	34,4,b	;volatile
  2186                           
  2187                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2188   0013AA  5122               	movf	34,w,b	;volatile
  2189   0013AC  0BF0               	andlw	-16
  2190   0013AE  090C               	iorlw	12
  2191   0013B0  6F22               	movwf	34,b	;volatile
  2192   0013B2                     
  2193                           ; BSR set to: 15
  2194                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2195   0013B2  8F22               	bsf	34,7,b	;volatile
  2196   0013B4                     
  2197                           ; BSR set to: 15
  2198   0013B4  0012               	return		;funcret
  2199   0013B6                     __end_of_initDCmotorsPWM:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _color_click_init *****************
  2203 ;; Defined at:
  2204 ;;		line 5 in file "color.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;Total ram usage:        1 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 3
  2225 ;; This function calls:
  2226 ;;		_I2C_2_Master_Init
  2227 ;;		_color_writetoaddr
  2228 ;; This function is called by:
  2229 ;;		_main
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text15
  2234   0014BC                     __ptext15:
  2235                           	callstack 0
  2236   0014BC                     _color_click_init:
  2237                           	callstack 27
  2238   0014BC                     
  2239                           ;color.c: 8:     I2C_2_Master_Init();
  2240   0014BC  EC8D  F00A         	call	_I2C_2_Master_Init	;wreg free
  2241   0014C0                     
  2242                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2243   0014C0  0E01               	movlw	1
  2244   0014C2  6E03               	movwf	color_writetoaddr@value^0,c
  2245   0014C4  0E00               	movlw	0
  2246   0014C6  ECCB  F00A         	call	_color_writetoaddr
  2247   0014CA                     
  2248                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2249   0014CA  0E3F               	movlw	63
  2250   0014CC  6E05               	movwf	??_color_click_init^0,c
  2251   0014CE  0E55               	movlw	85
  2252   0014D0                     u1717:
  2253   0014D0  2EE8               	decfsz	wreg,f,c
  2254   0014D2  D7FE               	bra	u1717
  2255   0014D4  2E05               	decfsz	??_color_click_init^0,f,c
  2256   0014D6  D7FC               	bra	u1717
  2257   0014D8  0000               	nop	
  2258   0014DA                     
  2259                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2260   0014DA  0E03               	movlw	3
  2261   0014DC  6E03               	movwf	color_writetoaddr@value^0,c
  2262   0014DE  0E00               	movlw	0
  2263   0014E0  ECCB  F00A         	call	_color_writetoaddr
  2264   0014E4                     
  2265                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2266   0014E4  0ED5               	movlw	213
  2267   0014E6  6E03               	movwf	color_writetoaddr@value^0,c
  2268   0014E8  0E01               	movlw	1
  2269   0014EA  ECCB  F00A         	call	_color_writetoaddr
  2270   0014EE  0012               	return		;funcret
  2271   0014F0                     __end_of_color_click_init:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _color_writetoaddr *****************
  2275 ;; Defined at:
  2276 ;;		line 21 in file "color.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  address         1    wreg     unsigned char 
  2279 ;;  value           1    2[COMRAM] unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  address         1    3[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 2
  2298 ;; This function calls:
  2299 ;;		_I2C_2_Master_Start
  2300 ;;		_I2C_2_Master_Stop
  2301 ;;		_I2C_2_Master_Write
  2302 ;; This function is called by:
  2303 ;;		_color_click_init
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text16
  2308   001596                     __ptext16:
  2309                           	callstack 0
  2310   001596                     _color_writetoaddr:
  2311                           	callstack 27
  2312                           
  2313                           ;incstack = 0
  2314                           ;color_writetoaddr@address stored from wreg
  2315   001596  6E04               	movwf	color_writetoaddr@address^0,c
  2316   001598                     
  2317                           ;color.c: 22:     I2C_2_Master_Start();
  2318   001598  EC16  F00B         	call	_I2C_2_Master_Start	;wreg free
  2319                           
  2320                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2321   00159C  0E52               	movlw	82
  2322   00159E  EC0B  F00B         	call	_I2C_2_Master_Write
  2323                           
  2324                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2325   0015A2  5004               	movf	color_writetoaddr@address^0,w,c
  2326   0015A4  0980               	iorlw	128
  2327   0015A6  EC0B  F00B         	call	_I2C_2_Master_Write
  2328                           
  2329                           ;color.c: 25:     I2C_2_Master_Write(value);
  2330   0015AA  5003               	movf	color_writetoaddr@value^0,w,c
  2331   0015AC  EC0B  F00B         	call	_I2C_2_Master_Write
  2332                           
  2333                           ;color.c: 26:     I2C_2_Master_Stop();
  2334   0015B0  EC11  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2335   0015B4  0012               	return		;funcret
  2336   0015B6                     __end_of_color_writetoaddr:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _I2C_2_Master_Write *****************
  2340 ;; Defined at:
  2341 ;;		line 45 in file "i2c.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  data_byte       1    wreg     unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  data_byte       1    1[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;Total ram usage:        1 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 1
  2362 ;; This function calls:
  2363 ;;		_I2C_2_Master_Idle
  2364 ;; This function is called by:
  2365 ;;		_color_writetoaddr
  2366 ;;		_color_read_Red
  2367 ;;		_color_read_Blue
  2368 ;;		_color_read_Green
  2369 ;;		_color_read_Clear
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text17
  2374   001616                     __ptext17:
  2375                           	callstack 0
  2376   001616                     _I2C_2_Master_Write:
  2377                           	callstack 27
  2378                           
  2379                           ;incstack = 0
  2380                           ;I2C_2_Master_Write@data_byte stored from wreg
  2381   001616  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2382   001618                     
  2383                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2384   001618  ECB7  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2385   00161C                     
  2386                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2387   00161C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2388   001620  0012               	return		;funcret
  2389   001622                     __end_of_I2C_2_Master_Write:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _I2C_2_Master_Stop *****************
  2393 ;; Defined at:
  2394 ;;		line 39 in file "i2c.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 1
  2415 ;; This function calls:
  2416 ;;		_I2C_2_Master_Idle
  2417 ;; This function is called by:
  2418 ;;		_color_writetoaddr
  2419 ;;		_color_read_Red
  2420 ;;		_color_read_Blue
  2421 ;;		_color_read_Green
  2422 ;;		_color_read_Clear
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text18
  2427   001622                     __ptext18:
  2428                           	callstack 0
  2429   001622                     _I2C_2_Master_Stop:
  2430                           	callstack 27
  2431   001622                     
  2432                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2433   001622  ECB7  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2434   001626                     
  2435                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2436   001626  010E               	movlb	14	; () banked
  2437   001628  85DA               	bsf	218,2,b	;volatile
  2438   00162A                     
  2439                           ; BSR set to: 14
  2440   00162A  0012               	return		;funcret
  2441   00162C                     __end_of_I2C_2_Master_Stop:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _I2C_2_Master_Start *****************
  2445 ;; Defined at:
  2446 ;;		line 27 in file "i2c.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 1
  2467 ;; This function calls:
  2468 ;;		_I2C_2_Master_Idle
  2469 ;; This function is called by:
  2470 ;;		_color_writetoaddr
  2471 ;;		_color_read_Red
  2472 ;;		_color_read_Blue
  2473 ;;		_color_read_Green
  2474 ;;		_color_read_Clear
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text19
  2479   00162C                     __ptext19:
  2480                           	callstack 0
  2481   00162C                     _I2C_2_Master_Start:
  2482                           	callstack 27
  2483   00162C                     
  2484                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2485   00162C  ECB7  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2486   001630                     
  2487                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2488   001630  010E               	movlb	14	; () banked
  2489   001632  81DA               	bsf	218,0,b	;volatile
  2490   001634                     
  2491                           ; BSR set to: 14
  2492   001634  0012               	return		;funcret
  2493   001636                     __end_of_I2C_2_Master_Start:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _I2C_2_Master_Idle *****************
  2497 ;; Defined at:
  2498 ;;		line 22 in file "i2c.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;Total ram usage:        1 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_I2C_2_Master_Start
  2522 ;;		_I2C_2_Master_Stop
  2523 ;;		_I2C_2_Master_Write
  2524 ;;		_I2C_2_Master_RepStart
  2525 ;;		_I2C_2_Master_Read
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text20
  2530   00156E                     __ptext20:
  2531                           	callstack 0
  2532   00156E                     _I2C_2_Master_Idle:
  2533                           	callstack 27
  2534   00156E                     l236:
  2535   00156E  010E               	movlb	14	; () banked
  2536   001570  B5D8               	btfsc	216,2,b	;volatile
  2537   001572  EFBD  F00A         	goto	u181
  2538   001576  EFBF  F00A         	goto	u180
  2539   00157A                     u181:
  2540   00157A  EFB7  F00A         	goto	l236
  2541   00157E                     u180:
  2542   00157E                     
  2543                           ; BSR set to: 14
  2544   00157E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2545   001582  0E1F               	movlw	31
  2546   001584  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2547   001586  A4D8               	btfss	status,2,c
  2548   001588  EFC8  F00A         	goto	u191
  2549   00158C  EFCA  F00A         	goto	u190
  2550   001590                     u191:
  2551   001590  EFB7  F00A         	goto	l236
  2552   001594                     u190:
  2553   001594                     
  2554                           ; BSR set to: 14
  2555   001594  0012               	return		;funcret
  2556   001596                     __end_of_I2C_2_Master_Idle:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _I2C_2_Master_Init *****************
  2560 ;; Defined at:
  2561 ;;		line 4 in file "i2c.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_color_click_init
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text21
  2589   00151A                     __ptext21:
  2590                           	callstack 0
  2591   00151A                     _I2C_2_Master_Init:
  2592                           	callstack 29
  2593   00151A                     
  2594                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2595   00151A  010E               	movlb	14	; () banked
  2596   00151C  51D9               	movf	217,w,b	;volatile
  2597   00151E  0BF0               	andlw	-16
  2598   001520  0908               	iorlw	8
  2599   001522  6FD9               	movwf	217,b	;volatile
  2600   001524                     
  2601                           ; BSR set to: 14
  2602                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2603   001524  8BD9               	bsf	217,5,b	;volatile
  2604                           
  2605                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2606   001526  0E9F               	movlw	159
  2607   001528  6FD6               	movwf	214,b	;volatile
  2608   00152A                     
  2609                           ; BSR set to: 14
  2610                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2611   00152A  8A84               	bsf	132,5,c	;volatile
  2612   00152C                     
  2613                           ; BSR set to: 14
  2614                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2615   00152C  8C84               	bsf	132,6,c	;volatile
  2616   00152E                     
  2617                           ; BSR set to: 14
  2618                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2619   00152E  9BA7               	bcf	167,5,b	;volatile
  2620   001530                     
  2621                           ; BSR set to: 14
  2622                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2623   001530  9DA7               	bcf	167,6,b	;volatile
  2624                           
  2625                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2626   001532  0E1D               	movlw	29
  2627   001534  6F1D               	movwf	29,b	;volatile
  2628                           
  2629                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2630   001536  0E1E               	movlw	30
  2631   001538  6F1C               	movwf	28,b	;volatile
  2632                           
  2633                           ;i2c.c: 18:   RD5PPS=0x1C;
  2634   00153A  0E1C               	movlw	28
  2635   00153C  6F6F               	movwf	111,b	;volatile
  2636                           
  2637                           ;i2c.c: 19:   RD6PPS=0x1B;
  2638   00153E  0E1B               	movlw	27
  2639   001540  6F70               	movwf	112,b	;volatile
  2640   001542                     
  2641                           ; BSR set to: 14
  2642   001542  0012               	return		;funcret
  2643   001544                     __end_of_I2C_2_Master_Init:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _buggy_lights_init *****************
  2647 ;; Defined at:
  2648 ;;		line 4 in file "buggy_lights.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		None
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text22
  2676   001544                     __ptext22:
  2677                           	callstack 0
  2678   001544                     _buggy_lights_init:
  2679                           	callstack 30
  2680   001544                     
  2681                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2682   001544  9884               	bcf	132,4,c	;volatile
  2683                           
  2684                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2685   001546  9288               	bcf	136,1,c	;volatile
  2686                           
  2687                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2688   001548  9684               	bcf	132,3,c	;volatile
  2689                           
  2690                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2691   00154A  9086               	bcf	134,0,c	;volatile
  2692                           
  2693                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2694   00154C  9088               	bcf	136,0,c	;volatile
  2695                           
  2696                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  2697   00154E  887C               	bsf	124,4,c	;volatile
  2698                           
  2699                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  2700   001550  8280               	bsf	128,1,c	;volatile
  2701                           
  2702                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  2703   001552  867C               	bsf	124,3,c	;volatile
  2704                           
  2705                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  2706   001554  807E               	bsf	126,0,c	;volatile
  2707                           
  2708                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  2709   001556  8080               	bsf	128,0,c	;volatile
  2710                           
  2711                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2712   001558  9E84               	bcf	132,7,c	;volatile
  2713                           
  2714                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2715   00155A  9688               	bcf	136,3,c	;volatile
  2716                           
  2717                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2718   00155C  8E7C               	bsf	124,7,c	;volatile
  2719                           
  2720                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2721   00155E  8680               	bsf	128,3,c	;volatile
  2722                           
  2723                           ;buggy_lights.c: 30:     TRISGbits.TRISG1 = 0;
  2724   001560  9287               	bcf	135,1,c	;volatile
  2725                           
  2726                           ;buggy_lights.c: 31:     TRISAbits.TRISA4 = 0;
  2727   001562  9881               	bcf	129,4,c	;volatile
  2728                           
  2729                           ;buggy_lights.c: 32:     TRISFbits.TRISF7 = 0;
  2730   001564  9E86               	bcf	134,7,c	;volatile
  2731                           
  2732                           ;buggy_lights.c: 34:     LATGbits.LATG1 = 1;
  2733   001566  827F               	bsf	127,1,c	;volatile
  2734                           
  2735                           ;buggy_lights.c: 35:     LATAbits.LATA4 = 1;
  2736   001568  8879               	bsf	121,4,c	;volatile
  2737                           
  2738                           ;buggy_lights.c: 36:     LATFbits.LATF7 = 1;
  2739   00156A  8E7E               	bsf	126,7,c	;volatile
  2740   00156C  0012               	return		;funcret
  2741   00156E                     __end_of_buggy_lights_init:
  2742                           	callstack 0
  2743                           
  2744                           	psect	rparam
  2745   000000                     
  2746                           	psect	idloc
  2747                           
  2748                           ;Config register IDLOC0 @ 0x200000
  2749                           ;	unspecified, using default values
  2750   200000                     	org	2097152
  2751   200000  FFFF               	dw	65535
  2752                           
  2753                           ;Config register IDLOC1 @ 0x200002
  2754                           ;	unspecified, using default values
  2755   200002                     	org	2097154
  2756   200002  FFFF               	dw	65535
  2757                           
  2758                           ;Config register IDLOC2 @ 0x200004
  2759                           ;	unspecified, using default values
  2760   200004                     	org	2097156
  2761   200004  FFFF               	dw	65535
  2762                           
  2763                           ;Config register IDLOC3 @ 0x200006
  2764                           ;	unspecified, using default values
  2765   200006                     	org	2097158
  2766   200006  FFFF               	dw	65535
  2767                           
  2768                           ;Config register IDLOC4 @ 0x200008
  2769                           ;	unspecified, using default values
  2770   200008                     	org	2097160
  2771   200008  FFFF               	dw	65535
  2772                           
  2773                           ;Config register IDLOC5 @ 0x20000A
  2774                           ;	unspecified, using default values
  2775   20000A                     	org	2097162
  2776   20000A  FFFF               	dw	65535
  2777                           
  2778                           ;Config register IDLOC6 @ 0x20000C
  2779                           ;	unspecified, using default values
  2780   20000C                     	org	2097164
  2781   20000C  FFFF               	dw	65535
  2782                           
  2783                           ;Config register IDLOC7 @ 0x20000E
  2784                           ;	unspecified, using default values
  2785   20000E                     	org	2097166
  2786   20000E  FFFF               	dw	65535
  2787                           
  2788                           	psect	config
  2789                           
  2790                           ;Config register CONFIG1L @ 0x300000
  2791                           ;	External Oscillator mode Selection bits
  2792                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2793                           ;	Power-up default value for COSC bits
  2794                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2795   300000                     	org	3145728
  2796   300000  AA                 	db	170
  2797                           
  2798                           ;Config register CONFIG1H @ 0x300001
  2799                           ;	unspecified, using default values
  2800                           ;	Clock Out Enable bit
  2801                           ;	CLKOUTEN = 0x1, unprogrammed default
  2802                           ;	Clock Switch Enable bit
  2803                           ;	CSWEN = 0x1, unprogrammed default
  2804                           ;	Fail-Safe Clock Monitor Enable bit
  2805                           ;	FCMEN = 0x1, unprogrammed default
  2806   300001                     	org	3145729
  2807   300001  FF                 	db	255
  2808                           
  2809                           ;Config register CONFIG2L @ 0x300002
  2810                           ;	unspecified, using default values
  2811                           ;	Master Clear Enable bit
  2812                           ;	MCLRE = 0x1, unprogrammed default
  2813                           ;	Power-up Timer Enable bit
  2814                           ;	PWRTE = 0x1, unprogrammed default
  2815                           ;	Low-power BOR enable bit
  2816                           ;	LPBOREN = 0x1, unprogrammed default
  2817                           ;	Brown-out Reset Enable bits
  2818                           ;	BOREN = 0x3, unprogrammed default
  2819   300002                     	org	3145730
  2820   300002  FF                 	db	255
  2821                           
  2822                           ;Config register CONFIG2H @ 0x300003
  2823                           ;	unspecified, using default values
  2824                           ;	Brown Out Reset Voltage selection bits
  2825                           ;	BORV = 0x3, unprogrammed default
  2826                           ;	ZCD Disable bit
  2827                           ;	ZCD = 0x1, unprogrammed default
  2828                           ;	PPSLOCK bit One-Way Set Enable bit
  2829                           ;	PPS1WAY = 0x1, unprogrammed default
  2830                           ;	Stack Full/Underflow Reset Enable bit
  2831                           ;	STVREN = 0x1, unprogrammed default
  2832                           ;	Debugger Enable bit
  2833                           ;	DEBUG = 0x1, unprogrammed default
  2834                           ;	Extended Instruction Set Enable bit
  2835                           ;	XINST = 0x1, unprogrammed default
  2836   300003                     	org	3145731
  2837   300003  FF                 	db	255
  2838                           
  2839                           ;Config register CONFIG3L @ 0x300004
  2840                           ;	WDT Period Select bits
  2841                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2842                           ;	WDT operating mode
  2843                           ;	WDTE = OFF, WDT Disabled
  2844   300004                     	org	3145732
  2845   300004  9F                 	db	159
  2846                           
  2847                           ;Config register CONFIG3H @ 0x300005
  2848                           ;	unspecified, using default values
  2849                           ;	WDT Window Select bits
  2850                           ;	WDTCWS = 0x7, unprogrammed default
  2851                           ;	WDT input clock selector
  2852                           ;	WDTCCS = 0x7, unprogrammed default
  2853   300005                     	org	3145733
  2854   300005  FF                 	db	255
  2855                           
  2856                           ;Config register CONFIG4L @ 0x300006
  2857                           ;	unspecified, using default values
  2858                           ;	Write Protection Block 0
  2859                           ;	WRT0 = 0x1, unprogrammed default
  2860                           ;	Write Protection Block 1
  2861                           ;	WRT1 = 0x1, unprogrammed default
  2862                           ;	Write Protection Block 2
  2863                           ;	WRT2 = 0x1, unprogrammed default
  2864                           ;	Write Protection Block 3
  2865                           ;	WRT3 = 0x1, unprogrammed default
  2866                           ;	Write Protection Block 3
  2867                           ;	WRT4 = 0x1, unprogrammed default
  2868                           ;	Write Protection Block 3
  2869                           ;	WRT5 = 0x1, unprogrammed default
  2870                           ;	Write Protection Block 3
  2871                           ;	WRT6 = 0x1, unprogrammed default
  2872                           ;	Write Protection Block 3
  2873                           ;	WRT7 = 0x1, unprogrammed default
  2874   300006                     	org	3145734
  2875   300006  FF                 	db	255
  2876                           
  2877                           ;Config register CONFIG4H @ 0x300007
  2878                           ;	unspecified, using default values
  2879                           ;	Configuration Register Write Protection bit
  2880                           ;	WRTC = 0x1, unprogrammed default
  2881                           ;	Boot Block Write Protection bit
  2882                           ;	WRTB = 0x1, unprogrammed default
  2883                           ;	Data EEPROM Write Protection bit
  2884                           ;	WRTD = 0x1, unprogrammed default
  2885                           ;	Scanner Enable bit
  2886                           ;	SCANE = 0x1, unprogrammed default
  2887                           ;	Low Voltage Programming Enable bit
  2888                           ;	LVP = 0x1, unprogrammed default
  2889   300007                     	org	3145735
  2890   300007  FF                 	db	255
  2891                           
  2892                           ;Config register CONFIG5L @ 0x300008
  2893                           ;	unspecified, using default values
  2894                           ;	UserNVM Program Memory Code Protection bit
  2895                           ;	CP = 0x1, unprogrammed default
  2896                           ;	DataNVM Memory Code Protection bit
  2897                           ;	CPD = 0x1, unprogrammed default
  2898   300008                     	org	3145736
  2899   300008  FF                 	db	255
  2900                           
  2901                           ;Config register CONFIG5H @ 0x300009
  2902                           ;	unspecified, using default values
  2903   300009                     	org	3145737
  2904   300009  FF                 	db	255
  2905                           
  2906                           ;Config register CONFIG6L @ 0x30000A
  2907                           ;	unspecified, using default values
  2908                           ;	Table Read Protection Block 0
  2909                           ;	EBTR0 = 0x1, unprogrammed default
  2910                           ;	Table Read Protection Block 1
  2911                           ;	EBTR1 = 0x1, unprogrammed default
  2912                           ;	Table Read Protection Block 2
  2913                           ;	EBTR2 = 0x1, unprogrammed default
  2914                           ;	Table Read Protection Block 3
  2915                           ;	EBTR3 = 0x1, unprogrammed default
  2916                           ;	Table Read Protection Block 4
  2917                           ;	EBTR4 = 0x1, unprogrammed default
  2918                           ;	Table Read Protection Block 5
  2919                           ;	EBTR5 = 0x1, unprogrammed default
  2920                           ;	Table Read Protection Block 6
  2921                           ;	EBTR6 = 0x1, unprogrammed default
  2922                           ;	Table Read Protection Block 7
  2923                           ;	EBTR7 = 0x1, unprogrammed default
  2924   30000A                     	org	3145738
  2925   30000A  FF                 	db	255
  2926                           
  2927                           ;Config register CONFIG6H @ 0x30000B
  2928                           ;	unspecified, using default values
  2929                           ;	Boot Block Table Read Protection bit
  2930                           ;	EBTRB = 0x1, unprogrammed default
  2931   30000B                     	org	3145739
  2932   30000B  FF                 	db	255
  2933                           tosu	equ	0xFFF
  2934                           tosh	equ	0xFFE
  2935                           tosl	equ	0xFFD
  2936                           stkptr	equ	0xFFC
  2937                           pclatu	equ	0xFFB
  2938                           pclath	equ	0xFFA
  2939                           pcl	equ	0xFF9
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           indf0	equ	0xFEF
  2947                           postinc0	equ	0xFEE
  2948                           postdec0	equ	0xFED
  2949                           preinc0	equ	0xFEC
  2950                           plusw0	equ	0xFEB
  2951                           fsr0h	equ	0xFEA
  2952                           fsr0l	equ	0xFE9
  2953                           wreg	equ	0xFE8
  2954                           indf1	equ	0xFE7
  2955                           postinc1	equ	0xFE6
  2956                           postdec1	equ	0xFE5
  2957                           preinc1	equ	0xFE4
  2958                           plusw1	equ	0xFE3
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           bsr	equ	0xFE0
  2962                           indf2	equ	0xFDF
  2963                           postinc2	equ	0xFDE
  2964                           postdec2	equ	0xFDD
  2965                           preinc2	equ	0xFDC
  2966                           plusw2	equ	0xFDB
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        18
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      94
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1009DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1009DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2174$buffer	PTR unsigned char  size(2) Largest target is 0

    S2174$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    4290
                                             61 COMRAM    22    22      0
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                    _lights_flashing
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3571
                                             42 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3287
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     136
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lights_flashing                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _lights_flashing
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5E       1       98.9%
BITBIGSFRlllhhh     52      0       0      39        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRlllhhh     37      0       0      41        0.0%
BITBIGSFRlllhhh     2D      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      51        0.0%
BITBIGSFRllllll     26      0       0      55        0.0%
BITBIGSFRlllhhh     1E      0       0      45        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRlllhhl     11      0       0      46        0.0%
BITBIGSFRlllllh      F      0       0      53        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRlllllh      9      0       0      52        0.0%
BITBIGSFRlllhhh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRlllllh      6      0       0      50        0.0%
BITBIGSFRllllhl      5      0       0      49        0.0%
BITBIGSFRllllhh      3      0       0      48        0.0%
BITBIGSFRlllhhh      2      0       0      40        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      43        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRlllhl       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BITBIGSFRlhh         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      56        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Feb 28 14:07:30 2024

               _turn180Delay 00D8                           l25 156C                           l50 15B4  
                         l28 1324                           l47 14EE                 ___awdiv@sign 0006  
                        l233 1542                          l242 1634                          l138 13B4  
                        l251 1620                          l236 156E                          l239 1594  
                        l248 162A                          l357 15F0                          l366 15F4  
                        l375 1518                          l369 1608                          l378 15D2  
                        l732 1094                          l745 1144                          u320 1604  
                        u321 1600                          u180 157E                          u181 157A  
                        u190 1594                          u510 129E                          u191 1590  
                        u511 1296                          u530 12BE                          u531 12B6  
                        u550 12FA                          u551 12F2                          u528 12A0  
                        u800 10A8                          u801 10A4                          u570 1318  
                        u810 10C2                          u571 1310                          u811 10BE  
                        u548 12C0                          u740 0FE4                          u820 10DC  
                        u900 1496                          u741 0FE0                          u821 10D8  
                        u901 1492                          u750 0FFE                          u830 10FA  
                        u910 0E2E                          u751 0FFA                          u831 10F6  
                        u911 0E2A                          u568 12FC                          u760 1024  
                        u840 1110                          u920 0E72                          u761 1020  
                        u841 110C                          u921 0E6E                          u770 1042  
                        u850 1134                          u930 0E92                          u771 103E  
                        u851 1130                          u931 0E8E                          u588 131A  
                        u780 105E                          u860 1156                          u940 0EC8  
                        u781 105A                          u861 1152                          u941 0EC2  
                        u790 1084                          u870 1166                          u950 0ECA  
                        u791 1080                          u871 1162                          u880 118C  
                        u960 0F2A                          u881 1188                          u961 0F26  
                        u890 11BE                          u970 0F3A                          u891 11BA  
                        u971 0F36                          u980 0F4A                          u981 0F46  
                        u990 0F5A                          u991 0F56                          _abs 1488  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 00D4  
                       l2001 106E                         l2003 1074                         l2011 1096  
                       ?_abs 0007                         l2005 1084                         l2021 10C2  
                       l2013 109A                         l2101 0F86                         l1230 14BA  
                       l2007 108C                         l2031 10FA                         l2023 10CA  
                       l2015 10A8                         l2103 0F88                         l1223 1452  
                       l2041 1134                         l2033 1110                         l2025 10DC  
                       l2017 10B0                         l1217 0FD0                         l2105 0F9E  
                       l1242 11EE                         l1411 1618                         l2043 113C  
                       l2035 1118                         l2027 10E4                         l2019 10B4  
                       l1227 14A2                         l2051 1166                         l2131 1412  
                       l1413 161C                         l2141 1598                         l2037 111E  
                       l2029 10EC                         l2061 1488                         l1253 163C  
                       l2053 1170                         l2109 0FAA                         l2133 141A  
                       l1407 162C                         l1415 1622                         l2231 14F4  
                       l2039 1124                         l2063 1496                         l2055 118C  
                       l2047 1146                         l2071 0E44                         l2135 142A  
                       l1353 156E                         l1409 1630                         l1417 1626  
                       l2233 1500                         l2057 11BE                         l2049 1156  
                       l2081 0EAA                         l2073 0E48                         l2065 0E08  
                       l2137 144A                         l2241 1464                         l2401 1274  
                       l1451 1524                         l1355 157E                         l2251 14C0  
                       l1435 15F4                         l2235 1502                         l2091 0F2A  
                       l2083 0EB4                         l2075 0E52                         l2067 0E2E  
                       l1179 1486                         l2243 146C                         l2403 1280  
                       l1453 152A                         l2253 14CA                         l2261 1336  
                       l1437 1604                         l2229 14F0                         l2093 0F3A  
                       l2085 0ECC                         l2077 0E72                         l2069 0E36  
                       l2245 147C                         l2237 1454                         l2325 15B6  
                       l1455 152C                         l2255 14DA                         l2271 1390  
                       l2263 135C                         l1711 15EC                         l1703 15D4  
                       l2095 0F4A                         l2087 0EFC                         l2079 0E92  
                       l2239 145C                         l2327 15CA                         l1457 152E  
                       l1449 151A                         l2257 14E4                         l2249 14BC  
                       l2281 13B2                         l2273 139A                         l2265 1360  
                       l1713 15EE                         l1705 15DE                         l2097 0F5A  
                       l2089 0F18                         l2361 1208                         l1459 1530  
                       l2275 139C                         l2267 1384                         l2259 1326  
                       l1707 15E0                         l1571 128C                         l2099 0F6C  
                       l2371 1220                         l2363 1208                         l2277 13A6  
                       l2269 138E                         l1709 15EA                         l1573 12D0  
                       l2381 1240                         l2373 1228                         l2365 1214  
                       l2279 13A8                         l1575 12E8                         l2391 1260  
                       l2383 1244                         l2375 1230                         l2367 1218  
                       l2359 11F0                         l1569 1544                         l1577 1306  
                       l2393 1264                         l2385 124C                         l2377 1238  
                       l2369 121C                         l2395 1268                         l2387 1254  
                       l2379 123C                         l2397 1268                         l2389 125C  
                       l2399 1270                         l1971 0FE4                         l1981 100A  
                       l1973 0FEC                         l1991 1042                         l1983 1012  
                       l1975 0FF0                         l1967 0FD2                         l1993 1048  
                       l1985 1024                         l1977 0FFE                         l1969 0FD6  
                       l1995 105E                         l1987 102C                         l1979 1006  
                       l1997 1066                         l1989 1034                         l1999 1068  
                       STR_1 0E01                         u1000 0F9A                         u1001 0F96  
                       u1030 144A                         u1031 1446                         u1200 1518  
                       u1201 1514                 _BAUD4CONbits 0EE9                         _T2PR 0FBC  
                       u1707 12DA                         u1717 14D0                         u1697 11FA  
                       abs@a 0007                         _dbuf 009C                         _main 11F0  
                       _prec 00D2                         fsr1h 0FE2                         fsr2h 0FDA  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       start 0000                 ___param_bank 0000                        ??_abs 0009  
             _sendIntSerial4 15B6                        ?_main 0001              __end_of___awdiv 1096  
            __end_of___awmod 1146              ___awdiv@divisor 0003              ___awdiv@counter 0005  
               vfpfcnvrt@fmt 000C      __end_of_sendCharSerial4 160A   __end_of_I2C_2_Master_Start 1636  
 __end_of_I2C_2_Master_Write 1622                  _turningGear 0056                        _flags 005A  
                      _fputc 1146                        _width 00D0                        _putch 163C  
          _turnRight135Delay 00DA                        tablat 0FF5              _turnLeft90Delay 0054  
                      status 0FD8              __end_of_sprintf 1488              __initialization 13B6  
               __end_of_main 128C       __end_of_sendIntSerial4 15D4                       ??_main 003E  
              __activetblptr 0003                       ?_fputc 0001                       _CCPR1H 0FAA  
                     _CCPR2H 0FA6                       _CCPR3H 0F25                       _CCPR4H 0F21  
           ___awdiv@dividend 0001                       ?_putch 0001                       _RC0PPS 0E62  
                     _RC4REG 0EE3                       _RE2PPS 0E74                       _RD5PPS 0E6F  
                     _RC7PPS 0E69                       _RD6PPS 0E70                       _RE4PPS 0E76  
                     _RG6PPS 0E88                vfpfcnvrt@done 000F     __end_of_color_click_init 14F0  
                     _RX4PPS 0E15                       _TX4REG 0EE4             _turnLeft135Delay 00DC  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 0019              _lights_flashing 128C  
                  ??___awdiv 0005                    ??___awmod 0005              ?_sendIntSerial4 002B  
                     clear_0 13FC             ___awdiv@quotient 0007              ___awmod@divisor 0003  
                     isa$std 0001              ___awmod@counter 0005                       fputc@c 0001  
               __pdataCOMRAM 0054                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8             ?_sendCharSerial4 0001  
                     putch@c 0001             __end_of_vfprintf 1454            ??_initDCmotorsPWM 0003  
                  ??_sprintf 001E            _buggy_lights_init 1544                   __accesstop 0060  
    __end_of__initialization 140C           ?_buggy_lights_init 0001                ___rparam_used 0001  
             __pcstackCOMRAM 0001                 __pidataBANK0 160A          ??_buggy_lights_init 0001  
              __end_of_fputc 11F0                __end_of_putch 163E                      ??_fputc 0004  
  __end_of_buggy_lights_init 156E                      ??_putch 0001                   __pbssBANK0 0060  
    __end_of_lights_flashing 1326            _color_writetoaddr 1596                 _T2CLKCONbits 0FBF  
         ?_color_writetoaddr 0003          ??_color_writetoaddr 0004                      _SP4BRGH 0EE6  
                    _SP4BRGL 0EE5                      _SSP2ADD 0ED6                      _SSP2BUF 0ED5  
     color_writetoaddr@value 0003    __end_of_color_writetoaddr 15B6           _I2C_2_Master_Start 162C  
                 _initUSART4 15D4           _I2C_2_Master_Write 1616                      __Hparam 0000  
                    __Lparam 0000      sendStringSerial4@string 0002                      ___awdiv 0FD2  
                    ___awmod 1096          ?_I2C_2_Master_Start 0001          ?_I2C_2_Master_Write 0001  
                  ?_vfprintf 0016                 __psmallconst 0E00                      __pcinit 13B6  
                    __ramtop 0E00                      __ptext0 11F0                      __ptext1 15B6  
                    __ptext2 1454                      __ptext3 1412                      __ptext4 0E08  
                    __ptext5 1146                      __ptext6 163C                      __ptext7 1488  
                    __ptext8 1096                      __ptext9 0FD2                    _T2CONbits 0FBD  
           ___awmod@dividend 0001                    _T2HLTbits 0FBE                _RxBufWriteCnt 005E  
                    _sprintf 1454         ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002  
       end_of_initialization 140C                      fputc@fp 0003            ?_color_click_init 0001  
           ?_lights_flashing 0001           ??_color_click_init 0005             ??_sendIntSerial4 002D  
          __end_of_vfpfcnvrt 0FD2                      postdec1 0FE5                      postdec2 0FDD  
                    postinc0 0FEE                      postinc1 0FE6                      postinc2 0FDE  
           vfpfcnvrt@convarg 0011                   ??_vfprintf 0019              _initDCmotorsPWM 1326  
       sendIntSerial4@string 002D                    _TRISAbits 0F81                    _TRISCbits 0F83  
                  _TRISDbits 0F84                    _TRISEbits 0F85                    _TRISFbits 0F86  
                  _TRISGbits 0F87                    _TRISHbits 0F88     color_writetoaddr@address 0004  
                _CCP1CONbits 0FAB                 _EUSART4RXbuf 00BC                 _EUSART4TXbuf 0060  
                _CCP2CONbits 0FA7                  _CCP3CONbits 0F26                  ?_initUSART4 0001  
                _CCP4CONbits 0F22    sendCharSerial4@charToSend 0001                   main@motorL 0042  
                 main@motorR 004B                  vfpfcnvrt@ap 000D                  vfpfcnvrt@cp 0010  
                vfpfcnvrt@fp 000B                __pidataCOMRAM 1636          start_initialization 13B6  
                __end_of_abs 14BC                _TxBufWriteCnt 005C             _turnRight90Delay 00DE  
    __end_of_initDCmotorsPWM 13B6                  vfprintf@fmt 0017                  __pdataBANK0 00D4  
                __pbssCOMRAM 005A                     ?___awdiv 0001                     ?___awmod 0001  
                __smallconst 0E00            _I2C_2_Master_Idle 156E            _I2C_2_Master_Init 151A  
          _I2C_2_Master_Stop 1622                 _RxBufReadCnt 005D           ?_I2C_2_Master_Idle 0001  
         ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001                _headbuttDelay 00D6  
   initDCmotorsPWM@PWMperiod 0001                     ?_sprintf 001A                    _rampDelay 0059  
          _sendStringSerial4 14F0          ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001  
                   _LATAbits 0F79          ??_I2C_2_Master_Stop 0002                     _LATCbits 0F7B  
                   _LATDbits 0F7C                     _LATEbits 0F7D                     _LATFbits 0F7E  
                   _LATGbits 0F7F                     _LATHbits 0F80           ?_sendStringSerial4 0002  
                   _PIE4bits 0E2D                     _PIR4bits 0E37             ?_initDCmotorsPWM 0001  
          ??_sendCharSerial4 0001                     _SSP2CON2 0EDA          ??_sendStringSerial4 0003  
                   _SSP2STAT 0ED8                    _vfpfcnvrt 0E08    __end_of_I2C_2_Master_Idle 1596  
  __end_of_I2C_2_Master_Init 1544    __end_of_I2C_2_Master_Stop 162C  I2C_2_Master_Write@data_byte 0002  
                  main@count 0040                 _TxBufReadCnt 005B                   vfpfcnvrt@c 0015  
                  copy_data0 13CA                    copy_data1 13EA    __end_of_sendStringSerial4 151A  
               ??_initUSART4 0001                     __Hrparam 0000                   vfprintf@ap 0018  
                   __Lrparam 0000                   vfprintf@fp 0016                   ?_vfpfcnvrt 000B  
                 _ANSELDbits 0EA7                   sprintf@fmt 001B           __end_of_initUSART4 15F2  
                   __ptext10 14F0                     __ptext11 15F2                     __ptext20 156E  
                   __ptext12 128C                     __ptext21 151A                     __ptext13 15D4  
                   __ptext22 1544                     __ptext14 1326                     __ptext15 14BC  
                   __ptext16 1596                     __ptext17 1616                     __ptext18 1622  
                   __ptext19 162C                 _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA  
                   isa$xinst 0000                   _RC4STAbits 0EE7                     _vfprintf 1412  
                  sprintf@ap 001E                 _topGearRight 0057                  ??_vfpfcnvrt 000E  
           _color_click_init 14BC        sendIntSerial4@integer 002B                  _topGearLeft 0058  
                   sprintf@f 001F                     sprintf@s 001A                   _SSP2DATPPS 0E1D  
          ??_lights_flashing 0001                   _SSP2CLKPPS 0E1C                   _TX4STAbits 0EE8  
            _sendCharSerial4 15F2  
