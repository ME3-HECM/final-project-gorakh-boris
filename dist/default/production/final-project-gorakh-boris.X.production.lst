

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 18:27:16 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 18/08/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F67K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataBANK0
    85   001778                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _squareDelay
    89   001778  012C               	dw	300
    90                           
    91                           ;initializer for _headbuttDelay
    92   00177A  0046               	dw	70
    93                           
    94                           ;initializer for _turn180Delay
    95   00177C  01FE               	dw	510
    96                           
    97                           ;initializer for _turnRight135Delay
    98   00177E  012C               	dw	300
    99                           
   100                           ;initializer for _turnLeft135Delay
   101   001780  012C               	dw	300
   102                           
   103                           ;initializer for _turnRight90Delay
   104   001782  00AF               	dw	175
   105                           
   106                           ;initializer for _turnLeft90Delay
   107   001784  00AF               	dw	175
   108                           
   109                           ;initializer for _manoeuvre_pointer
   110   001786  A2                 	db	low _trail_manoeuvre
   111                           
   112                           ;initializer for _timer_low_pointer
   113   001787  B6                 	db	low _trail_timer_low
   114                           
   115                           ;initializer for _timer_high_pointer
   116   001788  DF                 	db	low _trail_timer_high
   117                           
   118                           ;initializer for _turningGear
   119   001789  2A                 	db	42
   120                           
   121                           ;initializer for _topGearRight
   122   00178A  14                 	db	20
   123                           
   124                           ;initializer for _topGearLeft
   125   00178B  14                 	db	20
   126                           
   127                           ;initializer for _rampDelay
   128   00178C  08                 	db	8
   129                           
   130                           ;initializer for _trail_timer_high
   131   00178D  03                 	db	3
   132   00178E  06                 	db	6
   133   00178F  03                 	db	3
   134   001790  06                 	db	6
   135   001791  03                 	db	3
   136   001792  06                 	db	6
   137   001793  03                 	db	3
   138   001794  06                 	db	6
   139   001795  03                 	db	3
   140   001796  06                 	db	6
   141   001797  03                 	db	3
   142   001798  06                 	db	6
   143   001799  03                 	db	3
   144   00179A  06                 	db	6
   145   00179B  03                 	db	3
   146   00179C  06                 	db	6
   147   00179D  03                 	db	3
   148   00179E  06                 	db	6
   149   00179F  03                 	db	3
   150   0017A0  06                 	db	6
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _LATEbits	set	3965
   155   000000                     _TRISEbits	set	3973
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISGbits	set	3975
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATHbits	set	3968
   160   000000                     _TRISFbits	set	3974
   161   000000                     _TRISHbits	set	3976
   162   000000                     _SSP2CON2bits	set	3802
   163   000000                     _RX4PPS	set	3605
   164   000000                     _SSP2CLKPPS	set	3612
   165   000000                     _SSP2DATPPS	set	3613
   166   000000                     _RC7PPS	set	3689
   167   000000                     _RE2PPS	set	3700
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATDbits	set	3964
   170   000000                     _TRISDbits	set	3972
   171   000000                     _PORTFbits	set	3982
   172   000000                     _T2PR	set	4028
   173   000000                     _T2CONbits	set	4029
   174   000000                     _CCPR2H	set	4006
   175   000000                     _CCPR1H	set	4010
   176   000000                     _TRISCbits	set	3971
   177   000000                     _TRISAbits	set	3969
   178   000000                     _LATCbits	set	3963
   179   000000                     _RE4PPS	set	3702
   180   000000                     _RG6PPS	set	3720
   181   000000                     _RD5PPS	set	3695
   182   000000                     _ANSELDbits	set	3751
   183   000000                     _SSP2ADD	set	3798
   184   000000                     _SSP2CON1bits	set	3801
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _CCP2CONbits	set	4007
   196   000000                     _CCP3CONbits	set	3878
   197   000000                     _CCP4CONbits	set	3874
   198   000000                     _RC4REG	set	3811
   199   000000                     _SP4BRGL	set	3813
   200   000000                     _TX4STAbits	set	3816
   201   000000                     _BAUD4CONbits	set	3817
   202   000000                     _SSP2CON2	set	3802
   203   000000                     _SSP2STAT	set	3800
   204   000000                     _ANSELFbits	set	3764
   205   000000                     _SSP2BUF	set	3797
   206   000000                     _PIE0bits	set	3625
   207   000000                     _PIE4bits	set	3629
   208   000000                     _PIR4bits	set	3639
   209   000000                     _RC0PPS	set	3682
   210   000000                     _RD6PPS	set	3696
   211   000000                     _PIR0bits	set	3635
   212   000000                     _INTCONbits	set	4082
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_1:
   219                           
   220                           ; BSR set to: 14
   221   000E01  25                 	db	37
   222   000E02  64                 	db	100	;'d'
   223   000E03  20                 	db	32
   224   000E04  0D                 	db	13
   225   000E05  00                 	db	0
   226   000E06                     STR_2:
   227                           
   228                           ; BSR set to: 14
   229   000E06  25                 	db	37
   230   000E07  64                 	db	100	;'d'
   231   000E08  20                 	db	32
   232   000E09  00                 	db	0
   233   000E0A  00                 	db	0	; dummy byte at the end
   234   000000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238   001634                     __pcinit:
   239                           	callstack 0
   240   001634                     start_initialization:
   241                           	callstack 0
   242   001634                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK0 (41 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247   001634  0E78               	movlw	low __pidataBANK0
   248   001636  6EF6               	movwf	tblptrl,c
   249   001638  0E17               	movlw	high __pidataBANK0
   250   00163A  6EF7               	movwf	tblptrh,c
   251   00163C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252   00163E  6EF8               	movwf	tblptru,c
   253   001640  EE00  F0CA         	lfsr	0,__pdataBANK0
   254   001644  EE10 F029          	lfsr	1,41
   255   001648                     copy_data0:
   256   001648  0009               	tblrd		*+
   257   00164A  CFF5 FFEE          	movff	tablat,postinc0
   258   00164E  50E5               	movf	postdec1,w,c
   259   001650  50E1               	movf	fsr1l,w,c
   260   001652  E1FA               	bnz	copy_data0
   261                           
   262                           ; Clear objects allocated to BANK1 (60 bytes)
   263   001654  EE01  F000         	lfsr	0,__pbssBANK1
   264   001658  0E3C               	movlw	60
   265   00165A                     clear_0:
   266   00165A  6AEE               	clrf	postinc0,c
   267   00165C  06E8               	decf	wreg,f,c
   268   00165E  E1FD               	bnz	clear_0
   269                           
   270                           ; Clear objects allocated to BANK0 (106 bytes)
   271   001660  EE00  F060         	lfsr	0,__pbssBANK0
   272   001664  0E6A               	movlw	106
   273   001666                     clear_1:
   274   001666  6AEE               	clrf	postinc0,c
   275   001668  06E8               	decf	wreg,f,c
   276   00166A  E1FD               	bnz	clear_1
   277   00166C                     end_of_initialization:
   278                           	callstack 0
   279   00166C                     __end_of__initialization:
   280                           	callstack 0
   281   00166C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282   00166E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283   001670  0100               	movlb	0
   284   001672  EF01  F008         	goto	_main	;jump to C main() function
   285                           
   286                           	psect	bssBANK0
   287   000060                     __pbssBANK0:
   288                           	callstack 0
   289   000060                     _dbuf:
   290                           	callstack 0
   291   000060                     	ds	32
   292   000080                     _EUSART4RXbuf:
   293                           	callstack 0
   294   000080                     	ds	20
   295   000094                     _nout:
   296                           	callstack 0
   297   000094                     	ds	2
   298   000096                     _width:
   299                           	callstack 0
   300   000096                     	ds	2
   301   000098                     _prec:
   302                           	callstack 0
   303   000098                     	ds	2
   304   00009A                     _flags:
   305                           	callstack 0
   306   00009A                     	ds	1
   307   00009B                     _manoeuvre_count:
   308                           	callstack 0
   309   00009B                     	ds	1
   310   00009C                     _returnFlag:
   311                           	callstack 0
   312   00009C                     	ds	1
   313   00009D                     _returning:
   314                           	callstack 0
   315   00009D                     	ds	1
   316   00009E                     _TxBufReadCnt:
   317                           	callstack 0
   318   00009E                     	ds	1
   319   00009F                     _TxBufWriteCnt:
   320                           	callstack 0
   321   00009F                     	ds	1
   322   0000A0                     _RxBufReadCnt:
   323                           	callstack 0
   324   0000A0                     	ds	1
   325   0000A1                     _RxBufWriteCnt:
   326                           	callstack 0
   327   0000A1                     	ds	1
   328   0000A2                     _trail_manoeuvre:
   329                           	callstack 0
   330   0000A2                     	ds	20
   331   0000B6                     _trail_timer_low:
   332                           	callstack 0
   333   0000B6                     	ds	20
   334                           
   335                           	psect	dataBANK0
   336   0000CA                     __pdataBANK0:
   337                           	callstack 0
   338   0000CA                     _squareDelay:
   339                           	callstack 0
   340   0000CA                     	ds	2
   341   0000CC                     _headbuttDelay:
   342                           	callstack 0
   343   0000CC                     	ds	2
   344   0000CE                     _turn180Delay:
   345                           	callstack 0
   346   0000CE                     	ds	2
   347   0000D0                     _turnRight135Delay:
   348                           	callstack 0
   349   0000D0                     	ds	2
   350   0000D2                     _turnLeft135Delay:
   351                           	callstack 0
   352   0000D2                     	ds	2
   353   0000D4                     _turnRight90Delay:
   354                           	callstack 0
   355   0000D4                     	ds	2
   356   0000D6                     _turnLeft90Delay:
   357                           	callstack 0
   358   0000D6                     	ds	2
   359   0000D8                     _manoeuvre_pointer:
   360                           	callstack 0
   361   0000D8                     	ds	1
   362   0000D9                     _timer_low_pointer:
   363                           	callstack 0
   364   0000D9                     	ds	1
   365   0000DA                     _timer_high_pointer:
   366                           	callstack 0
   367   0000DA                     	ds	1
   368   0000DB                     _turningGear:
   369                           	callstack 0
   370   0000DB                     	ds	1
   371   0000DC                     _topGearRight:
   372                           	callstack 0
   373   0000DC                     	ds	1
   374   0000DD                     _topGearLeft:
   375                           	callstack 0
   376   0000DD                     	ds	1
   377   0000DE                     _rampDelay:
   378                           	callstack 0
   379   0000DE                     	ds	1
   380   0000DF                     _trail_timer_high:
   381                           	callstack 0
   382   0000DF                     	ds	20
   383                           
   384                           	psect	bssBANK1
   385   000100                     __pbssBANK1:
   386                           	callstack 0
   387   000100                     _EUSART4TXbuf:
   388                           	callstack 0
   389   000100                     	ds	60
   390                           
   391                           	psect	cstackCOMRAM
   392   000001                     __pcstackCOMRAM:
   393                           	callstack 0
   394   000001                     ??_I2C_2_Master_Idle:
   395   000001                     ?___awdiv:
   396                           	callstack 0
   397   000001                     ?___awmod:
   398                           	callstack 0
   399   000001                     sendCharSerial4@charToSend:
   400                           	callstack 0
   401   000001                     initDCmotorsPWM@PWMperiod:
   402                           	callstack 0
   403   000001                     ___awdiv@dividend:
   404                           	callstack 0
   405   000001                     ___awmod@dividend:
   406                           	callstack 0
   407   000001                     fputc@c:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411   000001                     	ds	1
   412   000002                     ??_I2C_2_Master_Read:
   413   000002                     I2C_2_Master_Write@data_byte:
   414                           	callstack 0
   415   000002                     sendStringSerial4@string:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1
   419   000002                     	ds	1
   420   000003                     color_writetoaddr@value:
   421                           	callstack 0
   422   000003                     I2C_2_Master_Read@ack:
   423                           	callstack 0
   424   000003                     fputc@fp:
   425                           	callstack 0
   426   000003                     ___awdiv@divisor:
   427                           	callstack 0
   428   000003                     ___awmod@divisor:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x2
   432   000003                     	ds	1
   433   000004                     ??_fputc:
   434   000004                     color_writetoaddr@address:
   435                           	callstack 0
   436   000004                     I2C_2_Master_Read@tmp:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x3
   440   000004                     	ds	1
   441   000005                     ??_color_click_init:
   442   000005                     ?_color_read_Red:
   443                           	callstack 0
   444   000005                     ?_color_read_Blue:
   445                           	callstack 0
   446   000005                     ?_color_read_Green:
   447                           	callstack 0
   448   000005                     ?_color_read_Clear:
   449                           	callstack 0
   450   000005                     ___awdiv@counter:
   451                           	callstack 0
   452   000005                     ___awmod@counter:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x4
   456   000005                     	ds	1
   457   000006                     ___awdiv@sign:
   458                           	callstack 0
   459   000006                     ___awmod@sign:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x5
   463   000006                     	ds	1
   464   000007                     ??_color_read_Red:
   465   000007                     ??_color_read_Blue:
   466   000007                     ??_color_read_Green:
   467   000007                     ??_color_read_Clear:
   468   000007                     ?_abs:
   469                           	callstack 0
   470   000007                     ___awdiv@quotient:
   471                           	callstack 0
   472   000007                     abs@a:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x6
   476   000007                     	ds	2
   477   000009                     ??_abs:
   478                           
   479                           ; 1 bytes @ 0x8
   480   000009                     	ds	1
   481   00000A                     color_read_Red@tmp:
   482                           	callstack 0
   483   00000A                     color_read_Blue@tmp:
   484                           	callstack 0
   485   00000A                     color_read_Green@tmp:
   486                           	callstack 0
   487   00000A                     color_read_Clear@tmp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x9
   491   00000A                     	ds	1
   492   00000B                     ?_vfpfcnvrt:
   493                           	callstack 0
   494   00000B                     vfpfcnvrt@fp:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xA
   498   00000B                     	ds	1
   499   00000C                     getRGBCval@p:
   500                           	callstack 0
   501   00000C                     vfpfcnvrt@fmt:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xB
   505   00000C                     	ds	1
   506   00000D                     vfpfcnvrt@ap:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0xC
   510   00000D                     	ds	1
   511   00000E                     ??_vfpfcnvrt:
   512                           
   513                           ; 1 bytes @ 0xD
   514   00000E                     	ds	1
   515   00000F                     vfpfcnvrt@done:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0xE
   519   00000F                     	ds	1
   520   000010                     vfpfcnvrt@cnt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xF
   524   000010                     	ds	2
   525   000012                     vfpfcnvrt@cp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x11
   529   000012                     	ds	1
   530   000013                     vfpfcnvrt@convarg:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x12
   534   000013                     	ds	4
   535   000017                     vfpfcnvrt@c:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x16
   539   000017                     	ds	1
   540   000018                     ?_vfprintf:
   541                           	callstack 0
   542   000018                     vfprintf@fp:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x17
   546   000018                     	ds	1
   547   000019                     vfprintf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x18
   551   000019                     	ds	1
   552   00001A                     vfprintf@ap:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x19
   556   00001A                     	ds	1
   557   00001B                     vfprintf@cfmt:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x1A
   561   00001B                     	ds	1
   562   00001C                     ?_sprintf:
   563                           	callstack 0
   564   00001C                     sprintf@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x1B
   568   00001C                     	ds	2
   569   00001E                     sprintf@fmt:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x1D
   573   00001E                     	ds	3
   574   000021                     sprintf@ret:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578   000021                     	ds	2
   579   000023                     sprintf@ap:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x22
   583   000023                     	ds	1
   584   000024                     sprintf@f:
   585                           	callstack 0
   586                           
   587                           ; 12 bytes @ 0x23
   588   000024                     	ds	12
   589   000030                     sendIntSerial4@integer:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2F
   593   000030                     	ds	2
   594   000032                     sendIntSerial4@string:
   595                           	callstack 0
   596                           
   597                           ; 17 bytes @ 0x31
   598   000032                     	ds	17
   599   000043                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x42
   602   000043                     	ds	2
   603   000045                     main@measured_colour:
   604                           	callstack 0
   605                           
   606                           ; 8 bytes @ 0x44
   607   000045                     	ds	8
   608   00004D                     main@motorL:
   609                           	callstack 0
   610                           
   611                           ; 9 bytes @ 0x4C
   612   00004D                     	ds	9
   613   000056                     main@motorR:
   614                           	callstack 0
   615                           
   616                           ; 9 bytes @ 0x55
   617   000056                     	ds	9
   618                           
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 26 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  motorR          9   85[COMRAM] struct DC_motor
   629 ;;  motorL          9   76[COMRAM] struct DC_motor
   630 ;;  measured_col    8   68[COMRAM] struct RGBC_val
   631 ;;  PWMcycle        2    0        unsigned int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;Total ram usage:       28 bytes
   646 ;; Hardware stack levels required when called: 7
   647 ;; This function calls:
   648 ;;		_Timer0_init
   649 ;;		_buggy_lights_init
   650 ;;		_color_click_init
   651 ;;		_getRGBCval
   652 ;;		_initDCmotorsPWM
   653 ;;		_initUSART4
   654 ;;		_sendIntSerial4
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661   001002                     __ptext0:
   662                           	callstack 0
   663   001002                     _main:
   664                           	callstack 24
   665   001002                     
   666                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   667   001002  0E00               	movlw	0
   668   001004  6E4D               	movwf	main@motorL^0,c
   669                           
   670                           ;main.c: 33:     motorL.direction = 1;
   671   001006  0E01               	movlw	1
   672   001008  6E4E               	movwf	(main@motorL+1)^0,c
   673                           
   674                           ;main.c: 34:     motorL.brakemode = 1;
   675   00100A  0E01               	movlw	1
   676   00100C  6E4F               	movwf	(main@motorL+2)^0,c
   677   00100E                     
   678                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   679   00100E  0E00               	movlw	0
   680   001010  6E51               	movwf	(main@motorL+4)^0,c
   681   001012  0E63               	movlw	99
   682   001014  6E50               	movwf	(main@motorL+3)^0,c
   683   001016                     
   684                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   685   001016  0EAA               	movlw	170
   686   001018  6E52               	movwf	(main@motorL+5)^0,c
   687   00101A  0E0F               	movlw	15
   688   00101C  6E53               	movwf	(main@motorL+6)^0,c
   689   00101E                     
   690                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   691   00101E  0EA6               	movlw	166
   692   001020  6E54               	movwf	(main@motorL+7)^0,c
   693   001022  0E0F               	movlw	15
   694   001024  6E55               	movwf	(main@motorL+8)^0,c
   695                           
   696                           ;main.c: 39:     motorR.power = 0;
   697   001026  0E00               	movlw	0
   698   001028  6E56               	movwf	main@motorR^0,c
   699                           
   700                           ;main.c: 40:     motorR.direction = 1;
   701   00102A  0E01               	movlw	1
   702   00102C  6E57               	movwf	(main@motorR+1)^0,c
   703                           
   704                           ;main.c: 41:     motorR.brakemode = 1;
   705   00102E  0E01               	movlw	1
   706   001030  6E58               	movwf	(main@motorR+2)^0,c
   707   001032                     
   708                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   709   001032  0E00               	movlw	0
   710   001034  6E5A               	movwf	(main@motorR+4)^0,c
   711   001036  0E63               	movlw	99
   712   001038  6E59               	movwf	(main@motorR+3)^0,c
   713   00103A                     
   714                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   715   00103A  0E25               	movlw	37
   716   00103C  6E5B               	movwf	(main@motorR+5)^0,c
   717   00103E  0E0F               	movlw	15
   718   001040  6E5C               	movwf	(main@motorR+6)^0,c
   719   001042                     
   720                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   721   001042  0E21               	movlw	33
   722   001044  6E5D               	movwf	(main@motorR+7)^0,c
   723   001046  0E0F               	movlw	15
   724   001048  6E5E               	movwf	(main@motorR+8)^0,c
   725   00104A                     
   726                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   727   00104A  0E00               	movlw	0
   728   00104C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   729   00104E  0E63               	movlw	99
   730   001050  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   731   001052  EC85  F009         	call	_initDCmotorsPWM	;wreg free
   732                           
   733                           ;main.c: 47:     buggy_lights_init();
   734   001056  EC90  F00B         	call	_buggy_lights_init	;wreg free
   735   00105A                     
   736                           ;main.c: 48:     color_click_init();
   737   00105A  EC76  F00B         	call	_color_click_init	;wreg free
   738   00105E                     
   739                           ;main.c: 49:     initUSART4();
   740   00105E  EC1A  F00C         	call	_initUSART4	;wreg free
   741   001062                     
   742                           ;main.c: 50:     Timer0_init();
   743   001062  ECE5  F00B         	call	_Timer0_init	;wreg free
   744   001066                     
   745                           ;main.c: 54:         TRISDbits.TRISD7 = 0;
   746   001066  9E84               	bcf	132,7,c	;volatile
   747   001068                     
   748                           ;main.c: 55:         TRISHbits.TRISH3 = 0;
   749   001068  9688               	bcf	136,3,c	;volatile
   750   00106A                     
   751                           ;main.c: 57:         LATDbits.LATD7 = 1;
   752   00106A  8E7C               	bsf	124,7,c	;volatile
   753   00106C                     
   754                           ;main.c: 58:         LATHbits.LATH3 = 1;
   755   00106C  8680               	bsf	128,3,c	;volatile
   756   00106E                     
   757                           ;main.c: 62:         TRISFbits.TRISF2 = 1;
   758   00106E  8486               	bsf	134,2,c	;volatile
   759   001070                     
   760                           ;main.c: 63:         TRISFbits.TRISF3 = 1;
   761   001070  8686               	bsf	134,3,c	;volatile
   762   001072                     
   763                           ;main.c: 65:         ANSELFbits.ANSELF2 = 0;
   764   001072  010E               	movlb	14	; () banked
   765   001074  95B4               	bcf	180,2,b	;volatile
   766   001076                     
   767                           ; BSR set to: 14
   768                           ;main.c: 66:         ANSELFbits.ANSELF3 = 0;
   769   001076  97B4               	bcf	180,3,b	;volatile
   770   001078                     l363:
   771   001078  B48E               	btfsc	142,2,c	;volatile
   772   00107A  EF41  F008         	goto	u1551
   773   00107E  EF43  F008         	goto	u1550
   774   001082                     u1551:
   775   001082  EF3C  F008         	goto	l363
   776   001086                     u1550:
   777   001086                     l2847:
   778                           
   779                           ;main.c: 85:         getRGBCval(&measured_colour);
   780   001086  0E45               	movlw	low main@measured_colour
   781   001088  6E0C               	movwf	getRGBCval@p^0,c
   782   00108A  EC29  F00A         	call	_getRGBCval	;wreg free
   783   00108E                     
   784                           ;main.c: 86:         sendIntSerial4((int)measured_colour.C);
   785   00108E  C04B  F030         	movff	main@measured_colour+6,sendIntSerial4@integer
   786   001092  C04C  F031         	movff	main@measured_colour+7,sendIntSerial4@integer+1
   787   001096  ECF9  F00B         	call	_sendIntSerial4	;wreg free
   788   00109A                     
   789                           ;main.c: 87:         LATDbits.LATD7 = !LATDbits.LATD7;
   790   00109A  AE7C               	btfss	124,7,c	;volatile
   791   00109C  EF52  F008         	goto	u1561
   792   0010A0  EF56  F008         	goto	u1560
   793   0010A4                     u1561:
   794   0010A4  6A43               	clrf	??_main^0,c
   795   0010A6  2A43               	incf	??_main^0,f,c
   796   0010A8  EF57  F008         	goto	u1578
   797   0010AC                     u1560:
   798   0010AC  6A43               	clrf	??_main^0,c
   799   0010AE                     u1578:
   800   0010AE  3243               	rrcf	??_main^0,f,c
   801   0010B0  3243               	rrcf	??_main^0,f,c
   802   0010B2  507C               	movf	124,w,c	;volatile
   803   0010B4  1843               	xorwf	??_main^0,w,c
   804   0010B6  0B7F               	andlw	-129
   805   0010B8  1843               	xorwf	??_main^0,w,c
   806   0010BA  6E7C               	movwf	124,c	;volatile
   807   0010BC                     
   808                           ;main.c: 88:         _delay((unsigned long)((200)*(64000000/4000.0)));
   809   0010BC  0E11               	movlw	17
   810   0010BE  6E44               	movwf	(??_main+1)^0,c
   811   0010C0  0E3C               	movlw	60
   812   0010C2  6E43               	movwf	??_main^0,c
   813   0010C4  0ECB               	movlw	203
   814   0010C6                     u2107:
   815   0010C6  2EE8               	decfsz	wreg,f,c
   816   0010C8  D7FE               	bra	u2107
   817   0010CA  2E43               	decfsz	??_main^0,f,c
   818   0010CC  D7FC               	bra	u2107
   819   0010CE  2E44               	decfsz	(??_main+1)^0,f,c
   820   0010D0  D7FA               	bra	u2107
   821   0010D2  0000               	nop	
   822   0010D4  EF43  F008         	goto	l2847
   823   0010D8  EF1C  F000         	goto	start
   824   0010DC                     __end_of_main:
   825                           	callstack 0
   826                           
   827 ;; *************** function _sendIntSerial4 *****************
   828 ;; Defined at:
   829 ;;		line 43 in file "serial.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  integer         2   47[COMRAM] int 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  string         17   49[COMRAM] unsigned char [17]
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;Total ram usage:       19 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 6
   850 ;; This function calls:
   851 ;;		_sendStringSerial4
   852 ;;		_sprintf
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text1
   859   0017F2                     __ptext1:
   860                           	callstack 0
   861   0017F2                     _sendIntSerial4:
   862                           	callstack 24
   863   0017F2                     
   864                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   865   0017F2  0E32               	movlw	low sendIntSerial4@string
   866   0017F4  6E1C               	movwf	sprintf@s^0,c
   867   0017F6  6A1D               	clrf	(sprintf@s+1)^0,c
   868   0017F8  0E01               	movlw	low STR_1
   869   0017FA  6E1E               	movwf	sprintf@fmt^0,c
   870   0017FC  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   871   001800  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   872   001804  ECF4  F00A         	call	_sprintf	;wreg free
   873   001808                     
   874                           ;serial.c: 46:     sendStringSerial4(string);
   875   001808  0E32               	movlw	low sendIntSerial4@string
   876   00180A  6E02               	movwf	sendStringSerial4@string^0,c
   877   00180C  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   878   00180E  ECCD  F009         	call	_sendStringSerial4	;wreg free
   879   001812  0012               	return		;funcret
   880   001814                     __end_of_sendIntSerial4:
   881                           	callstack 0
   882                           
   883 ;; *************** function _sprintf *****************
   884 ;; Defined at:
   885 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  s               2   27[COMRAM] PTR unsigned char 
   888 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   889 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   890 ;;		 -> STR_3(4), STR_1(5), 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  f              12   35[COMRAM] struct _IO_FILE
   893 ;;  ret             2   32[COMRAM] int 
   894 ;;  ap              1   34[COMRAM] PTR void [1]
   895 ;;		 -> ?_sprintf(2), 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2   27[COMRAM] int 
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   905 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;Total ram usage:       20 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 5
   912 ;; This function calls:
   913 ;;		_vfprintf
   914 ;; This function is called by:
   915 ;;		_sendIntSerial4
   916 ;;		_sendArrayCharSerial4
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text2
   921   0015E8                     __ptext2:
   922                           	callstack 0
   923   0015E8                     _sprintf:
   924                           	callstack 24
   925   0015E8  0E1F               	movlw	low (?_sprintf+3)
   926   0015EA  6E23               	movwf	sprintf@ap^0,c
   927   0015EC  C01C  F024         	movff	sprintf@s,sprintf@f
   928   0015F0  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
   929   0015F4  0E00               	movlw	0
   930   0015F6  6E28               	movwf	(sprintf@f+4)^0,c
   931   0015F8  0E00               	movlw	0
   932   0015FA  6E27               	movwf	(sprintf@f+3)^0,c
   933   0015FC  0E00               	movlw	0
   934   0015FE  6E2F               	movwf	(sprintf@f+11)^0,c
   935   001600  0E00               	movlw	0
   936   001602  6E2E               	movwf	(sprintf@f+10)^0,c
   937   001604  0E24               	movlw	low sprintf@f
   938   001606  6E18               	movwf	vfprintf@fp^0,c
   939   001608  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
   940   00160C  0E23               	movlw	low sprintf@ap
   941   00160E  6E1A               	movwf	vfprintf@ap^0,c
   942   001610  ECFE  F009         	call	_vfprintf	;wreg free
   943   001614  C018  F021         	movff	?_vfprintf,sprintf@ret
   944   001618  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
   945   00161C  5027               	movf	(sprintf@f+3)^0,w,c
   946   00161E  241C               	addwf	sprintf@s^0,w,c
   947   001620  6ED9               	movwf	fsr2l,c
   948   001622  5028               	movf	(sprintf@f+4)^0,w,c
   949   001624  201D               	addwfc	(sprintf@s+1)^0,w,c
   950   001626  6EDA               	movwf	fsr2h,c
   951   001628  6ADF               	clrf	indf2,c
   952   00162A  C021  F01C         	movff	sprintf@ret,?_sprintf
   953   00162E  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
   954   001632  0012               	return		;funcret
   955   001634                     __end_of_sprintf:
   956                           	callstack 0
   957                           
   958 ;; *************** function _vfprintf *****************
   959 ;; Defined at:
   960 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
   963 ;;		 -> sprintf@f(12), 
   964 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
   965 ;;		 -> STR_3(4), STR_1(5), 
   966 ;;  ap              1   25[COMRAM] PTR PTR void 
   967 ;;		 -> sprintf@ap(1), 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
   970 ;;		 -> STR_3(4), STR_1(5), 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2   23[COMRAM] int 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   984 ;;Total ram usage:        4 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 4
   987 ;; This function calls:
   988 ;;		_vfpfcnvrt
   989 ;; This function is called by:
   990 ;;		_sprintf
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text3
   995   0013FC                     __ptext3:
   996                           	callstack 0
   997   0013FC                     _vfprintf:
   998                           	callstack 24
   999   0013FC                     
  1000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1001   0013FC  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1002   001400                     
  1003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1004   001400  0E00               	movlw	0
  1005   001402  0100               	movlb	0	; () banked
  1006   001404  6F95               	movwf	(_nout+1)& (0+255),b
  1007   001406  0E00               	movlw	0
  1008   001408  6F94               	movwf	_nout& (0+255),b
  1009                           
  1010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1011   00140A  EF14  F00A         	goto	l2549
  1012   00140E                     l2547:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1016   00140E  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1017   001412  0E1B               	movlw	low vfprintf@cfmt
  1018   001414  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1019   001416  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1020   00141A  EC06  F007         	call	_vfpfcnvrt	;wreg free
  1021   00141E  500B               	movf	?_vfpfcnvrt^0,w,c
  1022   001420  0100               	movlb	0	; () banked
  1023   001422  2794               	addwf	_nout& (0+255),f,b
  1024   001424  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1025   001426  2395               	addwfc	(_nout+1)& (0+255),f,b
  1026   001428                     l2549:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1030   001428  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1031   00142C                     	if	1	;There is more than 1 active tblptr byte
  1032   00142C  0E0E               	movlw	high __smallconst
  1033   00142E  6EF7               	movwf	tblptrh,c
  1034   001430                     	endif
  1035   001430                     	if	0	;tblptru may be non-zero
  1036   001430                     	endif
  1037   001430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1038   001430  0E00               	movlw	low (__smallconst shr (0+16))
  1039   001432  6EF8               	movwf	tblptru,c
  1040   001434                     	endif
  1041   001434  0008               	tblrd		*
  1042   001436  50F5               	movf	tablat,w,c
  1043   001438  0900               	iorlw	0
  1044   00143A  A4D8               	btfss	status,2,c
  1045   00143C  EF22  F00A         	goto	u1441
  1046   001440  EF24  F00A         	goto	u1440
  1047   001444                     u1441:
  1048   001444  EF07  F00A         	goto	l2547
  1049   001448                     u1440:
  1050   001448                     
  1051                           ; BSR set to: 0
  1052                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1053   001448  C094  F018         	movff	_nout,?_vfprintf
  1054   00144C  C095  F019         	movff	_nout+1,?_vfprintf+1
  1055   001450                     
  1056                           ; BSR set to: 0
  1057   001450  0012               	return		;funcret
  1058   001452                     __end_of_vfprintf:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _vfpfcnvrt *****************
  1062 ;; Defined at:
  1063 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1066 ;;		 -> sprintf@f(12), 
  1067 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1068 ;;		 -> vfprintf@cfmt(1), 
  1069 ;;  ap              1   12[COMRAM] PTR PTR void 
  1070 ;;		 -> sprintf@ap(1), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  convarg         4   18[COMRAM] struct .
  1073 ;;  cnt             2   15[COMRAM] int 
  1074 ;;  c               1   22[COMRAM] unsigned char 
  1075 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1076 ;;		 -> STR_3(4), STR_1(5), 
  1077 ;;  done            1   14[COMRAM] _Bool 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   10[COMRAM] int 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1087 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;Total ram usage:       13 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 3
  1094 ;; This function calls:
  1095 ;;		___awdiv
  1096 ;;		___awmod
  1097 ;;		_abs
  1098 ;;		_fputc
  1099 ;; This function is called by:
  1100 ;;		_vfprintf
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text4
  1105   000E0C                     __ptext4:
  1106                           	callstack 0
  1107   000E0C                     _vfpfcnvrt:
  1108                           	callstack 24
  1109   000E0C                     
  1110                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1111   000E0C  0E00               	movlw	0
  1112   000E0E  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1113   000E10  0E00               	movlw	0
  1114   000E12  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1115   000E14                     
  1116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1117   000E14  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1118   000E16  6ED9               	movwf	fsr2l,c
  1119   000E18  6ADA               	clrf	fsr2h,c
  1120   000E1A  CFDF FFF6          	movff	indf2,tblptrl
  1121   000E1E                     	if	1	;There is more than 1 active tblptr byte
  1122   000E1E  0E0E               	movlw	high __smallconst
  1123   000E20  6EF7               	movwf	tblptrh,c
  1124   000E22                     	endif
  1125   000E22                     	if	0	;tblptru may be non-zero
  1126   000E22                     	endif
  1127   000E22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1128   000E22  0E00               	movlw	low (__smallconst shr (0+16))
  1129   000E24  6EF8               	movwf	tblptru,c
  1130   000E26                     	endif
  1131   000E26  0008               	tblrd		*
  1132   000E28  50F5               	movf	tablat,w,c
  1133   000E2A  0A25               	xorlw	37
  1134   000E2C  A4D8               	btfss	status,2,c
  1135   000E2E  EF1B  F007         	goto	u1341
  1136   000E32  EF1D  F007         	goto	u1340
  1137   000E36                     u1341:
  1138   000E36  EFE7  F007         	goto	l2493
  1139   000E3A                     u1340:
  1140   000E3A                     
  1141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1142   000E3A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1143   000E3C  6ED9               	movwf	fsr2l,c
  1144   000E3E  6ADA               	clrf	fsr2h,c
  1145   000E40  2ADF               	incf	indf2,f,c
  1146   000E42                     
  1147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1148   000E42  0E00               	movlw	0
  1149   000E44  0100               	movlb	0	; () banked
  1150   000E46  6F97               	movwf	(_width+1)& (0+255),b
  1151   000E48  0E00               	movlw	0
  1152   000E4A  6F96               	movwf	_width& (0+255),b
  1153   000E4C  C096  F09A         	movff	_width,_flags
  1154   000E50                     
  1155                           ; BSR set to: 0
  1156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1157   000E50  6998               	setf	_prec& (0+255),b
  1158   000E52  6999               	setf	(_prec+1)& (0+255),b
  1159   000E54                     
  1160                           ; BSR set to: 0
  1161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1162   000E54  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1163   000E56  6ED9               	movwf	fsr2l,c
  1164   000E58  6ADA               	clrf	fsr2h,c
  1165   000E5A  50DF               	movf	indf2,w,c
  1166   000E5C  6E12               	movwf	vfpfcnvrt@cp^0,c
  1167   000E5E                     
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1170   000E5E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1171   000E62                     	if	1	;There is more than 1 active tblptr byte
  1172   000E62  0E0E               	movlw	high __smallconst
  1173   000E64  6EF7               	movwf	tblptrh,c
  1174   000E66                     	endif
  1175   000E66                     	if	0	;tblptru may be non-zero
  1176   000E66                     	endif
  1177   000E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1178   000E66  0E00               	movlw	low (__smallconst shr (0+16))
  1179   000E68  6EF8               	movwf	tblptru,c
  1180   000E6A                     	endif
  1181   000E6A  0008               	tblrd		*
  1182   000E6C  50F5               	movf	tablat,w,c
  1183   000E6E  0A64               	xorlw	100
  1184   000E70  B4D8               	btfsc	status,2,c
  1185   000E72  EF3D  F007         	goto	u1351
  1186   000E76  EF3F  F007         	goto	u1350
  1187   000E7A                     u1351:
  1188   000E7A  EF4F  F007         	goto	l2457
  1189   000E7E                     u1350:
  1190   000E7E                     
  1191                           ; BSR set to: 0
  1192   000E7E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1193   000E82                     	if	1	;There is more than 1 active tblptr byte
  1194   000E82  0E0E               	movlw	high __smallconst
  1195   000E84  6EF7               	movwf	tblptrh,c
  1196   000E86                     	endif
  1197   000E86                     	if	0	;tblptru may be non-zero
  1198   000E86                     	endif
  1199   000E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1200   000E86  0E00               	movlw	low (__smallconst shr (0+16))
  1201   000E88  6EF8               	movwf	tblptru,c
  1202   000E8A                     	endif
  1203   000E8A  0008               	tblrd		*
  1204   000E8C  50F5               	movf	tablat,w,c
  1205   000E8E  0A69               	xorlw	105
  1206   000E90  A4D8               	btfss	status,2,c
  1207   000E92  EF4D  F007         	goto	u1361
  1208   000E96  EF4F  F007         	goto	u1360
  1209   000E9A                     u1361:
  1210   000E9A  EFDD  F007         	goto	l2487
  1211   000E9E                     u1360:
  1212   000E9E                     l2457:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1216   000E9E  500D               	movf	vfpfcnvrt@ap^0,w,c
  1217   000EA0  6ED9               	movwf	fsr2l,c
  1218   000EA2  6ADA               	clrf	fsr2h,c
  1219   000EA4  0E02               	movlw	2
  1220   000EA6  26DF               	addwf	indf2,f,c
  1221   000EA8  5CDF               	subwf	indf2,w,c
  1222   000EAA  6ED9               	movwf	fsr2l,c
  1223   000EAC  6ADA               	clrf	fsr2h,c
  1224   000EAE  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1225   000EB2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1226   000EB6                     
  1227                           ; BSR set to: 0
  1228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1229   000EB6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1230   000EB8  6ED9               	movwf	fsr2l,c
  1231   000EBA  6ADA               	clrf	fsr2h,c
  1232   000EBC  2812               	incf	vfpfcnvrt@cp^0,w,c
  1233   000EBE  6EDF               	movwf	indf2,c
  1234   000EC0                     
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1237   000EC0  0E20               	movlw	32
  1238   000EC2  6E17               	movwf	vfpfcnvrt@c^0,c
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1241   000EC4  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1242   000EC6  EF67  F007         	goto	u1371
  1243   000ECA  EF6A  F007         	goto	u1370
  1244   000ECE                     u1371:
  1245   000ECE  0E01               	movlw	1
  1246   000ED0  EF6B  F007         	goto	u1380
  1247   000ED4                     u1370:
  1248   000ED4  0E00               	movlw	0
  1249   000ED6                     u1380:
  1250   000ED6  6E0F               	movwf	vfpfcnvrt@done^0,c
  1251   000ED8                     l2463:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1254   000ED8  0617               	decf	vfpfcnvrt@c^0,f,c
  1255   000EDA  5017               	movf	vfpfcnvrt@c^0,w,c
  1256   000EDC  0F60               	addlw	low _dbuf
  1257   000EDE  6ED9               	movwf	fsr2l,c
  1258   000EE0  6ADA               	clrf	fsr2h,c
  1259   000EE2  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1260   000EE6  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1261   000EEA  0E00               	movlw	0
  1262   000EEC  6E04               	movwf	(___awmod@divisor+1)^0,c
  1263   000EEE  0E0A               	movlw	10
  1264   000EF0  6E03               	movwf	___awmod@divisor^0,c
  1265   000EF2  EC2D  F009         	call	___awmod	;wreg free
  1266   000EF6  C001  F007         	movff	?___awmod,abs@a
  1267   000EFA  C002  F008         	movff	?___awmod+1,abs@a+1
  1268   000EFE  EC5C  F00B         	call	_abs	;wreg free
  1269   000F02  5007               	movf	?_abs^0,w,c
  1270   000F04  0F30               	addlw	48
  1271   000F06  6EDF               	movwf	indf2,c
  1272   000F08                     
  1273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1274   000F08  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1275   000F0C  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1276   000F10  0E00               	movlw	0
  1277   000F12  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1278   000F14  0E0A               	movlw	10
  1279   000F16  6E03               	movwf	___awdiv@divisor^0,c
  1280   000F18  EC6E  F008         	call	___awdiv	;wreg free
  1281   000F1C  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1282   000F20  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1283   000F24                     
  1284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1285   000F24  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1286   000F26  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1287   000F28                     
  1288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1289   000F28  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1290   000F2A  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1291   000F2C  B4D8               	btfsc	status,2,c
  1292   000F2E  EF9B  F007         	goto	u1391
  1293   000F32  EF9D  F007         	goto	u1390
  1294   000F36                     u1391:
  1295   000F36  EFA5  F007         	goto	l2473
  1296   000F3A                     u1390:
  1297   000F3A  5017               	movf	vfpfcnvrt@c^0,w,c
  1298   000F3C  A4D8               	btfss	status,2,c
  1299   000F3E  EFA3  F007         	goto	u1401
  1300   000F42  EFA5  F007         	goto	u1400
  1301   000F46                     u1401:
  1302   000F46  EF6C  F007         	goto	l2463
  1303   000F4A                     u1400:
  1304   000F4A                     l2473:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1307   000F4A  5017               	movf	vfpfcnvrt@c^0,w,c
  1308   000F4C  B4D8               	btfsc	status,2,c
  1309   000F4E  EFAB  F007         	goto	u1411
  1310   000F52  EFAD  F007         	goto	u1410
  1311   000F56                     u1411:
  1312   000F56  EFCE  F007         	goto	l2485
  1313   000F5A                     u1410:
  1314   000F5A  500F               	movf	vfpfcnvrt@done^0,w,c
  1315   000F5C  B4D8               	btfsc	status,2,c
  1316   000F5E  EFB3  F007         	goto	u1421
  1317   000F62  EFB5  F007         	goto	u1420
  1318   000F66                     u1421:
  1319   000F66  EFCE  F007         	goto	l2485
  1320   000F6A                     u1420:
  1321   000F6A                     
  1322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1323   000F6A  0617               	decf	vfpfcnvrt@c^0,f,c
  1324   000F6C  5017               	movf	vfpfcnvrt@c^0,w,c
  1325   000F6E  0F60               	addlw	low _dbuf
  1326   000F70  6ED9               	movwf	fsr2l,c
  1327   000F72  6ADA               	clrf	fsr2h,c
  1328   000F74  0E2D               	movlw	45
  1329   000F76  6EDF               	movwf	indf2,c
  1330   000F78                     
  1331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1332   000F78  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1333   000F7A  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1334   000F7C  EFCE  F007         	goto	l2485
  1335   000F80                     l2481:
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1338   000F80  5017               	movf	vfpfcnvrt@c^0,w,c
  1339   000F82  0F60               	addlw	low _dbuf
  1340   000F84  6ED9               	movwf	fsr2l,c
  1341   000F86  6ADA               	clrf	fsr2h,c
  1342   000F88  50DF               	movf	indf2,w,c
  1343   000F8A  6E0E               	movwf	??_vfpfcnvrt^0,c
  1344   000F8C  500E               	movf	??_vfpfcnvrt^0,w,c
  1345   000F8E  6E01               	movwf	fputc@c^0,c
  1346   000F90  6A02               	clrf	(fputc@c+1)^0,c
  1347   000F92  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1348   000F96  ECD0  F008         	call	_fputc	;wreg free
  1349   000F9A  2A17               	incf	vfpfcnvrt@c^0,f,c
  1350   000F9C                     l2485:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1353   000F9C  0E20               	movlw	32
  1354   000F9E  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1355   000FA0  A4D8               	btfss	status,2,c
  1356   000FA2  EFD5  F007         	goto	u1431
  1357   000FA6  EFD7  F007         	goto	u1430
  1358   000FAA                     u1431:
  1359   000FAA  EFC0  F007         	goto	l2481
  1360   000FAE                     u1430:
  1361   000FAE                     
  1362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1363   000FAE  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1364   000FB2  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1365   000FB6  EF00  F008         	goto	l1391
  1366   000FBA                     l2487:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1370   000FBA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1371   000FBC  6ED9               	movwf	fsr2l,c
  1372   000FBE  6ADA               	clrf	fsr2h,c
  1373   000FC0  2ADF               	incf	indf2,f,c
  1374   000FC2                     
  1375                           ; BSR set to: 0
  1376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1377   000FC2  0E00               	movlw	0
  1378   000FC4  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1379   000FC6  0E00               	movlw	0
  1380   000FC8  6E0B               	movwf	?_vfpfcnvrt^0,c
  1381   000FCA  EF00  F008         	goto	l1391
  1382   000FCE                     l2493:
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1385   000FCE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1386   000FD0  6ED9               	movwf	fsr2l,c
  1387   000FD2  6ADA               	clrf	fsr2h,c
  1388   000FD4  CFDF FFF6          	movff	indf2,tblptrl
  1389   000FD8                     	if	1	;There is more than 1 active tblptr byte
  1390   000FD8  0E0E               	movlw	high __smallconst
  1391   000FDA  6EF7               	movwf	tblptrh,c
  1392   000FDC                     	endif
  1393   000FDC                     	if	0	;tblptru may be non-zero
  1394   000FDC                     	endif
  1395   000FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1396   000FDC  0E00               	movlw	low (__smallconst shr (0+16))
  1397   000FDE  6EF8               	movwf	tblptru,c
  1398   000FE0                     	endif
  1399   000FE0  0008               	tblrd		*
  1400   000FE2  50F5               	movf	tablat,w,c
  1401   000FE4  6E01               	movwf	fputc@c^0,c
  1402   000FE6  6A02               	clrf	(fputc@c+1)^0,c
  1403   000FE8  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1404   000FEC  ECD0  F008         	call	_fputc	;wreg free
  1405   000FF0                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1407   000FF0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1408   000FF2  6ED9               	movwf	fsr2l,c
  1409   000FF4  6ADA               	clrf	fsr2h,c
  1410   000FF6  2ADF               	incf	indf2,f,c
  1411   000FF8                     
  1412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1413   000FF8  0E00               	movlw	0
  1414   000FFA  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1415   000FFC  0E01               	movlw	1
  1416   000FFE  6E0B               	movwf	?_vfpfcnvrt^0,c
  1417   001000                     l1391:
  1418   001000  0012               	return		;funcret
  1419   001002                     __end_of_vfpfcnvrt:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _fputc *****************
  1423 ;; Defined at:
  1424 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  c               2    0[COMRAM] int 
  1427 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1428 ;;		 -> sprintf@f(12), 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2    0[COMRAM] int 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1440 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1442 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;Total ram usage:        8 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 2
  1447 ;; This function calls:
  1448 ;;		_putch
  1449 ;; This function is called by:
  1450 ;;		_vfpfcnvrt
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text5
  1455   0011A0                     __ptext5:
  1456                           	callstack 0
  1457   0011A0                     _fputc:
  1458                           	callstack 24
  1459   0011A0  5003               	movf	fputc@fp^0,w,c
  1460   0011A2  B4D8               	btfsc	status,2,c
  1461   0011A4  EFD6  F008         	goto	u1131
  1462   0011A8  EFD8  F008         	goto	u1130
  1463   0011AC                     u1131:
  1464   0011AC  EFE0  F008         	goto	l2341
  1465   0011B0                     u1130:
  1466   0011B0  5003               	movf	fputc@fp^0,w,c
  1467   0011B2  A4D8               	btfss	status,2,c
  1468   0011B4  EFDE  F008         	goto	u1141
  1469   0011B8  EFE0  F008         	goto	u1140
  1470   0011BC                     u1141:
  1471   0011BC  EFE5  F008         	goto	l2343
  1472   0011C0                     u1140:
  1473   0011C0                     l2341:
  1474   0011C0  5001               	movf	fputc@c^0,w,c
  1475   0011C2  EC4A  F00C         	call	_putch
  1476   0011C6  EF2C  F009         	goto	l1416
  1477   0011CA                     l2343:
  1478   0011CA  5003               	movf	fputc@fp^0,w,c
  1479   0011CC  6ED9               	movwf	fsr2l,c
  1480   0011CE  6ADA               	clrf	fsr2h,c
  1481   0011D0  0E0A               	movlw	10
  1482   0011D2  26D9               	addwf	fsr2l,f,c
  1483   0011D4  50DE               	movf	postinc2,w,c
  1484   0011D6  10DE               	iorwf	postinc2,w,c
  1485   0011D8  B4D8               	btfsc	status,2,c
  1486   0011DA  EFF1  F008         	goto	u1151
  1487   0011DE  EFF3  F008         	goto	u1150
  1488   0011E2                     u1151:
  1489   0011E2  EF0C  F009         	goto	l2347
  1490   0011E6                     u1150:
  1491   0011E6  5003               	movf	fputc@fp^0,w,c
  1492   0011E8  6ED9               	movwf	fsr2l,c
  1493   0011EA  6ADA               	clrf	fsr2h,c
  1494   0011EC  0E0A               	movlw	10
  1495   0011EE  26D9               	addwf	fsr2l,f,c
  1496   0011F0  5003               	movf	fputc@fp^0,w,c
  1497   0011F2  6EE1               	movwf	fsr1l,c
  1498   0011F4  6AE2               	clrf	fsr1h,c
  1499   0011F6  0E03               	movlw	3
  1500   0011F8  26E1               	addwf	fsr1l,f,c
  1501   0011FA  50DE               	movf	postinc2,w,c
  1502   0011FC  5CE6               	subwf	postinc1,w,c
  1503   0011FE  50E6               	movf	postinc1,w,c
  1504   001200  0A80               	xorlw	128
  1505   001202  6E08               	movwf	(??_fputc+4)^0,c
  1506   001204  50DE               	movf	postinc2,w,c
  1507   001206  0A80               	xorlw	128
  1508   001208  5808               	subwfb	(??_fputc+4)^0,w,c
  1509   00120A  B0D8               	btfsc	status,0,c
  1510   00120C  EF0A  F009         	goto	u1161
  1511   001210  EF0C  F009         	goto	u1160
  1512   001214                     u1161:
  1513   001214  EF2C  F009         	goto	l1416
  1514   001218                     u1160:
  1515   001218                     l2347:
  1516   001218  5003               	movf	fputc@fp^0,w,c
  1517   00121A  6ED9               	movwf	fsr2l,c
  1518   00121C  6ADA               	clrf	fsr2h,c
  1519   00121E  0E03               	movlw	3
  1520   001220  26D9               	addwf	fsr2l,f,c
  1521   001222  CFDE F004          	movff	postinc2,??_fputc
  1522   001226  CFDD F005          	movff	postdec2,??_fputc+1
  1523   00122A  5003               	movf	fputc@fp^0,w,c
  1524   00122C  6ED9               	movwf	fsr2l,c
  1525   00122E  6ADA               	clrf	fsr2h,c
  1526   001230  CFDE F006          	movff	postinc2,??_fputc+2
  1527   001234  CFDD F007          	movff	postdec2,??_fputc+3
  1528   001238  5004               	movf	??_fputc^0,w,c
  1529   00123A  2406               	addwf	(??_fputc+2)^0,w,c
  1530   00123C  6ED9               	movwf	fsr2l,c
  1531   00123E  5005               	movf	(??_fputc+1)^0,w,c
  1532   001240  2007               	addwfc	(??_fputc+3)^0,w,c
  1533   001242  6EDA               	movwf	fsr2h,c
  1534   001244  C001  FFDF         	movff	fputc@c,indf2
  1535   001248  5003               	movf	fputc@fp^0,w,c
  1536   00124A  6ED9               	movwf	fsr2l,c
  1537   00124C  6ADA               	clrf	fsr2h,c
  1538   00124E  0E03               	movlw	3
  1539   001250  26D9               	addwf	fsr2l,f,c
  1540   001252  2ADE               	incf	postinc2,f,c
  1541   001254  0E00               	movlw	0
  1542   001256  22DD               	addwfc	postdec2,f,c
  1543   001258                     l1416:
  1544   001258  0012               	return		;funcret
  1545   00125A                     __end_of_fputc:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _putch *****************
  1549 ;; Defined at:
  1550 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  c               1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  c               1    0[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_fputc
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text6
  1579   001894                     __ptext6:
  1580                           	callstack 0
  1581   001894                     _putch:
  1582                           	callstack 24
  1583   001894  0012               	return		;funcret
  1584   001896                     __end_of_putch:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _abs *****************
  1588 ;; Defined at:
  1589 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  a               2    6[COMRAM] int 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  2    6[COMRAM] int 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;Total ram usage:        4 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_vfpfcnvrt
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text7
  1618   0016B8                     __ptext7:
  1619                           	callstack 0
  1620   0016B8                     _abs:
  1621                           	callstack 25
  1622   0016B8  BE08               	btfsc	(abs@a+1)^0,7,c
  1623   0016BA  EF61  F00B         	goto	u1171
  1624   0016BE  EF63  F00B         	goto	u1170
  1625   0016C2                     u1171:
  1626   0016C2  EF69  F00B         	goto	l1401
  1627   0016C6                     u1170:
  1628   0016C6  C007  F007         	movff	abs@a,?_abs
  1629   0016CA  C008  F008         	movff	abs@a+1,?_abs+1
  1630   0016CE  EF75  F00B         	goto	l1404
  1631   0016D2                     l1401:
  1632   0016D2  C007  F009         	movff	abs@a,??_abs
  1633   0016D6  C008  F00A         	movff	abs@a+1,??_abs+1
  1634   0016DA  1E09               	comf	??_abs^0,f,c
  1635   0016DC  1E0A               	comf	(??_abs+1)^0,f,c
  1636   0016DE  4A09               	infsnz	??_abs^0,f,c
  1637   0016E0  2A0A               	incf	(??_abs+1)^0,f,c
  1638   0016E2  C009  F007         	movff	??_abs,?_abs
  1639   0016E6  C00A  F008         	movff	??_abs+1,?_abs+1
  1640   0016EA                     l1404:
  1641   0016EA  0012               	return		;funcret
  1642   0016EC                     __end_of_abs:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function ___awmod *****************
  1646 ;; Defined at:
  1647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  dividend        2    0[COMRAM] int 
  1650 ;;  divisor         2    2[COMRAM] int 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  sign            1    5[COMRAM] unsigned char 
  1653 ;;  counter         1    4[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2    0[COMRAM] int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;Total ram usage:        6 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_vfpfcnvrt
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text8
  1678   00125A                     __ptext8:
  1679                           	callstack 0
  1680   00125A                     ___awmod:
  1681                           	callstack 25
  1682   00125A  0E00               	movlw	0
  1683   00125C  6E06               	movwf	___awmod@sign^0,c
  1684   00125E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1685   001260  EF36  F009         	goto	u1070
  1686   001264  EF34  F009         	goto	u1071
  1687   001268                     u1071:
  1688   001268  EF3C  F009         	goto	l2309
  1689   00126C                     u1070:
  1690   00126C  6C01               	negf	___awmod@dividend^0,c
  1691   00126E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1692   001270  B0D8               	btfsc	status,0,c
  1693   001272  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1694   001274  0E01               	movlw	1
  1695   001276  6E06               	movwf	___awmod@sign^0,c
  1696   001278                     l2309:
  1697   001278  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1698   00127A  EF43  F009         	goto	u1080
  1699   00127E  EF41  F009         	goto	u1081
  1700   001282                     u1081:
  1701   001282  EF47  F009         	goto	l2313
  1702   001286                     u1080:
  1703   001286  6C03               	negf	___awmod@divisor^0,c
  1704   001288  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1705   00128A  B0D8               	btfsc	status,0,c
  1706   00128C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1707   00128E                     l2313:
  1708   00128E  5003               	movf	___awmod@divisor^0,w,c
  1709   001290  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1710   001292  B4D8               	btfsc	status,2,c
  1711   001294  EF4E  F009         	goto	u1091
  1712   001298  EF50  F009         	goto	u1090
  1713   00129C                     u1091:
  1714   00129C  EF74  F009         	goto	l2329
  1715   0012A0                     u1090:
  1716   0012A0  0E01               	movlw	1
  1717   0012A2  6E05               	movwf	___awmod@counter^0,c
  1718   0012A4  EF58  F009         	goto	l2319
  1719   0012A8                     l2317:
  1720   0012A8  90D8               	bcf	status,0,c
  1721   0012AA  3603               	rlcf	___awmod@divisor^0,f,c
  1722   0012AC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1723   0012AE  2A05               	incf	___awmod@counter^0,f,c
  1724   0012B0                     l2319:
  1725   0012B0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1726   0012B2  EF5D  F009         	goto	u1101
  1727   0012B6  EF5F  F009         	goto	u1100
  1728   0012BA                     u1101:
  1729   0012BA  EF54  F009         	goto	l2317
  1730   0012BE                     u1100:
  1731   0012BE                     l2321:
  1732   0012BE  5003               	movf	___awmod@divisor^0,w,c
  1733   0012C0  5C01               	subwf	___awmod@dividend^0,w,c
  1734   0012C2  5004               	movf	(___awmod@divisor+1)^0,w,c
  1735   0012C4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1736   0012C6  A0D8               	btfss	status,0,c
  1737   0012C8  EF68  F009         	goto	u1111
  1738   0012CC  EF6A  F009         	goto	u1110
  1739   0012D0                     u1111:
  1740   0012D0  EF6E  F009         	goto	l2325
  1741   0012D4                     u1110:
  1742   0012D4  5003               	movf	___awmod@divisor^0,w,c
  1743   0012D6  5E01               	subwf	___awmod@dividend^0,f,c
  1744   0012D8  5004               	movf	(___awmod@divisor+1)^0,w,c
  1745   0012DA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1746   0012DC                     l2325:
  1747   0012DC  90D8               	bcf	status,0,c
  1748   0012DE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1749   0012E0  3203               	rrcf	___awmod@divisor^0,f,c
  1750   0012E2  2E05               	decfsz	___awmod@counter^0,f,c
  1751   0012E4  EF5F  F009         	goto	l2321
  1752   0012E8                     l2329:
  1753   0012E8  5006               	movf	___awmod@sign^0,w,c
  1754   0012EA  B4D8               	btfsc	status,2,c
  1755   0012EC  EF7A  F009         	goto	u1121
  1756   0012F0  EF7C  F009         	goto	u1120
  1757   0012F4                     u1121:
  1758   0012F4  EF80  F009         	goto	l2333
  1759   0012F8                     u1120:
  1760   0012F8  6C01               	negf	___awmod@dividend^0,c
  1761   0012FA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1762   0012FC  B0D8               	btfsc	status,0,c
  1763   0012FE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1764   001300                     l2333:
  1765   001300  C001  F001         	movff	___awmod@dividend,?___awmod
  1766   001304  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1767   001308  0012               	return		;funcret
  1768   00130A                     __end_of___awmod:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function ___awdiv *****************
  1772 ;; Defined at:
  1773 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  dividend        2    0[COMRAM] int 
  1776 ;;  divisor         2    2[COMRAM] int 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  quotient        2    6[COMRAM] int 
  1779 ;;  sign            1    5[COMRAM] unsigned char 
  1780 ;;  counter         1    4[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    0[COMRAM] int 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;Total ram usage:        8 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_vfpfcnvrt
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text9
  1805   0010DC                     __ptext9:
  1806                           	callstack 0
  1807   0010DC                     ___awdiv:
  1808                           	callstack 25
  1809   0010DC  0E00               	movlw	0
  1810   0010DE  6E06               	movwf	___awdiv@sign^0,c
  1811   0010E0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1812   0010E2  EF77  F008         	goto	u1010
  1813   0010E6  EF75  F008         	goto	u1011
  1814   0010EA                     u1011:
  1815   0010EA  EF7D  F008         	goto	l2265
  1816   0010EE                     u1010:
  1817   0010EE  6C03               	negf	___awdiv@divisor^0,c
  1818   0010F0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1819   0010F2  B0D8               	btfsc	status,0,c
  1820   0010F4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1821   0010F6  0E01               	movlw	1
  1822   0010F8  6E06               	movwf	___awdiv@sign^0,c
  1823   0010FA                     l2265:
  1824   0010FA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1825   0010FC  EF84  F008         	goto	u1020
  1826   001100  EF82  F008         	goto	u1021
  1827   001104                     u1021:
  1828   001104  EF8A  F008         	goto	l2271
  1829   001108                     u1020:
  1830   001108  6C01               	negf	___awdiv@dividend^0,c
  1831   00110A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1832   00110C  B0D8               	btfsc	status,0,c
  1833   00110E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1834   001110  0E01               	movlw	1
  1835   001112  1A06               	xorwf	___awdiv@sign^0,f,c
  1836   001114                     l2271:
  1837   001114  0E00               	movlw	0
  1838   001116  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1839   001118  0E00               	movlw	0
  1840   00111A  6E07               	movwf	___awdiv@quotient^0,c
  1841   00111C  5003               	movf	___awdiv@divisor^0,w,c
  1842   00111E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1843   001120  B4D8               	btfsc	status,2,c
  1844   001122  EF95  F008         	goto	u1031
  1845   001126  EF97  F008         	goto	u1030
  1846   00112A                     u1031:
  1847   00112A  EFBF  F008         	goto	l2293
  1848   00112E                     u1030:
  1849   00112E  0E01               	movlw	1
  1850   001130  6E05               	movwf	___awdiv@counter^0,c
  1851   001132  EF9F  F008         	goto	l2279
  1852   001136                     l2277:
  1853   001136  90D8               	bcf	status,0,c
  1854   001138  3603               	rlcf	___awdiv@divisor^0,f,c
  1855   00113A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1856   00113C  2A05               	incf	___awdiv@counter^0,f,c
  1857   00113E                     l2279:
  1858   00113E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1859   001140  EFA4  F008         	goto	u1041
  1860   001144  EFA6  F008         	goto	u1040
  1861   001148                     u1041:
  1862   001148  EF9B  F008         	goto	l2277
  1863   00114C                     u1040:
  1864   00114C                     l2281:
  1865   00114C  90D8               	bcf	status,0,c
  1866   00114E  3607               	rlcf	___awdiv@quotient^0,f,c
  1867   001150  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1868   001152  5003               	movf	___awdiv@divisor^0,w,c
  1869   001154  5C01               	subwf	___awdiv@dividend^0,w,c
  1870   001156  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1871   001158  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1872   00115A  A0D8               	btfss	status,0,c
  1873   00115C  EFB2  F008         	goto	u1051
  1874   001160  EFB4  F008         	goto	u1050
  1875   001164                     u1051:
  1876   001164  EFB9  F008         	goto	l2289
  1877   001168                     u1050:
  1878   001168  5003               	movf	___awdiv@divisor^0,w,c
  1879   00116A  5E01               	subwf	___awdiv@dividend^0,f,c
  1880   00116C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1881   00116E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1882   001170  8007               	bsf	___awdiv@quotient^0,0,c
  1883   001172                     l2289:
  1884   001172  90D8               	bcf	status,0,c
  1885   001174  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1886   001176  3203               	rrcf	___awdiv@divisor^0,f,c
  1887   001178  2E05               	decfsz	___awdiv@counter^0,f,c
  1888   00117A  EFA6  F008         	goto	l2281
  1889   00117E                     l2293:
  1890   00117E  5006               	movf	___awdiv@sign^0,w,c
  1891   001180  B4D8               	btfsc	status,2,c
  1892   001182  EFC5  F008         	goto	u1061
  1893   001186  EFC7  F008         	goto	u1060
  1894   00118A                     u1061:
  1895   00118A  EFCB  F008         	goto	l2297
  1896   00118E                     u1060:
  1897   00118E  6C07               	negf	___awdiv@quotient^0,c
  1898   001190  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1899   001192  B0D8               	btfsc	status,0,c
  1900   001194  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1901   001196                     l2297:
  1902   001196  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1903   00119A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1904   00119E  0012               	return		;funcret
  1905   0011A0                     __end_of___awdiv:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _sendStringSerial4 *****************
  1909 ;; Defined at:
  1910 ;;		line 35 in file "serial.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  string          2    1[COMRAM] PTR unsigned char 
  1913 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 2
  1932 ;; This function calls:
  1933 ;;		_sendCharSerial4
  1934 ;; This function is called by:
  1935 ;;		_sendIntSerial4
  1936 ;;		_sendArrayCharSerial4
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text10
  1941   00139A                     __ptext10:
  1942                           	callstack 0
  1943   00139A                     _sendStringSerial4:
  1944                           	callstack 27
  1945   00139A                     
  1946                           ;serial.c: 37:     while(*string != 0){
  1947   00139A  EFE4  F009         	goto	l2583
  1948   00139E                     l2579:
  1949                           
  1950                           ;serial.c: 38:   sendCharSerial4(*string++);
  1951   00139E  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1952   0013A2  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1953   0013A6  0E00               	movlw	low (__smallconst shr (0+16))
  1954   0013A8  6EF8               	movwf	tblptru,c
  1955   0013AA  0E0D               	movlw	(high __ramtop+-1)
  1956   0013AC  64F7               	cpfsgt	tblptrh,c
  1957   0013AE  D003               	bra	u1457
  1958   0013B0  0008               	tblrd		*
  1959   0013B2  50F5               	movf	tablat,w,c
  1960   0013B4  D005               	bra	u1450
  1961   0013B6                     u1457:
  1962   0013B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1963   0013BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1964   0013BE  50EF               	movf	indf0,w,c
  1965   0013C0                     u1450:
  1966   0013C0  EC29  F00C         	call	_sendCharSerial4
  1967   0013C4  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1968   0013C6  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1969   0013C8                     l2583:
  1970                           
  1971                           ;serial.c: 37:     while(*string != 0){
  1972   0013C8  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1973   0013CC  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1974   0013D0  0E00               	movlw	low (__smallconst shr (0+16))
  1975   0013D2  6EF8               	movwf	tblptru,c
  1976   0013D4  0E0D               	movlw	(high __ramtop+-1)
  1977   0013D6  64F7               	cpfsgt	tblptrh,c
  1978   0013D8  D003               	bra	u1467
  1979   0013DA  0008               	tblrd		*
  1980   0013DC  50F5               	movf	tablat,w,c
  1981   0013DE  D005               	bra	u1460
  1982   0013E0                     u1467:
  1983   0013E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1984   0013E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1985   0013E8  50EF               	movf	indf0,w,c
  1986   0013EA                     u1460:
  1987   0013EA  0900               	iorlw	0
  1988   0013EC  A4D8               	btfss	status,2,c
  1989   0013EE  EFFB  F009         	goto	u1471
  1990   0013F2  EFFD  F009         	goto	u1470
  1991   0013F6                     u1471:
  1992   0013F6  EFCF  F009         	goto	l2579
  1993   0013FA                     u1470:
  1994   0013FA  0012               	return		;funcret
  1995   0013FC                     __end_of_sendStringSerial4:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _sendCharSerial4 *****************
  1999 ;; Defined at:
  2000 ;;		line 29 in file "serial.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  charToSend      1    wreg     unsigned char 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  charToSend      1    0[COMRAM] unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;Total ram usage:        1 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_sendStringSerial4
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text11
  2029   001852                     __ptext11:
  2030                           	callstack 0
  2031   001852                     _sendCharSerial4:
  2032                           	callstack 27
  2033                           
  2034                           ;incstack = 0
  2035                           ;sendCharSerial4@charToSend stored from wreg
  2036   001852  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2037   001854                     l417:
  2038   001854  010E               	movlb	14	; () banked
  2039   001856  A537               	btfss	55,2,b	;volatile
  2040   001858  EF30  F00C         	goto	u501
  2041   00185C  EF32  F00C         	goto	u500
  2042   001860                     u501:
  2043   001860  EF2A  F00C         	goto	l417
  2044   001864                     u500:
  2045   001864                     
  2046                           ; BSR set to: 14
  2047                           ;serial.c: 31:     TX4REG = charToSend;
  2048   001864  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2049   001868                     
  2050                           ; BSR set to: 14
  2051   001868  0012               	return		;funcret
  2052   00186A                     __end_of_sendCharSerial4:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _initUSART4 *****************
  2056 ;; Defined at:
  2057 ;;		line 5 in file "serial.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text12
  2086   001834                     __ptext12:
  2087                           	callstack 0
  2088   001834                     _initUSART4:
  2089                           	callstack 29
  2090   001834                     
  2091                           ;serial.c: 9:     RC0PPS = 0x12;
  2092   001834  0E12               	movlw	18
  2093   001836  010E               	movlb	14	; () banked
  2094   001838  6F62               	movwf	98,b	;volatile
  2095                           
  2096                           ;serial.c: 10:     RX4PPS = 0x11;
  2097   00183A  0E11               	movlw	17
  2098   00183C  6F15               	movwf	21,b	;volatile
  2099   00183E                     
  2100                           ; BSR set to: 14
  2101                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2102   00183E  97E9               	bcf	233,3,b	;volatile
  2103   001840                     
  2104                           ; BSR set to: 14
  2105                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2106   001840  95E8               	bcf	232,2,b	;volatile
  2107                           
  2108                           ;serial.c: 14:     SP4BRGL = 51;
  2109   001842  0E33               	movlw	51
  2110   001844  6FE5               	movwf	229,b	;volatile
  2111                           
  2112                           ;serial.c: 15:     SP4BRGH = 0;
  2113   001846  0E00               	movlw	0
  2114   001848  6FE6               	movwf	230,b	;volatile
  2115   00184A                     
  2116                           ; BSR set to: 14
  2117                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2118   00184A  89E7               	bsf	231,4,b	;volatile
  2119   00184C                     
  2120                           ; BSR set to: 14
  2121                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2122   00184C  8BE8               	bsf	232,5,b	;volatile
  2123   00184E                     
  2124                           ; BSR set to: 14
  2125                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2126   00184E  8FE7               	bsf	231,7,b	;volatile
  2127   001850                     
  2128                           ; BSR set to: 14
  2129   001850  0012               	return		;funcret
  2130   001852                     __end_of_initUSART4:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _initDCmotorsPWM *****************
  2134 ;; Defined at:
  2135 ;;		line 5 in file "dc_motor.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;Total ram usage:        2 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text13
  2164   00130A                     __ptext13:
  2165                           	callstack 0
  2166   00130A                     _initDCmotorsPWM:
  2167                           	callstack 29
  2168   00130A                     
  2169                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2170   00130A  9485               	bcf	133,2,c	;volatile
  2171                           
  2172                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2173   00130C  9885               	bcf	133,4,c	;volatile
  2174                           
  2175                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2176   00130E  9E83               	bcf	131,7,c	;volatile
  2177                           
  2178                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2179   001310  9C87               	bcf	135,6,c	;volatile
  2180                           
  2181                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2182   001312  947D               	bcf	125,2,c	;volatile
  2183                           
  2184                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2185   001314  987D               	bcf	125,4,c	;volatile
  2186                           
  2187                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2188   001316  9E7B               	bcf	123,7,c	;volatile
  2189                           
  2190                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2191   001318  9C7F               	bcf	127,6,c	;volatile
  2192   00131A                     
  2193                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2194   00131A  0E05               	movlw	5
  2195   00131C  010E               	movlb	14	; () banked
  2196   00131E  6F74               	movwf	116,b	;volatile
  2197                           
  2198                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2199   001320  0E06               	movlw	6
  2200   001322  6F76               	movwf	118,b	;volatile
  2201                           
  2202                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2203   001324  0E07               	movlw	7
  2204   001326  6F69               	movwf	105,b	;volatile
  2205                           
  2206                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2207   001328  0E08               	movlw	8
  2208   00132A  6F88               	movwf	136,b	;volatile
  2209                           
  2210                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2211   00132C  50BD               	movf	189,w,c	;volatile
  2212   00132E  0B8F               	andlw	-113
  2213   001330  0940               	iorlw	64
  2214   001332  6EBD               	movwf	189,c	;volatile
  2215                           
  2216                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2217   001334  0EE0               	movlw	-32
  2218   001336  16BE               	andwf	190,f,c	;volatile
  2219                           
  2220                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2221   001338  50BF               	movf	191,w,c	;volatile
  2222   00133A  0BF0               	andlw	-16
  2223   00133C  0901               	iorlw	1
  2224   00133E  6EBF               	movwf	191,c	;volatile
  2225   001340                     
  2226                           ; BSR set to: 14
  2227                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2228   001340  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2229   001344                     
  2230                           ; BSR set to: 14
  2231                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2232   001344  8EBD               	bsf	189,7,c	;volatile
  2233                           
  2234                           ;dc_motor.c: 35:     CCPR1H=0;
  2235   001346  0E00               	movlw	0
  2236   001348  6EAA               	movwf	170,c	;volatile
  2237                           
  2238                           ;dc_motor.c: 36:     CCPR2H=0;
  2239   00134A  0E00               	movlw	0
  2240   00134C  6EA6               	movwf	166,c	;volatile
  2241                           
  2242                           ;dc_motor.c: 37:     CCPR3H=0;
  2243   00134E  0E00               	movlw	0
  2244   001350  010F               	movlb	15	; () banked
  2245   001352  6F25               	movwf	37,b	;volatile
  2246                           
  2247                           ;dc_motor.c: 38:     CCPR4H=0;
  2248   001354  0E00               	movlw	0
  2249   001356  6F21               	movwf	33,b	;volatile
  2250                           
  2251                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2252   001358  0EFC               	movlw	-4
  2253   00135A  16AD               	andwf	173,f,c	;volatile
  2254                           
  2255                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2256   00135C  0EF3               	movlw	-13
  2257   00135E  16AD               	andwf	173,f,c	;volatile
  2258                           
  2259                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2260   001360  0ECF               	movlw	-49
  2261   001362  16AD               	andwf	173,f,c	;volatile
  2262                           
  2263                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2264   001364  0E3F               	movlw	-193
  2265   001366  16AD               	andwf	173,f,c	;volatile
  2266   001368                     
  2267                           ; BSR set to: 15
  2268                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2269   001368  88AB               	bsf	171,4,c	;volatile
  2270                           
  2271                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2272   00136A  50AB               	movf	171,w,c	;volatile
  2273   00136C  0BF0               	andlw	-16
  2274   00136E  090C               	iorlw	12
  2275   001370  6EAB               	movwf	171,c	;volatile
  2276   001372                     
  2277                           ; BSR set to: 15
  2278                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2279   001372  8EAB               	bsf	171,7,c	;volatile
  2280   001374                     
  2281                           ; BSR set to: 15
  2282                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2283   001374  88A7               	bsf	167,4,c	;volatile
  2284                           
  2285                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2286   001376  50A7               	movf	167,w,c	;volatile
  2287   001378  0BF0               	andlw	-16
  2288   00137A  090C               	iorlw	12
  2289   00137C  6EA7               	movwf	167,c	;volatile
  2290   00137E                     
  2291                           ; BSR set to: 15
  2292                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2293   00137E  8EA7               	bsf	167,7,c	;volatile
  2294   001380                     
  2295                           ; BSR set to: 15
  2296                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2297   001380  8926               	bsf	38,4,b	;volatile
  2298                           
  2299                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2300   001382  5126               	movf	38,w,b	;volatile
  2301   001384  0BF0               	andlw	-16
  2302   001386  090C               	iorlw	12
  2303   001388  6F26               	movwf	38,b	;volatile
  2304   00138A                     
  2305                           ; BSR set to: 15
  2306                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2307   00138A  8F26               	bsf	38,7,b	;volatile
  2308   00138C                     
  2309                           ; BSR set to: 15
  2310                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2311   00138C  8922               	bsf	34,4,b	;volatile
  2312                           
  2313                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2314   00138E  5122               	movf	34,w,b	;volatile
  2315   001390  0BF0               	andlw	-16
  2316   001392  090C               	iorlw	12
  2317   001394  6F22               	movwf	34,b	;volatile
  2318   001396                     
  2319                           ; BSR set to: 15
  2320                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2321   001396  8F22               	bsf	34,7,b	;volatile
  2322   001398                     
  2323                           ; BSR set to: 15
  2324   001398  0012               	return		;funcret
  2325   00139A                     __end_of_initDCmotorsPWM:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _getRGBCval *****************
  2329 ;; Defined at:
  2330 ;;		line 84 in file "color.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2333 ;;		 -> main@measured_colour(8), 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 4
  2352 ;; This function calls:
  2353 ;;		_color_read_Blue
  2354 ;;		_color_read_Clear
  2355 ;;		_color_read_Green
  2356 ;;		_color_read_Red
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text14
  2363   001452                     __ptext14:
  2364                           	callstack 0
  2365   001452                     _getRGBCval:
  2366                           	callstack 26
  2367   001452                     
  2368                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2369   001452  EC54  F00A         	call	_color_read_Red	;wreg free
  2370   001456  500C               	movf	getRGBCval@p^0,w,c
  2371   001458  6ED9               	movwf	fsr2l,c
  2372   00145A  6ADA               	clrf	fsr2h,c
  2373   00145C  C005  FFDE         	movff	?_color_read_Red,postinc2
  2374   001460  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2375                           
  2376                           ;color.c: 87:     p->B = color_read_Blue();
  2377   001464  ECCC  F00A         	call	_color_read_Blue	;wreg free
  2378   001468  500C               	movf	getRGBCval@p^0,w,c
  2379   00146A  6ED9               	movwf	fsr2l,c
  2380   00146C  6ADA               	clrf	fsr2h,c
  2381   00146E  0E04               	movlw	4
  2382   001470  26D9               	addwf	fsr2l,f,c
  2383   001472  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2384   001476  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2385                           
  2386                           ;color.c: 88:     p->G = color_read_Green();
  2387   00147A  EC7C  F00A         	call	_color_read_Green	;wreg free
  2388   00147E  500C               	movf	getRGBCval@p^0,w,c
  2389   001480  6ED9               	movwf	fsr2l,c
  2390   001482  6ADA               	clrf	fsr2h,c
  2391   001484  0E02               	movlw	2
  2392   001486  26D9               	addwf	fsr2l,f,c
  2393   001488  C005  FFDE         	movff	?_color_read_Green,postinc2
  2394   00148C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2395                           
  2396                           ;color.c: 89:     p->C = color_read_Clear();
  2397   001490  ECA4  F00A         	call	_color_read_Clear	;wreg free
  2398   001494  500C               	movf	getRGBCval@p^0,w,c
  2399   001496  6ED9               	movwf	fsr2l,c
  2400   001498  6ADA               	clrf	fsr2h,c
  2401   00149A  0E06               	movlw	6
  2402   00149C  26D9               	addwf	fsr2l,f,c
  2403   00149E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2404   0014A2  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2405   0014A6  0012               	return		;funcret
  2406   0014A8                     __end_of_getRGBCval:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _color_read_Red *****************
  2410 ;; Defined at:
  2411 ;;		line 28 in file "color.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  tmp             2    9[COMRAM] unsigned int 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    4[COMRAM] unsigned int 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;Total ram usage:        7 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 3
  2432 ;; This function calls:
  2433 ;;		_I2C_2_Master_Read
  2434 ;;		_I2C_2_Master_RepStart
  2435 ;;		_I2C_2_Master_Start
  2436 ;;		_I2C_2_Master_Stop
  2437 ;;		_I2C_2_Master_Write
  2438 ;; This function is called by:
  2439 ;;		_getRGBCval
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text15
  2444   0014A8                     __ptext15:
  2445                           	callstack 0
  2446   0014A8                     _color_read_Red:
  2447                           	callstack 26
  2448   0014A8                     
  2449                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2450   0014A8  EC45  F00C         	call	_I2C_2_Master_Start	;wreg free
  2451                           
  2452                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2453   0014AC  0E52               	movlw	82
  2454   0014AE  EC35  F00C         	call	_I2C_2_Master_Write
  2455                           
  2456                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2457   0014B2  0EB6               	movlw	182
  2458   0014B4  EC35  F00C         	call	_I2C_2_Master_Write
  2459                           
  2460                           ;color.c: 34:  I2C_2_Master_RepStart();
  2461   0014B8  EC3B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2462                           
  2463                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2464   0014BC  0E53               	movlw	83
  2465   0014BE  EC35  F00C         	call	_I2C_2_Master_Write
  2466                           
  2467                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2468   0014C2  0E01               	movlw	1
  2469   0014C4  EC3B  F00B         	call	_I2C_2_Master_Read
  2470   0014C8  6E07               	movwf	??_color_read_Red^0,c
  2471   0014CA  5007               	movf	??_color_read_Red^0,w,c
  2472   0014CC  6E0A               	movwf	color_read_Red@tmp^0,c
  2473   0014CE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2474                           
  2475                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2476   0014D0  0E00               	movlw	0
  2477   0014D2  EC3B  F00B         	call	_I2C_2_Master_Read
  2478   0014D6  6E07               	movwf	??_color_read_Red^0,c
  2479   0014D8  5007               	movf	??_color_read_Red^0,w,c
  2480   0014DA  6E09               	movwf	(??_color_read_Red+2)^0,c
  2481   0014DC  6A08               	clrf	(??_color_read_Red+1)^0,c
  2482   0014DE  500A               	movf	color_read_Red@tmp^0,w,c
  2483   0014E0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2484   0014E2  6E0A               	movwf	color_read_Red@tmp^0,c
  2485   0014E4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2486   0014E6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2487   0014E8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2488                           
  2489                           ;color.c: 38:  I2C_2_Master_Stop();
  2490   0014EA  EC40  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2491   0014EE                     
  2492                           ;color.c: 39:  return tmp;
  2493   0014EE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2494   0014F2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2495   0014F6  0012               	return		;funcret
  2496   0014F8                     __end_of_color_read_Red:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _color_read_Green *****************
  2500 ;; Defined at:
  2501 ;;		line 56 in file "color.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  tmp             2    9[COMRAM] unsigned int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2    4[COMRAM] unsigned int 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;Total ram usage:        7 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 3
  2522 ;; This function calls:
  2523 ;;		_I2C_2_Master_Read
  2524 ;;		_I2C_2_Master_RepStart
  2525 ;;		_I2C_2_Master_Start
  2526 ;;		_I2C_2_Master_Stop
  2527 ;;		_I2C_2_Master_Write
  2528 ;; This function is called by:
  2529 ;;		_getRGBCval
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text16
  2534   0014F8                     __ptext16:
  2535                           	callstack 0
  2536   0014F8                     _color_read_Green:
  2537                           	callstack 26
  2538   0014F8                     
  2539                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2540   0014F8  EC45  F00C         	call	_I2C_2_Master_Start	;wreg free
  2541                           
  2542                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2543   0014FC  0E52               	movlw	82
  2544   0014FE  EC35  F00C         	call	_I2C_2_Master_Write
  2545                           
  2546                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2547   001502  0EB8               	movlw	184
  2548   001504  EC35  F00C         	call	_I2C_2_Master_Write
  2549                           
  2550                           ;color.c: 62:  I2C_2_Master_RepStart();
  2551   001508  EC3B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2552                           
  2553                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2554   00150C  0E53               	movlw	83
  2555   00150E  EC35  F00C         	call	_I2C_2_Master_Write
  2556                           
  2557                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2558   001512  0E01               	movlw	1
  2559   001514  EC3B  F00B         	call	_I2C_2_Master_Read
  2560   001518  6E07               	movwf	??_color_read_Green^0,c
  2561   00151A  5007               	movf	??_color_read_Green^0,w,c
  2562   00151C  6E0A               	movwf	color_read_Green@tmp^0,c
  2563   00151E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2564                           
  2565                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2566   001520  0E00               	movlw	0
  2567   001522  EC3B  F00B         	call	_I2C_2_Master_Read
  2568   001526  6E07               	movwf	??_color_read_Green^0,c
  2569   001528  5007               	movf	??_color_read_Green^0,w,c
  2570   00152A  6E09               	movwf	(??_color_read_Green+2)^0,c
  2571   00152C  6A08               	clrf	(??_color_read_Green+1)^0,c
  2572   00152E  500A               	movf	color_read_Green@tmp^0,w,c
  2573   001530  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2574   001532  6E0A               	movwf	color_read_Green@tmp^0,c
  2575   001534  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2576   001536  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2577   001538  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2578                           
  2579                           ;color.c: 66:  I2C_2_Master_Stop();
  2580   00153A  EC40  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2581   00153E                     
  2582                           ;color.c: 67:  return tmp;
  2583   00153E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2584   001542  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2585   001546  0012               	return		;funcret
  2586   001548                     __end_of_color_read_Green:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _color_read_Clear *****************
  2590 ;; Defined at:
  2591 ;;		line 70 in file "color.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  tmp             2    9[COMRAM] unsigned int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2    4[COMRAM] unsigned int 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        7 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 3
  2612 ;; This function calls:
  2613 ;;		_I2C_2_Master_Read
  2614 ;;		_I2C_2_Master_RepStart
  2615 ;;		_I2C_2_Master_Start
  2616 ;;		_I2C_2_Master_Stop
  2617 ;;		_I2C_2_Master_Write
  2618 ;; This function is called by:
  2619 ;;		_getRGBCval
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text17
  2624   001548                     __ptext17:
  2625                           	callstack 0
  2626   001548                     _color_read_Clear:
  2627                           	callstack 26
  2628   001548                     
  2629                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2630   001548  EC45  F00C         	call	_I2C_2_Master_Start	;wreg free
  2631                           
  2632                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2633   00154C  0E52               	movlw	82
  2634   00154E  EC35  F00C         	call	_I2C_2_Master_Write
  2635                           
  2636                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2637   001552  0EB4               	movlw	180
  2638   001554  EC35  F00C         	call	_I2C_2_Master_Write
  2639                           
  2640                           ;color.c: 76:  I2C_2_Master_RepStart();
  2641   001558  EC3B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2642                           
  2643                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2644   00155C  0E53               	movlw	83
  2645   00155E  EC35  F00C         	call	_I2C_2_Master_Write
  2646                           
  2647                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2648   001562  0E01               	movlw	1
  2649   001564  EC3B  F00B         	call	_I2C_2_Master_Read
  2650   001568  6E07               	movwf	??_color_read_Clear^0,c
  2651   00156A  5007               	movf	??_color_read_Clear^0,w,c
  2652   00156C  6E0A               	movwf	color_read_Clear@tmp^0,c
  2653   00156E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2654                           
  2655                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2656   001570  0E00               	movlw	0
  2657   001572  EC3B  F00B         	call	_I2C_2_Master_Read
  2658   001576  6E07               	movwf	??_color_read_Clear^0,c
  2659   001578  5007               	movf	??_color_read_Clear^0,w,c
  2660   00157A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2661   00157C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2662   00157E  500A               	movf	color_read_Clear@tmp^0,w,c
  2663   001580  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2664   001582  6E0A               	movwf	color_read_Clear@tmp^0,c
  2665   001584  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2666   001586  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2667   001588  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2668                           
  2669                           ;color.c: 80:  I2C_2_Master_Stop();
  2670   00158A  EC40  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2671   00158E                     
  2672                           ;color.c: 81:  return tmp;
  2673   00158E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2674   001592  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2675   001596  0012               	return		;funcret
  2676   001598                     __end_of_color_read_Clear:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _color_read_Blue *****************
  2680 ;; Defined at:
  2681 ;;		line 42 in file "color.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  tmp             2    9[COMRAM] unsigned int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    4[COMRAM] unsigned int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2699 ;;Total ram usage:        7 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 3
  2702 ;; This function calls:
  2703 ;;		_I2C_2_Master_Read
  2704 ;;		_I2C_2_Master_RepStart
  2705 ;;		_I2C_2_Master_Start
  2706 ;;		_I2C_2_Master_Stop
  2707 ;;		_I2C_2_Master_Write
  2708 ;; This function is called by:
  2709 ;;		_getRGBCval
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text18
  2714   001598                     __ptext18:
  2715                           	callstack 0
  2716   001598                     _color_read_Blue:
  2717                           	callstack 26
  2718   001598                     
  2719                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2720   001598  EC45  F00C         	call	_I2C_2_Master_Start	;wreg free
  2721                           
  2722                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2723   00159C  0E52               	movlw	82
  2724   00159E  EC35  F00C         	call	_I2C_2_Master_Write
  2725                           
  2726                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2727   0015A2  0EBA               	movlw	186
  2728   0015A4  EC35  F00C         	call	_I2C_2_Master_Write
  2729                           
  2730                           ;color.c: 48:  I2C_2_Master_RepStart();
  2731   0015A8  EC3B  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2732                           
  2733                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2734   0015AC  0E53               	movlw	83
  2735   0015AE  EC35  F00C         	call	_I2C_2_Master_Write
  2736                           
  2737                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2738   0015B2  0E01               	movlw	1
  2739   0015B4  EC3B  F00B         	call	_I2C_2_Master_Read
  2740   0015B8  6E07               	movwf	??_color_read_Blue^0,c
  2741   0015BA  5007               	movf	??_color_read_Blue^0,w,c
  2742   0015BC  6E0A               	movwf	color_read_Blue@tmp^0,c
  2743   0015BE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2744                           
  2745                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2746   0015C0  0E00               	movlw	0
  2747   0015C2  EC3B  F00B         	call	_I2C_2_Master_Read
  2748   0015C6  6E07               	movwf	??_color_read_Blue^0,c
  2749   0015C8  5007               	movf	??_color_read_Blue^0,w,c
  2750   0015CA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2751   0015CC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2752   0015CE  500A               	movf	color_read_Blue@tmp^0,w,c
  2753   0015D0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2754   0015D2  6E0A               	movwf	color_read_Blue@tmp^0,c
  2755   0015D4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2756   0015D6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2757   0015D8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2758                           
  2759                           ;color.c: 52:  I2C_2_Master_Stop();
  2760   0015DA  EC40  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2761   0015DE                     
  2762                           ;color.c: 53:  return tmp;
  2763   0015DE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2764   0015E2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2765   0015E6  0012               	return		;funcret
  2766   0015E8                     __end_of_color_read_Blue:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _I2C_2_Master_RepStart *****************
  2770 ;; Defined at:
  2771 ;;		line 33 in file "i2c.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 2
  2792 ;; This function calls:
  2793 ;;		_I2C_2_Master_Idle
  2794 ;; This function is called by:
  2795 ;;		_color_read_Red
  2796 ;;		_color_read_Blue
  2797 ;;		_color_read_Green
  2798 ;;		_color_read_Clear
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text19
  2803   001876                     __ptext19:
  2804                           	callstack 0
  2805   001876                     _I2C_2_Master_RepStart:
  2806                           	callstack 26
  2807   001876                     
  2808                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2809   001876  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2810   00187A                     
  2811                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2812   00187A  010E               	movlb	14	; () banked
  2813   00187C  83DA               	bsf	218,1,b	;volatile
  2814   00187E                     
  2815                           ; BSR set to: 14
  2816   00187E  0012               	return		;funcret
  2817   001880                     __end_of_I2C_2_Master_RepStart:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _I2C_2_Master_Read *****************
  2821 ;; Defined at:
  2822 ;;		line 51 in file "i2c.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  ack             1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  ack             1    2[COMRAM] unsigned char 
  2827 ;;  tmp             1    3[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      unsigned char 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2841 ;;Total ram usage:        3 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 2
  2844 ;; This function calls:
  2845 ;;		_I2C_2_Master_Idle
  2846 ;; This function is called by:
  2847 ;;		_color_read_Red
  2848 ;;		_color_read_Blue
  2849 ;;		_color_read_Green
  2850 ;;		_color_read_Clear
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text20
  2855   001676                     __ptext20:
  2856                           	callstack 0
  2857   001676                     _I2C_2_Master_Read:
  2858                           	callstack 26
  2859                           
  2860                           ; BSR set to: 14
  2861                           ;incstack = 0
  2862                           ;I2C_2_Master_Read@ack stored from wreg
  2863   001676  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2864   001678                     
  2865                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2866   001678  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2867   00167C                     
  2868                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2869   00167C  010E               	movlb	14	; () banked
  2870   00167E  87DA               	bsf	218,3,b	;volatile
  2871                           
  2872                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2873   001680  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2874   001684                     
  2875                           ;i2c.c: 57:   tmp = SSP2BUF;
  2876   001684  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2877                           
  2878                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2879   001688  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2880   00168C                     
  2881                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2882   00168C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2883   00168E  B4D8               	btfsc	status,2,c
  2884   001690  EF4C  F00B         	goto	u481
  2885   001694  EF50  F00B         	goto	u480
  2886   001698                     u481:
  2887   001698  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2888   00169A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2889   00169C  EF51  F00B         	goto	u498
  2890   0016A0                     u480:
  2891   0016A0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2892   0016A2                     u498:
  2893   0016A2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2894   0016A4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2895   0016A6  010E               	movlb	14	; () banked
  2896   0016A8  51DA               	movf	218,w,b	;volatile
  2897   0016AA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2898   0016AC  0BDF               	andlw	-33
  2899   0016AE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2900   0016B0  6FDA               	movwf	218,b	;volatile
  2901   0016B2                     
  2902                           ; BSR set to: 14
  2903                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2904   0016B2  89DA               	bsf	218,4,b	;volatile
  2905   0016B4                     
  2906                           ; BSR set to: 14
  2907                           ;i2c.c: 61:   return tmp;
  2908   0016B4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2909   0016B6                     
  2910                           ; BSR set to: 14
  2911   0016B6  0012               	return		;funcret
  2912   0016B8                     __end_of_I2C_2_Master_Read:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _color_click_init *****************
  2916 ;; Defined at:
  2917 ;;		line 4 in file "color.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;Total ram usage:        1 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 4
  2938 ;; This function calls:
  2939 ;;		_I2C_2_Master_Init
  2940 ;;		_color_writetoaddr
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text21
  2947   0016EC                     __ptext21:
  2948                           	callstack 0
  2949   0016EC                     _color_click_init:
  2950                           	callstack 26
  2951   0016EC                     
  2952                           ;color.c: 7:     I2C_2_Master_Init();
  2953   0016EC  ECA7  F00B         	call	_I2C_2_Master_Init	;wreg free
  2954   0016F0                     
  2955                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  2956   0016F0  0E01               	movlw	1
  2957   0016F2  6E03               	movwf	color_writetoaddr@value^0,c
  2958   0016F4  0E00               	movlw	0
  2959   0016F6  EC0A  F00C         	call	_color_writetoaddr
  2960   0016FA                     
  2961                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2962   0016FA  0E3F               	movlw	63
  2963   0016FC  6E05               	movwf	??_color_click_init^0,c
  2964   0016FE  0E55               	movlw	85
  2965   001700                     u2117:
  2966   001700  2EE8               	decfsz	wreg,f,c
  2967   001702  D7FE               	bra	u2117
  2968   001704  2E05               	decfsz	??_color_click_init^0,f,c
  2969   001706  D7FC               	bra	u2117
  2970   001708  0000               	nop	
  2971   00170A                     
  2972                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  2973   00170A  0E03               	movlw	3
  2974   00170C  6E03               	movwf	color_writetoaddr@value^0,c
  2975   00170E  0E00               	movlw	0
  2976   001710  EC0A  F00C         	call	_color_writetoaddr
  2977   001714                     
  2978                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  2979   001714  0ED5               	movlw	213
  2980   001716  6E03               	movwf	color_writetoaddr@value^0,c
  2981   001718  0E01               	movlw	1
  2982   00171A  EC0A  F00C         	call	_color_writetoaddr
  2983   00171E  0012               	return		;funcret
  2984   001720                     __end_of_color_click_init:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _color_writetoaddr *****************
  2988 ;; Defined at:
  2989 ;;		line 20 in file "color.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  address         1    wreg     unsigned char 
  2992 ;;  value           1    2[COMRAM] unsigned char 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  address         1    3[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3004 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 3
  3011 ;; This function calls:
  3012 ;;		_I2C_2_Master_Start
  3013 ;;		_I2C_2_Master_Stop
  3014 ;;		_I2C_2_Master_Write
  3015 ;; This function is called by:
  3016 ;;		_color_click_init
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text22
  3021   001814                     __ptext22:
  3022                           	callstack 0
  3023   001814                     _color_writetoaddr:
  3024                           	callstack 26
  3025                           
  3026                           ;incstack = 0
  3027                           ;color_writetoaddr@address stored from wreg
  3028   001814  6E04               	movwf	color_writetoaddr@address^0,c
  3029   001816                     
  3030                           ;color.c: 21:     I2C_2_Master_Start();
  3031   001816  EC45  F00C         	call	_I2C_2_Master_Start	;wreg free
  3032                           
  3033                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3034   00181A  0E52               	movlw	82
  3035   00181C  EC35  F00C         	call	_I2C_2_Master_Write
  3036                           
  3037                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3038   001820  5004               	movf	color_writetoaddr@address^0,w,c
  3039   001822  0980               	iorlw	128
  3040   001824  EC35  F00C         	call	_I2C_2_Master_Write
  3041                           
  3042                           ;color.c: 24:     I2C_2_Master_Write(value);
  3043   001828  5003               	movf	color_writetoaddr@value^0,w,c
  3044   00182A  EC35  F00C         	call	_I2C_2_Master_Write
  3045                           
  3046                           ;color.c: 25:     I2C_2_Master_Stop();
  3047   00182E  EC40  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3048   001832  0012               	return		;funcret
  3049   001834                     __end_of_color_writetoaddr:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _I2C_2_Master_Write *****************
  3053 ;; Defined at:
  3054 ;;		line 45 in file "i2c.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  data_byte       1    wreg     unsigned char 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  data_byte       1    1[COMRAM] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3072 ;;Total ram usage:        1 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 2
  3075 ;; This function calls:
  3076 ;;		_I2C_2_Master_Idle
  3077 ;; This function is called by:
  3078 ;;		_color_writetoaddr
  3079 ;;		_color_read_Red
  3080 ;;		_color_read_Blue
  3081 ;;		_color_read_Green
  3082 ;;		_color_read_Clear
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text23
  3087   00186A                     __ptext23:
  3088                           	callstack 0
  3089   00186A                     _I2C_2_Master_Write:
  3090                           	callstack 26
  3091                           
  3092                           ;incstack = 0
  3093                           ;I2C_2_Master_Write@data_byte stored from wreg
  3094   00186A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3095   00186C                     
  3096                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3097   00186C  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3098   001870                     
  3099                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3100   001870  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3101   001874  0012               	return		;funcret
  3102   001876                     __end_of_I2C_2_Master_Write:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _I2C_2_Master_Stop *****************
  3106 ;; Defined at:
  3107 ;;		line 39 in file "i2c.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 2
  3128 ;; This function calls:
  3129 ;;		_I2C_2_Master_Idle
  3130 ;; This function is called by:
  3131 ;;		_color_writetoaddr
  3132 ;;		_color_read_Red
  3133 ;;		_color_read_Blue
  3134 ;;		_color_read_Green
  3135 ;;		_color_read_Clear
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text24
  3140   001880                     __ptext24:
  3141                           	callstack 0
  3142   001880                     _I2C_2_Master_Stop:
  3143                           	callstack 26
  3144   001880                     
  3145                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3146   001880  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3147   001884                     
  3148                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3149   001884  010E               	movlb	14	; () banked
  3150   001886  85DA               	bsf	218,2,b	;volatile
  3151   001888                     
  3152                           ; BSR set to: 14
  3153   001888  0012               	return		;funcret
  3154   00188A                     __end_of_I2C_2_Master_Stop:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _I2C_2_Master_Start *****************
  3158 ;; Defined at:
  3159 ;;		line 27 in file "i2c.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 2
  3180 ;; This function calls:
  3181 ;;		_I2C_2_Master_Idle
  3182 ;; This function is called by:
  3183 ;;		_color_writetoaddr
  3184 ;;		_color_read_Red
  3185 ;;		_color_read_Blue
  3186 ;;		_color_read_Green
  3187 ;;		_color_read_Clear
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text25
  3192   00188A                     __ptext25:
  3193                           	callstack 0
  3194   00188A                     _I2C_2_Master_Start:
  3195                           	callstack 26
  3196   00188A                     
  3197                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3198   00188A  ECD1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3199   00188E                     
  3200                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3201   00188E  010E               	movlb	14	; () banked
  3202   001890  81DA               	bsf	218,0,b	;volatile
  3203   001892                     
  3204                           ; BSR set to: 14
  3205   001892  0012               	return		;funcret
  3206   001894                     __end_of_I2C_2_Master_Start:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _I2C_2_Master_Idle *****************
  3210 ;; Defined at:
  3211 ;;		line 22 in file "i2c.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_I2C_2_Master_Start
  3236 ;;		_I2C_2_Master_RepStart
  3237 ;;		_I2C_2_Master_Stop
  3238 ;;		_I2C_2_Master_Write
  3239 ;;		_I2C_2_Master_Read
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text26
  3244   0017A2                     __ptext26:
  3245                           	callstack 0
  3246   0017A2                     _I2C_2_Master_Idle:
  3247                           	callstack 26
  3248   0017A2                     l250:
  3249   0017A2  010E               	movlb	14	; () banked
  3250   0017A4  B5D8               	btfsc	216,2,b	;volatile
  3251   0017A6  EFD7  F00B         	goto	u361
  3252   0017AA  EFD9  F00B         	goto	u360
  3253   0017AE                     u361:
  3254   0017AE  EFD1  F00B         	goto	l250
  3255   0017B2                     u360:
  3256   0017B2                     
  3257                           ; BSR set to: 14
  3258   0017B2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3259   0017B6  0E1F               	movlw	31
  3260   0017B8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3261   0017BA  A4D8               	btfss	status,2,c
  3262   0017BC  EFE2  F00B         	goto	u371
  3263   0017C0  EFE4  F00B         	goto	u370
  3264   0017C4                     u371:
  3265   0017C4  EFD1  F00B         	goto	l250
  3266   0017C8                     u370:
  3267   0017C8                     
  3268                           ; BSR set to: 14
  3269   0017C8  0012               	return		;funcret
  3270   0017CA                     __end_of_I2C_2_Master_Idle:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _I2C_2_Master_Init *****************
  3274 ;; Defined at:
  3275 ;;		line 4 in file "i2c.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_color_click_init
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text27
  3304   00174E                     __ptext27:
  3305                           	callstack 0
  3306   00174E                     _I2C_2_Master_Init:
  3307                           	callstack 28
  3308   00174E                     
  3309                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3310   00174E  010E               	movlb	14	; () banked
  3311   001750  51D9               	movf	217,w,b	;volatile
  3312   001752  0BF0               	andlw	-16
  3313   001754  0908               	iorlw	8
  3314   001756  6FD9               	movwf	217,b	;volatile
  3315   001758                     
  3316                           ; BSR set to: 14
  3317                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3318   001758  8BD9               	bsf	217,5,b	;volatile
  3319                           
  3320                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3321   00175A  0E9F               	movlw	159
  3322   00175C  6FD6               	movwf	214,b	;volatile
  3323   00175E                     
  3324                           ; BSR set to: 14
  3325                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3326   00175E  8A84               	bsf	132,5,c	;volatile
  3327   001760                     
  3328                           ; BSR set to: 14
  3329                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3330   001760  8C84               	bsf	132,6,c	;volatile
  3331   001762                     
  3332                           ; BSR set to: 14
  3333                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3334   001762  9BA7               	bcf	167,5,b	;volatile
  3335   001764                     
  3336                           ; BSR set to: 14
  3337                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3338   001764  9DA7               	bcf	167,6,b	;volatile
  3339                           
  3340                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3341   001766  0E1D               	movlw	29
  3342   001768  6F1D               	movwf	29,b	;volatile
  3343                           
  3344                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3345   00176A  0E1E               	movlw	30
  3346   00176C  6F1C               	movwf	28,b	;volatile
  3347                           
  3348                           ;i2c.c: 18:   RD5PPS=0x1C;
  3349   00176E  0E1C               	movlw	28
  3350   001770  6F6F               	movwf	111,b	;volatile
  3351                           
  3352                           ;i2c.c: 19:   RD6PPS=0x1B;
  3353   001772  0E1B               	movlw	27
  3354   001774  6F70               	movwf	112,b	;volatile
  3355   001776                     
  3356                           ; BSR set to: 14
  3357   001776  0012               	return		;funcret
  3358   001778                     __end_of_I2C_2_Master_Init:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _buggy_lights_init *****************
  3362 ;; Defined at:
  3363 ;;		line 4 in file "buggy_lights.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		None
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 1
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text28
  3392   001720                     __ptext28:
  3393                           	callstack 0
  3394   001720                     _buggy_lights_init:
  3395                           	callstack 29
  3396   001720                     
  3397                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3398   001720  9884               	bcf	132,4,c	;volatile
  3399                           
  3400                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3401   001722  9288               	bcf	136,1,c	;volatile
  3402                           
  3403                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3404   001724  9684               	bcf	132,3,c	;volatile
  3405                           
  3406                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3407   001726  9086               	bcf	134,0,c	;volatile
  3408                           
  3409                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3410   001728  9088               	bcf	136,0,c	;volatile
  3411                           
  3412                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  3413   00172A  987C               	bcf	124,4,c	;volatile
  3414                           
  3415                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  3416   00172C  9280               	bcf	128,1,c	;volatile
  3417                           
  3418                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  3419   00172E  967C               	bcf	124,3,c	;volatile
  3420                           
  3421                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  3422   001730  907E               	bcf	126,0,c	;volatile
  3423                           
  3424                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  3425   001732  9080               	bcf	128,0,c	;volatile
  3426                           
  3427                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  3428   001734  9287               	bcf	135,1,c	;volatile
  3429                           
  3430                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  3431   001736  9881               	bcf	129,4,c	;volatile
  3432                           
  3433                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  3434   001738  9E86               	bcf	134,7,c	;volatile
  3435                           
  3436                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  3437   00173A  927F               	bcf	127,1,c	;volatile
  3438                           
  3439                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  3440   00173C  9879               	bcf	121,4,c	;volatile
  3441                           
  3442                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  3443   00173E  9E7E               	bcf	126,7,c	;volatile
  3444                           
  3445                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  3446   001740  9087               	bcf	135,0,c	;volatile
  3447                           
  3448                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  3449   001742  9E85               	bcf	133,7,c	;volatile
  3450                           
  3451                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  3452   001744  9681               	bcf	129,3,c	;volatile
  3453                           
  3454                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  3455   001746  907F               	bcf	127,0,c	;volatile
  3456                           
  3457                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  3458   001748  9E7D               	bcf	125,7,c	;volatile
  3459                           
  3460                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  3461   00174A  9679               	bcf	121,3,c	;volatile
  3462   00174C  0012               	return		;funcret
  3463   00174E                     __end_of_buggy_lights_init:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _Timer0_init *****************
  3467 ;; Defined at:
  3468 ;;		line 7 in file "timers.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text29
  3497   0017CA                     __ptext29:
  3498                           	callstack 0
  3499   0017CA                     _Timer0_init:
  3500                           	callstack 29
  3501   0017CA                     
  3502                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3503   0017CA  50D6               	movf	214,w,c	;volatile
  3504   0017CC  0B1F               	andlw	-225
  3505   0017CE  0940               	iorlw	64
  3506   0017D0  6ED6               	movwf	214,c	;volatile
  3507   0017D2                     
  3508                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3509   0017D2  88D6               	bsf	214,4,c	;volatile
  3510   0017D4                     
  3511                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3512   0017D4  88D5               	bsf	213,4,c	;volatile
  3513                           
  3514                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3515   0017D6  50D6               	movf	214,w,c	;volatile
  3516   0017D8  0BF0               	andlw	-16
  3517   0017DA  090E               	iorlw	14
  3518   0017DC  6ED6               	movwf	214,c	;volatile
  3519                           
  3520                           ;timers.c: 20:     TMR0H = 0;
  3521   0017DE  0E00               	movlw	0
  3522   0017E0  6ED4               	movwf	212,c	;volatile
  3523                           
  3524                           ;timers.c: 21:     TMR0L = 0;
  3525   0017E2  0E00               	movlw	0
  3526   0017E4  6ED3               	movwf	211,c	;volatile
  3527   0017E6                     
  3528                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3529   0017E6  8ED5               	bsf	213,7,c	;volatile
  3530   0017E8                     
  3531                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3532   0017E8  010E               	movlb	14	; () banked
  3533   0017EA  8B29               	bsf	41,5,b	;volatile
  3534   0017EC                     
  3535                           ; BSR set to: 14
  3536                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3537   0017EC  8CF2               	bsf	242,6,c	;volatile
  3538   0017EE                     
  3539                           ; BSR set to: 14
  3540                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3541   0017EE  8EF2               	bsf	242,7,c	;volatile
  3542   0017F0                     
  3543                           ; BSR set to: 14
  3544   0017F0  0012               	return		;funcret
  3545   0017F2                     __end_of_Timer0_init:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function _ISR *****************
  3549 ;; Defined at:
  3550 ;;		line 75 in file "timers.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;Total ram usage:        0 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		Interrupt level 2
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	intcode
  3578   000008                     __pintcode:
  3579                           	callstack 0
  3580   000008                     _ISR:
  3581                           	callstack 24
  3582                           
  3583                           ; BSR set to: 14
  3584                           ;incstack = 0
  3585   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3586   00000A                     
  3587                           ;timers.c: 78:     if (PIR0bits.TMR0IF) {
  3588   00000A  010E               	movlb	14	; () banked
  3589   00000C  AB33               	btfss	51,5,b	;volatile
  3590   00000E  EF0B  F000         	goto	i2u169_41
  3591   000012  EF0D  F000         	goto	i2u169_40
  3592   000016                     i2u169_41:
  3593   000016  EF1A  F000         	goto	i2l668
  3594   00001A                     i2u169_40:
  3595   00001A                     
  3596                           ; BSR set to: 14
  3597                           ;timers.c: 79:         if (returning) {
  3598   00001A  0100               	movlb	0	; () banked
  3599   00001C  519D               	movf	_returning& (0+255),w,b
  3600   00001E  B4D8               	btfsc	status,2,c
  3601   000020  EF14  F000         	goto	i2u170_41
  3602   000024  EF16  F000         	goto	i2u170_40
  3603   000028                     i2u170_41:
  3604   000028  EF18  F000         	goto	i2l667
  3605   00002C                     i2u170_40:
  3606   00002C                     
  3607                           ; BSR set to: 0
  3608                           ;timers.c: 82:             returnFlag = 1;
  3609   00002C  0E01               	movlw	1
  3610   00002E  6F9C               	movwf	_returnFlag& (0+255),b
  3611   000030                     i2l667:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;timers.c: 87:         PIR0bits.TMR0IF = 0;
  3615   000030  010E               	movlb	14	; () banked
  3616   000032  9B33               	bcf	51,5,b	;volatile
  3617   000034                     i2l668:
  3618                           
  3619                           ; BSR set to: 14
  3620   000034  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3621   000036  0011               	retfie		f
  3622   000038                     __end_of_ISR:
  3623                           	callstack 0
  3624                           
  3625                           	psect	rparam
  3626   000000                     
  3627                           	psect	temp
  3628   00005F                     btemp:
  3629                           	callstack 0
  3630   00005F                     	ds	1
  3631   000000                     int$flags	set	btemp
  3632   000000                     wtemp8	set	btemp+1
  3633   000000                     ttemp5	set	btemp+1
  3634   000000                     ttemp6	set	btemp+4
  3635   000000                     ttemp7	set	btemp+8
  3636                           
  3637                           	psect	idloc
  3638                           
  3639                           ;Config register IDLOC0 @ 0x200000
  3640                           ;	unspecified, using default values
  3641   200000                     	org	2097152
  3642   200000  FFFF               	dw	65535
  3643                           
  3644                           ;Config register IDLOC1 @ 0x200002
  3645                           ;	unspecified, using default values
  3646   200002                     	org	2097154
  3647   200002  FFFF               	dw	65535
  3648                           
  3649                           ;Config register IDLOC2 @ 0x200004
  3650                           ;	unspecified, using default values
  3651   200004                     	org	2097156
  3652   200004  FFFF               	dw	65535
  3653                           
  3654                           ;Config register IDLOC3 @ 0x200006
  3655                           ;	unspecified, using default values
  3656   200006                     	org	2097158
  3657   200006  FFFF               	dw	65535
  3658                           
  3659                           ;Config register IDLOC4 @ 0x200008
  3660                           ;	unspecified, using default values
  3661   200008                     	org	2097160
  3662   200008  FFFF               	dw	65535
  3663                           
  3664                           ;Config register IDLOC5 @ 0x20000A
  3665                           ;	unspecified, using default values
  3666   20000A                     	org	2097162
  3667   20000A  FFFF               	dw	65535
  3668                           
  3669                           ;Config register IDLOC6 @ 0x20000C
  3670                           ;	unspecified, using default values
  3671   20000C                     	org	2097164
  3672   20000C  FFFF               	dw	65535
  3673                           
  3674                           ;Config register IDLOC7 @ 0x20000E
  3675                           ;	unspecified, using default values
  3676   20000E                     	org	2097166
  3677   20000E  FFFF               	dw	65535
  3678                           
  3679                           	psect	config
  3680                           
  3681                           ;Config register CONFIG1L @ 0x300000
  3682                           ;	External Oscillator mode Selection bits
  3683                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3684                           ;	Power-up default value for COSC bits
  3685                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3686   300000                     	org	3145728
  3687   300000  AA                 	db	170
  3688                           
  3689                           ;Config register CONFIG1H @ 0x300001
  3690                           ;	unspecified, using default values
  3691                           ;	Clock Out Enable bit
  3692                           ;	CLKOUTEN = 0x1, unprogrammed default
  3693                           ;	Clock Switch Enable bit
  3694                           ;	CSWEN = 0x1, unprogrammed default
  3695                           ;	Fail-Safe Clock Monitor Enable bit
  3696                           ;	FCMEN = 0x1, unprogrammed default
  3697   300001                     	org	3145729
  3698   300001  FF                 	db	255
  3699                           
  3700                           ;Config register CONFIG2L @ 0x300002
  3701                           ;	unspecified, using default values
  3702                           ;	Master Clear Enable bit
  3703                           ;	MCLRE = 0x1, unprogrammed default
  3704                           ;	Power-up Timer Enable bit
  3705                           ;	PWRTE = 0x1, unprogrammed default
  3706                           ;	Low-power BOR enable bit
  3707                           ;	LPBOREN = 0x1, unprogrammed default
  3708                           ;	Brown-out Reset Enable bits
  3709                           ;	BOREN = 0x3, unprogrammed default
  3710   300002                     	org	3145730
  3711   300002  FF                 	db	255
  3712                           
  3713                           ;Config register CONFIG2H @ 0x300003
  3714                           ;	unspecified, using default values
  3715                           ;	Brown Out Reset Voltage selection bits
  3716                           ;	BORV = 0x3, unprogrammed default
  3717                           ;	ZCD Disable bit
  3718                           ;	ZCD = 0x1, unprogrammed default
  3719                           ;	PPSLOCK bit One-Way Set Enable bit
  3720                           ;	PPS1WAY = 0x1, unprogrammed default
  3721                           ;	Stack Full/Underflow Reset Enable bit
  3722                           ;	STVREN = 0x1, unprogrammed default
  3723                           ;	Debugger Enable bit
  3724                           ;	DEBUG = 0x1, unprogrammed default
  3725                           ;	Extended Instruction Set Enable bit
  3726                           ;	XINST = 0x1, unprogrammed default
  3727   300003                     	org	3145731
  3728   300003  FF                 	db	255
  3729                           
  3730                           ;Config register CONFIG3L @ 0x300004
  3731                           ;	WDT Period Select bits
  3732                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3733                           ;	WDT operating mode
  3734                           ;	WDTE = OFF, WDT Disabled
  3735   300004                     	org	3145732
  3736   300004  9F                 	db	159
  3737                           
  3738                           ;Config register CONFIG3H @ 0x300005
  3739                           ;	unspecified, using default values
  3740                           ;	WDT Window Select bits
  3741                           ;	WDTCWS = 0x7, unprogrammed default
  3742                           ;	WDT input clock selector
  3743                           ;	WDTCCS = 0x7, unprogrammed default
  3744   300005                     	org	3145733
  3745   300005  FF                 	db	255
  3746                           
  3747                           ;Config register CONFIG4L @ 0x300006
  3748                           ;	unspecified, using default values
  3749                           ;	Write Protection Block 0
  3750                           ;	WRT0 = 0x1, unprogrammed default
  3751                           ;	Write Protection Block 1
  3752                           ;	WRT1 = 0x1, unprogrammed default
  3753                           ;	Write Protection Block 2
  3754                           ;	WRT2 = 0x1, unprogrammed default
  3755                           ;	Write Protection Block 3
  3756                           ;	WRT3 = 0x1, unprogrammed default
  3757                           ;	Write Protection Block 3
  3758                           ;	WRT4 = 0x1, unprogrammed default
  3759                           ;	Write Protection Block 3
  3760                           ;	WRT5 = 0x1, unprogrammed default
  3761                           ;	Write Protection Block 3
  3762                           ;	WRT6 = 0x1, unprogrammed default
  3763                           ;	Write Protection Block 3
  3764                           ;	WRT7 = 0x1, unprogrammed default
  3765   300006                     	org	3145734
  3766   300006  FF                 	db	255
  3767                           
  3768                           ;Config register CONFIG4H @ 0x300007
  3769                           ;	unspecified, using default values
  3770                           ;	Configuration Register Write Protection bit
  3771                           ;	WRTC = 0x1, unprogrammed default
  3772                           ;	Boot Block Write Protection bit
  3773                           ;	WRTB = 0x1, unprogrammed default
  3774                           ;	Data EEPROM Write Protection bit
  3775                           ;	WRTD = 0x1, unprogrammed default
  3776                           ;	Scanner Enable bit
  3777                           ;	SCANE = 0x1, unprogrammed default
  3778                           ;	Low Voltage Programming Enable bit
  3779                           ;	LVP = 0x1, unprogrammed default
  3780   300007                     	org	3145735
  3781   300007  FF                 	db	255
  3782                           
  3783                           ;Config register CONFIG5L @ 0x300008
  3784                           ;	unspecified, using default values
  3785                           ;	UserNVM Program Memory Code Protection bit
  3786                           ;	CP = 0x1, unprogrammed default
  3787                           ;	DataNVM Memory Code Protection bit
  3788                           ;	CPD = 0x1, unprogrammed default
  3789   300008                     	org	3145736
  3790   300008  FF                 	db	255
  3791                           
  3792                           ;Config register CONFIG5H @ 0x300009
  3793                           ;	unspecified, using default values
  3794   300009                     	org	3145737
  3795   300009  FF                 	db	255
  3796                           
  3797                           ;Config register CONFIG6L @ 0x30000A
  3798                           ;	unspecified, using default values
  3799                           ;	Table Read Protection Block 0
  3800                           ;	EBTR0 = 0x1, unprogrammed default
  3801                           ;	Table Read Protection Block 1
  3802                           ;	EBTR1 = 0x1, unprogrammed default
  3803                           ;	Table Read Protection Block 2
  3804                           ;	EBTR2 = 0x1, unprogrammed default
  3805                           ;	Table Read Protection Block 3
  3806                           ;	EBTR3 = 0x1, unprogrammed default
  3807                           ;	Table Read Protection Block 4
  3808                           ;	EBTR4 = 0x1, unprogrammed default
  3809                           ;	Table Read Protection Block 5
  3810                           ;	EBTR5 = 0x1, unprogrammed default
  3811                           ;	Table Read Protection Block 6
  3812                           ;	EBTR6 = 0x1, unprogrammed default
  3813                           ;	Table Read Protection Block 7
  3814                           ;	EBTR7 = 0x1, unprogrammed default
  3815   30000A                     	org	3145738
  3816   30000A  FF                 	db	255
  3817                           
  3818                           ;Config register CONFIG6H @ 0x30000B
  3819                           ;	unspecified, using default values
  3820                           ;	Boot Block Table Read Protection bit
  3821                           ;	EBTRB = 0x1, unprogrammed default
  3822   30000B                     	org	3145739
  3823   30000B  FF                 	db	255
  3824                           tosu	equ	0xFFF
  3825                           tosh	equ	0xFFE
  3826                           tosl	equ	0xFFD
  3827                           stkptr	equ	0xFFC
  3828                           pclatu	equ	0xFFB
  3829                           pclath	equ	0xFFA
  3830                           pcl	equ	0xFF9
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           indf0	equ	0xFEF
  3838                           postinc0	equ	0xFEE
  3839                           postdec0	equ	0xFED
  3840                           preinc0	equ	0xFEC
  3841                           plusw0	equ	0xFEB
  3842                           fsr0h	equ	0xFEA
  3843                           fsr0l	equ	0xFE9
  3844                           wreg	equ	0xFE8
  3845                           indf1	equ	0xFE7
  3846                           postinc1	equ	0xFE6
  3847                           postdec1	equ	0xFE5
  3848                           preinc1	equ	0xFE4
  3849                           plusw1	equ	0xFE3
  3850                           fsr1h	equ	0xFE2
  3851                           fsr1l	equ	0xFE1
  3852                           bsr	equ	0xFE0
  3853                           indf2	equ	0xFDF
  3854                           postinc2	equ	0xFDE
  3855                           postdec2	equ	0xFDD
  3856                           preinc2	equ	0xFDC
  3857                           plusw2	equ	0xFDB
  3858                           fsr2h	equ	0xFDA
  3859                           fsr2l	equ	0xFD9
  3860                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        41
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160      0     147
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2660$buffer	PTR unsigned char  size(2) Largest target is 0

    S2660$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5191
                                             66 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3916
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     288
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     528
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      62        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 18:27:16 2024

                 _turn180Delay 00CE                 _color_read_Red 14A8                _color_read_Blue 1598  
              _trail_timer_low 00B6                             l27 174C                             l61 171E  
                           l70 15E6                             l64 1832                             l73 1546  
                           l67 14F6                             l76 1596                             l79 14A6  
                 ___awdiv@sign 0006               _trail_timer_high 00DF               _color_read_Clear 1548  
             _color_read_Green 14F8                            l152 1398                            l250 17A2  
                          l420 1868                            l253 17C8                            l262 1888  
                          l247 1776                            l256 1892                            l408 1850  
                          l265 1874                            l417 1854                            l426 13FA  
                          l259 187E                            l363 1078                            l268 16B6  
                          l429 1812                            l644 17F0                            l902 119E  
                          l915 1308                            u500 1864                            u501 1860  
                          u360 17B2                            u361 17AE                            u370 17C8  
                          u371 17C4                            _ISR 0008                            u480 16A0  
                          u481 1698                            u498 16A2                            _abs 16B8  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00CA  
                         ?_ISR 0001                           l2011 184C                           l2003 1834  
                         ?_abs 0007                           l2021 17E6                           l2013 184E  
                         l2005 183E                           l2023 17E8                           l2015 17CA  
                         l2007 1840                           l2025 17EC                           l2017 17D2  
                         l2009 184A                           l1401 16D2                           l2027 17EE  
                         l2019 17D4                           l1404 16EA                           l2301 125A  
                         l2311 1286                           l2303 125E                           l1416 1258  
                         l2321 12BE                           l2313 128E                           l2305 126C  
                         l2331 12F8                           l2323 12D4                           l2315 12A0  
                         l2307 1274                           l1427 1894                           l1701 188E  
                         l2261 10EE                           l2333 1300                           l2325 12DC  
                         l2317 12A8                           l2309 1278                           l2341 11C0  
                         l1349 1632                           l1390 0FAE                           l1703 186C  
                         l1711 1876                           l2271 1114                           l2263 10F6  
                         l2327 12E2                           l2319 12B0                           l2351 16B8  
                         l2343 11CA                           l1391 1000                           l1705 1870  
                         l1721 168C                           l1713 187A                           l2281 114C  
                         l2273 111C                           l2265 10FA                           l2257 10DC  
                         l2329 12E8                           l2353 16C6                           l2345 11E6  
                         l2337 11A0                           l2441 0E0C                           l1635 17A2  
                         l1707 1880                           l1723 16B2                           l1715 1678  
                         l2291 1178                           l2283 1152                           l2275 112E  
                         l2267 1108                           l2259 10E0                           l2347 1218  
                         l2339 11B0                           l2451 0E54                           l2443 0E14  
                         l1396 1448                           l1637 17B2                           l1709 1884  
                         l2701 16F0                           l1725 16B4                           l1717 167C  
                         l2285 1168                           l2277 1136                           l2293 117E  
                         l2269 1110                           l2461 0EC0                           l2453 0E5E  
                         l2445 0E3A                           l1397 1450                           l2551 1816  
                         l2703 16FA                           l1719 1684                           l2711 130A  
                         l2295 118E                           l2287 1170                           l2279 113E  
                         l2471 0F3A                           l2463 0ED8                           l2455 0E7E  
                         l2447 0E42                           l2543 13FC                           l2705 170A  
                         l2561 15DE                           l2553 14A8                           l2721 1372  
                         l2713 131A                           l2297 1196                           l2289 1172  
                         l2481 0F80                           l2473 0F4A                           l2465 0F08  
                         l2457 0E9E                           l2449 0E50                           l2545 1400  
                         l2707 1714                           l2571 1548                           l2555 14EE  
                         l2731 138C                           l2723 1374                           l2715 1340  
                         l1771 1854                           l2483 0F9A                           l2475 0F5A  
                         l2467 0F24                           l2459 0EB6                           l2547 140E  
                         l2811 100E                           l2573 158E                           l2565 14F8  
                         l2709 1452                           l2733 1396                           l2725 137E  
                         l2717 1344                           l1773 1864                           l2581 13C4  
                         l2477 0F6A                           l2485 0F9C                           l2469 0F28  
                         l2493 0FCE                           l2549 1428                           l2821 1042  
                         l2813 1016                           l1943 1720                           l1791 1762  
                         l1783 174E                           l2559 1598                           l2567 153E  
                         l2727 1380                           l2719 1368                           l2583 13C8  
                         l2495 0FF0                           l2479 0F78                           l2487 0FBA  
                         l2591 1604                           l2831 1066                           l2823 104A  
                         l2815 101E                           l1793 1764                           l1785 1758  
                         l2729 138A                           l2577 139A                           l2497 0FF8  
                         l2489 0FC2                           l2593 161C                           l2585 15E8  
                         l2841 1070                           l2833 1068                           l2825 105A  
                         l2817 1032                           l2809 1002                           l1787 175E  
                         l1699 188A                           l2579 139E                           l2595 162A  
                         l2587 15F4                           l2851 109A                           l2843 1072  
                         l2835 106A                           l2827 105E                           l2819 103A  
                         l1789 1760                           l2589 15FC                           l2757 17F2  
                         l2853 10BC                           l2845 1076                           l2837 106C  
                         l2829 1062                           l2759 1808                           l2847 1086  
                         l2839 106E                           l2849 108E                           l2699 16EC  
                         STR_1 0E01                           STR_2 0E06                           u1010 10EE  
                         u1011 10EA                           u1020 1108                           u1100 12BE  
                         u1021 1104                           u1101 12BA                           u1030 112E  
                         u1110 12D4                           u1031 112A                           u1111 12D0  
                         u1040 114C                           u1120 12F8                           u1041 1148  
                         u1121 12F4                           u1050 1168                           u1130 11B0  
                         u1051 1164                           u1131 11AC                           u1060 118E  
                         u1140 11C0                           u1061 118A                           u1141 11BC  
                         u1070 126C                           u1150 11E6                           u1071 1268  
                         u1151 11E2                           u1080 1286                           u1160 1218  
                         u1400 0F4A                           u1081 1282                           u1161 1214  
                         u1401 0F46                           u1090 12A0                           u1170 16C6  
                         u1410 0F5A                           u1091 129C                           u1171 16C2  
                         u1411 0F56                           u2107 10C6                           u1420 0F6A  
                         u1340 0E3A                           u2117 1700                           u1421 0F66  
                         u1341 0E36                           u1430 0FAE                           u1350 0E7E  
                         u1431 0FAA                           u1351 0E7A                           u1360 0E9E  
                         u1440 1448                   _BAUD4CONbits 0EE9                           u1361 0E9A  
                         u1441 1444                           u1450 13C0                           u1370 0ED4  
                         u1371 0ECE                           u1460 13EA                           u1380 0ED6  
                         u1470 13FA                           u1390 0F3A                           u1550 1086  
                         u1471 13F6                           u1391 0F36                           u1551 1082  
                         u1560 10AC                           u1457 13B6                           u1561 10A4  
                         _T2PR 0FBC                           u1467 13E0                           u1578 10AE  
                         abs@a 0007                           _dbuf 0060                           _main 1002  
                         _prec 0098                           _nout 0094                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F                           start 0038  
       __end_of_color_read_Red 14F8                   ___param_bank 0000                          ??_ISR 0001  
                        ??_abs 0009                 _sendIntSerial4 17F2                          ?_main 0001  
           _timer_high_pointer 00DA                __end_of___awdiv 11A0                __end_of___awmod 130A  
              ___awdiv@divisor 0003                          i2l667 0030                          i2l668 0034  
              ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 186A  
   __end_of_I2C_2_Master_Start 1894     __end_of_I2C_2_Master_Write 1876                    _turningGear 00DB  
                        _flags 009A                          _fputc 11A0                          _width 0096  
                        _putch 1894              _turnRight135Delay 00D0                          tablat 0FF5  
              _turnLeft90Delay 00D6                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
              __end_of_sprintf 1634        __end_of_color_read_Blue 15E8          _I2C_2_Master_RepStart 1876  
              ?_color_read_Red 0005                __initialization 1634                   __end_of_main 10DC  
       __end_of_sendIntSerial4 1814                         ??_main 0043                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2945 000A  
                       i2l2947 001A                         _RG6PPS 0E88                         i2l2949 002C  
                vfpfcnvrt@done 000F       __end_of_color_click_init 1720                         _RX4PPS 0E15  
                       _TX4REG 0EE4               _turnLeft135Delay 00D2                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001B                      ??___awdiv 0005  
                    ??___awmod 0005                ?_sendIntSerial4 0030                         clear_0 165A  
                       clear_1 1666               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       isa$std 0001                ___awmod@counter 0005                         fputc@c 0001  
            _timer_low_pointer 00D9                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1452              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0021              _buggy_lights_init 1720                     __accesstop 0060  
      __end_of__initialization 166C       __end_of_color_read_Clear 1598       __end_of_color_read_Green 1548  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 1778  
          ??_buggy_lights_init 0001                  __end_of_fputc 125A                  __end_of_putch 1896  
          __end_of_Timer0_init 17F2                        ??_fputc 0004      __end_of_buggy_lights_init 174E  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 1452              _color_writetoaddr 1814                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 1834  
           _I2C_2_Master_Start 188A                     _initUSART4 1834             _I2C_2_Master_Write 186A  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 17CA        sendStringSerial4@string 0002                        ___awdiv 10DC  
                      ___awmod 125A            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0018                   __psmallconst 0E00                        __pcinit 1634  
                      __ramtop 0E00                        __ptext0 1002                        __ptext1 17F2  
                      __ptext2 15E8                        __ptext3 13FC                        __ptext4 0E0C  
                      __ptext5 11A0                        __ptext6 1894                        __ptext7 16B8  
                      __ptext8 125A                        __ptext9 10DC                      _T2CONbits 0FBD  
             ___awmod@dividend 0001                      _T2HLTbits 0FBE                  _RxBufWriteCnt 00A1  
                      _sprintf 15E8           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 166C                    ?_getRGBCval 000C                        fputc@fp 0003  
            ?_color_click_init 0001             ??_color_click_init 0005               ??_sendIntSerial4 0032  
            __end_of_vfpfcnvrt 1002                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0013                     ??_vfprintf 001B                     _returnFlag 009C  
              _initDCmotorsPWM 130A           sendIntSerial4@string 0032                      _PORTFbits 0F8E  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0080  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 004D                     main@motorR 0056  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0012                    vfpfcnvrt@fp 000B            color_read_Clear@tmp 000A  
          start_initialization 1634                    __end_of_ISR 0038                    __end_of_abs 16EC  
                _TxBufWriteCnt 009F               _turnRight90Delay 00D4            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 139A                    vfprintf@fmt 0019                    __pdataBANK0 00CA  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___awdiv 0001  
                     ?___awmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 17A2              _I2C_2_Master_Init 174E  
            _I2C_2_Master_Read 1676              _I2C_2_Master_Stop 1880                   _RxBufReadCnt 00A0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                  _headbuttDelay 00CC       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 001C                      _rampDelay 00DE                   ??_getRGBCval 000D  
            _sendStringSerial4 139A            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 0F7B                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E                       _LATGbits 0F7F                       _LATHbits 0F80  
                     _PIE0bits 0E29             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                     i2u170_40 002C                       i2u170_41 0028                       _PIR0bits 0E33  
                     i2u169_40 001A                       i2u169_41 0016                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 009D  
                    _vfpfcnvrt 0E0C      __end_of_I2C_2_Master_Idle 17CA      __end_of_I2C_2_Master_Init 1778  
    __end_of_I2C_2_Master_Read 16B8      __end_of_I2C_2_Master_Stop 188A    I2C_2_Master_Write@data_byte 0002  
           __end_of_getRGBCval 14A8              ??_color_read_Blue 0007                   _TxBufReadCnt 009E  
                   vfpfcnvrt@c 0017                      copy_data0 1648      __end_of_sendStringSerial4 13FC  
__end_of_I2C_2_Master_RepStart 1880             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 001A                       __Lrparam 0000  
                   vfprintf@fp 0018                     ?_vfpfcnvrt 000B                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                     sprintf@fmt 001E                     sprintf@ret 0021  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6             __end_of_initUSART4 1852  
                     __ptext10 139A                       __ptext11 1852                       __ptext20 1676  
                     __ptext12 1834                       __ptext21 16EC                       __ptext13 130A  
                     __ptext22 1814                       __ptext14 1452                       __ptext23 186A  
                     __ptext15 14A8                       __ptext24 1880                       __ptext16 14F8  
                     __ptext25 188A                       __ptext17 1548                       __ptext26 17A2  
                     __ptext18 1598                       __ptext27 174E                       __ptext19 1876  
                     __ptext28 1720                       __ptext29 17CA                    getRGBCval@p 000C  
          main@measured_colour 0045                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005F  
                     _vfprintf 13FC                     _INTCONbits 0FF2                       intlevel2 0000  
                    sprintf@ap 0023                   _topGearRight 00DC              _manoeuvre_pointer 00D8  
                  ??_vfpfcnvrt 000E               _color_click_init 16EC          sendIntSerial4@integer 0030  
                  _topGearLeft 00DD                       sprintf@f 0024                       sprintf@s 001C  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                _trail_manoeuvre 00A2  
              _manoeuvre_count 009B                     _TX4STAbits 0EE8                _sendCharSerial4 1852  
