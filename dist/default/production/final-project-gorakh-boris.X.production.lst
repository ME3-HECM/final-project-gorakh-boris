

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 16:36:33 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 21/07/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   001D50                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _timer_low_pointer
    99   001D50  14                 	db	low _trail_timer_low
   100   001D51  01                 	db	high _trail_timer_low
   101                           
   102                           ;initializer for _timer_high_pointer
   103   001D52  28                 	db	low _trail_timer_high
   104   001D53  01                 	db	high _trail_timer_high
   105                           
   106                           ;initializer for _turningRightGear
   107   001D54  28                 	db	40
   108                           
   109                           ;initializer for _turningLeftGear
   110   001D55  28                 	db	40
   111                           
   112                           ;initializer for _bottomGearRight
   113   001D56  15                 	db	21
   114                           
   115                           ;initializer for _bottomGearLeft
   116   001D57  14                 	db	20
   117                           
   118                           ;initializer for _topGearRight
   119   001D58  14                 	db	20
   120                           
   121                           ;initializer for _topGearLeft
   122   001D59  14                 	db	20
   123                           
   124                           ;initializer for _rampDelay
   125   001D5A  08                 	db	8
   126                           
   127                           ;initializer for _sample_count
   128   001D5B  14                 	db	20
   129                           
   130                           	psect	idataBANK0
   131   001D3E                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _manoeuvre_pointer
   135   001D3E  00                 	db	low _trail_manoeuvre
   136   001D3F  01                 	db	high _trail_manoeuvre
   137                           
   138                           ;initializer for _squareDelay
   139   001D40  0988               	dw	2440
   140                           
   141                           ;initializer for _headbuttDelay
   142   001D42  0334               	dw	820
   143                           
   144                           ;initializer for _turn180Delay
   145   001D44  0190               	dw	400
   146                           
   147                           ;initializer for _turnRight135Delay
   148   001D46  0106               	dw	262
   149                           
   150                           ;initializer for _turnLeft135Delay
   151   001D48  00FA               	dw	250
   152                           
   153                           ;initializer for _turnRight90Delay
   154   001D4A  006C               	dw	108
   155                           
   156                           ;initializer for _turnLeft90Delay
   157   001D4C  0054               	dw	84
   158                           
   159                           ;initializer for _wall_threshold_clear
   160   001D4E  0032               	dw	50
   161   000000                     _TMR0H	set	4052
   162   000000                     _RC4STAbits	set	3815
   163   000000                     _SP4BRGH	set	3814
   164   000000                     _LATEbits	set	3965
   165   000000                     _TRISEbits	set	3973
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISGbits	set	3975
   168   000000                     _LATFbits	set	3966
   169   000000                     _LATHbits	set	3968
   170   000000                     _TRISFbits	set	3974
   171   000000                     _TRISHbits	set	3976
   172   000000                     _SSP2CON2bits	set	3802
   173   000000                     _RX4PPS	set	3605
   174   000000                     _SSP2CLKPPS	set	3612
   175   000000                     _SSP2DATPPS	set	3613
   176   000000                     _RC7PPS	set	3689
   177   000000                     _RE2PPS	set	3700
   178   000000                     _LATAbits	set	3961
   179   000000                     _LATDbits	set	3964
   180   000000                     _TRISDbits	set	3972
   181   000000                     _PORTFbits	set	3982
   182   000000                     _T2PR	set	4028
   183   000000                     _T2CONbits	set	4029
   184   000000                     _CCPR2H	set	4006
   185   000000                     _CCPR1H	set	4010
   186   000000                     _TRISCbits	set	3971
   187   000000                     _TRISAbits	set	3969
   188   000000                     _LATCbits	set	3963
   189   000000                     _RE4PPS	set	3702
   190   000000                     _RG6PPS	set	3720
   191   000000                     _RD5PPS	set	3695
   192   000000                     _ANSELDbits	set	3751
   193   000000                     _SSP2ADD	set	3798
   194   000000                     _SSP2CON1bits	set	3801
   195   000000                     _CCPR4H	set	3873
   196   000000                     _CCPR3H	set	3877
   197   000000                     _TMR0L	set	4051
   198   000000                     _T0CON0bits	set	4053
   199   000000                     _T0CON1bits	set	4054
   200   000000                     _T2CLKCONbits	set	4031
   201   000000                     _T2HLTbits	set	4030
   202   000000                     _CCP1CONbits	set	4011
   203   000000                     _CCPTMRS0bits	set	4013
   204   000000                     _CCP2CONbits	set	4007
   205   000000                     _CCP3CONbits	set	3878
   206   000000                     _CCP4CONbits	set	3874
   207   000000                     _TX4REG	set	3812
   208   000000                     _SP4BRGL	set	3813
   209   000000                     _TX4STAbits	set	3816
   210   000000                     _BAUD4CONbits	set	3817
   211   000000                     _SSP2CON2	set	3802
   212   000000                     _SSP2STAT	set	3800
   213   000000                     _ANSELFbits	set	3764
   214   000000                     _SSP2BUF	set	3797
   215   000000                     _PIE0bits	set	3625
   216   000000                     _PIR4bits	set	3639
   217   000000                     _RC0PPS	set	3682
   218   000000                     _RD6PPS	set	3696
   219   000000                     _INTCONbits	set	4082
   220   000000                     _PIR0bits	set	3635
   221                           
   222                           	psect	smallconst
   223   000E00                     __psmallconst:
   224                           	callstack 0
   225   000E00  00                 	db	0
   226   000E01                     STR_5:
   227                           
   228                           ; BSR set to: 14
   229   000E01  25                 	db	37
   230   000E02  75                 	db	117	;'u'
   231   000E03  20                 	db	32
   232   000E04  25                 	db	37
   233   000E05  75                 	db	117	;'u'
   234   000E06  20                 	db	32
   235   000E07  25                 	db	37
   236   000E08  75                 	db	117	;'u'
   237   000E09  20                 	db	32
   238   000E0A  25                 	db	37
   239   000E0B  75                 	db	117	;'u'
   240   000E0C  20                 	db	32
   241   000E0D  0D                 	db	13
   242   000E0E  00                 	db	0
   243   000E0F                     STR_1:
   244                           
   245                           ; BSR set to: 14
   246   000E0F  25                 	db	37
   247   000E10  64                 	db	100	;'d'
   248   000E11  20                 	db	32
   249   000E12  0D                 	db	13
   250   000E13  00                 	db	0
   251   000E14                     STR_2:
   252                           
   253                           ; BSR set to: 14
   254   000E14  25                 	db	37
   255   000E15  64                 	db	100	;'d'
   256   000E16  20                 	db	32
   257   000E17  00                 	db	0
   258   000E18  00                 	db	0	; dummy byte at the end
   259   000000                     
   260                           ; #config settings
   261                           
   262                           	psect	cinit
   263   001922                     __pcinit:
   264                           	callstack 0
   265   001922                     start_initialization:
   266                           	callstack 0
   267   001922                     __initialization:
   268                           	callstack 0
   269                           
   270                           ; Initialize objects allocated to BANK0 (18 bytes)
   271                           ; load TBLPTR registers with __pidataBANK0
   272   001922  0E3E               	movlw	low __pidataBANK0
   273   001924  6EF6               	movwf	tblptrl,c
   274   001926  0E1D               	movlw	high __pidataBANK0
   275   001928  6EF7               	movwf	tblptrh,c
   276   00192A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   277   00192C  6EF8               	movwf	tblptru,c
   278   00192E  EE00  F0AA         	lfsr	0,__pdataBANK0
   279   001932  EE10 F012          	lfsr	1,18
   280   001936                     copy_data0:
   281   001936  0009               	tblrd		*+
   282   001938  CFF5 FFEE          	movff	tablat,postinc0
   283   00193C  50E5               	movf	postdec1,w,c
   284   00193E  50E1               	movf	fsr1l,w,c
   285   001940  E1FA               	bnz	copy_data0
   286                           
   287                           ; Initialize objects allocated to COMRAM (12 bytes)
   288                           ; load TBLPTR registers with __pidataCOMRAM
   289   001942  0E50               	movlw	low __pidataCOMRAM
   290   001944  6EF6               	movwf	tblptrl,c
   291   001946  0E1D               	movlw	high __pidataCOMRAM
   292   001948  6EF7               	movwf	tblptrh,c
   293   00194A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   294   00194C  6EF8               	movwf	tblptru,c
   295   00194E  EE00  F04F         	lfsr	0,__pdataCOMRAM
   296   001952  EE10 F00C          	lfsr	1,12
   297   001956                     copy_data1:
   298   001956  0009               	tblrd		*+
   299   001958  CFF5 FFEE          	movff	tablat,postinc0
   300   00195C  50E5               	movf	postdec1,w,c
   301   00195E  50E1               	movf	fsr1l,w,c
   302   001960  E1FA               	bnz	copy_data1
   303                           
   304                           ; Clear objects allocated to BANK1 (60 bytes)
   305   001962  EE01  F000         	lfsr	0,__pbssBANK1
   306   001966  0E3C               	movlw	60
   307   001968                     clear_0:
   308   001968  6AEE               	clrf	postinc0,c
   309   00196A  06E8               	decf	wreg,f,c
   310   00196C  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to BANK0 (39 bytes)
   313   00196E  EE00  F060         	lfsr	0,__pbssBANK0
   314   001972  0E27               	movlw	39
   315   001974                     clear_1:
   316   001974  6AEE               	clrf	postinc0,c
   317   001976  06E8               	decf	wreg,f,c
   318   001978  E1FD               	bnz	clear_1
   319                           
   320                           ; Clear objects allocated to COMRAM (4 bytes)
   321   00197A  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   322   00197C  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   323   00197E  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   324   001980  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   325   001982                     end_of_initialization:
   326                           	callstack 0
   327   001982                     __end_of__initialization:
   328                           	callstack 0
   329   001982  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330   001984  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331   001986  0100               	movlb	0
   332   001988  EF93  F008         	goto	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMRAM
   335   00005B                     __pbssCOMRAM:
   336                           	callstack 0
   337   00005B                     _flags:
   338                           	callstack 0
   339   00005B                     	ds	1
   340   00005C                     _manoeuvre_count:
   341                           	callstack 0
   342   00005C                     	ds	1
   343   00005D                     _lost_flag:
   344                           	callstack 0
   345   00005D                     	ds	1
   346   00005E                     _returning:
   347                           	callstack 0
   348   00005E                     	ds	1
   349                           
   350                           	psect	dataCOMRAM
   351   00004F                     __pdataCOMRAM:
   352                           	callstack 0
   353   00004F                     _timer_low_pointer:
   354                           	callstack 0
   355   00004F                     	ds	2
   356   000051                     _timer_high_pointer:
   357                           	callstack 0
   358   000051                     	ds	2
   359   000053                     _turningRightGear:
   360                           	callstack 0
   361   000053                     	ds	1
   362   000054                     _turningLeftGear:
   363                           	callstack 0
   364   000054                     	ds	1
   365   000055                     _bottomGearRight:
   366                           	callstack 0
   367   000055                     	ds	1
   368   000056                     _bottomGearLeft:
   369                           	callstack 0
   370   000056                     	ds	1
   371   000057                     _topGearRight:
   372                           	callstack 0
   373   000057                     	ds	1
   374   000058                     _topGearLeft:
   375                           	callstack 0
   376   000058                     	ds	1
   377   000059                     _rampDelay:
   378                           	callstack 0
   379   000059                     	ds	1
   380   00005A                     _sample_count:
   381                           	callstack 0
   382   00005A                     	ds	1
   383                           
   384                           	psect	bssBANK0
   385   000060                     __pbssBANK0:
   386                           	callstack 0
   387   000060                     _dbuf:
   388                           	callstack 0
   389   000060                     	ds	32
   390   000080                     _nout:
   391                           	callstack 0
   392   000080                     	ds	2
   393   000082                     _width:
   394                           	callstack 0
   395   000082                     	ds	2
   396   000084                     _prec:
   397                           	callstack 0
   398   000084                     	ds	2
   399   000086                     _return_flag:
   400                           	callstack 0
   401   000086                     	ds	1
   402                           
   403                           	psect	dataBANK0
   404   0000AA                     __pdataBANK0:
   405                           	callstack 0
   406   0000AA                     _manoeuvre_pointer:
   407                           	callstack 0
   408   0000AA                     	ds	2
   409   0000AC                     _squareDelay:
   410                           	callstack 0
   411   0000AC                     	ds	2
   412   0000AE                     _headbuttDelay:
   413                           	callstack 0
   414   0000AE                     	ds	2
   415   0000B0                     _turn180Delay:
   416                           	callstack 0
   417   0000B0                     	ds	2
   418   0000B2                     _turnRight135Delay:
   419                           	callstack 0
   420   0000B2                     	ds	2
   421   0000B4                     _turnLeft135Delay:
   422                           	callstack 0
   423   0000B4                     	ds	2
   424   0000B6                     _turnRight90Delay:
   425                           	callstack 0
   426   0000B6                     	ds	2
   427   0000B8                     _turnLeft90Delay:
   428                           	callstack 0
   429   0000B8                     	ds	2
   430   0000BA                     _wall_threshold_clear:
   431                           	callstack 0
   432   0000BA                     	ds	2
   433                           
   434                           	psect	bssBANK1
   435   000100                     __pbssBANK1:
   436                           	callstack 0
   437   000100                     _trail_manoeuvre:
   438                           	callstack 0
   439   000100                     	ds	20
   440   000114                     _trail_timer_low:
   441                           	callstack 0
   442   000114                     	ds	20
   443   000128                     _trail_timer_high:
   444                           	callstack 0
   445   000128                     	ds	20
   446                           
   447                           	psect	cstackBANK0
   448   000087                     __pcstackBANK0:
   449                           	callstack 0
   450   000087                     main@mann:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x0
   454   000087                     	ds	1
   455   000088                     main@HSV_colour:
   456                           	callstack 0
   457                           
   458                           ; 6 bytes @ 0x1
   459   000088                     	ds	6
   460   00008E                     main@RGBC_colour:
   461                           	callstack 0
   462                           
   463                           ; 8 bytes @ 0x7
   464   00008E                     	ds	8
   465   000096                     main@timerH:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0xF
   469   000096                     	ds	1
   470   000097                     main@timerL:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x10
   474   000097                     	ds	1
   475   000098                     main@motorL:
   476                           	callstack 0
   477                           
   478                           ; 9 bytes @ 0x11
   479   000098                     	ds	9
   480   0000A1                     main@motorR:
   481                           	callstack 0
   482                           
   483                           ; 9 bytes @ 0x1A
   484   0000A1                     	ds	9
   485                           
   486                           	psect	cstackCOMRAM
   487   000001                     __pcstackCOMRAM:
   488                           	callstack 0
   489   000001                     ??_I2C_2_Master_Idle:
   490   000001                     ?___wmul:
   491                           	callstack 0
   492   000001                     ?___awdiv:
   493                           	callstack 0
   494   000001                     ?___awmod:
   495                           	callstack 0
   496   000001                     ?___lwmod:
   497                           	callstack 0
   498   000001                     sendCharSerial4@charToSend:
   499                           	callstack 0
   500   000001                     read_timer@tH:
   501                           	callstack 0
   502   000001                     write_timer@tL:
   503                           	callstack 0
   504   000001                     read_trail@tH:
   505                           	callstack 0
   506   000001                     write_trail@tL:
   507                           	callstack 0
   508   000001                     initDCmotorsPWM@PWMperiod:
   509                           	callstack 0
   510   000001                     ___wmul@multiplier:
   511                           	callstack 0
   512   000001                     ___awdiv@dividend:
   513                           	callstack 0
   514   000001                     ___awmod@dividend:
   515                           	callstack 0
   516   000001                     ___lwmod@dividend:
   517                           	callstack 0
   518   000001                     fputc@c:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x0
   522   000001                     	ds	1
   523   000002                     I2C_2_Master_Write@data_byte:
   524                           	callstack 0
   525   000002                     read_timer@tL:
   526                           	callstack 0
   527   000002                     write_timer@tH:
   528                           	callstack 0
   529   000002                     read_trail@tL:
   530                           	callstack 0
   531   000002                     write_trail@man:
   532                           	callstack 0
   533   000002                     sendStringSerial4@string:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1
   537   000002                     	ds	1
   538   000003                     color_writetoaddr@value:
   539                           	callstack 0
   540   000003                     read_trail@man:
   541                           	callstack 0
   542   000003                     write_trail@tH:
   543                           	callstack 0
   544   000003                     fputc@fp:
   545                           	callstack 0
   546   000003                     ___wmul@multiplicand:
   547                           	callstack 0
   548   000003                     ___awdiv@divisor:
   549                           	callstack 0
   550   000003                     ___awmod@divisor:
   551                           	callstack 0
   552   000003                     ___lwmod@divisor:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x2
   556   000003                     	ds	1
   557   000004                     ??_fputc:
   558   000004                     color_writetoaddr@address:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x3
   562   000004                     	ds	1
   563   000005                     ??_color_click_init:
   564   000005                     ___awdiv@counter:
   565                           	callstack 0
   566   000005                     ___awmod@counter:
   567                           	callstack 0
   568   000005                     ___lwmod@counter:
   569                           	callstack 0
   570   000005                     ___wmul@product:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574   000005                     	ds	1
   575   000006                     ___awdiv@sign:
   576                           	callstack 0
   577   000006                     ___awmod@sign:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x5
   581   000006                     	ds	1
   582   000007                     ?_abs:
   583                           	callstack 0
   584   000007                     ?___lwdiv:
   585                           	callstack 0
   586   000007                     ___awdiv@quotient:
   587                           	callstack 0
   588   000007                     ___lwdiv@dividend:
   589                           	callstack 0
   590   000007                     abs@a:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x6
   594   000007                     	ds	2
   595   000009                     ??_abs:
   596   000009                     ___lwdiv@divisor:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x8
   600   000009                     	ds	2
   601   00000B                     ___lwdiv@quotient:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xA
   605   00000B                     	ds	2
   606   00000D                     ___lwdiv@counter:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0xC
   610   00000D                     	ds	1
   611   00000E                     ?_vfpfcnvrt:
   612                           	callstack 0
   613   00000E                     setMotorPWM@m:
   614                           	callstack 0
   615   00000E                     vfpfcnvrt@fp:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0xD
   619   00000E                     	ds	1
   620   00000F                     ??_setMotorPWM:
   621   00000F                     vfpfcnvrt@fmt:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0xE
   625   00000F                     	ds	1
   626   000010                     vfpfcnvrt@ap:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0xF
   630   000010                     	ds	1
   631   000011                     ??_vfpfcnvrt:
   632   000011                     setMotorPWM@posDuty:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x10
   636   000011                     	ds	1
   637   000012                     setMotorPWM@negDuty:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x11
   641   000012                     	ds	1
   642   000013                     stop@mL:
   643                           	callstack 0
   644   000013                     fullSpeedAhead@mL:
   645                           	callstack 0
   646   000013                     vfpfcnvrt@done:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x12
   650   000013                     	ds	1
   651   000014                     stop@mR:
   652                           	callstack 0
   653   000014                     fullSpeedAhead@mR:
   654                           	callstack 0
   655   000014                     vfpfcnvrt@cnt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x13
   659   000014                     	ds	1
   660   000015                     ??_stop:
   661   000015                     ??_fullSpeedAhead:
   662                           
   663                           ; 1 bytes @ 0x14
   664   000015                     	ds	1
   665   000016                     fullSpeedAhead@leftGear:
   666                           	callstack 0
   667   000016                     vfpfcnvrt@cp:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x15
   671   000016                     	ds	1
   672   000017                     fullSpeedAhead@rightGear:
   673                           	callstack 0
   674   000017                     vfpfcnvrt@convarg:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x16
   678   000017                     	ds	4
   679   00001B                     vfpfcnvrt@c:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x1A
   683   00001B                     	ds	1
   684   00001C                     ?_vfprintf:
   685                           	callstack 0
   686   00001C                     vfprintf@fp:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x1B
   690   00001C                     	ds	1
   691   00001D                     vfprintf@fmt:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x1C
   695   00001D                     	ds	1
   696   00001E                     vfprintf@ap:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x1D
   700   00001E                     	ds	1
   701   00001F                     vfprintf@cfmt:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x1E
   705   00001F                     	ds	1
   706   000020                     ?_sprintf:
   707                           	callstack 0
   708   000020                     sprintf@s:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x1F
   712   000020                     	ds	2
   713   000022                     sprintf@fmt:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x21
   717   000022                     	ds	9
   718   00002B                     sprintf@ret:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x2A
   722   00002B                     	ds	2
   723   00002D                     sprintf@ap:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x2C
   727   00002D                     	ds	1
   728   00002E                     sprintf@f:
   729                           	callstack 0
   730                           
   731                           ; 12 bytes @ 0x2D
   732   00002E                     	ds	12
   733   00003A                     sendIntSerial4@integer:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x39
   737   00003A                     	ds	2
   738   00003C                     sendIntSerial4@string:
   739                           	callstack 0
   740                           
   741                           ; 17 bytes @ 0x3B
   742   00003C                     	ds	17
   743   00004D                     ??_main:
   744                           
   745                           ; 1 bytes @ 0x4C
   746   00004D                     	ds	2
   747                           
   748 ;;
   749 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   750 ;;
   751 ;; *************** function _main *****************
   752 ;; Defined at:
   753 ;;		line 30 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  motorR          9   26[BANK0 ] struct DC_motor
   758 ;;  motorL          9   17[BANK0 ] struct DC_motor
   759 ;;  RGBC_colour     8    7[BANK0 ] struct RGBC_val
   760 ;;  HSV_colour      6    1[BANK0 ] struct HSV_val
   761 ;;  PWMcycle        2    0        unsigned int 
   762 ;;  timerL          1   16[BANK0 ] unsigned char 
   763 ;;  timerH          1   15[BANK0 ] unsigned char 
   764 ;;  mann            1    0[BANK0 ] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   775 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   777 ;;      Totals:         2      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;Total ram usage:       37 bytes
   779 ;; Hardware stack levels required when called: 7
   780 ;; This function calls:
   781 ;;		_Timer0_init
   782 ;;		_buggy_lights_init
   783 ;;		_color_click_init
   784 ;;		_fullSpeedAhead
   785 ;;		_initDCmotorsPWM
   786 ;;		_initUSART4
   787 ;;		_read_timer
   788 ;;		_read_trail
   789 ;;		_reset_timer
   790 ;;		_sendIntSerial4
   791 ;;		_start_timer
   792 ;;		_stop
   793 ;;		_stop_timer
   794 ;;		_write_timer
   795 ;;		_write_trail
   796 ;; This function is called by:
   797 ;;		Startup code after reset
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text0
   802   001126                     __ptext0:
   803                           	callstack 0
   804   001126                     _main:
   805                           	callstack 24
   806   001126                     
   807                           ;main.c: 31:     struct RGBC_val RGBC_colour;;main.c: 32:         RGBC_colour.R = 0;
   808   001126  0E00               	movlw	0
   809   001128  0100               	movlb	0	; () banked
   810   00112A  6F8F               	movwf	(main@RGBC_colour+1)& (0+255),b
   811   00112C  0E00               	movlw	0
   812   00112E  6F8E               	movwf	main@RGBC_colour& (0+255),b
   813                           
   814                           ;main.c: 33:         RGBC_colour.G = 0;
   815   001130  0E00               	movlw	0
   816   001132  6F91               	movwf	(main@RGBC_colour+3)& (0+255),b
   817   001134  0E00               	movlw	0
   818   001136  6F90               	movwf	(main@RGBC_colour+2)& (0+255),b
   819                           
   820                           ;main.c: 34:         RGBC_colour.B = 0;
   821   001138  0E00               	movlw	0
   822   00113A  6F93               	movwf	(main@RGBC_colour+5)& (0+255),b
   823   00113C  0E00               	movlw	0
   824   00113E  6F92               	movwf	(main@RGBC_colour+4)& (0+255),b
   825                           
   826                           ;main.c: 35:         RGBC_colour.C = 0;
   827   001140  0E00               	movlw	0
   828   001142  6F95               	movwf	(main@RGBC_colour+7)& (0+255),b
   829   001144  0E00               	movlw	0
   830   001146  6F94               	movwf	(main@RGBC_colour+6)& (0+255),b
   831                           
   832                           ;main.c: 37:     struct HSV_val HSV_colour;;main.c: 38:         HSV_colour.H = 0;
   833   001148  0E00               	movlw	0
   834   00114A  6F89               	movwf	(main@HSV_colour+1)& (0+255),b
   835   00114C  0E00               	movlw	0
   836   00114E  6F88               	movwf	main@HSV_colour& (0+255),b
   837                           
   838                           ;main.c: 39:         HSV_colour.S = 0;
   839   001150  0E00               	movlw	0
   840   001152  6F8B               	movwf	(main@HSV_colour+3)& (0+255),b
   841   001154  0E00               	movlw	0
   842   001156  6F8A               	movwf	(main@HSV_colour+2)& (0+255),b
   843                           
   844                           ;main.c: 40:         HSV_colour.V = 0;
   845   001158  0E00               	movlw	0
   846   00115A  6F8D               	movwf	(main@HSV_colour+5)& (0+255),b
   847   00115C  0E00               	movlw	0
   848   00115E  6F8C               	movwf	(main@HSV_colour+4)& (0+255),b
   849                           
   850                           ;main.c: 43:     struct DC_motor motorL, motorR;;main.c: 44:         motorL.power = 0;
   851   001160  0E00               	movlw	0
   852   001162  6F98               	movwf	main@motorL& (0+255),b
   853                           
   854                           ;main.c: 45:         motorL.direction = 1;
   855   001164  0E01               	movlw	1
   856   001166  6F99               	movwf	(main@motorL+1)& (0+255),b
   857                           
   858                           ;main.c: 46:         motorL.brakemode = 1;
   859   001168  0E01               	movlw	1
   860   00116A  6F9A               	movwf	(main@motorL+2)& (0+255),b
   861   00116C                     
   862                           ; BSR set to: 0
   863                           ;main.c: 47:         motorL.PWMperiod = PWMcycle;
   864   00116C  0E00               	movlw	0
   865   00116E  6F9C               	movwf	(main@motorL+4)& (0+255),b
   866   001170  0E63               	movlw	99
   867   001172  6F9B               	movwf	(main@motorL+3)& (0+255),b
   868   001174                     
   869                           ; BSR set to: 0
   870                           ;main.c: 48:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   871   001174  0EAA               	movlw	170
   872   001176  6F9D               	movwf	(main@motorL+5)& (0+255),b
   873   001178  0E0F               	movlw	15
   874   00117A  6F9E               	movwf	(main@motorL+6)& (0+255),b
   875   00117C                     
   876                           ; BSR set to: 0
   877                           ;main.c: 49:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   878   00117C  0EA6               	movlw	166
   879   00117E  6F9F               	movwf	(main@motorL+7)& (0+255),b
   880   001180  0E0F               	movlw	15
   881   001182  6FA0               	movwf	(main@motorL+8)& (0+255),b
   882                           
   883                           ;main.c: 50:         motorR.power = 0;
   884   001184  0E00               	movlw	0
   885   001186  6FA1               	movwf	main@motorR& (0+255),b
   886                           
   887                           ;main.c: 51:         motorR.direction = 1;
   888   001188  0E01               	movlw	1
   889   00118A  6FA2               	movwf	(main@motorR+1)& (0+255),b
   890                           
   891                           ;main.c: 52:         motorR.brakemode = 1;
   892   00118C  0E01               	movlw	1
   893   00118E  6FA3               	movwf	(main@motorR+2)& (0+255),b
   894   001190                     
   895                           ; BSR set to: 0
   896                           ;main.c: 53:         motorR.PWMperiod = PWMcycle;
   897   001190  0E00               	movlw	0
   898   001192  6FA5               	movwf	(main@motorR+4)& (0+255),b
   899   001194  0E63               	movlw	99
   900   001196  6FA4               	movwf	(main@motorR+3)& (0+255),b
   901   001198                     
   902                           ; BSR set to: 0
   903                           ;main.c: 54:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   904   001198  0E25               	movlw	37
   905   00119A  6FA6               	movwf	(main@motorR+5)& (0+255),b
   906   00119C  0E0F               	movlw	15
   907   00119E  6FA7               	movwf	(main@motorR+6)& (0+255),b
   908   0011A0                     
   909                           ; BSR set to: 0
   910                           ;main.c: 55:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   911   0011A0  0E21               	movlw	33
   912   0011A2  6FA8               	movwf	(main@motorR+7)& (0+255),b
   913   0011A4  0E0F               	movlw	15
   914   0011A6  6FA9               	movwf	(main@motorR+8)& (0+255),b
   915   0011A8                     
   916                           ; BSR set to: 0
   917                           ;main.c: 58:     initDCmotorsPWM(PWMcycle);
   918   0011A8  0E00               	movlw	0
   919   0011AA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   920   0011AC  0E63               	movlw	99
   921   0011AE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   922   0011B0  ECC8  F00B         	call	_initDCmotorsPWM	;wreg free
   923                           
   924                           ;main.c: 59:     buggy_lights_init();
   925   0011B4  ECF1  F00D         	call	_buggy_lights_init	;wreg free
   926   0011B8                     
   927                           ;main.c: 60:     color_click_init();
   928   0011B8  ECD7  F00D         	call	_color_click_init	;wreg free
   929   0011BC                     
   930                           ;main.c: 61:     initUSART4();
   931   0011BC  EC79  F00E         	call	_initUSART4	;wreg free
   932   0011C0                     
   933                           ;main.c: 62:     Timer0_init();
   934   0011C0  EC31  F00E         	call	_Timer0_init	;wreg free
   935   0011C4                     
   936                           ;main.c: 66:         TRISDbits.TRISD7 = 0;
   937   0011C4  9E84               	bcf	132,7,c	;volatile
   938   0011C6                     
   939                           ;main.c: 67:         TRISHbits.TRISH3 = 0;
   940   0011C6  9688               	bcf	136,3,c	;volatile
   941   0011C8                     
   942                           ;main.c: 69:         LATDbits.LATD7 = 0;
   943   0011C8  9E7C               	bcf	124,7,c	;volatile
   944   0011CA                     
   945                           ;main.c: 70:         LATHbits.LATH3 = 0;
   946   0011CA  9680               	bcf	128,3,c	;volatile
   947   0011CC                     
   948                           ;main.c: 74:         TRISFbits.TRISF2 = 1;
   949   0011CC  8486               	bsf	134,2,c	;volatile
   950   0011CE                     
   951                           ;main.c: 75:         TRISFbits.TRISF3 = 1;
   952   0011CE  8686               	bsf	134,3,c	;volatile
   953   0011D0                     
   954                           ;main.c: 77:         ANSELFbits.ANSELF2 = 0;
   955   0011D0  010E               	movlb	14	; () banked
   956   0011D2  95B4               	bcf	180,2,b	;volatile
   957   0011D4                     
   958                           ; BSR set to: 14
   959                           ;main.c: 78:         ANSELFbits.ANSELF3 = 0;
   960   0011D4  97B4               	bcf	180,3,b	;volatile
   961   0011D6                     l449:
   962   0011D6  B68E               	btfsc	142,3,c	;volatile
   963   0011D8  EFF0  F008         	goto	u3991
   964   0011DC  EFF2  F008         	goto	u3990
   965   0011E0                     u3991:
   966   0011E0  EFEB  F008         	goto	l449
   967   0011E4                     u3990:
   968   0011E4                     
   969                           ;main.c: 81:     LATDbits.LATD7 = !LATDbits.LATD7;
   970   0011E4  AE7C               	btfss	124,7,c	;volatile
   971   0011E6  EFF7  F008         	goto	u4001
   972   0011EA  EFFB  F008         	goto	u4000
   973   0011EE                     u4001:
   974   0011EE  6A4D               	clrf	??_main^0,c
   975   0011F0  2A4D               	incf	??_main^0,f,c
   976   0011F2  EFFC  F008         	goto	u4018
   977   0011F6                     u4000:
   978   0011F6  6A4D               	clrf	??_main^0,c
   979   0011F8                     u4018:
   980   0011F8  324D               	rrcf	??_main^0,f,c
   981   0011FA  324D               	rrcf	??_main^0,f,c
   982   0011FC  507C               	movf	124,w,c	;volatile
   983   0011FE  184D               	xorwf	??_main^0,w,c
   984   001200  0B7F               	andlw	-129
   985   001202  184D               	xorwf	??_main^0,w,c
   986   001204  6E7C               	movwf	124,c	;volatile
   987                           
   988                           ;main.c: 82:     LATHbits.LATH3 = !LATHbits.LATH3;
   989   001206  A680               	btfss	128,3,c	;volatile
   990   001208  EF08  F009         	goto	u4021
   991   00120C  EF0C  F009         	goto	u4020
   992   001210                     u4021:
   993   001210  6A4D               	clrf	??_main^0,c
   994   001212  2A4D               	incf	??_main^0,f,c
   995   001214  EF0D  F009         	goto	u4038
   996   001218                     u4020:
   997   001218  6A4D               	clrf	??_main^0,c
   998   00121A                     u4038:
   999   00121A  464D               	rlncf	??_main^0,f,c
  1000   00121C  464D               	rlncf	??_main^0,f,c
  1001   00121E  464D               	rlncf	??_main^0,f,c
  1002   001220  5080               	movf	128,w,c	;volatile
  1003   001222  184D               	xorwf	??_main^0,w,c
  1004   001224  0BF7               	andlw	-9
  1005   001226  184D               	xorwf	??_main^0,w,c
  1006   001228  6E80               	movwf	128,c	;volatile
  1007   00122A                     
  1008                           ;main.c: 83:      _delay((unsigned long)((1000)*(64000000/4000.0)));
  1009   00122A  0E52               	movlw	82
  1010   00122C  6E4E               	movwf	(??_main+1)^0,c
  1011   00122E  0E2B               	movlw	43
  1012   001230  6E4D               	movwf	??_main^0,c
  1013   001232  0E00               	movlw	0
  1014   001234                     u4177:
  1015   001234  2EE8               	decfsz	wreg,f,c
  1016   001236  D7FE               	bra	u4177
  1017   001238  2E4D               	decfsz	??_main^0,f,c
  1018   00123A  D7FC               	bra	u4177
  1019   00123C  2E4E               	decfsz	(??_main+1)^0,f,c
  1020   00123E  D7FA               	bra	u4177
  1021   001240  D000               	nop2	
  1022   001242                     
  1023                           ;main.c: 130:     unsigned char timerH = 0;
  1024   001242  0E00               	movlw	0
  1025   001244  0100               	movlb	0	; () banked
  1026   001246  6F96               	movwf	main@timerH& (0+255),b
  1027   001248                     
  1028                           ; BSR set to: 0
  1029                           ;main.c: 131:     unsigned char timerL = 0;
  1030   001248  0E00               	movlw	0
  1031   00124A  6F97               	movwf	main@timerL& (0+255),b
  1032   00124C                     
  1033                           ; BSR set to: 0
  1034                           ;main.c: 132:     unsigned char mann = 0;
  1035   00124C  0E00               	movlw	0
  1036   00124E  6F87               	movwf	main@mann& (0+255),b
  1037   001250                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 134:     reset_timer();
  1040   001250  ECB4  F00E         	call	_reset_timer	;wreg free
  1041   001254                     
  1042                           ;main.c: 135:     start_timer();
  1043   001254  ECCC  F00E         	call	_start_timer	;wreg free
  1044   001258                     
  1045                           ;main.c: 136:     fullSpeedAhead(&motorL, &motorR);
  1046   001258  0E98               	movlw	low main@motorL
  1047   00125A  6E13               	movwf	fullSpeedAhead@mL^0,c
  1048   00125C  0EA1               	movlw	low main@motorR
  1049   00125E  6E14               	movwf	fullSpeedAhead@mR^0,c
  1050   001260  EC13  F00B         	call	_fullSpeedAhead	;wreg free
  1051   001264                     
  1052                           ;main.c: 138:     _delay((unsigned long)((3153)*(64000000/4000.0)));
  1053   001264  0E00               	movlw	0
  1054   001266  6E4E               	movwf	(??_main+1)^0,c
  1055   001268  0EED               	movlw	237
  1056   00126A  6E4D               	movwf	??_main^0,c
  1057   00126C  0E36               	movlw	54
  1058   00126E                     u4187:
  1059   00126E  2EE8               	decfsz	wreg,f,c
  1060   001270  D7FE               	bra	u4187
  1061   001272  2E4D               	decfsz	??_main^0,f,c
  1062   001274  D7FC               	bra	u4187
  1063   001276  2E4E               	decfsz	(??_main+1)^0,f,c
  1064   001278  D7FA               	bra	u4187
  1065   00127A                     
  1066                           ;main.c: 140:     read_timer(&timerH, &timerL);
  1067   00127A  0E96               	movlw	low main@timerH
  1068   00127C  6E01               	movwf	read_timer@tH^0,c
  1069   00127E  0E97               	movlw	low main@timerL
  1070   001280  6E02               	movwf	read_timer@tL^0,c
  1071   001282  EC94  F00E         	call	_read_timer	;wreg free
  1072   001286                     
  1073                           ;main.c: 141:     stop_timer();
  1074   001286  ECCA  F00E         	call	_stop_timer	;wreg free
  1075   00128A                     
  1076                           ;main.c: 142:     stop(&motorL, &motorR);
  1077   00128A  0E98               	movlw	low main@motorL
  1078   00128C  6E13               	movwf	stop@mL^0,c
  1079   00128E  0EA1               	movlw	low main@motorR
  1080   001290  6E14               	movwf	stop@mR^0,c
  1081   001292  EC10  F00C         	call	_stop	;wreg free
  1082   001296                     
  1083                           ;main.c: 144:     sendIntSerial4(timerH);
  1084   001296  C096  F03A         	movff	main@timerH,sendIntSerial4@integer
  1085   00129A  6A3B               	clrf	(sendIntSerial4@integer+1)^0,c
  1086   00129C  EC58  F00E         	call	_sendIntSerial4	;wreg free
  1087   0012A0                     
  1088                           ;main.c: 145:     sendIntSerial4(timerL);
  1089   0012A0  C097  F03A         	movff	main@timerL,sendIntSerial4@integer
  1090   0012A4  6A3B               	clrf	(sendIntSerial4@integer+1)^0,c
  1091   0012A6  EC58  F00E         	call	_sendIntSerial4	;wreg free
  1092   0012AA                     
  1093                           ;main.c: 147:     write_trail(timerH, timerL, mann);
  1094   0012AA  C097  F001         	movff	main@timerL,write_trail@tL
  1095   0012AE  C087  F002         	movff	main@mann,write_trail@man
  1096   0012B2  0100               	movlb	0	; () banked
  1097   0012B4  5196               	movf	main@timerH& (0+255),w,b
  1098   0012B6  ECA1  F00D         	call	_write_trail
  1099   0012BA                     
  1100                           ;main.c: 150:     returning = 1;
  1101   0012BA  0E01               	movlw	1
  1102   0012BC  6E5E               	movwf	_returning^0,c
  1103   0012BE                     l452:
  1104   0012BE  B68E               	btfsc	142,3,c	;volatile
  1105   0012C0  EF64  F009         	goto	u4041
  1106   0012C4  EF66  F009         	goto	u4040
  1107   0012C8                     u4041:
  1108   0012C8  EF5F  F009         	goto	l452
  1109   0012CC                     u4040:
  1110   0012CC                     
  1111                           ;main.c: 153:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1112   0012CC  0E52               	movlw	82
  1113   0012CE  6E4E               	movwf	(??_main+1)^0,c
  1114   0012D0  0E2B               	movlw	43
  1115   0012D2  6E4D               	movwf	??_main^0,c
  1116   0012D4  0E00               	movlw	0
  1117   0012D6                     u4197:
  1118   0012D6  2EE8               	decfsz	wreg,f,c
  1119   0012D8  D7FE               	bra	u4197
  1120   0012DA  2E4D               	decfsz	??_main^0,f,c
  1121   0012DC  D7FC               	bra	u4197
  1122   0012DE  2E4E               	decfsz	(??_main+1)^0,f,c
  1123   0012E0  D7FA               	bra	u4197
  1124   0012E2  D000               	nop2	
  1125   0012E4                     
  1126                           ;main.c: 156:     read_trail(&timerH, &timerL, &mann);
  1127   0012E4  0E96               	movlw	low main@timerH
  1128   0012E6  6E01               	movwf	read_trail@tH^0,c
  1129   0012E8  0E97               	movlw	low main@timerL
  1130   0012EA  6E02               	movwf	read_trail@tL^0,c
  1131   0012EC  0E87               	movlw	low main@mann
  1132   0012EE  6E03               	movwf	read_trail@man^0,c
  1133   0012F0  EC54  F00D         	call	_read_trail	;wreg free
  1134   0012F4                     
  1135                           ;main.c: 158:     sendIntSerial4(timerH);
  1136   0012F4  C096  F03A         	movff	main@timerH,sendIntSerial4@integer
  1137   0012F8  6A3B               	clrf	(sendIntSerial4@integer+1)^0,c
  1138   0012FA  EC58  F00E         	call	_sendIntSerial4	;wreg free
  1139   0012FE                     
  1140                           ;main.c: 159:     sendIntSerial4(timerL);
  1141   0012FE  C097  F03A         	movff	main@timerL,sendIntSerial4@integer
  1142   001302  6A3B               	clrf	(sendIntSerial4@integer+1)^0,c
  1143   001304  EC58  F00E         	call	_sendIntSerial4	;wreg free
  1144   001308                     
  1145                           ;main.c: 161:     write_timer(0b11111111 - timerH, 0b11111111 - timerL);
  1146   001308  0100               	movlb	0	; () banked
  1147   00130A  5197               	movf	main@timerL& (0+255),w,b
  1148   00130C  0AFF               	xorlw	255
  1149   00130E  6E01               	movwf	write_timer@tL^0,c
  1150   001310  5196               	movf	main@timerH& (0+255),w,b
  1151   001312  0AFF               	xorlw	255
  1152   001314  ECBA  F00E         	call	_write_timer
  1153   001318                     
  1154                           ;main.c: 162:     start_timer();
  1155   001318  ECCC  F00E         	call	_start_timer	;wreg free
  1156   00131C                     
  1157                           ;main.c: 163:     fullSpeedAhead(&motorL, &motorR);
  1158   00131C  0E98               	movlw	low main@motorL
  1159   00131E  6E13               	movwf	fullSpeedAhead@mL^0,c
  1160   001320  0EA1               	movlw	low main@motorR
  1161   001322  6E14               	movwf	fullSpeedAhead@mR^0,c
  1162   001324  EC13  F00B         	call	_fullSpeedAhead	;wreg free
  1163   001328                     l4749:
  1164   001328  0100               	movlb	0	; () banked
  1165   00132A  5186               	movf	_return_flag& (0+255),w,b
  1166   00132C  B4D8               	btfsc	status,2,c
  1167   00132E  EF9B  F009         	goto	u4051
  1168   001332  EF9D  F009         	goto	u4050
  1169   001336                     u4051:
  1170   001336  EF94  F009         	goto	l4749
  1171   00133A                     u4050:
  1172   00133A                     
  1173                           ; BSR set to: 0
  1174                           ;main.c: 175:     stop(&motorL, &motorR);
  1175   00133A  0E98               	movlw	low main@motorL
  1176   00133C  6E13               	movwf	stop@mL^0,c
  1177   00133E  0EA1               	movlw	low main@motorR
  1178   001340  6E14               	movwf	stop@mR^0,c
  1179   001342  EC10  F00C         	call	_stop	;wreg free
  1180   001346                     
  1181                           ;main.c: 176:     stop_timer();
  1182   001346  ECCA  F00E         	call	_stop_timer	;wreg free
  1183   00134A                     
  1184                           ;main.c: 177:     return_flag = 0;
  1185   00134A  0E00               	movlw	0
  1186   00134C  0100               	movlb	0	; () banked
  1187   00134E  6F86               	movwf	_return_flag& (0+255),b
  1188   001350                     
  1189                           ; BSR set to: 0
  1190   001350  EF20  F000         	goto	start
  1191   001354                     __end_of_main:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _write_trail *****************
  1195 ;; Defined at:
  1196 ;;		line 100 in file "timers.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  tH              1    wreg     unsigned char 
  1199 ;;  tL              1    0[COMRAM] unsigned char 
  1200 ;;  man             1    1[COMRAM] unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  tH              1    2[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;Total ram usage:        3 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;;		_forward_navigation
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text1
  1228   001B42                     __ptext1:
  1229                           	callstack 0
  1230   001B42                     _write_trail:
  1231                           	callstack 29
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;incstack = 0
  1235                           ;write_trail@tH stored from wreg
  1236   001B42  6E03               	movwf	write_trail@tH^0,c
  1237   001B44                     
  1238                           ;timers.c: 100: void write_trail(unsigned char tH, unsigned char tL, unsigned char man);
      +                          timers.c: 101: {;timers.c: 102:     *timer_high_pointer = tH;
  1239   001B44  C051  FFD9         	movff	_timer_high_pointer,fsr2l
  1240   001B48  C052  FFDA         	movff	_timer_high_pointer+1,fsr2h
  1241   001B4C  C003  FFDF         	movff	write_trail@tH,indf2
  1242   001B50                     
  1243                           ;timers.c: 103:     *timer_low_pointer = tL;
  1244   001B50  C04F  FFD9         	movff	_timer_low_pointer,fsr2l
  1245   001B54  C050  FFDA         	movff	_timer_low_pointer+1,fsr2h
  1246   001B58  C001  FFDF         	movff	write_trail@tL,indf2
  1247   001B5C                     
  1248                           ;timers.c: 104:     *manoeuvre_pointer = man;
  1249   001B5C  C0AA  FFD9         	movff	_manoeuvre_pointer,fsr2l
  1250   001B60  C0AB  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  1251   001B64  C002  FFDF         	movff	write_trail@man,indf2
  1252   001B68                     
  1253                           ;timers.c: 106:     timer_high_pointer ++;
  1254   001B68  4A51               	infsnz	_timer_high_pointer^0,f,c
  1255   001B6A  2A52               	incf	(_timer_high_pointer+1)^0,f,c
  1256   001B6C                     
  1257                           ;timers.c: 107:     timer_low_pointer ++;
  1258   001B6C  4A4F               	infsnz	_timer_low_pointer^0,f,c
  1259   001B6E  2A50               	incf	(_timer_low_pointer+1)^0,f,c
  1260   001B70                     
  1261                           ;timers.c: 108:     manoeuvre_pointer ++;
  1262   001B70  0100               	movlb	0	; () banked
  1263   001B72  4BAA               	infsnz	_manoeuvre_pointer& (0+255),f,b
  1264   001B74  2BAB               	incf	(_manoeuvre_pointer+1)& (0+255),f,b
  1265   001B76                     
  1266                           ; BSR set to: 0
  1267                           ;timers.c: 110:     manoeuvre_count ++;
  1268   001B76  2A5C               	incf	_manoeuvre_count^0,f,c
  1269   001B78                     
  1270                           ; BSR set to: 0
  1271   001B78  0012               	return		;funcret
  1272   001B7A                     __end_of_write_trail:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _stop_timer *****************
  1276 ;; Defined at:
  1277 ;;		line 38 in file "timers.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		None
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;Total ram usage:        0 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;;		_forward_navigation
  1303 ;;		_return_to_sender
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text2
  1308   001D94                     __ptext2:
  1309                           	callstack 0
  1310   001D94                     _stop_timer:
  1311                           	callstack 29
  1312   001D94                     
  1313                           ;timers.c: 40:     T0CON0bits.T0EN=0;
  1314   001D94  9ED5               	bcf	213,7,c	;volatile
  1315   001D96  0012               	return		;funcret
  1316   001D98                     __end_of_stop_timer:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _stop *****************
  1320 ;; Defined at:
  1321 ;;		line 93 in file "dc_motor.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1324 ;;		 -> main@motorL(9), 
  1325 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1326 ;;		 -> main@motorR(9), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;Total ram usage:        3 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 3
  1345 ;; This function calls:
  1346 ;;		_setMotorPWM
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;;		_turnLeft90
  1350 ;;		_turnRight90
  1351 ;;		_turnLeft135
  1352 ;;		_turnRight135
  1353 ;;		_UTurn
  1354 ;;		_headbuttReverse
  1355 ;;		_squareReverse
  1356 ;;		_forward_navigation
  1357 ;;		_return_to_sender
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text3
  1362   001820                     __ptext3:
  1363                           	callstack 0
  1364   001820                     _stop:
  1365                           	callstack 27
  1366   001820                     
  1367                           ;dc_motor.c: 93: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 94: {;dc_motor.c: 95:
      +                               while ((mL->power>0) || (mR->power>0)){
  1368   001820  EF40  F00C         	goto	l4013
  1369   001824                     l3999:
  1370                           
  1371                           ;dc_motor.c: 96:         if (mL->power>0) {mL->power--;}
  1372   001824  5013               	movf	stop@mL^0,w,c
  1373   001826  6ED9               	movwf	fsr2l,c
  1374   001828  6ADA               	clrf	fsr2h,c
  1375   00182A  50DF               	movf	indf2,w,c
  1376   00182C  B4D8               	btfsc	status,2,c
  1377   00182E  EF1B  F00C         	goto	u3281
  1378   001832  EF1D  F00C         	goto	u3280
  1379   001836                     u3281:
  1380   001836  EF21  F00C         	goto	l4003
  1381   00183A                     u3280:
  1382   00183A  5013               	movf	stop@mL^0,w,c
  1383   00183C  6ED9               	movwf	fsr2l,c
  1384   00183E  6ADA               	clrf	fsr2h,c
  1385   001840  06DF               	decf	indf2,f,c
  1386   001842                     l4003:
  1387                           
  1388                           ;dc_motor.c: 97:         if (mR->power>0) {mR->power--;}
  1389   001842  5014               	movf	stop@mR^0,w,c
  1390   001844  6ED9               	movwf	fsr2l,c
  1391   001846  6ADA               	clrf	fsr2h,c
  1392   001848  50DF               	movf	indf2,w,c
  1393   00184A  B4D8               	btfsc	status,2,c
  1394   00184C  EF2A  F00C         	goto	u3291
  1395   001850  EF2C  F00C         	goto	u3290
  1396   001854                     u3291:
  1397   001854  EF30  F00C         	goto	l4007
  1398   001858                     u3290:
  1399   001858  5014               	movf	stop@mR^0,w,c
  1400   00185A  6ED9               	movwf	fsr2l,c
  1401   00185C  6ADA               	clrf	fsr2h,c
  1402   00185E  06DF               	decf	indf2,f,c
  1403   001860                     l4007:
  1404                           
  1405                           ;dc_motor.c: 98:         setMotorPWM(mL);
  1406   001860  C013  F00E         	movff	stop@mL,setMotorPWM@m
  1407   001864  ECAA  F009         	call	_setMotorPWM	;wreg free
  1408   001868                     
  1409                           ;dc_motor.c: 99:         setMotorPWM(mR);
  1410   001868  C014  F00E         	movff	stop@mR,setMotorPWM@m
  1411   00186C  ECAA  F009         	call	_setMotorPWM	;wreg free
  1412   001870                     
  1413                           ;dc_motor.c: 100:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  1414   001870  0EA7               	movlw	167
  1415   001872  6E15               	movwf	??_stop^0,c
  1416   001874  0E3A               	movlw	58
  1417   001876                     u4207:
  1418   001876  2EE8               	decfsz	wreg,f,c
  1419   001878  D7FE               	bra	u4207
  1420   00187A  2E15               	decfsz	??_stop^0,f,c
  1421   00187C  D7FC               	bra	u4207
  1422   00187E  D000               	nop2	
  1423   001880                     l4013:
  1424                           
  1425                           ;dc_motor.c: 95:     while ((mL->power>0) || (mR->power>0)){
  1426   001880  5013               	movf	stop@mL^0,w,c
  1427   001882  6ED9               	movwf	fsr2l,c
  1428   001884  6ADA               	clrf	fsr2h,c
  1429   001886  50DF               	movf	indf2,w,c
  1430   001888  A4D8               	btfss	status,2,c
  1431   00188A  EF49  F00C         	goto	u3301
  1432   00188E  EF4B  F00C         	goto	u3300
  1433   001892                     u3301:
  1434   001892  EF12  F00C         	goto	l3999
  1435   001896                     u3300:
  1436   001896  5014               	movf	stop@mR^0,w,c
  1437   001898  6ED9               	movwf	fsr2l,c
  1438   00189A  6ADA               	clrf	fsr2h,c
  1439   00189C  50DF               	movf	indf2,w,c
  1440   00189E  A4D8               	btfss	status,2,c
  1441   0018A0  EF54  F00C         	goto	u3311
  1442   0018A4  EF56  F00C         	goto	u3310
  1443   0018A8                     u3311:
  1444   0018A8  EF12  F00C         	goto	l3999
  1445   0018AC                     u3310:
  1446   0018AC  0012               	return		;funcret
  1447   0018AE                     __end_of_stop:
  1448                           	callstack 0
  1449                           
  1450 ;; *************** function _sendIntSerial4 *****************
  1451 ;; Defined at:
  1452 ;;		line 43 in file "serial.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  integer         2   57[COMRAM] int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  string         17   59[COMRAM] unsigned char [17]
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;Total ram usage:       19 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 6
  1473 ;; This function calls:
  1474 ;;		_sendStringSerial4
  1475 ;;		_sprintf
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;;		_return_to_sender
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text4
  1483   001CB0                     __ptext4:
  1484                           	callstack 0
  1485   001CB0                     _sendIntSerial4:
  1486                           	callstack 24
  1487   001CB0                     
  1488                           ;serial.c: 45:     char string[sizeof(int) * 8 + 1];;serial.c: 46:     sprintf(string, "
      +                          %d \r", integer);
  1489   001CB0  0E3C               	movlw	low sendIntSerial4@string
  1490   001CB2  6E20               	movwf	sprintf@s^0,c
  1491   001CB4  6A21               	clrf	(sprintf@s+1)^0,c
  1492   001CB6  0E0F               	movlw	low STR_1
  1493   001CB8  6E22               	movwf	sprintf@fmt^0,c
  1494   001CBA  C03A  F023         	movff	sendIntSerial4@integer,?_sprintf+3
  1495   001CBE  C03B  F024         	movff	sendIntSerial4@integer+1,?_sprintf+4
  1496   001CC2  EC7B  F00D         	call	_sprintf	;wreg free
  1497   001CC6                     
  1498                           ;serial.c: 47:     sendStringSerial4(string);
  1499   001CC6  0E3C               	movlw	low sendIntSerial4@string
  1500   001CC8  6E02               	movwf	sendStringSerial4@string^0,c
  1501   001CCA  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1502   001CCC  ECF8  F00C         	call	_sendStringSerial4	;wreg free
  1503   001CD0  0012               	return		;funcret
  1504   001CD2                     __end_of_sendIntSerial4:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _sprintf *****************
  1508 ;; Defined at:
  1509 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  s               2   31[COMRAM] PTR unsigned char 
  1512 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1513 ;;  fmt             1   33[COMRAM] PTR const unsigned char 
  1514 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  f              12   45[COMRAM] struct _IO_FILE
  1517 ;;  ret             2   42[COMRAM] int 
  1518 ;;  ap              1   44[COMRAM] PTR void [1]
  1519 ;;		 -> ?_sprintf(2), 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2   31[COMRAM] int 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1529 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;Total ram usage:       26 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 5
  1536 ;; This function calls:
  1537 ;;		_vfprintf
  1538 ;; This function is called by:
  1539 ;;		_sendIntSerial4
  1540 ;;		_sendArrayCharSerial4
  1541 ;;		_sendRGBCvalSerial4
  1542 ;;		_sendHSVvalSerial4
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text5
  1547   001AF6                     __ptext5:
  1548                           	callstack 0
  1549   001AF6                     _sprintf:
  1550                           	callstack 24
  1551   001AF6  0E23               	movlw	low (?_sprintf+3)
  1552   001AF8  6E2D               	movwf	sprintf@ap^0,c
  1553   001AFA  C020  F02E         	movff	sprintf@s,sprintf@f
  1554   001AFE  C021  F02F         	movff	sprintf@s+1,sprintf@f+1
  1555   001B02  0E00               	movlw	0
  1556   001B04  6E32               	movwf	(sprintf@f+4)^0,c
  1557   001B06  0E00               	movlw	0
  1558   001B08  6E31               	movwf	(sprintf@f+3)^0,c
  1559   001B0A  0E00               	movlw	0
  1560   001B0C  6E39               	movwf	(sprintf@f+11)^0,c
  1561   001B0E  0E00               	movlw	0
  1562   001B10  6E38               	movwf	(sprintf@f+10)^0,c
  1563   001B12  0E2E               	movlw	low sprintf@f
  1564   001B14  6E1C               	movwf	vfprintf@fp^0,c
  1565   001B16  C022  F01D         	movff	sprintf@fmt,vfprintf@fmt
  1566   001B1A  0E2D               	movlw	low sprintf@ap
  1567   001B1C  6E1E               	movwf	vfprintf@ap^0,c
  1568   001B1E  EC29  F00D         	call	_vfprintf	;wreg free
  1569   001B22  C01C  F02B         	movff	?_vfprintf,sprintf@ret
  1570   001B26  C01D  F02C         	movff	?_vfprintf+1,sprintf@ret+1
  1571   001B2A  5031               	movf	(sprintf@f+3)^0,w,c
  1572   001B2C  2420               	addwf	sprintf@s^0,w,c
  1573   001B2E  6ED9               	movwf	fsr2l,c
  1574   001B30  5032               	movf	(sprintf@f+4)^0,w,c
  1575   001B32  2021               	addwfc	(sprintf@s+1)^0,w,c
  1576   001B34  6EDA               	movwf	fsr2h,c
  1577   001B36  6ADF               	clrf	indf2,c
  1578   001B38  C02B  F020         	movff	sprintf@ret,?_sprintf
  1579   001B3C  C02C  F021         	movff	sprintf@ret+1,?_sprintf+1
  1580   001B40  0012               	return		;funcret
  1581   001B42                     __end_of_sprintf:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _vfprintf *****************
  1585 ;; Defined at:
  1586 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  1589 ;;		 -> sprintf@f(12), 
  1590 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1591 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1592 ;;  ap              1   29[COMRAM] PTR PTR void 
  1593 ;;		 -> sprintf@ap(1), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  1596 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2   27[COMRAM] int 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1606 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;Total ram usage:        4 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 4
  1613 ;; This function calls:
  1614 ;;		_vfpfcnvrt
  1615 ;; This function is called by:
  1616 ;;		_sprintf
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text6
  1621   001A52                     __ptext6:
  1622                           	callstack 0
  1623   001A52                     _vfprintf:
  1624                           	callstack 24
  1625   001A52                     
  1626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1627   001A52  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  1628   001A56                     
  1629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1630   001A56  0E00               	movlw	0
  1631   001A58  0100               	movlb	0	; () banked
  1632   001A5A  6F81               	movwf	(_nout+1)& (0+255),b
  1633   001A5C  0E00               	movlw	0
  1634   001A5E  6F80               	movwf	_nout& (0+255),b
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1637   001A60  EF3F  F00D         	goto	l3531
  1638   001A64                     l3529:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1642   001A64  C01C  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1643   001A68  0E1F               	movlw	low vfprintf@cfmt
  1644   001A6A  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  1645   001A6C  C01E  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  1646   001A70  EC0D  F007         	call	_vfpfcnvrt	;wreg free
  1647   001A74  500E               	movf	?_vfpfcnvrt^0,w,c
  1648   001A76  0100               	movlb	0	; () banked
  1649   001A78  2780               	addwf	_nout& (0+255),f,b
  1650   001A7A  500F               	movf	(?_vfpfcnvrt+1)^0,w,c
  1651   001A7C  2381               	addwfc	(_nout+1)& (0+255),f,b
  1652   001A7E                     l3531:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1656   001A7E  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1657   001A82                     	if	1	;There is more than 1 active tblptr byte
  1658   001A82  0E0E               	movlw	high __smallconst
  1659   001A84  6EF7               	movwf	tblptrh,c
  1660   001A86                     	endif
  1661   001A86                     	if	0	;tblptru may be non-zero
  1662   001A86                     	endif
  1663   001A86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1664   001A86  0E00               	movlw	low (__smallconst shr (0+16))
  1665   001A88  6EF8               	movwf	tblptru,c
  1666   001A8A                     	endif
  1667   001A8A  0008               	tblrd		*
  1668   001A8C  50F5               	movf	tablat,w,c
  1669   001A8E  0900               	iorlw	0
  1670   001A90  A4D8               	btfss	status,2,c
  1671   001A92  EF4D  F00D         	goto	u2571
  1672   001A96  EF4F  F00D         	goto	u2570
  1673   001A9A                     u2571:
  1674   001A9A  EF32  F00D         	goto	l3529
  1675   001A9E                     u2570:
  1676   001A9E                     
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1679   001A9E  C080  F01C         	movff	_nout,?_vfprintf
  1680   001AA2  C081  F01D         	movff	_nout+1,?_vfprintf+1
  1681   001AA6                     
  1682                           ; BSR set to: 0
  1683   001AA6  0012               	return		;funcret
  1684   001AA8                     __end_of_vfprintf:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _vfpfcnvrt *****************
  1688 ;; Defined at:
  1689 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1692 ;;		 -> sprintf@f(12), 
  1693 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  1694 ;;		 -> vfprintf@cfmt(1), 
  1695 ;;  ap              1   15[COMRAM] PTR PTR void 
  1696 ;;		 -> sprintf@ap(1), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  convarg         4   22[COMRAM] struct .
  1699 ;;  cnt             2   19[COMRAM] int 
  1700 ;;  c               1   26[COMRAM] unsigned char 
  1701 ;;  cp              1   21[COMRAM] PTR unsigned char 
  1702 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1703 ;;  done            1   18[COMRAM] _Bool 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2   13[COMRAM] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1713 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;Total ram usage:       14 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		___awdiv
  1722 ;;		___awmod
  1723 ;;		___lwdiv
  1724 ;;		___lwmod
  1725 ;;		_abs
  1726 ;;		_fputc
  1727 ;; This function is called by:
  1728 ;;		_vfprintf
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733   000E1A                     __ptext7:
  1734                           	callstack 0
  1735   000E1A                     _vfpfcnvrt:
  1736                           	callstack 24
  1737   000E1A                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1739   000E1A  0E00               	movlw	0
  1740   000E1C  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1741   000E1E  0E00               	movlw	0
  1742   000E20  6E14               	movwf	vfpfcnvrt@cnt^0,c
  1743   000E22                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1745   000E22  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1746   000E24  6ED9               	movwf	fsr2l,c
  1747   000E26  6ADA               	clrf	fsr2h,c
  1748   000E28  CFDF FFF6          	movff	indf2,tblptrl
  1749   000E2C                     	if	1	;There is more than 1 active tblptr byte
  1750   000E2C  0E0E               	movlw	high __smallconst
  1751   000E2E  6EF7               	movwf	tblptrh,c
  1752   000E30                     	endif
  1753   000E30                     	if	0	;tblptru may be non-zero
  1754   000E30                     	endif
  1755   000E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1756   000E30  0E00               	movlw	low (__smallconst shr (0+16))
  1757   000E32  6EF8               	movwf	tblptru,c
  1758   000E34                     	endif
  1759   000E34  0008               	tblrd		*
  1760   000E36  50F5               	movf	tablat,w,c
  1761   000E38  0A25               	xorlw	37
  1762   000E3A  A4D8               	btfss	status,2,c
  1763   000E3C  EF22  F007         	goto	u2421
  1764   000E40  EF24  F007         	goto	u2420
  1765   000E44                     u2421:
  1766   000E44  EF79  F008         	goto	l3389
  1767   000E48                     u2420:
  1768   000E48                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1770   000E48  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1771   000E4A  6ED9               	movwf	fsr2l,c
  1772   000E4C  6ADA               	clrf	fsr2h,c
  1773   000E4E  2ADF               	incf	indf2,f,c
  1774   000E50                     
  1775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1776   000E50  0E00               	movlw	0
  1777   000E52  0100               	movlb	0	; () banked
  1778   000E54  6F83               	movwf	(_width+1)& (0+255),b
  1779   000E56  0E00               	movlw	0
  1780   000E58  6F82               	movwf	_width& (0+255),b
  1781   000E5A  C082  F05B         	movff	_width,_flags
  1782   000E5E                     
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1785   000E5E  6984               	setf	_prec& (0+255),b
  1786   000E60  6985               	setf	(_prec+1)& (0+255),b
  1787   000E62                     
  1788                           ; BSR set to: 0
  1789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1790   000E62  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1791   000E64  6ED9               	movwf	fsr2l,c
  1792   000E66  6ADA               	clrf	fsr2h,c
  1793   000E68  50DF               	movf	indf2,w,c
  1794   000E6A  6E16               	movwf	vfpfcnvrt@cp^0,c
  1795   000E6C                     
  1796                           ; BSR set to: 0
  1797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1798   000E6C  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1799   000E70                     	if	1	;There is more than 1 active tblptr byte
  1800   000E70  0E0E               	movlw	high __smallconst
  1801   000E72  6EF7               	movwf	tblptrh,c
  1802   000E74                     	endif
  1803   000E74                     	if	0	;tblptru may be non-zero
  1804   000E74                     	endif
  1805   000E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1806   000E74  0E00               	movlw	low (__smallconst shr (0+16))
  1807   000E76  6EF8               	movwf	tblptru,c
  1808   000E78                     	endif
  1809   000E78  0008               	tblrd		*
  1810   000E7A  50F5               	movf	tablat,w,c
  1811   000E7C  0A64               	xorlw	100
  1812   000E7E  B4D8               	btfsc	status,2,c
  1813   000E80  EF44  F007         	goto	u2431
  1814   000E84  EF46  F007         	goto	u2430
  1815   000E88                     u2431:
  1816   000E88  EF56  F007         	goto	l3325
  1817   000E8C                     u2430:
  1818   000E8C                     
  1819                           ; BSR set to: 0
  1820   000E8C  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1821   000E90                     	if	1	;There is more than 1 active tblptr byte
  1822   000E90  0E0E               	movlw	high __smallconst
  1823   000E92  6EF7               	movwf	tblptrh,c
  1824   000E94                     	endif
  1825   000E94                     	if	0	;tblptru may be non-zero
  1826   000E94                     	endif
  1827   000E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1828   000E94  0E00               	movlw	low (__smallconst shr (0+16))
  1829   000E96  6EF8               	movwf	tblptru,c
  1830   000E98                     	endif
  1831   000E98  0008               	tblrd		*
  1832   000E9A  50F5               	movf	tablat,w,c
  1833   000E9C  0A69               	xorlw	105
  1834   000E9E  A4D8               	btfss	status,2,c
  1835   000EA0  EF54  F007         	goto	u2441
  1836   000EA4  EF56  F007         	goto	u2440
  1837   000EA8                     u2441:
  1838   000EA8  EFE4  F007         	goto	l3355
  1839   000EAC                     u2440:
  1840   000EAC                     l3325:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1844   000EAC  5010               	movf	vfpfcnvrt@ap^0,w,c
  1845   000EAE  6ED9               	movwf	fsr2l,c
  1846   000EB0  6ADA               	clrf	fsr2h,c
  1847   000EB2  0E02               	movlw	2
  1848   000EB4  26DF               	addwf	indf2,f,c
  1849   000EB6  5CDF               	subwf	indf2,w,c
  1850   000EB8  6ED9               	movwf	fsr2l,c
  1851   000EBA  6ADA               	clrf	fsr2h,c
  1852   000EBC  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  1853   000EC0  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  1854   000EC4                     
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1857   000EC4  500F               	movf	vfpfcnvrt@fmt^0,w,c
  1858   000EC6  6ED9               	movwf	fsr2l,c
  1859   000EC8  6ADA               	clrf	fsr2h,c
  1860   000ECA  2816               	incf	vfpfcnvrt@cp^0,w,c
  1861   000ECC  6EDF               	movwf	indf2,c
  1862   000ECE                     
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1865   000ECE  0E20               	movlw	32
  1866   000ED0  6E1B               	movwf	vfpfcnvrt@c^0,c
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1869   000ED2  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1870   000ED4  EF6E  F007         	goto	u2451
  1871   000ED8  EF71  F007         	goto	u2450
  1872   000EDC                     u2451:
  1873   000EDC  0E01               	movlw	1
  1874   000EDE  EF72  F007         	goto	u2460
  1875   000EE2                     u2450:
  1876   000EE2  0E00               	movlw	0
  1877   000EE4                     u2460:
  1878   000EE4  6E13               	movwf	vfpfcnvrt@done^0,c
  1879   000EE6                     l3331:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1882   000EE6  061B               	decf	vfpfcnvrt@c^0,f,c
  1883   000EE8  501B               	movf	vfpfcnvrt@c^0,w,c
  1884   000EEA  0F60               	addlw	low _dbuf
  1885   000EEC  6ED9               	movwf	fsr2l,c
  1886   000EEE  6ADA               	clrf	fsr2h,c
  1887   000EF0  C017  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1888   000EF4  C018  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1889   000EF8  0E00               	movlw	0
  1890   000EFA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1891   000EFC  0E0A               	movlw	10
  1892   000EFE  6E03               	movwf	___awmod@divisor^0,c
  1893   000F00  EC70  F00B         	call	___awmod	;wreg free
  1894   000F04  C001  F007         	movff	?___awmod,abs@a
  1895   000F08  C002  F008         	movff	?___awmod+1,abs@a+1
  1896   000F0C  ECBD  F00D         	call	_abs	;wreg free
  1897   000F10  5007               	movf	?_abs^0,w,c
  1898   000F12  0F30               	addlw	48
  1899   000F14  6EDF               	movwf	indf2,c
  1900   000F16                     
  1901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1902   000F16  C017  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1903   000F1A  C018  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1904   000F1E  0E00               	movlw	0
  1905   000F20  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1906   000F22  0E0A               	movlw	10
  1907   000F24  6E03               	movwf	___awdiv@divisor^0,c
  1908   000F26  EC54  F00A         	call	___awdiv	;wreg free
  1909   000F2A  C001  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  1910   000F2E  C002  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1911   000F32                     
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1913   000F32  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1914   000F34  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1915   000F36                     
  1916                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1917   000F36  5017               	movf	vfpfcnvrt@convarg^0,w,c
  1918   000F38  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1919   000F3A  B4D8               	btfsc	status,2,c
  1920   000F3C  EFA2  F007         	goto	u2471
  1921   000F40  EFA4  F007         	goto	u2470
  1922   000F44                     u2471:
  1923   000F44  EFAC  F007         	goto	l3341
  1924   000F48                     u2470:
  1925   000F48  501B               	movf	vfpfcnvrt@c^0,w,c
  1926   000F4A  A4D8               	btfss	status,2,c
  1927   000F4C  EFAA  F007         	goto	u2481
  1928   000F50  EFAC  F007         	goto	u2480
  1929   000F54                     u2481:
  1930   000F54  EF73  F007         	goto	l3331
  1931   000F58                     u2480:
  1932   000F58                     l3341:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1935   000F58  501B               	movf	vfpfcnvrt@c^0,w,c
  1936   000F5A  B4D8               	btfsc	status,2,c
  1937   000F5C  EFB2  F007         	goto	u2491
  1938   000F60  EFB4  F007         	goto	u2490
  1939   000F64                     u2491:
  1940   000F64  EFD5  F007         	goto	l3353
  1941   000F68                     u2490:
  1942   000F68  5013               	movf	vfpfcnvrt@done^0,w,c
  1943   000F6A  B4D8               	btfsc	status,2,c
  1944   000F6C  EFBA  F007         	goto	u2501
  1945   000F70  EFBC  F007         	goto	u2500
  1946   000F74                     u2501:
  1947   000F74  EFD5  F007         	goto	l3353
  1948   000F78                     u2500:
  1949   000F78                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1951   000F78  061B               	decf	vfpfcnvrt@c^0,f,c
  1952   000F7A  501B               	movf	vfpfcnvrt@c^0,w,c
  1953   000F7C  0F60               	addlw	low _dbuf
  1954   000F7E  6ED9               	movwf	fsr2l,c
  1955   000F80  6ADA               	clrf	fsr2h,c
  1956   000F82  0E2D               	movlw	45
  1957   000F84  6EDF               	movwf	indf2,c
  1958   000F86                     
  1959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1960   000F86  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1961   000F88  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1962   000F8A  EFD5  F007         	goto	l3353
  1963   000F8E                     l3349:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1966   000F8E  501B               	movf	vfpfcnvrt@c^0,w,c
  1967   000F90  0F60               	addlw	low _dbuf
  1968   000F92  6ED9               	movwf	fsr2l,c
  1969   000F94  6ADA               	clrf	fsr2h,c
  1970   000F96  50DF               	movf	indf2,w,c
  1971   000F98  6E11               	movwf	??_vfpfcnvrt^0,c
  1972   000F9A  5011               	movf	??_vfpfcnvrt^0,w,c
  1973   000F9C  6E01               	movwf	fputc@c^0,c
  1974   000F9E  6A02               	clrf	(fputc@c+1)^0,c
  1975   000FA0  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1976   000FA4  ECB6  F00A         	call	_fputc	;wreg free
  1977   000FA8  2A1B               	incf	vfpfcnvrt@c^0,f,c
  1978   000FAA                     l3353:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1981   000FAA  0E20               	movlw	32
  1982   000FAC  181B               	xorwf	vfpfcnvrt@c^0,w,c
  1983   000FAE  A4D8               	btfss	status,2,c
  1984   000FB0  EFDC  F007         	goto	u2511
  1985   000FB4  EFDE  F007         	goto	u2510
  1986   000FB8                     u2511:
  1987   000FB8  EFC7  F007         	goto	l3349
  1988   000FBC                     u2510:
  1989   000FBC                     l1495:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1992   000FBC  C014  F00E         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1993   000FC0  C015  F00F         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1994   000FC4  EF92  F008         	goto	l1496
  1995   000FC8                     l3355:
  1996                           
  1997                           ; BSR set to: 0
  1998   000FC8  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1999   000FCC                     	if	1	;There is more than 1 active tblptr byte
  2000   000FCC  0E0E               	movlw	high __smallconst
  2001   000FCE  6EF7               	movwf	tblptrh,c
  2002   000FD0                     	endif
  2003   000FD0                     	if	0	;tblptru may be non-zero
  2004   000FD0                     	endif
  2005   000FD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2006   000FD0  0E00               	movlw	low (__smallconst shr (0+16))
  2007   000FD2  6EF8               	movwf	tblptru,c
  2008   000FD4                     	endif
  2009   000FD4  0008               	tblrd		*
  2010   000FD6  50F5               	movf	tablat,w,c
  2011   000FD8  0A75               	xorlw	117
  2012   000FDA  A4D8               	btfss	status,2,c
  2013   000FDC  EFF2  F007         	goto	u2521
  2014   000FE0  EFF4  F007         	goto	u2520
  2015   000FE4                     u2521:
  2016   000FE4  EF6F  F008         	goto	l3383
  2017   000FE8                     u2520:
  2018   000FE8                     
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2021   000FE8  5010               	movf	vfpfcnvrt@ap^0,w,c
  2022   000FEA  6ED9               	movwf	fsr2l,c
  2023   000FEC  6ADA               	clrf	fsr2h,c
  2024   000FEE  0E02               	movlw	2
  2025   000FF0  26DF               	addwf	indf2,f,c
  2026   000FF2  5CDF               	subwf	indf2,w,c
  2027   000FF4  6ED9               	movwf	fsr2l,c
  2028   000FF6  6ADA               	clrf	fsr2h,c
  2029   000FF8  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  2030   000FFC  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  2031   001000                     
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2034   001000  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2035   001002  6ED9               	movwf	fsr2l,c
  2036   001004  6ADA               	clrf	fsr2h,c
  2037   001006  2816               	incf	vfpfcnvrt@cp^0,w,c
  2038   001008  6EDF               	movwf	indf2,c
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2041   00100A  EF57  F008         	goto	l3381
  2042   00100E                     l3361:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2046   00100E  0E20               	movlw	32
  2047   001010  6E1B               	movwf	vfpfcnvrt@c^0,c
  2048   001012                     l3363:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2051   001012  061B               	decf	vfpfcnvrt@c^0,f,c
  2052   001014  501B               	movf	vfpfcnvrt@c^0,w,c
  2053   001016  0F60               	addlw	low _dbuf
  2054   001018  6ED9               	movwf	fsr2l,c
  2055   00101A  6ADA               	clrf	fsr2h,c
  2056   00101C  C017  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2057   001020  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2058   001024  0E00               	movlw	0
  2059   001026  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2060   001028  0E0A               	movlw	10
  2061   00102A  6E03               	movwf	___lwmod@divisor^0,c
  2062   00102C  ECC6  F00C         	call	___lwmod	;wreg free
  2063   001030  5001               	movf	?___lwmod^0,w,c
  2064   001032  0F30               	addlw	48
  2065   001034  6EDF               	movwf	indf2,c
  2066   001036                     
  2067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2068   001036  C017  F007         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2069   00103A  C018  F008         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2070   00103E  0E00               	movlw	0
  2071   001040  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2072   001042  0E0A               	movlw	10
  2073   001044  6E09               	movwf	___lwdiv@divisor^0,c
  2074   001046  EC57  F00C         	call	___lwdiv	;wreg free
  2075   00104A  C007  F017         	movff	?___lwdiv,vfpfcnvrt@convarg
  2076   00104E  C008  F018         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2077   001052                     
  2078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2079   001052  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  2080   001054  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2081   001056                     
  2082                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2083   001056  5017               	movf	vfpfcnvrt@convarg^0,w,c
  2084   001058  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2085   00105A  B4D8               	btfsc	status,2,c
  2086   00105C  EF32  F008         	goto	u2531
  2087   001060  EF34  F008         	goto	u2530
  2088   001064                     u2531:
  2089   001064  EF4C  F008         	goto	l3377
  2090   001068                     u2530:
  2091   001068  501B               	movf	vfpfcnvrt@c^0,w,c
  2092   00106A  A4D8               	btfss	status,2,c
  2093   00106C  EF3A  F008         	goto	u2541
  2094   001070  EF3C  F008         	goto	u2540
  2095   001074                     u2541:
  2096   001074  EF09  F008         	goto	l3363
  2097   001078                     u2540:
  2098   001078  EF4C  F008         	goto	l3377
  2099   00107C                     l3373:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2102   00107C  501B               	movf	vfpfcnvrt@c^0,w,c
  2103   00107E  0F60               	addlw	low _dbuf
  2104   001080  6ED9               	movwf	fsr2l,c
  2105   001082  6ADA               	clrf	fsr2h,c
  2106   001084  50DF               	movf	indf2,w,c
  2107   001086  6E11               	movwf	??_vfpfcnvrt^0,c
  2108   001088  5011               	movf	??_vfpfcnvrt^0,w,c
  2109   00108A  6E01               	movwf	fputc@c^0,c
  2110   00108C  6A02               	clrf	(fputc@c+1)^0,c
  2111   00108E  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2112   001092  ECB6  F00A         	call	_fputc	;wreg free
  2113   001096  2A1B               	incf	vfpfcnvrt@c^0,f,c
  2114   001098                     l3377:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2117   001098  0E20               	movlw	32
  2118   00109A  181B               	xorwf	vfpfcnvrt@c^0,w,c
  2119   00109C  A4D8               	btfss	status,2,c
  2120   00109E  EF53  F008         	goto	u2551
  2121   0010A2  EF55  F008         	goto	u2550
  2122   0010A6                     u2551:
  2123   0010A6  EF3E  F008         	goto	l3373
  2124   0010AA                     u2550:
  2125   0010AA  EFDE  F007         	goto	l1495
  2126   0010AE                     l3381:
  2127                           
  2128                           ; BSR set to: 0
  2129   0010AE  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2130   0010B2                     	if	1	;There is more than 1 active tblptr byte
  2131   0010B2  0E0E               	movlw	high __smallconst
  2132   0010B4  6EF7               	movwf	tblptrh,c
  2133   0010B6                     	endif
  2134   0010B6                     	if	0	;tblptru may be non-zero
  2135   0010B6                     	endif
  2136   0010B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2137   0010B6  0E00               	movlw	low (__smallconst shr (0+16))
  2138   0010B8  6EF8               	movwf	tblptru,c
  2139   0010BA                     	endif
  2140   0010BA  0008               	tblrd		*
  2141   0010BC  50F5               	movf	tablat,w,c
  2142   0010BE  6E11               	movwf	??_vfpfcnvrt^0,c
  2143   0010C0  6A12               	clrf	(??_vfpfcnvrt+1)^0,c
  2144                           
  2145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2146                           ; Switch size 1, requested type "simple"
  2147                           ; Number of cases is 1, Range of values is 0 to 0
  2148                           ; switch strategies available:
  2149                           ; Name         Instructions Cycles
  2150                           ; simple_byte            4     3 (average)
  2151                           ;	Chosen strategy is simple_byte
  2152   0010C2  5012               	movf	(??_vfpfcnvrt+1)^0,w,c
  2153   0010C4  0A00               	xorlw	0	; case 0
  2154   0010C6  B4D8               	btfsc	status,2,c
  2155   0010C8  EF68  F008         	goto	l4887
  2156   0010CC  EF6F  F008         	goto	l3383
  2157   0010D0                     l4887:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ; Switch size 1, requested type "simple"
  2161                           ; Number of cases is 1, Range of values is 117 to 117
  2162                           ; switch strategies available:
  2163                           ; Name         Instructions Cycles
  2164                           ; simple_byte            4     3 (average)
  2165                           ;	Chosen strategy is simple_byte
  2166   0010D0  5011               	movf	??_vfpfcnvrt^0,w,c
  2167   0010D2  0A75               	xorlw	117	; case 117
  2168   0010D4  B4D8               	btfsc	status,2,c
  2169   0010D6  EF07  F008         	goto	l3361
  2170   0010DA  EF6F  F008         	goto	l3383
  2171   0010DE                     l3383:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2175   0010DE  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2176   0010E0  6ED9               	movwf	fsr2l,c
  2177   0010E2  6ADA               	clrf	fsr2h,c
  2178   0010E4  2ADF               	incf	indf2,f,c
  2179   0010E6                     
  2180                           ; BSR set to: 0
  2181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2182   0010E6  0E00               	movlw	0
  2183   0010E8  6E0F               	movwf	(?_vfpfcnvrt+1)^0,c
  2184   0010EA  0E00               	movlw	0
  2185   0010EC  6E0E               	movwf	?_vfpfcnvrt^0,c
  2186   0010EE  EF92  F008         	goto	l1496
  2187   0010F2                     l3389:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2190   0010F2  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2191   0010F4  6ED9               	movwf	fsr2l,c
  2192   0010F6  6ADA               	clrf	fsr2h,c
  2193   0010F8  CFDF FFF6          	movff	indf2,tblptrl
  2194   0010FC                     	if	1	;There is more than 1 active tblptr byte
  2195   0010FC  0E0E               	movlw	high __smallconst
  2196   0010FE  6EF7               	movwf	tblptrh,c
  2197   001100                     	endif
  2198   001100                     	if	0	;tblptru may be non-zero
  2199   001100                     	endif
  2200   001100                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2201   001100  0E00               	movlw	low (__smallconst shr (0+16))
  2202   001102  6EF8               	movwf	tblptru,c
  2203   001104                     	endif
  2204   001104  0008               	tblrd		*
  2205   001106  50F5               	movf	tablat,w,c
  2206   001108  6E01               	movwf	fputc@c^0,c
  2207   00110A  6A02               	clrf	(fputc@c+1)^0,c
  2208   00110C  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2209   001110  ECB6  F00A         	call	_fputc	;wreg free
  2210   001114                     
  2211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2212   001114  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2213   001116  6ED9               	movwf	fsr2l,c
  2214   001118  6ADA               	clrf	fsr2h,c
  2215   00111A  2ADF               	incf	indf2,f,c
  2216   00111C                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2218   00111C  0E00               	movlw	0
  2219   00111E  6E0F               	movwf	(?_vfpfcnvrt+1)^0,c
  2220   001120  0E01               	movlw	1
  2221   001122  6E0E               	movwf	?_vfpfcnvrt^0,c
  2222   001124                     l1496:
  2223   001124  0012               	return		;funcret
  2224   001126                     __end_of_vfpfcnvrt:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function _fputc *****************
  2228 ;; Defined at:
  2229 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  c               2    0[COMRAM] int 
  2232 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2233 ;;		 -> sprintf@f(12), 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  2    0[COMRAM] int 
  2238 ;; Registers used:
  2239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2245 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;Total ram usage:        8 bytes
  2250 ;; Hardware stack levels used: 1
  2251 ;; Hardware stack levels required when called: 2
  2252 ;; This function calls:
  2253 ;;		_putch
  2254 ;; This function is called by:
  2255 ;;		_vfpfcnvrt
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text8
  2260   00156C                     __ptext8:
  2261                           	callstack 0
  2262   00156C                     _fputc:
  2263                           	callstack 24
  2264   00156C  5003               	movf	fputc@fp^0,w,c
  2265   00156E  B4D8               	btfsc	status,2,c
  2266   001570  EFBC  F00A         	goto	u2151
  2267   001574  EFBE  F00A         	goto	u2150
  2268   001578                     u2151:
  2269   001578  EFC6  F00A         	goto	l3201
  2270   00157C                     u2150:
  2271   00157C  5003               	movf	fputc@fp^0,w,c
  2272   00157E  A4D8               	btfss	status,2,c
  2273   001580  EFC4  F00A         	goto	u2161
  2274   001584  EFC6  F00A         	goto	u2160
  2275   001588                     u2161:
  2276   001588  EFCB  F00A         	goto	l3203
  2277   00158C                     u2160:
  2278   00158C                     l3201:
  2279   00158C  5001               	movf	fputc@c^0,w,c
  2280   00158E  ECCE  F00E         	call	_putch
  2281   001592  EF12  F00B         	goto	l1534
  2282   001596                     l3203:
  2283   001596  5003               	movf	fputc@fp^0,w,c
  2284   001598  6ED9               	movwf	fsr2l,c
  2285   00159A  6ADA               	clrf	fsr2h,c
  2286   00159C  0E0A               	movlw	10
  2287   00159E  26D9               	addwf	fsr2l,f,c
  2288   0015A0  50DE               	movf	postinc2,w,c
  2289   0015A2  10DE               	iorwf	postinc2,w,c
  2290   0015A4  B4D8               	btfsc	status,2,c
  2291   0015A6  EFD7  F00A         	goto	u2171
  2292   0015AA  EFD9  F00A         	goto	u2170
  2293   0015AE                     u2171:
  2294   0015AE  EFF2  F00A         	goto	l3207
  2295   0015B2                     u2170:
  2296   0015B2  5003               	movf	fputc@fp^0,w,c
  2297   0015B4  6ED9               	movwf	fsr2l,c
  2298   0015B6  6ADA               	clrf	fsr2h,c
  2299   0015B8  0E0A               	movlw	10
  2300   0015BA  26D9               	addwf	fsr2l,f,c
  2301   0015BC  5003               	movf	fputc@fp^0,w,c
  2302   0015BE  6EE1               	movwf	fsr1l,c
  2303   0015C0  6AE2               	clrf	fsr1h,c
  2304   0015C2  0E03               	movlw	3
  2305   0015C4  26E1               	addwf	fsr1l,f,c
  2306   0015C6  50DE               	movf	postinc2,w,c
  2307   0015C8  5CE6               	subwf	postinc1,w,c
  2308   0015CA  50E6               	movf	postinc1,w,c
  2309   0015CC  0A80               	xorlw	128
  2310   0015CE  6E08               	movwf	(??_fputc+4)^0,c
  2311   0015D0  50DE               	movf	postinc2,w,c
  2312   0015D2  0A80               	xorlw	128
  2313   0015D4  5808               	subwfb	(??_fputc+4)^0,w,c
  2314   0015D6  B0D8               	btfsc	status,0,c
  2315   0015D8  EFF0  F00A         	goto	u2181
  2316   0015DC  EFF2  F00A         	goto	u2180
  2317   0015E0                     u2181:
  2318   0015E0  EF12  F00B         	goto	l1534
  2319   0015E4                     u2180:
  2320   0015E4                     l3207:
  2321   0015E4  5003               	movf	fputc@fp^0,w,c
  2322   0015E6  6ED9               	movwf	fsr2l,c
  2323   0015E8  6ADA               	clrf	fsr2h,c
  2324   0015EA  0E03               	movlw	3
  2325   0015EC  26D9               	addwf	fsr2l,f,c
  2326   0015EE  CFDE F004          	movff	postinc2,??_fputc
  2327   0015F2  CFDD F005          	movff	postdec2,??_fputc+1
  2328   0015F6  5003               	movf	fputc@fp^0,w,c
  2329   0015F8  6ED9               	movwf	fsr2l,c
  2330   0015FA  6ADA               	clrf	fsr2h,c
  2331   0015FC  CFDE F006          	movff	postinc2,??_fputc+2
  2332   001600  CFDD F007          	movff	postdec2,??_fputc+3
  2333   001604  5004               	movf	??_fputc^0,w,c
  2334   001606  2406               	addwf	(??_fputc+2)^0,w,c
  2335   001608  6ED9               	movwf	fsr2l,c
  2336   00160A  5005               	movf	(??_fputc+1)^0,w,c
  2337   00160C  2007               	addwfc	(??_fputc+3)^0,w,c
  2338   00160E  6EDA               	movwf	fsr2h,c
  2339   001610  C001  FFDF         	movff	fputc@c,indf2
  2340   001614  5003               	movf	fputc@fp^0,w,c
  2341   001616  6ED9               	movwf	fsr2l,c
  2342   001618  6ADA               	clrf	fsr2h,c
  2343   00161A  0E03               	movlw	3
  2344   00161C  26D9               	addwf	fsr2l,f,c
  2345   00161E  2ADE               	incf	postinc2,f,c
  2346   001620  0E00               	movlw	0
  2347   001622  22DD               	addwfc	postdec2,f,c
  2348   001624                     l1534:
  2349   001624  0012               	return		;funcret
  2350   001626                     __end_of_fputc:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _putch *****************
  2354 ;; Defined at:
  2355 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  c               1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  c               1    0[COMRAM] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_fputc
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text9
  2384   001D9C                     __ptext9:
  2385                           	callstack 0
  2386   001D9C                     _putch:
  2387                           	callstack 24
  2388   001D9C  0012               	return		;funcret
  2389   001D9E                     __end_of_putch:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _abs *****************
  2393 ;; Defined at:
  2394 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  a               2    6[COMRAM] int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    6[COMRAM] int 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;Total ram usage:        4 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_vfpfcnvrt
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text10
  2423   001B7A                     __ptext10:
  2424                           	callstack 0
  2425   001B7A                     _abs:
  2426                           	callstack 25
  2427   001B7A  BE08               	btfsc	(abs@a+1)^0,7,c
  2428   001B7C  EFC2  F00D         	goto	u2191
  2429   001B80  EFC4  F00D         	goto	u2190
  2430   001B84                     u2191:
  2431   001B84  EFCA  F00D         	goto	l1519
  2432   001B88                     u2190:
  2433   001B88  C007  F007         	movff	abs@a,?_abs
  2434   001B8C  C008  F008         	movff	abs@a+1,?_abs+1
  2435   001B90  EFD6  F00D         	goto	l1522
  2436   001B94                     l1519:
  2437   001B94  C007  F009         	movff	abs@a,??_abs
  2438   001B98  C008  F00A         	movff	abs@a+1,??_abs+1
  2439   001B9C  1E09               	comf	??_abs^0,f,c
  2440   001B9E  1E0A               	comf	(??_abs+1)^0,f,c
  2441   001BA0  4A09               	infsnz	??_abs^0,f,c
  2442   001BA2  2A0A               	incf	(??_abs+1)^0,f,c
  2443   001BA4  C009  F007         	movff	??_abs,?_abs
  2444   001BA8  C00A  F008         	movff	??_abs+1,?_abs+1
  2445   001BAC                     l1522:
  2446   001BAC  0012               	return		;funcret
  2447   001BAE                     __end_of_abs:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function ___lwmod *****************
  2451 ;; Defined at:
  2452 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  dividend        2    0[COMRAM] unsigned int 
  2455 ;;  divisor         2    2[COMRAM] unsigned int 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  counter         1    4[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  2    0[COMRAM] unsigned int 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:        5 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_vfpfcnvrt
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text11
  2482   00198C                     __ptext11:
  2483                           	callstack 0
  2484   00198C                     ___lwmod:
  2485                           	callstack 25
  2486   00198C  5003               	movf	___lwmod@divisor^0,w,c
  2487   00198E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2488   001990  B4D8               	btfsc	status,2,c
  2489   001992  EFCD  F00C         	goto	u2121
  2490   001996  EFCF  F00C         	goto	u2120
  2491   00199A                     u2121:
  2492   00199A  EFF3  F00C         	goto	l1277
  2493   00199E                     u2120:
  2494   00199E  0E01               	movlw	1
  2495   0019A0  6E05               	movwf	___lwmod@counter^0,c
  2496   0019A2  EFD7  F00C         	goto	l3187
  2497   0019A6                     l3185:
  2498   0019A6  90D8               	bcf	status,0,c
  2499   0019A8  3603               	rlcf	___lwmod@divisor^0,f,c
  2500   0019AA  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2501   0019AC  2A05               	incf	___lwmod@counter^0,f,c
  2502   0019AE                     l3187:
  2503   0019AE  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2504   0019B0  EFDC  F00C         	goto	u2131
  2505   0019B4  EFDE  F00C         	goto	u2130
  2506   0019B8                     u2131:
  2507   0019B8  EFD3  F00C         	goto	l3185
  2508   0019BC                     u2130:
  2509   0019BC                     l3189:
  2510   0019BC  5003               	movf	___lwmod@divisor^0,w,c
  2511   0019BE  5C01               	subwf	___lwmod@dividend^0,w,c
  2512   0019C0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2513   0019C2  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2514   0019C4  A0D8               	btfss	status,0,c
  2515   0019C6  EFE7  F00C         	goto	u2141
  2516   0019CA  EFE9  F00C         	goto	u2140
  2517   0019CE                     u2141:
  2518   0019CE  EFED  F00C         	goto	l3193
  2519   0019D2                     u2140:
  2520   0019D2  5003               	movf	___lwmod@divisor^0,w,c
  2521   0019D4  5E01               	subwf	___lwmod@dividend^0,f,c
  2522   0019D6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2523   0019D8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2524   0019DA                     l3193:
  2525   0019DA  90D8               	bcf	status,0,c
  2526   0019DC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2527   0019DE  3203               	rrcf	___lwmod@divisor^0,f,c
  2528   0019E0  2E05               	decfsz	___lwmod@counter^0,f,c
  2529   0019E2  EFDE  F00C         	goto	l3189
  2530   0019E6                     l1277:
  2531   0019E6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2532   0019EA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2533   0019EE  0012               	return		;funcret
  2534   0019F0                     __end_of___lwmod:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function ___awmod *****************
  2538 ;; Defined at:
  2539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  dividend        2    0[COMRAM] int 
  2542 ;;  divisor         2    2[COMRAM] int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  sign            1    5[COMRAM] unsigned char 
  2545 ;;  counter         1    4[COMRAM] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2    0[COMRAM] int 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_vfpfcnvrt
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text12
  2570   0016E0                     __ptext12:
  2571                           	callstack 0
  2572   0016E0                     ___awmod:
  2573                           	callstack 25
  2574   0016E0  0E00               	movlw	0
  2575   0016E2  6E06               	movwf	___awmod@sign^0,c
  2576   0016E4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2577   0016E6  EF79  F00B         	goto	u2030
  2578   0016EA  EF77  F00B         	goto	u2031
  2579   0016EE                     u2031:
  2580   0016EE  EF7F  F00B         	goto	l3131
  2581   0016F2                     u2030:
  2582   0016F2  6C01               	negf	___awmod@dividend^0,c
  2583   0016F4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2584   0016F6  B0D8               	btfsc	status,0,c
  2585   0016F8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2586   0016FA  0E01               	movlw	1
  2587   0016FC  6E06               	movwf	___awmod@sign^0,c
  2588   0016FE                     l3131:
  2589   0016FE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2590   001700  EF86  F00B         	goto	u2040
  2591   001704  EF84  F00B         	goto	u2041
  2592   001708                     u2041:
  2593   001708  EF8A  F00B         	goto	l3135
  2594   00170C                     u2040:
  2595   00170C  6C03               	negf	___awmod@divisor^0,c
  2596   00170E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2597   001710  B0D8               	btfsc	status,0,c
  2598   001712  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2599   001714                     l3135:
  2600   001714  5003               	movf	___awmod@divisor^0,w,c
  2601   001716  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2602   001718  B4D8               	btfsc	status,2,c
  2603   00171A  EF91  F00B         	goto	u2051
  2604   00171E  EF93  F00B         	goto	u2050
  2605   001722                     u2051:
  2606   001722  EFB7  F00B         	goto	l3151
  2607   001726                     u2050:
  2608   001726  0E01               	movlw	1
  2609   001728  6E05               	movwf	___awmod@counter^0,c
  2610   00172A  EF9B  F00B         	goto	l3141
  2611   00172E                     l3139:
  2612   00172E  90D8               	bcf	status,0,c
  2613   001730  3603               	rlcf	___awmod@divisor^0,f,c
  2614   001732  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2615   001734  2A05               	incf	___awmod@counter^0,f,c
  2616   001736                     l3141:
  2617   001736  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2618   001738  EFA0  F00B         	goto	u2061
  2619   00173C  EFA2  F00B         	goto	u2060
  2620   001740                     u2061:
  2621   001740  EF97  F00B         	goto	l3139
  2622   001744                     u2060:
  2623   001744                     l3143:
  2624   001744  5003               	movf	___awmod@divisor^0,w,c
  2625   001746  5C01               	subwf	___awmod@dividend^0,w,c
  2626   001748  5004               	movf	(___awmod@divisor+1)^0,w,c
  2627   00174A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2628   00174C  A0D8               	btfss	status,0,c
  2629   00174E  EFAB  F00B         	goto	u2071
  2630   001752  EFAD  F00B         	goto	u2070
  2631   001756                     u2071:
  2632   001756  EFB1  F00B         	goto	l3147
  2633   00175A                     u2070:
  2634   00175A  5003               	movf	___awmod@divisor^0,w,c
  2635   00175C  5E01               	subwf	___awmod@dividend^0,f,c
  2636   00175E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2637   001760  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2638   001762                     l3147:
  2639   001762  90D8               	bcf	status,0,c
  2640   001764  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2641   001766  3203               	rrcf	___awmod@divisor^0,f,c
  2642   001768  2E05               	decfsz	___awmod@counter^0,f,c
  2643   00176A  EFA2  F00B         	goto	l3143
  2644   00176E                     l3151:
  2645   00176E  5006               	movf	___awmod@sign^0,w,c
  2646   001770  B4D8               	btfsc	status,2,c
  2647   001772  EFBD  F00B         	goto	u2081
  2648   001776  EFBF  F00B         	goto	u2080
  2649   00177A                     u2081:
  2650   00177A  EFC3  F00B         	goto	l3155
  2651   00177E                     u2080:
  2652   00177E  6C01               	negf	___awmod@dividend^0,c
  2653   001780  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2654   001782  B0D8               	btfsc	status,0,c
  2655   001784  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2656   001786                     l3155:
  2657   001786  C001  F001         	movff	___awmod@dividend,?___awmod
  2658   00178A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2659   00178E  0012               	return		;funcret
  2660   001790                     __end_of___awmod:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function ___awdiv *****************
  2664 ;; Defined at:
  2665 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  dividend        2    0[COMRAM] int 
  2668 ;;  divisor         2    2[COMRAM] int 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  quotient        2    6[COMRAM] int 
  2671 ;;  sign            1    5[COMRAM] unsigned char 
  2672 ;;  counter         1    4[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2    0[COMRAM] int 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;Total ram usage:        8 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_vfpfcnvrt
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text13
  2697   0014A8                     __ptext13:
  2698                           	callstack 0
  2699   0014A8                     ___awdiv:
  2700                           	callstack 25
  2701   0014A8  0E00               	movlw	0
  2702   0014AA  6E06               	movwf	___awdiv@sign^0,c
  2703   0014AC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2704   0014AE  EF5D  F00A         	goto	u1970
  2705   0014B2  EF5B  F00A         	goto	u1971
  2706   0014B6                     u1971:
  2707   0014B6  EF63  F00A         	goto	l3087
  2708   0014BA                     u1970:
  2709   0014BA  6C03               	negf	___awdiv@divisor^0,c
  2710   0014BC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2711   0014BE  B0D8               	btfsc	status,0,c
  2712   0014C0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2713   0014C2  0E01               	movlw	1
  2714   0014C4  6E06               	movwf	___awdiv@sign^0,c
  2715   0014C6                     l3087:
  2716   0014C6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2717   0014C8  EF6A  F00A         	goto	u1980
  2718   0014CC  EF68  F00A         	goto	u1981
  2719   0014D0                     u1981:
  2720   0014D0  EF70  F00A         	goto	l3093
  2721   0014D4                     u1980:
  2722   0014D4  6C01               	negf	___awdiv@dividend^0,c
  2723   0014D6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2724   0014D8  B0D8               	btfsc	status,0,c
  2725   0014DA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2726   0014DC  0E01               	movlw	1
  2727   0014DE  1A06               	xorwf	___awdiv@sign^0,f,c
  2728   0014E0                     l3093:
  2729   0014E0  0E00               	movlw	0
  2730   0014E2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2731   0014E4  0E00               	movlw	0
  2732   0014E6  6E07               	movwf	___awdiv@quotient^0,c
  2733   0014E8  5003               	movf	___awdiv@divisor^0,w,c
  2734   0014EA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2735   0014EC  B4D8               	btfsc	status,2,c
  2736   0014EE  EF7B  F00A         	goto	u1991
  2737   0014F2  EF7D  F00A         	goto	u1990
  2738   0014F6                     u1991:
  2739   0014F6  EFA5  F00A         	goto	l3115
  2740   0014FA                     u1990:
  2741   0014FA  0E01               	movlw	1
  2742   0014FC  6E05               	movwf	___awdiv@counter^0,c
  2743   0014FE  EF85  F00A         	goto	l3101
  2744   001502                     l3099:
  2745   001502  90D8               	bcf	status,0,c
  2746   001504  3603               	rlcf	___awdiv@divisor^0,f,c
  2747   001506  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2748   001508  2A05               	incf	___awdiv@counter^0,f,c
  2749   00150A                     l3101:
  2750   00150A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2751   00150C  EF8A  F00A         	goto	u2001
  2752   001510  EF8C  F00A         	goto	u2000
  2753   001514                     u2001:
  2754   001514  EF81  F00A         	goto	l3099
  2755   001518                     u2000:
  2756   001518                     l3103:
  2757   001518  90D8               	bcf	status,0,c
  2758   00151A  3607               	rlcf	___awdiv@quotient^0,f,c
  2759   00151C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2760   00151E  5003               	movf	___awdiv@divisor^0,w,c
  2761   001520  5C01               	subwf	___awdiv@dividend^0,w,c
  2762   001522  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2763   001524  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2764   001526  A0D8               	btfss	status,0,c
  2765   001528  EF98  F00A         	goto	u2011
  2766   00152C  EF9A  F00A         	goto	u2010
  2767   001530                     u2011:
  2768   001530  EF9F  F00A         	goto	l3111
  2769   001534                     u2010:
  2770   001534  5003               	movf	___awdiv@divisor^0,w,c
  2771   001536  5E01               	subwf	___awdiv@dividend^0,f,c
  2772   001538  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2773   00153A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2774   00153C  8007               	bsf	___awdiv@quotient^0,0,c
  2775   00153E                     l3111:
  2776   00153E  90D8               	bcf	status,0,c
  2777   001540  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2778   001542  3203               	rrcf	___awdiv@divisor^0,f,c
  2779   001544  2E05               	decfsz	___awdiv@counter^0,f,c
  2780   001546  EF8C  F00A         	goto	l3103
  2781   00154A                     l3115:
  2782   00154A  5006               	movf	___awdiv@sign^0,w,c
  2783   00154C  B4D8               	btfsc	status,2,c
  2784   00154E  EFAB  F00A         	goto	u2021
  2785   001552  EFAD  F00A         	goto	u2020
  2786   001556                     u2021:
  2787   001556  EFB1  F00A         	goto	l3119
  2788   00155A                     u2020:
  2789   00155A  6C07               	negf	___awdiv@quotient^0,c
  2790   00155C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2791   00155E  B0D8               	btfsc	status,0,c
  2792   001560  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2793   001562                     l3119:
  2794   001562  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2795   001566  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2796   00156A  0012               	return		;funcret
  2797   00156C                     __end_of___awdiv:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _sendStringSerial4 *****************
  2801 ;; Defined at:
  2802 ;;		line 33 in file "serial.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  string          2    1[COMRAM] PTR unsigned char 
  2805 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2806 ;;		 -> sendIntSerial4@string(17), 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 2
  2825 ;; This function calls:
  2826 ;;		_sendCharSerial4
  2827 ;; This function is called by:
  2828 ;;		_sendIntSerial4
  2829 ;;		_sendArrayCharSerial4
  2830 ;;		_sendRGBCvalSerial4
  2831 ;;		_sendHSVvalSerial4
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text14
  2836   0019F0                     __ptext14:
  2837                           	callstack 0
  2838   0019F0                     _sendStringSerial4:
  2839                           	callstack 27
  2840   0019F0                     
  2841                           ;serial.c: 35:     while(*string != 0){
  2842   0019F0  EF0F  F00D         	goto	l3599
  2843   0019F4                     l3595:
  2844                           
  2845                           ;serial.c: 36:   sendCharSerial4(*string++);
  2846   0019F4  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2847   0019F8  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2848   0019FC  0E00               	movlw	low (__smallconst shr (0+16))
  2849   0019FE  6EF8               	movwf	tblptru,c
  2850   001A00  0E0D               	movlw	(high __ramtop+-1)
  2851   001A02  64F7               	cpfsgt	tblptrh,c
  2852   001A04  D003               	bra	u2647
  2853   001A06  0008               	tblrd		*
  2854   001A08  50F5               	movf	tablat,w,c
  2855   001A0A  D005               	bra	u2640
  2856   001A0C                     u2647:
  2857   001A0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2858   001A10  CFF7 FFEA          	movff	tblptrh,fsr0h
  2859   001A14  50EF               	movf	indf0,w,c
  2860   001A16                     u2640:
  2861   001A16  EC88  F00E         	call	_sendCharSerial4
  2862   001A1A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2863   001A1C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2864   001A1E                     l3599:
  2865                           
  2866                           ;serial.c: 35:     while(*string != 0){
  2867   001A1E  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2868   001A22  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2869   001A26  0E00               	movlw	low (__smallconst shr (0+16))
  2870   001A28  6EF8               	movwf	tblptru,c
  2871   001A2A  0E0D               	movlw	(high __ramtop+-1)
  2872   001A2C  64F7               	cpfsgt	tblptrh,c
  2873   001A2E  D003               	bra	u2657
  2874   001A30  0008               	tblrd		*
  2875   001A32  50F5               	movf	tablat,w,c
  2876   001A34  D005               	bra	u2650
  2877   001A36                     u2657:
  2878   001A36  CFF6 FFE9          	movff	tblptrl,fsr0l
  2879   001A3A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2880   001A3E  50EF               	movf	indf0,w,c
  2881   001A40                     u2650:
  2882   001A40  0900               	iorlw	0
  2883   001A42  A4D8               	btfss	status,2,c
  2884   001A44  EF26  F00D         	goto	u2661
  2885   001A48  EF28  F00D         	goto	u2660
  2886   001A4C                     u2661:
  2887   001A4C  EFFA  F00C         	goto	l3595
  2888   001A50                     u2660:
  2889   001A50  0012               	return		;funcret
  2890   001A52                     __end_of_sendStringSerial4:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _sendCharSerial4 *****************
  2894 ;; Defined at:
  2895 ;;		line 25 in file "serial.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  charToSend      1    wreg     unsigned char 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  charToSend      1    0[COMRAM] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;Total ram usage:        1 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_sendStringSerial4
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text15
  2924   001D10                     __ptext15:
  2925                           	callstack 0
  2926   001D10                     _sendCharSerial4:
  2927                           	callstack 27
  2928                           
  2929                           ;incstack = 0
  2930                           ;sendCharSerial4@charToSend stored from wreg
  2931   001D10  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2932   001D12                     l488:
  2933   001D12  010E               	movlb	14	; () banked
  2934   001D14  A537               	btfss	55,2,b	;volatile
  2935   001D16  EF8F  F00E         	goto	u2561
  2936   001D1A  EF91  F00E         	goto	u2560
  2937   001D1E                     u2561:
  2938   001D1E  EF89  F00E         	goto	l488
  2939   001D22                     u2560:
  2940   001D22                     
  2941                           ; BSR set to: 14
  2942                           ;serial.c: 27:     TX4REG = charToSend;
  2943   001D22  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2944   001D26                     
  2945                           ; BSR set to: 14
  2946   001D26  0012               	return		;funcret
  2947   001D28                     __end_of_sendCharSerial4:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _read_trail *****************
  2951 ;; Defined at:
  2952 ;;		line 81 in file "timers.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  tH              1    0[COMRAM] PTR unsigned char 
  2955 ;;		 -> return_to_sender@timerH(1), main@timerH(1), 
  2956 ;;  tL              1    1[COMRAM] PTR unsigned char 
  2957 ;;		 -> return_to_sender@timerL(1), main@timerL(1), 
  2958 ;;  man             1    2[COMRAM] PTR unsigned char 
  2959 ;;		 -> return_to_sender@mann(1), main@mann(1), 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2971 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;Total ram usage:        3 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;;		_return_to_sender
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text16
  2987   001AA8                     __ptext16:
  2988                           	callstack 0
  2989   001AA8                     _read_trail:
  2990                           	callstack 29
  2991   001AA8                     
  2992                           ;timers.c: 81: void read_trail(unsigned char *tH, unsigned char *tL, unsigned char *man)
      +                          ;timers.c: 82: {;timers.c: 83:     timer_high_pointer --;
  2993   001AA8  0651               	decf	_timer_high_pointer^0,f,c
  2994   001AAA  A0D8               	btfss	status,0,c
  2995   001AAC  0652               	decf	(_timer_high_pointer+1)^0,f,c
  2996                           
  2997                           ;timers.c: 84:     timer_low_pointer --;
  2998   001AAE  064F               	decf	_timer_low_pointer^0,f,c
  2999   001AB0  A0D8               	btfss	status,0,c
  3000   001AB2  0650               	decf	(_timer_low_pointer+1)^0,f,c
  3001                           
  3002                           ;timers.c: 85:     manoeuvre_pointer --;
  3003   001AB4  0100               	movlb	0	; () banked
  3004   001AB6  07AA               	decf	_manoeuvre_pointer& (0+255),f,b
  3005   001AB8  A0D8               	btfss	status,0,c
  3006   001ABA  07AB               	decf	(_manoeuvre_pointer+1)& (0+255),f,b
  3007                           
  3008                           ;timers.c: 87:     manoeuvre_count --;
  3009   001ABC  065C               	decf	_manoeuvre_count^0,f,c
  3010   001ABE                     
  3011                           ; BSR set to: 0
  3012                           ;timers.c: 89:     *tH = *timer_high_pointer;
  3013   001ABE  C051  FFD9         	movff	_timer_high_pointer,fsr2l
  3014   001AC2  C052  FFDA         	movff	_timer_high_pointer+1,fsr2h
  3015   001AC6  5001               	movf	read_trail@tH^0,w,c
  3016   001AC8  6EE1               	movwf	fsr1l,c
  3017   001ACA  6AE2               	clrf	fsr1h,c
  3018   001ACC  CFDF FFE7          	movff	indf2,indf1
  3019   001AD0                     
  3020                           ; BSR set to: 0
  3021                           ;timers.c: 90:     *tL = *timer_low_pointer;
  3022   001AD0  C04F  FFD9         	movff	_timer_low_pointer,fsr2l
  3023   001AD4  C050  FFDA         	movff	_timer_low_pointer+1,fsr2h
  3024   001AD8  5002               	movf	read_trail@tL^0,w,c
  3025   001ADA  6EE1               	movwf	fsr1l,c
  3026   001ADC  6AE2               	clrf	fsr1h,c
  3027   001ADE  CFDF FFE7          	movff	indf2,indf1
  3028   001AE2                     
  3029                           ; BSR set to: 0
  3030                           ;timers.c: 91:     *man = *manoeuvre_pointer;
  3031   001AE2  C0AA  FFD9         	movff	_manoeuvre_pointer,fsr2l
  3032   001AE6  C0AB  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  3033   001AEA  5003               	movf	read_trail@man^0,w,c
  3034   001AEC  6EE1               	movwf	fsr1l,c
  3035   001AEE  6AE2               	clrf	fsr1h,c
  3036   001AF0  CFDF FFE7          	movff	indf2,indf1
  3037   001AF4                     
  3038                           ; BSR set to: 0
  3039   001AF4  0012               	return		;funcret
  3040   001AF6                     __end_of_read_trail:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _read_timer *****************
  3044 ;; Defined at:
  3045 ;;		line 46 in file "timers.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  tH              1    0[COMRAM] PTR unsigned char 
  3048 ;;		 -> forward_navigation@timerH(1), main@timerH(1), 
  3049 ;;  tL              1    1[COMRAM] PTR unsigned char 
  3050 ;;		 -> forward_navigation@timerL(1), main@timerL(1), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;;		_forward_navigation
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text17
  3078   001D28                     __ptext17:
  3079                           	callstack 0
  3080   001D28                     _read_timer:
  3081                           	callstack 29
  3082   001D28                     
  3083                           ;timers.c: 46: void read_timer(unsigned char *tH, unsigned char *tL);timers.c: 47: {;tim
      +                          ers.c: 51:     *tL = TMR0L;
  3084   001D28  5002               	movf	read_timer@tL^0,w,c
  3085   001D2A  6ED9               	movwf	fsr2l,c
  3086   001D2C  6ADA               	clrf	fsr2h,c
  3087   001D2E  CFD3 FFDF          	movff	4051,indf2	;volatile
  3088                           
  3089                           ;timers.c: 52:     *tH = TMR0H;
  3090   001D32  5001               	movf	read_timer@tH^0,w,c
  3091   001D34  6ED9               	movwf	fsr2l,c
  3092   001D36  6ADA               	clrf	fsr2h,c
  3093   001D38  CFD4 FFDF          	movff	4052,indf2	;volatile
  3094   001D3C  0012               	return		;funcret
  3095   001D3E                     __end_of_read_timer:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _initUSART4 *****************
  3099 ;; Defined at:
  3100 ;;		line 8 in file "serial.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 1
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text18
  3129   001CF2                     __ptext18:
  3130                           	callstack 0
  3131   001CF2                     _initUSART4:
  3132                           	callstack 29
  3133   001CF2                     
  3134                           ;serial.c: 9:     RC0PPS = 0x12;
  3135   001CF2  0E12               	movlw	18
  3136   001CF4  010E               	movlb	14	; () banked
  3137   001CF6  6F62               	movwf	98,b	;volatile
  3138                           
  3139                           ;serial.c: 10:     RX4PPS = 0x11;
  3140   001CF8  0E11               	movlw	17
  3141   001CFA  6F15               	movwf	21,b	;volatile
  3142   001CFC                     
  3143                           ; BSR set to: 14
  3144                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3145   001CFC  97E9               	bcf	233,3,b	;volatile
  3146   001CFE                     
  3147                           ; BSR set to: 14
  3148                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3149   001CFE  95E8               	bcf	232,2,b	;volatile
  3150                           
  3151                           ;serial.c: 14:     SP4BRGL = 51;
  3152   001D00  0E33               	movlw	51
  3153   001D02  6FE5               	movwf	229,b	;volatile
  3154                           
  3155                           ;serial.c: 15:     SP4BRGH = 0;
  3156   001D04  0E00               	movlw	0
  3157   001D06  6FE6               	movwf	230,b	;volatile
  3158   001D08                     
  3159                           ; BSR set to: 14
  3160                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3161   001D08  89E7               	bsf	231,4,b	;volatile
  3162   001D0A                     
  3163                           ; BSR set to: 14
  3164                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3165   001D0A  8BE8               	bsf	232,5,b	;volatile
  3166   001D0C                     
  3167                           ; BSR set to: 14
  3168                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3169   001D0C  8FE7               	bsf	231,7,b	;volatile
  3170   001D0E                     
  3171                           ; BSR set to: 14
  3172   001D0E  0012               	return		;funcret
  3173   001D10                     __end_of_initUSART4:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _initDCmotorsPWM *****************
  3177 ;; Defined at:
  3178 ;;		line 7 in file "dc_motor.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;Total ram usage:        2 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 1
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text19
  3207   001790                     __ptext19:
  3208                           	callstack 0
  3209   001790                     _initDCmotorsPWM:
  3210                           	callstack 29
  3211   001790                     
  3212                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  3213   001790  9485               	bcf	133,2,c	;volatile
  3214                           
  3215                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  3216   001792  9885               	bcf	133,4,c	;volatile
  3217                           
  3218                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  3219   001794  9E83               	bcf	131,7,c	;volatile
  3220                           
  3221                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  3222   001796  9C87               	bcf	135,6,c	;volatile
  3223                           
  3224                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  3225   001798  947D               	bcf	125,2,c	;volatile
  3226                           
  3227                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  3228   00179A  987D               	bcf	125,4,c	;volatile
  3229                           
  3230                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  3231   00179C  9E7B               	bcf	123,7,c	;volatile
  3232                           
  3233                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  3234   00179E  9C7F               	bcf	127,6,c	;volatile
  3235   0017A0                     
  3236                           ;dc_motor.c: 19:     RE2PPS=0x05;
  3237   0017A0  0E05               	movlw	5
  3238   0017A2  010E               	movlb	14	; () banked
  3239   0017A4  6F74               	movwf	116,b	;volatile
  3240                           
  3241                           ;dc_motor.c: 20:     RE4PPS=0x06;
  3242   0017A6  0E06               	movlw	6
  3243   0017A8  6F76               	movwf	118,b	;volatile
  3244                           
  3245                           ;dc_motor.c: 21:     RC7PPS=0x07;
  3246   0017AA  0E07               	movlw	7
  3247   0017AC  6F69               	movwf	105,b	;volatile
  3248                           
  3249                           ;dc_motor.c: 22:     RG6PPS=0x08;
  3250   0017AE  0E08               	movlw	8
  3251   0017B0  6F88               	movwf	136,b	;volatile
  3252                           
  3253                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  3254   0017B2  50BD               	movf	189,w,c	;volatile
  3255   0017B4  0B8F               	andlw	-113
  3256   0017B6  0940               	iorlw	64
  3257   0017B8  6EBD               	movwf	189,c	;volatile
  3258                           
  3259                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  3260   0017BA  0EE0               	movlw	-32
  3261   0017BC  16BE               	andwf	190,f,c	;volatile
  3262                           
  3263                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  3264   0017BE  50BF               	movf	191,w,c	;volatile
  3265   0017C0  0BF0               	andlw	-16
  3266   0017C2  0901               	iorlw	1
  3267   0017C4  6EBF               	movwf	191,c	;volatile
  3268   0017C6                     
  3269                           ; BSR set to: 14
  3270                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  3271   0017C6  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3272   0017CA                     
  3273                           ; BSR set to: 14
  3274                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  3275   0017CA  8EBD               	bsf	189,7,c	;volatile
  3276                           
  3277                           ;dc_motor.c: 36:         CCPR1H=0;
  3278   0017CC  0E00               	movlw	0
  3279   0017CE  6EAA               	movwf	170,c	;volatile
  3280                           
  3281                           ;dc_motor.c: 37:         CCPR2H=0;
  3282   0017D0  0E00               	movlw	0
  3283   0017D2  6EA6               	movwf	166,c	;volatile
  3284                           
  3285                           ;dc_motor.c: 38:         CCPR3H=0;
  3286   0017D4  0E00               	movlw	0
  3287   0017D6  010F               	movlb	15	; () banked
  3288   0017D8  6F25               	movwf	37,b	;volatile
  3289                           
  3290                           ;dc_motor.c: 39:         CCPR4H=0;
  3291   0017DA  0E00               	movlw	0
  3292   0017DC  6F21               	movwf	33,b	;volatile
  3293                           
  3294                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  3295   0017DE  0EFC               	movlw	-4
  3296   0017E0  16AD               	andwf	173,f,c	;volatile
  3297                           
  3298                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  3299   0017E2  0EF3               	movlw	-13
  3300   0017E4  16AD               	andwf	173,f,c	;volatile
  3301                           
  3302                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  3303   0017E6  0ECF               	movlw	-49
  3304   0017E8  16AD               	andwf	173,f,c	;volatile
  3305                           
  3306                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  3307   0017EA  0E3F               	movlw	-193
  3308   0017EC  16AD               	andwf	173,f,c	;volatile
  3309   0017EE                     
  3310                           ; BSR set to: 15
  3311                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  3312   0017EE  88AB               	bsf	171,4,c	;volatile
  3313                           
  3314                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  3315   0017F0  50AB               	movf	171,w,c	;volatile
  3316   0017F2  0BF0               	andlw	-16
  3317   0017F4  090C               	iorlw	12
  3318   0017F6  6EAB               	movwf	171,c	;volatile
  3319   0017F8                     
  3320                           ; BSR set to: 15
  3321                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  3322   0017F8  8EAB               	bsf	171,7,c	;volatile
  3323   0017FA                     
  3324                           ; BSR set to: 15
  3325                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  3326   0017FA  88A7               	bsf	167,4,c	;volatile
  3327                           
  3328                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  3329   0017FC  50A7               	movf	167,w,c	;volatile
  3330   0017FE  0BF0               	andlw	-16
  3331   001800  090C               	iorlw	12
  3332   001802  6EA7               	movwf	167,c	;volatile
  3333   001804                     
  3334                           ; BSR set to: 15
  3335                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  3336   001804  8EA7               	bsf	167,7,c	;volatile
  3337   001806                     
  3338                           ; BSR set to: 15
  3339                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  3340   001806  8926               	bsf	38,4,b	;volatile
  3341                           
  3342                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  3343   001808  5126               	movf	38,w,b	;volatile
  3344   00180A  0BF0               	andlw	-16
  3345   00180C  090C               	iorlw	12
  3346   00180E  6F26               	movwf	38,b	;volatile
  3347   001810                     
  3348                           ; BSR set to: 15
  3349                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  3350   001810  8F26               	bsf	38,7,b	;volatile
  3351   001812                     
  3352                           ; BSR set to: 15
  3353                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  3354   001812  8922               	bsf	34,4,b	;volatile
  3355                           
  3356                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  3357   001814  5122               	movf	34,w,b	;volatile
  3358   001816  0BF0               	andlw	-16
  3359   001818  090C               	iorlw	12
  3360   00181A  6F22               	movwf	34,b	;volatile
  3361   00181C                     
  3362                           ; BSR set to: 15
  3363                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  3364   00181C  8F22               	bsf	34,7,b	;volatile
  3365   00181E                     
  3366                           ; BSR set to: 15
  3367   00181E  0012               	return		;funcret
  3368   001820                     __end_of_initDCmotorsPWM:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _fullSpeedAhead *****************
  3372 ;; Defined at:
  3373 ;;		line 143 in file "dc_motor.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  3376 ;;		 -> main@motorL(9), 
  3377 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  3378 ;;		 -> main@motorR(9), 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  rightGear       1   22[COMRAM] unsigned char 
  3381 ;;  leftGear        1   21[COMRAM] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;Total ram usage:        5 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 3
  3398 ;; This function calls:
  3399 ;;		_setMotorPWM
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;;		_forward_navigation
  3403 ;;		_return_to_sender
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text20
  3408   001626                     __ptext20:
  3409                           	callstack 0
  3410   001626                     _fullSpeedAhead:
  3411                           	callstack 27
  3412   001626  0E14               	movlw	20
  3413   001628  6E16               	movwf	fullSpeedAhead@leftGear^0,c
  3414   00162A  0E14               	movlw	20
  3415   00162C  6E17               	movwf	fullSpeedAhead@rightGear^0,c
  3416   00162E                     
  3417                           ;dc_motor.c: 147:     (mL->direction) = 1;
  3418   00162E  5013               	movf	fullSpeedAhead@mL^0,w,c
  3419   001630  6ED9               	movwf	fsr2l,c
  3420   001632  6ADA               	clrf	fsr2h,c
  3421   001634  0E01               	movlw	1
  3422   001636  26D9               	addwf	fsr2l,f,c
  3423   001638  0E01               	movlw	1
  3424   00163A  6EDF               	movwf	indf2,c
  3425   00163C                     
  3426                           ;dc_motor.c: 148:     (mR->direction) = 1;
  3427   00163C  5014               	movf	fullSpeedAhead@mR^0,w,c
  3428   00163E  6ED9               	movwf	fsr2l,c
  3429   001640  6ADA               	clrf	fsr2h,c
  3430   001642  0E01               	movlw	1
  3431   001644  26D9               	addwf	fsr2l,f,c
  3432   001646  0E01               	movlw	1
  3433   001648  6EDF               	movwf	indf2,c
  3434                           
  3435                           ;dc_motor.c: 149:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  3436   00164A  EF57  F00B         	goto	l4035
  3437   00164E                     l4023:
  3438                           
  3439                           ;dc_motor.c: 150:         if (mL->power<leftGear) {mL->power++;}
  3440   00164E  5013               	movf	fullSpeedAhead@mL^0,w,c
  3441   001650  6ED9               	movwf	fsr2l,c
  3442   001652  6ADA               	clrf	fsr2h,c
  3443   001654  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  3444   001656  5CDE               	subwf	postinc2,w,c
  3445   001658  B0D8               	btfsc	status,0,c
  3446   00165A  EF31  F00B         	goto	u3321
  3447   00165E  EF33  F00B         	goto	u3320
  3448   001662                     u3321:
  3449   001662  EF37  F00B         	goto	l258
  3450   001666                     u3320:
  3451   001666  5013               	movf	fullSpeedAhead@mL^0,w,c
  3452   001668  6ED9               	movwf	fsr2l,c
  3453   00166A  6ADA               	clrf	fsr2h,c
  3454   00166C  2ADF               	incf	indf2,f,c
  3455   00166E                     l258:
  3456                           
  3457                           ;dc_motor.c: 151:         if (mR->power<rightGear) {mR->power++;}
  3458   00166E  5014               	movf	fullSpeedAhead@mR^0,w,c
  3459   001670  6ED9               	movwf	fsr2l,c
  3460   001672  6ADA               	clrf	fsr2h,c
  3461   001674  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  3462   001676  5CDE               	subwf	postinc2,w,c
  3463   001678  B0D8               	btfsc	status,0,c
  3464   00167A  EF41  F00B         	goto	u3331
  3465   00167E  EF43  F00B         	goto	u3330
  3466   001682                     u3331:
  3467   001682  EF47  F00B         	goto	l4029
  3468   001686                     u3330:
  3469   001686  5014               	movf	fullSpeedAhead@mR^0,w,c
  3470   001688  6ED9               	movwf	fsr2l,c
  3471   00168A  6ADA               	clrf	fsr2h,c
  3472   00168C  2ADF               	incf	indf2,f,c
  3473   00168E                     l4029:
  3474                           
  3475                           ;dc_motor.c: 152:         setMotorPWM(mL);
  3476   00168E  C013  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  3477   001692  ECAA  F009         	call	_setMotorPWM	;wreg free
  3478   001696                     
  3479                           ;dc_motor.c: 153:         setMotorPWM(mR);
  3480   001696  C014  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  3481   00169A  ECAA  F009         	call	_setMotorPWM	;wreg free
  3482   00169E                     
  3483                           ;dc_motor.c: 154:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  3484   00169E  0EA7               	movlw	167
  3485   0016A0  6E15               	movwf	??_fullSpeedAhead^0,c
  3486   0016A2  0E3A               	movlw	58
  3487   0016A4                     u4217:
  3488   0016A4  2EE8               	decfsz	wreg,f,c
  3489   0016A6  D7FE               	bra	u4217
  3490   0016A8  2E15               	decfsz	??_fullSpeedAhead^0,f,c
  3491   0016AA  D7FC               	bra	u4217
  3492   0016AC  D000               	nop2	
  3493   0016AE                     l4035:
  3494                           
  3495                           ;dc_motor.c: 149:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  3496   0016AE  5013               	movf	fullSpeedAhead@mL^0,w,c
  3497   0016B0  6ED9               	movwf	fsr2l,c
  3498   0016B2  6ADA               	clrf	fsr2h,c
  3499   0016B4  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  3500   0016B6  5CDE               	subwf	postinc2,w,c
  3501   0016B8  A0D8               	btfss	status,0,c
  3502   0016BA  EF61  F00B         	goto	u3341
  3503   0016BE  EF63  F00B         	goto	u3340
  3504   0016C2                     u3341:
  3505   0016C2  EF27  F00B         	goto	l4023
  3506   0016C6                     u3340:
  3507   0016C6  5014               	movf	fullSpeedAhead@mR^0,w,c
  3508   0016C8  6ED9               	movwf	fsr2l,c
  3509   0016CA  6ADA               	clrf	fsr2h,c
  3510   0016CC  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  3511   0016CE  5CDE               	subwf	postinc2,w,c
  3512   0016D0  A0D8               	btfss	status,0,c
  3513   0016D2  EF6D  F00B         	goto	u3351
  3514   0016D6  EF6F  F00B         	goto	u3350
  3515   0016DA                     u3351:
  3516   0016DA  EF27  F00B         	goto	l4023
  3517   0016DE                     u3350:
  3518   0016DE  0012               	return		;funcret
  3519   0016E0                     __end_of_fullSpeedAhead:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _setMotorPWM *****************
  3523 ;; Defined at:
  3524 ;;		line 68 in file "dc_motor.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  m               1   13[COMRAM] PTR struct DC_motor
  3527 ;;		 -> main@motorR(9), main@motorL(9), 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  negDuty         1   17[COMRAM] unsigned char 
  3530 ;;  posDuty         1   16[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3540 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;Total ram usage:        5 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 2
  3547 ;; This function calls:
  3548 ;;		___lwdiv
  3549 ;;		___wmul
  3550 ;; This function is called by:
  3551 ;;		_stop
  3552 ;;		_fullSpeedAhead
  3553 ;;		_turnLeft
  3554 ;;		_turnRight
  3555 ;;		_fullSpeedReverse
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text21
  3560   001354                     __ptext21:
  3561                           	callstack 0
  3562   001354                     _setMotorPWM:
  3563                           	callstack 27
  3564   001354                     
  3565                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  3566   001354  500E               	movf	setMotorPWM@m^0,w,c
  3567   001356  6ED9               	movwf	fsr2l,c
  3568   001358  6ADA               	clrf	fsr2h,c
  3569   00135A  0E02               	movlw	2
  3570   00135C  26D9               	addwf	fsr2l,f,c
  3571   00135E  50DF               	movf	indf2,w,c
  3572   001360  B4D8               	btfsc	status,2,c
  3573   001362  EFB5  F009         	goto	u2621
  3574   001366  EFB7  F009         	goto	u2620
  3575   00136A                     u2621:
  3576   00136A  EFE7  F009         	goto	l3579
  3577   00136E                     u2620:
  3578   00136E                     
  3579                           ;dc_motor.c: 73:         posDuty=(unsigned char)(m->PWMperiod - ((unsigned int)(m->power
      +                          )*(m->PWMperiod))/100);
  3580   00136E  500E               	movf	setMotorPWM@m^0,w,c
  3581   001370  6ED9               	movwf	fsr2l,c
  3582   001372  6ADA               	clrf	fsr2h,c
  3583   001374  50DF               	movf	indf2,w,c
  3584   001376  6E0F               	movwf	??_setMotorPWM^0,c
  3585   001378  500F               	movf	??_setMotorPWM^0,w,c
  3586   00137A  6E01               	movwf	___wmul@multiplier^0,c
  3587   00137C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3588   00137E  500E               	movf	setMotorPWM@m^0,w,c
  3589   001380  6ED9               	movwf	fsr2l,c
  3590   001382  6ADA               	clrf	fsr2h,c
  3591   001384  0E03               	movlw	3
  3592   001386  26D9               	addwf	fsr2l,f,c
  3593   001388  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3594   00138C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3595   001390  EC45  F00E         	call	___wmul	;wreg free
  3596   001394  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3597   001398  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3598   00139C  0E00               	movlw	0
  3599   00139E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3600   0013A0  0E64               	movlw	100
  3601   0013A2  6E09               	movwf	___lwdiv@divisor^0,c
  3602   0013A4  EC57  F00C         	call	___lwdiv	;wreg free
  3603   0013A8  500E               	movf	setMotorPWM@m^0,w,c
  3604   0013AA  6ED9               	movwf	fsr2l,c
  3605   0013AC  6ADA               	clrf	fsr2h,c
  3606   0013AE  0E03               	movlw	3
  3607   0013B0  26D9               	addwf	fsr2l,f,c
  3608   0013B2  50DF               	movf	indf2,w,c
  3609   0013B4  6E10               	movwf	(??_setMotorPWM+1)^0,c
  3610   0013B6  5007               	movf	?___lwdiv^0,w,c
  3611   0013B8  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  3612   0013BA  6E11               	movwf	setMotorPWM@posDuty^0,c
  3613   0013BC                     
  3614                           ;dc_motor.c: 74:         negDuty=(unsigned char)(m->PWMperiod);
  3615   0013BC  500E               	movf	setMotorPWM@m^0,w,c
  3616   0013BE  6ED9               	movwf	fsr2l,c
  3617   0013C0  6ADA               	clrf	fsr2h,c
  3618   0013C2  0E03               	movlw	3
  3619   0013C4  26D9               	addwf	fsr2l,f,c
  3620   0013C6  50DF               	movf	indf2,w,c
  3621   0013C8  6E12               	movwf	setMotorPWM@negDuty^0,c
  3622                           
  3623                           ;dc_motor.c: 75:     }
  3624   0013CA  EF08  F00A         	goto	l3583
  3625   0013CE                     l3579:
  3626                           
  3627                           ;dc_motor.c: 77:         posDuty=0;
  3628   0013CE  0E00               	movlw	0
  3629   0013D0  6E11               	movwf	setMotorPWM@posDuty^0,c
  3630   0013D2                     
  3631                           ;dc_motor.c: 78:   negDuty=(unsigned char)(((unsigned int)(m->power)*(m->PWMperiod))/100
      +                          );
  3632   0013D2  500E               	movf	setMotorPWM@m^0,w,c
  3633   0013D4  6ED9               	movwf	fsr2l,c
  3634   0013D6  6ADA               	clrf	fsr2h,c
  3635   0013D8  50DF               	movf	indf2,w,c
  3636   0013DA  6E0F               	movwf	??_setMotorPWM^0,c
  3637   0013DC  500F               	movf	??_setMotorPWM^0,w,c
  3638   0013DE  6E01               	movwf	___wmul@multiplier^0,c
  3639   0013E0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3640   0013E2  500E               	movf	setMotorPWM@m^0,w,c
  3641   0013E4  6ED9               	movwf	fsr2l,c
  3642   0013E6  6ADA               	clrf	fsr2h,c
  3643   0013E8  0E03               	movlw	3
  3644   0013EA  26D9               	addwf	fsr2l,f,c
  3645   0013EC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3646   0013F0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3647   0013F4  EC45  F00E         	call	___wmul	;wreg free
  3648   0013F8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3649   0013FC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3650   001400  0E00               	movlw	0
  3651   001402  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3652   001404  0E64               	movlw	100
  3653   001406  6E09               	movwf	___lwdiv@divisor^0,c
  3654   001408  EC57  F00C         	call	___lwdiv	;wreg free
  3655   00140C  5007               	movf	?___lwdiv^0,w,c
  3656   00140E  6E12               	movwf	setMotorPWM@negDuty^0,c
  3657   001410                     l3583:
  3658                           
  3659                           ;dc_motor.c: 81:     if (m->direction) {
  3660   001410  500E               	movf	setMotorPWM@m^0,w,c
  3661   001412  6ED9               	movwf	fsr2l,c
  3662   001414  6ADA               	clrf	fsr2h,c
  3663   001416  0E01               	movlw	1
  3664   001418  26D9               	addwf	fsr2l,f,c
  3665   00141A  50DF               	movf	indf2,w,c
  3666   00141C  B4D8               	btfsc	status,2,c
  3667   00141E  EF13  F00A         	goto	u2631
  3668   001422  EF15  F00A         	goto	u2630
  3669   001426                     u2631:
  3670   001426  EF35  F00A         	goto	l3587
  3671   00142A                     u2630:
  3672   00142A                     
  3673                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  3674   00142A  500E               	movf	setMotorPWM@m^0,w,c
  3675   00142C  6ED9               	movwf	fsr2l,c
  3676   00142E  6ADA               	clrf	fsr2h,c
  3677   001430  0E05               	movlw	5
  3678   001432  26D9               	addwf	fsr2l,f,c
  3679   001434  CFDE F00F          	movff	postinc2,??_setMotorPWM
  3680   001438  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  3681   00143C  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  3682   001440  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3683   001444  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  3684                           
  3685                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  3686   001448  500E               	movf	setMotorPWM@m^0,w,c
  3687   00144A  6ED9               	movwf	fsr2l,c
  3688   00144C  6ADA               	clrf	fsr2h,c
  3689   00144E  0E07               	movlw	7
  3690   001450  26D9               	addwf	fsr2l,f,c
  3691   001452  CFDE F00F          	movff	postinc2,??_setMotorPWM
  3692   001456  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  3693   00145A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  3694   00145E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3695   001462  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  3696                           
  3697                           ;dc_motor.c: 84:     } else {
  3698   001466  EF53  F00A         	goto	l229
  3699   00146A                     l3587:
  3700                           
  3701                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  3702   00146A  500E               	movf	setMotorPWM@m^0,w,c
  3703   00146C  6ED9               	movwf	fsr2l,c
  3704   00146E  6ADA               	clrf	fsr2h,c
  3705   001470  0E05               	movlw	5
  3706   001472  26D9               	addwf	fsr2l,f,c
  3707   001474  CFDE F00F          	movff	postinc2,??_setMotorPWM
  3708   001478  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  3709   00147C  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  3710   001480  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3711   001484  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  3712                           
  3713                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  3714   001488  500E               	movf	setMotorPWM@m^0,w,c
  3715   00148A  6ED9               	movwf	fsr2l,c
  3716   00148C  6ADA               	clrf	fsr2h,c
  3717   00148E  0E07               	movlw	7
  3718   001490  26D9               	addwf	fsr2l,f,c
  3719   001492  CFDE F00F          	movff	postinc2,??_setMotorPWM
  3720   001496  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  3721   00149A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  3722   00149E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3723   0014A2  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  3724   0014A6                     l229:
  3725   0014A6  0012               	return		;funcret
  3726   0014A8                     __end_of_setMotorPWM:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function ___wmul *****************
  3730 ;; Defined at:
  3731 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  multiplier      2    0[COMRAM] unsigned int 
  3734 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  product         2    4[COMRAM] unsigned int 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2    0[COMRAM] unsigned int 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0, prodl, prodh
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;Total ram usage:        6 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_setMotorPWM
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text22
  3761   001C8A                     __ptext22:
  3762                           	callstack 0
  3763   001C8A                     ___wmul:
  3764                           	callstack 27
  3765   001C8A  5001               	movf	___wmul@multiplier^0,w,c
  3766   001C8C  0203               	mulwf	___wmul@multiplicand^0,c
  3767   001C8E  CFF3 F005          	movff	prodl,___wmul@product
  3768   001C92  CFF4 F006          	movff	prodh,___wmul@product+1
  3769   001C96  5001               	movf	___wmul@multiplier^0,w,c
  3770   001C98  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3771   001C9A  50F3               	movf	243,w,c
  3772   001C9C  2606               	addwf	(___wmul@product+1)^0,f,c
  3773   001C9E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3774   001CA0  0203               	mulwf	___wmul@multiplicand^0,c
  3775   001CA2  50F3               	movf	243,w,c
  3776   001CA4  2606               	addwf	(___wmul@product+1)^0,f,c
  3777   001CA6  C005  F001         	movff	___wmul@product,?___wmul
  3778   001CAA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3779   001CAE  0012               	return		;funcret
  3780   001CB0                     __end_of___wmul:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function ___lwdiv *****************
  3784 ;; Defined at:
  3785 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  dividend        2    6[COMRAM] unsigned int 
  3788 ;;  divisor         2    8[COMRAM] unsigned int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  quotient        2   10[COMRAM] unsigned int 
  3791 ;;  counter         1   12[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2    6[COMRAM] unsigned int 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;Total ram usage:        7 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_setMotorPWM
  3812 ;;		_vfpfcnvrt
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text23
  3817   0018AE                     __ptext23:
  3818                           	callstack 0
  3819   0018AE                     ___lwdiv:
  3820                           	callstack 27
  3821   0018AE  0E00               	movlw	0
  3822   0018B0  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3823   0018B2  0E00               	movlw	0
  3824   0018B4  6E0B               	movwf	___lwdiv@quotient^0,c
  3825   0018B6  5009               	movf	___lwdiv@divisor^0,w,c
  3826   0018B8  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3827   0018BA  B4D8               	btfsc	status,2,c
  3828   0018BC  EF62  F00C         	goto	u2091
  3829   0018C0  EF64  F00C         	goto	u2090
  3830   0018C4                     u2091:
  3831   0018C4  EF8C  F00C         	goto	l1267
  3832   0018C8                     u2090:
  3833   0018C8  0E01               	movlw	1
  3834   0018CA  6E0D               	movwf	___lwdiv@counter^0,c
  3835   0018CC  EF6C  F00C         	goto	l3167
  3836   0018D0                     l3165:
  3837   0018D0  90D8               	bcf	status,0,c
  3838   0018D2  3609               	rlcf	___lwdiv@divisor^0,f,c
  3839   0018D4  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3840   0018D6  2A0D               	incf	___lwdiv@counter^0,f,c
  3841   0018D8                     l3167:
  3842   0018D8  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3843   0018DA  EF71  F00C         	goto	u2101
  3844   0018DE  EF73  F00C         	goto	u2100
  3845   0018E2                     u2101:
  3846   0018E2  EF68  F00C         	goto	l3165
  3847   0018E6                     u2100:
  3848   0018E6                     l3169:
  3849   0018E6  90D8               	bcf	status,0,c
  3850   0018E8  360B               	rlcf	___lwdiv@quotient^0,f,c
  3851   0018EA  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3852   0018EC  5009               	movf	___lwdiv@divisor^0,w,c
  3853   0018EE  5C07               	subwf	___lwdiv@dividend^0,w,c
  3854   0018F0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3855   0018F2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3856   0018F4  A0D8               	btfss	status,0,c
  3857   0018F6  EF7F  F00C         	goto	u2111
  3858   0018FA  EF81  F00C         	goto	u2110
  3859   0018FE                     u2111:
  3860   0018FE  EF86  F00C         	goto	l3177
  3861   001902                     u2110:
  3862   001902  5009               	movf	___lwdiv@divisor^0,w,c
  3863   001904  5E07               	subwf	___lwdiv@dividend^0,f,c
  3864   001906  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3865   001908  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3866   00190A  800B               	bsf	___lwdiv@quotient^0,0,c
  3867   00190C                     l3177:
  3868   00190C  90D8               	bcf	status,0,c
  3869   00190E  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3870   001910  3209               	rrcf	___lwdiv@divisor^0,f,c
  3871   001912  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3872   001914  EF73  F00C         	goto	l3169
  3873   001918                     l1267:
  3874   001918  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3875   00191C  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3876   001920  0012               	return		;funcret
  3877   001922                     __end_of___lwdiv:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _color_click_init *****************
  3881 ;; Defined at:
  3882 ;;		line 7 in file "color.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;Total ram usage:        1 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 4
  3903 ;; This function calls:
  3904 ;;		_I2C_2_Master_Init
  3905 ;;		_color_writetoaddr
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text24
  3912   001BAE                     __ptext24:
  3913                           	callstack 0
  3914   001BAE                     _color_click_init:
  3915                           	callstack 26
  3916   001BAE                     
  3917                           ;color.c: 10:     I2C_2_Master_Init();
  3918   001BAE  EC08  F00E         	call	_I2C_2_Master_Init	;wreg free
  3919   001BB2                     
  3920                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  3921   001BB2  0E01               	movlw	1
  3922   001BB4  6E03               	movwf	color_writetoaddr@value^0,c
  3923   001BB6  0E00               	movlw	0
  3924   001BB8  EC69  F00E         	call	_color_writetoaddr
  3925   001BBC                     
  3926                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3927   001BBC  0E3F               	movlw	63
  3928   001BBE  6E05               	movwf	??_color_click_init^0,c
  3929   001BC0  0E55               	movlw	85
  3930   001BC2                     u4227:
  3931   001BC2  2EE8               	decfsz	wreg,f,c
  3932   001BC4  D7FE               	bra	u4227
  3933   001BC6  2E05               	decfsz	??_color_click_init^0,f,c
  3934   001BC8  D7FC               	bra	u4227
  3935   001BCA  0000               	nop	
  3936   001BCC                     
  3937                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  3938   001BCC  0E03               	movlw	3
  3939   001BCE  6E03               	movwf	color_writetoaddr@value^0,c
  3940   001BD0  0E00               	movlw	0
  3941   001BD2  EC69  F00E         	call	_color_writetoaddr
  3942   001BD6                     
  3943                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  3944   001BD6  0ED5               	movlw	213
  3945   001BD8  6E03               	movwf	color_writetoaddr@value^0,c
  3946   001BDA  0E01               	movlw	1
  3947   001BDC  EC69  F00E         	call	_color_writetoaddr
  3948   001BE0  0012               	return		;funcret
  3949   001BE2                     __end_of_color_click_init:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _color_writetoaddr *****************
  3953 ;; Defined at:
  3954 ;;		line 28 in file "color.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  address         1    wreg     unsigned char 
  3957 ;;  value           1    2[COMRAM] unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  address         1    3[COMRAM] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;Total ram usage:        2 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 3
  3976 ;; This function calls:
  3977 ;;		_I2C_2_Master_Start
  3978 ;;		_I2C_2_Master_Stop
  3979 ;;		_I2C_2_Master_Write
  3980 ;; This function is called by:
  3981 ;;		_color_click_init
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text25
  3986   001CD2                     __ptext25:
  3987                           	callstack 0
  3988   001CD2                     _color_writetoaddr:
  3989                           	callstack 26
  3990                           
  3991                           ;incstack = 0
  3992                           ;color_writetoaddr@address stored from wreg
  3993   001CD2  6E04               	movwf	color_writetoaddr@address^0,c
  3994   001CD4                     
  3995                           ;color.c: 29:     I2C_2_Master_Start();
  3996   001CD4  ECC5  F00E         	call	_I2C_2_Master_Start	;wreg free
  3997                           
  3998                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  3999   001CD8  0E52               	movlw	82
  4000   001CDA  ECAE  F00E         	call	_I2C_2_Master_Write
  4001                           
  4002                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  4003   001CDE  5004               	movf	color_writetoaddr@address^0,w,c
  4004   001CE0  0980               	iorlw	128
  4005   001CE2  ECAE  F00E         	call	_I2C_2_Master_Write
  4006                           
  4007                           ;color.c: 32:     I2C_2_Master_Write(value);
  4008   001CE6  5003               	movf	color_writetoaddr@value^0,w,c
  4009   001CE8  ECAE  F00E         	call	_I2C_2_Master_Write
  4010                           
  4011                           ;color.c: 33:     I2C_2_Master_Stop();
  4012   001CEC  ECC0  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4013   001CF0  0012               	return		;funcret
  4014   001CF2                     __end_of_color_writetoaddr:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function _I2C_2_Master_Write *****************
  4018 ;; Defined at:
  4019 ;;		line 45 in file "i2c.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  data_byte       1    wreg     unsigned char 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  data_byte       1    1[COMRAM] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;Total ram usage:        1 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 2
  4040 ;; This function calls:
  4041 ;;		_I2C_2_Master_Idle
  4042 ;; This function is called by:
  4043 ;;		_color_writetoaddr
  4044 ;;		_color_read_Red
  4045 ;;		_color_read_Green
  4046 ;;		_color_read_Blue
  4047 ;;		_color_read_Clear
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text26
  4052   001D5C                     __ptext26:
  4053                           	callstack 0
  4054   001D5C                     _I2C_2_Master_Write:
  4055                           	callstack 26
  4056                           
  4057                           ;incstack = 0
  4058                           ;I2C_2_Master_Write@data_byte stored from wreg
  4059   001D5C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4060   001D5E                     
  4061                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4062   001D5E  EC1D  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4063   001D62                     
  4064                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4065   001D62  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4066   001D66  0012               	return		;funcret
  4067   001D68                     __end_of_I2C_2_Master_Write:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _I2C_2_Master_Stop *****************
  4071 ;; Defined at:
  4072 ;;		line 39 in file "i2c.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; Hardware stack levels required when called: 2
  4093 ;; This function calls:
  4094 ;;		_I2C_2_Master_Idle
  4095 ;; This function is called by:
  4096 ;;		_color_writetoaddr
  4097 ;;		_color_read_Red
  4098 ;;		_color_read_Green
  4099 ;;		_color_read_Blue
  4100 ;;		_color_read_Clear
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text27
  4105   001D80                     __ptext27:
  4106                           	callstack 0
  4107   001D80                     _I2C_2_Master_Stop:
  4108                           	callstack 26
  4109   001D80                     
  4110                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4111   001D80  EC1D  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4112   001D84                     
  4113                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4114   001D84  010E               	movlb	14	; () banked
  4115   001D86  85DA               	bsf	218,2,b	;volatile
  4116   001D88                     
  4117                           ; BSR set to: 14
  4118   001D88  0012               	return		;funcret
  4119   001D8A                     __end_of_I2C_2_Master_Stop:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _I2C_2_Master_Start *****************
  4123 ;; Defined at:
  4124 ;;		line 27 in file "i2c.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used: 1
  4144 ;; Hardware stack levels required when called: 2
  4145 ;; This function calls:
  4146 ;;		_I2C_2_Master_Idle
  4147 ;; This function is called by:
  4148 ;;		_color_writetoaddr
  4149 ;;		_color_read_Red
  4150 ;;		_color_read_Green
  4151 ;;		_color_read_Blue
  4152 ;;		_color_read_Clear
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text28
  4157   001D8A                     __ptext28:
  4158                           	callstack 0
  4159   001D8A                     _I2C_2_Master_Start:
  4160                           	callstack 26
  4161   001D8A                     
  4162                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4163   001D8A  EC1D  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4164   001D8E                     
  4165                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4166   001D8E  010E               	movlb	14	; () banked
  4167   001D90  81DA               	bsf	218,0,b	;volatile
  4168   001D92                     
  4169                           ; BSR set to: 14
  4170   001D92  0012               	return		;funcret
  4171   001D94                     __end_of_I2C_2_Master_Start:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _I2C_2_Master_Idle *****************
  4175 ;; Defined at:
  4176 ;;		line 22 in file "i2c.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;Total ram usage:        1 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_I2C_2_Master_Start
  4201 ;;		_I2C_2_Master_Stop
  4202 ;;		_I2C_2_Master_Write
  4203 ;;		_I2C_2_Master_RepStart
  4204 ;;		_I2C_2_Master_Read
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text29
  4209   001C3A                     __ptext29:
  4210                           	callstack 0
  4211   001C3A                     _I2C_2_Master_Idle:
  4212                           	callstack 26
  4213   001C3A                     l320:
  4214   001C3A  010E               	movlb	14	; () banked
  4215   001C3C  B5D8               	btfsc	216,2,b	;volatile
  4216   001C3E  EF23  F00E         	goto	u2401
  4217   001C42  EF25  F00E         	goto	u2400
  4218   001C46                     u2401:
  4219   001C46  EF1D  F00E         	goto	l320
  4220   001C4A                     u2400:
  4221   001C4A                     
  4222                           ; BSR set to: 14
  4223   001C4A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4224   001C4E  0E1F               	movlw	31
  4225   001C50  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4226   001C52  A4D8               	btfss	status,2,c
  4227   001C54  EF2E  F00E         	goto	u2411
  4228   001C58  EF30  F00E         	goto	u2410
  4229   001C5C                     u2411:
  4230   001C5C  EF1D  F00E         	goto	l320
  4231   001C60                     u2410:
  4232   001C60                     
  4233                           ; BSR set to: 14
  4234   001C60  0012               	return		;funcret
  4235   001C62                     __end_of_I2C_2_Master_Idle:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _I2C_2_Master_Init *****************
  4239 ;; Defined at:
  4240 ;;		line 4 in file "i2c.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_color_click_init
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text30
  4269   001C10                     __ptext30:
  4270                           	callstack 0
  4271   001C10                     _I2C_2_Master_Init:
  4272                           	callstack 28
  4273   001C10                     
  4274                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4275   001C10  010E               	movlb	14	; () banked
  4276   001C12  51D9               	movf	217,w,b	;volatile
  4277   001C14  0BF0               	andlw	-16
  4278   001C16  0908               	iorlw	8
  4279   001C18  6FD9               	movwf	217,b	;volatile
  4280   001C1A                     
  4281                           ; BSR set to: 14
  4282                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4283   001C1A  8BD9               	bsf	217,5,b	;volatile
  4284                           
  4285                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4286   001C1C  0E9F               	movlw	159
  4287   001C1E  6FD6               	movwf	214,b	;volatile
  4288   001C20                     
  4289                           ; BSR set to: 14
  4290                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4291   001C20  8A84               	bsf	132,5,c	;volatile
  4292   001C22                     
  4293                           ; BSR set to: 14
  4294                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4295   001C22  8C84               	bsf	132,6,c	;volatile
  4296   001C24                     
  4297                           ; BSR set to: 14
  4298                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4299   001C24  9BA7               	bcf	167,5,b	;volatile
  4300   001C26                     
  4301                           ; BSR set to: 14
  4302                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4303   001C26  9DA7               	bcf	167,6,b	;volatile
  4304                           
  4305                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4306   001C28  0E1D               	movlw	29
  4307   001C2A  6F1D               	movwf	29,b	;volatile
  4308                           
  4309                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4310   001C2C  0E1E               	movlw	30
  4311   001C2E  6F1C               	movwf	28,b	;volatile
  4312                           
  4313                           ;i2c.c: 18:   RD5PPS=0x1C;
  4314   001C30  0E1C               	movlw	28
  4315   001C32  6F6F               	movwf	111,b	;volatile
  4316                           
  4317                           ;i2c.c: 19:   RD6PPS=0x1B;
  4318   001C34  0E1B               	movlw	27
  4319   001C36  6F70               	movwf	112,b	;volatile
  4320   001C38                     
  4321                           ; BSR set to: 14
  4322   001C38  0012               	return		;funcret
  4323   001C3A                     __end_of_I2C_2_Master_Init:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _buggy_lights_init *****************
  4327 ;; Defined at:
  4328 ;;		line 7 in file "buggy_lights.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		None
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text31
  4357   001BE2                     __ptext31:
  4358                           	callstack 0
  4359   001BE2                     _buggy_lights_init:
  4360                           	callstack 29
  4361   001BE2                     
  4362                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  4363   001BE2  9884               	bcf	132,4,c	;volatile
  4364                           
  4365                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  4366   001BE4  9288               	bcf	136,1,c	;volatile
  4367                           
  4368                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  4369   001BE6  9684               	bcf	132,3,c	;volatile
  4370                           
  4371                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  4372   001BE8  9086               	bcf	134,0,c	;volatile
  4373                           
  4374                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  4375   001BEA  9088               	bcf	136,0,c	;volatile
  4376                           
  4377                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  4378   001BEC  987C               	bcf	124,4,c	;volatile
  4379                           
  4380                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  4381   001BEE  9280               	bcf	128,1,c	;volatile
  4382                           
  4383                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  4384   001BF0  967C               	bcf	124,3,c	;volatile
  4385                           
  4386                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  4387   001BF2  907E               	bcf	126,0,c	;volatile
  4388                           
  4389                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  4390   001BF4  9080               	bcf	128,0,c	;volatile
  4391                           
  4392                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  4393   001BF6  9287               	bcf	135,1,c	;volatile
  4394                           
  4395                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  4396   001BF8  9881               	bcf	129,4,c	;volatile
  4397                           
  4398                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  4399   001BFA  9E86               	bcf	134,7,c	;volatile
  4400                           
  4401                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  4402   001BFC  927F               	bcf	127,1,c	;volatile
  4403                           
  4404                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  4405   001BFE  9879               	bcf	121,4,c	;volatile
  4406                           
  4407                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  4408   001C00  9E7E               	bcf	126,7,c	;volatile
  4409                           
  4410                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  4411   001C02  9087               	bcf	135,0,c	;volatile
  4412                           
  4413                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  4414   001C04  9E85               	bcf	133,7,c	;volatile
  4415                           
  4416                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  4417   001C06  9681               	bcf	129,3,c	;volatile
  4418                           
  4419                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  4420   001C08  907F               	bcf	127,0,c	;volatile
  4421                           
  4422                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  4423   001C0A  9E7D               	bcf	125,7,c	;volatile
  4424                           
  4425                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  4426   001C0C  9679               	bcf	121,3,c	;volatile
  4427   001C0E  0012               	return		;funcret
  4428   001C10                     __end_of_buggy_lights_init:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function _Timer0_init *****************
  4432 ;; Defined at:
  4433 ;;		line 7 in file "timers.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 3
  4454 ;; This function calls:
  4455 ;;		_reset_timer
  4456 ;;		_start_timer
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text32
  4463   001C62                     __ptext32:
  4464                           	callstack 0
  4465   001C62                     _Timer0_init:
  4466                           	callstack 27
  4467   001C62                     
  4468                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4469   001C62  50D6               	movf	214,w,c	;volatile
  4470   001C64  0B1F               	andlw	-225
  4471   001C66  0940               	iorlw	64
  4472   001C68  6ED6               	movwf	214,c	;volatile
  4473   001C6A                     
  4474                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4475   001C6A  88D6               	bsf	214,4,c	;volatile
  4476   001C6C                     
  4477                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  4478   001C6C  88D5               	bsf	213,4,c	;volatile
  4479                           
  4480                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  4481   001C6E  50D6               	movf	214,w,c	;volatile
  4482   001C70  0BF0               	andlw	-16
  4483   001C72  090E               	iorlw	14
  4484   001C74  6ED6               	movwf	214,c	;volatile
  4485   001C76                     
  4486                           ;timers.c: 18:     reset_timer();
  4487   001C76  ECB4  F00E         	call	_reset_timer	;wreg free
  4488   001C7A                     
  4489                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  4490   001C7A  8ED5               	bsf	213,7,c	;volatile
  4491                           
  4492                           ;timers.c: 21:     start_timer();
  4493   001C7C  ECCC  F00E         	call	_start_timer	;wreg free
  4494   001C80                     
  4495                           ;timers.c: 22:     PIE0bits.TMR0IE = 1;
  4496   001C80  010E               	movlb	14	; () banked
  4497   001C82  8B29               	bsf	41,5,b	;volatile
  4498   001C84                     
  4499                           ; BSR set to: 14
  4500                           ;timers.c: 23:     INTCONbits.PEIE = 1;
  4501   001C84  8CF2               	bsf	242,6,c	;volatile
  4502   001C86                     
  4503                           ; BSR set to: 14
  4504                           ;timers.c: 24:     INTCONbits.GIE = 1;
  4505   001C86  8EF2               	bsf	242,7,c	;volatile
  4506   001C88                     
  4507                           ; BSR set to: 14
  4508   001C88  0012               	return		;funcret
  4509   001C8A                     __end_of_Timer0_init:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _start_timer *****************
  4513 ;; Defined at:
  4514 ;;		line 30 in file "timers.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		None
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;Total ram usage:        0 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_main
  4539 ;;		_Timer0_init
  4540 ;;		_forward_navigation
  4541 ;;		_return_to_sender
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text33
  4546   001D98                     __ptext33:
  4547                           	callstack 0
  4548   001D98                     _start_timer:
  4549                           	callstack 29
  4550   001D98                     
  4551                           ;timers.c: 32:     T0CON0bits.T0EN=1;
  4552   001D98  8ED5               	bsf	213,7,c	;volatile
  4553   001D9A  0012               	return		;funcret
  4554   001D9C                     __end_of_start_timer:
  4555                           	callstack 0
  4556                           
  4557 ;; *************** function _reset_timer *****************
  4558 ;; Defined at:
  4559 ;;		line 70 in file "timers.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 2
  4580 ;; This function calls:
  4581 ;;		_write_timer
  4582 ;; This function is called by:
  4583 ;;		_main
  4584 ;;		_Timer0_init
  4585 ;;		_forward_navigation
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text34
  4590   001D68                     __ptext34:
  4591                           	callstack 0
  4592   001D68                     _reset_timer:
  4593                           	callstack 28
  4594   001D68                     
  4595                           ;timers.c: 72:     write_timer(0, 0);
  4596   001D68  0E00               	movlw	0
  4597   001D6A  6E01               	movwf	write_timer@tL^0,c
  4598   001D6C  0E00               	movlw	0
  4599   001D6E  ECBA  F00E         	call	_write_timer
  4600   001D72  0012               	return		;funcret
  4601   001D74                     __end_of_reset_timer:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _write_timer *****************
  4605 ;; Defined at:
  4606 ;;		line 58 in file "timers.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  tH              1    wreg     unsigned char 
  4609 ;;  tL              1    0[COMRAM] unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  tH              1    1[COMRAM] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;Total ram usage:        2 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 1
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_main
  4632 ;;		_reset_timer
  4633 ;;		_return_to_sender
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text35
  4638   001D74                     __ptext35:
  4639                           	callstack 0
  4640   001D74                     _write_timer:
  4641                           	callstack 29
  4642                           
  4643                           ;incstack = 0
  4644                           ;write_timer@tH stored from wreg
  4645   001D74  6E02               	movwf	write_timer@tH^0,c
  4646   001D76                     
  4647                           ;timers.c: 58: void write_timer(unsigned char tH, unsigned char tL);timers.c: 59: {;time
      +                          rs.c: 63:     TMR0H = tH;
  4648   001D76  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  4649   001D7A                     
  4650                           ;timers.c: 64:     TMR0L = tL;
  4651   001D7A  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  4652   001D7E  0012               	return		;funcret
  4653   001D80                     __end_of_write_timer:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _ISR *****************
  4657 ;; Defined at:
  4658 ;;		line 214 in file "timers.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		Interrupt level 2
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	intcode
  4686   000008                     __pintcode:
  4687                           	callstack 0
  4688   000008                     _ISR:
  4689                           	callstack 24
  4690                           
  4691                           ;incstack = 0
  4692   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4693   00000A                     
  4694                           ;timers.c: 216:     if (PIR0bits.TMR0IF) {
  4695   00000A  010E               	movlb	14	; () banked
  4696   00000C  AB33               	btfss	51,5,b	;volatile
  4697   00000E  EF0B  F000         	goto	i2u357_41
  4698   000012  EF0D  F000         	goto	i2u357_40
  4699   000016                     i2u357_41:
  4700   000016  EF1E  F000         	goto	i2l773
  4701   00001A                     i2u357_40:
  4702   00001A                     
  4703                           ; BSR set to: 14
  4704                           ;timers.c: 217:         if (returning) {
  4705   00001A  505E               	movf	_returning^0,w,c
  4706   00001C  B4D8               	btfsc	status,2,c
  4707   00001E  EF13  F000         	goto	i2u358_41
  4708   000022  EF15  F000         	goto	i2u358_40
  4709   000026                     i2u358_41:
  4710   000026  EF1A  F000         	goto	i2l4353
  4711   00002A                     i2u358_40:
  4712   00002A                     
  4713                           ; BSR set to: 14
  4714                           ;timers.c: 218:             return_flag = 1;
  4715   00002A  0E01               	movlw	1
  4716   00002C  0100               	movlb	0	; () banked
  4717   00002E  6F86               	movwf	_return_flag& (0+255),b
  4718                           
  4719                           ;timers.c: 219:         } else {
  4720   000030  EF1C  F000         	goto	i2l4355
  4721   000034                     i2l4353:
  4722                           
  4723                           ; BSR set to: 14
  4724                           ;timers.c: 220:             lost_flag = 1;
  4725   000034  0E01               	movlw	1
  4726   000036  6E5D               	movwf	_lost_flag^0,c
  4727   000038                     i2l4355:
  4728                           
  4729                           ;timers.c: 222:         PIR0bits.TMR0IF = 0;
  4730   000038  010E               	movlb	14	; () banked
  4731   00003A  9B33               	bcf	51,5,b	;volatile
  4732   00003C                     i2l773:
  4733                           
  4734                           ; BSR set to: 14
  4735   00003C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4736   00003E  0011               	retfie		f
  4737   000040                     __end_of_ISR:
  4738                           	callstack 0
  4739                           
  4740                           	psect	rparam
  4741   000000                     
  4742                           	psect	temp
  4743   00005F                     btemp:
  4744                           	callstack 0
  4745   00005F                     	ds	1
  4746   000000                     int$flags	set	btemp
  4747   000000                     wtemp8	set	btemp+1
  4748   000000                     ttemp5	set	btemp+1
  4749   000000                     ttemp6	set	btemp+4
  4750   000000                     ttemp7	set	btemp+8
  4751                           
  4752                           	psect	idloc
  4753                           
  4754                           ;Config register IDLOC0 @ 0x200000
  4755                           ;	unspecified, using default values
  4756   200000                     	org	2097152
  4757   200000  FFFF               	dw	65535
  4758                           
  4759                           ;Config register IDLOC1 @ 0x200002
  4760                           ;	unspecified, using default values
  4761   200002                     	org	2097154
  4762   200002  FFFF               	dw	65535
  4763                           
  4764                           ;Config register IDLOC2 @ 0x200004
  4765                           ;	unspecified, using default values
  4766   200004                     	org	2097156
  4767   200004  FFFF               	dw	65535
  4768                           
  4769                           ;Config register IDLOC3 @ 0x200006
  4770                           ;	unspecified, using default values
  4771   200006                     	org	2097158
  4772   200006  FFFF               	dw	65535
  4773                           
  4774                           ;Config register IDLOC4 @ 0x200008
  4775                           ;	unspecified, using default values
  4776   200008                     	org	2097160
  4777   200008  FFFF               	dw	65535
  4778                           
  4779                           ;Config register IDLOC5 @ 0x20000A
  4780                           ;	unspecified, using default values
  4781   20000A                     	org	2097162
  4782   20000A  FFFF               	dw	65535
  4783                           
  4784                           ;Config register IDLOC6 @ 0x20000C
  4785                           ;	unspecified, using default values
  4786   20000C                     	org	2097164
  4787   20000C  FFFF               	dw	65535
  4788                           
  4789                           ;Config register IDLOC7 @ 0x20000E
  4790                           ;	unspecified, using default values
  4791   20000E                     	org	2097166
  4792   20000E  FFFF               	dw	65535
  4793                           
  4794                           	psect	config
  4795                           
  4796                           ;Config register CONFIG1L @ 0x300000
  4797                           ;	External Oscillator mode Selection bits
  4798                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4799                           ;	Power-up default value for COSC bits
  4800                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4801   300000                     	org	3145728
  4802   300000  AA                 	db	170
  4803                           
  4804                           ;Config register CONFIG1H @ 0x300001
  4805                           ;	unspecified, using default values
  4806                           ;	Clock Out Enable bit
  4807                           ;	CLKOUTEN = 0x1, unprogrammed default
  4808                           ;	Clock Switch Enable bit
  4809                           ;	CSWEN = 0x1, unprogrammed default
  4810                           ;	Fail-Safe Clock Monitor Enable bit
  4811                           ;	FCMEN = 0x1, unprogrammed default
  4812   300001                     	org	3145729
  4813   300001  FF                 	db	255
  4814                           
  4815                           ;Config register CONFIG2L @ 0x300002
  4816                           ;	unspecified, using default values
  4817                           ;	Master Clear Enable bit
  4818                           ;	MCLRE = 0x1, unprogrammed default
  4819                           ;	Power-up Timer Enable bit
  4820                           ;	PWRTE = 0x1, unprogrammed default
  4821                           ;	Low-power BOR enable bit
  4822                           ;	LPBOREN = 0x1, unprogrammed default
  4823                           ;	Brown-out Reset Enable bits
  4824                           ;	BOREN = 0x3, unprogrammed default
  4825   300002                     	org	3145730
  4826   300002  FF                 	db	255
  4827                           
  4828                           ;Config register CONFIG2H @ 0x300003
  4829                           ;	unspecified, using default values
  4830                           ;	Brown Out Reset Voltage selection bits
  4831                           ;	BORV = 0x3, unprogrammed default
  4832                           ;	ZCD Disable bit
  4833                           ;	ZCD = 0x1, unprogrammed default
  4834                           ;	PPSLOCK bit One-Way Set Enable bit
  4835                           ;	PPS1WAY = 0x1, unprogrammed default
  4836                           ;	Stack Full/Underflow Reset Enable bit
  4837                           ;	STVREN = 0x1, unprogrammed default
  4838                           ;	Debugger Enable bit
  4839                           ;	DEBUG = 0x1, unprogrammed default
  4840                           ;	Extended Instruction Set Enable bit
  4841                           ;	XINST = 0x1, unprogrammed default
  4842   300003                     	org	3145731
  4843   300003  FF                 	db	255
  4844                           
  4845                           ;Config register CONFIG3L @ 0x300004
  4846                           ;	WDT Period Select bits
  4847                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4848                           ;	WDT operating mode
  4849                           ;	WDTE = OFF, WDT Disabled
  4850   300004                     	org	3145732
  4851   300004  9F                 	db	159
  4852                           
  4853                           ;Config register CONFIG3H @ 0x300005
  4854                           ;	unspecified, using default values
  4855                           ;	WDT Window Select bits
  4856                           ;	WDTCWS = 0x7, unprogrammed default
  4857                           ;	WDT input clock selector
  4858                           ;	WDTCCS = 0x7, unprogrammed default
  4859   300005                     	org	3145733
  4860   300005  FF                 	db	255
  4861                           
  4862                           ;Config register CONFIG4L @ 0x300006
  4863                           ;	unspecified, using default values
  4864                           ;	Write Protection Block 0
  4865                           ;	WRT0 = 0x1, unprogrammed default
  4866                           ;	Write Protection Block 1
  4867                           ;	WRT1 = 0x1, unprogrammed default
  4868                           ;	Write Protection Block 2
  4869                           ;	WRT2 = 0x1, unprogrammed default
  4870                           ;	Write Protection Block 3
  4871                           ;	WRT3 = 0x1, unprogrammed default
  4872                           ;	Write Protection Block 3
  4873                           ;	WRT4 = 0x1, unprogrammed default
  4874                           ;	Write Protection Block 3
  4875                           ;	WRT5 = 0x1, unprogrammed default
  4876                           ;	Write Protection Block 3
  4877                           ;	WRT6 = 0x1, unprogrammed default
  4878                           ;	Write Protection Block 3
  4879                           ;	WRT7 = 0x1, unprogrammed default
  4880   300006                     	org	3145734
  4881   300006  FF                 	db	255
  4882                           
  4883                           ;Config register CONFIG4H @ 0x300007
  4884                           ;	unspecified, using default values
  4885                           ;	Configuration Register Write Protection bit
  4886                           ;	WRTC = 0x1, unprogrammed default
  4887                           ;	Boot Block Write Protection bit
  4888                           ;	WRTB = 0x1, unprogrammed default
  4889                           ;	Data EEPROM Write Protection bit
  4890                           ;	WRTD = 0x1, unprogrammed default
  4891                           ;	Scanner Enable bit
  4892                           ;	SCANE = 0x1, unprogrammed default
  4893                           ;	Low Voltage Programming Enable bit
  4894                           ;	LVP = 0x1, unprogrammed default
  4895   300007                     	org	3145735
  4896   300007  FF                 	db	255
  4897                           
  4898                           ;Config register CONFIG5L @ 0x300008
  4899                           ;	unspecified, using default values
  4900                           ;	UserNVM Program Memory Code Protection bit
  4901                           ;	CP = 0x1, unprogrammed default
  4902                           ;	DataNVM Memory Code Protection bit
  4903                           ;	CPD = 0x1, unprogrammed default
  4904   300008                     	org	3145736
  4905   300008  FF                 	db	255
  4906                           
  4907                           ;Config register CONFIG5H @ 0x300009
  4908                           ;	unspecified, using default values
  4909   300009                     	org	3145737
  4910   300009  FF                 	db	255
  4911                           
  4912                           ;Config register CONFIG6L @ 0x30000A
  4913                           ;	unspecified, using default values
  4914                           ;	Table Read Protection Block 0
  4915                           ;	EBTR0 = 0x1, unprogrammed default
  4916                           ;	Table Read Protection Block 1
  4917                           ;	EBTR1 = 0x1, unprogrammed default
  4918                           ;	Table Read Protection Block 2
  4919                           ;	EBTR2 = 0x1, unprogrammed default
  4920                           ;	Table Read Protection Block 3
  4921                           ;	EBTR3 = 0x1, unprogrammed default
  4922                           ;	Table Read Protection Block 4
  4923                           ;	EBTR4 = 0x1, unprogrammed default
  4924                           ;	Table Read Protection Block 5
  4925                           ;	EBTR5 = 0x1, unprogrammed default
  4926                           ;	Table Read Protection Block 6
  4927                           ;	EBTR6 = 0x1, unprogrammed default
  4928                           ;	Table Read Protection Block 7
  4929                           ;	EBTR7 = 0x1, unprogrammed default
  4930   30000A                     	org	3145738
  4931   30000A  FF                 	db	255
  4932                           
  4933                           ;Config register CONFIG6H @ 0x30000B
  4934                           ;	unspecified, using default values
  4935                           ;	Boot Block Table Read Protection bit
  4936                           ;	EBTRB = 0x1, unprogrammed default
  4937   30000B                     	org	3145739
  4938   30000B  FF                 	db	255
  4939                           tosu	equ	0xFFF
  4940                           tosh	equ	0xFFE
  4941                           tosl	equ	0xFFD
  4942                           stkptr	equ	0xFFC
  4943                           pclatu	equ	0xFFB
  4944                           pclath	equ	0xFFA
  4945                           pcl	equ	0xFF9
  4946                           tblptru	equ	0xFF8
  4947                           tblptrh	equ	0xFF7
  4948                           tblptrl	equ	0xFF6
  4949                           tablat	equ	0xFF5
  4950                           prodh	equ	0xFF4
  4951                           prodl	equ	0xFF3
  4952                           indf0	equ	0xFEF
  4953                           postinc0	equ	0xFEE
  4954                           postdec0	equ	0xFED
  4955                           preinc0	equ	0xFEC
  4956                           plusw0	equ	0xFEB
  4957                           fsr0h	equ	0xFEA
  4958                           fsr0l	equ	0xFE9
  4959                           wreg	equ	0xFE8
  4960                           indf1	equ	0xFE7
  4961                           postinc1	equ	0xFE6
  4962                           postdec1	equ	0xFE5
  4963                           preinc1	equ	0xFE4
  4964                           plusw1	equ	0xFE3
  4965                           fsr1h	equ	0xFE2
  4966                           fsr1l	equ	0xFE1
  4967                           bsr	equ	0xFE0
  4968                           indf2	equ	0xFDF
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           preinc2	equ	0xFDC
  4972                           plusw2	equ	0xFDB
  4973                           fsr2h	equ	0xFDA
  4974                           fsr2l	equ	0xFD9
  4975                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        30
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      94
    BANK0           160     35      92
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    read_timer@tH	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerH(COMRAM[1]), main@timerH(BANK0[1]), 

    read_timer@tL	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerL(COMRAM[1]), main@timerL(BANK0[1]), 

    read_trail@man	PTR unsigned char  size(1) Largest target is 1
		 -> main@mann(BANK0[1]), return_to_sender@mann(COMRAM[1]), 

    read_trail@tH	PTR unsigned char  size(1) Largest target is 1
		 -> main@timerH(BANK0[1]), return_to_sender@timerH(COMRAM[1]), 

    read_trail@tL	PTR unsigned char  size(1) Largest target is 1
		 -> main@timerL(BANK0[1]), return_to_sender@timerL(COMRAM[1]), 

    S1143DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2859$buffer	PTR unsigned char  size(2) Largest target is 0

    S2859$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), main@motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _stop->_setMotorPWM
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   17011
                                             76 COMRAM     2     2      0
                                              0 BANK0     35    35      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                         _read_timer
                         _read_trail
                        _reset_timer
                     _sendIntSerial4
                        _start_timer
                               _stop
                         _stop_timer
                        _write_timer
                        _write_trail
 ---------------------------------------------------------------------------------
 (1) _write_trail                                          3     1      2     453
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _stop_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _stop                                                 3     1      2    3829
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    6125
                                             57 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5074
                                             31 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4249
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    3897
                                             13 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_trail                                           3     0      3     633
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_timer                                           2     0      2     348
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     3      2    2899
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          5     4      1    1981
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     272
                        _reset_timer
                        _start_timer
 ---------------------------------------------------------------------------------
 (1) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset_timer                                          0     0      0     272
                        _write_timer
 ---------------------------------------------------------------------------------
 (1) _write_timer                                          2     1      1     272
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
     _start_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _read_timer
   _read_trail
   _reset_timer
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _start_timer
   _stop
     _setMotorPWM
   _stop_timer
   _write_timer
   _write_trail

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      9      0       0      57        0.0%
BITBIGSFRlllhhh      9      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F6      61        0.0%
DATA                 0      0      F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 16:36:33 2024

               _turn180Delay 00B0              _trail_timer_low 0114                           l27 1C0E  
                         l65 1BE0                           l68 1CF0                 ___awdiv@sign 0006  
        ___wmul@multiplicand 0003             _trail_timer_high 0128                          l222 181E  
                        l320 1C3A                          l323 1C60                          l332 1D88  
                        l500 1CD0                          l317 1C38                          l229 14A6  
                        l261 16DE                          l237 18AC                          l326 1D92  
                        l335 1D66                          l258 166E                          l452 12BE  
                        l449 11D6                          l458 1350                          l491 1D26  
                        l731 1D96                          l740 1D72                          l725 1C88  
                        l485 1D0E                          l734 1D3C                          l743 1AF4  
                        l728 1D9A                          l488 1D12                          l737 1D7E  
                        l497 1A50                          l746 1B78                          l776 1CAE  
                        _ISR 0008                          _abs 1B7A                  _start_timer 1D98  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 00AC  
                       ?_ISR 0001                         l1020 178E                         l1007 156A  
                       ?_abs 0007                         l3101 150A                         l3111 153E  
                       l3103 1518                         l3113 1544                         l3105 151E  
                       l3201 158C                         l4001 183A                         l1274 1920  
                       l1522 1BAC                         l1514 1A9E                         l1267 1918  
                       l3107 1534                         l3115 154A                         l3131 16FE  
                       l3123 16E0                         l3211 1B7A                         l3203 1596  
                       l1515 1AA6                         l4011 1870                         l4003 1842  
                       l1284 19EE                         l4021 163C                         l3117 155A  
                       l3109 153C                         l3141 1736                         l3133 170C  
                       l3125 16E4                         l1277 19E6                         l3213 1B88  
                       l3205 15B2                         l4005 1858                         l4013 1880  
                       l1534 1624                         l1454 1B40                         l4031 1696  
                       l4023 164E                         l3119 1562                         l3143 1744  
                       l3151 176E                         l3135 1714                         l3127 16F2  
                       l1519 1B94                         l3207 15E4                         l3311 0E22  
                       l4015 1896                         l4007 1860                         l3305 1C3A  
                       l3161 18B6                         l4033 169E                         l4025 1666  
                       l4017 1626                         l4041 1CFC                         l3081 14AC  
                       l3153 177E                         l3145 175A                         l3137 1726  
                       l3129 16FA                         l1545 1D9C                         l3321 0E6C  
                       l3313 0E48                         l4009 1868                         l4051 1C62  
                       l3307 1C4A                         l3403 1D8A                         l3411 1D80  
                       l3171 18EC                         l3163 18C8                         l4027 1686  
                       l4035 16AE                         l4019 162E                         l4043 1CFE  
                       l3091 14DC                         l3083 14BA                         l3155 1786  
                       l3147 1762                         l3139 172E                         l3331 0EE6  
                       l3323 0E8C                         l3315 0E50                         l4061 1C80  
                       l4053 1C6A                         l3405 1D8E                         l3413 1D84  
                       l3173 1902                         l3165 18D0                         l4037 16C6  
                       l4029 168E                         l4045 1D08                         l3093 14E0  
                       l3085 14C2                         l3149 1768                         l3181 198C  
                       l3341 0F58                         l3333 0F16                         l3325 0EAC  
                       l3317 0E5E                         l3309 0E1A                         l3511 1D76  
                       l4063 1C84                         l4055 1C6C                         l3407 1D5E  
                       l3175 190A                         l3167 18D8                         l3159 18AE  
                       l4047 1D0A                         l4039 1CF2                         l3095 14E8  
                       l3087 14C6                         l3079 14A8                         l3191 19D2  
                       l3183 199E                         l1495 0FBC                         l3351 0FA8  
                       l3343 0F68                         l3335 0F32                         l3327 0EC4  
                       l3319 0E62                         l4071 1CB0                         l1496 1124  
                       l3513 1D7A                         l4065 1C86                         l4057 1C76  
                       l3409 1D62                         l3177 190C                         l3169 18E6  
                       l3521 1CA6                         l4049 1D0C                         l3097 14FA  
                       l3089 14D4                         l3193 19DA                         l3185 19A6  
                       l3361 100E                         l3345 0F78                         l3353 0FAA  
                       l3337 0F36                         l3329 0ECE                         l3601 1AF6  
                       l4073 1CC6                         l4059 1C7A                         l3179 1912  
                       l4067 1D28                         l3515 1D12                         l3099 1502  
                       l3195 19E0                         l3187 19AE                         l3371 1068  
                       l3363 1012                         l3347 0F86                         l3339 0F48  
                       l3355 0FC8                         l3531 1A7E                         l3611 1B38  
                       l3603 1B02                         l3541 1C24                         l3533 1C10  
                       l3517 1D22                         l3189 19BC                         l3197 156C  
                       l3373 107C                         l3365 1036                         l3381 10AE  
                       l3357 0FE8                         l3349 0F8E                         l3525 1A52  
                       l3605 1B0A                         l4069 1D94                         l3543 1C26  
                       l3535 1C1A                         l3519 1C8A                         l3199 157C  
                       l3391 1114                         l3375 1096                         l3367 1052  
                       l3359 1000                         l3383 10DE                         l3527 1A56  
                       l3607 1B12                         l3537 1C20                         l3545 1CD4  
                       l3721 1BAE                         l3393 111C                         l3385 10E6  
                       l3377 1098                         l3369 1056                         l3529 1A64  
                       l3609 1B2A                         l3715 1BE2                         l3539 1C22  
                       l3723 1BB2                         l3725 1BBC                         l3581 13D2  
                       l3573 1354                         l3389 10F2                         l4701 11D4  
                       l3591 1D98                         l3727 1BCC                         l3583 1410  
                       l3575 136E                         l4631 1B50                         l4711 124C  
                       l4703 11E4                         l3729 1BD6                         l3585 142A  
                       l3577 13BC                         l3593 19F0                         l4641 1B76  
                       l4633 1B5C                         l4721 127A                         l4713 1250  
                       l4705 122A                         l3587 146A                         l3579 13CE  
                       l4643 1AA8                         l3595 19F4                         l4635 1B68  
                       l4731 12AA                         l4723 1286                         l4715 1254  
                       l4707 1242                         l3589 1D68                         l4645 1ABE  
                       l3597 1A1A                         l4637 1B6C                         l4629 1B44  
                       l4741 12FE                         l4733 12BA                         l4725 128A  
                       l4717 1258                         l4709 1248                         l4647 1AD0  
                       l3599 1A1E                         l4639 1B70                         l4751 133A  
                       l4743 1308                         l4735 12CC                         l4727 1296  
                       l4719 1264                         l4671 117C                         l4649 1AE2  
                       l4753 1346                         l4745 1318                         l4737 12E4  
                       l4729 12A0                         l4681 11B8                         l4673 1190  
                       l4665 1126                         l4755 134A                         l4747 131C  
                       l4739 12F4                         l4691 11C8                         l4683 11BC  
                       l4675 1198                         l4667 116C                         l3981 17EE  
                       l3973 1790                         l4749 1328                         l4693 11CA  
                       l4685 11C0                         l4677 11A0                         l4669 1174  
                       l3991 1810                         l3983 17F8                         l3975 17A0  
                       l4695 11CC                         l4687 11C4                         l4679 11A8  
                       l3993 1812                         l3985 17FA                         l3977 17C6  
                       l4697 11CE                         l4689 11C6                         l3995 181C  
                       l3987 1804                         l3979 17CA                         l4699 11D0  
                       l3989 1806                         l3997 1820                         l4887 10D0  
                       l3999 1824                         STR_1 0E0F                         STR_2 0E14  
                       STR_5 0E01                         u2000 1518                         u2001 1514  
                       u2010 1534                         u2011 1530                         u2100 18E6  
                       u2020 155A                         u2101 18E2                         u2021 1556  
                       u2110 1902                         u2030 16F2                         u2111 18FE  
                       u2031 16EE                         u2040 170C                         u2120 199E  
                       u2041 1708                         u2121 199A                         u2050 1726  
                       u2130 19BC                         u2051 1722                         u2131 19B8  
                       u2060 1744                         u2140 19D2                         u2061 1740  
                       u2141 19CE                         u2070 175A                         u2150 157C  
                       u2071 1756                         u2151 1578                         u2400 1C4A  
                       u2080 177E                         u2160 158C                         u4000 11F6  
               _BAUD4CONbits 0EE9                         u2401 1C46                         u2081 177A  
                       u2161 1588                         u4001 11EE                         u2410 1C60  
                       u2090 18C8                         u2170 15B2                         u2411 1C5C  
                       u2091 18C4                         u2171 15AE                         u2180 15E4  
                       u2500 0F78                         u2420 0E48                         u3300 1896  
                       u4020 1218                         u2181 15E0                         u2501 0F74  
                       u2421 0E44                         u3301 1892                         u4021 1210  
                       u2190 1B88                         u2510 0FBC                         u2430 0E8C  
                       u3310 18AC                         u2191 1B84                         u2511 0FB8  
                       u2431 0E88                         u3311 18A8                         u3320 1666  
                       u2520 0FE8                         u2440 0EAC                         u4040 12CC  
                       u3321 1662                         u2521 0FE4                         u2441 0EA8  
                       u4041 12C8                         u3330 1686                         u2530 1068  
                       u2450 0EE2                         u4050 133A                         u4018 11F8  
                       _T2PR 0FBC                         u3331 1682                         u2531 1064  
                       u2451 0EDC                         u4051 1336                         u2620 136E  
                       u3340 16C6                         u2540 1078                         u2460 0EE4  
                       u2621 136A                         u3341 16C2                         u2541 1074  
                       u2630 142A                         u3350 16DE                         u2550 10AA  
                       u2470 0F48                         u4038 121A                         u2631 1426  
                       u3351 16DA                         u2551 10A6                         u2471 0F44  
                       u4207 1876                         u2560 1D22                         u2640 1A16  
                       u2480 0F58                         u3280 183A                         u4217 16A4  
                       u2561 1D1E                         u2481 0F54                         u3281 1836  
                       u2650 1A40                         u2490 0F68                         u2570 1A9E  
                       u3290 1858                         u4227 1BC2                         u2491 0F64  
                       u2571 1A9A                         u3291 1854                         u2660 1A50  
                       u2661 1A4C                         u2647 1A0C                         u2657 1A36  
                       u4177 1234                         u1970 14BA                         u1971 14B6  
                       u4187 126E                         u1980 14D4                         u1981 14D0  
                       u4197 12D6                         u1990 14FA                         u1991 14F6  
                       u3990 11E4                         u3991 11E0                         abs@a 0007  
                       _dbuf 0060                         _main 1126                         _prec 0084  
                       _nout 0080                         fsr0h 0FEA                         fsr1h 0FE2  
                       indf0 0FEF                         fsr2h 0FDA                         fsr0l 0FE9  
                       indf1 0FE7                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 005F                         _stop 1820  
                       prodh 0FF4                         prodl 0FF3                         start 0040  
               ___param_bank 0000                        ??_ISR 0001                        ??_abs 0009  
              write_timer@tH 0002                write_timer@tL 0001                write_trail@tH 0003  
              write_trail@tL 0001               _sendIntSerial4 1CB0                        ?_main 0001  
         _timer_high_pointer 0051              __end_of___awdiv 156C              __end_of___awmod 1790  
                      ?_stop 0013              ___awdiv@divisor 0003              __end_of___lwdiv 1922  
            __end_of___lwmod 19F0                        i2l773 003C              ___awdiv@counter 0005  
               vfpfcnvrt@cnt 0014                 vfpfcnvrt@fmt 000F                        _TMR0H 0FD4  
                      _TMR0L 0FD3      __end_of_sendCharSerial4 1D28   __end_of_I2C_2_Master_Start 1D94  
                _write_timer 1D74   __end_of_I2C_2_Master_Write 1D68                  _write_trail 1B42  
                      _flags 005B                        _fputc 156C                        _width 0082  
                      _putch 1D9C            _turnRight135Delay 00B2                        tablat 0FF5  
            _turnLeft90Delay 00B8                        ttemp5 0060                        ttemp6 0063  
                      ttemp7 0067                        status 0FD8                        wtemp8 0060  
            __end_of_sprintf 1B42              __initialization 1922                 __end_of_main 1354  
               __end_of_stop 18AE       __end_of_sendIntSerial4 1CD2                       ??_main 004D  
                     ??_stop 0015                __activetblptr 0003               write_trail@man 0002  
             _bottomGearLeft 0056                 ?_setMotorPWM 000E                       ?_fputc 0001  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0001                       ?_putch 0001  
                     _RC0PPS 0E62                       _RE2PPS 0E74                       _RD5PPS 0E6F  
                     _RC7PPS 0E69                       _RD6PPS 0E70                       _RE4PPS 0E76  
                     i2l4351 002A                       i2l4353 0034                       i2l4355 0038  
                     i2l4347 000A                       i2l4349 001A                       _RG6PPS 0E88  
              vfpfcnvrt@done 0013     __end_of_color_click_init 1BE2                       _RX4PPS 0E15  
                     _TX4REG 0EE4             _turnLeft135Delay 00B4                ??_Timer0_init 0003  
               ?_reset_timer 0001                 _CCPTMRS0bits 0FAD                 vfprintf@cfmt 001F  
                     ___wmul 1C8A                    ??___awdiv 0005                    ??___awmod 0005  
                  ??___lwdiv 000B                    ??___lwmod 0005              ?_sendIntSerial4 003A  
                     clear_0 1968                       clear_1 1974             ___awdiv@quotient 0007  
            ___awmod@divisor 0003                       isa$std 0001              ___awmod@counter 0005  
                     fputc@c 0001                 __pdataCOMRAM 004F            _timer_low_pointer 004F  
               __mediumconst 0000                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8             ?_sendCharSerial4 0001                       putch@c 0001  
           __end_of_vfprintf 1AA8                       stop@mL 0013                       stop@mR 0014  
          ??_initDCmotorsPWM 0003                    ??_sprintf 002B            _buggy_lights_init 1BE2  
                 __accesstop 0060      __end_of__initialization 1982           ?_buggy_lights_init 0001  
              ___rparam_used 0001               __pcstackCOMRAM 0001         _wall_threshold_clear 00BA  
               __pidataBANK0 1D3E          ??_buggy_lights_init 0001                __end_of_fputc 1626  
              __end_of_putch 1D9E          __end_of_Timer0_init 1C8A                 ?_start_timer 0001  
                    ??_fputc 0004    __end_of_buggy_lights_init 1C10                      ??_putch 0001  
                 __pbssBANK0 0060                   __pbssBANK1 0100            _color_writetoaddr 1CD2  
               _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003                      ?___wmul 0001  
            _bottomGearRight 0055          ??_color_writetoaddr 0004                      _SP4BRGH 0EE6  
                    _SP4BRGL 0EE5                 ?_write_timer 0001                 ?_write_trail 0001  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 0003  
  __end_of_color_writetoaddr 1CF2           _I2C_2_Master_Start 1D8A                   _initUSART4 1CF2  
         _I2C_2_Master_Write 1D5C                      __Hparam 0000                      __Lparam 0000  
                _Timer0_init 1C62      sendStringSerial4@string 0002             _turningRightGear 0053  
                    ___awdiv 14A8                      ___awmod 16E0          ?_I2C_2_Master_Start 0001  
                    ___lwdiv 18AE          ?_I2C_2_Master_Write 0001                      ___lwmod 198C  
                  ?_vfprintf 001C                 __psmallconst 0E00                      __pcinit 1922  
                    __ramtop 0E00                      __ptext0 1126                      __ptext1 1B42  
                    __ptext2 1D94                      __ptext3 1820                      __ptext4 1CB0  
                    __ptext5 1AF6                      __ptext6 1A52                      __ptext7 0E1A  
                    __ptext8 156C                      __ptext9 1D9C                   _read_timer 1D28  
                 _read_trail 1AA8                    _T2CONbits 0FBD             ___awmod@dividend 0001  
                  _T2HLTbits 0FBE       fullSpeedAhead@leftGear 0016                      _sprintf 1AF6  
       ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002         end_of_initialization 1982  
                    fputc@fp 0003            ?_color_click_init 0001           ??_color_click_init 0005  
           ??_sendIntSerial4 003C            __end_of_vfpfcnvrt 1126                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0017                   ??_vfprintf 001F  
            _initDCmotorsPWM 1790         sendIntSerial4@string 003C                    _PORTFbits 0F8E  
         setMotorPWM@negDuty 0012                 read_timer@tH 0001                 read_timer@tL 0002  
                  _TRISAbits 0F81           setMotorPWM@posDuty 0011                 read_trail@tH 0001  
               read_trail@tL 0002                    _TRISCbits 0F83                    _TRISDbits 0F84  
                  _TRISEbits 0F85                    _TRISFbits 0F86                    _TRISGbits 0F87  
                  _TRISHbits 0F88             fullSpeedAhead@mL 0013             fullSpeedAhead@mR 0014  
   color_writetoaddr@address 0004                  _CCP1CONbits 0FAB                  _CCP2CONbits 0FA7  
                _CCP3CONbits 0F26                  ?_initUSART4 0001                  _CCP4CONbits 0F22  
  sendCharSerial4@charToSend 0001                   main@motorL 0098                   main@motorR 00A1  
                 main@timerH 0096                   main@timerL 0097                   _stop_timer 1D94  
             _fullSpeedAhead 1626                  vfpfcnvrt@ap 0010                  vfpfcnvrt@cp 0016  
                vfpfcnvrt@fp 000E               __end_of___wmul 1CB0                __pidataCOMRAM 1D50  
                ?_read_timer 0001                  ?_read_trail 0001          start_initialization 1922  
                __end_of_ISR 0040                  __end_of_abs 1BAE             _turnRight90Delay 00B6  
    __end_of_initDCmotorsPWM 1820                  vfprintf@fmt 001D       __end_of_fullSpeedAhead 16E0  
                   ??___wmul 0005                  __pdataBANK0 00AA                  __pbssCOMRAM 005B  
              __pcstackBANK0 0087             ___lwdiv@dividend 0007                 ?_Timer0_init 0001  
                ?_stop_timer 0001              ?_fullSpeedAhead 0013                    __pintcode 0008  
                   ?___awdiv 0001                     ?___awmod 0001                     ?___lwdiv 0007  
                   ?___lwmod 0001              _turningLeftGear 0054                  __smallconst 0E00  
          _I2C_2_Master_Idle 1C3A            _I2C_2_Master_Init 1C10            _I2C_2_Master_Stop 1D80  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001                ??_setMotorPWM 000F  
         ?_I2C_2_Master_Stop 0001             ___lwdiv@quotient 000B                _headbuttDelay 00AE  
   initDCmotorsPWM@PWMperiod 0001                     ?_sprintf 0020                    _rampDelay 0059  
          _sendStringSerial4 19F0          ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001  
             ___wmul@product 0005                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0002  
                   _LATCbits 0F7B                     _LATDbits 0F7C                     _LATEbits 0F7D  
                   _LATFbits 0F7E                     _LATGbits 0F7F                     _LATHbits 0F80  
                   _PIE0bits 0E29           ?_sendStringSerial4 0002                ??_reset_timer 0003  
                  _lost_flag 005D                     _PIR0bits 0E33                     i2u357_40 001A  
                   i2u357_41 0016                     i2u358_40 002A                     i2u358_41 0026  
                   _PIR4bits 0E37             ?_initDCmotorsPWM 0001            ??_sendCharSerial4 0001  
                   _SSP2CON2 0EDA          ??_sendStringSerial4 0004                     _SSP2STAT 0ED8  
                  _returning 005E                    _vfpfcnvrt 0E1A    __end_of_I2C_2_Master_Idle 1C62  
  __end_of_I2C_2_Master_Init 1C3A            ___wmul@multiplier 0001    __end_of_I2C_2_Master_Stop 1D8A  
               setMotorPWM@m 000E  I2C_2_Master_Write@data_byte 0002              main@RGBC_colour 008E  
                 vfpfcnvrt@c 001B                    copy_data0 1936                    copy_data1 1956  
  __end_of_sendStringSerial4 1A52          __end_of_setMotorPWM 14A8                 ??_initUSART4 0001  
                   __Hrparam 0000                   vfprintf@ap 001E                     __Lrparam 0000  
                 vfprintf@fp 001C                 _sample_count 005A                   ?_vfpfcnvrt 000E  
        __end_of_reset_timer 1D74                 ??_read_timer 0003                 ??_read_trail 0004  
                 _ANSELDbits 0EA7                   _ANSELFbits 0EB4                ??_start_timer 0001  
                 sprintf@fmt 0022                   sprintf@ret 002B                   _T0CON0bits 0FD5  
                 _T0CON1bits 0FD6              ___lwdiv@divisor 0009           __end_of_initUSART4 1D10  
            ___lwdiv@counter 000D                     __ptext10 1B7A                     __ptext11 198C  
                   __ptext20 1626                     __ptext12 16E0                     __ptext21 1354  
                   __ptext13 14A8                     __ptext30 1C10                     __ptext22 1C8A  
                   __ptext14 19F0                     __ptext31 1BE2                     __ptext23 18AE  
                   __ptext15 1D10                     __ptext32 1C62                     __ptext24 1BAE  
                   __ptext16 1AA8                     __ptext33 1D98                     __ptext25 1CD2  
                   __ptext17 1D28                     __ptext34 1D68                     __ptext26 1D5C  
                   __ptext18 1CF2                     __ptext35 1D74                     __ptext27 1D80  
                   __ptext19 1790                     __ptext28 1D8A                     __ptext29 1C3A  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA           __end_of_read_timer 1D3E  
         __end_of_read_trail 1AF6                     isa$xinst 0000                   _RC4STAbits 0EE7  
                   int$flags 005F                     _vfprintf 1A52                     main@mann 0087  
                 _INTCONbits 0FF2                ??_write_timer 0002                ??_write_trail 0003  
                _setMotorPWM 1354          __end_of_start_timer 1D9C                     intlevel2 0000  
    fullSpeedAhead@rightGear 0017                    sprintf@ap 002D                 _topGearRight 0057  
          _manoeuvre_pointer 00AA             ___lwmod@dividend 0001             ??_fullSpeedAhead 0015  
             main@HSV_colour 0088                  _reset_timer 1D68                 ??_stop_timer 0001  
                ??_vfpfcnvrt 0011             _color_click_init 1BAE        sendIntSerial4@integer 003A  
                _topGearLeft 0058                     sprintf@f 002E                     sprintf@s 0020  
                 _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C              ___lwmod@divisor 0003  
            ___lwmod@counter 0005              _trail_manoeuvre 0100                  _return_flag 0086  
         __end_of_stop_timer 1D98              _manoeuvre_count 005C                   _TX4STAbits 0EE8  
            _sendCharSerial4 1D10          __end_of_write_timer 1D80          __end_of_write_trail 1B7A  
              read_trail@man 0003  
