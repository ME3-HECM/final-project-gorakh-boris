

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 17:37:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 18/08/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F67K40 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   001054                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _squareDelay
    73   001054  012C               	dw	300
    74                           
    75                           ;initializer for _headbuttDelay
    76   001056  0046               	dw	70
    77                           
    78                           ;initializer for _turn180Delay
    79   001058  01FE               	dw	510
    80                           
    81                           ;initializer for _turnRight135Delay
    82   00105A  012C               	dw	300
    83                           
    84                           ;initializer for _turnLeft135Delay
    85   00105C  012C               	dw	300
    86                           
    87                           ;initializer for _turnRight90Delay
    88   00105E  00AF               	dw	175
    89                           
    90                           ;initializer for _turnLeft90Delay
    91   001060  00AF               	dw	175
    92                           
    93                           ;initializer for _manoeuvre_count
    94   001062  03                 	db	3
    95                           
    96                           ;initializer for _manoeuvre_pointer
    97   001063  C4                 	db	low (_trail_manoeuvre+20)
    98                           
    99                           ;initializer for _timer_low_pointer
   100   001064  B0                 	db	low (_trail_timer_low+20)
   101                           
   102                           ;initializer for _timer_high_pointer
   103   001065  2C                 	db	low (_trail_timer_high+20)
   104                           
   105                           ;initializer for _returning
   106   001066  01                 	db	1
   107                           
   108                           ;initializer for _turningGear
   109   001067  2A                 	db	42
   110                           
   111                           ;initializer for _topGearRight
   112   001068  14                 	db	20
   113                           
   114                           ;initializer for _topGearLeft
   115   001069  14                 	db	20
   116                           
   117                           ;initializer for _rampDelay
   118   00106A  08                 	db	8
   119                           
   120                           ;initializer for _trail_timer_high
   121   00106B  03                 	db	3
   122   00106C  06                 	db	6
   123   00106D  03                 	db	3
   124   00106E  06                 	db	6
   125   00106F  03                 	db	3
   126   001070  06                 	db	6
   127   001071  03                 	db	3
   128   001072  06                 	db	6
   129   001073  03                 	db	3
   130   001074  06                 	db	6
   131   001075  03                 	db	3
   132   001076  06                 	db	6
   133   001077  03                 	db	3
   134   001078  06                 	db	6
   135   001079  03                 	db	3
   136   00107A  06                 	db	6
   137   00107B  03                 	db	3
   138   00107C  06                 	db	6
   139   00107D  03                 	db	3
   140   00107E  06                 	db	6
   141                           
   142                           	psect	idataBANK0
   143   001138                     __pidataBANK0:
   144                           	callstack 0
   145                           
   146                           ;initializer for _trail_manoeuvre
   147   001138  00                 	db	0
   148   001139  00                 	db	0
   149   00113A  00                 	db	0
   150   00113B  00                 	db	0
   151   00113C  00                 	db	0
   152   00113D  00                 	db	0
   153   00113E  00                 	db	0
   154   00113F  00                 	db	0
   155   001140  00                 	db	0
   156   001141  00                 	db	0
   157   001142  00                 	db	0
   158   001143  00                 	db	0
   159   001144  00                 	db	0
   160   001145  00                 	db	0
   161   001146  00                 	db	0
   162   001147  00                 	db	0
   163   001148  00                 	db	0
   164   001149  02                 	db	2
   165   00114A  01                 	db	1
   166   00114B  08                 	db	8
   167   000000                     _TX4REG	set	3812
   168   000000                     _RC4STAbits	set	3815
   169   000000                     _SP4BRGH	set	3814
   170   000000                     _LATEbits	set	3965
   171   000000                     _TRISEbits	set	3973
   172   000000                     _LATGbits	set	3967
   173   000000                     _TRISGbits	set	3975
   174   000000                     _LATFbits	set	3966
   175   000000                     _LATHbits	set	3968
   176   000000                     _TRISFbits	set	3974
   177   000000                     _TRISHbits	set	3976
   178   000000                     _SSP2CON2bits	set	3802
   179   000000                     _RX4PPS	set	3605
   180   000000                     _SSP2CLKPPS	set	3612
   181   000000                     _SSP2DATPPS	set	3613
   182   000000                     _RC7PPS	set	3689
   183   000000                     _RE2PPS	set	3700
   184   000000                     _LATAbits	set	3961
   185   000000                     _LATDbits	set	3964
   186   000000                     _TRISDbits	set	3972
   187   000000                     _PORTFbits	set	3982
   188   000000                     _T2PR	set	4028
   189   000000                     _T2CONbits	set	4029
   190   000000                     _CCPR2H	set	4006
   191   000000                     _CCPR1H	set	4010
   192   000000                     _TRISCbits	set	3971
   193   000000                     _TRISAbits	set	3969
   194   000000                     _LATCbits	set	3963
   195   000000                     _RE4PPS	set	3702
   196   000000                     _RG6PPS	set	3720
   197   000000                     _RD5PPS	set	3695
   198   000000                     _ANSELDbits	set	3751
   199   000000                     _SSP2ADD	set	3798
   200   000000                     _SSP2CON1bits	set	3801
   201   000000                     _CCPR4H	set	3873
   202   000000                     _CCPR3H	set	3877
   203   000000                     _TMR0L	set	4051
   204   000000                     _TMR0H	set	4052
   205   000000                     _T0CON0bits	set	4053
   206   000000                     _T0CON1bits	set	4054
   207   000000                     _T2CLKCONbits	set	4031
   208   000000                     _T2HLTbits	set	4030
   209   000000                     _CCP1CONbits	set	4011
   210   000000                     _CCPTMRS0bits	set	4013
   211   000000                     _CCP2CONbits	set	4007
   212   000000                     _CCP3CONbits	set	3878
   213   000000                     _CCP4CONbits	set	3874
   214   000000                     _RC4REG	set	3811
   215   000000                     _SP4BRGL	set	3813
   216   000000                     _TX4STAbits	set	3816
   217   000000                     _BAUD4CONbits	set	3817
   218   000000                     _SSP2CON2	set	3802
   219   000000                     _SSP2STAT	set	3800
   220   000000                     _ANSELFbits	set	3764
   221   000000                     _SSP2BUF	set	3797
   222   000000                     _PIE0bits	set	3625
   223   000000                     _PIE4bits	set	3629
   224   000000                     _PIR4bits	set	3639
   225   000000                     _RC0PPS	set	3682
   226   000000                     _RD6PPS	set	3696
   227   000000                     _PIR0bits	set	3635
   228   000000                     _INTCONbits	set	4082
   229                           
   230                           	psect	smallconst
   231   000E00                     __psmallconst:
   232                           	callstack 0
   233   000E00  00                 	db	0
   234   000E01                     STR_1:
   235                           
   236                           ; BSR set to: 14
   237   000E01  25                 	db	37
   238   000E02  64                 	db	100	;'d'
   239   000E03  20                 	db	32
   240   000E04  0D                 	db	13
   241   000E05  00                 	db	0
   242   000E06                     STR_2:
   243                           
   244                           ; BSR set to: 14
   245   000E06  25                 	db	37
   246   000E07  64                 	db	100	;'d'
   247   000E08  00                 	db	0
   248   000E09  00                 	db	0	; dummy byte at the end
   249   000000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253   000F70                     __pcinit:
   254                           	callstack 0
   255   000F70                     start_initialization:
   256                           	callstack 0
   257   000F70                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK0 (20 bytes)
   261                           ; load TBLPTR registers with __pidataBANK0
   262   000F70  0E38               	movlw	low __pidataBANK0
   263   000F72  6EF6               	movwf	tblptrl,c
   264   000F74  0E11               	movlw	high __pidataBANK0
   265   000F76  6EF7               	movwf	tblptrh,c
   266   000F78  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   267   000F7A  6EF8               	movwf	tblptru,c
   268   000F7C  EE00  F0B0         	lfsr	0,__pdataBANK0
   269   000F80  EE10 F014          	lfsr	1,20
   270   000F84                     copy_data0:
   271   000F84  0009               	tblrd		*+
   272   000F86  CFF5 FFEE          	movff	tablat,postinc0
   273   000F8A  50E5               	movf	postdec1,w,c
   274   000F8C  50E1               	movf	fsr1l,w,c
   275   000F8E  E1FA               	bnz	copy_data0
   276                           
   277                           ; Initialize objects allocated to COMRAM (43 bytes)
   278                           ; load TBLPTR registers with __pidataCOMRAM
   279   000F90  0E54               	movlw	low __pidataCOMRAM
   280   000F92  6EF6               	movwf	tblptrl,c
   281   000F94  0E10               	movlw	high __pidataCOMRAM
   282   000F96  6EF7               	movwf	tblptrh,c
   283   000F98  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   284   000F9A  6EF8               	movwf	tblptru,c
   285   000F9C  EE00  F001         	lfsr	0,__pdataCOMRAM
   286   000FA0  EE10 F02B          	lfsr	1,43
   287   000FA4                     copy_data1:
   288   000FA4  0009               	tblrd		*+
   289   000FA6  CFF5 FFEE          	movff	tablat,postinc0
   290   000FAA  50E5               	movf	postdec1,w,c
   291   000FAC  50E1               	movf	fsr1l,w,c
   292   000FAE  E1FA               	bnz	copy_data1
   293                           
   294                           ; Clear objects allocated to BANK0 (80 bytes)
   295   000FB0  EE00  F060         	lfsr	0,__pbssBANK0
   296   000FB4  0E50               	movlw	80
   297   000FB6                     clear_0:
   298   000FB6  6AEE               	clrf	postinc0,c
   299   000FB8  06E8               	decf	wreg,f,c
   300   000FBA  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to COMRAM (25 bytes)
   303   000FBC  EE00  F02C         	lfsr	0,__pbssCOMRAM
   304   000FC0  0E19               	movlw	25
   305   000FC2                     clear_1:
   306   000FC2  6AEE               	clrf	postinc0,c
   307   000FC4  06E8               	decf	wreg,f,c
   308   000FC6  E1FD               	bnz	clear_1
   309   000FC8                     end_of_initialization:
   310                           	callstack 0
   311   000FC8                     __end_of__initialization:
   312                           	callstack 0
   313   000FC8  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   314   000FCA  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   315   000FCC  0100               	movlb	0
   316   000FCE  EF05  F007         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMRAM
   319   00002C                     __pbssCOMRAM:
   320                           	callstack 0
   321   00002C                     _EUSART4RXbuf:
   322                           	callstack 0
   323   00002C                     	ds	20
   324   000040                     _returnFlag:
   325                           	callstack 0
   326   000040                     	ds	1
   327   000041                     _TxBufReadCnt:
   328                           	callstack 0
   329   000041                     	ds	1
   330   000042                     _TxBufWriteCnt:
   331                           	callstack 0
   332   000042                     	ds	1
   333   000043                     _RxBufReadCnt:
   334                           	callstack 0
   335   000043                     	ds	1
   336   000044                     _RxBufWriteCnt:
   337                           	callstack 0
   338   000044                     	ds	1
   339                           
   340                           	psect	dataCOMRAM
   341   000001                     __pdataCOMRAM:
   342                           	callstack 0
   343   000001                     _squareDelay:
   344                           	callstack 0
   345   000001                     	ds	2
   346   000003                     _headbuttDelay:
   347                           	callstack 0
   348   000003                     	ds	2
   349   000005                     _turn180Delay:
   350                           	callstack 0
   351   000005                     	ds	2
   352   000007                     _turnRight135Delay:
   353                           	callstack 0
   354   000007                     	ds	2
   355   000009                     _turnLeft135Delay:
   356                           	callstack 0
   357   000009                     	ds	2
   358   00000B                     _turnRight90Delay:
   359                           	callstack 0
   360   00000B                     	ds	2
   361   00000D                     _turnLeft90Delay:
   362                           	callstack 0
   363   00000D                     	ds	2
   364   00000F                     _manoeuvre_count:
   365                           	callstack 0
   366   00000F                     	ds	1
   367   000010                     _manoeuvre_pointer:
   368                           	callstack 0
   369   000010                     	ds	1
   370   000011                     _timer_low_pointer:
   371                           	callstack 0
   372   000011                     	ds	1
   373   000012                     _timer_high_pointer:
   374                           	callstack 0
   375   000012                     	ds	1
   376   000013                     _returning:
   377                           	callstack 0
   378   000013                     	ds	1
   379   000014                     _turningGear:
   380                           	callstack 0
   381   000014                     	ds	1
   382   000015                     _topGearRight:
   383                           	callstack 0
   384   000015                     	ds	1
   385   000016                     _topGearLeft:
   386                           	callstack 0
   387   000016                     	ds	1
   388   000017                     _rampDelay:
   389                           	callstack 0
   390   000017                     	ds	1
   391   000018                     _trail_timer_high:
   392                           	callstack 0
   393   000018                     	ds	20
   394                           
   395                           	psect	bssBANK0
   396   000060                     __pbssBANK0:
   397                           	callstack 0
   398   000060                     _EUSART4TXbuf:
   399                           	callstack 0
   400   000060                     	ds	60
   401   00009C                     _trail_timer_low:
   402                           	callstack 0
   403   00009C                     	ds	20
   404                           
   405                           	psect	dataBANK0
   406   0000B0                     __pdataBANK0:
   407                           	callstack 0
   408   0000B0                     _trail_manoeuvre:
   409                           	callstack 0
   410   0000B0                     	ds	20
   411                           
   412                           	psect	cstackCOMRAM
   413   000045                     __pcstackCOMRAM:
   414                           	callstack 0
   415   000045                     ??_I2C_2_Master_Idle:
   416   000045                     initDCmotorsPWM@PWMperiod:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x0
   420   000045                     	ds	1
   421   000046                     I2C_2_Master_Write@data_byte:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x1
   425   000046                     	ds	1
   426   000047                     color_writetoaddr@value:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x2
   430   000047                     	ds	1
   431   000048                     color_writetoaddr@address:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x3
   435   000048                     	ds	1
   436   000049                     ??_color_click_init:
   437                           
   438                           ; 1 bytes @ 0x4
   439   000049                     	ds	1
   440   00004A                     ??_main:
   441                           
   442                           ; 1 bytes @ 0x5
   443   00004A                     	ds	2
   444   00004C                     main@motorL:
   445                           	callstack 0
   446                           
   447                           ; 9 bytes @ 0x7
   448   00004C                     	ds	9
   449   000055                     main@motorR:
   450                           	callstack 0
   451                           
   452                           ; 9 bytes @ 0x10
   453   000055                     	ds	9
   454                           
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 26 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  motorR          9   16[COMRAM] struct DC_motor
   465 ;;  motorL          9    7[COMRAM] struct DC_motor
   466 ;;  PWMcycle        2    0        unsigned int 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   477 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   479 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   480 ;;Total ram usage:       20 bytes
   481 ;; Hardware stack levels required when called: 5
   482 ;; This function calls:
   483 ;;		_Timer0_init
   484 ;;		_buggy_lights_init
   485 ;;		_color_click_init
   486 ;;		_initDCmotorsPWM
   487 ;;		_initUSART4
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text0
   494   000E0A                     __ptext0:
   495                           	callstack 0
   496   000E0A                     _main:
   497                           	callstack 26
   498   000E0A                     
   499                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   500   000E0A  0E52               	movlw	82
   501   000E0C  6E4B               	movwf	(??_main+1)^0,c
   502   000E0E  0E2B               	movlw	43
   503   000E10  6E4A               	movwf	??_main^0,c
   504   000E12  0E00               	movlw	0
   505   000E14                     u707:
   506   000E14  2EE8               	decfsz	wreg,f,c
   507   000E16  D7FE               	bra	u707
   508   000E18  2E4A               	decfsz	??_main^0,f,c
   509   000E1A  D7FC               	bra	u707
   510   000E1C  2E4B               	decfsz	(??_main+1)^0,f,c
   511   000E1E  D7FA               	bra	u707
   512   000E20  D000               	nop2	
   513   000E22                     
   514                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   515   000E22  0E00               	movlw	0
   516   000E24  6E4C               	movwf	main@motorL^0,c
   517   000E26                     
   518                           ;main.c: 33:     motorL.direction = 1;
   519   000E26  0E01               	movlw	1
   520   000E28  6E4D               	movwf	(main@motorL+1)^0,c
   521   000E2A                     
   522                           ;main.c: 34:     motorL.brakemode = 1;
   523   000E2A  0E01               	movlw	1
   524   000E2C  6E4E               	movwf	(main@motorL+2)^0,c
   525   000E2E                     
   526                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   527   000E2E  0E00               	movlw	0
   528   000E30  6E50               	movwf	(main@motorL+4)^0,c
   529   000E32  0E63               	movlw	99
   530   000E34  6E4F               	movwf	(main@motorL+3)^0,c
   531   000E36                     
   532                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   533   000E36  0EAA               	movlw	170
   534   000E38  6E51               	movwf	(main@motorL+5)^0,c
   535   000E3A  0E0F               	movlw	15
   536   000E3C  6E52               	movwf	(main@motorL+6)^0,c
   537   000E3E                     
   538                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   539   000E3E  0EA6               	movlw	166
   540   000E40  6E53               	movwf	(main@motorL+7)^0,c
   541   000E42  0E0F               	movlw	15
   542   000E44  6E54               	movwf	(main@motorL+8)^0,c
   543   000E46                     
   544                           ;main.c: 39:     motorR.power = 0;
   545   000E46  0E00               	movlw	0
   546   000E48  6E55               	movwf	main@motorR^0,c
   547   000E4A                     
   548                           ;main.c: 40:     motorR.direction = 1;
   549   000E4A  0E01               	movlw	1
   550   000E4C  6E56               	movwf	(main@motorR+1)^0,c
   551   000E4E                     
   552                           ;main.c: 41:     motorR.brakemode = 1;
   553   000E4E  0E01               	movlw	1
   554   000E50  6E57               	movwf	(main@motorR+2)^0,c
   555   000E52                     
   556                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   557   000E52  0E00               	movlw	0
   558   000E54  6E59               	movwf	(main@motorR+4)^0,c
   559   000E56  0E63               	movlw	99
   560   000E58  6E58               	movwf	(main@motorR+3)^0,c
   561   000E5A                     
   562                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   563   000E5A  0E25               	movlw	37
   564   000E5C  6E5A               	movwf	(main@motorR+5)^0,c
   565   000E5E  0E0F               	movlw	15
   566   000E60  6E5B               	movwf	(main@motorR+6)^0,c
   567   000E62                     
   568                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   569   000E62  0E21               	movlw	33
   570   000E64  6E5C               	movwf	(main@motorR+7)^0,c
   571   000E66  0E0F               	movlw	15
   572   000E68  6E5D               	movwf	(main@motorR+8)^0,c
   573   000E6A                     
   574                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   575   000E6A  0E00               	movlw	0
   576   000E6C  6E46               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   577   000E6E  0E63               	movlw	99
   578   000E70  6E45               	movwf	initDCmotorsPWM@PWMperiod^0,c
   579   000E72  EC70  F007         	call	_initDCmotorsPWM	;wreg free
   580   000E76                     
   581                           ;main.c: 47:     buggy_lights_init();
   582   000E76  ECE9  F007         	call	_buggy_lights_init	;wreg free
   583   000E7A                     
   584                           ;main.c: 48:     color_click_init();
   585   000E7A  EC10  F008         	call	_color_click_init	;wreg free
   586   000E7E                     
   587                           ;main.c: 49:     initUSART4();
   588   000E7E  EC8D  F008         	call	_initUSART4	;wreg free
   589   000E82                     
   590                           ;main.c: 50:     Timer0_init();
   591   000E82  EC69  F008         	call	_Timer0_init	;wreg free
   592   000E86                     
   593                           ;main.c: 54:         TRISFbits.TRISF2 = 1;
   594   000E86  8486               	bsf	134,2,c	;volatile
   595   000E88                     
   596                           ;main.c: 55:         TRISFbits.TRISF3 = 1;
   597   000E88  8686               	bsf	134,3,c	;volatile
   598   000E8A                     
   599                           ;main.c: 57:         ANSELFbits.ANSELF2 = 0;
   600   000E8A  010E               	movlb	14	; () banked
   601   000E8C  95B4               	bcf	180,2,b	;volatile
   602   000E8E                     
   603                           ; BSR set to: 14
   604                           ;main.c: 58:         ANSELFbits.ANSELF3 = 0;
   605   000E8E  97B4               	bcf	180,3,b	;volatile
   606   000E90                     l2079:
   607                           
   608                           ;main.c: 76:         if (!PORTFbits.RF2) {
   609   000E90  B48E               	btfsc	142,2,c	;volatile
   610   000E92  EF4D  F007         	goto	u601
   611   000E96  EF4F  F007         	goto	u600
   612   000E9A                     u601:
   613   000E9A  EF60  F007         	goto	l2083
   614   000E9E                     u600:
   615   000E9E                     
   616                           ;main.c: 77:             LATDbits.LATD7 = !LATDbits.LATD7;
   617   000E9E  AE7C               	btfss	124,7,c	;volatile
   618   000EA0  EF54  F007         	goto	u611
   619   000EA4  EF58  F007         	goto	u610
   620   000EA8                     u611:
   621   000EA8  6A4A               	clrf	??_main^0,c
   622   000EAA  2A4A               	incf	??_main^0,f,c
   623   000EAC  EF59  F007         	goto	u628
   624   000EB0                     u610:
   625   000EB0  6A4A               	clrf	??_main^0,c
   626   000EB2                     u628:
   627   000EB2  324A               	rrcf	??_main^0,f,c
   628   000EB4  324A               	rrcf	??_main^0,f,c
   629   000EB6  507C               	movf	124,w,c	;volatile
   630   000EB8  184A               	xorwf	??_main^0,w,c
   631   000EBA  0B7F               	andlw	-129
   632   000EBC  184A               	xorwf	??_main^0,w,c
   633   000EBE  6E7C               	movwf	124,c	;volatile
   634   000EC0                     l2083:
   635                           
   636                           ;main.c: 82:         _delay((unsigned long)((100)*(64000000/4000.0)));
   637   000EC0  0E09               	movlw	9
   638   000EC2  6E4B               	movwf	(??_main+1)^0,c
   639   000EC4  0E1E               	movlw	30
   640   000EC6  6E4A               	movwf	??_main^0,c
   641   000EC8  0EE4               	movlw	228
   642   000ECA                     u717:
   643   000ECA  2EE8               	decfsz	wreg,f,c
   644   000ECC  D7FE               	bra	u717
   645   000ECE  2E4A               	decfsz	??_main^0,f,c
   646   000ED0  D7FC               	bra	u717
   647   000ED2  2E4B               	decfsz	(??_main+1)^0,f,c
   648   000ED4  D7FA               	bra	u717
   649   000ED6  D000               	nop2	
   650   000ED8  EF48  F007         	goto	l2079
   651   000EDC  EF1A  F000         	goto	start
   652   000EE0                     __end_of_main:
   653                           	callstack 0
   654                           
   655 ;; *************** function _initUSART4 *****************
   656 ;; Defined at:
   657 ;;		line 5 in file "serial.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text1
   686   00111A                     __ptext1:
   687                           	callstack 0
   688   00111A                     _initUSART4:
   689                           	callstack 29
   690   00111A                     
   691                           ;serial.c: 9:     RC0PPS = 0x12;
   692   00111A  0E12               	movlw	18
   693   00111C  010E               	movlb	14	; () banked
   694   00111E  6F62               	movwf	98,b	;volatile
   695                           
   696                           ;serial.c: 10:     RX4PPS = 0x11;
   697   001120  0E11               	movlw	17
   698   001122  6F15               	movwf	21,b	;volatile
   699   001124                     
   700                           ; BSR set to: 14
   701                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
   702   001124  97E9               	bcf	233,3,b	;volatile
   703   001126                     
   704                           ; BSR set to: 14
   705                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
   706   001126  95E8               	bcf	232,2,b	;volatile
   707                           
   708                           ;serial.c: 14:     SP4BRGL = 51;
   709   001128  0E33               	movlw	51
   710   00112A  6FE5               	movwf	229,b	;volatile
   711                           
   712                           ;serial.c: 15:     SP4BRGH = 0;
   713   00112C  0E00               	movlw	0
   714   00112E  6FE6               	movwf	230,b	;volatile
   715   001130                     
   716                           ; BSR set to: 14
   717                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   718   001130  89E7               	bsf	231,4,b	;volatile
   719   001132                     
   720                           ; BSR set to: 14
   721                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   722   001132  8BE8               	bsf	232,5,b	;volatile
   723   001134                     
   724                           ; BSR set to: 14
   725                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   726   001134  8FE7               	bsf	231,7,b	;volatile
   727   001136                     
   728                           ; BSR set to: 14
   729   001136  0012               	return		;funcret
   730   001138                     __end_of_initUSART4:
   731                           	callstack 0
   732                           
   733 ;; *************** function _initDCmotorsPWM *****************
   734 ;; Defined at:
   735 ;;		line 5 in file "dc_motor.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;Total ram usage:        2 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text2
   764   000EE0                     __ptext2:
   765                           	callstack 0
   766   000EE0                     _initDCmotorsPWM:
   767                           	callstack 29
   768   000EE0                     
   769                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
   770   000EE0  9485               	bcf	133,2,c	;volatile
   771                           
   772                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
   773   000EE2  9885               	bcf	133,4,c	;volatile
   774                           
   775                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
   776   000EE4  9E83               	bcf	131,7,c	;volatile
   777                           
   778                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
   779   000EE6  9C87               	bcf	135,6,c	;volatile
   780                           
   781                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
   782   000EE8  947D               	bcf	125,2,c	;volatile
   783                           
   784                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
   785   000EEA  987D               	bcf	125,4,c	;volatile
   786                           
   787                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
   788   000EEC  9E7B               	bcf	123,7,c	;volatile
   789                           
   790                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
   791   000EEE  9C7F               	bcf	127,6,c	;volatile
   792   000EF0                     
   793                           ;dc_motor.c: 18:     RE2PPS=0x05;
   794   000EF0  0E05               	movlw	5
   795   000EF2  010E               	movlb	14	; () banked
   796   000EF4  6F74               	movwf	116,b	;volatile
   797                           
   798                           ;dc_motor.c: 19:     RE4PPS=0x06;
   799   000EF6  0E06               	movlw	6
   800   000EF8  6F76               	movwf	118,b	;volatile
   801                           
   802                           ;dc_motor.c: 20:     RC7PPS=0x07;
   803   000EFA  0E07               	movlw	7
   804   000EFC  6F69               	movwf	105,b	;volatile
   805                           
   806                           ;dc_motor.c: 21:     RG6PPS=0x08;
   807   000EFE  0E08               	movlw	8
   808   000F00  6F88               	movwf	136,b	;volatile
   809                           
   810                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
   811   000F02  50BD               	movf	189,w,c	;volatile
   812   000F04  0B8F               	andlw	-113
   813   000F06  0940               	iorlw	64
   814   000F08  6EBD               	movwf	189,c	;volatile
   815                           
   816                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
   817   000F0A  0EE0               	movlw	-32
   818   000F0C  16BE               	andwf	190,f,c	;volatile
   819                           
   820                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
   821   000F0E  50BF               	movf	191,w,c	;volatile
   822   000F10  0BF0               	andlw	-16
   823   000F12  0901               	iorlw	1
   824   000F14  6EBF               	movwf	191,c	;volatile
   825   000F16                     
   826                           ; BSR set to: 14
   827                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
   828   000F16  C045  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
   829   000F1A                     
   830                           ; BSR set to: 14
   831                           ;dc_motor.c: 31:     T2CONbits.ON=1;
   832   000F1A  8EBD               	bsf	189,7,c	;volatile
   833                           
   834                           ;dc_motor.c: 35:     CCPR1H=0;
   835   000F1C  0E00               	movlw	0
   836   000F1E  6EAA               	movwf	170,c	;volatile
   837                           
   838                           ;dc_motor.c: 36:     CCPR2H=0;
   839   000F20  0E00               	movlw	0
   840   000F22  6EA6               	movwf	166,c	;volatile
   841                           
   842                           ;dc_motor.c: 37:     CCPR3H=0;
   843   000F24  0E00               	movlw	0
   844   000F26  010F               	movlb	15	; () banked
   845   000F28  6F25               	movwf	37,b	;volatile
   846                           
   847                           ;dc_motor.c: 38:     CCPR4H=0;
   848   000F2A  0E00               	movlw	0
   849   000F2C  6F21               	movwf	33,b	;volatile
   850                           
   851                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
   852   000F2E  0EFC               	movlw	-4
   853   000F30  16AD               	andwf	173,f,c	;volatile
   854                           
   855                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
   856   000F32  0EF3               	movlw	-13
   857   000F34  16AD               	andwf	173,f,c	;volatile
   858                           
   859                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
   860   000F36  0ECF               	movlw	-49
   861   000F38  16AD               	andwf	173,f,c	;volatile
   862                           
   863                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
   864   000F3A  0E3F               	movlw	-193
   865   000F3C  16AD               	andwf	173,f,c	;volatile
   866   000F3E                     
   867                           ; BSR set to: 15
   868                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
   869   000F3E  88AB               	bsf	171,4,c	;volatile
   870                           
   871                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
   872   000F40  50AB               	movf	171,w,c	;volatile
   873   000F42  0BF0               	andlw	-16
   874   000F44  090C               	iorlw	12
   875   000F46  6EAB               	movwf	171,c	;volatile
   876   000F48                     
   877                           ; BSR set to: 15
   878                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
   879   000F48  8EAB               	bsf	171,7,c	;volatile
   880   000F4A                     
   881                           ; BSR set to: 15
   882                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
   883   000F4A  88A7               	bsf	167,4,c	;volatile
   884                           
   885                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
   886   000F4C  50A7               	movf	167,w,c	;volatile
   887   000F4E  0BF0               	andlw	-16
   888   000F50  090C               	iorlw	12
   889   000F52  6EA7               	movwf	167,c	;volatile
   890   000F54                     
   891                           ; BSR set to: 15
   892                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
   893   000F54  8EA7               	bsf	167,7,c	;volatile
   894   000F56                     
   895                           ; BSR set to: 15
   896                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
   897   000F56  8926               	bsf	38,4,b	;volatile
   898                           
   899                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
   900   000F58  5126               	movf	38,w,b	;volatile
   901   000F5A  0BF0               	andlw	-16
   902   000F5C  090C               	iorlw	12
   903   000F5E  6F26               	movwf	38,b	;volatile
   904   000F60                     
   905                           ; BSR set to: 15
   906                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
   907   000F60  8F26               	bsf	38,7,b	;volatile
   908   000F62                     
   909                           ; BSR set to: 15
   910                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
   911   000F62  8922               	bsf	34,4,b	;volatile
   912                           
   913                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
   914   000F64  5122               	movf	34,w,b	;volatile
   915   000F66  0BF0               	andlw	-16
   916   000F68  090C               	iorlw	12
   917   000F6A  6F22               	movwf	34,b	;volatile
   918   000F6C                     
   919                           ; BSR set to: 15
   920                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
   921   000F6C  8F22               	bsf	34,7,b	;volatile
   922   000F6E                     
   923                           ; BSR set to: 15
   924   000F6E  0012               	return		;funcret
   925   000F70                     __end_of_initDCmotorsPWM:
   926                           	callstack 0
   927                           
   928 ;; *************** function _color_click_init *****************
   929 ;; Defined at:
   930 ;;		line 4 in file "color.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;Total ram usage:        1 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 4
   951 ;; This function calls:
   952 ;;		_I2C_2_Master_Init
   953 ;;		_color_writetoaddr
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text3
   960   001020                     __ptext3:
   961                           	callstack 0
   962   001020                     _color_click_init:
   963                           	callstack 26
   964   001020                     
   965                           ;color.c: 7:     I2C_2_Master_Init();
   966   001020  EC40  F008         	call	_I2C_2_Master_Init	;wreg free
   967   001024                     
   968                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
   969   001024  0E01               	movlw	1
   970   001026  6E47               	movwf	color_writetoaddr@value^0,c
   971   001028  0E00               	movlw	0
   972   00102A  EC7D  F008         	call	_color_writetoaddr
   973   00102E                     
   974                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
   975   00102E  0E3F               	movlw	63
   976   001030  6E49               	movwf	??_color_click_init^0,c
   977   001032  0E55               	movlw	85
   978   001034                     u727:
   979   001034  2EE8               	decfsz	wreg,f,c
   980   001036  D7FE               	bra	u727
   981   001038  2E49               	decfsz	??_color_click_init^0,f,c
   982   00103A  D7FC               	bra	u727
   983   00103C  0000               	nop	
   984   00103E                     
   985                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
   986   00103E  0E03               	movlw	3
   987   001040  6E47               	movwf	color_writetoaddr@value^0,c
   988   001042  0E00               	movlw	0
   989   001044  EC7D  F008         	call	_color_writetoaddr
   990   001048                     
   991                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
   992   001048  0ED5               	movlw	213
   993   00104A  6E47               	movwf	color_writetoaddr@value^0,c
   994   00104C  0E01               	movlw	1
   995   00104E  EC7D  F008         	call	_color_writetoaddr
   996   001052  0012               	return		;funcret
   997   001054                     __end_of_color_click_init:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _color_writetoaddr *****************
  1001 ;; Defined at:
  1002 ;;		line 20 in file "color.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  address         1    wreg     unsigned char 
  1005 ;;  value           1    2[COMRAM] unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  address         1    3[COMRAM] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1017 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; Hardware stack levels required when called: 3
  1024 ;; This function calls:
  1025 ;;		_I2C_2_Master_Start
  1026 ;;		_I2C_2_Master_Stop
  1027 ;;		_I2C_2_Master_Write
  1028 ;; This function is called by:
  1029 ;;		_color_click_init
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text4
  1034   0010FA                     __ptext4:
  1035                           	callstack 0
  1036   0010FA                     _color_writetoaddr:
  1037                           	callstack 26
  1038                           
  1039                           ;incstack = 0
  1040                           ;color_writetoaddr@address stored from wreg
  1041   0010FA  6E48               	movwf	color_writetoaddr@address^0,c
  1042   0010FC                     
  1043                           ;color.c: 21:     I2C_2_Master_Start();
  1044   0010FC  ECB1  F008         	call	_I2C_2_Master_Start	;wreg free
  1045                           
  1046                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  1047   001100  0E52               	movlw	82
  1048   001102  ECA6  F008         	call	_I2C_2_Master_Write
  1049                           
  1050                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  1051   001106  5048               	movf	color_writetoaddr@address^0,w,c
  1052   001108  0980               	iorlw	128
  1053   00110A  ECA6  F008         	call	_I2C_2_Master_Write
  1054                           
  1055                           ;color.c: 24:     I2C_2_Master_Write(value);
  1056   00110E  5047               	movf	color_writetoaddr@value^0,w,c
  1057   001110  ECA6  F008         	call	_I2C_2_Master_Write
  1058                           
  1059                           ;color.c: 25:     I2C_2_Master_Stop();
  1060   001114  ECAC  F008         	call	_I2C_2_Master_Stop	;wreg free
  1061   001118  0012               	return		;funcret
  1062   00111A                     __end_of_color_writetoaddr:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _I2C_2_Master_Write *****************
  1066 ;; Defined at:
  1067 ;;		line 45 in file "i2c.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  data_byte       1    wreg     unsigned char 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  data_byte       1    1[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;Total ram usage:        1 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 2
  1088 ;; This function calls:
  1089 ;;		_I2C_2_Master_Idle
  1090 ;; This function is called by:
  1091 ;;		_color_writetoaddr
  1092 ;;		_color_read_Red
  1093 ;;		_color_read_Blue
  1094 ;;		_color_read_Green
  1095 ;;		_color_read_Clear
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text5
  1100   00114C                     __ptext5:
  1101                           	callstack 0
  1102   00114C                     _I2C_2_Master_Write:
  1103                           	callstack 26
  1104                           
  1105                           ;incstack = 0
  1106                           ;I2C_2_Master_Write@data_byte stored from wreg
  1107   00114C  6E46               	movwf	I2C_2_Master_Write@data_byte^0,c
  1108   00114E                     
  1109                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1110   00114E  EC55  F008         	call	_I2C_2_Master_Idle	;wreg free
  1111   001152                     
  1112                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1113   001152  C046  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1114   001156  0012               	return		;funcret
  1115   001158                     __end_of_I2C_2_Master_Write:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _I2C_2_Master_Stop *****************
  1119 ;; Defined at:
  1120 ;;		line 39 in file "i2c.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 2
  1141 ;; This function calls:
  1142 ;;		_I2C_2_Master_Idle
  1143 ;; This function is called by:
  1144 ;;		_color_writetoaddr
  1145 ;;		_color_read_Red
  1146 ;;		_color_read_Blue
  1147 ;;		_color_read_Green
  1148 ;;		_color_read_Clear
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text6
  1153   001158                     __ptext6:
  1154                           	callstack 0
  1155   001158                     _I2C_2_Master_Stop:
  1156                           	callstack 26
  1157   001158                     
  1158                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1159   001158  EC55  F008         	call	_I2C_2_Master_Idle	;wreg free
  1160   00115C                     
  1161                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1162   00115C  010E               	movlb	14	; () banked
  1163   00115E  85DA               	bsf	218,2,b	;volatile
  1164   001160                     
  1165                           ; BSR set to: 14
  1166   001160  0012               	return		;funcret
  1167   001162                     __end_of_I2C_2_Master_Stop:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _I2C_2_Master_Start *****************
  1171 ;; Defined at:
  1172 ;;		line 27 in file "i2c.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		_I2C_2_Master_Idle
  1195 ;; This function is called by:
  1196 ;;		_color_writetoaddr
  1197 ;;		_color_read_Red
  1198 ;;		_color_read_Blue
  1199 ;;		_color_read_Green
  1200 ;;		_color_read_Clear
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text7
  1205   001162                     __ptext7:
  1206                           	callstack 0
  1207   001162                     _I2C_2_Master_Start:
  1208                           	callstack 26
  1209   001162                     
  1210                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1211   001162  EC55  F008         	call	_I2C_2_Master_Idle	;wreg free
  1212   001166                     
  1213                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1214   001166  010E               	movlb	14	; () banked
  1215   001168  81DA               	bsf	218,0,b	;volatile
  1216   00116A                     
  1217                           ; BSR set to: 14
  1218   00116A  0012               	return		;funcret
  1219   00116C                     __end_of_I2C_2_Master_Start:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _I2C_2_Master_Idle *****************
  1223 ;; Defined at:
  1224 ;;		line 22 in file "i2c.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;Total ram usage:        1 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_I2C_2_Master_Start
  1249 ;;		_I2C_2_Master_Stop
  1250 ;;		_I2C_2_Master_Write
  1251 ;;		_I2C_2_Master_RepStart
  1252 ;;		_I2C_2_Master_Read
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text8
  1257   0010AA                     __ptext8:
  1258                           	callstack 0
  1259   0010AA                     _I2C_2_Master_Idle:
  1260                           	callstack 26
  1261   0010AA                     l242:
  1262   0010AA  010E               	movlb	14	; () banked
  1263   0010AC  B5D8               	btfsc	216,2,b	;volatile
  1264   0010AE  EF5B  F008         	goto	u191
  1265   0010B2  EF5D  F008         	goto	u190
  1266   0010B6                     u191:
  1267   0010B6  EF55  F008         	goto	l242
  1268   0010BA                     u190:
  1269   0010BA                     
  1270                           ; BSR set to: 14
  1271   0010BA  CEDA F045          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1272   0010BE  0E1F               	movlw	31
  1273   0010C0  1645               	andwf	??_I2C_2_Master_Idle^0,f,c
  1274   0010C2  A4D8               	btfss	status,2,c
  1275   0010C4  EF66  F008         	goto	u201
  1276   0010C8  EF68  F008         	goto	u200
  1277   0010CC                     u201:
  1278   0010CC  EF55  F008         	goto	l242
  1279   0010D0                     u200:
  1280   0010D0                     
  1281                           ; BSR set to: 14
  1282   0010D0  0012               	return		;funcret
  1283   0010D2                     __end_of_I2C_2_Master_Idle:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _I2C_2_Master_Init *****************
  1287 ;; Defined at:
  1288 ;;		line 4 in file "i2c.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_color_click_init
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text9
  1317   001080                     __ptext9:
  1318                           	callstack 0
  1319   001080                     _I2C_2_Master_Init:
  1320                           	callstack 28
  1321   001080                     
  1322                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1323   001080  010E               	movlb	14	; () banked
  1324   001082  51D9               	movf	217,w,b	;volatile
  1325   001084  0BF0               	andlw	-16
  1326   001086  0908               	iorlw	8
  1327   001088  6FD9               	movwf	217,b	;volatile
  1328   00108A                     
  1329                           ; BSR set to: 14
  1330                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1331   00108A  8BD9               	bsf	217,5,b	;volatile
  1332                           
  1333                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1334   00108C  0E9F               	movlw	159
  1335   00108E  6FD6               	movwf	214,b	;volatile
  1336   001090                     
  1337                           ; BSR set to: 14
  1338                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1339   001090  8A84               	bsf	132,5,c	;volatile
  1340   001092                     
  1341                           ; BSR set to: 14
  1342                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1343   001092  8C84               	bsf	132,6,c	;volatile
  1344   001094                     
  1345                           ; BSR set to: 14
  1346                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1347   001094  9BA7               	bcf	167,5,b	;volatile
  1348   001096                     
  1349                           ; BSR set to: 14
  1350                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1351   001096  9DA7               	bcf	167,6,b	;volatile
  1352                           
  1353                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1354   001098  0E1D               	movlw	29
  1355   00109A  6F1D               	movwf	29,b	;volatile
  1356                           
  1357                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1358   00109C  0E1E               	movlw	30
  1359   00109E  6F1C               	movwf	28,b	;volatile
  1360                           
  1361                           ;i2c.c: 18:   RD5PPS=0x1C;
  1362   0010A0  0E1C               	movlw	28
  1363   0010A2  6F6F               	movwf	111,b	;volatile
  1364                           
  1365                           ;i2c.c: 19:   RD6PPS=0x1B;
  1366   0010A4  0E1B               	movlw	27
  1367   0010A6  6F70               	movwf	112,b	;volatile
  1368   0010A8                     
  1369                           ; BSR set to: 14
  1370   0010A8  0012               	return		;funcret
  1371   0010AA                     __end_of_I2C_2_Master_Init:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _buggy_lights_init *****************
  1375 ;; Defined at:
  1376 ;;		line 4 in file "buggy_lights.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		None
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text10
  1405   000FD2                     __ptext10:
  1406                           	callstack 0
  1407   000FD2                     _buggy_lights_init:
  1408                           	callstack 29
  1409   000FD2                     
  1410                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  1411   000FD2  9884               	bcf	132,4,c	;volatile
  1412                           
  1413                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  1414   000FD4  9288               	bcf	136,1,c	;volatile
  1415                           
  1416                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  1417   000FD6  9684               	bcf	132,3,c	;volatile
  1418                           
  1419                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  1420   000FD8  9086               	bcf	134,0,c	;volatile
  1421                           
  1422                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  1423   000FDA  9088               	bcf	136,0,c	;volatile
  1424                           
  1425                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  1426   000FDC  887C               	bsf	124,4,c	;volatile
  1427                           
  1428                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  1429   000FDE  8280               	bsf	128,1,c	;volatile
  1430                           
  1431                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  1432   000FE0  867C               	bsf	124,3,c	;volatile
  1433                           
  1434                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  1435   000FE2  807E               	bsf	126,0,c	;volatile
  1436                           
  1437                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  1438   000FE4  8080               	bsf	128,0,c	;volatile
  1439                           
  1440                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  1441   000FE6  9E84               	bcf	132,7,c	;volatile
  1442                           
  1443                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  1444   000FE8  9688               	bcf	136,3,c	;volatile
  1445                           
  1446                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  1447   000FEA  8E7C               	bsf	124,7,c	;volatile
  1448                           
  1449                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  1450   000FEC  8680               	bsf	128,3,c	;volatile
  1451                           
  1452                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  1453   000FEE  9081               	bcf	129,0,c	;volatile
  1454                           
  1455                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  1456   000FF0  9483               	bcf	131,2,c	;volatile
  1457                           
  1458                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  1459   000FF2  9084               	bcf	132,0,c	;volatile
  1460                           
  1461                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  1462   000FF4  8079               	bsf	121,0,c	;volatile
  1463                           
  1464                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  1465   000FF6  847B               	bsf	123,2,c	;volatile
  1466                           
  1467                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  1468   000FF8  807C               	bsf	124,0,c	;volatile
  1469                           
  1470                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  1471   000FFA  9281               	bcf	129,1,c	;volatile
  1472                           
  1473                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  1474   000FFC  9C83               	bcf	131,6,c	;volatile
  1475                           
  1476                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  1477   000FFE  9488               	bcf	136,2,c	;volatile
  1478                           
  1479                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  1480   001000  8279               	bsf	121,1,c	;volatile
  1481                           
  1482                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  1483   001002  8C7B               	bsf	123,6,c	;volatile
  1484                           
  1485                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  1486   001004  8480               	bsf	128,2,c	;volatile
  1487                           
  1488                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  1489   001006  9287               	bcf	135,1,c	;volatile
  1490                           
  1491                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  1492   001008  9881               	bcf	129,4,c	;volatile
  1493                           
  1494                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  1495   00100A  9E86               	bcf	134,7,c	;volatile
  1496                           
  1497                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  1498   00100C  827F               	bsf	127,1,c	;volatile
  1499                           
  1500                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  1501   00100E  8879               	bsf	121,4,c	;volatile
  1502                           
  1503                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  1504   001010  8E7E               	bsf	126,7,c	;volatile
  1505                           
  1506                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  1507   001012  9087               	bcf	135,0,c	;volatile
  1508                           
  1509                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  1510   001014  9E85               	bcf	133,7,c	;volatile
  1511                           
  1512                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  1513   001016  9681               	bcf	129,3,c	;volatile
  1514                           
  1515                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  1516   001018  807F               	bsf	127,0,c	;volatile
  1517                           
  1518                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  1519   00101A  8E7D               	bsf	125,7,c	;volatile
  1520                           
  1521                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  1522   00101C  8679               	bsf	121,3,c	;volatile
  1523   00101E  0012               	return		;funcret
  1524   001020                     __end_of_buggy_lights_init:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _Timer0_init *****************
  1528 ;; Defined at:
  1529 ;;		line 7 in file "timers.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text11
  1558   0010D2                     __ptext11:
  1559                           	callstack 0
  1560   0010D2                     _Timer0_init:
  1561                           	callstack 29
  1562   0010D2                     
  1563                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1564   0010D2  50D6               	movf	214,w,c	;volatile
  1565   0010D4  0B1F               	andlw	-225
  1566   0010D6  0940               	iorlw	64
  1567   0010D8  6ED6               	movwf	214,c	;volatile
  1568   0010DA                     
  1569                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1570   0010DA  88D6               	bsf	214,4,c	;volatile
  1571   0010DC                     
  1572                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  1573   0010DC  88D5               	bsf	213,4,c	;volatile
  1574                           
  1575                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  1576   0010DE  50D6               	movf	214,w,c	;volatile
  1577   0010E0  0BF0               	andlw	-16
  1578   0010E2  090E               	iorlw	14
  1579   0010E4  6ED6               	movwf	214,c	;volatile
  1580                           
  1581                           ;timers.c: 20:     TMR0H = 0;
  1582   0010E6  0E00               	movlw	0
  1583   0010E8  6ED4               	movwf	212,c	;volatile
  1584                           
  1585                           ;timers.c: 21:     TMR0L = 0;
  1586   0010EA  0E00               	movlw	0
  1587   0010EC  6ED3               	movwf	211,c	;volatile
  1588   0010EE                     
  1589                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  1590   0010EE  8ED5               	bsf	213,7,c	;volatile
  1591   0010F0                     
  1592                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  1593   0010F0  010E               	movlb	14	; () banked
  1594   0010F2  8B29               	bsf	41,5,b	;volatile
  1595   0010F4                     
  1596                           ; BSR set to: 14
  1597                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  1598   0010F4  8CF2               	bsf	242,6,c	;volatile
  1599   0010F6                     
  1600                           ; BSR set to: 14
  1601                           ;timers.c: 26:     INTCONbits.GIE = 1;
  1602   0010F6  8EF2               	bsf	242,7,c	;volatile
  1603   0010F8                     
  1604                           ; BSR set to: 14
  1605   0010F8  0012               	return		;funcret
  1606   0010FA                     __end_of_Timer0_init:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _ISR *****************
  1610 ;; Defined at:
  1611 ;;		line 75 in file "timers.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		Interrupt level 2
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	intcode
  1639   000008                     __pintcode:
  1640                           	callstack 0
  1641   000008                     _ISR:
  1642                           	callstack 26
  1643                           
  1644                           ; BSR set to: 14
  1645                           ;incstack = 0
  1646   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1647   00000A                     
  1648                           ;timers.c: 78:     if (PIR0bits.TMR0IF) {
  1649   00000A  010E               	movlb	14	; () banked
  1650   00000C  AB33               	btfss	51,5,b	;volatile
  1651   00000E  EF0B  F000         	goto	i2u57_41
  1652   000012  EF0D  F000         	goto	i2u57_40
  1653   000016                     i2u57_41:
  1654   000016  EF18  F000         	goto	i2l648
  1655   00001A                     i2u57_40:
  1656   00001A                     
  1657                           ; BSR set to: 14
  1658                           ;timers.c: 79:         if (returning) {
  1659   00001A  5013               	movf	_returning^0,w,c
  1660   00001C  B4D8               	btfsc	status,2,c
  1661   00001E  EF13  F000         	goto	i2u58_41
  1662   000022  EF15  F000         	goto	i2u58_40
  1663   000026                     i2u58_41:
  1664   000026  EF17  F000         	goto	i2l647
  1665   00002A                     i2u58_40:
  1666   00002A                     
  1667                           ; BSR set to: 14
  1668                           ;timers.c: 82:             returnFlag = 1;
  1669   00002A  0E01               	movlw	1
  1670   00002C  6E40               	movwf	_returnFlag^0,c
  1671   00002E                     i2l647:
  1672                           
  1673                           ; BSR set to: 14
  1674                           ;timers.c: 87:         PIR0bits.TMR0IF = 0;
  1675   00002E  9B33               	bcf	51,5,b	;volatile
  1676   000030                     i2l648:
  1677                           
  1678                           ; BSR set to: 14
  1679   000030  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1680   000032  0011               	retfie		f
  1681   000034                     __end_of_ISR:
  1682                           	callstack 0
  1683                           
  1684                           	psect	rparam
  1685   000000                     
  1686                           	psect	temp
  1687   00005E                     btemp:
  1688                           	callstack 0
  1689   00005E                     	ds	1
  1690   000000                     int$flags	set	btemp
  1691   000000                     wtemp8	set	btemp+1
  1692   000000                     ttemp5	set	btemp+1
  1693   000000                     ttemp6	set	btemp+4
  1694   000000                     ttemp7	set	btemp+8
  1695                           
  1696                           	psect	idloc
  1697                           
  1698                           ;Config register IDLOC0 @ 0x200000
  1699                           ;	unspecified, using default values
  1700   200000                     	org	2097152
  1701   200000  FFFF               	dw	65535
  1702                           
  1703                           ;Config register IDLOC1 @ 0x200002
  1704                           ;	unspecified, using default values
  1705   200002                     	org	2097154
  1706   200002  FFFF               	dw	65535
  1707                           
  1708                           ;Config register IDLOC2 @ 0x200004
  1709                           ;	unspecified, using default values
  1710   200004                     	org	2097156
  1711   200004  FFFF               	dw	65535
  1712                           
  1713                           ;Config register IDLOC3 @ 0x200006
  1714                           ;	unspecified, using default values
  1715   200006                     	org	2097158
  1716   200006  FFFF               	dw	65535
  1717                           
  1718                           ;Config register IDLOC4 @ 0x200008
  1719                           ;	unspecified, using default values
  1720   200008                     	org	2097160
  1721   200008  FFFF               	dw	65535
  1722                           
  1723                           ;Config register IDLOC5 @ 0x20000A
  1724                           ;	unspecified, using default values
  1725   20000A                     	org	2097162
  1726   20000A  FFFF               	dw	65535
  1727                           
  1728                           ;Config register IDLOC6 @ 0x20000C
  1729                           ;	unspecified, using default values
  1730   20000C                     	org	2097164
  1731   20000C  FFFF               	dw	65535
  1732                           
  1733                           ;Config register IDLOC7 @ 0x20000E
  1734                           ;	unspecified, using default values
  1735   20000E                     	org	2097166
  1736   20000E  FFFF               	dw	65535
  1737                           
  1738                           	psect	config
  1739                           
  1740                           ;Config register CONFIG1L @ 0x300000
  1741                           ;	External Oscillator mode Selection bits
  1742                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1743                           ;	Power-up default value for COSC bits
  1744                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1745   300000                     	org	3145728
  1746   300000  AA                 	db	170
  1747                           
  1748                           ;Config register CONFIG1H @ 0x300001
  1749                           ;	unspecified, using default values
  1750                           ;	Clock Out Enable bit
  1751                           ;	CLKOUTEN = 0x1, unprogrammed default
  1752                           ;	Clock Switch Enable bit
  1753                           ;	CSWEN = 0x1, unprogrammed default
  1754                           ;	Fail-Safe Clock Monitor Enable bit
  1755                           ;	FCMEN = 0x1, unprogrammed default
  1756   300001                     	org	3145729
  1757   300001  FF                 	db	255
  1758                           
  1759                           ;Config register CONFIG2L @ 0x300002
  1760                           ;	unspecified, using default values
  1761                           ;	Master Clear Enable bit
  1762                           ;	MCLRE = 0x1, unprogrammed default
  1763                           ;	Power-up Timer Enable bit
  1764                           ;	PWRTE = 0x1, unprogrammed default
  1765                           ;	Low-power BOR enable bit
  1766                           ;	LPBOREN = 0x1, unprogrammed default
  1767                           ;	Brown-out Reset Enable bits
  1768                           ;	BOREN = 0x3, unprogrammed default
  1769   300002                     	org	3145730
  1770   300002  FF                 	db	255
  1771                           
  1772                           ;Config register CONFIG2H @ 0x300003
  1773                           ;	unspecified, using default values
  1774                           ;	Brown Out Reset Voltage selection bits
  1775                           ;	BORV = 0x3, unprogrammed default
  1776                           ;	ZCD Disable bit
  1777                           ;	ZCD = 0x1, unprogrammed default
  1778                           ;	PPSLOCK bit One-Way Set Enable bit
  1779                           ;	PPS1WAY = 0x1, unprogrammed default
  1780                           ;	Stack Full/Underflow Reset Enable bit
  1781                           ;	STVREN = 0x1, unprogrammed default
  1782                           ;	Debugger Enable bit
  1783                           ;	DEBUG = 0x1, unprogrammed default
  1784                           ;	Extended Instruction Set Enable bit
  1785                           ;	XINST = 0x1, unprogrammed default
  1786   300003                     	org	3145731
  1787   300003  FF                 	db	255
  1788                           
  1789                           ;Config register CONFIG3L @ 0x300004
  1790                           ;	WDT Period Select bits
  1791                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1792                           ;	WDT operating mode
  1793                           ;	WDTE = OFF, WDT Disabled
  1794   300004                     	org	3145732
  1795   300004  9F                 	db	159
  1796                           
  1797                           ;Config register CONFIG3H @ 0x300005
  1798                           ;	unspecified, using default values
  1799                           ;	WDT Window Select bits
  1800                           ;	WDTCWS = 0x7, unprogrammed default
  1801                           ;	WDT input clock selector
  1802                           ;	WDTCCS = 0x7, unprogrammed default
  1803   300005                     	org	3145733
  1804   300005  FF                 	db	255
  1805                           
  1806                           ;Config register CONFIG4L @ 0x300006
  1807                           ;	unspecified, using default values
  1808                           ;	Write Protection Block 0
  1809                           ;	WRT0 = 0x1, unprogrammed default
  1810                           ;	Write Protection Block 1
  1811                           ;	WRT1 = 0x1, unprogrammed default
  1812                           ;	Write Protection Block 2
  1813                           ;	WRT2 = 0x1, unprogrammed default
  1814                           ;	Write Protection Block 3
  1815                           ;	WRT3 = 0x1, unprogrammed default
  1816                           ;	Write Protection Block 3
  1817                           ;	WRT4 = 0x1, unprogrammed default
  1818                           ;	Write Protection Block 3
  1819                           ;	WRT5 = 0x1, unprogrammed default
  1820                           ;	Write Protection Block 3
  1821                           ;	WRT6 = 0x1, unprogrammed default
  1822                           ;	Write Protection Block 3
  1823                           ;	WRT7 = 0x1, unprogrammed default
  1824   300006                     	org	3145734
  1825   300006  FF                 	db	255
  1826                           
  1827                           ;Config register CONFIG4H @ 0x300007
  1828                           ;	unspecified, using default values
  1829                           ;	Configuration Register Write Protection bit
  1830                           ;	WRTC = 0x1, unprogrammed default
  1831                           ;	Boot Block Write Protection bit
  1832                           ;	WRTB = 0x1, unprogrammed default
  1833                           ;	Data EEPROM Write Protection bit
  1834                           ;	WRTD = 0x1, unprogrammed default
  1835                           ;	Scanner Enable bit
  1836                           ;	SCANE = 0x1, unprogrammed default
  1837                           ;	Low Voltage Programming Enable bit
  1838                           ;	LVP = 0x1, unprogrammed default
  1839   300007                     	org	3145735
  1840   300007  FF                 	db	255
  1841                           
  1842                           ;Config register CONFIG5L @ 0x300008
  1843                           ;	unspecified, using default values
  1844                           ;	UserNVM Program Memory Code Protection bit
  1845                           ;	CP = 0x1, unprogrammed default
  1846                           ;	DataNVM Memory Code Protection bit
  1847                           ;	CPD = 0x1, unprogrammed default
  1848   300008                     	org	3145736
  1849   300008  FF                 	db	255
  1850                           
  1851                           ;Config register CONFIG5H @ 0x300009
  1852                           ;	unspecified, using default values
  1853   300009                     	org	3145737
  1854   300009  FF                 	db	255
  1855                           
  1856                           ;Config register CONFIG6L @ 0x30000A
  1857                           ;	unspecified, using default values
  1858                           ;	Table Read Protection Block 0
  1859                           ;	EBTR0 = 0x1, unprogrammed default
  1860                           ;	Table Read Protection Block 1
  1861                           ;	EBTR1 = 0x1, unprogrammed default
  1862                           ;	Table Read Protection Block 2
  1863                           ;	EBTR2 = 0x1, unprogrammed default
  1864                           ;	Table Read Protection Block 3
  1865                           ;	EBTR3 = 0x1, unprogrammed default
  1866                           ;	Table Read Protection Block 4
  1867                           ;	EBTR4 = 0x1, unprogrammed default
  1868                           ;	Table Read Protection Block 5
  1869                           ;	EBTR5 = 0x1, unprogrammed default
  1870                           ;	Table Read Protection Block 6
  1871                           ;	EBTR6 = 0x1, unprogrammed default
  1872                           ;	Table Read Protection Block 7
  1873                           ;	EBTR7 = 0x1, unprogrammed default
  1874   30000A                     	org	3145738
  1875   30000A  FF                 	db	255
  1876                           
  1877                           ;Config register CONFIG6H @ 0x30000B
  1878                           ;	unspecified, using default values
  1879                           ;	Boot Block Table Read Protection bit
  1880                           ;	EBTRB = 0x1, unprogrammed default
  1881   30000B                     	org	3145739
  1882   30000B  FF                 	db	255
  1883                           tosu	equ	0xFFF
  1884                           tosh	equ	0xFFE
  1885                           tosl	equ	0xFFD
  1886                           stkptr	equ	0xFFC
  1887                           pclatu	equ	0xFFB
  1888                           pclath	equ	0xFFA
  1889                           pcl	equ	0xFF9
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           indf0	equ	0xFEF
  1897                           postinc0	equ	0xFEE
  1898                           postdec0	equ	0xFED
  1899                           preinc0	equ	0xFEC
  1900                           plusw0	equ	0xFEB
  1901                           fsr0h	equ	0xFEA
  1902                           fsr0l	equ	0xFE9
  1903                           wreg	equ	0xFE8
  1904                           indf1	equ	0xFE7
  1905                           postinc1	equ	0xFE6
  1906                           postdec1	equ	0xFE5
  1907                           preinc1	equ	0xFE4
  1908                           plusw1	equ	0xFE3
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           bsr	equ	0xFE0
  1912                           indf2	equ	0xFDF
  1913                           postinc2	equ	0xFDE
  1914                           postdec2	equ	0xFDD
  1915                           preinc2	equ	0xFDC
  1916                           plusw2	equ	0xFDB
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        63
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      93
    BANK0           160      0     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2623$buffer	PTR unsigned char  size(2) Largest target is 0

    S2623$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(COMRAM[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_color_click_init
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     694
                                              5 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      62        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 17:37:29 2024

               _turn180Delay 0005              _trail_timer_low 009C                           l31 101E  
                         l53 1052                           l56 1118             _trail_timer_high 0018  
                        l144 0F6E                          l242 10AA                          l245 10D0  
                        l254 1160                          l239 10A8                          l248 116A  
                        l257 1156                          l624 10F8                          l388 1136  
                        u200 10D0                          u201 10CC                          u190 10BA  
                        u191 10B6                          u600 0E9E                          u601 0E9A  
                        u610 0EB0                          u611 0EA8                          _ISR 0008  
                        u707 0E14                          u628 0EB2                          u717 0ECA  
                        u727 1034                          wreg 0FE8                  _squareDelay 0001  
                       ?_ISR 0045                         l2001 0F48                         l2011 0F62  
                       l2003 0F4A                         l2013 0F6C                         l2005 0F54  
                       l2007 0F56                         l2009 0F60                         l2041 0E2A  
                       l2033 0E0A                         l2051 0E4A                         l2043 0E2E  
                       l2035 0E22                         l1501 1096                         l2061 0E6A  
                       l2053 0E4E                         l2045 0E36                         l2037 0E22  
                       l2071 0E86                         l2063 0E76                         l2055 0E52  
                       l2047 0E3E                         l2039 0E26                         l1433 10AA  
                       l1441 114E                         l2081 0E9E                         l2073 0E88  
                       l2065 0E7A                         l2057 0E5A                         l2049 0E46  
                       l1435 10BA                         l1443 1152                         l2083 0EC0  
                       l2075 0E8A                         l2067 0E7E                         l2059 0E62  
                       l1437 1162                         l1445 1158                         l2077 0E8E  
                       l2069 0E82                         l1439 1166                         l1447 115C  
                       l2079 0E90                         l1609 0FD2                         l1721 1130  
                       l1731 10DC                         l1491 1080                         l1723 1132  
                       l1715 111A                         l1733 10EE                         l1493 108A  
                       l1725 1134                         l1717 1124                         l1735 10F0  
                       l1727 10D2                         l1495 1090                         l1719 1126  
                       l1737 10F4                         l1729 10DA                         l1497 1092  
                       l1739 10F6                         l1499 1094                         l1981 1020  
                       l1983 1024                         l1991 0EE0                         l1985 102E  
                       l1993 0EF0                         l1979 10FC                         l1987 103E  
                       l1995 0F16                         l1989 1048                         l1997 0F1A  
                       l1999 0F3E                         STR_1 0E01                         STR_2 0E06  
               _BAUD4CONbits 0EE9                         _T2PR 0FBC                         _main 0E0A  
                       fsr1l 0FE1                         btemp 005E                         start 0034  
               ___param_bank 0000                        ??_ISR 0045                        ?_main 0045  
         _timer_high_pointer 0012                        i2l647 002E                        i2l648 0030  
                      _TMR0H 0FD4                        _TMR0L 0FD3   __end_of_I2C_2_Master_Start 116C  
 __end_of_I2C_2_Master_Write 1158                  _turningGear 0014            _turnRight135Delay 0007  
                      tablat 0FF5              _turnLeft90Delay 000D                        ttemp5 005F  
                      ttemp6 0062                        ttemp7 0066                        status 0FD8  
                      wtemp8 005F              __initialization 0F70                 __end_of_main 0EE0  
                     ??_main 004A                __activetblptr 0003                       _CCPR1H 0FAA  
                     _CCPR2H 0FA6                       _CCPR3H 0F25                       _CCPR4H 0F21  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l1973 000A                       i2l1975 001A  
                     i2l1977 002A                       _RG6PPS 0E88     __end_of_color_click_init 1054  
                     _RX4PPS 0E15                       _TX4REG 0EE4             _turnLeft135Delay 0009  
              ??_Timer0_init 0045                 _CCPTMRS0bits 0FAD                       clear_0 0FB6  
                     clear_1 0FC2                       isa$std 0001                 __pdataCOMRAM 0001  
          _timer_low_pointer 0011                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8            ??_initDCmotorsPWM 0047  
          _buggy_lights_init 0FD2                   __accesstop 0060      __end_of__initialization 0FC8  
         ?_buggy_lights_init 0045                ___rparam_used 0001               __pcstackCOMRAM 0045  
               __pidataBANK0 1138          ??_buggy_lights_init 0045          __end_of_Timer0_init 10FA  
  __end_of_buggy_lights_init 1020                   __pbssBANK0 0060            _color_writetoaddr 10FA  
               _T2CLKCONbits 0FBF           ?_color_writetoaddr 0047          ??_color_writetoaddr 0048  
                    _SP4BRGH 0EE6                      _SP4BRGL 0EE5                      i2u57_40 001A  
                    i2u57_41 0016                      i2u58_40 002A                      i2u58_41 0026  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 0047  
  __end_of_color_writetoaddr 111A           _I2C_2_Master_Start 1162                   _initUSART4 111A  
         _I2C_2_Master_Write 114C                      __Hparam 0000                      __Lparam 0000  
                _Timer0_init 10D2          ?_I2C_2_Master_Start 0045          ?_I2C_2_Master_Write 0045  
               __psmallconst 0E00                      __pcinit 0F70                      __ramtop 0E00  
                    __ptext0 0E0A                      __ptext1 111A                      __ptext2 0EE0  
                    __ptext3 1020                      __ptext4 10FA                      __ptext5 114C  
                    __ptext6 1158                      __ptext7 1162                      __ptext8 10AA  
                    __ptext9 1080                    _T2CONbits 0FBD                    _T2HLTbits 0FBE  
              _RxBufWriteCnt 0044         ??_I2C_2_Master_Start 0046         ??_I2C_2_Master_Write 0046  
       end_of_initialization 0FC8            ?_color_click_init 0045           ??_color_click_init 0049  
                    postdec1 0FE5                      postinc0 0FEE                   _returnFlag 0040  
            _initDCmotorsPWM 0EE0                    _PORTFbits 0F8E                    _TRISAbits 0F81  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
   color_writetoaddr@address 0048                  _CCP1CONbits 0FAB                 _EUSART4RXbuf 002C  
               _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7                  _CCP3CONbits 0F26  
                ?_initUSART4 0045                  _CCP4CONbits 0F22                   main@motorL 004C  
                 main@motorR 0055                __pidataCOMRAM 1054          start_initialization 0F70  
                __end_of_ISR 0034                _TxBufWriteCnt 0042             _turnRight90Delay 000B  
    __end_of_initDCmotorsPWM 0F70                  __pdataBANK0 00B0                  __pbssCOMRAM 002C  
               ?_Timer0_init 0045                    __pintcode 0008                  __smallconst 0E00  
          _I2C_2_Master_Idle 10AA            _I2C_2_Master_Init 1080            _I2C_2_Master_Stop 1158  
               _RxBufReadCnt 0043           ?_I2C_2_Master_Idle 0045           ?_I2C_2_Master_Init 0045  
         ?_I2C_2_Master_Stop 0045                _headbuttDelay 0003     initDCmotorsPWM@PWMperiod 0045  
                  _rampDelay 0017          ??_I2C_2_Master_Idle 0045          ??_I2C_2_Master_Init 0045  
                   _LATAbits 0F79          ??_I2C_2_Master_Stop 0046                     _LATCbits 0F7B  
                   _LATDbits 0F7C                     _LATEbits 0F7D                     _LATFbits 0F7E  
                   _LATGbits 0F7F                     _LATHbits 0F80                     _PIE0bits 0E29  
                   _PIE4bits 0E2D                     _PIR0bits 0E33                     _PIR4bits 0E37  
           ?_initDCmotorsPWM 0045                     _SSP2CON2 0EDA                     _SSP2STAT 0ED8  
                  _returning 0013    __end_of_I2C_2_Master_Idle 10D2    __end_of_I2C_2_Master_Init 10AA  
  __end_of_I2C_2_Master_Stop 1162  I2C_2_Master_Write@data_byte 0046                 _TxBufReadCnt 0041  
                  copy_data0 0F84                    copy_data1 0FA4                 ??_initUSART4 0045  
                   __Hrparam 0000                     __Lrparam 0000                   _ANSELDbits 0EA7  
                 _ANSELFbits 0EB4                   _T0CON0bits 0FD5                   _T0CON1bits 0FD6  
         __end_of_initUSART4 1138                     __ptext10 0FD2                     __ptext11 10D2  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                     int$flags 005E                   _INTCONbits 0FF2  
                   intlevel2 0000                 _topGearRight 0015            _manoeuvre_pointer 0010  
           _color_click_init 1020                  _topGearLeft 0016                   _SSP2DATPPS 0E1D  
                 _SSP2CLKPPS 0E1C              _trail_manoeuvre 00B0              _manoeuvre_count 000F  
                 _TX4STAbits 0EE8  
