

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 26 17:55:32 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 18/08/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F67K40 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   0010BA                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _squareDelay
    68   0010BA  012C               	dw	300
    69                           
    70                           ;initializer for _headbuttDelay
    71   0010BC  0046               	dw	70
    72                           
    73                           ;initializer for _turn180Delay
    74   0010BE  01FE               	dw	510
    75                           
    76                           ;initializer for _turnRight135Delay
    77   0010C0  012C               	dw	300
    78                           
    79                           ;initializer for _turnLeft135Delay
    80   0010C2  012C               	dw	300
    81                           
    82                           ;initializer for _turnRight90Delay
    83   0010C4  00AF               	dw	175
    84                           
    85                           ;initializer for _turnLeft90Delay
    86   0010C6  00AF               	dw	175
    87                           
    88                           ;initializer for _turningGear
    89   0010C8  2A                 	db	42
    90                           
    91                           ;initializer for _topGearRight
    92   0010C9  20                 	db	32
    93                           
    94                           ;initializer for _topGearLeft
    95   0010CA  1E                 	db	30
    96                           
    97                           ;initializer for _rampDelay
    98   0010CB  08                 	db	8
    99   000000                     _TX4REG	set	3812
   100   000000                     _RC4STAbits	set	3815
   101   000000                     _SP4BRGH	set	3814
   102   000000                     _LATEbits	set	3965
   103   000000                     _TRISEbits	set	3973
   104   000000                     _LATGbits	set	3967
   105   000000                     _TRISGbits	set	3975
   106   000000                     _LATFbits	set	3966
   107   000000                     _LATHbits	set	3968
   108   000000                     _TRISFbits	set	3974
   109   000000                     _TRISHbits	set	3976
   110   000000                     _SSP2CON2bits	set	3802
   111   000000                     _RX4PPS	set	3605
   112   000000                     _SSP2CLKPPS	set	3612
   113   000000                     _SSP2DATPPS	set	3613
   114   000000                     _RC7PPS	set	3689
   115   000000                     _RE2PPS	set	3700
   116   000000                     _LATAbits	set	3961
   117   000000                     _LATDbits	set	3964
   118   000000                     _TRISDbits	set	3972
   119   000000                     _T2PR	set	4028
   120   000000                     _T2CONbits	set	4029
   121   000000                     _CCPR2H	set	4006
   122   000000                     _CCPR1H	set	4010
   123   000000                     _TRISCbits	set	3971
   124   000000                     _TRISAbits	set	3969
   125   000000                     _LATCbits	set	3963
   126   000000                     _RE4PPS	set	3702
   127   000000                     _RG6PPS	set	3720
   128   000000                     _RD5PPS	set	3695
   129   000000                     _ANSELDbits	set	3751
   130   000000                     _SSP2ADD	set	3798
   131   000000                     _SSP2CON1bits	set	3801
   132   000000                     _CCPR4H	set	3873
   133   000000                     _CCPR3H	set	3877
   134   000000                     _T2CLKCONbits	set	4031
   135   000000                     _T2HLTbits	set	4030
   136   000000                     _CCP1CONbits	set	4011
   137   000000                     _CCPTMRS0bits	set	4013
   138   000000                     _CCP2CONbits	set	4007
   139   000000                     _CCP3CONbits	set	3878
   140   000000                     _CCP4CONbits	set	3874
   141   000000                     _RC4REG	set	3811
   142   000000                     _SP4BRGL	set	3813
   143   000000                     _TX4STAbits	set	3816
   144   000000                     _BAUD4CONbits	set	3817
   145   000000                     _SSP2CON2	set	3802
   146   000000                     _SSP2STAT	set	3800
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _PIE4bits	set	3629
   149   000000                     _PIR4bits	set	3639
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD6PPS	set	3696
   152                           
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156   000FAC                     __pcinit:
   157                           	callstack 0
   158   000FAC                     start_initialization:
   159                           	callstack 0
   160   000FAC                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (18 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165   000FAC  0EBA               	movlw	low __pidataCOMRAM
   166   000FAE  6EF6               	movwf	tblptrl,c
   167   000FB0  0E10               	movlw	high __pidataCOMRAM
   168   000FB2  6EF7               	movwf	tblptrh,c
   169   000FB4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170   000FB6  6EF8               	movwf	tblptru,c
   171   000FB8  EE00  F032         	lfsr	0,__pdataCOMRAM
   172   000FBC  EE10 F012          	lfsr	1,18
   173   000FC0                     copy_data0:
   174   000FC0  0009               	tblrd		*+
   175   000FC2  CFF5 FFEE          	movff	tablat,postinc0
   176   000FC6  50E5               	movf	postdec1,w,c
   177   000FC8  50E1               	movf	fsr1l,w,c
   178   000FCA  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to BANK0 (60 bytes)
   181   000FCC  EE00  F060         	lfsr	0,__pbssBANK0
   182   000FD0  0E3C               	movlw	60
   183   000FD2                     clear_0:
   184   000FD2  6AEE               	clrf	postinc0,c
   185   000FD4  06E8               	decf	wreg,f,c
   186   000FD6  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to COMRAM (24 bytes)
   189   000FD8  EE00  F01A         	lfsr	0,__pbssCOMRAM
   190   000FDC  0E18               	movlw	24
   191   000FDE                     clear_1:
   192   000FDE  6AEE               	clrf	postinc0,c
   193   000FE0  06E8               	decf	wreg,f,c
   194   000FE2  E1FD               	bnz	clear_1
   195   000FE4                     end_of_initialization:
   196                           	callstack 0
   197   000FE4                     __end_of__initialization:
   198                           	callstack 0
   199   000FE4  0100               	movlb	0
   200   000FE6  EF96  F007         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   00001A                     __pbssCOMRAM:
   204                           	callstack 0
   205   00001A                     _EUSART4RXbuf:
   206                           	callstack 0
   207   00001A                     	ds	20
   208   00002E                     _TxBufReadCnt:
   209                           	callstack 0
   210   00002E                     	ds	1
   211   00002F                     _TxBufWriteCnt:
   212                           	callstack 0
   213   00002F                     	ds	1
   214   000030                     _RxBufReadCnt:
   215                           	callstack 0
   216   000030                     	ds	1
   217   000031                     _RxBufWriteCnt:
   218                           	callstack 0
   219   000031                     	ds	1
   220                           
   221                           	psect	dataCOMRAM
   222   000032                     __pdataCOMRAM:
   223                           	callstack 0
   224   000032                     _squareDelay:
   225                           	callstack 0
   226   000032                     	ds	2
   227   000034                     _headbuttDelay:
   228                           	callstack 0
   229   000034                     	ds	2
   230   000036                     _turn180Delay:
   231                           	callstack 0
   232   000036                     	ds	2
   233   000038                     _turnRight135Delay:
   234                           	callstack 0
   235   000038                     	ds	2
   236   00003A                     _turnLeft135Delay:
   237                           	callstack 0
   238   00003A                     	ds	2
   239   00003C                     _turnRight90Delay:
   240                           	callstack 0
   241   00003C                     	ds	2
   242   00003E                     _turnLeft90Delay:
   243                           	callstack 0
   244   00003E                     	ds	2
   245   000040                     _turningGear:
   246                           	callstack 0
   247   000040                     	ds	1
   248   000041                     _topGearRight:
   249                           	callstack 0
   250   000041                     	ds	1
   251   000042                     _topGearLeft:
   252                           	callstack 0
   253   000042                     	ds	1
   254   000043                     _rampDelay:
   255                           	callstack 0
   256   000043                     	ds	1
   257                           
   258                           	psect	bssBANK0
   259   000060                     __pbssBANK0:
   260                           	callstack 0
   261   000060                     _EUSART4TXbuf:
   262                           	callstack 0
   263   000060                     	ds	60
   264                           
   265                           	psect	cstackCOMRAM
   266   000001                     __pcstackCOMRAM:
   267                           	callstack 0
   268   000001                     ??_lights_flashing:
   269   000001                     ??_I2C_2_Master_Idle:
   270   000001                     initDCmotorsPWM@PWMperiod:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x0
   274   000001                     	ds	1
   275   000002                     I2C_2_Master_Write@data_byte:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x1
   279   000002                     	ds	1
   280   000003                     color_writetoaddr@value:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x2
   284   000003                     	ds	1
   285   000004                     color_writetoaddr@address:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x3
   289   000004                     	ds	1
   290   000005                     ??_color_click_init:
   291                           
   292                           ; 1 bytes @ 0x4
   293   000005                     	ds	1
   294   000006                     ??_main:
   295                           
   296                           ; 1 bytes @ 0x5
   297   000006                     	ds	2
   298   000008                     main@motorL:
   299                           	callstack 0
   300                           
   301                           ; 9 bytes @ 0x7
   302   000008                     	ds	9
   303   000011                     main@motorR:
   304                           	callstack 0
   305                           
   306                           ; 9 bytes @ 0x10
   307   000011                     	ds	9
   308                           
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 24 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;  motorR          9   16[COMRAM] struct DC_motor
   319 ;;  motorL          9    7[COMRAM] struct DC_motor
   320 ;;  PWMcycle        2    0        unsigned int 
   321 ;;  backtrack       1    0        unsigned char 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   332 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   334 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   335 ;;Total ram usage:       20 bytes
   336 ;; Hardware stack levels required when called: 4
   337 ;; This function calls:
   338 ;;		_buggy_lights_init
   339 ;;		_color_click_init
   340 ;;		_initDCmotorsPWM
   341 ;;		_lights_flashing
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348   000F2C                     __ptext0:
   349                           	callstack 0
   350   000F2C                     _main:
   351                           	callstack 27
   352   000F2C                     
   353                           ;main.c: 25:     _delay((unsigned long)((500)*(64000000/4000.0)));
   354   000F2C  0E29               	movlw	41
   355   000F2E  6E07               	movwf	(??_main+1)^0,c
   356   000F30  0E96               	movlw	150
   357   000F32  6E06               	movwf	??_main^0,c
   358   000F34  0E7F               	movlw	127
   359   000F36                     u467:
   360   000F36  2EE8               	decfsz	wreg,f,c
   361   000F38  D7FE               	bra	u467
   362   000F3A  2E06               	decfsz	??_main^0,f,c
   363   000F3C  D7FC               	bra	u467
   364   000F3E  2E07               	decfsz	(??_main+1)^0,f,c
   365   000F40  D7FA               	bra	u467
   366   000F42  0000               	nop	
   367   000F44                     
   368                           ;main.c: 28:     initDCmotorsPWM(PWMcycle);
   369   000F44  0E00               	movlw	0
   370   000F46  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   371   000F48  0E63               	movlw	99
   372   000F4A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   373   000F4C  EC4E  F007         	call	_initDCmotorsPWM	;wreg free
   374   000F50                     
   375                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   376   000F50  0E00               	movlw	0
   377   000F52  6E08               	movwf	main@motorL^0,c
   378   000F54                     
   379                           ;main.c: 33:     motorL.direction = 1;
   380   000F54  0E01               	movlw	1
   381   000F56  6E09               	movwf	(main@motorL+1)^0,c
   382   000F58                     
   383                           ;main.c: 34:     motorL.brakemode = 1;
   384   000F58  0E01               	movlw	1
   385   000F5A  6E0A               	movwf	(main@motorL+2)^0,c
   386   000F5C                     
   387                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   388   000F5C  0E00               	movlw	0
   389   000F5E  6E0C               	movwf	(main@motorL+4)^0,c
   390   000F60  0E63               	movlw	99
   391   000F62  6E0B               	movwf	(main@motorL+3)^0,c
   392   000F64                     
   393                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   394   000F64  0EAA               	movlw	170
   395   000F66  6E0D               	movwf	(main@motorL+5)^0,c
   396   000F68  0E0F               	movlw	15
   397   000F6A  6E0E               	movwf	(main@motorL+6)^0,c
   398   000F6C                     
   399                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   400   000F6C  0EA6               	movlw	166
   401   000F6E  6E0F               	movwf	(main@motorL+7)^0,c
   402   000F70  0E0F               	movlw	15
   403   000F72  6E10               	movwf	(main@motorL+8)^0,c
   404   000F74                     
   405                           ;main.c: 39:     motorR.power = 0;
   406   000F74  0E00               	movlw	0
   407   000F76  6E11               	movwf	main@motorR^0,c
   408   000F78                     
   409                           ;main.c: 40:     motorR.direction = 1;
   410   000F78  0E01               	movlw	1
   411   000F7A  6E12               	movwf	(main@motorR+1)^0,c
   412   000F7C                     
   413                           ;main.c: 41:     motorR.brakemode = 1;
   414   000F7C  0E01               	movlw	1
   415   000F7E  6E13               	movwf	(main@motorR+2)^0,c
   416   000F80                     
   417                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   418   000F80  0E00               	movlw	0
   419   000F82  6E15               	movwf	(main@motorR+4)^0,c
   420   000F84  0E63               	movlw	99
   421   000F86  6E14               	movwf	(main@motorR+3)^0,c
   422   000F88                     
   423                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   424   000F88  0E25               	movlw	37
   425   000F8A  6E16               	movwf	(main@motorR+5)^0,c
   426   000F8C  0E0F               	movlw	15
   427   000F8E  6E17               	movwf	(main@motorR+6)^0,c
   428   000F90                     
   429                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   430   000F90  0E21               	movlw	33
   431   000F92  6E18               	movwf	(main@motorR+7)^0,c
   432   000F94  0E0F               	movlw	15
   433   000F96  6E19               	movwf	(main@motorR+8)^0,c
   434   000F98                     
   435                           ;main.c: 46:     buggy_lights_init();
   436   000F98  EC24  F008         	call	_buggy_lights_init	;wreg free
   437   000F9C                     
   438                           ;main.c: 47:     color_click_init();
   439   000F9C  ECF5  F007         	call	_color_click_init	;wreg free
   440   000FA0                     l1733:
   441                           
   442                           ;main.c: 61:         lights_flashing();
   443   000FA0  EC01  F007         	call	_lights_flashing	;wreg free
   444   000FA4  EFD0  F007         	goto	l1733
   445   000FA8  EF00  F000         	goto	start
   446   000FAC                     __end_of_main:
   447                           	callstack 0
   448                           
   449 ;; *************** function _lights_flashing *****************
   450 ;; Defined at:
   451 ;;		line 39 in file "buggy_lights.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   469 ;;Total ram usage:        2 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text1
   479   000E02                     __ptext1:
   480                           	callstack 0
   481   000E02                     _lights_flashing:
   482                           	callstack 30
   483   000E02                     
   484                           ;buggy_lights.c: 41:     LATDbits.LATD4 = !LATDbits.LATD4;
   485   000E02  A87C               	btfss	124,4,c	;volatile
   486   000E04  EF06  F007         	goto	u211
   487   000E08  EF0A  F007         	goto	u210
   488   000E0C                     u211:
   489   000E0C  6A01               	clrf	??_lights_flashing^0,c
   490   000E0E  2A01               	incf	??_lights_flashing^0,f,c
   491   000E10  EF0B  F007         	goto	u228
   492   000E14                     u210:
   493   000E14  6A01               	clrf	??_lights_flashing^0,c
   494   000E16                     u228:
   495   000E16  3A01               	swapf	??_lights_flashing^0,f,c
   496   000E18  507C               	movf	124,w,c	;volatile
   497   000E1A  1801               	xorwf	??_lights_flashing^0,w,c
   498   000E1C  0BEF               	andlw	-17
   499   000E1E  1801               	xorwf	??_lights_flashing^0,w,c
   500   000E20  6E7C               	movwf	124,c	;volatile
   501                           
   502                           ;buggy_lights.c: 42:     LATDbits.LATD3 = !LATDbits.LATD3;
   503   000E22  A67C               	btfss	124,3,c	;volatile
   504   000E24  EF16  F007         	goto	u231
   505   000E28  EF1A  F007         	goto	u230
   506   000E2C                     u231:
   507   000E2C  6A01               	clrf	??_lights_flashing^0,c
   508   000E2E  2A01               	incf	??_lights_flashing^0,f,c
   509   000E30  EF1B  F007         	goto	u248
   510   000E34                     u230:
   511   000E34  6A01               	clrf	??_lights_flashing^0,c
   512   000E36                     u248:
   513   000E36  4601               	rlncf	??_lights_flashing^0,f,c
   514   000E38  4601               	rlncf	??_lights_flashing^0,f,c
   515   000E3A  4601               	rlncf	??_lights_flashing^0,f,c
   516   000E3C  507C               	movf	124,w,c	;volatile
   517   000E3E  1801               	xorwf	??_lights_flashing^0,w,c
   518   000E40  0BF7               	andlw	-9
   519   000E42  1801               	xorwf	??_lights_flashing^0,w,c
   520   000E44  6E7C               	movwf	124,c	;volatile
   521   000E46                     
   522                           ;buggy_lights.c: 43:     _delay((unsigned long)((500)*(64000000/4000.0)));
   523   000E46  0E29               	movlw	41
   524   000E48  6E02               	movwf	(??_lights_flashing+1)^0,c
   525   000E4A  0E96               	movlw	150
   526   000E4C  6E01               	movwf	??_lights_flashing^0,c
   527   000E4E  0E7F               	movlw	127
   528   000E50                     u477:
   529   000E50  2EE8               	decfsz	wreg,f,c
   530   000E52  D7FE               	bra	u477
   531   000E54  2E01               	decfsz	??_lights_flashing^0,f,c
   532   000E56  D7FC               	bra	u477
   533   000E58  2E02               	decfsz	(??_lights_flashing+1)^0,f,c
   534   000E5A  D7FA               	bra	u477
   535   000E5C  0000               	nop	
   536   000E5E                     
   537                           ;buggy_lights.c: 44:     LATFbits.LATF0 = !LATFbits.LATF0;
   538   000E5E  A07E               	btfss	126,0,c	;volatile
   539   000E60  EF34  F007         	goto	u251
   540   000E64  EF38  F007         	goto	u250
   541   000E68                     u251:
   542   000E68  6A01               	clrf	??_lights_flashing^0,c
   543   000E6A  2A01               	incf	??_lights_flashing^0,f,c
   544   000E6C  EF39  F007         	goto	u268
   545   000E70                     u250:
   546   000E70  6A01               	clrf	??_lights_flashing^0,c
   547   000E72                     u268:
   548   000E72  507E               	movf	126,w,c	;volatile
   549   000E74  1801               	xorwf	??_lights_flashing^0,w,c
   550   000E76  0BFE               	andlw	-2
   551   000E78  1801               	xorwf	??_lights_flashing^0,w,c
   552   000E7A  6E7E               	movwf	126,c	;volatile
   553   000E7C                     
   554                           ;buggy_lights.c: 45:     LATHbits.LATH0 = !LATHbits.LATH0;
   555   000E7C  A080               	btfss	128,0,c	;volatile
   556   000E7E  EF43  F007         	goto	u271
   557   000E82  EF47  F007         	goto	u270
   558   000E86                     u271:
   559   000E86  6A01               	clrf	??_lights_flashing^0,c
   560   000E88  2A01               	incf	??_lights_flashing^0,f,c
   561   000E8A  EF48  F007         	goto	u288
   562   000E8E                     u270:
   563   000E8E  6A01               	clrf	??_lights_flashing^0,c
   564   000E90                     u288:
   565   000E90  5080               	movf	128,w,c	;volatile
   566   000E92  1801               	xorwf	??_lights_flashing^0,w,c
   567   000E94  0BFE               	andlw	-2
   568   000E96  1801               	xorwf	??_lights_flashing^0,w,c
   569   000E98  6E80               	movwf	128,c	;volatile
   570   000E9A  0012               	return		;funcret
   571   000E9C                     __end_of_lights_flashing:
   572                           	callstack 0
   573                           
   574 ;; *************** function _initDCmotorsPWM *****************
   575 ;; Defined at:
   576 ;;		line 5 in file "dc_motor.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   594 ;;Total ram usage:        2 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text2
   604   000E9C                     __ptext2:
   605                           	callstack 0
   606   000E9C                     _initDCmotorsPWM:
   607                           	callstack 30
   608   000E9C                     
   609                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
   610   000E9C  9485               	bcf	133,2,c	;volatile
   611                           
   612                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
   613   000E9E  9885               	bcf	133,4,c	;volatile
   614                           
   615                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
   616   000EA0  9E83               	bcf	131,7,c	;volatile
   617                           
   618                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
   619   000EA2  9C87               	bcf	135,6,c	;volatile
   620                           
   621                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
   622   000EA4  947D               	bcf	125,2,c	;volatile
   623                           
   624                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
   625   000EA6  987D               	bcf	125,4,c	;volatile
   626                           
   627                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
   628   000EA8  9E7B               	bcf	123,7,c	;volatile
   629                           
   630                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
   631   000EAA  9C7F               	bcf	127,6,c	;volatile
   632   000EAC                     
   633                           ;dc_motor.c: 18:     RE2PPS=0x05;
   634   000EAC  0E05               	movlw	5
   635   000EAE  010E               	movlb	14	; () banked
   636   000EB0  6F74               	movwf	116,b	;volatile
   637                           
   638                           ;dc_motor.c: 19:     RE4PPS=0x06;
   639   000EB2  0E06               	movlw	6
   640   000EB4  6F76               	movwf	118,b	;volatile
   641                           
   642                           ;dc_motor.c: 20:     RC7PPS=0x07;
   643   000EB6  0E07               	movlw	7
   644   000EB8  6F69               	movwf	105,b	;volatile
   645                           
   646                           ;dc_motor.c: 21:     RG6PPS=0x08;
   647   000EBA  0E08               	movlw	8
   648   000EBC  6F88               	movwf	136,b	;volatile
   649                           
   650                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
   651   000EBE  50BD               	movf	189,w,c	;volatile
   652   000EC0  0B8F               	andlw	-113
   653   000EC2  0940               	iorlw	64
   654   000EC4  6EBD               	movwf	189,c	;volatile
   655                           
   656                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
   657   000EC6  0EE0               	movlw	-32
   658   000EC8  16BE               	andwf	190,f,c	;volatile
   659                           
   660                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
   661   000ECA  50BF               	movf	191,w,c	;volatile
   662   000ECC  0BF0               	andlw	-16
   663   000ECE  0901               	iorlw	1
   664   000ED0  6EBF               	movwf	191,c	;volatile
   665   000ED2                     
   666                           ; BSR set to: 14
   667                           ;dc_motor.c: 30:     T2PR=PWMperiod;
   668   000ED2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
   669   000ED6                     
   670                           ; BSR set to: 14
   671                           ;dc_motor.c: 31:     T2CONbits.ON=1;
   672   000ED6  8EBD               	bsf	189,7,c	;volatile
   673                           
   674                           ;dc_motor.c: 35:     CCPR1H=0;
   675   000ED8  0E00               	movlw	0
   676   000EDA  6EAA               	movwf	170,c	;volatile
   677                           
   678                           ;dc_motor.c: 36:     CCPR2H=0;
   679   000EDC  0E00               	movlw	0
   680   000EDE  6EA6               	movwf	166,c	;volatile
   681                           
   682                           ;dc_motor.c: 37:     CCPR3H=0;
   683   000EE0  0E00               	movlw	0
   684   000EE2  010F               	movlb	15	; () banked
   685   000EE4  6F25               	movwf	37,b	;volatile
   686                           
   687                           ;dc_motor.c: 38:     CCPR4H=0;
   688   000EE6  0E00               	movlw	0
   689   000EE8  6F21               	movwf	33,b	;volatile
   690                           
   691                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
   692   000EEA  0EFC               	movlw	-4
   693   000EEC  16AD               	andwf	173,f,c	;volatile
   694                           
   695                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
   696   000EEE  0EF3               	movlw	-13
   697   000EF0  16AD               	andwf	173,f,c	;volatile
   698                           
   699                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
   700   000EF2  0ECF               	movlw	-49
   701   000EF4  16AD               	andwf	173,f,c	;volatile
   702                           
   703                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
   704   000EF6  0E3F               	movlw	-193
   705   000EF8  16AD               	andwf	173,f,c	;volatile
   706   000EFA                     
   707                           ; BSR set to: 15
   708                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
   709   000EFA  88AB               	bsf	171,4,c	;volatile
   710                           
   711                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
   712   000EFC  50AB               	movf	171,w,c	;volatile
   713   000EFE  0BF0               	andlw	-16
   714   000F00  090C               	iorlw	12
   715   000F02  6EAB               	movwf	171,c	;volatile
   716   000F04                     
   717                           ; BSR set to: 15
   718                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
   719   000F04  8EAB               	bsf	171,7,c	;volatile
   720   000F06                     
   721                           ; BSR set to: 15
   722                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
   723   000F06  88A7               	bsf	167,4,c	;volatile
   724                           
   725                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
   726   000F08  50A7               	movf	167,w,c	;volatile
   727   000F0A  0BF0               	andlw	-16
   728   000F0C  090C               	iorlw	12
   729   000F0E  6EA7               	movwf	167,c	;volatile
   730   000F10                     
   731                           ; BSR set to: 15
   732                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
   733   000F10  8EA7               	bsf	167,7,c	;volatile
   734   000F12                     
   735                           ; BSR set to: 15
   736                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
   737   000F12  8926               	bsf	38,4,b	;volatile
   738                           
   739                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
   740   000F14  5126               	movf	38,w,b	;volatile
   741   000F16  0BF0               	andlw	-16
   742   000F18  090C               	iorlw	12
   743   000F1A  6F26               	movwf	38,b	;volatile
   744   000F1C                     
   745                           ; BSR set to: 15
   746                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
   747   000F1C  8F26               	bsf	38,7,b	;volatile
   748   000F1E                     
   749                           ; BSR set to: 15
   750                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
   751   000F1E  8922               	bsf	34,4,b	;volatile
   752                           
   753                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
   754   000F20  5122               	movf	34,w,b	;volatile
   755   000F22  0BF0               	andlw	-16
   756   000F24  090C               	iorlw	12
   757   000F26  6F22               	movwf	34,b	;volatile
   758   000F28                     
   759                           ; BSR set to: 15
   760                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
   761   000F28  8F22               	bsf	34,7,b	;volatile
   762   000F2A                     
   763                           ; BSR set to: 15
   764   000F2A  0012               	return		;funcret
   765   000F2C                     __end_of_initDCmotorsPWM:
   766                           	callstack 0
   767                           
   768 ;; *************** function _color_click_init *****************
   769 ;; Defined at:
   770 ;;		line 5 in file "color.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   788 ;;Total ram usage:        1 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; Hardware stack levels required when called: 3
   791 ;; This function calls:
   792 ;;		_I2C_2_Master_Init
   793 ;;		_color_writetoaddr
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text3
   800   000FEA                     __ptext3:
   801                           	callstack 0
   802   000FEA                     _color_click_init:
   803                           	callstack 27
   804   000FEA                     
   805                           ;color.c: 8:     I2C_2_Master_Init();
   806   000FEA  EC0F  F008         	call	_I2C_2_Master_Init	;wreg free
   807   000FEE                     
   808                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
   809   000FEE  0E01               	movlw	1
   810   000FF0  6E03               	movwf	color_writetoaddr@value^0,c
   811   000FF2  0E00               	movlw	0
   812   000FF4  EC4D  F008         	call	_color_writetoaddr
   813   000FF8                     
   814                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
   815   000FF8  0E3F               	movlw	63
   816   000FFA  6E05               	movwf	??_color_click_init^0,c
   817   000FFC  0E55               	movlw	85
   818   000FFE                     u487:
   819   000FFE  2EE8               	decfsz	wreg,f,c
   820   001000  D7FE               	bra	u487
   821   001002  2E05               	decfsz	??_color_click_init^0,f,c
   822   001004  D7FC               	bra	u487
   823   001006  0000               	nop	
   824   001008                     
   825                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
   826   001008  0E03               	movlw	3
   827   00100A  6E03               	movwf	color_writetoaddr@value^0,c
   828   00100C  0E00               	movlw	0
   829   00100E  EC4D  F008         	call	_color_writetoaddr
   830   001012                     
   831                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
   832   001012  0ED5               	movlw	213
   833   001014  6E03               	movwf	color_writetoaddr@value^0,c
   834   001016  0E01               	movlw	1
   835   001018  EC4D  F008         	call	_color_writetoaddr
   836   00101C  0012               	return		;funcret
   837   00101E                     __end_of_color_click_init:
   838                           	callstack 0
   839                           
   840 ;; *************** function _color_writetoaddr *****************
   841 ;; Defined at:
   842 ;;		line 21 in file "color.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  address         1    wreg     unsigned char 
   845 ;;  value           1    2[COMRAM] unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  address         1    3[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 2
   864 ;; This function calls:
   865 ;;		_I2C_2_Master_Start
   866 ;;		_I2C_2_Master_Stop
   867 ;;		_I2C_2_Master_Write
   868 ;; This function is called by:
   869 ;;		_color_click_init
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874   00109A                     __ptext4:
   875                           	callstack 0
   876   00109A                     _color_writetoaddr:
   877                           	callstack 27
   878                           
   879                           ;incstack = 0
   880                           ;color_writetoaddr@address stored from wreg
   881   00109A  6E04               	movwf	color_writetoaddr@address^0,c
   882   00109C                     
   883                           ;color.c: 22:     I2C_2_Master_Start();
   884   00109C  EC71  F008         	call	_I2C_2_Master_Start	;wreg free
   885                           
   886                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
   887   0010A0  0E52               	movlw	82
   888   0010A2  EC66  F008         	call	_I2C_2_Master_Write
   889                           
   890                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
   891   0010A6  5004               	movf	color_writetoaddr@address^0,w,c
   892   0010A8  0980               	iorlw	128
   893   0010AA  EC66  F008         	call	_I2C_2_Master_Write
   894                           
   895                           ;color.c: 25:     I2C_2_Master_Write(value);
   896   0010AE  5003               	movf	color_writetoaddr@value^0,w,c
   897   0010B0  EC66  F008         	call	_I2C_2_Master_Write
   898                           
   899                           ;color.c: 26:     I2C_2_Master_Stop();
   900   0010B4  EC6C  F008         	call	_I2C_2_Master_Stop	;wreg free
   901   0010B8  0012               	return		;funcret
   902   0010BA                     __end_of_color_writetoaddr:
   903                           	callstack 0
   904                           
   905 ;; *************** function _I2C_2_Master_Write *****************
   906 ;; Defined at:
   907 ;;		line 45 in file "i2c.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  data_byte       1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  data_byte       1    1[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;Total ram usage:        1 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 1
   928 ;; This function calls:
   929 ;;		_I2C_2_Master_Idle
   930 ;; This function is called by:
   931 ;;		_color_writetoaddr
   932 ;;		_color_read_Red
   933 ;;		_color_read_Blue
   934 ;;		_color_read_Green
   935 ;;		_color_read_Clear
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text5
   940   0010CC                     __ptext5:
   941                           	callstack 0
   942   0010CC                     _I2C_2_Master_Write:
   943                           	callstack 27
   944                           
   945                           ;incstack = 0
   946                           ;I2C_2_Master_Write@data_byte stored from wreg
   947   0010CC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
   948   0010CE                     
   949                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
   950   0010CE  EC39  F008         	call	_I2C_2_Master_Idle	;wreg free
   951   0010D2                     
   952                           ;i2c.c: 48:   SSP2BUF = data_byte;
   953   0010D2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
   954   0010D6  0012               	return		;funcret
   955   0010D8                     __end_of_I2C_2_Master_Write:
   956                           	callstack 0
   957                           
   958 ;; *************** function _I2C_2_Master_Stop *****************
   959 ;; Defined at:
   960 ;;		line 39 in file "i2c.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 1
   981 ;; This function calls:
   982 ;;		_I2C_2_Master_Idle
   983 ;; This function is called by:
   984 ;;		_color_writetoaddr
   985 ;;		_color_read_Red
   986 ;;		_color_read_Blue
   987 ;;		_color_read_Green
   988 ;;		_color_read_Clear
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text6
   993   0010D8                     __ptext6:
   994                           	callstack 0
   995   0010D8                     _I2C_2_Master_Stop:
   996                           	callstack 27
   997   0010D8                     
   998                           ;i2c.c: 41:   I2C_2_Master_Idle();
   999   0010D8  EC39  F008         	call	_I2C_2_Master_Idle	;wreg free
  1000   0010DC                     
  1001                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1002   0010DC  010E               	movlb	14	; () banked
  1003   0010DE  85DA               	bsf	218,2,b	;volatile
  1004   0010E0                     
  1005                           ; BSR set to: 14
  1006   0010E0  0012               	return		;funcret
  1007   0010E2                     __end_of_I2C_2_Master_Stop:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _I2C_2_Master_Start *****************
  1011 ;; Defined at:
  1012 ;;		line 27 in file "i2c.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 1
  1033 ;; This function calls:
  1034 ;;		_I2C_2_Master_Idle
  1035 ;; This function is called by:
  1036 ;;		_color_writetoaddr
  1037 ;;		_color_read_Red
  1038 ;;		_color_read_Blue
  1039 ;;		_color_read_Green
  1040 ;;		_color_read_Clear
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text7
  1045   0010E2                     __ptext7:
  1046                           	callstack 0
  1047   0010E2                     _I2C_2_Master_Start:
  1048                           	callstack 27
  1049   0010E2                     
  1050                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1051   0010E2  EC39  F008         	call	_I2C_2_Master_Idle	;wreg free
  1052   0010E6                     
  1053                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1054   0010E6  010E               	movlb	14	; () banked
  1055   0010E8  81DA               	bsf	218,0,b	;volatile
  1056   0010EA                     
  1057                           ; BSR set to: 14
  1058   0010EA  0012               	return		;funcret
  1059   0010EC                     __end_of_I2C_2_Master_Start:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _I2C_2_Master_Idle *****************
  1063 ;; Defined at:
  1064 ;;		line 22 in file "i2c.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_I2C_2_Master_Start
  1088 ;;		_I2C_2_Master_Stop
  1089 ;;		_I2C_2_Master_Write
  1090 ;;		_I2C_2_Master_RepStart
  1091 ;;		_I2C_2_Master_Read
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text8
  1096   001072                     __ptext8:
  1097                           	callstack 0
  1098   001072                     _I2C_2_Master_Idle:
  1099                           	callstack 27
  1100   001072                     l236:
  1101   001072  010E               	movlb	14	; () banked
  1102   001074  B5D8               	btfsc	216,2,b	;volatile
  1103   001076  EF3F  F008         	goto	u11
  1104   00107A  EF41  F008         	goto	u10
  1105   00107E                     u11:
  1106   00107E  EF39  F008         	goto	l236
  1107   001082                     u10:
  1108   001082                     
  1109                           ; BSR set to: 14
  1110   001082  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1111   001086  0E1F               	movlw	31
  1112   001088  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1113   00108A  A4D8               	btfss	status,2,c
  1114   00108C  EF4A  F008         	goto	u21
  1115   001090  EF4C  F008         	goto	u20
  1116   001094                     u21:
  1117   001094  EF39  F008         	goto	l236
  1118   001098                     u20:
  1119   001098                     
  1120                           ; BSR set to: 14
  1121   001098  0012               	return		;funcret
  1122   00109A                     __end_of_I2C_2_Master_Idle:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _I2C_2_Master_Init *****************
  1126 ;; Defined at:
  1127 ;;		line 4 in file "i2c.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_color_click_init
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text9
  1155   00101E                     __ptext9:
  1156                           	callstack 0
  1157   00101E                     _I2C_2_Master_Init:
  1158                           	callstack 29
  1159   00101E                     
  1160                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1161   00101E  010E               	movlb	14	; () banked
  1162   001020  51D9               	movf	217,w,b	;volatile
  1163   001022  0BF0               	andlw	-16
  1164   001024  0908               	iorlw	8
  1165   001026  6FD9               	movwf	217,b	;volatile
  1166   001028                     
  1167                           ; BSR set to: 14
  1168                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1169   001028  8BD9               	bsf	217,5,b	;volatile
  1170                           
  1171                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1172   00102A  0E9F               	movlw	159
  1173   00102C  6FD6               	movwf	214,b	;volatile
  1174   00102E                     
  1175                           ; BSR set to: 14
  1176                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1177   00102E  8A84               	bsf	132,5,c	;volatile
  1178   001030                     
  1179                           ; BSR set to: 14
  1180                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1181   001030  8C84               	bsf	132,6,c	;volatile
  1182   001032                     
  1183                           ; BSR set to: 14
  1184                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1185   001032  9BA7               	bcf	167,5,b	;volatile
  1186   001034                     
  1187                           ; BSR set to: 14
  1188                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1189   001034  9DA7               	bcf	167,6,b	;volatile
  1190                           
  1191                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1192   001036  0E1D               	movlw	29
  1193   001038  6F1D               	movwf	29,b	;volatile
  1194                           
  1195                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1196   00103A  0E1E               	movlw	30
  1197   00103C  6F1C               	movwf	28,b	;volatile
  1198                           
  1199                           ;i2c.c: 18:   RD5PPS=0x1C;
  1200   00103E  0E1C               	movlw	28
  1201   001040  6F6F               	movwf	111,b	;volatile
  1202                           
  1203                           ;i2c.c: 19:   RD6PPS=0x1B;
  1204   001042  0E1B               	movlw	27
  1205   001044  6F70               	movwf	112,b	;volatile
  1206   001046                     
  1207                           ; BSR set to: 14
  1208   001046  0012               	return		;funcret
  1209   001048                     __end_of_I2C_2_Master_Init:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _buggy_lights_init *****************
  1213 ;; Defined at:
  1214 ;;		line 4 in file "buggy_lights.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		None
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text10
  1242   001048                     __ptext10:
  1243                           	callstack 0
  1244   001048                     _buggy_lights_init:
  1245                           	callstack 30
  1246   001048                     
  1247                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  1248   001048  9884               	bcf	132,4,c	;volatile
  1249                           
  1250                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  1251   00104A  9288               	bcf	136,1,c	;volatile
  1252                           
  1253                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  1254   00104C  9684               	bcf	132,3,c	;volatile
  1255                           
  1256                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  1257   00104E  9086               	bcf	134,0,c	;volatile
  1258                           
  1259                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  1260   001050  9088               	bcf	136,0,c	;volatile
  1261                           
  1262                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  1263   001052  887C               	bsf	124,4,c	;volatile
  1264                           
  1265                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  1266   001054  8280               	bsf	128,1,c	;volatile
  1267                           
  1268                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  1269   001056  867C               	bsf	124,3,c	;volatile
  1270                           
  1271                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  1272   001058  807E               	bsf	126,0,c	;volatile
  1273                           
  1274                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  1275   00105A  8080               	bsf	128,0,c	;volatile
  1276                           
  1277                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  1278   00105C  9E84               	bcf	132,7,c	;volatile
  1279                           
  1280                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  1281   00105E  9688               	bcf	136,3,c	;volatile
  1282                           
  1283                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  1284   001060  8E7C               	bsf	124,7,c	;volatile
  1285                           
  1286                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  1287   001062  8680               	bsf	128,3,c	;volatile
  1288                           
  1289                           ;buggy_lights.c: 30:     TRISGbits.TRISG1 = 0;
  1290   001064  9287               	bcf	135,1,c	;volatile
  1291                           
  1292                           ;buggy_lights.c: 31:     TRISAbits.TRISA4 = 0;
  1293   001066  9881               	bcf	129,4,c	;volatile
  1294                           
  1295                           ;buggy_lights.c: 32:     TRISFbits.TRISF7 = 0;
  1296   001068  9E86               	bcf	134,7,c	;volatile
  1297                           
  1298                           ;buggy_lights.c: 34:     LATGbits.LATG1 = 1;
  1299   00106A  827F               	bsf	127,1,c	;volatile
  1300                           
  1301                           ;buggy_lights.c: 35:     LATAbits.LATA4 = 1;
  1302   00106C  8879               	bsf	121,4,c	;volatile
  1303                           
  1304                           ;buggy_lights.c: 36:     LATFbits.LATF7 = 1;
  1305   00106E  8E7E               	bsf	126,7,c	;volatile
  1306   001070  0012               	return		;funcret
  1307   001072                     __end_of_buggy_lights_init:
  1308                           	callstack 0
  1309                           
  1310                           	psect	smallconst
  1311   000E00                     __psmallconst:
  1312                           	callstack 0
  1313   000E00  00                 	db	0
  1314   000E01  00                 	db	0	; dummy byte at the end
  1315   000000                     
  1316                           	psect	rparam
  1317   000000                     
  1318                           	psect	idloc
  1319                           
  1320                           ;Config register IDLOC0 @ 0x200000
  1321                           ;	unspecified, using default values
  1322   200000                     	org	2097152
  1323   200000  FFFF               	dw	65535
  1324                           
  1325                           ;Config register IDLOC1 @ 0x200002
  1326                           ;	unspecified, using default values
  1327   200002                     	org	2097154
  1328   200002  FFFF               	dw	65535
  1329                           
  1330                           ;Config register IDLOC2 @ 0x200004
  1331                           ;	unspecified, using default values
  1332   200004                     	org	2097156
  1333   200004  FFFF               	dw	65535
  1334                           
  1335                           ;Config register IDLOC3 @ 0x200006
  1336                           ;	unspecified, using default values
  1337   200006                     	org	2097158
  1338   200006  FFFF               	dw	65535
  1339                           
  1340                           ;Config register IDLOC4 @ 0x200008
  1341                           ;	unspecified, using default values
  1342   200008                     	org	2097160
  1343   200008  FFFF               	dw	65535
  1344                           
  1345                           ;Config register IDLOC5 @ 0x20000A
  1346                           ;	unspecified, using default values
  1347   20000A                     	org	2097162
  1348   20000A  FFFF               	dw	65535
  1349                           
  1350                           ;Config register IDLOC6 @ 0x20000C
  1351                           ;	unspecified, using default values
  1352   20000C                     	org	2097164
  1353   20000C  FFFF               	dw	65535
  1354                           
  1355                           ;Config register IDLOC7 @ 0x20000E
  1356                           ;	unspecified, using default values
  1357   20000E                     	org	2097166
  1358   20000E  FFFF               	dw	65535
  1359                           
  1360                           	psect	config
  1361                           
  1362                           ;Config register CONFIG1L @ 0x300000
  1363                           ;	External Oscillator mode Selection bits
  1364                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1365                           ;	Power-up default value for COSC bits
  1366                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1367   300000                     	org	3145728
  1368   300000  AA                 	db	170
  1369                           
  1370                           ;Config register CONFIG1H @ 0x300001
  1371                           ;	unspecified, using default values
  1372                           ;	Clock Out Enable bit
  1373                           ;	CLKOUTEN = 0x1, unprogrammed default
  1374                           ;	Clock Switch Enable bit
  1375                           ;	CSWEN = 0x1, unprogrammed default
  1376                           ;	Fail-Safe Clock Monitor Enable bit
  1377                           ;	FCMEN = 0x1, unprogrammed default
  1378   300001                     	org	3145729
  1379   300001  FF                 	db	255
  1380                           
  1381                           ;Config register CONFIG2L @ 0x300002
  1382                           ;	unspecified, using default values
  1383                           ;	Master Clear Enable bit
  1384                           ;	MCLRE = 0x1, unprogrammed default
  1385                           ;	Power-up Timer Enable bit
  1386                           ;	PWRTE = 0x1, unprogrammed default
  1387                           ;	Low-power BOR enable bit
  1388                           ;	LPBOREN = 0x1, unprogrammed default
  1389                           ;	Brown-out Reset Enable bits
  1390                           ;	BOREN = 0x3, unprogrammed default
  1391   300002                     	org	3145730
  1392   300002  FF                 	db	255
  1393                           
  1394                           ;Config register CONFIG2H @ 0x300003
  1395                           ;	unspecified, using default values
  1396                           ;	Brown Out Reset Voltage selection bits
  1397                           ;	BORV = 0x3, unprogrammed default
  1398                           ;	ZCD Disable bit
  1399                           ;	ZCD = 0x1, unprogrammed default
  1400                           ;	PPSLOCK bit One-Way Set Enable bit
  1401                           ;	PPS1WAY = 0x1, unprogrammed default
  1402                           ;	Stack Full/Underflow Reset Enable bit
  1403                           ;	STVREN = 0x1, unprogrammed default
  1404                           ;	Debugger Enable bit
  1405                           ;	DEBUG = 0x1, unprogrammed default
  1406                           ;	Extended Instruction Set Enable bit
  1407                           ;	XINST = 0x1, unprogrammed default
  1408   300003                     	org	3145731
  1409   300003  FF                 	db	255
  1410                           
  1411                           ;Config register CONFIG3L @ 0x300004
  1412                           ;	WDT Period Select bits
  1413                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1414                           ;	WDT operating mode
  1415                           ;	WDTE = OFF, WDT Disabled
  1416   300004                     	org	3145732
  1417   300004  9F                 	db	159
  1418                           
  1419                           ;Config register CONFIG3H @ 0x300005
  1420                           ;	unspecified, using default values
  1421                           ;	WDT Window Select bits
  1422                           ;	WDTCWS = 0x7, unprogrammed default
  1423                           ;	WDT input clock selector
  1424                           ;	WDTCCS = 0x7, unprogrammed default
  1425   300005                     	org	3145733
  1426   300005  FF                 	db	255
  1427                           
  1428                           ;Config register CONFIG4L @ 0x300006
  1429                           ;	unspecified, using default values
  1430                           ;	Write Protection Block 0
  1431                           ;	WRT0 = 0x1, unprogrammed default
  1432                           ;	Write Protection Block 1
  1433                           ;	WRT1 = 0x1, unprogrammed default
  1434                           ;	Write Protection Block 2
  1435                           ;	WRT2 = 0x1, unprogrammed default
  1436                           ;	Write Protection Block 3
  1437                           ;	WRT3 = 0x1, unprogrammed default
  1438                           ;	Write Protection Block 3
  1439                           ;	WRT4 = 0x1, unprogrammed default
  1440                           ;	Write Protection Block 3
  1441                           ;	WRT5 = 0x1, unprogrammed default
  1442                           ;	Write Protection Block 3
  1443                           ;	WRT6 = 0x1, unprogrammed default
  1444                           ;	Write Protection Block 3
  1445                           ;	WRT7 = 0x1, unprogrammed default
  1446   300006                     	org	3145734
  1447   300006  FF                 	db	255
  1448                           
  1449                           ;Config register CONFIG4H @ 0x300007
  1450                           ;	unspecified, using default values
  1451                           ;	Configuration Register Write Protection bit
  1452                           ;	WRTC = 0x1, unprogrammed default
  1453                           ;	Boot Block Write Protection bit
  1454                           ;	WRTB = 0x1, unprogrammed default
  1455                           ;	Data EEPROM Write Protection bit
  1456                           ;	WRTD = 0x1, unprogrammed default
  1457                           ;	Scanner Enable bit
  1458                           ;	SCANE = 0x1, unprogrammed default
  1459                           ;	Low Voltage Programming Enable bit
  1460                           ;	LVP = 0x1, unprogrammed default
  1461   300007                     	org	3145735
  1462   300007  FF                 	db	255
  1463                           
  1464                           ;Config register CONFIG5L @ 0x300008
  1465                           ;	unspecified, using default values
  1466                           ;	UserNVM Program Memory Code Protection bit
  1467                           ;	CP = 0x1, unprogrammed default
  1468                           ;	DataNVM Memory Code Protection bit
  1469                           ;	CPD = 0x1, unprogrammed default
  1470   300008                     	org	3145736
  1471   300008  FF                 	db	255
  1472                           
  1473                           ;Config register CONFIG5H @ 0x300009
  1474                           ;	unspecified, using default values
  1475   300009                     	org	3145737
  1476   300009  FF                 	db	255
  1477                           
  1478                           ;Config register CONFIG6L @ 0x30000A
  1479                           ;	unspecified, using default values
  1480                           ;	Table Read Protection Block 0
  1481                           ;	EBTR0 = 0x1, unprogrammed default
  1482                           ;	Table Read Protection Block 1
  1483                           ;	EBTR1 = 0x1, unprogrammed default
  1484                           ;	Table Read Protection Block 2
  1485                           ;	EBTR2 = 0x1, unprogrammed default
  1486                           ;	Table Read Protection Block 3
  1487                           ;	EBTR3 = 0x1, unprogrammed default
  1488                           ;	Table Read Protection Block 4
  1489                           ;	EBTR4 = 0x1, unprogrammed default
  1490                           ;	Table Read Protection Block 5
  1491                           ;	EBTR5 = 0x1, unprogrammed default
  1492                           ;	Table Read Protection Block 6
  1493                           ;	EBTR6 = 0x1, unprogrammed default
  1494                           ;	Table Read Protection Block 7
  1495                           ;	EBTR7 = 0x1, unprogrammed default
  1496   30000A                     	org	3145738
  1497   30000A  FF                 	db	255
  1498                           
  1499                           ;Config register CONFIG6H @ 0x30000B
  1500                           ;	unspecified, using default values
  1501                           ;	Boot Block Table Read Protection bit
  1502                           ;	EBTRB = 0x1, unprogrammed default
  1503   30000B                     	org	3145739
  1504   30000B  FF                 	db	255
  1505                           tosu	equ	0xFFF
  1506                           tosh	equ	0xFFE
  1507                           tosl	equ	0xFFD
  1508                           stkptr	equ	0xFFC
  1509                           pclatu	equ	0xFFB
  1510                           pclath	equ	0xFFA
  1511                           pcl	equ	0xFF9
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           indf0	equ	0xFEF
  1519                           postinc0	equ	0xFEE
  1520                           postdec0	equ	0xFED
  1521                           preinc0	equ	0xFEC
  1522                           plusw0	equ	0xFEB
  1523                           fsr0h	equ	0xFEA
  1524                           fsr0l	equ	0xFE9
  1525                           wreg	equ	0xFE8
  1526                           indf1	equ	0xFE7
  1527                           postinc1	equ	0xFE6
  1528                           postdec1	equ	0xFE5
  1529                           preinc1	equ	0xFE4
  1530                           plusw1	equ	0xFE3
  1531                           fsr1h	equ	0xFE2
  1532                           fsr1l	equ	0xFE1
  1533                           bsr	equ	0xFE0
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           preinc2	equ	0xFDC
  1538                           plusw2	equ	0xFDB
  1539                           fsr2h	equ	0xFDA
  1540                           fsr2l	equ	0xFD9
  1541                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      67
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1009DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1009DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_click_init
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0     695
                                              5 COMRAM    20    20      0
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                    _lights_flashing
 ---------------------------------------------------------------------------------
 (1) _lights_flashing                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _lights_flashing

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      43       1       70.5%
BITBIGSFRlllhhh     52      0       0      39        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRlllhhh     37      0       0      41        0.0%
BITBIGSFRlllhhh     2D      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      51        0.0%
BITBIGSFRllllll     26      0       0      55        0.0%
BITBIGSFRlllhhh     1E      0       0      45        0.0%
BITBIGSFRhhlll      1D      0       0      36        0.0%
BITBIGSFRlllhhl     11      0       0      46        0.0%
BITBIGSFRlllllh      F      0       0      53        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRlllllh      9      0       0      52        0.0%
BITBIGSFRlllhhh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRlllllh      6      0       0      50        0.0%
BITBIGSFRllllhl      5      0       0      49        0.0%
BITBIGSFRllllhh      3      0       0      48        0.0%
BITBIGSFRlllhhh      2      0       0      40        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      43        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRlllhl       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BITBIGSFRlhh         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      56        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 26 17:55:32 2024

               _turn180Delay 0036                           l25 1070                           l50 10B8  
                         l28 0E9A                           l47 101C                           u10 1082  
                         u11 107E                           u20 1098                           u21 1094  
                        l233 1046                          l242 10EA                          l138 0F2A  
                        l251 10D6                          l236 1072                          l239 1098  
                        l248 10E0                          u210 0E14                          u211 0E0C  
                        u230 0E34                          u231 0E2C                          u250 0E70  
                        u251 0E68                          u228 0E16                          u270 0E8E  
                        u271 0E86                          u248 0E36                          u268 0E72  
                        u288 0E90                          u467 0F36                          u477 0E50  
                        u487 0FFE                          wreg 0FE8                  _squareDelay 0032  
                       l1151 10E2                         l1153 10E6                         l1161 10DC  
                       l1147 1072                         l1155 10CE                         l1181 1028  
                       l1149 1082                         l1157 10D2                         l1183 102E  
                       l1159 10D8                         l1185 1030                         l1281 0E02  
                       l1187 1032                         l1179 101E                         l1283 0E46  
                       l1189 1034                         l1285 0E5E                         l1701 0F44  
                       l1279 1048                         l1287 0E7C                         l1711 0F64  
                       l1703 0F50                         l1721 0F80                         l1713 0F6C  
                       l1705 0F54                         l1731 0FA0                         l1723 0F88  
                       l1715 0F74                         l1707 0F58                         l1661 109C  
                       l1733 0FA0                         l1725 0F90                         l1717 0F78  
                       l1709 0F5C                         l1671 1012                         l1663 0FEA  
                       l1727 0F98                         l1719 0F7C                         l1665 0FEE  
                       l1681 0EFA                         l1673 0E9C                         l1729 0F9C  
                       l1667 0FF8                         l1691 0F1C                         l1683 0F04  
                       l1675 0EAC                         l1669 1008                         l1693 0F1E  
                       l1685 0F06                         l1677 0ED2                         l1695 0F28  
                       l1687 0F10                         l1679 0ED6                         l1689 0F12  
                       l1697 0F2C                         l1699 0F44                 _BAUD4CONbits 0EE9  
                       _T2PR 0FBC                         _main 0F2C                         fsr1l 0FE1  
                       start 0000                 ___param_bank 0000                        ?_main 0001  
 __end_of_I2C_2_Master_Start 10EC   __end_of_I2C_2_Master_Write 10D8                  _turningGear 0040  
          _turnRight135Delay 0038                        tablat 0FF5              _turnLeft90Delay 003E  
                      status 0FD8              __initialization 0FAC                 __end_of_main 0FAC  
                     ??_main 0006                __activetblptr 0003                       _CCPR1H 0FAA  
                     _CCPR2H 0FA6                       _CCPR3H 0F25                       _CCPR4H 0F21  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       _RG6PPS 0E88     __end_of_color_click_init 101E  
                     _RX4PPS 0E15                       _TX4REG 0EE4             _turnLeft135Delay 003A  
               _CCPTMRS0bits 0FAD              _lights_flashing 0E02                       clear_0 0FD2  
                     clear_1 0FDE                       isa$std 0001                 __pdataCOMRAM 0032  
               __mediumconst 0000                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8            ??_initDCmotorsPWM 0003            _buggy_lights_init 1048  
                 __accesstop 0060      __end_of__initialization 0FE4           ?_buggy_lights_init 0001  
              ___rparam_used 0001               __pcstackCOMRAM 0001          ??_buggy_lights_init 0001  
  __end_of_buggy_lights_init 1072                   __pbssBANK0 0060      __end_of_lights_flashing 0E9C  
          _color_writetoaddr 109A                 _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003  
        ??_color_writetoaddr 0004                      _SP4BRGH 0EE6                      _SP4BRGL 0EE5  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 0003  
  __end_of_color_writetoaddr 10BA           _I2C_2_Master_Start 10E2           _I2C_2_Master_Write 10CC  
                    __Hparam 0000                      __Lparam 0000          ?_I2C_2_Master_Start 0001  
        ?_I2C_2_Master_Write 0001                 __psmallconst 0E00                      __pcinit 0FAC  
                    __ramtop 0E00                      __ptext0 0F2C                      __ptext1 0E02  
                    __ptext2 0E9C                      __ptext3 0FEA                      __ptext4 109A  
                    __ptext5 10CC                      __ptext6 10D8                      __ptext7 10E2  
                    __ptext8 1072                      __ptext9 101E                    _T2CONbits 0FBD  
                  _T2HLTbits 0FBE                _RxBufWriteCnt 0031         ??_I2C_2_Master_Start 0002  
       ??_I2C_2_Master_Write 0002         end_of_initialization 0FE4            ?_color_click_init 0001  
           ?_lights_flashing 0001           ??_color_click_init 0005                      postdec1 0FE5  
                    postinc0 0FEE              _initDCmotorsPWM 0E9C                    _TRISAbits 0F81  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
   color_writetoaddr@address 0004                  _CCP1CONbits 0FAB                 _EUSART4RXbuf 001A  
               _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7                  _CCP3CONbits 0F26  
                _CCP4CONbits 0F22                   main@motorL 0008                   main@motorR 0011  
              __pidataCOMRAM 10BA          start_initialization 0FAC                _TxBufWriteCnt 002F  
           _turnRight90Delay 003C      __end_of_initDCmotorsPWM 0F2C                  __pbssCOMRAM 001A  
                __smallconst 0E00            _I2C_2_Master_Idle 1072            _I2C_2_Master_Init 101E  
          _I2C_2_Master_Stop 10D8                 _RxBufReadCnt 0030           ?_I2C_2_Master_Idle 0001  
         ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001                _headbuttDelay 0034  
   initDCmotorsPWM@PWMperiod 0001                    _rampDelay 0043          ??_I2C_2_Master_Idle 0001  
        ??_I2C_2_Master_Init 0001                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0002  
                   _LATCbits 0F7B                     _LATDbits 0F7C                     _LATEbits 0F7D  
                   _LATFbits 0F7E                     _LATGbits 0F7F                     _LATHbits 0F80  
                   _PIE4bits 0E2D                     _PIR4bits 0E37             ?_initDCmotorsPWM 0001  
                   _SSP2CON2 0EDA                     _SSP2STAT 0ED8    __end_of_I2C_2_Master_Idle 109A  
  __end_of_I2C_2_Master_Init 1048    __end_of_I2C_2_Master_Stop 10E2  I2C_2_Master_Write@data_byte 0002  
               _TxBufReadCnt 002E                    copy_data0 0FC0                     __Hrparam 0000  
                   __Lrparam 0000                   _ANSELDbits 0EA7                     __ptext10 1048  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                 _topGearRight 0041             _color_click_init 0FEA  
                _topGearLeft 0042                   _SSP2DATPPS 0E1D            ??_lights_flashing 0001  
                 _SSP2CLKPPS 0E1C                   _TX4STAbits 0EE8  
