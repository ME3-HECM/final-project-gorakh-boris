

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 18:14:51 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 18/08/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F67K40 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104                           	psect	idataCOMRAM
   105   002EF8                     __pidataCOMRAM:
   106                           	callstack 0
   107                           
   108                           ;initializer for _timer_high_pointer
   109   002EF8  28                 	db	low _trail_timer_high
   110   002EF9  01                 	db	high _trail_timer_high
   111                           
   112                           ;initializer for _topGearRight
   113   002EFA  14                 	db	20
   114                           
   115                           ;initializer for _topGearLeft
   116   002EFB  14                 	db	20
   117                           
   118                           ;initializer for _rampDelay
   119   002EFC  08                 	db	8
   120                           
   121                           ;initializer for _sample_count
   122   002EFD  14                 	db	20
   123                           
   124                           	psect	idataBANK0
   125   002EA0                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _manoeuvre_pointer
   129   002EA0  00                 	db	low _trail_manoeuvre
   130   002EA1  01                 	db	high _trail_manoeuvre
   131                           
   132                           ;initializer for _timer_low_pointer
   133   002EA2  14                 	db	low _trail_timer_low
   134   002EA3  01                 	db	high _trail_timer_low
   135                           
   136                           ;initializer for _squareDelay
   137   002EA4  012C               	dw	300
   138                           
   139                           ;initializer for _headbuttDelay
   140   002EA6  0046               	dw	70
   141                           
   142                           ;initializer for _turn180Delay
   143   002EA8  01FE               	dw	510
   144                           
   145                           ;initializer for _turnRight135Delay
   146   002EAA  012C               	dw	300
   147                           
   148                           ;initializer for _turnLeft135Delay
   149   002EAC  012C               	dw	300
   150                           
   151                           ;initializer for _turnRight90Delay
   152   002EAE  00AF               	dw	175
   153                           
   154                           ;initializer for _turnLeft90Delay
   155   002EB0  00AF               	dw	175
   156                           
   157                           ;initializer for _wall_threshold
   158   002EB2  012C               	dw	300
   159                           
   160                           ;initializer for _turningGear
   161   002EB4  2A                 	db	42
   162   000000                     _TMR0H	set	4052
   163   000000                     _TX4REG	set	3812
   164   000000                     _RC4STAbits	set	3815
   165   000000                     _SP4BRGH	set	3814
   166   000000                     _LATEbits	set	3965
   167   000000                     _TRISEbits	set	3973
   168   000000                     _LATGbits	set	3967
   169   000000                     _TRISGbits	set	3975
   170   000000                     _LATFbits	set	3966
   171   000000                     _LATHbits	set	3968
   172   000000                     _TRISFbits	set	3974
   173   000000                     _TRISHbits	set	3976
   174   000000                     _SSP2CON2bits	set	3802
   175   000000                     _RX4PPS	set	3605
   176   000000                     _SSP2CLKPPS	set	3612
   177   000000                     _SSP2DATPPS	set	3613
   178   000000                     _RC7PPS	set	3689
   179   000000                     _RE2PPS	set	3700
   180   000000                     _LATAbits	set	3961
   181   000000                     _LATDbits	set	3964
   182   000000                     _TRISDbits	set	3972
   183   000000                     _T2PR	set	4028
   184   000000                     _T2CONbits	set	4029
   185   000000                     _CCPR2H	set	4006
   186   000000                     _CCPR1H	set	4010
   187   000000                     _TRISCbits	set	3971
   188   000000                     _TRISAbits	set	3969
   189   000000                     _LATCbits	set	3963
   190   000000                     _RE4PPS	set	3702
   191   000000                     _RG6PPS	set	3720
   192   000000                     _RD5PPS	set	3695
   193   000000                     _ANSELDbits	set	3751
   194   000000                     _SSP2ADD	set	3798
   195   000000                     _SSP2CON1bits	set	3801
   196   000000                     _CCPR4H	set	3873
   197   000000                     _CCPR3H	set	3877
   198   000000                     _TMR0L	set	4051
   199   000000                     _T0CON0bits	set	4053
   200   000000                     _T0CON1bits	set	4054
   201   000000                     _T2CLKCONbits	set	4031
   202   000000                     _T2HLTbits	set	4030
   203   000000                     _CCP1CONbits	set	4011
   204   000000                     _CCPTMRS0bits	set	4013
   205   000000                     _CCP2CONbits	set	4007
   206   000000                     _CCP3CONbits	set	3878
   207   000000                     _CCP4CONbits	set	3874
   208   000000                     _RC4REG	set	3811
   209   000000                     _SP4BRGL	set	3813
   210   000000                     _TX4STAbits	set	3816
   211   000000                     _BAUD4CONbits	set	3817
   212   000000                     _SSP2CON2	set	3802
   213   000000                     _SSP2STAT	set	3800
   214   000000                     _ANSELFbits	set	3764
   215   000000                     _SSP2BUF	set	3797
   216   000000                     _PIE0bits	set	3625
   217   000000                     _PIR4bits	set	3639
   218   000000                     _RC0PPS	set	3682
   219   000000                     _RD6PPS	set	3696
   220   000000                     _INTCONbits	set	4082
   221   000000                     _PIR0bits	set	3635
   222                           
   223                           	psect	smallconst
   224   000E00                     __psmallconst:
   225                           	callstack 0
   226   000E00  00                 	db	0
   227   000E01                     STR_5:
   228                           
   229                           ; BSR set to: 14
   230   000E01  25                 	db	37
   231   000E02  75                 	db	117	;'u'
   232   000E03  20                 	db	32
   233   000E04  25                 	db	37
   234   000E05  75                 	db	117	;'u'
   235   000E06  20                 	db	32
   236   000E07  25                 	db	37
   237   000E08  75                 	db	117	;'u'
   238   000E09  20                 	db	32
   239   000E0A  25                 	db	37
   240   000E0B  75                 	db	117	;'u'
   241   000E0C  20                 	db	32
   242   000E0D  0D                 	db	13
   243   000E0E  00                 	db	0
   244   000E0F                     STR_1:
   245                           
   246                           ; BSR set to: 14
   247   000E0F  25                 	db	37
   248   000E10  64                 	db	100	;'d'
   249   000E11  20                 	db	32
   250   000E12  0D                 	db	13
   251   000E13  00                 	db	0
   252   000E14                     STR_2:
   253                           
   254                           ; BSR set to: 14
   255   000E14  25                 	db	37
   256   000E15  64                 	db	100	;'d'
   257   000E16  20                 	db	32
   258   000E17  00                 	db	0
   259   000E18  00                 	db	0	; dummy byte at the end
   260   000000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264   002880                     __pcinit:
   265                           	callstack 0
   266   002880                     start_initialization:
   267                           	callstack 0
   268   002880                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK0 (21 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273   002880  0EA0               	movlw	low __pidataBANK0
   274   002882  6EF6               	movwf	tblptrl,c
   275   002884  0E2E               	movlw	high __pidataBANK0
   276   002886  6EF7               	movwf	tblptrh,c
   277   002888  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278   00288A  6EF8               	movwf	tblptru,c
   279   00288C  EE00  F0A7         	lfsr	0,__pdataBANK0
   280   002890  EE10 F015          	lfsr	1,21
   281   002894                     copy_data0:
   282   002894  0009               	tblrd		*+
   283   002896  CFF5 FFEE          	movff	tablat,postinc0
   284   00289A  50E5               	movf	postdec1,w,c
   285   00289C  50E1               	movf	fsr1l,w,c
   286   00289E  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (6 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290   0028A0  0EF8               	movlw	low __pidataCOMRAM
   291   0028A2  6EF6               	movwf	tblptrl,c
   292   0028A4  0E2E               	movlw	high __pidataCOMRAM
   293   0028A6  6EF7               	movwf	tblptrh,c
   294   0028A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295   0028AA  6EF8               	movwf	tblptru,c
   296   0028AC  EE00  F054         	lfsr	0,__pdataCOMRAM
   297   0028B0  EE10 F006          	lfsr	1,6
   298   0028B4                     copy_data1:
   299   0028B4  0009               	tblrd		*+
   300   0028B6  CFF5 FFEE          	movff	tablat,postinc0
   301   0028BA  50E5               	movf	postdec1,w,c
   302   0028BC  50E1               	movf	fsr1l,w,c
   303   0028BE  E1FA               	bnz	copy_data1
   304                           
   305                           ; Clear objects allocated to BANK1 (60 bytes)
   306   0028C0  EE01  F000         	lfsr	0,__pbssBANK1
   307   0028C4  0E3C               	movlw	60
   308   0028C6                     clear_0:
   309   0028C6  6AEE               	clrf	postinc0,c
   310   0028C8  06E8               	decf	wreg,f,c
   311   0028CA  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (39 bytes)
   314   0028CC  EE00  F060         	lfsr	0,__pbssBANK0
   315   0028D0  0E27               	movlw	39
   316   0028D2                     clear_1:
   317   0028D2  6AEE               	clrf	postinc0,c
   318   0028D4  06E8               	decf	wreg,f,c
   319   0028D6  E1FD               	bnz	clear_1
   320                           
   321                           ; Clear objects allocated to COMRAM (4 bytes)
   322   0028D8  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   323   0028DA  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   324   0028DC  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   325   0028DE  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   326   0028E0                     end_of_initialization:
   327                           	callstack 0
   328   0028E0                     __end_of__initialization:
   329                           	callstack 0
   330   0028E0  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331   0028E2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332   0028E4  0100               	movlb	0
   333   0028E6  EFE4  F00F         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336   00005A                     __pbssCOMRAM:
   337                           	callstack 0
   338   00005A                     _manoeuvre_count:
   339                           	callstack 0
   340   00005A                     	ds	1
   341   00005B                     _lost_flag:
   342                           	callstack 0
   343   00005B                     	ds	1
   344   00005C                     _return_flag:
   345                           	callstack 0
   346   00005C                     	ds	1
   347   00005D                     _returning:
   348                           	callstack 0
   349   00005D                     	ds	1
   350                           
   351                           	psect	dataCOMRAM
   352   000054                     __pdataCOMRAM:
   353                           	callstack 0
   354   000054                     _timer_high_pointer:
   355                           	callstack 0
   356   000054                     	ds	2
   357   000056                     _topGearRight:
   358                           	callstack 0
   359   000056                     	ds	1
   360   000057                     _topGearLeft:
   361                           	callstack 0
   362   000057                     	ds	1
   363   000058                     _rampDelay:
   364                           	callstack 0
   365   000058                     	ds	1
   366   000059                     _sample_count:
   367                           	callstack 0
   368   000059                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371   000060                     __pbssBANK0:
   372                           	callstack 0
   373   000060                     _dbuf:
   374                           	callstack 0
   375   000060                     	ds	32
   376   000080                     _nout:
   377                           	callstack 0
   378   000080                     	ds	2
   379   000082                     _width:
   380                           	callstack 0
   381   000082                     	ds	2
   382   000084                     _prec:
   383                           	callstack 0
   384   000084                     	ds	2
   385   000086                     _flags:
   386                           	callstack 0
   387   000086                     	ds	1
   388                           
   389                           	psect	dataBANK0
   390   0000A7                     __pdataBANK0:
   391                           	callstack 0
   392   0000A7                     _manoeuvre_pointer:
   393                           	callstack 0
   394   0000A7                     	ds	2
   395   0000A9                     _timer_low_pointer:
   396                           	callstack 0
   397   0000A9                     	ds	2
   398   0000AB                     _squareDelay:
   399                           	callstack 0
   400   0000AB                     	ds	2
   401   0000AD                     _headbuttDelay:
   402                           	callstack 0
   403   0000AD                     	ds	2
   404   0000AF                     _turn180Delay:
   405                           	callstack 0
   406   0000AF                     	ds	2
   407   0000B1                     _turnRight135Delay:
   408                           	callstack 0
   409   0000B1                     	ds	2
   410   0000B3                     _turnLeft135Delay:
   411                           	callstack 0
   412   0000B3                     	ds	2
   413   0000B5                     _turnRight90Delay:
   414                           	callstack 0
   415   0000B5                     	ds	2
   416   0000B7                     _turnLeft90Delay:
   417                           	callstack 0
   418   0000B7                     	ds	2
   419   0000B9                     _wall_threshold:
   420                           	callstack 0
   421   0000B9                     	ds	2
   422   0000BB                     _turningGear:
   423                           	callstack 0
   424   0000BB                     	ds	1
   425                           
   426                           	psect	bssBANK1
   427   000100                     __pbssBANK1:
   428                           	callstack 0
   429   000100                     _trail_manoeuvre:
   430                           	callstack 0
   431   000100                     	ds	20
   432   000114                     _trail_timer_low:
   433                           	callstack 0
   434   000114                     	ds	20
   435   000128                     _trail_timer_high:
   436                           	callstack 0
   437   000128                     	ds	20
   438                           
   439                           	psect	cstackBANK0
   440   000087                     __pcstackBANK0:
   441                           	callstack 0
   442   000087                     main@HSV_colour:
   443                           	callstack 0
   444                           
   445                           ; 6 bytes @ 0x0
   446   000087                     	ds	6
   447   00008D                     main@motorL:
   448                           	callstack 0
   449                           
   450                           ; 9 bytes @ 0x6
   451   00008D                     	ds	9
   452   000096                     main@motorR:
   453                           	callstack 0
   454                           
   455                           ; 9 bytes @ 0xF
   456   000096                     	ds	9
   457   00009F                     main@RGBC_colour:
   458                           	callstack 0
   459                           
   460                           ; 8 bytes @ 0x18
   461   00009F                     	ds	8
   462                           
   463                           	psect	cstackCOMRAM
   464   000001                     __pcstackCOMRAM:
   465                           	callstack 0
   466   000001                     ??_toggle_tricolour_LED:
   467   000001                     ??_I2C_2_Master_Idle:
   468   000001                     ?_max_RGB:
   469                           	callstack 0
   470   000001                     ?_min_RGB:
   471                           	callstack 0
   472   000001                     ?___awdiv:
   473                           	callstack 0
   474   000001                     ?___awmod:
   475                           	callstack 0
   476   000001                     ?___lwdiv:
   477                           	callstack 0
   478   000001                     ?___lwmod:
   479                           	callstack 0
   480   000001                     ?___lmul:
   481                           	callstack 0
   482   000001                     ?___lldiv:
   483                           	callstack 0
   484   000001                     ?___xxtofl:
   485                           	callstack 0
   486   000001                     max_RGB@p:
   487                           	callstack 0
   488   000001                     min_RGB@p:
   489                           	callstack 0
   490   000001                     sendCharSerial4@charToSend:
   491                           	callstack 0
   492   000001                     write_timer@tL:
   493                           	callstack 0
   494   000001                     initDCmotorsPWM@PWMperiod:
   495                           	callstack 0
   496   000001                     ___awdiv@dividend:
   497                           	callstack 0
   498   000001                     ___awmod@dividend:
   499                           	callstack 0
   500   000001                     ___lwdiv@dividend:
   501                           	callstack 0
   502   000001                     ___lwmod@dividend:
   503                           	callstack 0
   504   000001                     fputc@c:
   505                           	callstack 0
   506   000001                     ___lmul@multiplier:
   507                           	callstack 0
   508   000001                     ___lldiv@dividend:
   509                           	callstack 0
   510   000001                     ___xxtofl@val:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x0
   514   000001                     	ds	1
   515   000002                     ??_I2C_2_Master_Read:
   516   000002                     I2C_2_Master_Write@data_byte:
   517                           	callstack 0
   518   000002                     write_timer@tH:
   519                           	callstack 0
   520   000002                     sendStringSerial4@string:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x1
   524   000002                     	ds	1
   525   000003                     color_writetoaddr@value:
   526                           	callstack 0
   527   000003                     I2C_2_Master_Read@ack:
   528                           	callstack 0
   529   000003                     fputc@fp:
   530                           	callstack 0
   531   000003                     ___awdiv@divisor:
   532                           	callstack 0
   533   000003                     ___awmod@divisor:
   534                           	callstack 0
   535   000003                     ___lwdiv@divisor:
   536                           	callstack 0
   537   000003                     ___lwmod@divisor:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2
   541   000003                     	ds	1
   542   000004                     ??_fputc:
   543   000004                     color_writetoaddr@address:
   544                           	callstack 0
   545   000004                     I2C_2_Master_Read@tmp:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x3
   549   000004                     	ds	1
   550   000005                     ??_color_click_init:
   551   000005                     ??___xxtofl:
   552   000005                     ?_color_read_Red:
   553                           	callstack 0
   554   000005                     ?_color_read_Green:
   555                           	callstack 0
   556   000005                     ?_color_read_Blue:
   557                           	callstack 0
   558   000005                     ?_color_read_Clear:
   559                           	callstack 0
   560   000005                     ___awdiv@counter:
   561                           	callstack 0
   562   000005                     ___awmod@counter:
   563                           	callstack 0
   564   000005                     ___lwmod@counter:
   565                           	callstack 0
   566   000005                     max_RGB@max_val:
   567                           	callstack 0
   568   000005                     min_RGB@min_val:
   569                           	callstack 0
   570   000005                     ___lwdiv@quotient:
   571                           	callstack 0
   572   000005                     ___lmul@multiplicand:
   573                           	callstack 0
   574   000005                     ___lldiv@divisor:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x4
   578   000005                     	ds	1
   579   000006                     ___awdiv@sign:
   580                           	callstack 0
   581   000006                     ___awmod@sign:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x5
   585   000006                     	ds	1
   586   000007                     ??_color_read_Red:
   587   000007                     ??_color_read_Green:
   588   000007                     ??_color_read_Blue:
   589   000007                     ??_color_read_Clear:
   590   000007                     ?_abs:
   591                           	callstack 0
   592   000007                     ___lwdiv@counter:
   593                           	callstack 0
   594   000007                     ___awdiv@quotient:
   595                           	callstack 0
   596   000007                     abs@a:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x6
   600   000007                     	ds	2
   601   000009                     ??_abs:
   602   000009                     ___xxtofl@sign:
   603                           	callstack 0
   604   000009                     ___lmul@product:
   605                           	callstack 0
   606   000009                     ___lldiv@quotient:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x8
   610   000009                     	ds	1
   611   00000A                     ___xxtofl@exp:
   612                           	callstack 0
   613   00000A                     color_read_Red@tmp:
   614                           	callstack 0
   615   00000A                     color_read_Green@tmp:
   616                           	callstack 0
   617   00000A                     color_read_Blue@tmp:
   618                           	callstack 0
   619   00000A                     color_read_Clear@tmp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x9
   623   00000A                     	ds	1
   624   00000B                     ?_vfpfcnvrt:
   625                           	callstack 0
   626   00000B                     vfpfcnvrt@fp:
   627                           	callstack 0
   628   00000B                     ___xxtofl@arg:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0xA
   632   00000B                     	ds	1
   633   00000C                     getRGBCval@p:
   634                           	callstack 0
   635   00000C                     vfpfcnvrt@fmt:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0xB
   639   00000C                     	ds	1
   640   00000D                     ___lldiv@counter:
   641                           	callstack 0
   642   00000D                     vfpfcnvrt@ap:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0xC
   646   00000D                     	ds	1
   647   00000E                     ??_vfpfcnvrt:
   648   00000E                     average_RGBC@p:
   649                           	callstack 0
   650   00000E                     convert_HSV@p1:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0xD
   654   00000E                     	ds	1
   655   00000F                     ??_average_RGBC:
   656   00000F                     ?___flmul:
   657                           	callstack 0
   658   00000F                     convert_HSV@p2:
   659                           	callstack 0
   660   00000F                     ___flmul@b:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0xE
   664   00000F                     	ds	1
   665   000010                     ??_convert_HSV:
   666   000010                     vfpfcnvrt@done:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0xF
   670   000010                     	ds	1
   671   000011                     average_RGBC@i:
   672                           	callstack 0
   673   000011                     vfpfcnvrt@cnt:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x10
   677   000011                     	ds	1
   678   000012                     average_RGBC@temp_R:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x11
   682   000012                     	ds	1
   683   000013                     vfpfcnvrt@cp:
   684                           	callstack 0
   685   000013                     ___flmul@a:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x12
   689   000013                     	ds	1
   690   000014                     vfpfcnvrt@convarg:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x13
   694   000014                     	ds	2
   695   000016                     average_RGBC@temp_G:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x15
   699   000016                     	ds	1
   700   000017                     ??___flmul:
   701                           
   702                           ; 1 bytes @ 0x16
   703   000017                     	ds	1
   704   000018                     vfpfcnvrt@c:
   705                           	callstack 0
   706   000018                     convert_HSV@sat_scale:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x17
   710   000018                     	ds	1
   711   000019                     ?_vfprintf:
   712                           	callstack 0
   713   000019                     vfprintf@fp:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x18
   717   000019                     	ds	1
   718   00001A                     vfprintf@fmt:
   719                           	callstack 0
   720   00001A                     convert_HSV@m:
   721                           	callstack 0
   722   00001A                     average_RGBC@temp_B:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x19
   726   00001A                     	ds	1
   727   00001B                     ___flmul@sign:
   728                           	callstack 0
   729   00001B                     vfprintf@ap:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x1A
   733   00001B                     	ds	1
   734   00001C                     vfprintf@cfmt:
   735                           	callstack 0
   736   00001C                     convert_HSV@sat:
   737                           	callstack 0
   738   00001C                     ___flmul@grs:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x1B
   742   00001C                     	ds	1
   743   00001D                     ?_sprintf:
   744                           	callstack 0
   745   00001D                     sprintf@s:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x1C
   749   00001D                     	ds	1
   750   00001E                     convert_HSV@hue:
   751                           	callstack 0
   752   00001E                     average_RGBC@temp_C:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x1D
   756   00001E                     	ds	1
   757   00001F                     sprintf@fmt:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x1E
   761   00001F                     	ds	1
   762   000020                     ___flmul@aexp:
   763                           	callstack 0
   764   000020                     convert_HSV@temp_614:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x1F
   768   000020                     	ds	1
   769   000021                     ___flmul@bexp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x20
   773   000021                     	ds	1
   774   000022                     ___flmul@prod:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x21
   778   000022                     	ds	2
   779   000024                     convert_HSV@temp:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x23
   783   000024                     	ds	2
   784   000026                     ___flmul@temp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x25
   788   000026                     	ds	2
   789   000028                     ?___fltol:
   790                           	callstack 0
   791   000028                     sprintf@ret:
   792                           	callstack 0
   793   000028                     convert_HSV@temp_610:
   794                           	callstack 0
   795   000028                     ___fltol@f1:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x27
   799   000028                     	ds	2
   800   00002A                     sprintf@ap:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x29
   804   00002A                     	ds	1
   805   00002B                     sprintf@f:
   806                           	callstack 0
   807                           
   808                           ; 12 bytes @ 0x2A
   809   00002B                     	ds	1
   810   00002C                     ??___fltol:
   811   00002C                     convert_HSV@temp_611:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x2B
   815   00002C                     	ds	4
   816   000030                     ___fltol@sign1:
   817                           	callstack 0
   818   000030                     convert_HSV@temp_612:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x2F
   822   000030                     	ds	1
   823   000031                     ___fltol@exp1:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x30
   827   000031                     	ds	1
   828   000032                     scale_RGB@p:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x31
   832   000032                     	ds	1
   833   000033                     ??_scale_RGB:
   834                           
   835                           ; 1 bytes @ 0x32
   836   000033                     	ds	1
   837   000034                     convert_HSV@temp_613:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x33
   841   000034                     	ds	3
   842   000037                     sendRGBCvalSerial4@col_val:
   843                           	callstack 0
   844   000037                     sendHSVvalSerial4@col_val:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x36
   848   000037                     	ds	1
   849   000038                     convert_HSV@temp_609:
   850                           	callstack 0
   851   000038                     sendHSVvalSerial4@tempStr:
   852                           	callstack 0
   853   000038                     sendRGBCvalSerial4@tempStr:
   854                           	callstack 0
   855                           
   856                           ; 26 bytes @ 0x37
   857   000038                     	ds	4
   858   00003C                     convert_HSV@hue_scale:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3B
   862   00003C                     	ds	2
   863   00003E                     convert_HSV@M:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x3D
   867   00003E                     	ds	2
   868   000040                     convert_HSV@C:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3F
   872   000040                     	ds	18
   873   000052                     ??_main:
   874                           
   875                           ; 1 bytes @ 0x51
   876   000052                     	ds	2
   877                           
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 27 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  motorR          9   15[BANK0 ] struct DC_motor
   888 ;;  motorL          9    6[BANK0 ] struct DC_motor
   889 ;;  RGBC_colour     8   24[BANK0 ] struct RGBC_val
   890 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   891 ;;  PWMcycle        2    0        unsigned int 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;Total ram usage:       34 bytes
   906 ;; Hardware stack levels required when called: 7
   907 ;; This function calls:
   908 ;;		_Timer0_init
   909 ;;		_average_RGBC
   910 ;;		_buggy_lights_init
   911 ;;		_color_click_init
   912 ;;		_convert_HSV
   913 ;;		_initDCmotorsPWM
   914 ;;		_initUSART4
   915 ;;		_scale_RGB
   916 ;;		_sendHSVvalSerial4
   917 ;;		_sendRGBCvalSerial4
   918 ;;		_toggle_tricolour_LED
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text0
   925   001FC8                     __ptext0:
   926                           	callstack 0
   927   001FC8                     _main:
   928                           	callstack 24
   929   001FC8                     
   930                           ;main.c: 28:     struct RGBC_val RGBC_colour;;main.c: 29:         RGBC_colour.R = 0;
   931   001FC8  0E00               	movlw	0
   932   001FCA  0100               	movlb	0	; () banked
   933   001FCC  6FA0               	movwf	(main@RGBC_colour+1)& (0+255),b
   934   001FCE  0E00               	movlw	0
   935   001FD0  6F9F               	movwf	main@RGBC_colour& (0+255),b
   936                           
   937                           ;main.c: 30:         RGBC_colour.G = 0;
   938   001FD2  0E00               	movlw	0
   939   001FD4  6FA2               	movwf	(main@RGBC_colour+3)& (0+255),b
   940   001FD6  0E00               	movlw	0
   941   001FD8  6FA1               	movwf	(main@RGBC_colour+2)& (0+255),b
   942                           
   943                           ;main.c: 31:         RGBC_colour.B = 0;
   944   001FDA  0E00               	movlw	0
   945   001FDC  6FA4               	movwf	(main@RGBC_colour+5)& (0+255),b
   946   001FDE  0E00               	movlw	0
   947   001FE0  6FA3               	movwf	(main@RGBC_colour+4)& (0+255),b
   948                           
   949                           ;main.c: 32:         RGBC_colour.C = 0;
   950   001FE2  0E00               	movlw	0
   951   001FE4  6FA6               	movwf	(main@RGBC_colour+7)& (0+255),b
   952   001FE6  0E00               	movlw	0
   953   001FE8  6FA5               	movwf	(main@RGBC_colour+6)& (0+255),b
   954                           
   955                           ;main.c: 34:     struct HSV_val HSV_colour;;main.c: 35:         HSV_colour.H = 0;
   956   001FEA  0E00               	movlw	0
   957   001FEC  6F88               	movwf	(main@HSV_colour+1)& (0+255),b
   958   001FEE  0E00               	movlw	0
   959   001FF0  6F87               	movwf	main@HSV_colour& (0+255),b
   960                           
   961                           ;main.c: 36:         HSV_colour.S = 0;
   962   001FF2  0E00               	movlw	0
   963   001FF4  6F8A               	movwf	(main@HSV_colour+3)& (0+255),b
   964   001FF6  0E00               	movlw	0
   965   001FF8  6F89               	movwf	(main@HSV_colour+2)& (0+255),b
   966                           
   967                           ;main.c: 37:         HSV_colour.V = 0;
   968   001FFA  0E00               	movlw	0
   969   001FFC  6F8C               	movwf	(main@HSV_colour+5)& (0+255),b
   970   001FFE  0E00               	movlw	0
   971   002000  6F8B               	movwf	(main@HSV_colour+4)& (0+255),b
   972                           
   973                           ;main.c: 40:     struct DC_motor motorL, motorR;;main.c: 41:         motorL.power = 0;
   974   002002  0E00               	movlw	0
   975   002004  6F8D               	movwf	main@motorL& (0+255),b
   976                           
   977                           ;main.c: 42:         motorL.direction = 1;
   978   002006  0E01               	movlw	1
   979   002008  6F8E               	movwf	(main@motorL+1)& (0+255),b
   980                           
   981                           ;main.c: 43:         motorL.brakemode = 1;
   982   00200A  0E01               	movlw	1
   983   00200C  6F8F               	movwf	(main@motorL+2)& (0+255),b
   984   00200E                     
   985                           ; BSR set to: 0
   986                           ;main.c: 44:         motorL.PWMperiod = PWMcycle;
   987   00200E  0E00               	movlw	0
   988   002010  6F91               	movwf	(main@motorL+4)& (0+255),b
   989   002012  0E63               	movlw	99
   990   002014  6F90               	movwf	(main@motorL+3)& (0+255),b
   991   002016                     
   992                           ; BSR set to: 0
   993                           ;main.c: 45:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   994   002016  0EAA               	movlw	170
   995   002018  6F92               	movwf	(main@motorL+5)& (0+255),b
   996   00201A  0E0F               	movlw	15
   997   00201C  6F93               	movwf	(main@motorL+6)& (0+255),b
   998   00201E                     
   999                           ; BSR set to: 0
  1000                           ;main.c: 46:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1001   00201E  0EA6               	movlw	166
  1002   002020  6F94               	movwf	(main@motorL+7)& (0+255),b
  1003   002022  0E0F               	movlw	15
  1004   002024  6F95               	movwf	(main@motorL+8)& (0+255),b
  1005                           
  1006                           ;main.c: 47:         motorR.power = 0;
  1007   002026  0E00               	movlw	0
  1008   002028  6F96               	movwf	main@motorR& (0+255),b
  1009                           
  1010                           ;main.c: 48:         motorR.direction = 1;
  1011   00202A  0E01               	movlw	1
  1012   00202C  6F97               	movwf	(main@motorR+1)& (0+255),b
  1013                           
  1014                           ;main.c: 49:         motorR.brakemode = 1;
  1015   00202E  0E01               	movlw	1
  1016   002030  6F98               	movwf	(main@motorR+2)& (0+255),b
  1017   002032                     
  1018                           ; BSR set to: 0
  1019                           ;main.c: 50:         motorR.PWMperiod = PWMcycle;
  1020   002032  0E00               	movlw	0
  1021   002034  6F9A               	movwf	(main@motorR+4)& (0+255),b
  1022   002036  0E63               	movlw	99
  1023   002038  6F99               	movwf	(main@motorR+3)& (0+255),b
  1024   00203A                     
  1025                           ; BSR set to: 0
  1026                           ;main.c: 51:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1027   00203A  0E25               	movlw	37
  1028   00203C  6F9B               	movwf	(main@motorR+5)& (0+255),b
  1029   00203E  0E0F               	movlw	15
  1030   002040  6F9C               	movwf	(main@motorR+6)& (0+255),b
  1031   002042                     
  1032                           ; BSR set to: 0
  1033                           ;main.c: 52:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1034   002042  0E21               	movlw	33
  1035   002044  6F9D               	movwf	(main@motorR+7)& (0+255),b
  1036   002046  0E0F               	movlw	15
  1037   002048  6F9E               	movwf	(main@motorR+8)& (0+255),b
  1038   00204A                     
  1039                           ; BSR set to: 0
  1040                           ;main.c: 55:     initDCmotorsPWM(PWMcycle);
  1041   00204A  0E00               	movlw	0
  1042   00204C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1043   00204E  0E63               	movlw	99
  1044   002050  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1045   002052  EC42  F013         	call	_initDCmotorsPWM	;wreg free
  1046                           
  1047                           ;main.c: 56:     buggy_lights_init();
  1048   002056  ECD3  F016         	call	_buggy_lights_init	;wreg free
  1049   00205A                     
  1050                           ;main.c: 57:     color_click_init();
  1051   00205A  ECB9  F016         	call	_color_click_init	;wreg free
  1052   00205E                     
  1053                           ;main.c: 58:     initUSART4();
  1054   00205E  EC35  F017         	call	_initUSART4	;wreg free
  1055   002062                     
  1056                           ;main.c: 59:     Timer0_init();
  1057   002062  EC13  F017         	call	_Timer0_init	;wreg free
  1058   002066                     
  1059                           ;main.c: 63:         TRISDbits.TRISD7 = 0;
  1060   002066  9E84               	bcf	132,7,c	;volatile
  1061   002068                     
  1062                           ;main.c: 64:         TRISHbits.TRISH3 = 0;
  1063   002068  9688               	bcf	136,3,c	;volatile
  1064   00206A                     
  1065                           ;main.c: 66:         LATDbits.LATD7 = 0;
  1066   00206A  9E7C               	bcf	124,7,c	;volatile
  1067   00206C                     
  1068                           ;main.c: 67:         LATHbits.LATH3 = 0;
  1069   00206C  9680               	bcf	128,3,c	;volatile
  1070   00206E                     
  1071                           ;main.c: 71:         TRISFbits.TRISF2 = 1;
  1072   00206E  8486               	bsf	134,2,c	;volatile
  1073   002070                     
  1074                           ;main.c: 72:         TRISFbits.TRISF3 = 1;
  1075   002070  8686               	bsf	134,3,c	;volatile
  1076   002072                     
  1077                           ;main.c: 74:         ANSELFbits.ANSELF2 = 0;
  1078   002072  010E               	movlb	14	; () banked
  1079   002074  95B4               	bcf	180,2,b	;volatile
  1080   002076                     
  1081                           ; BSR set to: 14
  1082                           ;main.c: 75:         ANSELFbits.ANSELF3 = 0;
  1083   002076  97B4               	bcf	180,3,b	;volatile
  1084                           
  1085                           ;main.c: 80:     LATDbits.LATD7 = !LATDbits.LATD7;
  1086   002078  AE7C               	btfss	124,7,c	;volatile
  1087   00207A  EF41  F010         	goto	u3691
  1088   00207E  EF45  F010         	goto	u3690
  1089   002082                     u3691:
  1090   002082  6A52               	clrf	??_main^0,c
  1091   002084  2A52               	incf	??_main^0,f,c
  1092   002086  EF46  F010         	goto	u3708
  1093   00208A                     u3690:
  1094   00208A  6A52               	clrf	??_main^0,c
  1095   00208C                     u3708:
  1096   00208C  3252               	rrcf	??_main^0,f,c
  1097   00208E  3252               	rrcf	??_main^0,f,c
  1098   002090  507C               	movf	124,w,c	;volatile
  1099   002092  1852               	xorwf	??_main^0,w,c
  1100   002094  0B7F               	andlw	-129
  1101   002096  1852               	xorwf	??_main^0,w,c
  1102   002098  6E7C               	movwf	124,c	;volatile
  1103                           
  1104                           ;main.c: 81:     LATHbits.LATH3 = !LATHbits.LATH3;
  1105   00209A  A680               	btfss	128,3,c	;volatile
  1106   00209C  EF52  F010         	goto	u3711
  1107   0020A0  EF56  F010         	goto	u3710
  1108   0020A4                     u3711:
  1109   0020A4  6A52               	clrf	??_main^0,c
  1110   0020A6  2A52               	incf	??_main^0,f,c
  1111   0020A8  EF57  F010         	goto	u3728
  1112   0020AC                     u3710:
  1113   0020AC  6A52               	clrf	??_main^0,c
  1114   0020AE                     u3728:
  1115   0020AE  4652               	rlncf	??_main^0,f,c
  1116   0020B0  4652               	rlncf	??_main^0,f,c
  1117   0020B2  4652               	rlncf	??_main^0,f,c
  1118   0020B4  5080               	movf	128,w,c	;volatile
  1119   0020B6  1852               	xorwf	??_main^0,w,c
  1120   0020B8  0BF7               	andlw	-9
  1121   0020BA  1852               	xorwf	??_main^0,w,c
  1122   0020BC  6E80               	movwf	128,c	;volatile
  1123   0020BE                     
  1124                           ;main.c: 82:     toggle_tricolour_LED();
  1125   0020BE  EC75  F011         	call	_toggle_tricolour_LED	;wreg free
  1126   0020C2                     l4278:
  1127                           
  1128                           ;main.c: 87:         average_RGBC(&RGBC_colour);
  1129   0020C2  0E9F               	movlw	low main@RGBC_colour
  1130   0020C4  6E0E               	movwf	average_RGBC@p^0,c
  1131   0020C6  EC0E  F00E         	call	_average_RGBC	;wreg free
  1132   0020CA                     
  1133                           ;main.c: 88:         scale_RGB(&RGBC_colour);
  1134   0020CA  0E9F               	movlw	low main@RGBC_colour
  1135   0020CC  6E32               	movwf	scale_RGB@p^0,c
  1136   0020CE  EC0A  F011         	call	_scale_RGB	;wreg free
  1137   0020D2                     
  1138                           ;main.c: 89:         convert_HSV(&HSV_colour, &RGBC_colour);
  1139   0020D2  0E87               	movlw	low main@HSV_colour
  1140   0020D4  6E0E               	movwf	convert_HSV@p1^0,c
  1141   0020D6  0E9F               	movlw	low main@RGBC_colour
  1142   0020D8  6E0F               	movwf	convert_HSV@p2^0,c
  1143   0020DA  EC0D  F007         	call	_convert_HSV	;wreg free
  1144   0020DE                     
  1145                           ;main.c: 90:         sendRGBCvalSerial4(&RGBC_colour);
  1146   0020DE  0E9F               	movlw	low main@RGBC_colour
  1147   0020E0  6E37               	movwf	sendRGBCvalSerial4@col_val^0,c
  1148   0020E2  EC0D  F015         	call	_sendRGBCvalSerial4	;wreg free
  1149   0020E6                     
  1150                           ;main.c: 91:         sendHSVvalSerial4(&HSV_colour);
  1151   0020E6  0E87               	movlw	low main@HSV_colour
  1152   0020E8  6E37               	movwf	sendHSVvalSerial4@col_val^0,c
  1153   0020EA  EC32  F016         	call	_sendHSVvalSerial4	;wreg free
  1154   0020EE                     
  1155                           ;main.c: 92:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1156   0020EE  0E29               	movlw	41
  1157   0020F0  6E53               	movwf	(??_main+1)^0,c
  1158   0020F2  0E96               	movlw	150
  1159   0020F4  6E52               	movwf	??_main^0,c
  1160   0020F6  0E7F               	movlw	127
  1161   0020F8                     u3887:
  1162   0020F8  2EE8               	decfsz	wreg,f,c
  1163   0020FA  D7FE               	bra	u3887
  1164   0020FC  2E52               	decfsz	??_main^0,f,c
  1165   0020FE  D7FC               	bra	u3887
  1166   002100  2E53               	decfsz	(??_main+1)^0,f,c
  1167   002102  D7FA               	bra	u3887
  1168   002104  0000               	nop	
  1169   002106  EF61  F010         	goto	l4278
  1170   00210A  EF1E  F000         	goto	start
  1171   00210E                     __end_of_main:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _toggle_tricolour_LED *****************
  1175 ;; Defined at:
  1176 ;;		line 84 in file "buggy_lights.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;Total ram usage:        1 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text1
  1205   0022EA                     __ptext1:
  1206                           	callstack 0
  1207   0022EA                     _toggle_tricolour_LED:
  1208                           	callstack 29
  1209   0022EA                     
  1210                           ;buggy_lights.c: 88:         LATGbits.LATG1 = !LATGbits.LATG1;
  1211   0022EA  A27F               	btfss	127,1,c	;volatile
  1212   0022EC  EF7A  F011         	goto	u3051
  1213   0022F0  EF7E  F011         	goto	u3050
  1214   0022F4                     u3051:
  1215   0022F4  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1216   0022F6  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1217   0022F8  EF7F  F011         	goto	u3068
  1218   0022FC                     u3050:
  1219   0022FC  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1220   0022FE                     u3068:
  1221   0022FE  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1222   002300  507F               	movf	127,w,c	;volatile
  1223   002302  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1224   002304  0BFD               	andlw	-3
  1225   002306  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1226   002308  6E7F               	movwf	127,c	;volatile
  1227                           
  1228                           ;buggy_lights.c: 89:         LATAbits.LATA4 = !LATAbits.LATA4;
  1229   00230A  A879               	btfss	121,4,c	;volatile
  1230   00230C  EF8A  F011         	goto	u3071
  1231   002310  EF8E  F011         	goto	u3070
  1232   002314                     u3071:
  1233   002314  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1234   002316  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1235   002318  EF8F  F011         	goto	u3088
  1236   00231C                     u3070:
  1237   00231C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1238   00231E                     u3088:
  1239   00231E  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1240   002320  5079               	movf	121,w,c	;volatile
  1241   002322  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1242   002324  0BEF               	andlw	-17
  1243   002326  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1244   002328  6E79               	movwf	121,c	;volatile
  1245                           
  1246                           ;buggy_lights.c: 90:         LATFbits.LATF7 = !LATFbits.LATF7;
  1247   00232A  AE7E               	btfss	126,7,c	;volatile
  1248   00232C  EF9A  F011         	goto	u3091
  1249   002330  EF9E  F011         	goto	u3090
  1250   002334                     u3091:
  1251   002334  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1252   002336  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1253   002338  EF9F  F011         	goto	u3108
  1254   00233C                     u3090:
  1255   00233C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1256   00233E                     u3108:
  1257   00233E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1258   002340  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1259   002342  507E               	movf	126,w,c	;volatile
  1260   002344  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1261   002346  0B7F               	andlw	-129
  1262   002348  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1263   00234A  6E7E               	movwf	126,c	;volatile
  1264                           
  1265                           ;buggy_lights.c: 93:         LATGbits.LATG0 = !LATGbits.LATG0;
  1266   00234C  A07F               	btfss	127,0,c	;volatile
  1267   00234E  EFAB  F011         	goto	u3111
  1268   002352  EFAF  F011         	goto	u3110
  1269   002356                     u3111:
  1270   002356  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1271   002358  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1272   00235A  EFB0  F011         	goto	u3128
  1273   00235E                     u3110:
  1274   00235E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1275   002360                     u3128:
  1276   002360  507F               	movf	127,w,c	;volatile
  1277   002362  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1278   002364  0BFE               	andlw	-2
  1279   002366  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1280   002368  6E7F               	movwf	127,c	;volatile
  1281                           
  1282                           ;buggy_lights.c: 94:         LATEbits.LATE7 = !LATEbits.LATE7;
  1283   00236A  AE7D               	btfss	125,7,c	;volatile
  1284   00236C  EFBA  F011         	goto	u3131
  1285   002370  EFBE  F011         	goto	u3130
  1286   002374                     u3131:
  1287   002374  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1288   002376  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1289   002378  EFBF  F011         	goto	u3148
  1290   00237C                     u3130:
  1291   00237C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1292   00237E                     u3148:
  1293   00237E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1294   002380  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1295   002382  507D               	movf	125,w,c	;volatile
  1296   002384  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1297   002386  0B7F               	andlw	-129
  1298   002388  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1299   00238A  6E7D               	movwf	125,c	;volatile
  1300                           
  1301                           ;buggy_lights.c: 95:         LATAbits.LATA3 = !LATAbits.LATA3;
  1302   00238C  A679               	btfss	121,3,c	;volatile
  1303   00238E  EFCB  F011         	goto	u3151
  1304   002392  EFCF  F011         	goto	u3150
  1305   002396                     u3151:
  1306   002396  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1307   002398  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1308   00239A  EFD0  F011         	goto	u3168
  1309   00239E                     u3150:
  1310   00239E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1311   0023A0                     u3168:
  1312   0023A0  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1313   0023A2  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1314   0023A4  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1315   0023A6  5079               	movf	121,w,c	;volatile
  1316   0023A8  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1317   0023AA  0BF7               	andlw	-9
  1318   0023AC  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1319   0023AE  6E79               	movwf	121,c	;volatile
  1320   0023B0  0012               	return		;funcret
  1321   0023B2                     __end_of_toggle_tricolour_LED:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _sendRGBCvalSerial4 *****************
  1325 ;; Defined at:
  1326 ;;		line 75 in file "serial.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  col_val         1   54[COMRAM] PTR struct RGBC_val
  1329 ;;		 -> main@RGBC_colour(8), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  tempStr        26   55[COMRAM] unsigned char [26]
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1344 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;Total ram usage:       27 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 6
  1348 ;; This function calls:
  1349 ;;		_sendStringSerial4
  1350 ;;		_sprintf
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;;		_forward_navigation
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text2
  1358   002A1A                     __ptext2:
  1359                           	callstack 0
  1360   002A1A                     _sendRGBCvalSerial4:
  1361                           	callstack 24
  1362   002A1A                     
  1363                           ;serial.c: 76:     char tempStr[26];;serial.c: 78:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1364   002A1A  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1365   002A1C  6E1D               	movwf	sprintf@s^0,c
  1366   002A1E  6A1E               	clrf	(sprintf@s+1)^0,c
  1367   002A20  0E01               	movlw	low STR_5
  1368   002A22  6E1F               	movwf	sprintf@fmt^0,c
  1369   002A24  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1370   002A26  6ED9               	movwf	fsr2l,c
  1371   002A28  6ADA               	clrf	fsr2h,c
  1372   002A2A  CFDE F020          	movff	postinc2,?_sprintf+3
  1373   002A2E  CFDD F021          	movff	postdec2,?_sprintf+4
  1374   002A32  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1375   002A34  6ED9               	movwf	fsr2l,c
  1376   002A36  6ADA               	clrf	fsr2h,c
  1377   002A38  0E02               	movlw	2
  1378   002A3A  26D9               	addwf	fsr2l,f,c
  1379   002A3C  CFDE F022          	movff	postinc2,?_sprintf+5
  1380   002A40  CFDD F023          	movff	postdec2,?_sprintf+6
  1381   002A44  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1382   002A46  6ED9               	movwf	fsr2l,c
  1383   002A48  6ADA               	clrf	fsr2h,c
  1384   002A4A  0E04               	movlw	4
  1385   002A4C  26D9               	addwf	fsr2l,f,c
  1386   002A4E  CFDE F024          	movff	postinc2,?_sprintf+7
  1387   002A52  CFDD F025          	movff	postdec2,?_sprintf+8
  1388   002A56  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1389   002A58  6ED9               	movwf	fsr2l,c
  1390   002A5A  6ADA               	clrf	fsr2h,c
  1391   002A5C  0E06               	movlw	6
  1392   002A5E  26D9               	addwf	fsr2l,f,c
  1393   002A60  CFDE F026          	movff	postinc2,?_sprintf+9
  1394   002A64  CFDD F027          	movff	postdec2,?_sprintf+10
  1395   002A68  EC58  F016         	call	_sprintf	;wreg free
  1396   002A6C                     
  1397                           ;serial.c: 79:     sendStringSerial4(tempStr);
  1398   002A6C  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1399   002A6E  6E02               	movwf	sendStringSerial4@string^0,c
  1400   002A70  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1401   002A72  ECDC  F014         	call	_sendStringSerial4	;wreg free
  1402   002A76  0012               	return		;funcret
  1403   002A78                     __end_of_sendRGBCvalSerial4:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _sendHSVvalSerial4 *****************
  1407 ;; Defined at:
  1408 ;;		line 85 in file "serial.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  col_val         1   54[COMRAM] PTR struct HSV_val
  1411 ;;		 -> main@HSV_colour(6), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  tempStr        21   55[COMRAM] unsigned char [21]
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;Total ram usage:       22 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 6
  1430 ;; This function calls:
  1431 ;;		_sendStringSerial4
  1432 ;;		_sprintf
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;;		_forward_navigation
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text3
  1440   002C64                     __ptext3:
  1441                           	callstack 0
  1442   002C64                     _sendHSVvalSerial4:
  1443                           	callstack 24
  1444   002C64                     
  1445                           ;serial.c: 86:     char tempStr[21];;serial.c: 88:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  1446   002C64  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1447   002C66  6E1D               	movwf	sprintf@s^0,c
  1448   002C68  6A1E               	clrf	(sprintf@s+1)^0,c
  1449   002C6A  0E04               	movlw	low (STR_5+3)
  1450   002C6C  6E1F               	movwf	sprintf@fmt^0,c
  1451   002C6E  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1452   002C70  6ED9               	movwf	fsr2l,c
  1453   002C72  6ADA               	clrf	fsr2h,c
  1454   002C74  CFDE F020          	movff	postinc2,?_sprintf+3
  1455   002C78  CFDD F021          	movff	postdec2,?_sprintf+4
  1456   002C7C  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1457   002C7E  6ED9               	movwf	fsr2l,c
  1458   002C80  6ADA               	clrf	fsr2h,c
  1459   002C82  0E02               	movlw	2
  1460   002C84  26D9               	addwf	fsr2l,f,c
  1461   002C86  CFDE F022          	movff	postinc2,?_sprintf+5
  1462   002C8A  CFDD F023          	movff	postdec2,?_sprintf+6
  1463   002C8E  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1464   002C90  6ED9               	movwf	fsr2l,c
  1465   002C92  6ADA               	clrf	fsr2h,c
  1466   002C94  0E04               	movlw	4
  1467   002C96  26D9               	addwf	fsr2l,f,c
  1468   002C98  CFDE F024          	movff	postinc2,?_sprintf+7
  1469   002C9C  CFDD F025          	movff	postdec2,?_sprintf+8
  1470   002CA0  EC58  F016         	call	_sprintf	;wreg free
  1471   002CA4                     
  1472                           ;serial.c: 89:     sendStringSerial4(tempStr);
  1473   002CA4  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1474   002CA6  6E02               	movwf	sendStringSerial4@string^0,c
  1475   002CA8  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1476   002CAA  ECDC  F014         	call	_sendStringSerial4	;wreg free
  1477   002CAE  0012               	return		;funcret
  1478   002CB0                     __end_of_sendHSVvalSerial4:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _sprintf *****************
  1482 ;; Defined at:
  1483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  s               2   28[COMRAM] PTR unsigned char 
  1486 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1487 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1488 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  f              12   42[COMRAM] struct _IO_FILE
  1491 ;;  ret             2   39[COMRAM] int 
  1492 ;;  ap              1   41[COMRAM] PTR void [1]
  1493 ;;		 -> ?_sprintf(2), 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  2   28[COMRAM] int 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1503 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;Total ram usage:       26 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 5
  1510 ;; This function calls:
  1511 ;;		_vfprintf
  1512 ;; This function is called by:
  1513 ;;		_sendRGBCvalSerial4
  1514 ;;		_sendHSVvalSerial4
  1515 ;;		_sendIntSerial4
  1516 ;;		_sendArrayCharSerial4
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text4
  1521   002CB0                     __ptext4:
  1522                           	callstack 0
  1523   002CB0                     _sprintf:
  1524                           	callstack 24
  1525   002CB0  0E20               	movlw	low (?_sprintf+3)
  1526   002CB2  6E2A               	movwf	sprintf@ap^0,c
  1527   002CB4  C01D  F02B         	movff	sprintf@s,sprintf@f
  1528   002CB8  C01E  F02C         	movff	sprintf@s+1,sprintf@f+1
  1529   002CBC  0E00               	movlw	0
  1530   002CBE  6E2F               	movwf	(sprintf@f+4)^0,c
  1531   002CC0  0E00               	movlw	0
  1532   002CC2  6E2E               	movwf	(sprintf@f+3)^0,c
  1533   002CC4  0E00               	movlw	0
  1534   002CC6  6E36               	movwf	(sprintf@f+11)^0,c
  1535   002CC8  0E00               	movlw	0
  1536   002CCA  6E35               	movwf	(sprintf@f+10)^0,c
  1537   002CCC  0E2B               	movlw	low sprintf@f
  1538   002CCE  6E19               	movwf	vfprintf@fp^0,c
  1539   002CD0  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  1540   002CD4  0E2A               	movlw	low sprintf@ap
  1541   002CD6  6E1B               	movwf	vfprintf@ap^0,c
  1542   002CD8  EC3C  F015         	call	_vfprintf	;wreg free
  1543   002CDC  C019  F028         	movff	?_vfprintf,sprintf@ret
  1544   002CE0  C01A  F029         	movff	?_vfprintf+1,sprintf@ret+1
  1545   002CE4  502E               	movf	(sprintf@f+3)^0,w,c
  1546   002CE6  241D               	addwf	sprintf@s^0,w,c
  1547   002CE8  6ED9               	movwf	fsr2l,c
  1548   002CEA  502F               	movf	(sprintf@f+4)^0,w,c
  1549   002CEC  201E               	addwfc	(sprintf@s+1)^0,w,c
  1550   002CEE  6EDA               	movwf	fsr2h,c
  1551   002CF0  6ADF               	clrf	indf2,c
  1552   002CF2  C028  F01D         	movff	sprintf@ret,?_sprintf
  1553   002CF6  C029  F01E         	movff	sprintf@ret+1,?_sprintf+1
  1554   002CFA  0012               	return		;funcret
  1555   002CFC                     __end_of_sprintf:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _vfprintf *****************
  1559 ;; Defined at:
  1560 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1563 ;;		 -> sprintf@f(12), 
  1564 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1565 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1566 ;;  ap              1   26[COMRAM] PTR PTR void 
  1567 ;;		 -> sprintf@ap(1), 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1570 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2   24[COMRAM] int 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1580 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1584 ;;Total ram usage:        4 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 4
  1587 ;; This function calls:
  1588 ;;		_vfpfcnvrt
  1589 ;; This function is called by:
  1590 ;;		_sprintf
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text5
  1595   002A78                     __ptext5:
  1596                           	callstack 0
  1597   002A78                     _vfprintf:
  1598                           	callstack 24
  1599   002A78                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1601   002A78  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1602   002A7C                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1604   002A7C  0E00               	movlw	0
  1605   002A7E  0100               	movlb	0	; () banked
  1606   002A80  6F81               	movwf	(_nout+1)& (0+255),b
  1607   002A82  0E00               	movlw	0
  1608   002A84  6F80               	movwf	_nout& (0+255),b
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1611   002A86  EF52  F015         	goto	l3414
  1612   002A8A                     l3412:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1616   002A8A  C019  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1617   002A8E  0E1C               	movlw	low vfprintf@cfmt
  1618   002A90  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1619   002A92  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1620   002A96  EC88  F00C         	call	_vfpfcnvrt	;wreg free
  1621   002A9A  500B               	movf	?_vfpfcnvrt^0,w,c
  1622   002A9C  0100               	movlb	0	; () banked
  1623   002A9E  2780               	addwf	_nout& (0+255),f,b
  1624   002AA0  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1625   002AA2  2381               	addwfc	(_nout+1)& (0+255),f,b
  1626   002AA4                     l3414:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1630   002AA4  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1631   002AA8                     	if	1	;There is more than 1 active tblptr byte
  1632   002AA8  0E0E               	movlw	high __smallconst
  1633   002AAA  6EF7               	movwf	tblptrh,c
  1634   002AAC                     	endif
  1635   002AAC                     	if	0	;tblptru may be non-zero
  1636   002AAC                     	endif
  1637   002AAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1638   002AAC  0E00               	movlw	low (__smallconst shr (0+16))
  1639   002AAE  6EF8               	movwf	tblptru,c
  1640   002AB0                     	endif
  1641   002AB0  0008               	tblrd		*
  1642   002AB2  50F5               	movf	tablat,w,c
  1643   002AB4  0900               	iorlw	0
  1644   002AB6  A4D8               	btfss	status,2,c
  1645   002AB8  EF60  F015         	goto	u2561
  1646   002ABC  EF62  F015         	goto	u2560
  1647   002AC0                     u2561:
  1648   002AC0  EF45  F015         	goto	l3412
  1649   002AC4                     u2560:
  1650   002AC4                     
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1653   002AC4  C080  F019         	movff	_nout,?_vfprintf
  1654   002AC8  C081  F01A         	movff	_nout+1,?_vfprintf+1
  1655   002ACC                     
  1656                           ; BSR set to: 0
  1657   002ACC  0012               	return		;funcret
  1658   002ACE                     __end_of_vfprintf:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _vfpfcnvrt *****************
  1662 ;; Defined at:
  1663 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1666 ;;		 -> sprintf@f(12), 
  1667 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1668 ;;		 -> vfprintf@cfmt(1), 
  1669 ;;  ap              1   12[COMRAM] PTR PTR void 
  1670 ;;		 -> sprintf@ap(1), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  convarg         4   19[COMRAM] struct .
  1673 ;;  cnt             2   16[COMRAM] int 
  1674 ;;  c               1   23[COMRAM] unsigned char 
  1675 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1676 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  1677 ;;  done            1   15[COMRAM] _Bool 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2   10[COMRAM] int 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;Total ram usage:       14 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 3
  1694 ;; This function calls:
  1695 ;;		___awdiv
  1696 ;;		___awmod
  1697 ;;		___lwdiv
  1698 ;;		___lwmod
  1699 ;;		_abs
  1700 ;;		_fputc
  1701 ;; This function is called by:
  1702 ;;		_vfprintf
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text6
  1707   001910                     __ptext6:
  1708                           	callstack 0
  1709   001910                     _vfpfcnvrt:
  1710                           	callstack 24
  1711   001910                     
  1712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1713   001910  0E00               	movlw	0
  1714   001912  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1715   001914  0E00               	movlw	0
  1716   001916  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1717   001918                     
  1718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1719   001918  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1720   00191A  6ED9               	movwf	fsr2l,c
  1721   00191C  6ADA               	clrf	fsr2h,c
  1722   00191E  CFDF FFF6          	movff	indf2,tblptrl
  1723   001922                     	if	1	;There is more than 1 active tblptr byte
  1724   001922  0E0E               	movlw	high __smallconst
  1725   001924  6EF7               	movwf	tblptrh,c
  1726   001926                     	endif
  1727   001926                     	if	0	;tblptru may be non-zero
  1728   001926                     	endif
  1729   001926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1730   001926  0E00               	movlw	low (__smallconst shr (0+16))
  1731   001928  6EF8               	movwf	tblptru,c
  1732   00192A                     	endif
  1733   00192A  0008               	tblrd		*
  1734   00192C  50F5               	movf	tablat,w,c
  1735   00192E  0A25               	xorlw	37
  1736   001930  A4D8               	btfss	status,2,c
  1737   001932  EF9D  F00C         	goto	u2411
  1738   001936  EF9F  F00C         	goto	u2410
  1739   00193A                     u2411:
  1740   00193A  EFF4  F00D         	goto	l3320
  1741   00193E                     u2410:
  1742   00193E                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1744   00193E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1745   001940  6ED9               	movwf	fsr2l,c
  1746   001942  6ADA               	clrf	fsr2h,c
  1747   001944  2ADF               	incf	indf2,f,c
  1748   001946                     
  1749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1750   001946  0E00               	movlw	0
  1751   001948  0100               	movlb	0	; () banked
  1752   00194A  6F83               	movwf	(_width+1)& (0+255),b
  1753   00194C  0E00               	movlw	0
  1754   00194E  6F82               	movwf	_width& (0+255),b
  1755   001950  C082  F086         	movff	_width,_flags
  1756   001954                     
  1757                           ; BSR set to: 0
  1758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1759   001954  6984               	setf	_prec& (0+255),b
  1760   001956  6985               	setf	(_prec+1)& (0+255),b
  1761   001958                     
  1762                           ; BSR set to: 0
  1763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1764   001958  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1765   00195A  6ED9               	movwf	fsr2l,c
  1766   00195C  6ADA               	clrf	fsr2h,c
  1767   00195E  50DF               	movf	indf2,w,c
  1768   001960  6E13               	movwf	vfpfcnvrt@cp^0,c
  1769   001962                     
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1772   001962  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1773   001966                     	if	1	;There is more than 1 active tblptr byte
  1774   001966  0E0E               	movlw	high __smallconst
  1775   001968  6EF7               	movwf	tblptrh,c
  1776   00196A                     	endif
  1777   00196A                     	if	0	;tblptru may be non-zero
  1778   00196A                     	endif
  1779   00196A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1780   00196A  0E00               	movlw	low (__smallconst shr (0+16))
  1781   00196C  6EF8               	movwf	tblptru,c
  1782   00196E                     	endif
  1783   00196E  0008               	tblrd		*
  1784   001970  50F5               	movf	tablat,w,c
  1785   001972  0A64               	xorlw	100
  1786   001974  B4D8               	btfsc	status,2,c
  1787   001976  EFBF  F00C         	goto	u2421
  1788   00197A  EFC1  F00C         	goto	u2420
  1789   00197E                     u2421:
  1790   00197E  EFD1  F00C         	goto	l3256
  1791   001982                     u2420:
  1792   001982                     
  1793                           ; BSR set to: 0
  1794   001982  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1795   001986                     	if	1	;There is more than 1 active tblptr byte
  1796   001986  0E0E               	movlw	high __smallconst
  1797   001988  6EF7               	movwf	tblptrh,c
  1798   00198A                     	endif
  1799   00198A                     	if	0	;tblptru may be non-zero
  1800   00198A                     	endif
  1801   00198A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1802   00198A  0E00               	movlw	low (__smallconst shr (0+16))
  1803   00198C  6EF8               	movwf	tblptru,c
  1804   00198E                     	endif
  1805   00198E  0008               	tblrd		*
  1806   001990  50F5               	movf	tablat,w,c
  1807   001992  0A69               	xorlw	105
  1808   001994  A4D8               	btfss	status,2,c
  1809   001996  EFCF  F00C         	goto	u2431
  1810   00199A  EFD1  F00C         	goto	u2430
  1811   00199E                     u2431:
  1812   00199E  EF5F  F00D         	goto	l3286
  1813   0019A2                     u2430:
  1814   0019A2                     l3256:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1818   0019A2  500D               	movf	vfpfcnvrt@ap^0,w,c
  1819   0019A4  6ED9               	movwf	fsr2l,c
  1820   0019A6  6ADA               	clrf	fsr2h,c
  1821   0019A8  0E02               	movlw	2
  1822   0019AA  26DF               	addwf	indf2,f,c
  1823   0019AC  5CDF               	subwf	indf2,w,c
  1824   0019AE  6ED9               	movwf	fsr2l,c
  1825   0019B0  6ADA               	clrf	fsr2h,c
  1826   0019B2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1827   0019B6  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1828   0019BA                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1831   0019BA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1832   0019BC  6ED9               	movwf	fsr2l,c
  1833   0019BE  6ADA               	clrf	fsr2h,c
  1834   0019C0  2813               	incf	vfpfcnvrt@cp^0,w,c
  1835   0019C2  6EDF               	movwf	indf2,c
  1836   0019C4                     
  1837                           ; BSR set to: 0
  1838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1839   0019C4  0E20               	movlw	32
  1840   0019C6  6E18               	movwf	vfpfcnvrt@c^0,c
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1843   0019C8  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1844   0019CA  EFE9  F00C         	goto	u2441
  1845   0019CE  EFEC  F00C         	goto	u2440
  1846   0019D2                     u2441:
  1847   0019D2  0E01               	movlw	1
  1848   0019D4  EFED  F00C         	goto	u2450
  1849   0019D8                     u2440:
  1850   0019D8  0E00               	movlw	0
  1851   0019DA                     u2450:
  1852   0019DA  6E10               	movwf	vfpfcnvrt@done^0,c
  1853   0019DC                     l3262:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1856   0019DC  0618               	decf	vfpfcnvrt@c^0,f,c
  1857   0019DE  5018               	movf	vfpfcnvrt@c^0,w,c
  1858   0019E0  0F60               	addlw	low _dbuf
  1859   0019E2  6ED9               	movwf	fsr2l,c
  1860   0019E4  6ADA               	clrf	fsr2h,c
  1861   0019E6  C014  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1862   0019EA  C015  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1863   0019EE  0E00               	movlw	0
  1864   0019F0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1865   0019F2  0E0A               	movlw	10
  1866   0019F4  6E03               	movwf	___awmod@divisor^0,c
  1867   0019F6  EC98  F012         	call	___awmod	;wreg free
  1868   0019FA  C001  F007         	movff	?___awmod,abs@a
  1869   0019FE  C002  F008         	movff	?___awmod+1,abs@a+1
  1870   001A02  EC9F  F016         	call	_abs	;wreg free
  1871   001A06  5007               	movf	?_abs^0,w,c
  1872   001A08  0F30               	addlw	48
  1873   001A0A  6EDF               	movwf	indf2,c
  1874   001A0C                     
  1875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1876   001A0C  C014  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1877   001A10  C015  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1878   001A14  0E00               	movlw	0
  1879   001A16  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1880   001A18  0E0A               	movlw	10
  1881   001A1A  6E03               	movwf	___awdiv@divisor^0,c
  1882   001A1C  ECD9  F011         	call	___awdiv	;wreg free
  1883   001A20  C001  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1884   001A24  C002  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1885   001A28                     
  1886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1887   001A28  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1888   001A2A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1889   001A2C                     
  1890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1891   001A2C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1892   001A2E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1893   001A30  B4D8               	btfsc	status,2,c
  1894   001A32  EF1D  F00D         	goto	u2461
  1895   001A36  EF1F  F00D         	goto	u2460
  1896   001A3A                     u2461:
  1897   001A3A  EF27  F00D         	goto	l3272
  1898   001A3E                     u2460:
  1899   001A3E  5018               	movf	vfpfcnvrt@c^0,w,c
  1900   001A40  A4D8               	btfss	status,2,c
  1901   001A42  EF25  F00D         	goto	u2471
  1902   001A46  EF27  F00D         	goto	u2470
  1903   001A4A                     u2471:
  1904   001A4A  EFEE  F00C         	goto	l3262
  1905   001A4E                     u2470:
  1906   001A4E                     l3272:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1909   001A4E  5018               	movf	vfpfcnvrt@c^0,w,c
  1910   001A50  B4D8               	btfsc	status,2,c
  1911   001A52  EF2D  F00D         	goto	u2481
  1912   001A56  EF2F  F00D         	goto	u2480
  1913   001A5A                     u2481:
  1914   001A5A  EF50  F00D         	goto	l3284
  1915   001A5E                     u2480:
  1916   001A5E  5010               	movf	vfpfcnvrt@done^0,w,c
  1917   001A60  B4D8               	btfsc	status,2,c
  1918   001A62  EF35  F00D         	goto	u2491
  1919   001A66  EF37  F00D         	goto	u2490
  1920   001A6A                     u2491:
  1921   001A6A  EF50  F00D         	goto	l3284
  1922   001A6E                     u2490:
  1923   001A6E                     
  1924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1925   001A6E  0618               	decf	vfpfcnvrt@c^0,f,c
  1926   001A70  5018               	movf	vfpfcnvrt@c^0,w,c
  1927   001A72  0F60               	addlw	low _dbuf
  1928   001A74  6ED9               	movwf	fsr2l,c
  1929   001A76  6ADA               	clrf	fsr2h,c
  1930   001A78  0E2D               	movlw	45
  1931   001A7A  6EDF               	movwf	indf2,c
  1932   001A7C                     
  1933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1934   001A7C  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1935   001A7E  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1936   001A80  EF50  F00D         	goto	l3284
  1937   001A84                     l3280:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1940   001A84  5018               	movf	vfpfcnvrt@c^0,w,c
  1941   001A86  0F60               	addlw	low _dbuf
  1942   001A88  6ED9               	movwf	fsr2l,c
  1943   001A8A  6ADA               	clrf	fsr2h,c
  1944   001A8C  50DF               	movf	indf2,w,c
  1945   001A8E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1946   001A90  500E               	movf	??_vfpfcnvrt^0,w,c
  1947   001A92  6E01               	movwf	fputc@c^0,c
  1948   001A94  6A02               	clrf	(fputc@c+1)^0,c
  1949   001A96  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1950   001A9A  EC3B  F012         	call	_fputc	;wreg free
  1951   001A9E  2A18               	incf	vfpfcnvrt@c^0,f,c
  1952   001AA0                     l3284:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1955   001AA0  0E20               	movlw	32
  1956   001AA2  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1957   001AA4  A4D8               	btfss	status,2,c
  1958   001AA6  EF57  F00D         	goto	u2501
  1959   001AAA  EF59  F00D         	goto	u2500
  1960   001AAE                     u2501:
  1961   001AAE  EF42  F00D         	goto	l3280
  1962   001AB2                     u2500:
  1963   001AB2                     l1468:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1966   001AB2  C011  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1967   001AB6  C012  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1968   001ABA  EF0D  F00E         	goto	l1469
  1969   001ABE                     l3286:
  1970                           
  1971                           ; BSR set to: 0
  1972   001ABE  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1973   001AC2                     	if	1	;There is more than 1 active tblptr byte
  1974   001AC2  0E0E               	movlw	high __smallconst
  1975   001AC4  6EF7               	movwf	tblptrh,c
  1976   001AC6                     	endif
  1977   001AC6                     	if	0	;tblptru may be non-zero
  1978   001AC6                     	endif
  1979   001AC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1980   001AC6  0E00               	movlw	low (__smallconst shr (0+16))
  1981   001AC8  6EF8               	movwf	tblptru,c
  1982   001ACA                     	endif
  1983   001ACA  0008               	tblrd		*
  1984   001ACC  50F5               	movf	tablat,w,c
  1985   001ACE  0A75               	xorlw	117
  1986   001AD0  A4D8               	btfss	status,2,c
  1987   001AD2  EF6D  F00D         	goto	u2511
  1988   001AD6  EF6F  F00D         	goto	u2510
  1989   001ADA                     u2511:
  1990   001ADA  EFEA  F00D         	goto	l3314
  1991   001ADE                     u2510:
  1992   001ADE                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1995   001ADE  500D               	movf	vfpfcnvrt@ap^0,w,c
  1996   001AE0  6ED9               	movwf	fsr2l,c
  1997   001AE2  6ADA               	clrf	fsr2h,c
  1998   001AE4  0E02               	movlw	2
  1999   001AE6  26DF               	addwf	indf2,f,c
  2000   001AE8  5CDF               	subwf	indf2,w,c
  2001   001AEA  6ED9               	movwf	fsr2l,c
  2002   001AEC  6ADA               	clrf	fsr2h,c
  2003   001AEE  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  2004   001AF2  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  2005   001AF6                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2008   001AF6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2009   001AF8  6ED9               	movwf	fsr2l,c
  2010   001AFA  6ADA               	clrf	fsr2h,c
  2011   001AFC  2813               	incf	vfpfcnvrt@cp^0,w,c
  2012   001AFE  6EDF               	movwf	indf2,c
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2015   001B00  EFD2  F00D         	goto	l3312
  2016   001B04                     l3292:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2020   001B04  0E20               	movlw	32
  2021   001B06  6E18               	movwf	vfpfcnvrt@c^0,c
  2022   001B08                     l3294:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2025   001B08  0618               	decf	vfpfcnvrt@c^0,f,c
  2026   001B0A  5018               	movf	vfpfcnvrt@c^0,w,c
  2027   001B0C  0F60               	addlw	low _dbuf
  2028   001B0E  6ED9               	movwf	fsr2l,c
  2029   001B10  6ADA               	clrf	fsr2h,c
  2030   001B12  C014  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2031   001B16  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2032   001B1A  0E00               	movlw	0
  2033   001B1C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2034   001B1E  0E0A               	movlw	10
  2035   001B20  6E03               	movwf	___lwmod@divisor^0,c
  2036   001B22  ECAA  F014         	call	___lwmod	;wreg free
  2037   001B26  5001               	movf	?___lwmod^0,w,c
  2038   001B28  0F30               	addlw	48
  2039   001B2A  6EDF               	movwf	indf2,c
  2040   001B2C                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2042   001B2C  C014  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2043   001B30  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2044   001B34  0E00               	movlw	0
  2045   001B36  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2046   001B38  0E0A               	movlw	10
  2047   001B3A  6E03               	movwf	___lwdiv@divisor^0,c
  2048   001B3C  EC06  F014         	call	___lwdiv	;wreg free
  2049   001B40  C001  F014         	movff	?___lwdiv,vfpfcnvrt@convarg
  2050   001B44  C002  F015         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2051   001B48                     
  2052                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2053   001B48  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2054   001B4A  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2055   001B4C                     
  2056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2057   001B4C  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2058   001B4E  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2059   001B50  B4D8               	btfsc	status,2,c
  2060   001B52  EFAD  F00D         	goto	u2521
  2061   001B56  EFAF  F00D         	goto	u2520
  2062   001B5A                     u2521:
  2063   001B5A  EFC7  F00D         	goto	l3308
  2064   001B5E                     u2520:
  2065   001B5E  5018               	movf	vfpfcnvrt@c^0,w,c
  2066   001B60  A4D8               	btfss	status,2,c
  2067   001B62  EFB5  F00D         	goto	u2531
  2068   001B66  EFB7  F00D         	goto	u2530
  2069   001B6A                     u2531:
  2070   001B6A  EF84  F00D         	goto	l3294
  2071   001B6E                     u2530:
  2072   001B6E  EFC7  F00D         	goto	l3308
  2073   001B72                     l3304:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2076   001B72  5018               	movf	vfpfcnvrt@c^0,w,c
  2077   001B74  0F60               	addlw	low _dbuf
  2078   001B76  6ED9               	movwf	fsr2l,c
  2079   001B78  6ADA               	clrf	fsr2h,c
  2080   001B7A  50DF               	movf	indf2,w,c
  2081   001B7C  6E0E               	movwf	??_vfpfcnvrt^0,c
  2082   001B7E  500E               	movf	??_vfpfcnvrt^0,w,c
  2083   001B80  6E01               	movwf	fputc@c^0,c
  2084   001B82  6A02               	clrf	(fputc@c+1)^0,c
  2085   001B84  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2086   001B88  EC3B  F012         	call	_fputc	;wreg free
  2087   001B8C  2A18               	incf	vfpfcnvrt@c^0,f,c
  2088   001B8E                     l3308:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2091   001B8E  0E20               	movlw	32
  2092   001B90  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2093   001B92  A4D8               	btfss	status,2,c
  2094   001B94  EFCE  F00D         	goto	u2541
  2095   001B98  EFD0  F00D         	goto	u2540
  2096   001B9C                     u2541:
  2097   001B9C  EFB9  F00D         	goto	l3304
  2098   001BA0                     u2540:
  2099   001BA0  EF59  F00D         	goto	l1468
  2100   001BA4                     l3312:
  2101                           
  2102                           ; BSR set to: 0
  2103   001BA4  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2104   001BA8                     	if	1	;There is more than 1 active tblptr byte
  2105   001BA8  0E0E               	movlw	high __smallconst
  2106   001BAA  6EF7               	movwf	tblptrh,c
  2107   001BAC                     	endif
  2108   001BAC                     	if	0	;tblptru may be non-zero
  2109   001BAC                     	endif
  2110   001BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2111   001BAC  0E00               	movlw	low (__smallconst shr (0+16))
  2112   001BAE  6EF8               	movwf	tblptru,c
  2113   001BB0                     	endif
  2114   001BB0  0008               	tblrd		*
  2115   001BB2  50F5               	movf	tablat,w,c
  2116   001BB4  6E0E               	movwf	??_vfpfcnvrt^0,c
  2117   001BB6  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2118                           
  2119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2120                           ; Switch size 1, requested type "simple"
  2121                           ; Number of cases is 1, Range of values is 0 to 0
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte            4     3 (average)
  2125                           ;	Chosen strategy is simple_byte
  2126   001BB8  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2127   001BBA  0A00               	xorlw	0	; case 0
  2128   001BBC  B4D8               	btfsc	status,2,c
  2129   001BBE  EFE3  F00D         	goto	l4554
  2130   001BC2  EFEA  F00D         	goto	l3314
  2131   001BC6                     l4554:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ; Switch size 1, requested type "simple"
  2135                           ; Number of cases is 1, Range of values is 117 to 117
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            4     3 (average)
  2139                           ;	Chosen strategy is simple_byte
  2140   001BC6  500E               	movf	??_vfpfcnvrt^0,w,c
  2141   001BC8  0A75               	xorlw	117	; case 117
  2142   001BCA  B4D8               	btfsc	status,2,c
  2143   001BCC  EF82  F00D         	goto	l3292
  2144   001BD0  EFEA  F00D         	goto	l3314
  2145   001BD4                     l3314:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2149   001BD4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2150   001BD6  6ED9               	movwf	fsr2l,c
  2151   001BD8  6ADA               	clrf	fsr2h,c
  2152   001BDA  2ADF               	incf	indf2,f,c
  2153   001BDC                     
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2156   001BDC  0E00               	movlw	0
  2157   001BDE  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2158   001BE0  0E00               	movlw	0
  2159   001BE2  6E0B               	movwf	?_vfpfcnvrt^0,c
  2160   001BE4  EF0D  F00E         	goto	l1469
  2161   001BE8                     l3320:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2164   001BE8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2165   001BEA  6ED9               	movwf	fsr2l,c
  2166   001BEC  6ADA               	clrf	fsr2h,c
  2167   001BEE  CFDF FFF6          	movff	indf2,tblptrl
  2168   001BF2                     	if	1	;There is more than 1 active tblptr byte
  2169   001BF2  0E0E               	movlw	high __smallconst
  2170   001BF4  6EF7               	movwf	tblptrh,c
  2171   001BF6                     	endif
  2172   001BF6                     	if	0	;tblptru may be non-zero
  2173   001BF6                     	endif
  2174   001BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2175   001BF6  0E00               	movlw	low (__smallconst shr (0+16))
  2176   001BF8  6EF8               	movwf	tblptru,c
  2177   001BFA                     	endif
  2178   001BFA  0008               	tblrd		*
  2179   001BFC  50F5               	movf	tablat,w,c
  2180   001BFE  6E01               	movwf	fputc@c^0,c
  2181   001C00  6A02               	clrf	(fputc@c+1)^0,c
  2182   001C02  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2183   001C06  EC3B  F012         	call	_fputc	;wreg free
  2184   001C0A                     
  2185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2186   001C0A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2187   001C0C  6ED9               	movwf	fsr2l,c
  2188   001C0E  6ADA               	clrf	fsr2h,c
  2189   001C10  2ADF               	incf	indf2,f,c
  2190   001C12                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2192   001C12  0E00               	movlw	0
  2193   001C14  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2194   001C16  0E01               	movlw	1
  2195   001C18  6E0B               	movwf	?_vfpfcnvrt^0,c
  2196   001C1A                     l1469:
  2197   001C1A  0012               	return		;funcret
  2198   001C1C                     __end_of_vfpfcnvrt:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _fputc *****************
  2202 ;; Defined at:
  2203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  c               2    0[COMRAM] int 
  2206 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2207 ;;		 -> sprintf@f(12), 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    0[COMRAM] int 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2219 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;Total ram usage:        8 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 2
  2226 ;; This function calls:
  2227 ;;		_putch
  2228 ;; This function is called by:
  2229 ;;		_vfpfcnvrt
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text7
  2234   002476                     __ptext7:
  2235                           	callstack 0
  2236   002476                     _fputc:
  2237                           	callstack 24
  2238   002476  5003               	movf	fputc@fp^0,w,c
  2239   002478  B4D8               	btfsc	status,2,c
  2240   00247A  EF41  F012         	goto	u2181
  2241   00247E  EF43  F012         	goto	u2180
  2242   002482                     u2181:
  2243   002482  EF4B  F012         	goto	l3110
  2244   002486                     u2180:
  2245   002486  5003               	movf	fputc@fp^0,w,c
  2246   002488  A4D8               	btfss	status,2,c
  2247   00248A  EF49  F012         	goto	u2191
  2248   00248E  EF4B  F012         	goto	u2190
  2249   002492                     u2191:
  2250   002492  EF50  F012         	goto	l3112
  2251   002496                     u2190:
  2252   002496                     l3110:
  2253   002496  5001               	movf	fputc@c^0,w,c
  2254   002498  EC7F  F017         	call	_putch
  2255   00249C  EF97  F012         	goto	l1507
  2256   0024A0                     l3112:
  2257   0024A0  5003               	movf	fputc@fp^0,w,c
  2258   0024A2  6ED9               	movwf	fsr2l,c
  2259   0024A4  6ADA               	clrf	fsr2h,c
  2260   0024A6  0E0A               	movlw	10
  2261   0024A8  26D9               	addwf	fsr2l,f,c
  2262   0024AA  50DE               	movf	postinc2,w,c
  2263   0024AC  10DE               	iorwf	postinc2,w,c
  2264   0024AE  B4D8               	btfsc	status,2,c
  2265   0024B0  EF5C  F012         	goto	u2201
  2266   0024B4  EF5E  F012         	goto	u2200
  2267   0024B8                     u2201:
  2268   0024B8  EF77  F012         	goto	l3116
  2269   0024BC                     u2200:
  2270   0024BC  5003               	movf	fputc@fp^0,w,c
  2271   0024BE  6ED9               	movwf	fsr2l,c
  2272   0024C0  6ADA               	clrf	fsr2h,c
  2273   0024C2  0E0A               	movlw	10
  2274   0024C4  26D9               	addwf	fsr2l,f,c
  2275   0024C6  5003               	movf	fputc@fp^0,w,c
  2276   0024C8  6EE1               	movwf	fsr1l,c
  2277   0024CA  6AE2               	clrf	fsr1h,c
  2278   0024CC  0E03               	movlw	3
  2279   0024CE  26E1               	addwf	fsr1l,f,c
  2280   0024D0  50DE               	movf	postinc2,w,c
  2281   0024D2  5CE6               	subwf	postinc1,w,c
  2282   0024D4  50E6               	movf	postinc1,w,c
  2283   0024D6  0A80               	xorlw	128
  2284   0024D8  6E08               	movwf	(??_fputc+4)^0,c
  2285   0024DA  50DE               	movf	postinc2,w,c
  2286   0024DC  0A80               	xorlw	128
  2287   0024DE  5808               	subwfb	(??_fputc+4)^0,w,c
  2288   0024E0  B0D8               	btfsc	status,0,c
  2289   0024E2  EF75  F012         	goto	u2211
  2290   0024E6  EF77  F012         	goto	u2210
  2291   0024EA                     u2211:
  2292   0024EA  EF97  F012         	goto	l1507
  2293   0024EE                     u2210:
  2294   0024EE                     l3116:
  2295   0024EE  5003               	movf	fputc@fp^0,w,c
  2296   0024F0  6ED9               	movwf	fsr2l,c
  2297   0024F2  6ADA               	clrf	fsr2h,c
  2298   0024F4  0E03               	movlw	3
  2299   0024F6  26D9               	addwf	fsr2l,f,c
  2300   0024F8  CFDE F004          	movff	postinc2,??_fputc
  2301   0024FC  CFDD F005          	movff	postdec2,??_fputc+1
  2302   002500  5003               	movf	fputc@fp^0,w,c
  2303   002502  6ED9               	movwf	fsr2l,c
  2304   002504  6ADA               	clrf	fsr2h,c
  2305   002506  CFDE F006          	movff	postinc2,??_fputc+2
  2306   00250A  CFDD F007          	movff	postdec2,??_fputc+3
  2307   00250E  5004               	movf	??_fputc^0,w,c
  2308   002510  2406               	addwf	(??_fputc+2)^0,w,c
  2309   002512  6ED9               	movwf	fsr2l,c
  2310   002514  5005               	movf	(??_fputc+1)^0,w,c
  2311   002516  2007               	addwfc	(??_fputc+3)^0,w,c
  2312   002518  6EDA               	movwf	fsr2h,c
  2313   00251A  C001  FFDF         	movff	fputc@c,indf2
  2314   00251E  5003               	movf	fputc@fp^0,w,c
  2315   002520  6ED9               	movwf	fsr2l,c
  2316   002522  6ADA               	clrf	fsr2h,c
  2317   002524  0E03               	movlw	3
  2318   002526  26D9               	addwf	fsr2l,f,c
  2319   002528  2ADE               	incf	postinc2,f,c
  2320   00252A  0E00               	movlw	0
  2321   00252C  22DD               	addwfc	postdec2,f,c
  2322   00252E                     l1507:
  2323   00252E  0012               	return		;funcret
  2324   002530                     __end_of_fputc:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _putch *****************
  2328 ;; Defined at:
  2329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  c               1    wreg     unsigned char 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  c               1    0[COMRAM] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_fputc
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text8
  2358   002EFE                     __ptext8:
  2359                           	callstack 0
  2360   002EFE                     _putch:
  2361                           	callstack 24
  2362   002EFE  0012               	return		;funcret
  2363   002F00                     __end_of_putch:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _abs *****************
  2367 ;; Defined at:
  2368 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  a               2    6[COMRAM] int 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2    6[COMRAM] int 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2386 ;;Total ram usage:        4 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_vfpfcnvrt
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text9
  2397   002D3E                     __ptext9:
  2398                           	callstack 0
  2399   002D3E                     _abs:
  2400                           	callstack 25
  2401   002D3E  BE08               	btfsc	(abs@a+1)^0,7,c
  2402   002D40  EFA4  F016         	goto	u2221
  2403   002D44  EFA6  F016         	goto	u2220
  2404   002D48                     u2221:
  2405   002D48  EFAC  F016         	goto	l1492
  2406   002D4C                     u2220:
  2407   002D4C  C007  F007         	movff	abs@a,?_abs
  2408   002D50  C008  F008         	movff	abs@a+1,?_abs+1
  2409   002D54  EFB8  F016         	goto	l1495
  2410   002D58                     l1492:
  2411   002D58  C007  F009         	movff	abs@a,??_abs
  2412   002D5C  C008  F00A         	movff	abs@a+1,??_abs+1
  2413   002D60  1E09               	comf	??_abs^0,f,c
  2414   002D62  1E0A               	comf	(??_abs+1)^0,f,c
  2415   002D64  4A09               	infsnz	??_abs^0,f,c
  2416   002D66  2A0A               	incf	(??_abs+1)^0,f,c
  2417   002D68  C009  F007         	movff	??_abs,?_abs
  2418   002D6C  C00A  F008         	movff	??_abs+1,?_abs+1
  2419   002D70                     l1495:
  2420   002D70  0012               	return		;funcret
  2421   002D72                     __end_of_abs:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function ___lwmod *****************
  2425 ;; Defined at:
  2426 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  dividend        2    0[COMRAM] unsigned int 
  2429 ;;  divisor         2    2[COMRAM] unsigned int 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  counter         1    4[COMRAM] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  2    0[COMRAM] unsigned int 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;Total ram usage:        5 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 1
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_vfpfcnvrt
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text10
  2456   002954                     __ptext10:
  2457                           	callstack 0
  2458   002954                     ___lwmod:
  2459                           	callstack 25
  2460   002954  5003               	movf	___lwmod@divisor^0,w,c
  2461   002956  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2462   002958  B4D8               	btfsc	status,2,c
  2463   00295A  EFB1  F014         	goto	u2151
  2464   00295E  EFB3  F014         	goto	u2150
  2465   002962                     u2151:
  2466   002962  EFD7  F014         	goto	l1250
  2467   002966                     u2150:
  2468   002966  0E01               	movlw	1
  2469   002968  6E05               	movwf	___lwmod@counter^0,c
  2470   00296A  EFBB  F014         	goto	l3096
  2471   00296E                     l3094:
  2472   00296E  90D8               	bcf	status,0,c
  2473   002970  3603               	rlcf	___lwmod@divisor^0,f,c
  2474   002972  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2475   002974  2A05               	incf	___lwmod@counter^0,f,c
  2476   002976                     l3096:
  2477   002976  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2478   002978  EFC0  F014         	goto	u2161
  2479   00297C  EFC2  F014         	goto	u2160
  2480   002980                     u2161:
  2481   002980  EFB7  F014         	goto	l3094
  2482   002984                     u2160:
  2483   002984                     l3098:
  2484   002984  5003               	movf	___lwmod@divisor^0,w,c
  2485   002986  5C01               	subwf	___lwmod@dividend^0,w,c
  2486   002988  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2487   00298A  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2488   00298C  A0D8               	btfss	status,0,c
  2489   00298E  EFCB  F014         	goto	u2171
  2490   002992  EFCD  F014         	goto	u2170
  2491   002996                     u2171:
  2492   002996  EFD1  F014         	goto	l3102
  2493   00299A                     u2170:
  2494   00299A  5003               	movf	___lwmod@divisor^0,w,c
  2495   00299C  5E01               	subwf	___lwmod@dividend^0,f,c
  2496   00299E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2497   0029A0  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2498   0029A2                     l3102:
  2499   0029A2  90D8               	bcf	status,0,c
  2500   0029A4  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2501   0029A6  3203               	rrcf	___lwmod@divisor^0,f,c
  2502   0029A8  2E05               	decfsz	___lwmod@counter^0,f,c
  2503   0029AA  EFC2  F014         	goto	l3098
  2504   0029AE                     l1250:
  2505   0029AE  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2506   0029B2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2507   0029B6  0012               	return		;funcret
  2508   0029B8                     __end_of___lwmod:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function ___lwdiv *****************
  2512 ;; Defined at:
  2513 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  dividend        2    0[COMRAM] unsigned int 
  2516 ;;  divisor         2    2[COMRAM] unsigned int 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  quotient        2    4[COMRAM] unsigned int 
  2519 ;;  counter         1    6[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  2    0[COMRAM] unsigned int 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;Total ram usage:        7 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_vfpfcnvrt
  2540 ;;		_setMotorPWM
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text11
  2545   00280C                     __ptext11:
  2546                           	callstack 0
  2547   00280C                     ___lwdiv:
  2548                           	callstack 25
  2549   00280C  0E00               	movlw	0
  2550   00280E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2551   002810  0E00               	movlw	0
  2552   002812  6E05               	movwf	___lwdiv@quotient^0,c
  2553   002814  5003               	movf	___lwdiv@divisor^0,w,c
  2554   002816  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2555   002818  B4D8               	btfsc	status,2,c
  2556   00281A  EF11  F014         	goto	u2121
  2557   00281E  EF13  F014         	goto	u2120
  2558   002822                     u2121:
  2559   002822  EF3B  F014         	goto	l1240
  2560   002826                     u2120:
  2561   002826  0E01               	movlw	1
  2562   002828  6E07               	movwf	___lwdiv@counter^0,c
  2563   00282A  EF1B  F014         	goto	l3076
  2564   00282E                     l3074:
  2565   00282E  90D8               	bcf	status,0,c
  2566   002830  3603               	rlcf	___lwdiv@divisor^0,f,c
  2567   002832  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2568   002834  2A07               	incf	___lwdiv@counter^0,f,c
  2569   002836                     l3076:
  2570   002836  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2571   002838  EF20  F014         	goto	u2131
  2572   00283C  EF22  F014         	goto	u2130
  2573   002840                     u2131:
  2574   002840  EF17  F014         	goto	l3074
  2575   002844                     u2130:
  2576   002844                     l3078:
  2577   002844  90D8               	bcf	status,0,c
  2578   002846  3605               	rlcf	___lwdiv@quotient^0,f,c
  2579   002848  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2580   00284A  5003               	movf	___lwdiv@divisor^0,w,c
  2581   00284C  5C01               	subwf	___lwdiv@dividend^0,w,c
  2582   00284E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2583   002850  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2584   002852  A0D8               	btfss	status,0,c
  2585   002854  EF2E  F014         	goto	u2141
  2586   002858  EF30  F014         	goto	u2140
  2587   00285C                     u2141:
  2588   00285C  EF35  F014         	goto	l3086
  2589   002860                     u2140:
  2590   002860  5003               	movf	___lwdiv@divisor^0,w,c
  2591   002862  5E01               	subwf	___lwdiv@dividend^0,f,c
  2592   002864  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2593   002866  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2594   002868  8005               	bsf	___lwdiv@quotient^0,0,c
  2595   00286A                     l3086:
  2596   00286A  90D8               	bcf	status,0,c
  2597   00286C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2598   00286E  3203               	rrcf	___lwdiv@divisor^0,f,c
  2599   002870  2E07               	decfsz	___lwdiv@counter^0,f,c
  2600   002872  EF22  F014         	goto	l3078
  2601   002876                     l1240:
  2602   002876  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2603   00287A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2604   00287E  0012               	return		;funcret
  2605   002880                     __end_of___lwdiv:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function ___awmod *****************
  2609 ;; Defined at:
  2610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  dividend        2    0[COMRAM] int 
  2613 ;;  divisor         2    2[COMRAM] int 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  sign            1    5[COMRAM] unsigned char 
  2616 ;;  counter         1    4[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2    0[COMRAM] int 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;Total ram usage:        6 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_vfpfcnvrt
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text12
  2641   002530                     __ptext12:
  2642                           	callstack 0
  2643   002530                     ___awmod:
  2644                           	callstack 25
  2645   002530  0E00               	movlw	0
  2646   002532  6E06               	movwf	___awmod@sign^0,c
  2647   002534  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2648   002536  EFA1  F012         	goto	u2060
  2649   00253A  EF9F  F012         	goto	u2061
  2650   00253E                     u2061:
  2651   00253E  EFA7  F012         	goto	l3040
  2652   002542                     u2060:
  2653   002542  6C01               	negf	___awmod@dividend^0,c
  2654   002544  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2655   002546  B0D8               	btfsc	status,0,c
  2656   002548  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2657   00254A  0E01               	movlw	1
  2658   00254C  6E06               	movwf	___awmod@sign^0,c
  2659   00254E                     l3040:
  2660   00254E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2661   002550  EFAE  F012         	goto	u2070
  2662   002554  EFAC  F012         	goto	u2071
  2663   002558                     u2071:
  2664   002558  EFB2  F012         	goto	l3044
  2665   00255C                     u2070:
  2666   00255C  6C03               	negf	___awmod@divisor^0,c
  2667   00255E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2668   002560  B0D8               	btfsc	status,0,c
  2669   002562  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2670   002564                     l3044:
  2671   002564  5003               	movf	___awmod@divisor^0,w,c
  2672   002566  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2673   002568  B4D8               	btfsc	status,2,c
  2674   00256A  EFB9  F012         	goto	u2081
  2675   00256E  EFBB  F012         	goto	u2080
  2676   002572                     u2081:
  2677   002572  EFDF  F012         	goto	l3060
  2678   002576                     u2080:
  2679   002576  0E01               	movlw	1
  2680   002578  6E05               	movwf	___awmod@counter^0,c
  2681   00257A  EFC3  F012         	goto	l3050
  2682   00257E                     l3048:
  2683   00257E  90D8               	bcf	status,0,c
  2684   002580  3603               	rlcf	___awmod@divisor^0,f,c
  2685   002582  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2686   002584  2A05               	incf	___awmod@counter^0,f,c
  2687   002586                     l3050:
  2688   002586  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2689   002588  EFC8  F012         	goto	u2091
  2690   00258C  EFCA  F012         	goto	u2090
  2691   002590                     u2091:
  2692   002590  EFBF  F012         	goto	l3048
  2693   002594                     u2090:
  2694   002594                     l3052:
  2695   002594  5003               	movf	___awmod@divisor^0,w,c
  2696   002596  5C01               	subwf	___awmod@dividend^0,w,c
  2697   002598  5004               	movf	(___awmod@divisor+1)^0,w,c
  2698   00259A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2699   00259C  A0D8               	btfss	status,0,c
  2700   00259E  EFD3  F012         	goto	u2101
  2701   0025A2  EFD5  F012         	goto	u2100
  2702   0025A6                     u2101:
  2703   0025A6  EFD9  F012         	goto	l3056
  2704   0025AA                     u2100:
  2705   0025AA  5003               	movf	___awmod@divisor^0,w,c
  2706   0025AC  5E01               	subwf	___awmod@dividend^0,f,c
  2707   0025AE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2708   0025B0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2709   0025B2                     l3056:
  2710   0025B2  90D8               	bcf	status,0,c
  2711   0025B4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2712   0025B6  3203               	rrcf	___awmod@divisor^0,f,c
  2713   0025B8  2E05               	decfsz	___awmod@counter^0,f,c
  2714   0025BA  EFCA  F012         	goto	l3052
  2715   0025BE                     l3060:
  2716   0025BE  5006               	movf	___awmod@sign^0,w,c
  2717   0025C0  B4D8               	btfsc	status,2,c
  2718   0025C2  EFE5  F012         	goto	u2111
  2719   0025C6  EFE7  F012         	goto	u2110
  2720   0025CA                     u2111:
  2721   0025CA  EFEB  F012         	goto	l3064
  2722   0025CE                     u2110:
  2723   0025CE  6C01               	negf	___awmod@dividend^0,c
  2724   0025D0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2725   0025D2  B0D8               	btfsc	status,0,c
  2726   0025D4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2727   0025D6                     l3064:
  2728   0025D6  C001  F001         	movff	___awmod@dividend,?___awmod
  2729   0025DA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2730   0025DE  0012               	return		;funcret
  2731   0025E0                     __end_of___awmod:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function ___awdiv *****************
  2735 ;; Defined at:
  2736 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  dividend        2    0[COMRAM] int 
  2739 ;;  divisor         2    2[COMRAM] int 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  quotient        2    6[COMRAM] int 
  2742 ;;  sign            1    5[COMRAM] unsigned char 
  2743 ;;  counter         1    4[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[COMRAM] int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2757 ;;Total ram usage:        8 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_vfpfcnvrt
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text13
  2768   0023B2                     __ptext13:
  2769                           	callstack 0
  2770   0023B2                     ___awdiv:
  2771                           	callstack 25
  2772   0023B2  0E00               	movlw	0
  2773   0023B4  6E06               	movwf	___awdiv@sign^0,c
  2774   0023B6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2775   0023B8  EFE2  F011         	goto	u2000
  2776   0023BC  EFE0  F011         	goto	u2001
  2777   0023C0                     u2001:
  2778   0023C0  EFE8  F011         	goto	l2996
  2779   0023C4                     u2000:
  2780   0023C4  6C03               	negf	___awdiv@divisor^0,c
  2781   0023C6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2782   0023C8  B0D8               	btfsc	status,0,c
  2783   0023CA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2784   0023CC  0E01               	movlw	1
  2785   0023CE  6E06               	movwf	___awdiv@sign^0,c
  2786   0023D0                     l2996:
  2787   0023D0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2788   0023D2  EFEF  F011         	goto	u2010
  2789   0023D6  EFED  F011         	goto	u2011
  2790   0023DA                     u2011:
  2791   0023DA  EFF5  F011         	goto	l3002
  2792   0023DE                     u2010:
  2793   0023DE  6C01               	negf	___awdiv@dividend^0,c
  2794   0023E0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2795   0023E2  B0D8               	btfsc	status,0,c
  2796   0023E4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2797   0023E6  0E01               	movlw	1
  2798   0023E8  1A06               	xorwf	___awdiv@sign^0,f,c
  2799   0023EA                     l3002:
  2800   0023EA  0E00               	movlw	0
  2801   0023EC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2802   0023EE  0E00               	movlw	0
  2803   0023F0  6E07               	movwf	___awdiv@quotient^0,c
  2804   0023F2  5003               	movf	___awdiv@divisor^0,w,c
  2805   0023F4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2806   0023F6  B4D8               	btfsc	status,2,c
  2807   0023F8  EF00  F012         	goto	u2021
  2808   0023FC  EF02  F012         	goto	u2020
  2809   002400                     u2021:
  2810   002400  EF2A  F012         	goto	l3024
  2811   002404                     u2020:
  2812   002404  0E01               	movlw	1
  2813   002406  6E05               	movwf	___awdiv@counter^0,c
  2814   002408  EF0A  F012         	goto	l3010
  2815   00240C                     l3008:
  2816   00240C  90D8               	bcf	status,0,c
  2817   00240E  3603               	rlcf	___awdiv@divisor^0,f,c
  2818   002410  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2819   002412  2A05               	incf	___awdiv@counter^0,f,c
  2820   002414                     l3010:
  2821   002414  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2822   002416  EF0F  F012         	goto	u2031
  2823   00241A  EF11  F012         	goto	u2030
  2824   00241E                     u2031:
  2825   00241E  EF06  F012         	goto	l3008
  2826   002422                     u2030:
  2827   002422                     l3012:
  2828   002422  90D8               	bcf	status,0,c
  2829   002424  3607               	rlcf	___awdiv@quotient^0,f,c
  2830   002426  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2831   002428  5003               	movf	___awdiv@divisor^0,w,c
  2832   00242A  5C01               	subwf	___awdiv@dividend^0,w,c
  2833   00242C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2834   00242E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2835   002430  A0D8               	btfss	status,0,c
  2836   002432  EF1D  F012         	goto	u2041
  2837   002436  EF1F  F012         	goto	u2040
  2838   00243A                     u2041:
  2839   00243A  EF24  F012         	goto	l3020
  2840   00243E                     u2040:
  2841   00243E  5003               	movf	___awdiv@divisor^0,w,c
  2842   002440  5E01               	subwf	___awdiv@dividend^0,f,c
  2843   002442  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2844   002444  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2845   002446  8007               	bsf	___awdiv@quotient^0,0,c
  2846   002448                     l3020:
  2847   002448  90D8               	bcf	status,0,c
  2848   00244A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2849   00244C  3203               	rrcf	___awdiv@divisor^0,f,c
  2850   00244E  2E05               	decfsz	___awdiv@counter^0,f,c
  2851   002450  EF11  F012         	goto	l3012
  2852   002454                     l3024:
  2853   002454  5006               	movf	___awdiv@sign^0,w,c
  2854   002456  B4D8               	btfsc	status,2,c
  2855   002458  EF30  F012         	goto	u2051
  2856   00245C  EF32  F012         	goto	u2050
  2857   002460                     u2051:
  2858   002460  EF36  F012         	goto	l3028
  2859   002464                     u2050:
  2860   002464  6C07               	negf	___awdiv@quotient^0,c
  2861   002466  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2862   002468  B0D8               	btfsc	status,0,c
  2863   00246A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2864   00246C                     l3028:
  2865   00246C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2866   002470  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2867   002474  0012               	return		;funcret
  2868   002476                     __end_of___awdiv:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _sendStringSerial4 *****************
  2872 ;; Defined at:
  2873 ;;		line 41 in file "serial.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  string          2    1[COMRAM] PTR unsigned char 
  2876 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2877 ;;		 -> sendIntSerial4@string(17), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2893 ;;Total ram usage:        2 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 2
  2896 ;; This function calls:
  2897 ;;		_sendCharSerial4
  2898 ;; This function is called by:
  2899 ;;		_sendRGBCvalSerial4
  2900 ;;		_sendHSVvalSerial4
  2901 ;;		_sendIntSerial4
  2902 ;;		_sendArrayCharSerial4
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text14
  2907   0029B8                     __ptext14:
  2908                           	callstack 0
  2909   0029B8                     _sendStringSerial4:
  2910                           	callstack 27
  2911   0029B8                     
  2912                           ;serial.c: 43:     while(*string != 0){
  2913   0029B8  EFF3  F014         	goto	l3462
  2914   0029BC                     l3458:
  2915                           
  2916                           ;serial.c: 44:   sendCharSerial4(*string++);
  2917   0029BC  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2918   0029C0  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2919   0029C4  0E00               	movlw	low (__smallconst shr (0+16))
  2920   0029C6  6EF8               	movwf	tblptru,c
  2921   0029C8  0E0D               	movlw	(high __ramtop+-1)
  2922   0029CA  64F7               	cpfsgt	tblptrh,c
  2923   0029CC  D003               	bra	u2617
  2924   0029CE  0008               	tblrd		*
  2925   0029D0  50F5               	movf	tablat,w,c
  2926   0029D2  D005               	bra	u2610
  2927   0029D4                     u2617:
  2928   0029D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2929   0029D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2930   0029DC  50EF               	movf	indf0,w,c
  2931   0029DE                     u2610:
  2932   0029DE  EC44  F017         	call	_sendCharSerial4
  2933   0029E2  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2934   0029E4  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2935   0029E6                     l3462:
  2936                           
  2937                           ;serial.c: 43:     while(*string != 0){
  2938   0029E6  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2939   0029EA  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2940   0029EE  0E00               	movlw	low (__smallconst shr (0+16))
  2941   0029F0  6EF8               	movwf	tblptru,c
  2942   0029F2  0E0D               	movlw	(high __ramtop+-1)
  2943   0029F4  64F7               	cpfsgt	tblptrh,c
  2944   0029F6  D003               	bra	u2627
  2945   0029F8  0008               	tblrd		*
  2946   0029FA  50F5               	movf	tablat,w,c
  2947   0029FC  D005               	bra	u2620
  2948   0029FE                     u2627:
  2949   0029FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2950   002A02  CFF7 FFEA          	movff	tblptrh,fsr0h
  2951   002A06  50EF               	movf	indf0,w,c
  2952   002A08                     u2620:
  2953   002A08  0900               	iorlw	0
  2954   002A0A  A4D8               	btfss	status,2,c
  2955   002A0C  EF0A  F015         	goto	u2631
  2956   002A10  EF0C  F015         	goto	u2630
  2957   002A14                     u2631:
  2958   002A14  EFDE  F014         	goto	l3458
  2959   002A18                     u2630:
  2960   002A18  0012               	return		;funcret
  2961   002A1A                     __end_of_sendStringSerial4:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _sendCharSerial4 *****************
  2965 ;; Defined at:
  2966 ;;		line 33 in file "serial.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  charToSend      1    wreg     unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  charToSend      1    0[COMRAM] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_sendStringSerial4
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text15
  2995   002E88                     __ptext15:
  2996                           	callstack 0
  2997   002E88                     _sendCharSerial4:
  2998                           	callstack 27
  2999                           
  3000                           ;incstack = 0
  3001                           ;sendCharSerial4@charToSend stored from wreg
  3002   002E88  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3003   002E8A                     l462:
  3004   002E8A  010E               	movlb	14	; () banked
  3005   002E8C  A537               	btfss	55,2,b	;volatile
  3006   002E8E  EF4B  F017         	goto	u2551
  3007   002E92  EF4D  F017         	goto	u2550
  3008   002E96                     u2551:
  3009   002E96  EF45  F017         	goto	l462
  3010   002E9A                     u2550:
  3011   002E9A                     
  3012                           ; BSR set to: 14
  3013                           ;serial.c: 35:     TX4REG = charToSend;
  3014   002E9A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3015   002E9E                     
  3016                           ; BSR set to: 14
  3017   002E9E  0012               	return		;funcret
  3018   002EA0                     __end_of_sendCharSerial4:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _scale_RGB *****************
  3022 ;; Defined at:
  3023 ;;		line 193 in file "color.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  3026 ;;		 -> main@RGBC_colour(8), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3038 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;Total ram usage:        3 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 2
  3045 ;; This function calls:
  3046 ;;		___flmul
  3047 ;;		___fltol
  3048 ;;		___xxtofl
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;;		_forward_navigation
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text16
  3056   002214                     __ptext16:
  3057                           	callstack 0
  3058   002214                     _scale_RGB:
  3059                           	callstack 28
  3060   002214                     
  3061                           ;color.c: 193: void scale_RGB(struct RGBC_val *p);color.c: 194: {;color.c: 195:     p->R
      +                           *= 0.5;
  3062   002214  0E00               	movlw	0
  3063   002216  6E13               	movwf	___flmul@a^0,c
  3064   002218  0E00               	movlw	0
  3065   00221A  6E14               	movwf	(___flmul@a+1)^0,c
  3066   00221C  0E00               	movlw	0
  3067   00221E  6E15               	movwf	(___flmul@a+2)^0,c
  3068   002220  0E3F               	movlw	63
  3069   002222  6E16               	movwf	(___flmul@a+3)^0,c
  3070   002224  5032               	movf	scale_RGB@p^0,w,c
  3071   002226  6ED9               	movwf	fsr2l,c
  3072   002228  6ADA               	clrf	fsr2h,c
  3073   00222A  CFDE F033          	movff	postinc2,??_scale_RGB
  3074   00222E  CFDD F034          	movff	postdec2,??_scale_RGB+1
  3075   002232  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  3076   002236  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  3077   00223A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3078   00223C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3079   00223E  0E00               	movlw	0
  3080   002240  EC0A  F00F         	call	___xxtofl
  3081   002244  C001  F00F         	movff	?___xxtofl,___flmul@b
  3082   002248  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3083   00224C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3084   002250  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3085   002254  EC73  F00A         	call	___flmul	;wreg free
  3086   002258  C00F  F028         	movff	?___flmul,___fltol@f1
  3087   00225C  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3088   002260  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3089   002264  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3090   002268  EC87  F010         	call	___fltol	;wreg free
  3091   00226C  5032               	movf	scale_RGB@p^0,w,c
  3092   00226E  6ED9               	movwf	fsr2l,c
  3093   002270  6ADA               	clrf	fsr2h,c
  3094   002272  C028  FFDE         	movff	?___fltol,postinc2
  3095   002276  C029  FFDD         	movff	?___fltol+1,postdec2
  3096                           
  3097                           ;color.c: 196:     p->G *= 0.7;
  3098   00227A  0E33               	movlw	51
  3099   00227C  6E13               	movwf	___flmul@a^0,c
  3100   00227E  0E33               	movlw	51
  3101   002280  6E14               	movwf	(___flmul@a+1)^0,c
  3102   002282  0E33               	movlw	51
  3103   002284  6E15               	movwf	(___flmul@a+2)^0,c
  3104   002286  0E3F               	movlw	63
  3105   002288  6E16               	movwf	(___flmul@a+3)^0,c
  3106   00228A  5032               	movf	scale_RGB@p^0,w,c
  3107   00228C  6ED9               	movwf	fsr2l,c
  3108   00228E  6ADA               	clrf	fsr2h,c
  3109   002290  0E02               	movlw	2
  3110   002292  26D9               	addwf	fsr2l,f,c
  3111   002294  CFDE F033          	movff	postinc2,??_scale_RGB
  3112   002298  CFDD F034          	movff	postdec2,??_scale_RGB+1
  3113   00229C  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  3114   0022A0  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  3115   0022A4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3116   0022A6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3117   0022A8  0E00               	movlw	0
  3118   0022AA  EC0A  F00F         	call	___xxtofl
  3119   0022AE  C001  F00F         	movff	?___xxtofl,___flmul@b
  3120   0022B2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3121   0022B6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3122   0022BA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3123   0022BE  EC73  F00A         	call	___flmul	;wreg free
  3124   0022C2  C00F  F028         	movff	?___flmul,___fltol@f1
  3125   0022C6  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3126   0022CA  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3127   0022CE  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3128   0022D2  EC87  F010         	call	___fltol	;wreg free
  3129   0022D6  5032               	movf	scale_RGB@p^0,w,c
  3130   0022D8  6ED9               	movwf	fsr2l,c
  3131   0022DA  6ADA               	clrf	fsr2h,c
  3132   0022DC  0E02               	movlw	2
  3133   0022DE  26D9               	addwf	fsr2l,f,c
  3134   0022E0  C028  FFDE         	movff	?___fltol,postinc2
  3135   0022E4  C029  FFDD         	movff	?___fltol+1,postdec2
  3136   0022E8  0012               	return		;funcret
  3137   0022EA                     __end_of_scale_RGB:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function ___xxtofl *****************
  3141 ;; Defined at:
  3142 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  sign            1    wreg     unsigned char 
  3145 ;;  val             4    0[COMRAM] long 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  sign            1    8[COMRAM] unsigned char 
  3148 ;;  arg             4   10[COMRAM] unsigned long 
  3149 ;;  exp             1    9[COMRAM] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  4    0[COMRAM] unsigned char 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:       14 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_scale_RGB
  3170 ;;		_stop
  3171 ;;		_turnLeft
  3172 ;;		_turnRight
  3173 ;;		_fullSpeedAhead
  3174 ;;		_fullSpeedReverse
  3175 ;;		_turnLeft90
  3176 ;;		_turnRight90
  3177 ;;		_turnLeft135
  3178 ;;		_turnRight135
  3179 ;;		_UTurn
  3180 ;;		_headbuttReverse
  3181 ;;		_squareReverse
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text17
  3186   001E14                     __ptext17:
  3187                           	callstack 0
  3188   001E14                     ___xxtofl:
  3189                           	callstack 28
  3190                           
  3191                           ;incstack = 0
  3192                           ;___xxtofl@sign stored from wreg
  3193   001E14  6E09               	movwf	___xxtofl@sign^0,c
  3194   001E16  5009               	movf	___xxtofl@sign^0,w,c
  3195   001E18  B4D8               	btfsc	status,2,c
  3196   001E1A  EF11  F00F         	goto	u2951
  3197   001E1E  EF13  F00F         	goto	u2950
  3198   001E22                     u2951:
  3199   001E22  EF35  F00F         	goto	l1404
  3200   001E26                     u2950:
  3201   001E26  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3202   001E28  EF1A  F00F         	goto	u2960
  3203   001E2C  EF18  F00F         	goto	u2961
  3204   001E30                     u2961:
  3205   001E30  EF35  F00F         	goto	l1404
  3206   001E34                     u2960:
  3207   001E34  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3208   001E38  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3209   001E3C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3210   001E40  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3211   001E44  1E05               	comf	??___xxtofl^0,f,c
  3212   001E46  1E06               	comf	(??___xxtofl+1)^0,f,c
  3213   001E48  1E07               	comf	(??___xxtofl+2)^0,f,c
  3214   001E4A  1E08               	comf	(??___xxtofl+3)^0,f,c
  3215   001E4C  2A05               	incf	??___xxtofl^0,f,c
  3216   001E4E  0E00               	movlw	0
  3217   001E50  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3218   001E52  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3219   001E54  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3220   001E56  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3221   001E5A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3222   001E5E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3223   001E62  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3224   001E66  EF3D  F00F         	goto	l3792
  3225   001E6A                     l1404:
  3226   001E6A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3227   001E6E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3228   001E72  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3229   001E76  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3230   001E7A                     l3792:
  3231   001E7A  5001               	movf	___xxtofl@val^0,w,c
  3232   001E7C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3233   001E7E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3234   001E80  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3235   001E82  A4D8               	btfss	status,2,c
  3236   001E84  EF46  F00F         	goto	u2971
  3237   001E88  EF48  F00F         	goto	u2970
  3238   001E8C                     u2971:
  3239   001E8C  EF52  F00F         	goto	l3798
  3240   001E90                     u2970:
  3241   001E90  0E00               	movlw	0
  3242   001E92  6E01               	movwf	?___xxtofl^0,c
  3243   001E94  0E00               	movlw	0
  3244   001E96  6E02               	movwf	(?___xxtofl+1)^0,c
  3245   001E98  0E00               	movlw	0
  3246   001E9A  6E03               	movwf	(?___xxtofl+2)^0,c
  3247   001E9C  0E00               	movlw	0
  3248   001E9E  6E04               	movwf	(?___xxtofl+3)^0,c
  3249   001EA0  EFE3  F00F         	goto	l1407
  3250   001EA4                     l3798:
  3251   001EA4  0E96               	movlw	150
  3252   001EA6  6E0A               	movwf	___xxtofl@exp^0,c
  3253   001EA8  EF5C  F00F         	goto	l3802
  3254   001EAC                     l3800:
  3255   001EAC  2A0A               	incf	___xxtofl@exp^0,f,c
  3256   001EAE  90D8               	bcf	status,0,c
  3257   001EB0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3258   001EB2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3259   001EB4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3260   001EB6  320B               	rrcf	___xxtofl@arg^0,f,c
  3261   001EB8                     l3802:
  3262   001EB8  0E00               	movlw	0
  3263   001EBA  140B               	andwf	___xxtofl@arg^0,w,c
  3264   001EBC  6E05               	movwf	??___xxtofl^0,c
  3265   001EBE  0E00               	movlw	0
  3266   001EC0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3267   001EC2  6E06               	movwf	(??___xxtofl+1)^0,c
  3268   001EC4  0E00               	movlw	0
  3269   001EC6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3270   001EC8  6E07               	movwf	(??___xxtofl+2)^0,c
  3271   001ECA  0EFE               	movlw	254
  3272   001ECC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3273   001ECE  6E08               	movwf	(??___xxtofl+3)^0,c
  3274   001ED0  5005               	movf	??___xxtofl^0,w,c
  3275   001ED2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3276   001ED4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3277   001ED6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3278   001ED8  A4D8               	btfss	status,2,c
  3279   001EDA  EF71  F00F         	goto	u2981
  3280   001EDE  EF73  F00F         	goto	u2980
  3281   001EE2                     u2981:
  3282   001EE2  EF56  F00F         	goto	l3800
  3283   001EE6                     u2980:
  3284   001EE6  EF81  F00F         	goto	l1411
  3285   001EEA                     l3804:
  3286   001EEA  2A0A               	incf	___xxtofl@exp^0,f,c
  3287   001EEC  0E01               	movlw	1
  3288   001EEE  260B               	addwf	___xxtofl@arg^0,f,c
  3289   001EF0  0E00               	movlw	0
  3290   001EF2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3291   001EF4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3292   001EF6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3293   001EF8  90D8               	bcf	status,0,c
  3294   001EFA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3295   001EFC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3296   001EFE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3297   001F00  320B               	rrcf	___xxtofl@arg^0,f,c
  3298   001F02                     l1411:
  3299   001F02  0E00               	movlw	0
  3300   001F04  140B               	andwf	___xxtofl@arg^0,w,c
  3301   001F06  6E05               	movwf	??___xxtofl^0,c
  3302   001F08  0E00               	movlw	0
  3303   001F0A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3304   001F0C  6E06               	movwf	(??___xxtofl+1)^0,c
  3305   001F0E  0E00               	movlw	0
  3306   001F10  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3307   001F12  6E07               	movwf	(??___xxtofl+2)^0,c
  3308   001F14  0EFF               	movlw	255
  3309   001F16  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3310   001F18  6E08               	movwf	(??___xxtofl+3)^0,c
  3311   001F1A  5005               	movf	??___xxtofl^0,w,c
  3312   001F1C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3313   001F1E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3314   001F20  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3315   001F22  A4D8               	btfss	status,2,c
  3316   001F24  EF96  F00F         	goto	u2991
  3317   001F28  EF98  F00F         	goto	u2990
  3318   001F2C                     u2991:
  3319   001F2C  EF75  F00F         	goto	l3804
  3320   001F30                     u2990:
  3321   001F30  EFA0  F00F         	goto	l3812
  3322   001F34                     l3810:
  3323   001F34  060A               	decf	___xxtofl@exp^0,f,c
  3324   001F36  90D8               	bcf	status,0,c
  3325   001F38  360B               	rlcf	___xxtofl@arg^0,f,c
  3326   001F3A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3327   001F3C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3328   001F3E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3329   001F40                     l3812:
  3330   001F40  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3331   001F42  EFA5  F00F         	goto	u3001
  3332   001F46  EFA7  F00F         	goto	u3000
  3333   001F4A                     u3001:
  3334   001F4A  EFAF  F00F         	goto	l1418
  3335   001F4E                     u3000:
  3336   001F4E  0E02               	movlw	2
  3337   001F50  600A               	cpfslt	___xxtofl@exp^0,c
  3338   001F52  EFAD  F00F         	goto	u3011
  3339   001F56  EFAF  F00F         	goto	u3010
  3340   001F5A                     u3011:
  3341   001F5A  EF9A  F00F         	goto	l3810
  3342   001F5E                     u3010:
  3343   001F5E                     l1418:
  3344   001F5E  B00A               	btfsc	___xxtofl@exp^0,0,c
  3345   001F60  EFB4  F00F         	goto	u3021
  3346   001F64  EFB6  F00F         	goto	u3020
  3347   001F68                     u3021:
  3348   001F68  EFB7  F00F         	goto	l3818
  3349   001F6C                     u3020:
  3350   001F6C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3351   001F6E                     l3818:
  3352   001F6E  90D8               	bcf	status,0,c
  3353   001F70  320A               	rrcf	___xxtofl@exp^0,f,c
  3354   001F72  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3355   001F76  6A06               	clrf	(??___xxtofl+1)^0,c
  3356   001F78  6A07               	clrf	(??___xxtofl+2)^0,c
  3357   001F7A  6A08               	clrf	(??___xxtofl+3)^0,c
  3358   001F7C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3359   001F80  6A07               	clrf	(??___xxtofl+2)^0,c
  3360   001F82  6A06               	clrf	(??___xxtofl+1)^0,c
  3361   001F84  6A05               	clrf	??___xxtofl^0,c
  3362   001F86  5005               	movf	??___xxtofl^0,w,c
  3363   001F88  120B               	iorwf	___xxtofl@arg^0,f,c
  3364   001F8A  5006               	movf	(??___xxtofl+1)^0,w,c
  3365   001F8C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3366   001F8E  5007               	movf	(??___xxtofl+2)^0,w,c
  3367   001F90  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3368   001F92  5008               	movf	(??___xxtofl+3)^0,w,c
  3369   001F94  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3370   001F96  5009               	movf	___xxtofl@sign^0,w,c
  3371   001F98  B4D8               	btfsc	status,2,c
  3372   001F9A  EFD1  F00F         	goto	u3031
  3373   001F9E  EFD3  F00F         	goto	u3030
  3374   001FA2                     u3031:
  3375   001FA2  EFDB  F00F         	goto	l3828
  3376   001FA6                     u3030:
  3377   001FA6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3378   001FA8  EFDA  F00F         	goto	u3040
  3379   001FAC  EFD8  F00F         	goto	u3041
  3380   001FB0                     u3041:
  3381   001FB0  EFDB  F00F         	goto	l3828
  3382   001FB4                     u3040:
  3383   001FB4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3384   001FB6                     l3828:
  3385   001FB6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3386   001FBA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3387   001FBE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3388   001FC2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3389   001FC6                     l1407:
  3390   001FC6  0012               	return		;funcret
  3391   001FC8                     __end_of___xxtofl:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function ___fltol *****************
  3395 ;; Defined at:
  3396 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  f1              4   39[COMRAM] unsigned char 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  exp1            1   48[COMRAM] unsigned char 
  3401 ;;  sign1           1   47[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  4   39[COMRAM] long 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;Total ram usage:       10 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_scale_RGB
  3422 ;;		_stop
  3423 ;;		_turnLeft
  3424 ;;		_turnRight
  3425 ;;		_fullSpeedAhead
  3426 ;;		_fullSpeedReverse
  3427 ;;		_turnLeft90
  3428 ;;		_turnRight90
  3429 ;;		_turnLeft135
  3430 ;;		_turnRight135
  3431 ;;		_UTurn
  3432 ;;		_headbuttReverse
  3433 ;;		_squareReverse
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text18
  3438   00210E                     __ptext18:
  3439                           	callstack 0
  3440   00210E                     ___fltol:
  3441                           	callstack 28
  3442   00210E  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3443   002110  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3444   002112  6E31               	movwf	___fltol@exp1^0,c
  3445   002114  5031               	movf	___fltol@exp1^0,w,c
  3446   002116  A4D8               	btfss	status,2,c
  3447   002118  EF90  F010         	goto	u2881
  3448   00211C  EF92  F010         	goto	u2880
  3449   002120                     u2881:
  3450   002120  EF9C  F010         	goto	l3748
  3451   002124                     u2880:
  3452   002124                     l3744:
  3453   002124  0E00               	movlw	0
  3454   002126  6E28               	movwf	?___fltol^0,c
  3455   002128  0E00               	movlw	0
  3456   00212A  6E29               	movwf	(?___fltol+1)^0,c
  3457   00212C  0E00               	movlw	0
  3458   00212E  6E2A               	movwf	(?___fltol+2)^0,c
  3459   002130  0E00               	movlw	0
  3460   002132  6E2B               	movwf	(?___fltol+3)^0,c
  3461   002134  EF09  F011         	goto	l1046
  3462   002138                     l3748:
  3463   002138  C028  F02C         	movff	___fltol@f1,??___fltol
  3464   00213C  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3465   002140  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3466   002144  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3467   002148  0E20               	movlw	32
  3468   00214A  EFAC  F010         	goto	u2890
  3469   00214E                     u2895:
  3470   00214E  90D8               	bcf	status,0,c
  3471   002150  322F               	rrcf	(??___fltol+3)^0,f,c
  3472   002152  322E               	rrcf	(??___fltol+2)^0,f,c
  3473   002154  322D               	rrcf	(??___fltol+1)^0,f,c
  3474   002156  322C               	rrcf	??___fltol^0,f,c
  3475   002158                     u2890:
  3476   002158  2EE8               	decfsz	wreg,f,c
  3477   00215A  EFA7  F010         	goto	u2895
  3478   00215E  502C               	movf	??___fltol^0,w,c
  3479   002160  6E30               	movwf	___fltol@sign1^0,c
  3480   002162  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3481   002164  0EFF               	movlw	255
  3482   002166  1628               	andwf	___fltol@f1^0,f,c
  3483   002168  0EFF               	movlw	255
  3484   00216A  1629               	andwf	(___fltol@f1+1)^0,f,c
  3485   00216C  0EFF               	movlw	255
  3486   00216E  162A               	andwf	(___fltol@f1+2)^0,f,c
  3487   002170  0E00               	movlw	0
  3488   002172  162B               	andwf	(___fltol@f1+3)^0,f,c
  3489   002174  0E96               	movlw	150
  3490   002176  5E31               	subwf	___fltol@exp1^0,f,c
  3491   002178  BE31               	btfsc	___fltol@exp1^0,7,c
  3492   00217A  EFC3  F010         	goto	u2900
  3493   00217E  EFC1  F010         	goto	u2901
  3494   002182                     u2901:
  3495   002182  EFD9  F010         	goto	l3768
  3496   002186                     u2900:
  3497   002186  5031               	movf	___fltol@exp1^0,w,c
  3498   002188  0A80               	xorlw	128
  3499   00218A  0F97               	addlw	151
  3500   00218C  B0D8               	btfsc	status,0,c
  3501   00218E  EFCB  F010         	goto	u2911
  3502   002192  EFCD  F010         	goto	u2910
  3503   002196                     u2911:
  3504   002196  EFCF  F010         	goto	l3764
  3505   00219A                     u2910:
  3506   00219A  EF92  F010         	goto	l3744
  3507   00219E                     l3764:
  3508   00219E  90D8               	bcf	status,0,c
  3509   0021A0  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3510   0021A2  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3511   0021A4  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3512   0021A6  3228               	rrcf	___fltol@f1^0,f,c
  3513   0021A8  3E31               	incfsz	___fltol@exp1^0,f,c
  3514   0021AA  EFCF  F010         	goto	l3764
  3515   0021AE  EFF1  F010         	goto	l3778
  3516   0021B2                     l3768:
  3517   0021B2  0E1F               	movlw	31
  3518   0021B4  6431               	cpfsgt	___fltol@exp1^0,c
  3519   0021B6  EFDF  F010         	goto	u2921
  3520   0021BA  EFE1  F010         	goto	u2920
  3521   0021BE                     u2921:
  3522   0021BE  EFE9  F010         	goto	l3776
  3523   0021C2                     u2920:
  3524   0021C2  EF92  F010         	goto	l3744
  3525   0021C6                     l3774:
  3526   0021C6  90D8               	bcf	status,0,c
  3527   0021C8  3628               	rlcf	___fltol@f1^0,f,c
  3528   0021CA  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3529   0021CC  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3530   0021CE  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3531   0021D0  0631               	decf	___fltol@exp1^0,f,c
  3532   0021D2                     l3776:
  3533   0021D2  5031               	movf	___fltol@exp1^0,w,c
  3534   0021D4  A4D8               	btfss	status,2,c
  3535   0021D6  EFEF  F010         	goto	u2931
  3536   0021DA  EFF1  F010         	goto	u2930
  3537   0021DE                     u2931:
  3538   0021DE  EFE3  F010         	goto	l3774
  3539   0021E2                     u2930:
  3540   0021E2                     l3778:
  3541   0021E2  5030               	movf	___fltol@sign1^0,w,c
  3542   0021E4  B4D8               	btfsc	status,2,c
  3543   0021E6  EFF7  F010         	goto	u2941
  3544   0021EA  EFF9  F010         	goto	u2940
  3545   0021EE                     u2941:
  3546   0021EE  EF01  F011         	goto	l3782
  3547   0021F2                     u2940:
  3548   0021F2  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3549   0021F4  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3550   0021F6  1E29               	comf	(___fltol@f1+1)^0,f,c
  3551   0021F8  6C28               	negf	___fltol@f1^0,c
  3552   0021FA  0E00               	movlw	0
  3553   0021FC  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3554   0021FE  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3555   002200  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3556   002202                     l3782:
  3557   002202  C028  F028         	movff	___fltol@f1,?___fltol
  3558   002206  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3559   00220A  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3560   00220E  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3561   002212                     l1046:
  3562   002212  0012               	return		;funcret
  3563   002214                     __end_of___fltol:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function ___flmul *****************
  3567 ;; Defined at:
  3568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  b               4   14[COMRAM] long 
  3571 ;;  a               4   18[COMRAM] long 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  prod            4   33[COMRAM] struct .
  3574 ;;  grs             4   27[COMRAM] unsigned long 
  3575 ;;  temp            2   37[COMRAM] struct .
  3576 ;;  bexp            1   32[COMRAM] unsigned char 
  3577 ;;  aexp            1   31[COMRAM] unsigned char 
  3578 ;;  sign            1   26[COMRAM] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  4   14[COMRAM] unsigned char 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0, prodl, prodh
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3588 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;Total ram usage:       25 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_scale_RGB
  3599 ;;		_stop
  3600 ;;		_turnLeft
  3601 ;;		_turnRight
  3602 ;;		_fullSpeedAhead
  3603 ;;		_fullSpeedReverse
  3604 ;;		_turnLeft90
  3605 ;;		_turnRight90
  3606 ;;		_turnLeft135
  3607 ;;		_turnRight135
  3608 ;;		_UTurn
  3609 ;;		_headbuttReverse
  3610 ;;		_squareReverse
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text19
  3615   0014E6                     __ptext19:
  3616                           	callstack 0
  3617   0014E6                     ___flmul:
  3618                           	callstack 28
  3619   0014E6  5012               	movf	(___flmul@b+3)^0,w,c
  3620   0014E8  0B80               	andlw	128
  3621   0014EA  6E1B               	movwf	___flmul@sign^0,c
  3622   0014EC  5012               	movf	(___flmul@b+3)^0,w,c
  3623   0014EE  2412               	addwf	(___flmul@b+3)^0,w,c
  3624   0014F0  6E21               	movwf	___flmul@bexp^0,c
  3625   0014F2  AE11               	btfss	(___flmul@b+2)^0,7,c
  3626   0014F4  EF7E  F00A         	goto	u2691
  3627   0014F8  EF80  F00A         	goto	u2690
  3628   0014FC                     u2691:
  3629   0014FC  EF81  F00A         	goto	l3618
  3630   001500                     u2690:
  3631   001500  8021               	bsf	___flmul@bexp^0,0,c
  3632   001502                     l3618:
  3633   001502  5021               	movf	___flmul@bexp^0,w,c
  3634   001504  B4D8               	btfsc	status,2,c
  3635   001506  EF87  F00A         	goto	u2701
  3636   00150A  EF89  F00A         	goto	u2700
  3637   00150E                     u2701:
  3638   00150E  EF9C  F00A         	goto	l3626
  3639   001512                     u2700:
  3640   001512  2821               	incf	___flmul@bexp^0,w,c
  3641   001514  A4D8               	btfss	status,2,c
  3642   001516  EF8F  F00A         	goto	u2711
  3643   00151A  EF91  F00A         	goto	u2710
  3644   00151E                     u2711:
  3645   00151E  EF99  F00A         	goto	l3624
  3646   001522                     u2710:
  3647   001522  0E00               	movlw	0
  3648   001524  6E0F               	movwf	___flmul@b^0,c
  3649   001526  0E00               	movlw	0
  3650   001528  6E10               	movwf	(___flmul@b+1)^0,c
  3651   00152A  0E00               	movlw	0
  3652   00152C  6E11               	movwf	(___flmul@b+2)^0,c
  3653   00152E  0E00               	movlw	0
  3654   001530  6E12               	movwf	(___flmul@b+3)^0,c
  3655   001532                     l3624:
  3656   001532  8E11               	bsf	(___flmul@b+2)^0,7,c
  3657   001534  EFA4  F00A         	goto	l3628
  3658   001538                     l3626:
  3659   001538  0E00               	movlw	0
  3660   00153A  6E0F               	movwf	___flmul@b^0,c
  3661   00153C  0E00               	movlw	0
  3662   00153E  6E10               	movwf	(___flmul@b+1)^0,c
  3663   001540  0E00               	movlw	0
  3664   001542  6E11               	movwf	(___flmul@b+2)^0,c
  3665   001544  0E00               	movlw	0
  3666   001546  6E12               	movwf	(___flmul@b+3)^0,c
  3667   001548                     l3628:
  3668   001548  5016               	movf	(___flmul@a+3)^0,w,c
  3669   00154A  0B80               	andlw	128
  3670   00154C  1A1B               	xorwf	___flmul@sign^0,f,c
  3671   00154E  5016               	movf	(___flmul@a+3)^0,w,c
  3672   001550  2416               	addwf	(___flmul@a+3)^0,w,c
  3673   001552  6E20               	movwf	___flmul@aexp^0,c
  3674   001554  AE15               	btfss	(___flmul@a+2)^0,7,c
  3675   001556  EFAF  F00A         	goto	u2721
  3676   00155A  EFB1  F00A         	goto	u2720
  3677   00155E                     u2721:
  3678   00155E  EFB2  F00A         	goto	l3636
  3679   001562                     u2720:
  3680   001562  8020               	bsf	___flmul@aexp^0,0,c
  3681   001564                     l3636:
  3682   001564  5020               	movf	___flmul@aexp^0,w,c
  3683   001566  B4D8               	btfsc	status,2,c
  3684   001568  EFB8  F00A         	goto	u2731
  3685   00156C  EFBA  F00A         	goto	u2730
  3686   001570                     u2731:
  3687   001570  EFCD  F00A         	goto	l3644
  3688   001574                     u2730:
  3689   001574  2820               	incf	___flmul@aexp^0,w,c
  3690   001576  A4D8               	btfss	status,2,c
  3691   001578  EFC0  F00A         	goto	u2741
  3692   00157C  EFC2  F00A         	goto	u2740
  3693   001580                     u2741:
  3694   001580  EFCA  F00A         	goto	l3642
  3695   001584                     u2740:
  3696   001584  0E00               	movlw	0
  3697   001586  6E13               	movwf	___flmul@a^0,c
  3698   001588  0E00               	movlw	0
  3699   00158A  6E14               	movwf	(___flmul@a+1)^0,c
  3700   00158C  0E00               	movlw	0
  3701   00158E  6E15               	movwf	(___flmul@a+2)^0,c
  3702   001590  0E00               	movlw	0
  3703   001592  6E16               	movwf	(___flmul@a+3)^0,c
  3704   001594                     l3642:
  3705   001594  8E15               	bsf	(___flmul@a+2)^0,7,c
  3706   001596  EFD5  F00A         	goto	l1363
  3707   00159A                     l3644:
  3708   00159A  0E00               	movlw	0
  3709   00159C  6E13               	movwf	___flmul@a^0,c
  3710   00159E  0E00               	movlw	0
  3711   0015A0  6E14               	movwf	(___flmul@a+1)^0,c
  3712   0015A2  0E00               	movlw	0
  3713   0015A4  6E15               	movwf	(___flmul@a+2)^0,c
  3714   0015A6  0E00               	movlw	0
  3715   0015A8  6E16               	movwf	(___flmul@a+3)^0,c
  3716   0015AA                     l1363:
  3717   0015AA  5020               	movf	___flmul@aexp^0,w,c
  3718   0015AC  B4D8               	btfsc	status,2,c
  3719   0015AE  EFDB  F00A         	goto	u2751
  3720   0015B2  EFDD  F00A         	goto	u2750
  3721   0015B6                     u2751:
  3722   0015B6  EFE5  F00A         	goto	l3648
  3723   0015BA                     u2750:
  3724   0015BA  5021               	movf	___flmul@bexp^0,w,c
  3725   0015BC  A4D8               	btfss	status,2,c
  3726   0015BE  EFE3  F00A         	goto	u2761
  3727   0015C2  EFE5  F00A         	goto	u2760
  3728   0015C6                     u2761:
  3729   0015C6  EFEF  F00A         	goto	l3652
  3730   0015CA                     u2760:
  3731   0015CA                     l3648:
  3732   0015CA  0E00               	movlw	0
  3733   0015CC  6E0F               	movwf	?___flmul^0,c
  3734   0015CE  0E00               	movlw	0
  3735   0015D0  6E10               	movwf	(?___flmul+1)^0,c
  3736   0015D2  0E00               	movlw	0
  3737   0015D4  6E11               	movwf	(?___flmul+2)^0,c
  3738   0015D6  0E00               	movlw	0
  3739   0015D8  6E12               	movwf	(?___flmul+3)^0,c
  3740   0015DA  EF87  F00C         	goto	l1367
  3741   0015DE                     l3652:
  3742   0015DE  5015               	movf	(___flmul@a+2)^0,w,c
  3743   0015E0  020F               	mulwf	___flmul@b^0,c
  3744   0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  3745   0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3746   0015EA  5026               	movf	___flmul@temp^0,w,c
  3747   0015EC  6E1C               	movwf	___flmul@grs^0,c
  3748   0015EE  6A1D               	clrf	(___flmul@grs+1)^0,c
  3749   0015F0  6A1E               	clrf	(___flmul@grs+2)^0,c
  3750   0015F2  6A1F               	clrf	(___flmul@grs+3)^0,c
  3751   0015F4  5027               	movf	(___flmul@temp+1)^0,w,c
  3752   0015F6  6E22               	movwf	___flmul@prod^0,c
  3753   0015F8  6A23               	clrf	(___flmul@prod+1)^0,c
  3754   0015FA  6A24               	clrf	(___flmul@prod+2)^0,c
  3755   0015FC  6A25               	clrf	(___flmul@prod+3)^0,c
  3756   0015FE  5014               	movf	(___flmul@a+1)^0,w,c
  3757   001600  0210               	mulwf	(___flmul@b+1)^0,c
  3758   001602  CFF3 F026          	movff	prodl,___flmul@temp
  3759   001606  CFF4 F027          	movff	prodh,___flmul@temp+1
  3760   00160A  5026               	movf	___flmul@temp^0,w,c
  3761   00160C  261C               	addwf	___flmul@grs^0,f,c
  3762   00160E  0E00               	movlw	0
  3763   001610  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3764   001612  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3765   001614  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3766   001616  5027               	movf	(___flmul@temp+1)^0,w,c
  3767   001618  2622               	addwf	___flmul@prod^0,f,c
  3768   00161A  0E00               	movlw	0
  3769   00161C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3770   00161E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3771   001620  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3772   001622  5013               	movf	___flmul@a^0,w,c
  3773   001624  0211               	mulwf	(___flmul@b+2)^0,c
  3774   001626  CFF3 F026          	movff	prodl,___flmul@temp
  3775   00162A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3776   00162E  5026               	movf	___flmul@temp^0,w,c
  3777   001630  261C               	addwf	___flmul@grs^0,f,c
  3778   001632  0E00               	movlw	0
  3779   001634  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3780   001636  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3781   001638  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3782   00163A  5027               	movf	(___flmul@temp+1)^0,w,c
  3783   00163C  2622               	addwf	___flmul@prod^0,f,c
  3784   00163E  0E00               	movlw	0
  3785   001640  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3786   001642  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3787   001644  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3788   001646  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3789   00164A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3790   00164E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3791   001652  6A1C               	clrf	___flmul@grs^0,c
  3792   001654  5013               	movf	___flmul@a^0,w,c
  3793   001656  0210               	mulwf	(___flmul@b+1)^0,c
  3794   001658  CFF3 F026          	movff	prodl,___flmul@temp
  3795   00165C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3796   001660  5026               	movf	___flmul@temp^0,w,c
  3797   001662  261C               	addwf	___flmul@grs^0,f,c
  3798   001664  5027               	movf	(___flmul@temp+1)^0,w,c
  3799   001666  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3800   001668  0E00               	movlw	0
  3801   00166A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3802   00166C  0E00               	movlw	0
  3803   00166E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3804   001670  5014               	movf	(___flmul@a+1)^0,w,c
  3805   001672  020F               	mulwf	___flmul@b^0,c
  3806   001674  CFF3 F026          	movff	prodl,___flmul@temp
  3807   001678  CFF4 F027          	movff	prodh,___flmul@temp+1
  3808   00167C  5026               	movf	___flmul@temp^0,w,c
  3809   00167E  261C               	addwf	___flmul@grs^0,f,c
  3810   001680  5027               	movf	(___flmul@temp+1)^0,w,c
  3811   001682  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3812   001684  0E00               	movlw	0
  3813   001686  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3814   001688  0E00               	movlw	0
  3815   00168A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3816   00168C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3817   001690  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3818   001694  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3819   001698  6A1C               	clrf	___flmul@grs^0,c
  3820   00169A  5013               	movf	___flmul@a^0,w,c
  3821   00169C  020F               	mulwf	___flmul@b^0,c
  3822   00169E  CFF3 F026          	movff	prodl,___flmul@temp
  3823   0016A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3824   0016A6  5026               	movf	___flmul@temp^0,w,c
  3825   0016A8  261C               	addwf	___flmul@grs^0,f,c
  3826   0016AA  5027               	movf	(___flmul@temp+1)^0,w,c
  3827   0016AC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3828   0016AE  0E00               	movlw	0
  3829   0016B0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3830   0016B2  0E00               	movlw	0
  3831   0016B4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3832   0016B6  5015               	movf	(___flmul@a+2)^0,w,c
  3833   0016B8  0210               	mulwf	(___flmul@b+1)^0,c
  3834   0016BA  CFF3 F026          	movff	prodl,___flmul@temp
  3835   0016BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3836   0016C2  5026               	movf	___flmul@temp^0,w,c
  3837   0016C4  2622               	addwf	___flmul@prod^0,f,c
  3838   0016C6  5027               	movf	(___flmul@temp+1)^0,w,c
  3839   0016C8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3840   0016CA  0E00               	movlw	0
  3841   0016CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3842   0016CE  0E00               	movlw	0
  3843   0016D0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3844   0016D2  5014               	movf	(___flmul@a+1)^0,w,c
  3845   0016D4  0211               	mulwf	(___flmul@b+2)^0,c
  3846   0016D6  CFF3 F026          	movff	prodl,___flmul@temp
  3847   0016DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3848   0016DE  5026               	movf	___flmul@temp^0,w,c
  3849   0016E0  2622               	addwf	___flmul@prod^0,f,c
  3850   0016E2  5027               	movf	(___flmul@temp+1)^0,w,c
  3851   0016E4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3852   0016E6  0E00               	movlw	0
  3853   0016E8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3854   0016EA  0E00               	movlw	0
  3855   0016EC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3856   0016EE  5015               	movf	(___flmul@a+2)^0,w,c
  3857   0016F0  0211               	mulwf	(___flmul@b+2)^0,c
  3858   0016F2  CFF3 F026          	movff	prodl,___flmul@temp
  3859   0016F6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3860   0016FA  5026               	movf	___flmul@temp^0,w,c
  3861   0016FC  6E17               	movwf	??___flmul^0,c
  3862   0016FE  5027               	movf	(___flmul@temp+1)^0,w,c
  3863   001700  6E18               	movwf	(??___flmul+1)^0,c
  3864   001702  6A19               	clrf	(??___flmul+2)^0,c
  3865   001704  6A1A               	clrf	(??___flmul+3)^0,c
  3866   001706  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3867   00170A  C018  F019         	movff	??___flmul+1,??___flmul+2
  3868   00170E  C017  F018         	movff	??___flmul,??___flmul+1
  3869   001712  6A17               	clrf	??___flmul^0,c
  3870   001714  5017               	movf	??___flmul^0,w,c
  3871   001716  2622               	addwf	___flmul@prod^0,f,c
  3872   001718  5018               	movf	(??___flmul+1)^0,w,c
  3873   00171A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3874   00171C  5019               	movf	(??___flmul+2)^0,w,c
  3875   00171E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3876   001720  501A               	movf	(??___flmul+3)^0,w,c
  3877   001722  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3878   001724  C01C  F017         	movff	___flmul@grs,??___flmul
  3879   001728  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3880   00172C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3881   001730  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3882   001734  0E19               	movlw	25
  3883   001736  EFA2  F00B         	goto	u2770
  3884   00173A                     u2775:
  3885   00173A  90D8               	bcf	status,0,c
  3886   00173C  321A               	rrcf	(??___flmul+3)^0,f,c
  3887   00173E  3219               	rrcf	(??___flmul+2)^0,f,c
  3888   001740  3218               	rrcf	(??___flmul+1)^0,f,c
  3889   001742  3217               	rrcf	??___flmul^0,f,c
  3890   001744                     u2770:
  3891   001744  2EE8               	decfsz	wreg,f,c
  3892   001746  EF9D  F00B         	goto	u2775
  3893   00174A  5017               	movf	??___flmul^0,w,c
  3894   00174C  2622               	addwf	___flmul@prod^0,f,c
  3895   00174E  5018               	movf	(??___flmul+1)^0,w,c
  3896   001750  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3897   001752  5019               	movf	(??___flmul+2)^0,w,c
  3898   001754  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3899   001756  501A               	movf	(??___flmul+3)^0,w,c
  3900   001758  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3901   00175A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3902   00175E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3903   001762  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3904   001766  6A1C               	clrf	___flmul@grs^0,c
  3905   001768  5020               	movf	___flmul@aexp^0,w,c
  3906   00176A  C021  F017         	movff	___flmul@bexp,??___flmul
  3907   00176E  6A18               	clrf	(??___flmul+1)^0,c
  3908   001770  2617               	addwf	??___flmul^0,f,c
  3909   001772  0E00               	movlw	0
  3910   001774  2218               	addwfc	(??___flmul+1)^0,f,c
  3911   001776  0E82               	movlw	130
  3912   001778  2417               	addwf	??___flmul^0,w,c
  3913   00177A  6E26               	movwf	___flmul@temp^0,c
  3914   00177C  0EFF               	movlw	255
  3915   00177E  2018               	addwfc	(??___flmul+1)^0,w,c
  3916   001780  6E27               	movwf	(___flmul@temp+1)^0,c
  3917   001782  EFD8  F00B         	goto	l3700
  3918   001786                     l3694:
  3919   001786  90D8               	bcf	status,0,c
  3920   001788  3622               	rlcf	___flmul@prod^0,f,c
  3921   00178A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3922   00178C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3923   00178E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3924   001790  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3925   001792  EFCD  F00B         	goto	u2781
  3926   001796  EFCF  F00B         	goto	u2780
  3927   00179A                     u2781:
  3928   00179A  EFD0  F00B         	goto	l1370
  3929   00179E                     u2780:
  3930   00179E  8022               	bsf	___flmul@prod^0,0,c
  3931   0017A0                     l1370:
  3932   0017A0  90D8               	bcf	status,0,c
  3933   0017A2  361C               	rlcf	___flmul@grs^0,f,c
  3934   0017A4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3935   0017A6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3936   0017A8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3937   0017AA  0626               	decf	___flmul@temp^0,f,c
  3938   0017AC  A0D8               	btfss	status,0,c
  3939   0017AE  0627               	decf	(___flmul@temp+1)^0,f,c
  3940   0017B0                     l3700:
  3941   0017B0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3942   0017B2  EFDD  F00B         	goto	u2791
  3943   0017B6  EFDF  F00B         	goto	u2790
  3944   0017BA                     u2791:
  3945   0017BA  EFC3  F00B         	goto	l3694
  3946   0017BE                     u2790:
  3947   0017BE  0E00               	movlw	0
  3948   0017C0  6E20               	movwf	___flmul@aexp^0,c
  3949   0017C2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3950   0017C4  EFE6  F00B         	goto	u2801
  3951   0017C8  EFE8  F00B         	goto	u2800
  3952   0017CC                     u2801:
  3953   0017CC  EF0C  F00C         	goto	l1372
  3954   0017D0                     u2800:
  3955   0017D0  0EFF               	movlw	255
  3956   0017D2  141C               	andwf	___flmul@grs^0,w,c
  3957   0017D4  6E17               	movwf	??___flmul^0,c
  3958   0017D6  0EFF               	movlw	255
  3959   0017D8  141D               	andwf	(___flmul@grs+1)^0,w,c
  3960   0017DA  6E18               	movwf	(??___flmul+1)^0,c
  3961   0017DC  0EFF               	movlw	255
  3962   0017DE  141E               	andwf	(___flmul@grs+2)^0,w,c
  3963   0017E0  6E19               	movwf	(??___flmul+2)^0,c
  3964   0017E2  0E7F               	movlw	127
  3965   0017E4  141F               	andwf	(___flmul@grs+3)^0,w,c
  3966   0017E6  6E1A               	movwf	(??___flmul+3)^0,c
  3967   0017E8  5017               	movf	??___flmul^0,w,c
  3968   0017EA  1018               	iorwf	(??___flmul+1)^0,w,c
  3969   0017EC  1019               	iorwf	(??___flmul+2)^0,w,c
  3970   0017EE  101A               	iorwf	(??___flmul+3)^0,w,c
  3971   0017F0  B4D8               	btfsc	status,2,c
  3972   0017F2  EFFD  F00B         	goto	u2811
  3973   0017F6  EFFF  F00B         	goto	u2810
  3974   0017FA                     u2811:
  3975   0017FA  EF03  F00C         	goto	l1373
  3976   0017FE                     u2810:
  3977   0017FE                     l3708:
  3978   0017FE  0E01               	movlw	1
  3979   001800  6E20               	movwf	___flmul@aexp^0,c
  3980   001802  EF0C  F00C         	goto	l1372
  3981   001806                     l1373:
  3982   001806  A022               	btfss	___flmul@prod^0,0,c
  3983   001808  EF08  F00C         	goto	u2821
  3984   00180C  EF0A  F00C         	goto	u2820
  3985   001810                     u2821:
  3986   001810  EF0C  F00C         	goto	l1372
  3987   001814                     u2820:
  3988   001814  EFFF  F00B         	goto	l3708
  3989   001818                     l1372:
  3990   001818  5020               	movf	___flmul@aexp^0,w,c
  3991   00181A  B4D8               	btfsc	status,2,c
  3992   00181C  EF12  F00C         	goto	u2831
  3993   001820  EF14  F00C         	goto	u2830
  3994   001824                     u2831:
  3995   001824  EF38  F00C         	goto	l3720
  3996   001828                     u2830:
  3997   001828  0E01               	movlw	1
  3998   00182A  2622               	addwf	___flmul@prod^0,f,c
  3999   00182C  0E00               	movlw	0
  4000   00182E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4001   001830  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4002   001832  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4003   001834  A025               	btfss	(___flmul@prod+3)^0,0,c
  4004   001836  EF1F  F00C         	goto	u2841
  4005   00183A  EF21  F00C         	goto	u2840
  4006   00183E                     u2841:
  4007   00183E  EF38  F00C         	goto	l3720
  4008   001842                     u2840:
  4009   001842  C022  F017         	movff	___flmul@prod,??___flmul
  4010   001846  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4011   00184A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4012   00184E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4013   001852  341A               	rlcf	(??___flmul+3)^0,w,c
  4014   001854  321A               	rrcf	(??___flmul+3)^0,f,c
  4015   001856  3219               	rrcf	(??___flmul+2)^0,f,c
  4016   001858  3218               	rrcf	(??___flmul+1)^0,f,c
  4017   00185A  3217               	rrcf	??___flmul^0,f,c
  4018   00185C  C017  F022         	movff	??___flmul,___flmul@prod
  4019   001860  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4020   001864  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4021   001868  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4022   00186C  4A26               	infsnz	___flmul@temp^0,f,c
  4023   00186E  2A27               	incf	(___flmul@temp+1)^0,f,c
  4024   001870                     l3720:
  4025   001870  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4026   001872  EF43  F00C         	goto	u2851
  4027   001876  5027               	movf	(___flmul@temp+1)^0,w,c
  4028   001878  E108               	bnz	u2850
  4029   00187A  2826               	incf	___flmul@temp^0,w,c
  4030   00187C  A0D8               	btfss	status,0,c
  4031   00187E  EF43  F00C         	goto	u2851
  4032   001882  EF45  F00C         	goto	u2850
  4033   001886                     u2851:
  4034   001886  EF4F  F00C         	goto	l3724
  4035   00188A                     u2850:
  4036   00188A  0E00               	movlw	0
  4037   00188C  6E22               	movwf	___flmul@prod^0,c
  4038   00188E  0E00               	movlw	0
  4039   001890  6E23               	movwf	(___flmul@prod+1)^0,c
  4040   001892  0E80               	movlw	128
  4041   001894  6E24               	movwf	(___flmul@prod+2)^0,c
  4042   001896  0E7F               	movlw	127
  4043   001898  6E25               	movwf	(___flmul@prod+3)^0,c
  4044   00189A  EF7D  F00C         	goto	l3736
  4045   00189E                     l3724:
  4046   00189E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4047   0018A0  EF5C  F00C         	goto	u2860
  4048   0018A4  5027               	movf	(___flmul@temp+1)^0,w,c
  4049   0018A6  E106               	bnz	u2861
  4050   0018A8  0426               	decf	___flmul@temp^0,w,c
  4051   0018AA  B0D8               	btfsc	status,0,c
  4052   0018AC  EF5A  F00C         	goto	u2861
  4053   0018B0  EF5C  F00C         	goto	u2860
  4054   0018B4                     u2861:
  4055   0018B4  EF68  F00C         	goto	l1380
  4056   0018B8                     u2860:
  4057   0018B8  0E00               	movlw	0
  4058   0018BA  6E22               	movwf	___flmul@prod^0,c
  4059   0018BC  0E00               	movlw	0
  4060   0018BE  6E23               	movwf	(___flmul@prod+1)^0,c
  4061   0018C0  0E00               	movlw	0
  4062   0018C2  6E24               	movwf	(___flmul@prod+2)^0,c
  4063   0018C4  0E00               	movlw	0
  4064   0018C6  6E25               	movwf	(___flmul@prod+3)^0,c
  4065   0018C8  0E00               	movlw	0
  4066   0018CA  6E1B               	movwf	___flmul@sign^0,c
  4067   0018CC  EF7D  F00C         	goto	l3736
  4068   0018D0                     l1380:
  4069   0018D0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4070   0018D4  0EFF               	movlw	255
  4071   0018D6  1622               	andwf	___flmul@prod^0,f,c
  4072   0018D8  0EFF               	movlw	255
  4073   0018DA  1623               	andwf	(___flmul@prod+1)^0,f,c
  4074   0018DC  0E7F               	movlw	127
  4075   0018DE  1624               	andwf	(___flmul@prod+2)^0,f,c
  4076   0018E0  0E00               	movlw	0
  4077   0018E2  1625               	andwf	(___flmul@prod+3)^0,f,c
  4078   0018E4  A021               	btfss	___flmul@bexp^0,0,c
  4079   0018E6  EF77  F00C         	goto	u2871
  4080   0018EA  EF79  F00C         	goto	u2870
  4081   0018EE                     u2871:
  4082   0018EE  EF7A  F00C         	goto	l3734
  4083   0018F2                     u2870:
  4084   0018F2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4085   0018F4                     l3734:
  4086   0018F4  90D8               	bcf	status,0,c
  4087   0018F6  3021               	rrcf	___flmul@bexp^0,w,c
  4088   0018F8  6E25               	movwf	(___flmul@prod+3)^0,c
  4089   0018FA                     l3736:
  4090   0018FA  501B               	movf	___flmul@sign^0,w,c
  4091   0018FC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4092   0018FE  C022  F00F         	movff	___flmul@prod,?___flmul
  4093   001902  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4094   001906  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4095   00190A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4096   00190E                     l1367:
  4097   00190E  0012               	return		;funcret
  4098   001910                     __end_of___flmul:
  4099                           	callstack 0
  4100                           
  4101 ;; *************** function _initUSART4 *****************
  4102 ;; Defined at:
  4103 ;;		line 8 in file "serial.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text20
  4132   002E6A                     __ptext20:
  4133                           	callstack 0
  4134   002E6A                     _initUSART4:
  4135                           	callstack 29
  4136   002E6A                     
  4137                           ;serial.c: 9:     RC0PPS = 0x12;
  4138   002E6A  0E12               	movlw	18
  4139   002E6C  010E               	movlb	14	; () banked
  4140   002E6E  6F62               	movwf	98,b	;volatile
  4141                           
  4142                           ;serial.c: 10:     RX4PPS = 0x11;
  4143   002E70  0E11               	movlw	17
  4144   002E72  6F15               	movwf	21,b	;volatile
  4145   002E74                     
  4146                           ; BSR set to: 14
  4147                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4148   002E74  97E9               	bcf	233,3,b	;volatile
  4149   002E76                     
  4150                           ; BSR set to: 14
  4151                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4152   002E76  95E8               	bcf	232,2,b	;volatile
  4153                           
  4154                           ;serial.c: 14:     SP4BRGL = 51;
  4155   002E78  0E33               	movlw	51
  4156   002E7A  6FE5               	movwf	229,b	;volatile
  4157                           
  4158                           ;serial.c: 15:     SP4BRGH = 0;
  4159   002E7C  0E00               	movlw	0
  4160   002E7E  6FE6               	movwf	230,b	;volatile
  4161   002E80                     
  4162                           ; BSR set to: 14
  4163                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4164   002E80  89E7               	bsf	231,4,b	;volatile
  4165   002E82                     
  4166                           ; BSR set to: 14
  4167                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4168   002E82  8BE8               	bsf	232,5,b	;volatile
  4169   002E84                     
  4170                           ; BSR set to: 14
  4171                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4172   002E84  8FE7               	bsf	231,7,b	;volatile
  4173   002E86                     
  4174                           ; BSR set to: 14
  4175   002E86  0012               	return		;funcret
  4176   002E88                     __end_of_initUSART4:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function _initDCmotorsPWM *****************
  4180 ;; Defined at:
  4181 ;;		line 7 in file "dc_motor.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text21
  4210   002684                     __ptext21:
  4211                           	callstack 0
  4212   002684                     _initDCmotorsPWM:
  4213                           	callstack 29
  4214   002684                     
  4215                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  4216   002684  9485               	bcf	133,2,c	;volatile
  4217                           
  4218                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  4219   002686  9885               	bcf	133,4,c	;volatile
  4220                           
  4221                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  4222   002688  9E83               	bcf	131,7,c	;volatile
  4223                           
  4224                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  4225   00268A  9C87               	bcf	135,6,c	;volatile
  4226                           
  4227                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  4228   00268C  947D               	bcf	125,2,c	;volatile
  4229                           
  4230                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  4231   00268E  987D               	bcf	125,4,c	;volatile
  4232                           
  4233                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  4234   002690  9E7B               	bcf	123,7,c	;volatile
  4235                           
  4236                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  4237   002692  9C7F               	bcf	127,6,c	;volatile
  4238   002694                     
  4239                           ;dc_motor.c: 19:     RE2PPS=0x05;
  4240   002694  0E05               	movlw	5
  4241   002696  010E               	movlb	14	; () banked
  4242   002698  6F74               	movwf	116,b	;volatile
  4243                           
  4244                           ;dc_motor.c: 20:     RE4PPS=0x06;
  4245   00269A  0E06               	movlw	6
  4246   00269C  6F76               	movwf	118,b	;volatile
  4247                           
  4248                           ;dc_motor.c: 21:     RC7PPS=0x07;
  4249   00269E  0E07               	movlw	7
  4250   0026A0  6F69               	movwf	105,b	;volatile
  4251                           
  4252                           ;dc_motor.c: 22:     RG6PPS=0x08;
  4253   0026A2  0E08               	movlw	8
  4254   0026A4  6F88               	movwf	136,b	;volatile
  4255                           
  4256                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  4257   0026A6  50BD               	movf	189,w,c	;volatile
  4258   0026A8  0B8F               	andlw	-113
  4259   0026AA  0940               	iorlw	64
  4260   0026AC  6EBD               	movwf	189,c	;volatile
  4261                           
  4262                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  4263   0026AE  0EE0               	movlw	-32
  4264   0026B0  16BE               	andwf	190,f,c	;volatile
  4265                           
  4266                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  4267   0026B2  50BF               	movf	191,w,c	;volatile
  4268   0026B4  0BF0               	andlw	-16
  4269   0026B6  0901               	iorlw	1
  4270   0026B8  6EBF               	movwf	191,c	;volatile
  4271   0026BA                     
  4272                           ; BSR set to: 14
  4273                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  4274   0026BA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4275   0026BE                     
  4276                           ; BSR set to: 14
  4277                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  4278   0026BE  8EBD               	bsf	189,7,c	;volatile
  4279                           
  4280                           ;dc_motor.c: 36:         CCPR1H=0;
  4281   0026C0  0E00               	movlw	0
  4282   0026C2  6EAA               	movwf	170,c	;volatile
  4283                           
  4284                           ;dc_motor.c: 37:         CCPR2H=0;
  4285   0026C4  0E00               	movlw	0
  4286   0026C6  6EA6               	movwf	166,c	;volatile
  4287                           
  4288                           ;dc_motor.c: 38:         CCPR3H=0;
  4289   0026C8  0E00               	movlw	0
  4290   0026CA  010F               	movlb	15	; () banked
  4291   0026CC  6F25               	movwf	37,b	;volatile
  4292                           
  4293                           ;dc_motor.c: 39:         CCPR4H=0;
  4294   0026CE  0E00               	movlw	0
  4295   0026D0  6F21               	movwf	33,b	;volatile
  4296                           
  4297                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  4298   0026D2  0EFC               	movlw	-4
  4299   0026D4  16AD               	andwf	173,f,c	;volatile
  4300                           
  4301                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  4302   0026D6  0EF3               	movlw	-13
  4303   0026D8  16AD               	andwf	173,f,c	;volatile
  4304                           
  4305                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  4306   0026DA  0ECF               	movlw	-49
  4307   0026DC  16AD               	andwf	173,f,c	;volatile
  4308                           
  4309                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  4310   0026DE  0E3F               	movlw	-193
  4311   0026E0  16AD               	andwf	173,f,c	;volatile
  4312   0026E2                     
  4313                           ; BSR set to: 15
  4314                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  4315   0026E2  88AB               	bsf	171,4,c	;volatile
  4316                           
  4317                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  4318   0026E4  50AB               	movf	171,w,c	;volatile
  4319   0026E6  0BF0               	andlw	-16
  4320   0026E8  090C               	iorlw	12
  4321   0026EA  6EAB               	movwf	171,c	;volatile
  4322   0026EC                     
  4323                           ; BSR set to: 15
  4324                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  4325   0026EC  8EAB               	bsf	171,7,c	;volatile
  4326   0026EE                     
  4327                           ; BSR set to: 15
  4328                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  4329   0026EE  88A7               	bsf	167,4,c	;volatile
  4330                           
  4331                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  4332   0026F0  50A7               	movf	167,w,c	;volatile
  4333   0026F2  0BF0               	andlw	-16
  4334   0026F4  090C               	iorlw	12
  4335   0026F6  6EA7               	movwf	167,c	;volatile
  4336   0026F8                     
  4337                           ; BSR set to: 15
  4338                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  4339   0026F8  8EA7               	bsf	167,7,c	;volatile
  4340   0026FA                     
  4341                           ; BSR set to: 15
  4342                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  4343   0026FA  8926               	bsf	38,4,b	;volatile
  4344                           
  4345                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  4346   0026FC  5126               	movf	38,w,b	;volatile
  4347   0026FE  0BF0               	andlw	-16
  4348   002700  090C               	iorlw	12
  4349   002702  6F26               	movwf	38,b	;volatile
  4350   002704                     
  4351                           ; BSR set to: 15
  4352                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  4353   002704  8F26               	bsf	38,7,b	;volatile
  4354   002706                     
  4355                           ; BSR set to: 15
  4356                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  4357   002706  8922               	bsf	34,4,b	;volatile
  4358                           
  4359                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  4360   002708  5122               	movf	34,w,b	;volatile
  4361   00270A  0BF0               	andlw	-16
  4362   00270C  090C               	iorlw	12
  4363   00270E  6F22               	movwf	34,b	;volatile
  4364   002710                     
  4365                           ; BSR set to: 15
  4366                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  4367   002710  8F22               	bsf	34,7,b	;volatile
  4368   002712                     
  4369                           ; BSR set to: 15
  4370   002712  0012               	return		;funcret
  4371   002714                     __end_of_initDCmotorsPWM:
  4372                           	callstack 0
  4373                           
  4374 ;; *************** function _convert_HSV *****************
  4375 ;; Defined at:
  4376 ;;		line 205 in file "color.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  4379 ;;		 -> main@HSV_colour(6), 
  4380 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  4381 ;;		 -> main@RGBC_colour(8), 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  temp            4   51[COMRAM] unsigned long 
  4384 ;;  temp            4   47[COMRAM] unsigned long 
  4385 ;;  temp            4   43[COMRAM] unsigned long 
  4386 ;;  temp            4   39[COMRAM] unsigned long 
  4387 ;;  temp            4   55[COMRAM] unsigned long 
  4388 ;;  temp            4   35[COMRAM] unsigned long 
  4389 ;;  temp            4   31[COMRAM] unsigned long 
  4390 ;;  C               2   63[COMRAM] unsigned int 
  4391 ;;  M               2   61[COMRAM] unsigned int 
  4392 ;;  hue_scale       2   59[COMRAM] unsigned int 
  4393 ;;  hue             2   29[COMRAM] unsigned int 
  4394 ;;  sat             2   27[COMRAM] unsigned int 
  4395 ;;  m               2   25[COMRAM] unsigned int 
  4396 ;;  sat_scale       2   23[COMRAM] unsigned int 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:       52 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 2
  4413 ;; This function calls:
  4414 ;;		___lldiv
  4415 ;;		___lmul
  4416 ;;		_max_RGB
  4417 ;;		_min_RGB
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;;		_forward_navigation
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text22
  4425   000E1A                     __ptext22:
  4426                           	callstack 0
  4427   000E1A                     _convert_HSV:
  4428                           	callstack 28
  4429   000E1A                     
  4430                           ;color.c: 205: void convert_HSV(struct HSV_val *p1,struct RGBC_val *p2);color.c: 206: {;
      +                          color.c: 207:     unsigned int hue = 0;
  4431   000E1A  0E00               	movlw	0
  4432   000E1C  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  4433   000E1E  0E00               	movlw	0
  4434   000E20  6E1E               	movwf	convert_HSV@hue^0,c
  4435                           
  4436                           ;color.c: 209:     unsigned int hue_scale = 60;
  4437   000E22  0E00               	movlw	0
  4438   000E24  6E3D               	movwf	(convert_HSV@hue_scale+1)^0,c
  4439   000E26  0E3C               	movlw	60
  4440   000E28  6E3C               	movwf	convert_HSV@hue_scale^0,c
  4441                           
  4442                           ;color.c: 210:     unsigned int sat_scale = 100;
  4443   000E2A  0E00               	movlw	0
  4444   000E2C  6E19               	movwf	(convert_HSV@sat_scale+1)^0,c
  4445   000E2E  0E64               	movlw	100
  4446   000E30  6E18               	movwf	convert_HSV@sat_scale^0,c
  4447   000E32                     
  4448                           ;color.c: 212:     unsigned int M = max_RGB(p2);
  4449   000E32  C00F  F001         	movff	convert_HSV@p2,max_RGB@p
  4450   000E36  ECC8  F013         	call	_max_RGB	;wreg free
  4451   000E3A  C001  F03E         	movff	?_max_RGB,convert_HSV@M
  4452   000E3E  C002  F03F         	movff	?_max_RGB+1,convert_HSV@M+1
  4453   000E42                     
  4454                           ;color.c: 213:     unsigned int m = min_RGB(p2);
  4455   000E42  C00F  F001         	movff	convert_HSV@p2,min_RGB@p
  4456   000E46  EC8A  F013         	call	_min_RGB	;wreg free
  4457   000E4A  C001  F01A         	movff	?_min_RGB,convert_HSV@m
  4458   000E4E  C002  F01B         	movff	?_min_RGB+1,convert_HSV@m+1
  4459   000E52                     
  4460                           ;color.c: 214:     unsigned int C = M - m;
  4461   000E52  501A               	movf	convert_HSV@m^0,w,c
  4462   000E54  5C3E               	subwf	convert_HSV@M^0,w,c
  4463   000E56  6E40               	movwf	convert_HSV@C^0,c
  4464   000E58  501B               	movf	(convert_HSV@m+1)^0,w,c
  4465   000E5A  583F               	subwfb	(convert_HSV@M+1)^0,w,c
  4466   000E5C  6E41               	movwf	(convert_HSV@C+1)^0,c
  4467   000E5E                     
  4468                           ;color.c: 216:     if (C == 0) {
  4469   000E5E  5040               	movf	convert_HSV@C^0,w,c
  4470   000E60  1041               	iorwf	(convert_HSV@C+1)^0,w,c
  4471   000E62  A4D8               	btfss	status,2,c
  4472   000E64  EF36  F007         	goto	u3201
  4473   000E68  EF38  F007         	goto	u3200
  4474   000E6C                     u3201:
  4475   000E6C  EF3E  F007         	goto	l3896
  4476   000E70                     u3200:
  4477   000E70                     
  4478                           ;color.c: 217:         hue = 0;
  4479   000E70  0E00               	movlw	0
  4480   000E72  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  4481   000E74  0E00               	movlw	0
  4482   000E76  6E1E               	movwf	convert_HSV@hue^0,c
  4483                           
  4484                           ;color.c: 218:     } else {
  4485   000E78  EF0E  F00A         	goto	l3980
  4486   000E7C                     l3896:
  4487                           
  4488                           ;color.c: 228:         if (M == p2->R) {
  4489   000E7C  500F               	movf	convert_HSV@p2^0,w,c
  4490   000E7E  6ED9               	movwf	fsr2l,c
  4491   000E80  6ADA               	clrf	fsr2h,c
  4492   000E82  503E               	movf	convert_HSV@M^0,w,c
  4493   000E84  18DE               	xorwf	postinc2,w,c
  4494   000E86  E107               	bnz	u3211
  4495   000E88  503F               	movf	(convert_HSV@M+1)^0,w,c
  4496   000E8A  18DE               	xorwf	postinc2,w,c
  4497   000E8C  A4D8               	btfss	status,2,c
  4498   000E8E  EF4B  F007         	goto	u3211
  4499   000E92  EF4D  F007         	goto	u3210
  4500   000E96                     u3211:
  4501   000E96  EF3A  F008         	goto	l3924
  4502   000E9A                     u3210:
  4503   000E9A                     
  4504                           ;color.c: 229:             if (p2->G >= p2->B) {
  4505   000E9A  500F               	movf	convert_HSV@p2^0,w,c
  4506   000E9C  6ED9               	movwf	fsr2l,c
  4507   000E9E  6ADA               	clrf	fsr2h,c
  4508   000EA0  0E04               	movlw	4
  4509   000EA2  26D9               	addwf	fsr2l,f,c
  4510   000EA4  500F               	movf	convert_HSV@p2^0,w,c
  4511   000EA6  6EE1               	movwf	fsr1l,c
  4512   000EA8  6AE2               	clrf	fsr1h,c
  4513   000EAA  0E02               	movlw	2
  4514   000EAC  26E1               	addwf	fsr1l,f,c
  4515   000EAE  50DE               	movf	postinc2,w,c
  4516   000EB0  5CE6               	subwf	postinc1,w,c
  4517   000EB2  50DE               	movf	postinc2,w,c
  4518   000EB4  58E6               	subwfb	postinc1,w,c
  4519   000EB6  A0D8               	btfss	status,0,c
  4520   000EB8  EF60  F007         	goto	u3221
  4521   000EBC  EF62  F007         	goto	u3220
  4522   000EC0                     u3221:
  4523   000EC0  EFC2  F007         	goto	l3912
  4524   000EC4                     u3220:
  4525   000EC4                     
  4526                           ;color.c: 233:                 temp *= 0;
  4527   000EC4  0E00               	movlw	0
  4528   000EC6  6E24               	movwf	convert_HSV@temp^0,c
  4529   000EC8  0E00               	movlw	0
  4530   000ECA  6E25               	movwf	(convert_HSV@temp+1)^0,c
  4531   000ECC  0E00               	movlw	0
  4532   000ECE  6E26               	movwf	(convert_HSV@temp+2)^0,c
  4533   000ED0  0E00               	movlw	0
  4534   000ED2  6E27               	movwf	(convert_HSV@temp+3)^0,c
  4535   000ED4                     
  4536                           ;color.c: 234:                 temp += (unsigned long)(p2->G - p2->B);
  4537   000ED4  500F               	movf	convert_HSV@p2^0,w,c
  4538   000ED6  6ED9               	movwf	fsr2l,c
  4539   000ED8  6ADA               	clrf	fsr2h,c
  4540   000EDA  0E04               	movlw	4
  4541   000EDC  26D9               	addwf	fsr2l,f,c
  4542   000EDE  CFDE F010          	movff	postinc2,??_convert_HSV
  4543   000EE2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4544   000EE6  500F               	movf	convert_HSV@p2^0,w,c
  4545   000EE8  6ED9               	movwf	fsr2l,c
  4546   000EEA  6ADA               	clrf	fsr2h,c
  4547   000EEC  0E02               	movlw	2
  4548   000EEE  26D9               	addwf	fsr2l,f,c
  4549   000EF0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4550   000EF4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4551   000EF8  5010               	movf	??_convert_HSV^0,w,c
  4552   000EFA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4553   000EFC  6E14               	movwf	(??_convert_HSV+4)^0,c
  4554   000EFE  5011               	movf	(??_convert_HSV+1)^0,w,c
  4555   000F00  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4556   000F02  6E15               	movwf	(??_convert_HSV+5)^0,c
  4557   000F04  5014               	movf	(??_convert_HSV+4)^0,w,c
  4558   000F06  2624               	addwf	convert_HSV@temp^0,f,c
  4559   000F08  5015               	movf	(??_convert_HSV+5)^0,w,c
  4560   000F0A  2225               	addwfc	(convert_HSV@temp+1)^0,f,c
  4561   000F0C  0E00               	movlw	0
  4562   000F0E  2226               	addwfc	(convert_HSV@temp+2)^0,f,c
  4563   000F10  0E00               	movlw	0
  4564   000F12  2227               	addwfc	(convert_HSV@temp+3)^0,f,c
  4565   000F14                     
  4566                           ;color.c: 235:                 temp *= (unsigned long)hue_scale;
  4567   000F14  C024  F001         	movff	convert_HSV@temp,___lmul@multiplier
  4568   000F18  C025  F002         	movff	convert_HSV@temp+1,___lmul@multiplier+1
  4569   000F1C  C026  F003         	movff	convert_HSV@temp+2,___lmul@multiplier+2
  4570   000F20  C027  F004         	movff	convert_HSV@temp+3,___lmul@multiplier+3
  4571   000F24  0E3C               	movlw	60
  4572   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  4573   000F28  0E00               	movlw	0
  4574   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4575   000F2C  0E00               	movlw	0
  4576   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4577   000F30  0E00               	movlw	0
  4578   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4579   000F34  EC75  F014         	call	___lmul	;wreg free
  4580   000F38  C001  F024         	movff	?___lmul,convert_HSV@temp
  4581   000F3C  C002  F025         	movff	?___lmul+1,convert_HSV@temp+1
  4582   000F40  C003  F026         	movff	?___lmul+2,convert_HSV@temp+2
  4583   000F44  C004  F027         	movff	?___lmul+3,convert_HSV@temp+3
  4584   000F48                     
  4585                           ;color.c: 236:                 temp /= (unsigned long)C;
  4586   000F48  C024  F001         	movff	convert_HSV@temp,___lldiv@dividend
  4587   000F4C  C025  F002         	movff	convert_HSV@temp+1,___lldiv@dividend+1
  4588   000F50  C026  F003         	movff	convert_HSV@temp+2,___lldiv@dividend+2
  4589   000F54  C027  F004         	movff	convert_HSV@temp+3,___lldiv@dividend+3
  4590   000F58  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4591   000F5C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4592   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4593   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4594   000F64  ECF0  F012         	call	___lldiv	;wreg free
  4595   000F68  C001  F024         	movff	?___lldiv,convert_HSV@temp
  4596   000F6C  C002  F025         	movff	?___lldiv+1,convert_HSV@temp+1
  4597   000F70  C003  F026         	movff	?___lldiv+2,convert_HSV@temp+2
  4598   000F74  C004  F027         	movff	?___lldiv+3,convert_HSV@temp+3
  4599   000F78                     
  4600                           ;color.c: 237:                 hue = (unsigned int)temp;
  4601   000F78  C024  F01E         	movff	convert_HSV@temp,convert_HSV@hue
  4602   000F7C  C025  F01F         	movff	convert_HSV@temp+1,convert_HSV@hue+1
  4603                           
  4604                           ;color.c: 238:             } else {
  4605   000F80  EF3A  F008         	goto	l3924
  4606   000F84                     l3912:
  4607                           
  4608                           ;color.c: 240:                 unsigned long temp;;color.c: 241:                 temp = 
      +                          (unsigned long)C;
  4609   000F84  C040  F038         	movff	convert_HSV@C,convert_HSV@temp_609
  4610   000F88  C041  F039         	movff	convert_HSV@C+1,convert_HSV@temp_609+1
  4611   000F8C  6A3A               	clrf	(convert_HSV@temp_609+2)^0,c
  4612   000F8E  6A3B               	clrf	(convert_HSV@temp_609+3)^0,c
  4613   000F90                     
  4614                           ;color.c: 242:                 temp *= 6;
  4615   000F90  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  4616   000F94  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  4617   000F98  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  4618   000F9C  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  4619   000FA0  0E06               	movlw	6
  4620   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  4621   000FA4  0E00               	movlw	0
  4622   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4623   000FA8  0E00               	movlw	0
  4624   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4625   000FAC  0E00               	movlw	0
  4626   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4627   000FB0  EC75  F014         	call	___lmul	;wreg free
  4628   000FB4  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  4629   000FB8  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  4630   000FBC  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  4631   000FC0  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  4632   000FC4                     
  4633                           ;color.c: 243:                 temp -= (unsigned long)(p2->B - p2->G);
  4634   000FC4  500F               	movf	convert_HSV@p2^0,w,c
  4635   000FC6  6ED9               	movwf	fsr2l,c
  4636   000FC8  6ADA               	clrf	fsr2h,c
  4637   000FCA  0E02               	movlw	2
  4638   000FCC  26D9               	addwf	fsr2l,f,c
  4639   000FCE  CFDE F010          	movff	postinc2,??_convert_HSV
  4640   000FD2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4641   000FD6  500F               	movf	convert_HSV@p2^0,w,c
  4642   000FD8  6ED9               	movwf	fsr2l,c
  4643   000FDA  6ADA               	clrf	fsr2h,c
  4644   000FDC  0E04               	movlw	4
  4645   000FDE  26D9               	addwf	fsr2l,f,c
  4646   000FE0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4647   000FE4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4648   000FE8  5010               	movf	??_convert_HSV^0,w,c
  4649   000FEA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4650   000FEC  6E14               	movwf	(??_convert_HSV+4)^0,c
  4651   000FEE  5011               	movf	(??_convert_HSV+1)^0,w,c
  4652   000FF0  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4653   000FF2  6E15               	movwf	(??_convert_HSV+5)^0,c
  4654   000FF4  6A16               	clrf	(??_convert_HSV+6)^0,c
  4655   000FF6  6A17               	clrf	(??_convert_HSV+7)^0,c
  4656   000FF8  5014               	movf	(??_convert_HSV+4)^0,w,c
  4657   000FFA  5E38               	subwf	convert_HSV@temp_609^0,f,c
  4658   000FFC  5015               	movf	(??_convert_HSV+5)^0,w,c
  4659   000FFE  5A39               	subwfb	(convert_HSV@temp_609+1)^0,f,c
  4660   001000  5016               	movf	(??_convert_HSV+6)^0,w,c
  4661   001002  5A3A               	subwfb	(convert_HSV@temp_609+2)^0,f,c
  4662   001004  5017               	movf	(??_convert_HSV+7)^0,w,c
  4663   001006  5A3B               	subwfb	(convert_HSV@temp_609+3)^0,f,c
  4664   001008                     
  4665                           ;color.c: 244:                 temp *= (unsigned long)hue_scale;
  4666   001008  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  4667   00100C  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  4668   001010  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  4669   001014  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  4670   001018  0E3C               	movlw	60
  4671   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  4672   00101C  0E00               	movlw	0
  4673   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4674   001020  0E00               	movlw	0
  4675   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4676   001024  0E00               	movlw	0
  4677   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4678   001028  EC75  F014         	call	___lmul	;wreg free
  4679   00102C  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  4680   001030  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  4681   001034  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  4682   001038  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  4683   00103C                     
  4684                           ;color.c: 245:                 temp /= (unsigned long)C;
  4685   00103C  C038  F001         	movff	convert_HSV@temp_609,___lldiv@dividend
  4686   001040  C039  F002         	movff	convert_HSV@temp_609+1,___lldiv@dividend+1
  4687   001044  C03A  F003         	movff	convert_HSV@temp_609+2,___lldiv@dividend+2
  4688   001048  C03B  F004         	movff	convert_HSV@temp_609+3,___lldiv@dividend+3
  4689   00104C  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4690   001050  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4691   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4692   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4693   001058  ECF0  F012         	call	___lldiv	;wreg free
  4694   00105C  C001  F038         	movff	?___lldiv,convert_HSV@temp_609
  4695   001060  C002  F039         	movff	?___lldiv+1,convert_HSV@temp_609+1
  4696   001064  C003  F03A         	movff	?___lldiv+2,convert_HSV@temp_609+2
  4697   001068  C004  F03B         	movff	?___lldiv+3,convert_HSV@temp_609+3
  4698   00106C                     
  4699                           ;color.c: 246:                 hue = (unsigned int)temp;
  4700   00106C  C038  F01E         	movff	convert_HSV@temp_609,convert_HSV@hue
  4701   001070  C039  F01F         	movff	convert_HSV@temp_609+1,convert_HSV@hue+1
  4702   001074                     l3924:
  4703                           
  4704                           ;color.c: 249:         if (M == p2->G) {
  4705   001074  500F               	movf	convert_HSV@p2^0,w,c
  4706   001076  6ED9               	movwf	fsr2l,c
  4707   001078  6ADA               	clrf	fsr2h,c
  4708   00107A  0E02               	movlw	2
  4709   00107C  26D9               	addwf	fsr2l,f,c
  4710   00107E  503E               	movf	convert_HSV@M^0,w,c
  4711   001080  18DE               	xorwf	postinc2,w,c
  4712   001082  E107               	bnz	u3231
  4713   001084  503F               	movf	(convert_HSV@M+1)^0,w,c
  4714   001086  18DE               	xorwf	postinc2,w,c
  4715   001088  A4D8               	btfss	status,2,c
  4716   00108A  EF49  F008         	goto	u3231
  4717   00108E  EF4B  F008         	goto	u3230
  4718   001092                     u3231:
  4719   001092  EF20  F009         	goto	l3952
  4720   001096                     u3230:
  4721   001096                     
  4722                           ;color.c: 250:             if (p2->B >= p2->R) {
  4723   001096  500F               	movf	convert_HSV@p2^0,w,c
  4724   001098  6ED9               	movwf	fsr2l,c
  4725   00109A  6ADA               	clrf	fsr2h,c
  4726   00109C  500F               	movf	convert_HSV@p2^0,w,c
  4727   00109E  6EE1               	movwf	fsr1l,c
  4728   0010A0  6AE2               	clrf	fsr1h,c
  4729   0010A2  0E04               	movlw	4
  4730   0010A4  26E1               	addwf	fsr1l,f,c
  4731   0010A6  50DE               	movf	postinc2,w,c
  4732   0010A8  5CE6               	subwf	postinc1,w,c
  4733   0010AA  50DE               	movf	postinc2,w,c
  4734   0010AC  58E6               	subwfb	postinc1,w,c
  4735   0010AE  A0D8               	btfss	status,0,c
  4736   0010B0  EF5C  F008         	goto	u3241
  4737   0010B4  EF5E  F008         	goto	u3240
  4738   0010B8                     u3241:
  4739   0010B8  EFBF  F008         	goto	l3940
  4740   0010BC                     u3240:
  4741   0010BC                     
  4742                           ;color.c: 252:                 unsigned long temp;;color.c: 253:                 temp = 
      +                          (unsigned long)C;
  4743   0010BC  C040  F028         	movff	convert_HSV@C,convert_HSV@temp_610
  4744   0010C0  C041  F029         	movff	convert_HSV@C+1,convert_HSV@temp_610+1
  4745   0010C4  6A2A               	clrf	(convert_HSV@temp_610+2)^0,c
  4746   0010C6  6A2B               	clrf	(convert_HSV@temp_610+3)^0,c
  4747   0010C8                     
  4748                           ;color.c: 254:                 temp *= 2;
  4749   0010C8  90D8               	bcf	status,0,c
  4750   0010CA  3628               	rlcf	convert_HSV@temp_610^0,f,c
  4751   0010CC  3629               	rlcf	(convert_HSV@temp_610+1)^0,f,c
  4752   0010CE  362A               	rlcf	(convert_HSV@temp_610+2)^0,f,c
  4753   0010D0  362B               	rlcf	(convert_HSV@temp_610+3)^0,f,c
  4754   0010D2                     
  4755                           ;color.c: 255:                 temp += (unsigned long)(p2->B - p2->R);
  4756   0010D2  500F               	movf	convert_HSV@p2^0,w,c
  4757   0010D4  6ED9               	movwf	fsr2l,c
  4758   0010D6  6ADA               	clrf	fsr2h,c
  4759   0010D8  CFDE F010          	movff	postinc2,??_convert_HSV
  4760   0010DC  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4761   0010E0  500F               	movf	convert_HSV@p2^0,w,c
  4762   0010E2  6ED9               	movwf	fsr2l,c
  4763   0010E4  6ADA               	clrf	fsr2h,c
  4764   0010E6  0E04               	movlw	4
  4765   0010E8  26D9               	addwf	fsr2l,f,c
  4766   0010EA  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4767   0010EE  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4768   0010F2  5010               	movf	??_convert_HSV^0,w,c
  4769   0010F4  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4770   0010F6  6E14               	movwf	(??_convert_HSV+4)^0,c
  4771   0010F8  5011               	movf	(??_convert_HSV+1)^0,w,c
  4772   0010FA  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4773   0010FC  6E15               	movwf	(??_convert_HSV+5)^0,c
  4774   0010FE  5014               	movf	(??_convert_HSV+4)^0,w,c
  4775   001100  2628               	addwf	convert_HSV@temp_610^0,f,c
  4776   001102  5015               	movf	(??_convert_HSV+5)^0,w,c
  4777   001104  2229               	addwfc	(convert_HSV@temp_610+1)^0,f,c
  4778   001106  0E00               	movlw	0
  4779   001108  222A               	addwfc	(convert_HSV@temp_610+2)^0,f,c
  4780   00110A  0E00               	movlw	0
  4781   00110C  222B               	addwfc	(convert_HSV@temp_610+3)^0,f,c
  4782   00110E                     
  4783                           ;color.c: 256:                 temp *= (unsigned long)hue_scale;
  4784   00110E  C028  F001         	movff	convert_HSV@temp_610,___lmul@multiplier
  4785   001112  C029  F002         	movff	convert_HSV@temp_610+1,___lmul@multiplier+1
  4786   001116  C02A  F003         	movff	convert_HSV@temp_610+2,___lmul@multiplier+2
  4787   00111A  C02B  F004         	movff	convert_HSV@temp_610+3,___lmul@multiplier+3
  4788   00111E  0E3C               	movlw	60
  4789   001120  6E05               	movwf	___lmul@multiplicand^0,c
  4790   001122  0E00               	movlw	0
  4791   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4792   001126  0E00               	movlw	0
  4793   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4794   00112A  0E00               	movlw	0
  4795   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4796   00112E  EC75  F014         	call	___lmul	;wreg free
  4797   001132  C001  F028         	movff	?___lmul,convert_HSV@temp_610
  4798   001136  C002  F029         	movff	?___lmul+1,convert_HSV@temp_610+1
  4799   00113A  C003  F02A         	movff	?___lmul+2,convert_HSV@temp_610+2
  4800   00113E  C004  F02B         	movff	?___lmul+3,convert_HSV@temp_610+3
  4801   001142                     
  4802                           ;color.c: 257:                 temp /= (unsigned long)C;
  4803   001142  C028  F001         	movff	convert_HSV@temp_610,___lldiv@dividend
  4804   001146  C029  F002         	movff	convert_HSV@temp_610+1,___lldiv@dividend+1
  4805   00114A  C02A  F003         	movff	convert_HSV@temp_610+2,___lldiv@dividend+2
  4806   00114E  C02B  F004         	movff	convert_HSV@temp_610+3,___lldiv@dividend+3
  4807   001152  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4808   001156  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4809   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4810   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4811   00115E  ECF0  F012         	call	___lldiv	;wreg free
  4812   001162  C001  F028         	movff	?___lldiv,convert_HSV@temp_610
  4813   001166  C002  F029         	movff	?___lldiv+1,convert_HSV@temp_610+1
  4814   00116A  C003  F02A         	movff	?___lldiv+2,convert_HSV@temp_610+2
  4815   00116E  C004  F02B         	movff	?___lldiv+3,convert_HSV@temp_610+3
  4816   001172                     
  4817                           ;color.c: 258:                 hue = (unsigned int)temp;
  4818   001172  C028  F01E         	movff	convert_HSV@temp_610,convert_HSV@hue
  4819   001176  C029  F01F         	movff	convert_HSV@temp_610+1,convert_HSV@hue+1
  4820                           
  4821                           ;color.c: 259:             } else {
  4822   00117A  EF20  F009         	goto	l3952
  4823   00117E                     l3940:
  4824                           
  4825                           ;color.c: 261:                 unsigned long temp;;color.c: 262:                 temp = 
      +                          (unsigned long)C;
  4826   00117E  C040  F02C         	movff	convert_HSV@C,convert_HSV@temp_611
  4827   001182  C041  F02D         	movff	convert_HSV@C+1,convert_HSV@temp_611+1
  4828   001186  6A2E               	clrf	(convert_HSV@temp_611+2)^0,c
  4829   001188  6A2F               	clrf	(convert_HSV@temp_611+3)^0,c
  4830   00118A                     
  4831                           ;color.c: 263:                 temp *= 2;
  4832   00118A  90D8               	bcf	status,0,c
  4833   00118C  362C               	rlcf	convert_HSV@temp_611^0,f,c
  4834   00118E  362D               	rlcf	(convert_HSV@temp_611+1)^0,f,c
  4835   001190  362E               	rlcf	(convert_HSV@temp_611+2)^0,f,c
  4836   001192  362F               	rlcf	(convert_HSV@temp_611+3)^0,f,c
  4837   001194                     
  4838                           ;color.c: 264:                 temp -= (unsigned long)(p2->R - p2->B);
  4839   001194  500F               	movf	convert_HSV@p2^0,w,c
  4840   001196  6ED9               	movwf	fsr2l,c
  4841   001198  6ADA               	clrf	fsr2h,c
  4842   00119A  0E04               	movlw	4
  4843   00119C  26D9               	addwf	fsr2l,f,c
  4844   00119E  CFDE F010          	movff	postinc2,??_convert_HSV
  4845   0011A2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4846   0011A6  500F               	movf	convert_HSV@p2^0,w,c
  4847   0011A8  6ED9               	movwf	fsr2l,c
  4848   0011AA  6ADA               	clrf	fsr2h,c
  4849   0011AC  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4850   0011B0  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4851   0011B4  5010               	movf	??_convert_HSV^0,w,c
  4852   0011B6  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4853   0011B8  6E14               	movwf	(??_convert_HSV+4)^0,c
  4854   0011BA  5011               	movf	(??_convert_HSV+1)^0,w,c
  4855   0011BC  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4856   0011BE  6E15               	movwf	(??_convert_HSV+5)^0,c
  4857   0011C0  6A16               	clrf	(??_convert_HSV+6)^0,c
  4858   0011C2  6A17               	clrf	(??_convert_HSV+7)^0,c
  4859   0011C4  5014               	movf	(??_convert_HSV+4)^0,w,c
  4860   0011C6  5E2C               	subwf	convert_HSV@temp_611^0,f,c
  4861   0011C8  5015               	movf	(??_convert_HSV+5)^0,w,c
  4862   0011CA  5A2D               	subwfb	(convert_HSV@temp_611+1)^0,f,c
  4863   0011CC  5016               	movf	(??_convert_HSV+6)^0,w,c
  4864   0011CE  5A2E               	subwfb	(convert_HSV@temp_611+2)^0,f,c
  4865   0011D0  5017               	movf	(??_convert_HSV+7)^0,w,c
  4866   0011D2  5A2F               	subwfb	(convert_HSV@temp_611+3)^0,f,c
  4867   0011D4                     
  4868                           ;color.c: 265:                 temp *= (unsigned long)hue_scale;
  4869   0011D4  C02C  F001         	movff	convert_HSV@temp_611,___lmul@multiplier
  4870   0011D8  C02D  F002         	movff	convert_HSV@temp_611+1,___lmul@multiplier+1
  4871   0011DC  C02E  F003         	movff	convert_HSV@temp_611+2,___lmul@multiplier+2
  4872   0011E0  C02F  F004         	movff	convert_HSV@temp_611+3,___lmul@multiplier+3
  4873   0011E4  0E3C               	movlw	60
  4874   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  4875   0011E8  0E00               	movlw	0
  4876   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4877   0011EC  0E00               	movlw	0
  4878   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4879   0011F0  0E00               	movlw	0
  4880   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4881   0011F4  EC75  F014         	call	___lmul	;wreg free
  4882   0011F8  C001  F02C         	movff	?___lmul,convert_HSV@temp_611
  4883   0011FC  C002  F02D         	movff	?___lmul+1,convert_HSV@temp_611+1
  4884   001200  C003  F02E         	movff	?___lmul+2,convert_HSV@temp_611+2
  4885   001204  C004  F02F         	movff	?___lmul+3,convert_HSV@temp_611+3
  4886   001208                     
  4887                           ;color.c: 266:                 temp /= (unsigned long)C;
  4888   001208  C02C  F001         	movff	convert_HSV@temp_611,___lldiv@dividend
  4889   00120C  C02D  F002         	movff	convert_HSV@temp_611+1,___lldiv@dividend+1
  4890   001210  C02E  F003         	movff	convert_HSV@temp_611+2,___lldiv@dividend+2
  4891   001214  C02F  F004         	movff	convert_HSV@temp_611+3,___lldiv@dividend+3
  4892   001218  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  4893   00121C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  4894   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  4895   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  4896   001224  ECF0  F012         	call	___lldiv	;wreg free
  4897   001228  C001  F02C         	movff	?___lldiv,convert_HSV@temp_611
  4898   00122C  C002  F02D         	movff	?___lldiv+1,convert_HSV@temp_611+1
  4899   001230  C003  F02E         	movff	?___lldiv+2,convert_HSV@temp_611+2
  4900   001234  C004  F02F         	movff	?___lldiv+3,convert_HSV@temp_611+3
  4901   001238                     
  4902                           ;color.c: 267:                 hue = (unsigned int)temp;
  4903   001238  C02C  F01E         	movff	convert_HSV@temp_611,convert_HSV@hue
  4904   00123C  C02D  F01F         	movff	convert_HSV@temp_611+1,convert_HSV@hue+1
  4905   001240                     l3952:
  4906                           
  4907                           ;color.c: 270:         if (M == p2->B) {
  4908   001240  500F               	movf	convert_HSV@p2^0,w,c
  4909   001242  6ED9               	movwf	fsr2l,c
  4910   001244  6ADA               	clrf	fsr2h,c
  4911   001246  0E04               	movlw	4
  4912   001248  26D9               	addwf	fsr2l,f,c
  4913   00124A  503E               	movf	convert_HSV@M^0,w,c
  4914   00124C  18DE               	xorwf	postinc2,w,c
  4915   00124E  E107               	bnz	u3251
  4916   001250  503F               	movf	(convert_HSV@M+1)^0,w,c
  4917   001252  18DE               	xorwf	postinc2,w,c
  4918   001254  A4D8               	btfss	status,2,c
  4919   001256  EF2F  F009         	goto	u3251
  4920   00125A  EF31  F009         	goto	u3250
  4921   00125E                     u3251:
  4922   00125E  EF0E  F00A         	goto	l3980
  4923   001262                     u3250:
  4924   001262                     
  4925                           ;color.c: 271:             if (p2->R >= p2->G) {
  4926   001262  500F               	movf	convert_HSV@p2^0,w,c
  4927   001264  6ED9               	movwf	fsr2l,c
  4928   001266  6ADA               	clrf	fsr2h,c
  4929   001268  0E02               	movlw	2
  4930   00126A  26D9               	addwf	fsr2l,f,c
  4931   00126C  500F               	movf	convert_HSV@p2^0,w,c
  4932   00126E  6EE1               	movwf	fsr1l,c
  4933   001270  6AE2               	clrf	fsr1h,c
  4934   001272  50DE               	movf	postinc2,w,c
  4935   001274  5CE6               	subwf	postinc1,w,c
  4936   001276  50DE               	movf	postinc2,w,c
  4937   001278  58E6               	subwfb	postinc1,w,c
  4938   00127A  A0D8               	btfss	status,0,c
  4939   00127C  EF42  F009         	goto	u3261
  4940   001280  EF44  F009         	goto	u3260
  4941   001284                     u3261:
  4942   001284  EFA9  F009         	goto	l3968
  4943   001288                     u3260:
  4944   001288                     
  4945                           ;color.c: 273:                 unsigned long temp;;color.c: 274:                 temp = 
      +                          (unsigned long)C;
  4946   001288  C040  F030         	movff	convert_HSV@C,convert_HSV@temp_612
  4947   00128C  C041  F031         	movff	convert_HSV@C+1,convert_HSV@temp_612+1
  4948   001290  6A32               	clrf	(convert_HSV@temp_612+2)^0,c
  4949   001292  6A33               	clrf	(convert_HSV@temp_612+3)^0,c
  4950   001294                     
  4951                           ;color.c: 275:                 temp *= 4;
  4952   001294  0E02               	movlw	2
  4953   001296                     u3275:
  4954   001296  90D8               	bcf	status,0,c
  4955   001298  3630               	rlcf	convert_HSV@temp_612^0,f,c
  4956   00129A  3631               	rlcf	(convert_HSV@temp_612+1)^0,f,c
  4957   00129C  3632               	rlcf	(convert_HSV@temp_612+2)^0,f,c
  4958   00129E  3633               	rlcf	(convert_HSV@temp_612+3)^0,f,c
  4959   0012A0  2EE8               	decfsz	wreg,f,c
  4960   0012A2  EF4B  F009         	goto	u3275
  4961   0012A6                     
  4962                           ;color.c: 276:                 temp += (unsigned long)(p2->R - p2->G);
  4963   0012A6  500F               	movf	convert_HSV@p2^0,w,c
  4964   0012A8  6ED9               	movwf	fsr2l,c
  4965   0012AA  6ADA               	clrf	fsr2h,c
  4966   0012AC  0E02               	movlw	2
  4967   0012AE  26D9               	addwf	fsr2l,f,c
  4968   0012B0  CFDE F010          	movff	postinc2,??_convert_HSV
  4969   0012B4  CFDD F011          	movff	postdec2,??_convert_HSV+1
  4970   0012B8  500F               	movf	convert_HSV@p2^0,w,c
  4971   0012BA  6ED9               	movwf	fsr2l,c
  4972   0012BC  6ADA               	clrf	fsr2h,c
  4973   0012BE  CFDE F012          	movff	postinc2,??_convert_HSV+2
  4974   0012C2  CFDD F013          	movff	postdec2,??_convert_HSV+3
  4975   0012C6  5010               	movf	??_convert_HSV^0,w,c
  4976   0012C8  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  4977   0012CA  6E14               	movwf	(??_convert_HSV+4)^0,c
  4978   0012CC  5011               	movf	(??_convert_HSV+1)^0,w,c
  4979   0012CE  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  4980   0012D0  6E15               	movwf	(??_convert_HSV+5)^0,c
  4981   0012D2  5014               	movf	(??_convert_HSV+4)^0,w,c
  4982   0012D4  2630               	addwf	convert_HSV@temp_612^0,f,c
  4983   0012D6  5015               	movf	(??_convert_HSV+5)^0,w,c
  4984   0012D8  2231               	addwfc	(convert_HSV@temp_612+1)^0,f,c
  4985   0012DA  0E00               	movlw	0
  4986   0012DC  2232               	addwfc	(convert_HSV@temp_612+2)^0,f,c
  4987   0012DE  0E00               	movlw	0
  4988   0012E0  2233               	addwfc	(convert_HSV@temp_612+3)^0,f,c
  4989   0012E2                     
  4990                           ;color.c: 277:                 temp *= (unsigned long)hue_scale;
  4991   0012E2  C030  F001         	movff	convert_HSV@temp_612,___lmul@multiplier
  4992   0012E6  C031  F002         	movff	convert_HSV@temp_612+1,___lmul@multiplier+1
  4993   0012EA  C032  F003         	movff	convert_HSV@temp_612+2,___lmul@multiplier+2
  4994   0012EE  C033  F004         	movff	convert_HSV@temp_612+3,___lmul@multiplier+3
  4995   0012F2  0E3C               	movlw	60
  4996   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  4997   0012F6  0E00               	movlw	0
  4998   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4999   0012FA  0E00               	movlw	0
  5000   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5001   0012FE  0E00               	movlw	0
  5002   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5003   001302  EC75  F014         	call	___lmul	;wreg free
  5004   001306  C001  F030         	movff	?___lmul,convert_HSV@temp_612
  5005   00130A  C002  F031         	movff	?___lmul+1,convert_HSV@temp_612+1
  5006   00130E  C003  F032         	movff	?___lmul+2,convert_HSV@temp_612+2
  5007   001312  C004  F033         	movff	?___lmul+3,convert_HSV@temp_612+3
  5008   001316                     
  5009                           ;color.c: 278:                 temp /= (unsigned long)C;
  5010   001316  C030  F001         	movff	convert_HSV@temp_612,___lldiv@dividend
  5011   00131A  C031  F002         	movff	convert_HSV@temp_612+1,___lldiv@dividend+1
  5012   00131E  C032  F003         	movff	convert_HSV@temp_612+2,___lldiv@dividend+2
  5013   001322  C033  F004         	movff	convert_HSV@temp_612+3,___lldiv@dividend+3
  5014   001326  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5015   00132A  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5016   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5017   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5018   001332  ECF0  F012         	call	___lldiv	;wreg free
  5019   001336  C001  F030         	movff	?___lldiv,convert_HSV@temp_612
  5020   00133A  C002  F031         	movff	?___lldiv+1,convert_HSV@temp_612+1
  5021   00133E  C003  F032         	movff	?___lldiv+2,convert_HSV@temp_612+2
  5022   001342  C004  F033         	movff	?___lldiv+3,convert_HSV@temp_612+3
  5023   001346                     
  5024                           ;color.c: 279:                 hue = (unsigned int)temp;
  5025   001346  C030  F01E         	movff	convert_HSV@temp_612,convert_HSV@hue
  5026   00134A  C031  F01F         	movff	convert_HSV@temp_612+1,convert_HSV@hue+1
  5027                           
  5028                           ;color.c: 280:             } else {
  5029   00134E  EF0E  F00A         	goto	l3980
  5030   001352                     l3968:
  5031                           
  5032                           ;color.c: 282:                 unsigned long temp;;color.c: 283:                 temp = 
      +                          (unsigned long)C;
  5033   001352  C040  F034         	movff	convert_HSV@C,convert_HSV@temp_613
  5034   001356  C041  F035         	movff	convert_HSV@C+1,convert_HSV@temp_613+1
  5035   00135A  6A36               	clrf	(convert_HSV@temp_613+2)^0,c
  5036   00135C  6A37               	clrf	(convert_HSV@temp_613+3)^0,c
  5037   00135E                     
  5038                           ;color.c: 284:                 temp *= 4;
  5039   00135E  0E02               	movlw	2
  5040   001360                     u3285:
  5041   001360  90D8               	bcf	status,0,c
  5042   001362  3634               	rlcf	convert_HSV@temp_613^0,f,c
  5043   001364  3635               	rlcf	(convert_HSV@temp_613+1)^0,f,c
  5044   001366  3636               	rlcf	(convert_HSV@temp_613+2)^0,f,c
  5045   001368  3637               	rlcf	(convert_HSV@temp_613+3)^0,f,c
  5046   00136A  2EE8               	decfsz	wreg,f,c
  5047   00136C  EFB0  F009         	goto	u3285
  5048   001370                     
  5049                           ;color.c: 285:                 temp -= (unsigned long)(p2->G - p2->R);
  5050   001370  500F               	movf	convert_HSV@p2^0,w,c
  5051   001372  6ED9               	movwf	fsr2l,c
  5052   001374  6ADA               	clrf	fsr2h,c
  5053   001376  CFDE F010          	movff	postinc2,??_convert_HSV
  5054   00137A  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5055   00137E  500F               	movf	convert_HSV@p2^0,w,c
  5056   001380  6ED9               	movwf	fsr2l,c
  5057   001382  6ADA               	clrf	fsr2h,c
  5058   001384  0E02               	movlw	2
  5059   001386  26D9               	addwf	fsr2l,f,c
  5060   001388  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5061   00138C  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5062   001390  5010               	movf	??_convert_HSV^0,w,c
  5063   001392  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5064   001394  6E14               	movwf	(??_convert_HSV+4)^0,c
  5065   001396  5011               	movf	(??_convert_HSV+1)^0,w,c
  5066   001398  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5067   00139A  6E15               	movwf	(??_convert_HSV+5)^0,c
  5068   00139C  6A16               	clrf	(??_convert_HSV+6)^0,c
  5069   00139E  6A17               	clrf	(??_convert_HSV+7)^0,c
  5070   0013A0  5014               	movf	(??_convert_HSV+4)^0,w,c
  5071   0013A2  5E34               	subwf	convert_HSV@temp_613^0,f,c
  5072   0013A4  5015               	movf	(??_convert_HSV+5)^0,w,c
  5073   0013A6  5A35               	subwfb	(convert_HSV@temp_613+1)^0,f,c
  5074   0013A8  5016               	movf	(??_convert_HSV+6)^0,w,c
  5075   0013AA  5A36               	subwfb	(convert_HSV@temp_613+2)^0,f,c
  5076   0013AC  5017               	movf	(??_convert_HSV+7)^0,w,c
  5077   0013AE  5A37               	subwfb	(convert_HSV@temp_613+3)^0,f,c
  5078   0013B0                     
  5079                           ;color.c: 286:                 temp *= (unsigned long)hue_scale;
  5080   0013B0  C034  F001         	movff	convert_HSV@temp_613,___lmul@multiplier
  5081   0013B4  C035  F002         	movff	convert_HSV@temp_613+1,___lmul@multiplier+1
  5082   0013B8  C036  F003         	movff	convert_HSV@temp_613+2,___lmul@multiplier+2
  5083   0013BC  C037  F004         	movff	convert_HSV@temp_613+3,___lmul@multiplier+3
  5084   0013C0  0E3C               	movlw	60
  5085   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  5086   0013C4  0E00               	movlw	0
  5087   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5088   0013C8  0E00               	movlw	0
  5089   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5090   0013CC  0E00               	movlw	0
  5091   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5092   0013D0  EC75  F014         	call	___lmul	;wreg free
  5093   0013D4  C001  F034         	movff	?___lmul,convert_HSV@temp_613
  5094   0013D8  C002  F035         	movff	?___lmul+1,convert_HSV@temp_613+1
  5095   0013DC  C003  F036         	movff	?___lmul+2,convert_HSV@temp_613+2
  5096   0013E0  C004  F037         	movff	?___lmul+3,convert_HSV@temp_613+3
  5097   0013E4                     
  5098                           ;color.c: 287:                 temp /= (unsigned long)C;
  5099   0013E4  C034  F001         	movff	convert_HSV@temp_613,___lldiv@dividend
  5100   0013E8  C035  F002         	movff	convert_HSV@temp_613+1,___lldiv@dividend+1
  5101   0013EC  C036  F003         	movff	convert_HSV@temp_613+2,___lldiv@dividend+2
  5102   0013F0  C037  F004         	movff	convert_HSV@temp_613+3,___lldiv@dividend+3
  5103   0013F4  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5104   0013F8  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5105   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5106   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5107   001400  ECF0  F012         	call	___lldiv	;wreg free
  5108   001404  C001  F034         	movff	?___lldiv,convert_HSV@temp_613
  5109   001408  C002  F035         	movff	?___lldiv+1,convert_HSV@temp_613+1
  5110   00140C  C003  F036         	movff	?___lldiv+2,convert_HSV@temp_613+2
  5111   001410  C004  F037         	movff	?___lldiv+3,convert_HSV@temp_613+3
  5112   001414                     
  5113                           ;color.c: 288:                 hue = (unsigned int)temp;
  5114   001414  C034  F01E         	movff	convert_HSV@temp_613,convert_HSV@hue
  5115   001418  C035  F01F         	movff	convert_HSV@temp_613+1,convert_HSV@hue+1
  5116   00141C                     l3980:
  5117                           
  5118                           ;color.c: 293:     if (M == 0) {
  5119   00141C  503E               	movf	convert_HSV@M^0,w,c
  5120   00141E  103F               	iorwf	(convert_HSV@M+1)^0,w,c
  5121   001420  A4D8               	btfss	status,2,c
  5122   001422  EF15  F00A         	goto	u3291
  5123   001426  EF17  F00A         	goto	u3290
  5124   00142A                     u3291:
  5125   00142A  EF1D  F00A         	goto	l3984
  5126   00142E                     u3290:
  5127   00142E                     
  5128                           ;color.c: 294:         sat = 0;
  5129   00142E  0E00               	movlw	0
  5130   001430  6E1D               	movwf	(convert_HSV@sat+1)^0,c
  5131   001432  0E00               	movlw	0
  5132   001434  6E1C               	movwf	convert_HSV@sat^0,c
  5133                           
  5134                           ;color.c: 295:     } else {
  5135   001436  EF59  F00A         	goto	l3992
  5136   00143A                     l3984:
  5137                           
  5138                           ;color.c: 297:         unsigned long temp;;color.c: 298:         temp = (unsigned long)C
      +                          ;
  5139   00143A  C040  F020         	movff	convert_HSV@C,convert_HSV@temp_614
  5140   00143E  C041  F021         	movff	convert_HSV@C+1,convert_HSV@temp_614+1
  5141   001442  6A22               	clrf	(convert_HSV@temp_614+2)^0,c
  5142   001444  6A23               	clrf	(convert_HSV@temp_614+3)^0,c
  5143   001446                     
  5144                           ;color.c: 299:         temp *= (unsigned long)sat_scale;
  5145   001446  C020  F001         	movff	convert_HSV@temp_614,___lmul@multiplier
  5146   00144A  C021  F002         	movff	convert_HSV@temp_614+1,___lmul@multiplier+1
  5147   00144E  C022  F003         	movff	convert_HSV@temp_614+2,___lmul@multiplier+2
  5148   001452  C023  F004         	movff	convert_HSV@temp_614+3,___lmul@multiplier+3
  5149   001456  0E64               	movlw	100
  5150   001458  6E05               	movwf	___lmul@multiplicand^0,c
  5151   00145A  0E00               	movlw	0
  5152   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5153   00145E  0E00               	movlw	0
  5154   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5155   001462  0E00               	movlw	0
  5156   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5157   001466  EC75  F014         	call	___lmul	;wreg free
  5158   00146A  C001  F020         	movff	?___lmul,convert_HSV@temp_614
  5159   00146E  C002  F021         	movff	?___lmul+1,convert_HSV@temp_614+1
  5160   001472  C003  F022         	movff	?___lmul+2,convert_HSV@temp_614+2
  5161   001476  C004  F023         	movff	?___lmul+3,convert_HSV@temp_614+3
  5162   00147A                     
  5163                           ;color.c: 300:         temp /= (unsigned long)M;
  5164   00147A  C020  F001         	movff	convert_HSV@temp_614,___lldiv@dividend
  5165   00147E  C021  F002         	movff	convert_HSV@temp_614+1,___lldiv@dividend+1
  5166   001482  C022  F003         	movff	convert_HSV@temp_614+2,___lldiv@dividend+2
  5167   001486  C023  F004         	movff	convert_HSV@temp_614+3,___lldiv@dividend+3
  5168   00148A  C03E  F005         	movff	convert_HSV@M,___lldiv@divisor
  5169   00148E  C03F  F006         	movff	convert_HSV@M+1,___lldiv@divisor+1
  5170   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5171   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5172   001496  ECF0  F012         	call	___lldiv	;wreg free
  5173   00149A  C001  F020         	movff	?___lldiv,convert_HSV@temp_614
  5174   00149E  C002  F021         	movff	?___lldiv+1,convert_HSV@temp_614+1
  5175   0014A2  C003  F022         	movff	?___lldiv+2,convert_HSV@temp_614+2
  5176   0014A6  C004  F023         	movff	?___lldiv+3,convert_HSV@temp_614+3
  5177   0014AA                     
  5178                           ;color.c: 301:         sat = (unsigned int)temp;
  5179   0014AA  C020  F01C         	movff	convert_HSV@temp_614,convert_HSV@sat
  5180   0014AE  C021  F01D         	movff	convert_HSV@temp_614+1,convert_HSV@sat+1
  5181   0014B2                     l3992:
  5182                           
  5183                           ;color.c: 304:     p1->H = hue;
  5184   0014B2  500E               	movf	convert_HSV@p1^0,w,c
  5185   0014B4  6ED9               	movwf	fsr2l,c
  5186   0014B6  6ADA               	clrf	fsr2h,c
  5187   0014B8  C01E  FFDE         	movff	convert_HSV@hue,postinc2
  5188   0014BC  C01F  FFDD         	movff	convert_HSV@hue+1,postdec2
  5189   0014C0                     
  5190                           ;color.c: 305:     p1->S = sat;
  5191   0014C0  500E               	movf	convert_HSV@p1^0,w,c
  5192   0014C2  6ED9               	movwf	fsr2l,c
  5193   0014C4  6ADA               	clrf	fsr2h,c
  5194   0014C6  0E02               	movlw	2
  5195   0014C8  26D9               	addwf	fsr2l,f,c
  5196   0014CA  C01C  FFDE         	movff	convert_HSV@sat,postinc2
  5197   0014CE  C01D  FFDD         	movff	convert_HSV@sat+1,postdec2
  5198   0014D2                     
  5199                           ;color.c: 306:     p1->V = M;
  5200   0014D2  500E               	movf	convert_HSV@p1^0,w,c
  5201   0014D4  6ED9               	movwf	fsr2l,c
  5202   0014D6  6ADA               	clrf	fsr2h,c
  5203   0014D8  0E04               	movlw	4
  5204   0014DA  26D9               	addwf	fsr2l,f,c
  5205   0014DC  C03E  FFDE         	movff	convert_HSV@M,postinc2
  5206   0014E0  C03F  FFDD         	movff	convert_HSV@M+1,postdec2
  5207   0014E4  0012               	return		;funcret
  5208   0014E6                     __end_of_convert_HSV:
  5209                           	callstack 0
  5210                           
  5211 ;; *************** function _min_RGB *****************
  5212 ;; Defined at:
  5213 ;;		line 182 in file "color.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5216 ;;		 -> main@RGBC_colour(8), 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  min_val         2    4[COMRAM] unsigned int 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2    0[COMRAM] unsigned int 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;Total ram usage:        6 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; Hardware stack levels required when called: 1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_convert_HSV
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text23
  5243   002714                     __ptext23:
  5244                           	callstack 0
  5245   002714                     _min_RGB:
  5246                           	callstack 28
  5247   002714                     
  5248                           ;color.c: 182: unsigned int min_RGB(struct RGBC_val *p);color.c: 183: {;color.c: 184:   
      +                            unsigned int min_val = p->R;
  5249   002714  5001               	movf	min_RGB@p^0,w,c
  5250   002716  6ED9               	movwf	fsr2l,c
  5251   002718  6ADA               	clrf	fsr2h,c
  5252   00271A  CFDE F005          	movff	postinc2,min_RGB@min_val
  5253   00271E  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5254   002722                     
  5255                           ;color.c: 185:     if (p->G < min_val) {min_val = p->G;}
  5256   002722  5001               	movf	min_RGB@p^0,w,c
  5257   002724  6ED9               	movwf	fsr2l,c
  5258   002726  6ADA               	clrf	fsr2h,c
  5259   002728  0E02               	movlw	2
  5260   00272A  26D9               	addwf	fsr2l,f,c
  5261   00272C  5005               	movf	min_RGB@min_val^0,w,c
  5262   00272E  5CDE               	subwf	postinc2,w,c
  5263   002730  5006               	movf	(min_RGB@min_val+1)^0,w,c
  5264   002732  58DE               	subwfb	postinc2,w,c
  5265   002734  B0D8               	btfsc	status,0,c
  5266   002736  EF9F  F013         	goto	u2591
  5267   00273A  EFA1  F013         	goto	u2590
  5268   00273E                     u2591:
  5269   00273E  EFAA  F013         	goto	l104
  5270   002742                     u2590:
  5271   002742  5001               	movf	min_RGB@p^0,w,c
  5272   002744  6ED9               	movwf	fsr2l,c
  5273   002746  6ADA               	clrf	fsr2h,c
  5274   002748  0E02               	movlw	2
  5275   00274A  26D9               	addwf	fsr2l,f,c
  5276   00274C  CFDE F005          	movff	postinc2,min_RGB@min_val
  5277   002750  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5278   002754                     l104:
  5279                           
  5280                           ;color.c: 186:     if (p->B < min_val) {min_val = p->B;}
  5281   002754  5001               	movf	min_RGB@p^0,w,c
  5282   002756  6ED9               	movwf	fsr2l,c
  5283   002758  6ADA               	clrf	fsr2h,c
  5284   00275A  0E04               	movlw	4
  5285   00275C  26D9               	addwf	fsr2l,f,c
  5286   00275E  5005               	movf	min_RGB@min_val^0,w,c
  5287   002760  5CDE               	subwf	postinc2,w,c
  5288   002762  5006               	movf	(min_RGB@min_val+1)^0,w,c
  5289   002764  58DE               	subwfb	postinc2,w,c
  5290   002766  B0D8               	btfsc	status,0,c
  5291   002768  EFB8  F013         	goto	u2601
  5292   00276C  EFBA  F013         	goto	u2600
  5293   002770                     u2601:
  5294   002770  EFC3  F013         	goto	l3452
  5295   002774                     u2600:
  5296   002774  5001               	movf	min_RGB@p^0,w,c
  5297   002776  6ED9               	movwf	fsr2l,c
  5298   002778  6ADA               	clrf	fsr2h,c
  5299   00277A  0E04               	movlw	4
  5300   00277C  26D9               	addwf	fsr2l,f,c
  5301   00277E  CFDE F005          	movff	postinc2,min_RGB@min_val
  5302   002782  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  5303   002786                     l3452:
  5304                           
  5305                           ;color.c: 187:     return min_val;
  5306   002786  C005  F001         	movff	min_RGB@min_val,?_min_RGB
  5307   00278A  C006  F002         	movff	min_RGB@min_val+1,?_min_RGB+1
  5308   00278E  0012               	return		;funcret
  5309   002790                     __end_of_min_RGB:
  5310                           	callstack 0
  5311                           
  5312 ;; *************** function _max_RGB *****************
  5313 ;; Defined at:
  5314 ;;		line 171 in file "color.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5317 ;;		 -> main@RGBC_colour(8), 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  max_val         2    4[COMRAM] unsigned int 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2    0[COMRAM] unsigned int 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5333 ;;Total ram usage:        6 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 1
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_convert_HSV
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text24
  5344   002790                     __ptext24:
  5345                           	callstack 0
  5346   002790                     _max_RGB:
  5347                           	callstack 28
  5348   002790                     
  5349                           ;color.c: 171: unsigned int max_RGB(struct RGBC_val *p);color.c: 172: {;color.c: 173:   
      +                            unsigned int max_val = p->R;
  5350   002790  5001               	movf	max_RGB@p^0,w,c
  5351   002792  6ED9               	movwf	fsr2l,c
  5352   002794  6ADA               	clrf	fsr2h,c
  5353   002796  CFDE F005          	movff	postinc2,max_RGB@max_val
  5354   00279A  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5355   00279E                     
  5356                           ;color.c: 174:     if (p->G > max_val) {max_val = p->G;}
  5357   00279E  5001               	movf	max_RGB@p^0,w,c
  5358   0027A0  6ED9               	movwf	fsr2l,c
  5359   0027A2  6ADA               	clrf	fsr2h,c
  5360   0027A4  0E02               	movlw	2
  5361   0027A6  26D9               	addwf	fsr2l,f,c
  5362   0027A8  50DE               	movf	postinc2,w,c
  5363   0027AA  5C05               	subwf	max_RGB@max_val^0,w,c
  5364   0027AC  50DE               	movf	postinc2,w,c
  5365   0027AE  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  5366   0027B0  B0D8               	btfsc	status,0,c
  5367   0027B2  EFDD  F013         	goto	u2571
  5368   0027B6  EFDF  F013         	goto	u2570
  5369   0027BA                     u2571:
  5370   0027BA  EFE8  F013         	goto	l99
  5371   0027BE                     u2570:
  5372   0027BE  5001               	movf	max_RGB@p^0,w,c
  5373   0027C0  6ED9               	movwf	fsr2l,c
  5374   0027C2  6ADA               	clrf	fsr2h,c
  5375   0027C4  0E02               	movlw	2
  5376   0027C6  26D9               	addwf	fsr2l,f,c
  5377   0027C8  CFDE F005          	movff	postinc2,max_RGB@max_val
  5378   0027CC  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5379   0027D0                     l99:
  5380                           
  5381                           ;color.c: 175:     if (p->B > max_val) {max_val = p->B;}
  5382   0027D0  5001               	movf	max_RGB@p^0,w,c
  5383   0027D2  6ED9               	movwf	fsr2l,c
  5384   0027D4  6ADA               	clrf	fsr2h,c
  5385   0027D6  0E04               	movlw	4
  5386   0027D8  26D9               	addwf	fsr2l,f,c
  5387   0027DA  50DE               	movf	postinc2,w,c
  5388   0027DC  5C05               	subwf	max_RGB@max_val^0,w,c
  5389   0027DE  50DE               	movf	postinc2,w,c
  5390   0027E0  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  5391   0027E2  B0D8               	btfsc	status,0,c
  5392   0027E4  EFF6  F013         	goto	u2581
  5393   0027E8  EFF8  F013         	goto	u2580
  5394   0027EC                     u2581:
  5395   0027EC  EF01  F014         	goto	l3440
  5396   0027F0                     u2580:
  5397   0027F0  5001               	movf	max_RGB@p^0,w,c
  5398   0027F2  6ED9               	movwf	fsr2l,c
  5399   0027F4  6ADA               	clrf	fsr2h,c
  5400   0027F6  0E04               	movlw	4
  5401   0027F8  26D9               	addwf	fsr2l,f,c
  5402   0027FA  CFDE F005          	movff	postinc2,max_RGB@max_val
  5403   0027FE  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  5404   002802                     l3440:
  5405                           
  5406                           ;color.c: 176:     return max_val;
  5407   002802  C005  F001         	movff	max_RGB@max_val,?_max_RGB
  5408   002806  C006  F002         	movff	max_RGB@max_val+1,?_max_RGB+1
  5409   00280A  0012               	return		;funcret
  5410   00280C                     __end_of_max_RGB:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function ___lmul *****************
  5414 ;; Defined at:
  5415 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  multiplier      4    0[COMRAM] unsigned long 
  5418 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  product         4    8[COMRAM] unsigned long 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  4    0[COMRAM] unsigned long 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5430 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5433 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;Total ram usage:       12 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_convert_HSV
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text25
  5445   0028EA                     __ptext25:
  5446                           	callstack 0
  5447   0028EA                     ___lmul:
  5448                           	callstack 28
  5449   0028EA  0E00               	movlw	0
  5450   0028EC  6E09               	movwf	___lmul@product^0,c
  5451   0028EE  0E00               	movlw	0
  5452   0028F0  6E0A               	movwf	(___lmul@product+1)^0,c
  5453   0028F2  0E00               	movlw	0
  5454   0028F4  6E0B               	movwf	(___lmul@product+2)^0,c
  5455   0028F6  0E00               	movlw	0
  5456   0028F8  6E0C               	movwf	(___lmul@product+3)^0,c
  5457   0028FA                     l3582:
  5458   0028FA  A001               	btfss	___lmul@multiplier^0,0,c
  5459   0028FC  EF82  F014         	goto	u2641
  5460   002900  EF84  F014         	goto	u2640
  5461   002904                     u2641:
  5462   002904  EF8C  F014         	goto	l3586
  5463   002908                     u2640:
  5464   002908  5005               	movf	___lmul@multiplicand^0,w,c
  5465   00290A  2609               	addwf	___lmul@product^0,f,c
  5466   00290C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5467   00290E  220A               	addwfc	(___lmul@product+1)^0,f,c
  5468   002910  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5469   002912  220B               	addwfc	(___lmul@product+2)^0,f,c
  5470   002914  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5471   002916  220C               	addwfc	(___lmul@product+3)^0,f,c
  5472   002918                     l3586:
  5473   002918  90D8               	bcf	status,0,c
  5474   00291A  3605               	rlcf	___lmul@multiplicand^0,f,c
  5475   00291C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5476   00291E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5477   002920  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5478   002922  90D8               	bcf	status,0,c
  5479   002924  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5480   002926  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5481   002928  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5482   00292A  3201               	rrcf	___lmul@multiplier^0,f,c
  5483   00292C  5001               	movf	___lmul@multiplier^0,w,c
  5484   00292E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5485   002930  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5486   002932  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5487   002934  A4D8               	btfss	status,2,c
  5488   002936  EF9F  F014         	goto	u2651
  5489   00293A  EFA1  F014         	goto	u2650
  5490   00293E                     u2651:
  5491   00293E  EF7D  F014         	goto	l3582
  5492   002942                     u2650:
  5493   002942  C009  F001         	movff	___lmul@product,?___lmul
  5494   002946  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5495   00294A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5496   00294E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5497   002952  0012               	return		;funcret
  5498   002954                     __end_of___lmul:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _color_click_init *****************
  5502 ;; Defined at:
  5503 ;;		line 7 in file "color.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:        1 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 4
  5524 ;; This function calls:
  5525 ;;		_I2C_2_Master_Init
  5526 ;;		_color_writetoaddr
  5527 ;; This function is called by:
  5528 ;;		_main
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text26
  5533   002D72                     __ptext26:
  5534                           	callstack 0
  5535   002D72                     _color_click_init:
  5536                           	callstack 26
  5537   002D72                     
  5538                           ;color.c: 10:     I2C_2_Master_Init();
  5539   002D72  ECEA  F016         	call	_I2C_2_Master_Init	;wreg free
  5540   002D76                     
  5541                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5542   002D76  0E01               	movlw	1
  5543   002D78  6E03               	movwf	color_writetoaddr@value^0,c
  5544   002D7A  0E00               	movlw	0
  5545   002D7C  EC25  F017         	call	_color_writetoaddr
  5546   002D80                     
  5547                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5548   002D80  0E3F               	movlw	63
  5549   002D82  6E05               	movwf	??_color_click_init^0,c
  5550   002D84  0E55               	movlw	85
  5551   002D86                     u3897:
  5552   002D86  2EE8               	decfsz	wreg,f,c
  5553   002D88  D7FE               	bra	u3897
  5554   002D8A  2E05               	decfsz	??_color_click_init^0,f,c
  5555   002D8C  D7FC               	bra	u3897
  5556   002D8E  0000               	nop	
  5557   002D90                     
  5558                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5559   002D90  0E03               	movlw	3
  5560   002D92  6E03               	movwf	color_writetoaddr@value^0,c
  5561   002D94  0E00               	movlw	0
  5562   002D96  EC25  F017         	call	_color_writetoaddr
  5563   002D9A                     
  5564                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5565   002D9A  0ED5               	movlw	213
  5566   002D9C  6E03               	movwf	color_writetoaddr@value^0,c
  5567   002D9E  0E01               	movlw	1
  5568   002DA0  EC25  F017         	call	_color_writetoaddr
  5569   002DA4  0012               	return		;funcret
  5570   002DA6                     __end_of_color_click_init:
  5571                           	callstack 0
  5572                           
  5573 ;; *************** function _color_writetoaddr *****************
  5574 ;; Defined at:
  5575 ;;		line 28 in file "color.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  address         1    wreg     unsigned char 
  5578 ;;  value           1    2[COMRAM] unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  address         1    3[COMRAM] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5590 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;Total ram usage:        2 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 3
  5597 ;; This function calls:
  5598 ;;		_I2C_2_Master_Start
  5599 ;;		_I2C_2_Master_Stop
  5600 ;;		_I2C_2_Master_Write
  5601 ;; This function is called by:
  5602 ;;		_color_click_init
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text27
  5607   002E4A                     __ptext27:
  5608                           	callstack 0
  5609   002E4A                     _color_writetoaddr:
  5610                           	callstack 26
  5611                           
  5612                           ;incstack = 0
  5613                           ;color_writetoaddr@address stored from wreg
  5614   002E4A  6E04               	movwf	color_writetoaddr@address^0,c
  5615   002E4C                     
  5616                           ;color.c: 29:     I2C_2_Master_Start();
  5617   002E4C  EC72  F017         	call	_I2C_2_Master_Start	;wreg free
  5618                           
  5619                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5620   002E50  0E52               	movlw	82
  5621   002E52  EC5B  F017         	call	_I2C_2_Master_Write
  5622                           
  5623                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  5624   002E56  5004               	movf	color_writetoaddr@address^0,w,c
  5625   002E58  0980               	iorlw	128
  5626   002E5A  EC5B  F017         	call	_I2C_2_Master_Write
  5627                           
  5628                           ;color.c: 32:     I2C_2_Master_Write(value);
  5629   002E5E  5003               	movf	color_writetoaddr@value^0,w,c
  5630   002E60  EC5B  F017         	call	_I2C_2_Master_Write
  5631                           
  5632                           ;color.c: 33:     I2C_2_Master_Stop();
  5633   002E64  EC6D  F017         	call	_I2C_2_Master_Stop	;wreg free
  5634   002E68  0012               	return		;funcret
  5635   002E6A                     __end_of_color_writetoaddr:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function _I2C_2_Master_Init *****************
  5639 ;; Defined at:
  5640 ;;		line 4 in file "i2c.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_color_click_init
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text28
  5669   002DD4                     __ptext28:
  5670                           	callstack 0
  5671   002DD4                     _I2C_2_Master_Init:
  5672                           	callstack 28
  5673   002DD4                     
  5674                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5675   002DD4  010E               	movlb	14	; () banked
  5676   002DD6  51D9               	movf	217,w,b	;volatile
  5677   002DD8  0BF0               	andlw	-16
  5678   002DDA  0908               	iorlw	8
  5679   002DDC  6FD9               	movwf	217,b	;volatile
  5680   002DDE                     
  5681                           ; BSR set to: 14
  5682                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5683   002DDE  8BD9               	bsf	217,5,b	;volatile
  5684                           
  5685                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5686   002DE0  0E9F               	movlw	159
  5687   002DE2  6FD6               	movwf	214,b	;volatile
  5688   002DE4                     
  5689                           ; BSR set to: 14
  5690                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5691   002DE4  8A84               	bsf	132,5,c	;volatile
  5692   002DE6                     
  5693                           ; BSR set to: 14
  5694                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5695   002DE6  8C84               	bsf	132,6,c	;volatile
  5696   002DE8                     
  5697                           ; BSR set to: 14
  5698                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5699   002DE8  9BA7               	bcf	167,5,b	;volatile
  5700   002DEA                     
  5701                           ; BSR set to: 14
  5702                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5703   002DEA  9DA7               	bcf	167,6,b	;volatile
  5704                           
  5705                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5706   002DEC  0E1D               	movlw	29
  5707   002DEE  6F1D               	movwf	29,b	;volatile
  5708                           
  5709                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5710   002DF0  0E1E               	movlw	30
  5711   002DF2  6F1C               	movwf	28,b	;volatile
  5712                           
  5713                           ;i2c.c: 18:   RD5PPS=0x1C;
  5714   002DF4  0E1C               	movlw	28
  5715   002DF6  6F6F               	movwf	111,b	;volatile
  5716                           
  5717                           ;i2c.c: 19:   RD6PPS=0x1B;
  5718   002DF8  0E1B               	movlw	27
  5719   002DFA  6F70               	movwf	112,b	;volatile
  5720   002DFC                     
  5721                           ; BSR set to: 14
  5722   002DFC  0012               	return		;funcret
  5723   002DFE                     __end_of_I2C_2_Master_Init:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function _buggy_lights_init *****************
  5727 ;; Defined at:
  5728 ;;		line 7 in file "buggy_lights.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		None
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5746 ;;Total ram usage:        0 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_main
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text29
  5757   002DA6                     __ptext29:
  5758                           	callstack 0
  5759   002DA6                     _buggy_lights_init:
  5760                           	callstack 29
  5761   002DA6                     
  5762                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  5763   002DA6  9884               	bcf	132,4,c	;volatile
  5764                           
  5765                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  5766   002DA8  9288               	bcf	136,1,c	;volatile
  5767                           
  5768                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  5769   002DAA  9684               	bcf	132,3,c	;volatile
  5770                           
  5771                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  5772   002DAC  9086               	bcf	134,0,c	;volatile
  5773                           
  5774                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  5775   002DAE  9088               	bcf	136,0,c	;volatile
  5776                           
  5777                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  5778   002DB0  987C               	bcf	124,4,c	;volatile
  5779                           
  5780                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  5781   002DB2  9280               	bcf	128,1,c	;volatile
  5782                           
  5783                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  5784   002DB4  967C               	bcf	124,3,c	;volatile
  5785                           
  5786                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  5787   002DB6  907E               	bcf	126,0,c	;volatile
  5788                           
  5789                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  5790   002DB8  9080               	bcf	128,0,c	;volatile
  5791                           
  5792                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  5793   002DBA  9287               	bcf	135,1,c	;volatile
  5794                           
  5795                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  5796   002DBC  9881               	bcf	129,4,c	;volatile
  5797                           
  5798                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  5799   002DBE  9E86               	bcf	134,7,c	;volatile
  5800                           
  5801                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  5802   002DC0  927F               	bcf	127,1,c	;volatile
  5803                           
  5804                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  5805   002DC2  9879               	bcf	121,4,c	;volatile
  5806                           
  5807                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  5808   002DC4  9E7E               	bcf	126,7,c	;volatile
  5809                           
  5810                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  5811   002DC6  9087               	bcf	135,0,c	;volatile
  5812                           
  5813                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  5814   002DC8  9E85               	bcf	133,7,c	;volatile
  5815                           
  5816                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  5817   002DCA  9681               	bcf	129,3,c	;volatile
  5818                           
  5819                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  5820   002DCC  907F               	bcf	127,0,c	;volatile
  5821                           
  5822                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  5823   002DCE  9E7D               	bcf	125,7,c	;volatile
  5824                           
  5825                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  5826   002DD0  9679               	bcf	121,3,c	;volatile
  5827   002DD2  0012               	return		;funcret
  5828   002DD4                     __end_of_buggy_lights_init:
  5829                           	callstack 0
  5830                           
  5831 ;; *************** function _average_RGBC *****************
  5832 ;; Defined at:
  5833 ;;		line 124 in file "color.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  p               1   13[COMRAM] PTR struct RGBC_val
  5836 ;;		 -> main@RGBC_colour(8), 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  i               1   16[COMRAM] unsigned char 
  5839 ;;  temp_C          4   29[COMRAM] unsigned long 
  5840 ;;  temp_B          4   25[COMRAM] unsigned long 
  5841 ;;  temp_G          4   21[COMRAM] unsigned long 
  5842 ;;  temp_R          4   17[COMRAM] unsigned long 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;Total ram usage:       20 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 5
  5859 ;; This function calls:
  5860 ;;		___lldiv
  5861 ;;		_getRGBCval
  5862 ;; This function is called by:
  5863 ;;		_main
  5864 ;;		_forward_navigation
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text30
  5869   001C1C                     __ptext30:
  5870                           	callstack 0
  5871   001C1C                     _average_RGBC:
  5872                           	callstack 25
  5873   001C1C                     
  5874                           ;color.c: 124: void average_RGBC(struct RGBC_val *p);color.c: 125: {;color.c: 127:     u
      +                          nsigned long temp_R = 0;
  5875   001C1C  0E00               	movlw	0
  5876   001C1E  6E12               	movwf	average_RGBC@temp_R^0,c
  5877   001C20  0E00               	movlw	0
  5878   001C22  6E13               	movwf	(average_RGBC@temp_R+1)^0,c
  5879   001C24  0E00               	movlw	0
  5880   001C26  6E14               	movwf	(average_RGBC@temp_R+2)^0,c
  5881   001C28  0E00               	movlw	0
  5882   001C2A  6E15               	movwf	(average_RGBC@temp_R+3)^0,c
  5883                           
  5884                           ;color.c: 128:     unsigned long temp_G = 0;
  5885   001C2C  0E00               	movlw	0
  5886   001C2E  6E16               	movwf	average_RGBC@temp_G^0,c
  5887   001C30  0E00               	movlw	0
  5888   001C32  6E17               	movwf	(average_RGBC@temp_G+1)^0,c
  5889   001C34  0E00               	movlw	0
  5890   001C36  6E18               	movwf	(average_RGBC@temp_G+2)^0,c
  5891   001C38  0E00               	movlw	0
  5892   001C3A  6E19               	movwf	(average_RGBC@temp_G+3)^0,c
  5893                           
  5894                           ;color.c: 129:     unsigned long temp_B = 0;
  5895   001C3C  0E00               	movlw	0
  5896   001C3E  6E1A               	movwf	average_RGBC@temp_B^0,c
  5897   001C40  0E00               	movlw	0
  5898   001C42  6E1B               	movwf	(average_RGBC@temp_B+1)^0,c
  5899   001C44  0E00               	movlw	0
  5900   001C46  6E1C               	movwf	(average_RGBC@temp_B+2)^0,c
  5901   001C48  0E00               	movlw	0
  5902   001C4A  6E1D               	movwf	(average_RGBC@temp_B+3)^0,c
  5903                           
  5904                           ;color.c: 130:     unsigned long temp_C = 0;
  5905   001C4C  0E00               	movlw	0
  5906   001C4E  6E1E               	movwf	average_RGBC@temp_C^0,c
  5907   001C50  0E00               	movlw	0
  5908   001C52  6E1F               	movwf	(average_RGBC@temp_C+1)^0,c
  5909   001C54  0E00               	movlw	0
  5910   001C56  6E20               	movwf	(average_RGBC@temp_C+2)^0,c
  5911   001C58  0E00               	movlw	0
  5912   001C5A  6E21               	movwf	(average_RGBC@temp_C+3)^0,c
  5913                           
  5914                           ;color.c: 133:     for (unsigned char i; i < sample_count; i++) {
  5915   001C5C  EF77  F00E         	goto	l3860
  5916   001C60                     l3848:
  5917                           
  5918                           ;color.c: 134:         getRGBCval(p);
  5919   001C60  C00E  F00C         	movff	average_RGBC@p,getRGBCval@p
  5920   001C64  EC67  F015         	call	_getRGBCval	;wreg free
  5921   001C68                     
  5922                           ;color.c: 136:         temp_R += (unsigned long)p->R;
  5923   001C68  500E               	movf	average_RGBC@p^0,w,c
  5924   001C6A  6ED9               	movwf	fsr2l,c
  5925   001C6C  6ADA               	clrf	fsr2h,c
  5926   001C6E  CFDE F00F          	movff	postinc2,??_average_RGBC
  5927   001C72  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5928   001C76  500F               	movf	??_average_RGBC^0,w,c
  5929   001C78  2612               	addwf	average_RGBC@temp_R^0,f,c
  5930   001C7A  5010               	movf	(??_average_RGBC+1)^0,w,c
  5931   001C7C  2213               	addwfc	(average_RGBC@temp_R+1)^0,f,c
  5932   001C7E  0E00               	movlw	0
  5933   001C80  2214               	addwfc	(average_RGBC@temp_R+2)^0,f,c
  5934   001C82  0E00               	movlw	0
  5935   001C84  2215               	addwfc	(average_RGBC@temp_R+3)^0,f,c
  5936   001C86                     
  5937                           ;color.c: 137:         temp_G += (unsigned long)p->G;
  5938   001C86  500E               	movf	average_RGBC@p^0,w,c
  5939   001C88  6ED9               	movwf	fsr2l,c
  5940   001C8A  6ADA               	clrf	fsr2h,c
  5941   001C8C  0E02               	movlw	2
  5942   001C8E  26D9               	addwf	fsr2l,f,c
  5943   001C90  CFDE F00F          	movff	postinc2,??_average_RGBC
  5944   001C94  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5945   001C98  500F               	movf	??_average_RGBC^0,w,c
  5946   001C9A  2616               	addwf	average_RGBC@temp_G^0,f,c
  5947   001C9C  5010               	movf	(??_average_RGBC+1)^0,w,c
  5948   001C9E  2217               	addwfc	(average_RGBC@temp_G+1)^0,f,c
  5949   001CA0  0E00               	movlw	0
  5950   001CA2  2218               	addwfc	(average_RGBC@temp_G+2)^0,f,c
  5951   001CA4  0E00               	movlw	0
  5952   001CA6  2219               	addwfc	(average_RGBC@temp_G+3)^0,f,c
  5953   001CA8                     
  5954                           ;color.c: 138:         temp_B += (unsigned long)p->B;
  5955   001CA8  500E               	movf	average_RGBC@p^0,w,c
  5956   001CAA  6ED9               	movwf	fsr2l,c
  5957   001CAC  6ADA               	clrf	fsr2h,c
  5958   001CAE  0E04               	movlw	4
  5959   001CB0  26D9               	addwf	fsr2l,f,c
  5960   001CB2  CFDE F00F          	movff	postinc2,??_average_RGBC
  5961   001CB6  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5962   001CBA  500F               	movf	??_average_RGBC^0,w,c
  5963   001CBC  261A               	addwf	average_RGBC@temp_B^0,f,c
  5964   001CBE  5010               	movf	(??_average_RGBC+1)^0,w,c
  5965   001CC0  221B               	addwfc	(average_RGBC@temp_B+1)^0,f,c
  5966   001CC2  0E00               	movlw	0
  5967   001CC4  221C               	addwfc	(average_RGBC@temp_B+2)^0,f,c
  5968   001CC6  0E00               	movlw	0
  5969   001CC8  221D               	addwfc	(average_RGBC@temp_B+3)^0,f,c
  5970   001CCA                     
  5971                           ;color.c: 139:         temp_C += (unsigned long)p->C;
  5972   001CCA  500E               	movf	average_RGBC@p^0,w,c
  5973   001CCC  6ED9               	movwf	fsr2l,c
  5974   001CCE  6ADA               	clrf	fsr2h,c
  5975   001CD0  0E06               	movlw	6
  5976   001CD2  26D9               	addwf	fsr2l,f,c
  5977   001CD4  CFDE F00F          	movff	postinc2,??_average_RGBC
  5978   001CD8  CFDD F010          	movff	postdec2,??_average_RGBC+1
  5979   001CDC  500F               	movf	??_average_RGBC^0,w,c
  5980   001CDE  261E               	addwf	average_RGBC@temp_C^0,f,c
  5981   001CE0  5010               	movf	(??_average_RGBC+1)^0,w,c
  5982   001CE2  221F               	addwfc	(average_RGBC@temp_C+1)^0,f,c
  5983   001CE4  0E00               	movlw	0
  5984   001CE6  2220               	addwfc	(average_RGBC@temp_C+2)^0,f,c
  5985   001CE8  0E00               	movlw	0
  5986   001CEA  2221               	addwfc	(average_RGBC@temp_C+3)^0,f,c
  5987   001CEC                     
  5988                           ;color.c: 140:     }
  5989   001CEC  2A11               	incf	average_RGBC@i^0,f,c
  5990   001CEE                     l3860:
  5991   001CEE  0E13               	movlw	19
  5992   001CF0  6411               	cpfsgt	average_RGBC@i^0,c
  5993   001CF2  EF7D  F00E         	goto	u3171
  5994   001CF6  EF7F  F00E         	goto	u3170
  5995   001CFA                     u3171:
  5996   001CFA  EF30  F00E         	goto	l3848
  5997   001CFE                     u3170:
  5998   001CFE  C012  F001         	movff	average_RGBC@temp_R,___lldiv@dividend
  5999   001D02  C013  F002         	movff	average_RGBC@temp_R+1,___lldiv@dividend+1
  6000   001D06  C014  F003         	movff	average_RGBC@temp_R+2,___lldiv@dividend+2
  6001   001D0A  C015  F004         	movff	average_RGBC@temp_R+3,___lldiv@dividend+3
  6002   001D0E  0E14               	movlw	20
  6003   001D10  6E05               	movwf	___lldiv@divisor^0,c
  6004   001D12  0E00               	movlw	0
  6005   001D14  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6006   001D16  0E00               	movlw	0
  6007   001D18  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6008   001D1A  0E00               	movlw	0
  6009   001D1C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6010   001D1E  ECF0  F012         	call	___lldiv	;wreg free
  6011   001D22  C001  F012         	movff	?___lldiv,average_RGBC@temp_R
  6012   001D26  C002  F013         	movff	?___lldiv+1,average_RGBC@temp_R+1
  6013   001D2A  C003  F014         	movff	?___lldiv+2,average_RGBC@temp_R+2
  6014   001D2E  C004  F015         	movff	?___lldiv+3,average_RGBC@temp_R+3
  6015   001D32  C016  F001         	movff	average_RGBC@temp_G,___lldiv@dividend
  6016   001D36  C017  F002         	movff	average_RGBC@temp_G+1,___lldiv@dividend+1
  6017   001D3A  C018  F003         	movff	average_RGBC@temp_G+2,___lldiv@dividend+2
  6018   001D3E  C019  F004         	movff	average_RGBC@temp_G+3,___lldiv@dividend+3
  6019   001D42  0E14               	movlw	20
  6020   001D44  6E05               	movwf	___lldiv@divisor^0,c
  6021   001D46  0E00               	movlw	0
  6022   001D48  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6023   001D4A  0E00               	movlw	0
  6024   001D4C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6025   001D4E  0E00               	movlw	0
  6026   001D50  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6027   001D52  ECF0  F012         	call	___lldiv	;wreg free
  6028   001D56  C001  F016         	movff	?___lldiv,average_RGBC@temp_G
  6029   001D5A  C002  F017         	movff	?___lldiv+1,average_RGBC@temp_G+1
  6030   001D5E  C003  F018         	movff	?___lldiv+2,average_RGBC@temp_G+2
  6031   001D62  C004  F019         	movff	?___lldiv+3,average_RGBC@temp_G+3
  6032   001D66  C01A  F001         	movff	average_RGBC@temp_B,___lldiv@dividend
  6033   001D6A  C01B  F002         	movff	average_RGBC@temp_B+1,___lldiv@dividend+1
  6034   001D6E  C01C  F003         	movff	average_RGBC@temp_B+2,___lldiv@dividend+2
  6035   001D72  C01D  F004         	movff	average_RGBC@temp_B+3,___lldiv@dividend+3
  6036   001D76  0E14               	movlw	20
  6037   001D78  6E05               	movwf	___lldiv@divisor^0,c
  6038   001D7A  0E00               	movlw	0
  6039   001D7C  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6040   001D7E  0E00               	movlw	0
  6041   001D80  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6042   001D82  0E00               	movlw	0
  6043   001D84  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6044   001D86  ECF0  F012         	call	___lldiv	;wreg free
  6045   001D8A  C001  F01A         	movff	?___lldiv,average_RGBC@temp_B
  6046   001D8E  C002  F01B         	movff	?___lldiv+1,average_RGBC@temp_B+1
  6047   001D92  C003  F01C         	movff	?___lldiv+2,average_RGBC@temp_B+2
  6048   001D96  C004  F01D         	movff	?___lldiv+3,average_RGBC@temp_B+3
  6049   001D9A  C01E  F001         	movff	average_RGBC@temp_C,___lldiv@dividend
  6050   001D9E  C01F  F002         	movff	average_RGBC@temp_C+1,___lldiv@dividend+1
  6051   001DA2  C020  F003         	movff	average_RGBC@temp_C+2,___lldiv@dividend+2
  6052   001DA6  C021  F004         	movff	average_RGBC@temp_C+3,___lldiv@dividend+3
  6053   001DAA  0E14               	movlw	20
  6054   001DAC  6E05               	movwf	___lldiv@divisor^0,c
  6055   001DAE  0E00               	movlw	0
  6056   001DB0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  6057   001DB2  0E00               	movlw	0
  6058   001DB4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  6059   001DB6  0E00               	movlw	0
  6060   001DB8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  6061   001DBA  ECF0  F012         	call	___lldiv	;wreg free
  6062   001DBE  C001  F01E         	movff	?___lldiv,average_RGBC@temp_C
  6063   001DC2  C002  F01F         	movff	?___lldiv+1,average_RGBC@temp_C+1
  6064   001DC6  C003  F020         	movff	?___lldiv+2,average_RGBC@temp_C+2
  6065   001DCA  C004  F021         	movff	?___lldiv+3,average_RGBC@temp_C+3
  6066   001DCE                     
  6067                           ;color.c: 149:     p->R = (unsigned int)temp_R;
  6068   001DCE  500E               	movf	average_RGBC@p^0,w,c
  6069   001DD0  6ED9               	movwf	fsr2l,c
  6070   001DD2  6ADA               	clrf	fsr2h,c
  6071   001DD4  C012  FFDE         	movff	average_RGBC@temp_R,postinc2
  6072   001DD8  C013  FFDD         	movff	average_RGBC@temp_R+1,postdec2
  6073   001DDC                     
  6074                           ;color.c: 150:     p->G = (unsigned int)temp_G;
  6075   001DDC  500E               	movf	average_RGBC@p^0,w,c
  6076   001DDE  6ED9               	movwf	fsr2l,c
  6077   001DE0  6ADA               	clrf	fsr2h,c
  6078   001DE2  0E02               	movlw	2
  6079   001DE4  26D9               	addwf	fsr2l,f,c
  6080   001DE6  C016  FFDE         	movff	average_RGBC@temp_G,postinc2
  6081   001DEA  C017  FFDD         	movff	average_RGBC@temp_G+1,postdec2
  6082   001DEE                     
  6083                           ;color.c: 151:     p->B = (unsigned int)temp_B;
  6084   001DEE  500E               	movf	average_RGBC@p^0,w,c
  6085   001DF0  6ED9               	movwf	fsr2l,c
  6086   001DF2  6ADA               	clrf	fsr2h,c
  6087   001DF4  0E04               	movlw	4
  6088   001DF6  26D9               	addwf	fsr2l,f,c
  6089   001DF8  C01A  FFDE         	movff	average_RGBC@temp_B,postinc2
  6090   001DFC  C01B  FFDD         	movff	average_RGBC@temp_B+1,postdec2
  6091   001E00                     
  6092                           ;color.c: 152:     p->C = (unsigned int)temp_C;
  6093   001E00  500E               	movf	average_RGBC@p^0,w,c
  6094   001E02  6ED9               	movwf	fsr2l,c
  6095   001E04  6ADA               	clrf	fsr2h,c
  6096   001E06  0E06               	movlw	6
  6097   001E08  26D9               	addwf	fsr2l,f,c
  6098   001E0A  C01E  FFDE         	movff	average_RGBC@temp_C,postinc2
  6099   001E0E  C01F  FFDD         	movff	average_RGBC@temp_C+1,postdec2
  6100   001E12  0012               	return		;funcret
  6101   001E14                     __end_of_average_RGBC:
  6102                           	callstack 0
  6103                           
  6104 ;; *************** function _getRGBCval *****************
  6105 ;; Defined at:
  6106 ;;		line 112 in file "color.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  6109 ;;		 -> main@RGBC_colour(8), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;Total ram usage:        1 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; Hardware stack levels required when called: 4
  6128 ;; This function calls:
  6129 ;;		_color_read_Blue
  6130 ;;		_color_read_Clear
  6131 ;;		_color_read_Green
  6132 ;;		_color_read_Red
  6133 ;; This function is called by:
  6134 ;;		_average_RGBC
  6135 ;;		_wait_for_wall
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text31
  6140   002ACE                     __ptext31:
  6141                           	callstack 0
  6142   002ACE                     _getRGBCval:
  6143                           	callstack 25
  6144   002ACE                     
  6145                           ;color.c: 112: void getRGBCval(struct RGBC_val *p);color.c: 113: {;color.c: 114:     p->
      +                          R = color_read_Red();
  6146   002ACE  EC92  F015         	call	_color_read_Red	;wreg free
  6147   002AD2  500C               	movf	getRGBCval@p^0,w,c
  6148   002AD4  6ED9               	movwf	fsr2l,c
  6149   002AD6  6ADA               	clrf	fsr2h,c
  6150   002AD8  C005  FFDE         	movff	?_color_read_Red,postinc2
  6151   002ADC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6152                           
  6153                           ;color.c: 115:     p->G = color_read_Green();
  6154   002AE0  ECBA  F015         	call	_color_read_Green	;wreg free
  6155   002AE4  500C               	movf	getRGBCval@p^0,w,c
  6156   002AE6  6ED9               	movwf	fsr2l,c
  6157   002AE8  6ADA               	clrf	fsr2h,c
  6158   002AEA  0E02               	movlw	2
  6159   002AEC  26D9               	addwf	fsr2l,f,c
  6160   002AEE  C005  FFDE         	movff	?_color_read_Green,postinc2
  6161   002AF2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6162                           
  6163                           ;color.c: 116:     p->B = color_read_Blue();
  6164   002AF6  EC0A  F016         	call	_color_read_Blue	;wreg free
  6165   002AFA  500C               	movf	getRGBCval@p^0,w,c
  6166   002AFC  6ED9               	movwf	fsr2l,c
  6167   002AFE  6ADA               	clrf	fsr2h,c
  6168   002B00  0E04               	movlw	4
  6169   002B02  26D9               	addwf	fsr2l,f,c
  6170   002B04  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6171   002B08  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6172                           
  6173                           ;color.c: 117:     p->C = color_read_Clear();
  6174   002B0C  ECE2  F015         	call	_color_read_Clear	;wreg free
  6175   002B10  500C               	movf	getRGBCval@p^0,w,c
  6176   002B12  6ED9               	movwf	fsr2l,c
  6177   002B14  6ADA               	clrf	fsr2h,c
  6178   002B16  0E06               	movlw	6
  6179   002B18  26D9               	addwf	fsr2l,f,c
  6180   002B1A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6181   002B1E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6182   002B22  0012               	return		;funcret
  6183   002B24                     __end_of_getRGBCval:
  6184                           	callstack 0
  6185                           
  6186 ;; *************** function _color_read_Red *****************
  6187 ;; Defined at:
  6188 ;;		line 40 in file "color.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  tmp             2    9[COMRAM] unsigned int 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  2    4[COMRAM] unsigned int 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;Total ram usage:        7 bytes
  6207 ;; Hardware stack levels used: 1
  6208 ;; Hardware stack levels required when called: 3
  6209 ;; This function calls:
  6210 ;;		_I2C_2_Master_Read
  6211 ;;		_I2C_2_Master_RepStart
  6212 ;;		_I2C_2_Master_Start
  6213 ;;		_I2C_2_Master_Stop
  6214 ;;		_I2C_2_Master_Write
  6215 ;; This function is called by:
  6216 ;;		_getRGBCval
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text32
  6221   002B24                     __ptext32:
  6222                           	callstack 0
  6223   002B24                     _color_read_Red:
  6224                           	callstack 25
  6225   002B24                     
  6226                           ;color.c: 42:  unsigned int tmp;;color.c: 43:  I2C_2_Master_Start();
  6227   002B24  EC72  F017         	call	_I2C_2_Master_Start	;wreg free
  6228                           
  6229                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x00);
  6230   002B28  0E52               	movlw	82
  6231   002B2A  EC5B  F017         	call	_I2C_2_Master_Write
  6232                           
  6233                           ;color.c: 45:  I2C_2_Master_Write(0xA0 | 0x16);
  6234   002B2E  0EB6               	movlw	182
  6235   002B30  EC5B  F017         	call	_I2C_2_Master_Write
  6236                           
  6237                           ;color.c: 46:  I2C_2_Master_RepStart();
  6238   002B34  EC77  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6239                           
  6240                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x01);
  6241   002B38  0E53               	movlw	83
  6242   002B3A  EC5B  F017         	call	_I2C_2_Master_Write
  6243                           
  6244                           ;color.c: 48:  tmp=I2C_2_Master_Read(1);
  6245   002B3E  0E01               	movlw	1
  6246   002B40  EC7E  F016         	call	_I2C_2_Master_Read
  6247   002B44  6E07               	movwf	??_color_read_Red^0,c
  6248   002B46  5007               	movf	??_color_read_Red^0,w,c
  6249   002B48  6E0A               	movwf	color_read_Red@tmp^0,c
  6250   002B4A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6251                           
  6252                           ;color.c: 49:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6253   002B4C  0E00               	movlw	0
  6254   002B4E  EC7E  F016         	call	_I2C_2_Master_Read
  6255   002B52  6E07               	movwf	??_color_read_Red^0,c
  6256   002B54  5007               	movf	??_color_read_Red^0,w,c
  6257   002B56  6E09               	movwf	(??_color_read_Red+2)^0,c
  6258   002B58  6A08               	clrf	(??_color_read_Red+1)^0,c
  6259   002B5A  500A               	movf	color_read_Red@tmp^0,w,c
  6260   002B5C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6261   002B5E  6E0A               	movwf	color_read_Red@tmp^0,c
  6262   002B60  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6263   002B62  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6264   002B64  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6265                           
  6266                           ;color.c: 50:  I2C_2_Master_Stop();
  6267   002B66  EC6D  F017         	call	_I2C_2_Master_Stop	;wreg free
  6268   002B6A                     
  6269                           ;color.c: 51:  return tmp;
  6270   002B6A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6271   002B6E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6272   002B72  0012               	return		;funcret
  6273   002B74                     __end_of_color_read_Red:
  6274                           	callstack 0
  6275                           
  6276 ;; *************** function _color_read_Green *****************
  6277 ;; Defined at:
  6278 ;;		line 58 in file "color.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  tmp             2    9[COMRAM] unsigned int 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2    4[COMRAM] unsigned int 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;Total ram usage:        7 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 3
  6299 ;; This function calls:
  6300 ;;		_I2C_2_Master_Read
  6301 ;;		_I2C_2_Master_RepStart
  6302 ;;		_I2C_2_Master_Start
  6303 ;;		_I2C_2_Master_Stop
  6304 ;;		_I2C_2_Master_Write
  6305 ;; This function is called by:
  6306 ;;		_getRGBCval
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text33
  6311   002B74                     __ptext33:
  6312                           	callstack 0
  6313   002B74                     _color_read_Green:
  6314                           	callstack 25
  6315   002B74                     
  6316                           ;color.c: 60:     unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  6317   002B74  EC72  F017         	call	_I2C_2_Master_Start	;wreg free
  6318                           
  6319                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  6320   002B78  0E52               	movlw	82
  6321   002B7A  EC5B  F017         	call	_I2C_2_Master_Write
  6322                           
  6323                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  6324   002B7E  0EB8               	movlw	184
  6325   002B80  EC5B  F017         	call	_I2C_2_Master_Write
  6326                           
  6327                           ;color.c: 64:  I2C_2_Master_RepStart();
  6328   002B84  EC77  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6329                           
  6330                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  6331   002B88  0E53               	movlw	83
  6332   002B8A  EC5B  F017         	call	_I2C_2_Master_Write
  6333                           
  6334                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  6335   002B8E  0E01               	movlw	1
  6336   002B90  EC7E  F016         	call	_I2C_2_Master_Read
  6337   002B94  6E07               	movwf	??_color_read_Green^0,c
  6338   002B96  5007               	movf	??_color_read_Green^0,w,c
  6339   002B98  6E0A               	movwf	color_read_Green@tmp^0,c
  6340   002B9A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6341                           
  6342                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6343   002B9C  0E00               	movlw	0
  6344   002B9E  EC7E  F016         	call	_I2C_2_Master_Read
  6345   002BA2  6E07               	movwf	??_color_read_Green^0,c
  6346   002BA4  5007               	movf	??_color_read_Green^0,w,c
  6347   002BA6  6E09               	movwf	(??_color_read_Green+2)^0,c
  6348   002BA8  6A08               	clrf	(??_color_read_Green+1)^0,c
  6349   002BAA  500A               	movf	color_read_Green@tmp^0,w,c
  6350   002BAC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6351   002BAE  6E0A               	movwf	color_read_Green@tmp^0,c
  6352   002BB0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6353   002BB2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6354   002BB4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6355                           
  6356                           ;color.c: 68:  I2C_2_Master_Stop();
  6357   002BB6  EC6D  F017         	call	_I2C_2_Master_Stop	;wreg free
  6358   002BBA                     
  6359                           ;color.c: 69:  return tmp;
  6360   002BBA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6361   002BBE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6362   002BC2  0012               	return		;funcret
  6363   002BC4                     __end_of_color_read_Green:
  6364                           	callstack 0
  6365                           
  6366 ;; *************** function _color_read_Clear *****************
  6367 ;; Defined at:
  6368 ;;		line 94 in file "color.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  tmp             2    9[COMRAM] unsigned int 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  2    4[COMRAM] unsigned int 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6384 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;Total ram usage:        7 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; Hardware stack levels required when called: 3
  6389 ;; This function calls:
  6390 ;;		_I2C_2_Master_Read
  6391 ;;		_I2C_2_Master_RepStart
  6392 ;;		_I2C_2_Master_Start
  6393 ;;		_I2C_2_Master_Stop
  6394 ;;		_I2C_2_Master_Write
  6395 ;; This function is called by:
  6396 ;;		_getRGBCval
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text34
  6401   002BC4                     __ptext34:
  6402                           	callstack 0
  6403   002BC4                     _color_read_Clear:
  6404                           	callstack 25
  6405   002BC4                     
  6406                           ;color.c: 96:     unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  6407   002BC4  EC72  F017         	call	_I2C_2_Master_Start	;wreg free
  6408                           
  6409                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  6410   002BC8  0E52               	movlw	82
  6411   002BCA  EC5B  F017         	call	_I2C_2_Master_Write
  6412                           
  6413                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x14);
  6414   002BCE  0EB4               	movlw	180
  6415   002BD0  EC5B  F017         	call	_I2C_2_Master_Write
  6416                           
  6417                           ;color.c: 100:  I2C_2_Master_RepStart();
  6418   002BD4  EC77  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6419                           
  6420                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  6421   002BD8  0E53               	movlw	83
  6422   002BDA  EC5B  F017         	call	_I2C_2_Master_Write
  6423                           
  6424                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  6425   002BDE  0E01               	movlw	1
  6426   002BE0  EC7E  F016         	call	_I2C_2_Master_Read
  6427   002BE4  6E07               	movwf	??_color_read_Clear^0,c
  6428   002BE6  5007               	movf	??_color_read_Clear^0,w,c
  6429   002BE8  6E0A               	movwf	color_read_Clear@tmp^0,c
  6430   002BEA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6431                           
  6432                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6433   002BEC  0E00               	movlw	0
  6434   002BEE  EC7E  F016         	call	_I2C_2_Master_Read
  6435   002BF2  6E07               	movwf	??_color_read_Clear^0,c
  6436   002BF4  5007               	movf	??_color_read_Clear^0,w,c
  6437   002BF6  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6438   002BF8  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6439   002BFA  500A               	movf	color_read_Clear@tmp^0,w,c
  6440   002BFC  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6441   002BFE  6E0A               	movwf	color_read_Clear@tmp^0,c
  6442   002C00  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6443   002C02  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6444   002C04  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6445                           
  6446                           ;color.c: 104:  I2C_2_Master_Stop();
  6447   002C06  EC6D  F017         	call	_I2C_2_Master_Stop	;wreg free
  6448   002C0A                     
  6449                           ;color.c: 105:  return tmp;
  6450   002C0A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6451   002C0E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6452   002C12  0012               	return		;funcret
  6453   002C14                     __end_of_color_read_Clear:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _color_read_Blue *****************
  6457 ;; Defined at:
  6458 ;;		line 76 in file "color.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  tmp             2    9[COMRAM] unsigned int 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2    4[COMRAM] unsigned int 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;Total ram usage:        7 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; Hardware stack levels required when called: 3
  6479 ;; This function calls:
  6480 ;;		_I2C_2_Master_Read
  6481 ;;		_I2C_2_Master_RepStart
  6482 ;;		_I2C_2_Master_Start
  6483 ;;		_I2C_2_Master_Stop
  6484 ;;		_I2C_2_Master_Write
  6485 ;; This function is called by:
  6486 ;;		_getRGBCval
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text35
  6491   002C14                     __ptext35:
  6492                           	callstack 0
  6493   002C14                     _color_read_Blue:
  6494                           	callstack 25
  6495   002C14                     
  6496                           ;color.c: 78:     unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6497   002C14  EC72  F017         	call	_I2C_2_Master_Start	;wreg free
  6498                           
  6499                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6500   002C18  0E52               	movlw	82
  6501   002C1A  EC5B  F017         	call	_I2C_2_Master_Write
  6502                           
  6503                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x1A);
  6504   002C1E  0EBA               	movlw	186
  6505   002C20  EC5B  F017         	call	_I2C_2_Master_Write
  6506                           
  6507                           ;color.c: 82:  I2C_2_Master_RepStart();
  6508   002C24  EC77  F017         	call	_I2C_2_Master_RepStart	;wreg free
  6509                           
  6510                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6511   002C28  0E53               	movlw	83
  6512   002C2A  EC5B  F017         	call	_I2C_2_Master_Write
  6513                           
  6514                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6515   002C2E  0E01               	movlw	1
  6516   002C30  EC7E  F016         	call	_I2C_2_Master_Read
  6517   002C34  6E07               	movwf	??_color_read_Blue^0,c
  6518   002C36  5007               	movf	??_color_read_Blue^0,w,c
  6519   002C38  6E0A               	movwf	color_read_Blue@tmp^0,c
  6520   002C3A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6521                           
  6522                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6523   002C3C  0E00               	movlw	0
  6524   002C3E  EC7E  F016         	call	_I2C_2_Master_Read
  6525   002C42  6E07               	movwf	??_color_read_Blue^0,c
  6526   002C44  5007               	movf	??_color_read_Blue^0,w,c
  6527   002C46  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6528   002C48  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6529   002C4A  500A               	movf	color_read_Blue@tmp^0,w,c
  6530   002C4C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6531   002C4E  6E0A               	movwf	color_read_Blue@tmp^0,c
  6532   002C50  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6533   002C52  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6534   002C54  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6535                           
  6536                           ;color.c: 86:  I2C_2_Master_Stop();
  6537   002C56  EC6D  F017         	call	_I2C_2_Master_Stop	;wreg free
  6538   002C5A                     
  6539                           ;color.c: 87:  return tmp;
  6540   002C5A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6541   002C5E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6542   002C62  0012               	return		;funcret
  6543   002C64                     __end_of_color_read_Blue:
  6544                           	callstack 0
  6545                           
  6546 ;; *************** function _I2C_2_Master_Write *****************
  6547 ;; Defined at:
  6548 ;;		line 45 in file "i2c.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  data_byte       1    wreg     unsigned char 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  data_byte       1    1[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, status,2, status,0, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;Total ram usage:        1 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; Hardware stack levels required when called: 2
  6569 ;; This function calls:
  6570 ;;		_I2C_2_Master_Idle
  6571 ;; This function is called by:
  6572 ;;		_color_writetoaddr
  6573 ;;		_color_read_Red
  6574 ;;		_color_read_Green
  6575 ;;		_color_read_Blue
  6576 ;;		_color_read_Clear
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text36
  6581   002EB6                     __ptext36:
  6582                           	callstack 0
  6583   002EB6                     _I2C_2_Master_Write:
  6584                           	callstack 26
  6585                           
  6586                           ;incstack = 0
  6587                           ;I2C_2_Master_Write@data_byte stored from wreg
  6588   002EB6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6589   002EB8                     
  6590                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6591   002EB8  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6592   002EBC                     
  6593                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6594   002EBC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6595   002EC0  0012               	return		;funcret
  6596   002EC2                     __end_of_I2C_2_Master_Write:
  6597                           	callstack 0
  6598                           
  6599 ;; *************** function _I2C_2_Master_Stop *****************
  6600 ;; Defined at:
  6601 ;;		line 39 in file "i2c.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6619 ;;Total ram usage:        0 bytes
  6620 ;; Hardware stack levels used: 1
  6621 ;; Hardware stack levels required when called: 2
  6622 ;; This function calls:
  6623 ;;		_I2C_2_Master_Idle
  6624 ;; This function is called by:
  6625 ;;		_color_writetoaddr
  6626 ;;		_color_read_Red
  6627 ;;		_color_read_Green
  6628 ;;		_color_read_Blue
  6629 ;;		_color_read_Clear
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text37
  6634   002EDA                     __ptext37:
  6635                           	callstack 0
  6636   002EDA                     _I2C_2_Master_Stop:
  6637                           	callstack 26
  6638   002EDA                     
  6639                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6640   002EDA  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6641   002EDE                     
  6642                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6643   002EDE  010E               	movlb	14	; () banked
  6644   002EE0  85DA               	bsf	218,2,b	;volatile
  6645   002EE2                     
  6646                           ; BSR set to: 14
  6647   002EE2  0012               	return		;funcret
  6648   002EE4                     __end_of_I2C_2_Master_Stop:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function _I2C_2_Master_Start *****************
  6652 ;; Defined at:
  6653 ;;		line 27 in file "i2c.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6671 ;;Total ram usage:        0 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 2
  6674 ;; This function calls:
  6675 ;;		_I2C_2_Master_Idle
  6676 ;; This function is called by:
  6677 ;;		_color_writetoaddr
  6678 ;;		_color_read_Red
  6679 ;;		_color_read_Green
  6680 ;;		_color_read_Blue
  6681 ;;		_color_read_Clear
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text38
  6686   002EE4                     __ptext38:
  6687                           	callstack 0
  6688   002EE4                     _I2C_2_Master_Start:
  6689                           	callstack 26
  6690   002EE4                     
  6691                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6692   002EE4  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6693   002EE8                     
  6694                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6695   002EE8  010E               	movlb	14	; () banked
  6696   002EEA  81DA               	bsf	218,0,b	;volatile
  6697   002EEC                     
  6698                           ; BSR set to: 14
  6699   002EEC  0012               	return		;funcret
  6700   002EEE                     __end_of_I2C_2_Master_Start:
  6701                           	callstack 0
  6702                           
  6703 ;; *************** function _I2C_2_Master_RepStart *****************
  6704 ;; Defined at:
  6705 ;;		line 33 in file "i2c.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 2
  6726 ;; This function calls:
  6727 ;;		_I2C_2_Master_Idle
  6728 ;; This function is called by:
  6729 ;;		_color_read_Red
  6730 ;;		_color_read_Green
  6731 ;;		_color_read_Blue
  6732 ;;		_color_read_Clear
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text39
  6737   002EEE                     __ptext39:
  6738                           	callstack 0
  6739   002EEE                     _I2C_2_Master_RepStart:
  6740                           	callstack 25
  6741   002EEE                     
  6742                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6743   002EEE  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6744   002EF2                     
  6745                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6746   002EF2  010E               	movlb	14	; () banked
  6747   002EF4  83DA               	bsf	218,1,b	;volatile
  6748   002EF6                     
  6749                           ; BSR set to: 14
  6750   002EF6  0012               	return		;funcret
  6751   002EF8                     __end_of_I2C_2_Master_RepStart:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function _I2C_2_Master_Read *****************
  6755 ;; Defined at:
  6756 ;;		line 51 in file "i2c.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  ack             1    wreg     unsigned char 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  ack             1    2[COMRAM] unsigned char 
  6761 ;;  tmp             1    3[COMRAM] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      unsigned char 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;Total ram usage:        3 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; Hardware stack levels required when called: 2
  6778 ;; This function calls:
  6779 ;;		_I2C_2_Master_Idle
  6780 ;; This function is called by:
  6781 ;;		_color_read_Red
  6782 ;;		_color_read_Green
  6783 ;;		_color_read_Blue
  6784 ;;		_color_read_Clear
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text40
  6789   002CFC                     __ptext40:
  6790                           	callstack 0
  6791   002CFC                     _I2C_2_Master_Read:
  6792                           	callstack 25
  6793                           
  6794                           ; BSR set to: 14
  6795                           ;incstack = 0
  6796                           ;I2C_2_Master_Read@ack stored from wreg
  6797   002CFC  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6798   002CFE                     
  6799                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6800   002CFE  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6801   002D02                     
  6802                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6803   002D02  010E               	movlb	14	; () banked
  6804   002D04  87DA               	bsf	218,3,b	;volatile
  6805                           
  6806                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6807   002D06  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6808   002D0A                     
  6809                           ;i2c.c: 57:   tmp = SSP2BUF;
  6810   002D0A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6811                           
  6812                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6813   002D0E  ECFF  F016         	call	_I2C_2_Master_Idle	;wreg free
  6814   002D12                     
  6815                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6816   002D12  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6817   002D14  B4D8               	btfsc	status,2,c
  6818   002D16  EF8F  F016         	goto	u2231
  6819   002D1A  EF93  F016         	goto	u2230
  6820   002D1E                     u2231:
  6821   002D1E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6822   002D20  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6823   002D22  EF94  F016         	goto	u2248
  6824   002D26                     u2230:
  6825   002D26  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6826   002D28                     u2248:
  6827   002D28  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6828   002D2A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6829   002D2C  010E               	movlb	14	; () banked
  6830   002D2E  51DA               	movf	218,w,b	;volatile
  6831   002D30  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6832   002D32  0BDF               	andlw	-33
  6833   002D34  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6834   002D36  6FDA               	movwf	218,b	;volatile
  6835   002D38                     
  6836                           ; BSR set to: 14
  6837                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6838   002D38  89DA               	bsf	218,4,b	;volatile
  6839   002D3A                     
  6840                           ; BSR set to: 14
  6841                           ;i2c.c: 61:   return tmp;
  6842   002D3A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6843   002D3C                     
  6844                           ; BSR set to: 14
  6845   002D3C  0012               	return		;funcret
  6846   002D3E                     __end_of_I2C_2_Master_Read:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function _I2C_2_Master_Idle *****************
  6850 ;; Defined at:
  6851 ;;		line 22 in file "i2c.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;Total ram usage:        1 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 1
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_I2C_2_Master_Start
  6876 ;;		_I2C_2_Master_RepStart
  6877 ;;		_I2C_2_Master_Stop
  6878 ;;		_I2C_2_Master_Write
  6879 ;;		_I2C_2_Master_Read
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text41
  6884   002DFE                     __ptext41:
  6885                           	callstack 0
  6886   002DFE                     _I2C_2_Master_Idle:
  6887                           	callstack 26
  6888   002DFE                     l308:
  6889   002DFE  010E               	movlb	14	; () banked
  6890   002E00  B5D8               	btfsc	216,2,b	;volatile
  6891   002E02  EF05  F017         	goto	u1981
  6892   002E06  EF07  F017         	goto	u1980
  6893   002E0A                     u1981:
  6894   002E0A  EFFF  F016         	goto	l308
  6895   002E0E                     u1980:
  6896   002E0E                     
  6897                           ; BSR set to: 14
  6898   002E0E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6899   002E12  0E1F               	movlw	31
  6900   002E14  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6901   002E16  A4D8               	btfss	status,2,c
  6902   002E18  EF10  F017         	goto	u1991
  6903   002E1C  EF12  F017         	goto	u1990
  6904   002E20                     u1991:
  6905   002E20  EFFF  F016         	goto	l308
  6906   002E24                     u1990:
  6907   002E24                     
  6908                           ; BSR set to: 14
  6909   002E24  0012               	return		;funcret
  6910   002E26                     __end_of_I2C_2_Master_Idle:
  6911                           	callstack 0
  6912                           
  6913 ;; *************** function ___lldiv *****************
  6914 ;; Defined at:
  6915 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  dividend        4    0[COMRAM] unsigned long 
  6918 ;;  divisor         4    4[COMRAM] unsigned long 
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  quotient        4    8[COMRAM] unsigned long 
  6921 ;;  counter         1   12[COMRAM] unsigned char 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  4    0[COMRAM] unsigned long 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6931 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;Total ram usage:       13 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 1
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_average_RGBC
  6942 ;;		_convert_HSV
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text42
  6947   0025E0                     __ptext42:
  6948                           	callstack 0
  6949   0025E0                     ___lldiv:
  6950                           	callstack 28
  6951   0025E0  0E00               	movlw	0
  6952   0025E2  6E09               	movwf	___lldiv@quotient^0,c
  6953   0025E4  0E00               	movlw	0
  6954   0025E6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6955   0025E8  0E00               	movlw	0
  6956   0025EA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6957   0025EC  0E00               	movlw	0
  6958   0025EE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6959   0025F0  5005               	movf	___lldiv@divisor^0,w,c
  6960   0025F2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6961   0025F4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6962   0025F6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6963   0025F8  B4D8               	btfsc	status,2,c
  6964   0025FA  EF01  F013         	goto	u2661
  6965   0025FE  EF03  F013         	goto	u2660
  6966   002602                     u2661:
  6967   002602  EF39  F013         	goto	l776
  6968   002606                     u2660:
  6969   002606  0E01               	movlw	1
  6970   002608  6E0D               	movwf	___lldiv@counter^0,c
  6971   00260A  EF0D  F013         	goto	l3598
  6972   00260E                     l3596:
  6973   00260E  90D8               	bcf	status,0,c
  6974   002610  3605               	rlcf	___lldiv@divisor^0,f,c
  6975   002612  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6976   002614  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6977   002616  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6978   002618  2A0D               	incf	___lldiv@counter^0,f,c
  6979   00261A                     l3598:
  6980   00261A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6981   00261C  EF12  F013         	goto	u2671
  6982   002620  EF14  F013         	goto	u2670
  6983   002624                     u2671:
  6984   002624  EF07  F013         	goto	l3596
  6985   002628                     u2670:
  6986   002628                     l3600:
  6987   002628  90D8               	bcf	status,0,c
  6988   00262A  3609               	rlcf	___lldiv@quotient^0,f,c
  6989   00262C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6990   00262E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6991   002630  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6992   002632  5005               	movf	___lldiv@divisor^0,w,c
  6993   002634  5C01               	subwf	___lldiv@dividend^0,w,c
  6994   002636  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6995   002638  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6996   00263A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6997   00263C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6998   00263E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6999   002640  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7000   002642  A0D8               	btfss	status,0,c
  7001   002644  EF26  F013         	goto	u2681
  7002   002648  EF28  F013         	goto	u2680
  7003   00264C                     u2681:
  7004   00264C  EF31  F013         	goto	l3608
  7005   002650                     u2680:
  7006   002650  5005               	movf	___lldiv@divisor^0,w,c
  7007   002652  5E01               	subwf	___lldiv@dividend^0,f,c
  7008   002654  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7009   002656  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7010   002658  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7011   00265A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7012   00265C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7013   00265E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7014   002660  8009               	bsf	___lldiv@quotient^0,0,c
  7015   002662                     l3608:
  7016   002662  90D8               	bcf	status,0,c
  7017   002664  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7018   002666  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7019   002668  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7020   00266A  3205               	rrcf	___lldiv@divisor^0,f,c
  7021   00266C  2E0D               	decfsz	___lldiv@counter^0,f,c
  7022   00266E  EF14  F013         	goto	l3600
  7023   002672                     l776:
  7024   002672  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7025   002676  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7026   00267A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7027   00267E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7028   002682  0012               	return		;funcret
  7029   002684                     __end_of___lldiv:
  7030                           	callstack 0
  7031                           
  7032 ;; *************** function _Timer0_init *****************
  7033 ;; Defined at:
  7034 ;;		line 7 in file "timers.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;Total ram usage:        0 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 3
  7055 ;; This function calls:
  7056 ;;		_reset_timer
  7057 ;; This function is called by:
  7058 ;;		_main
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text43
  7063   002E26                     __ptext43:
  7064                           	callstack 0
  7065   002E26                     _Timer0_init:
  7066                           	callstack 27
  7067   002E26                     
  7068                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  7069   002E26  50D6               	movf	214,w,c	;volatile
  7070   002E28  0B1F               	andlw	-225
  7071   002E2A  0940               	iorlw	64
  7072   002E2C  6ED6               	movwf	214,c	;volatile
  7073   002E2E                     
  7074                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  7075   002E2E  88D6               	bsf	214,4,c	;volatile
  7076   002E30                     
  7077                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  7078   002E30  88D5               	bsf	213,4,c	;volatile
  7079                           
  7080                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  7081   002E32  50D6               	movf	214,w,c	;volatile
  7082   002E34  0BF0               	andlw	-16
  7083   002E36  090E               	iorlw	14
  7084   002E38  6ED6               	movwf	214,c	;volatile
  7085   002E3A                     
  7086                           ;timers.c: 18:     reset_timer();
  7087   002E3A  EC61  F017         	call	_reset_timer	;wreg free
  7088   002E3E                     
  7089                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  7090   002E3E  8ED5               	bsf	213,7,c	;volatile
  7091   002E40                     
  7092                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  7093   002E40  010E               	movlb	14	; () banked
  7094   002E42  8B29               	bsf	41,5,b	;volatile
  7095   002E44                     
  7096                           ; BSR set to: 14
  7097                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  7098   002E44  8CF2               	bsf	242,6,c	;volatile
  7099   002E46                     
  7100                           ; BSR set to: 14
  7101                           ;timers.c: 23:     INTCONbits.GIE = 1;
  7102   002E46  8EF2               	bsf	242,7,c	;volatile
  7103   002E48                     
  7104                           ; BSR set to: 14
  7105   002E48  0012               	return		;funcret
  7106   002E4A                     __end_of_Timer0_init:
  7107                           	callstack 0
  7108                           
  7109 ;; *************** function _reset_timer *****************
  7110 ;; Defined at:
  7111 ;;		line 53 in file "timers.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;Total ram usage:        0 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; Hardware stack levels required when called: 2
  7132 ;; This function calls:
  7133 ;;		_write_timer
  7134 ;; This function is called by:
  7135 ;;		_Timer0_init
  7136 ;;		_forward_navigation
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text44
  7141   002EC2                     __ptext44:
  7142                           	callstack 0
  7143   002EC2                     _reset_timer:
  7144                           	callstack 27
  7145   002EC2                     
  7146                           ;timers.c: 55:     write_timer(0, 0);
  7147   002EC2  0E00               	movlw	0
  7148   002EC4  6E01               	movwf	write_timer@tL^0,c
  7149   002EC6  0E00               	movlw	0
  7150   002EC8  EC67  F017         	call	_write_timer
  7151   002ECC  0012               	return		;funcret
  7152   002ECE                     __end_of_reset_timer:
  7153                           	callstack 0
  7154                           
  7155 ;; *************** function _write_timer *****************
  7156 ;; Defined at:
  7157 ;;		line 41 in file "timers.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  tH              1    wreg     unsigned char 
  7160 ;;  tL              1    0[COMRAM] unsigned char 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  tH              1    1[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      void 
  7165 ;; Registers used:
  7166 ;;		wreg
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7172 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;Total ram usage:        2 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_reset_timer
  7183 ;;		_return_to_sender
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           	psect	text45
  7188   002ECE                     __ptext45:
  7189                           	callstack 0
  7190   002ECE                     _write_timer:
  7191                           	callstack 27
  7192                           
  7193                           ;incstack = 0
  7194                           ;write_timer@tH stored from wreg
  7195   002ECE  6E02               	movwf	write_timer@tH^0,c
  7196   002ED0                     
  7197                           ;timers.c: 41: void write_timer(unsigned char tH, unsigned char tL);timers.c: 42: {;time
      +                          rs.c: 46:     TMR0H = tH;
  7198   002ED0  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  7199   002ED4                     
  7200                           ;timers.c: 47:     TMR0L = tL;
  7201   002ED4  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  7202   002ED8  0012               	return		;funcret
  7203   002EDA                     __end_of_write_timer:
  7204                           	callstack 0
  7205                           
  7206 ;; *************** function _ISR *****************
  7207 ;; Defined at:
  7208 ;;		line 181 in file "timers.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7226 ;;Total ram usage:        0 bytes
  7227 ;; Hardware stack levels used: 1
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		Interrupt level 2
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	intcode
  7236   000008                     __pintcode:
  7237                           	callstack 0
  7238   000008                     _ISR:
  7239                           	callstack 24
  7240                           
  7241                           ;incstack = 0
  7242   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7243   00000A                     
  7244                           ;timers.c: 183:     if (PIR0bits.TMR0IF) {
  7245   00000A  010E               	movlb	14	; () banked
  7246   00000C  AB33               	btfss	51,5,b	;volatile
  7247   00000E  EF0B  F000         	goto	i2u194_41
  7248   000012  EF0D  F000         	goto	i2u194_40
  7249   000016                     i2u194_41:
  7250   000016  EF1C  F000         	goto	i2l719
  7251   00001A                     i2u194_40:
  7252   00001A                     
  7253                           ; BSR set to: 14
  7254                           ;timers.c: 184:         if (returning) {
  7255   00001A  505D               	movf	_returning^0,w,c
  7256   00001C  B4D8               	btfsc	status,2,c
  7257   00001E  EF13  F000         	goto	i2u195_41
  7258   000022  EF15  F000         	goto	i2u195_40
  7259   000026                     i2u195_41:
  7260   000026  EF19  F000         	goto	i2l2942
  7261   00002A                     i2u195_40:
  7262   00002A                     
  7263                           ; BSR set to: 14
  7264                           ;timers.c: 185:             return_flag = 1;
  7265   00002A  0E01               	movlw	1
  7266   00002C  6E5C               	movwf	_return_flag^0,c
  7267                           
  7268                           ;timers.c: 186:         } else {
  7269   00002E  EF1B  F000         	goto	i2l2944
  7270   000032                     i2l2942:
  7271                           
  7272                           ; BSR set to: 14
  7273                           ;timers.c: 187:             lost_flag = 1;
  7274   000032  0E01               	movlw	1
  7275   000034  6E5B               	movwf	_lost_flag^0,c
  7276   000036                     i2l2944:
  7277                           
  7278                           ; BSR set to: 14
  7279                           ;timers.c: 189:         PIR0bits.TMR0IF = 0;
  7280   000036  9B33               	bcf	51,5,b	;volatile
  7281   000038                     i2l719:
  7282                           
  7283                           ; BSR set to: 14
  7284   000038  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7285   00003A  0011               	retfie		f
  7286   00003C                     __end_of_ISR:
  7287                           	callstack 0
  7288                           
  7289                           	psect	rparam
  7290   000000                     
  7291                           	psect	temp
  7292   00005E                     btemp:
  7293                           	callstack 0
  7294   00005E                     	ds	1
  7295   000000                     int$flags	set	btemp
  7296   000000                     wtemp8	set	btemp+1
  7297   000000                     ttemp5	set	btemp+1
  7298   000000                     ttemp6	set	btemp+4
  7299   000000                     ttemp7	set	btemp+8
  7300                           
  7301                           	psect	idloc
  7302                           
  7303                           ;Config register IDLOC0 @ 0x200000
  7304                           ;	unspecified, using default values
  7305   200000                     	org	2097152
  7306   200000  FFFF               	dw	65535
  7307                           
  7308                           ;Config register IDLOC1 @ 0x200002
  7309                           ;	unspecified, using default values
  7310   200002                     	org	2097154
  7311   200002  FFFF               	dw	65535
  7312                           
  7313                           ;Config register IDLOC2 @ 0x200004
  7314                           ;	unspecified, using default values
  7315   200004                     	org	2097156
  7316   200004  FFFF               	dw	65535
  7317                           
  7318                           ;Config register IDLOC3 @ 0x200006
  7319                           ;	unspecified, using default values
  7320   200006                     	org	2097158
  7321   200006  FFFF               	dw	65535
  7322                           
  7323                           ;Config register IDLOC4 @ 0x200008
  7324                           ;	unspecified, using default values
  7325   200008                     	org	2097160
  7326   200008  FFFF               	dw	65535
  7327                           
  7328                           ;Config register IDLOC5 @ 0x20000A
  7329                           ;	unspecified, using default values
  7330   20000A                     	org	2097162
  7331   20000A  FFFF               	dw	65535
  7332                           
  7333                           ;Config register IDLOC6 @ 0x20000C
  7334                           ;	unspecified, using default values
  7335   20000C                     	org	2097164
  7336   20000C  FFFF               	dw	65535
  7337                           
  7338                           ;Config register IDLOC7 @ 0x20000E
  7339                           ;	unspecified, using default values
  7340   20000E                     	org	2097166
  7341   20000E  FFFF               	dw	65535
  7342                           
  7343                           	psect	config
  7344                           
  7345                           ;Config register CONFIG1L @ 0x300000
  7346                           ;	External Oscillator mode Selection bits
  7347                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7348                           ;	Power-up default value for COSC bits
  7349                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7350   300000                     	org	3145728
  7351   300000  AA                 	db	170
  7352                           
  7353                           ;Config register CONFIG1H @ 0x300001
  7354                           ;	unspecified, using default values
  7355                           ;	Clock Out Enable bit
  7356                           ;	CLKOUTEN = 0x1, unprogrammed default
  7357                           ;	Clock Switch Enable bit
  7358                           ;	CSWEN = 0x1, unprogrammed default
  7359                           ;	Fail-Safe Clock Monitor Enable bit
  7360                           ;	FCMEN = 0x1, unprogrammed default
  7361   300001                     	org	3145729
  7362   300001  FF                 	db	255
  7363                           
  7364                           ;Config register CONFIG2L @ 0x300002
  7365                           ;	unspecified, using default values
  7366                           ;	Master Clear Enable bit
  7367                           ;	MCLRE = 0x1, unprogrammed default
  7368                           ;	Power-up Timer Enable bit
  7369                           ;	PWRTE = 0x1, unprogrammed default
  7370                           ;	Low-power BOR enable bit
  7371                           ;	LPBOREN = 0x1, unprogrammed default
  7372                           ;	Brown-out Reset Enable bits
  7373                           ;	BOREN = 0x3, unprogrammed default
  7374   300002                     	org	3145730
  7375   300002  FF                 	db	255
  7376                           
  7377                           ;Config register CONFIG2H @ 0x300003
  7378                           ;	unspecified, using default values
  7379                           ;	Brown Out Reset Voltage selection bits
  7380                           ;	BORV = 0x3, unprogrammed default
  7381                           ;	ZCD Disable bit
  7382                           ;	ZCD = 0x1, unprogrammed default
  7383                           ;	PPSLOCK bit One-Way Set Enable bit
  7384                           ;	PPS1WAY = 0x1, unprogrammed default
  7385                           ;	Stack Full/Underflow Reset Enable bit
  7386                           ;	STVREN = 0x1, unprogrammed default
  7387                           ;	Debugger Enable bit
  7388                           ;	DEBUG = 0x1, unprogrammed default
  7389                           ;	Extended Instruction Set Enable bit
  7390                           ;	XINST = 0x1, unprogrammed default
  7391   300003                     	org	3145731
  7392   300003  FF                 	db	255
  7393                           
  7394                           ;Config register CONFIG3L @ 0x300004
  7395                           ;	WDT Period Select bits
  7396                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7397                           ;	WDT operating mode
  7398                           ;	WDTE = OFF, WDT Disabled
  7399   300004                     	org	3145732
  7400   300004  9F                 	db	159
  7401                           
  7402                           ;Config register CONFIG3H @ 0x300005
  7403                           ;	unspecified, using default values
  7404                           ;	WDT Window Select bits
  7405                           ;	WDTCWS = 0x7, unprogrammed default
  7406                           ;	WDT input clock selector
  7407                           ;	WDTCCS = 0x7, unprogrammed default
  7408   300005                     	org	3145733
  7409   300005  FF                 	db	255
  7410                           
  7411                           ;Config register CONFIG4L @ 0x300006
  7412                           ;	unspecified, using default values
  7413                           ;	Write Protection Block 0
  7414                           ;	WRT0 = 0x1, unprogrammed default
  7415                           ;	Write Protection Block 1
  7416                           ;	WRT1 = 0x1, unprogrammed default
  7417                           ;	Write Protection Block 2
  7418                           ;	WRT2 = 0x1, unprogrammed default
  7419                           ;	Write Protection Block 3
  7420                           ;	WRT3 = 0x1, unprogrammed default
  7421                           ;	Write Protection Block 3
  7422                           ;	WRT4 = 0x1, unprogrammed default
  7423                           ;	Write Protection Block 3
  7424                           ;	WRT5 = 0x1, unprogrammed default
  7425                           ;	Write Protection Block 3
  7426                           ;	WRT6 = 0x1, unprogrammed default
  7427                           ;	Write Protection Block 3
  7428                           ;	WRT7 = 0x1, unprogrammed default
  7429   300006                     	org	3145734
  7430   300006  FF                 	db	255
  7431                           
  7432                           ;Config register CONFIG4H @ 0x300007
  7433                           ;	unspecified, using default values
  7434                           ;	Configuration Register Write Protection bit
  7435                           ;	WRTC = 0x1, unprogrammed default
  7436                           ;	Boot Block Write Protection bit
  7437                           ;	WRTB = 0x1, unprogrammed default
  7438                           ;	Data EEPROM Write Protection bit
  7439                           ;	WRTD = 0x1, unprogrammed default
  7440                           ;	Scanner Enable bit
  7441                           ;	SCANE = 0x1, unprogrammed default
  7442                           ;	Low Voltage Programming Enable bit
  7443                           ;	LVP = 0x1, unprogrammed default
  7444   300007                     	org	3145735
  7445   300007  FF                 	db	255
  7446                           
  7447                           ;Config register CONFIG5L @ 0x300008
  7448                           ;	unspecified, using default values
  7449                           ;	UserNVM Program Memory Code Protection bit
  7450                           ;	CP = 0x1, unprogrammed default
  7451                           ;	DataNVM Memory Code Protection bit
  7452                           ;	CPD = 0x1, unprogrammed default
  7453   300008                     	org	3145736
  7454   300008  FF                 	db	255
  7455                           
  7456                           ;Config register CONFIG5H @ 0x300009
  7457                           ;	unspecified, using default values
  7458   300009                     	org	3145737
  7459   300009  FF                 	db	255
  7460                           
  7461                           ;Config register CONFIG6L @ 0x30000A
  7462                           ;	unspecified, using default values
  7463                           ;	Table Read Protection Block 0
  7464                           ;	EBTR0 = 0x1, unprogrammed default
  7465                           ;	Table Read Protection Block 1
  7466                           ;	EBTR1 = 0x1, unprogrammed default
  7467                           ;	Table Read Protection Block 2
  7468                           ;	EBTR2 = 0x1, unprogrammed default
  7469                           ;	Table Read Protection Block 3
  7470                           ;	EBTR3 = 0x1, unprogrammed default
  7471                           ;	Table Read Protection Block 4
  7472                           ;	EBTR4 = 0x1, unprogrammed default
  7473                           ;	Table Read Protection Block 5
  7474                           ;	EBTR5 = 0x1, unprogrammed default
  7475                           ;	Table Read Protection Block 6
  7476                           ;	EBTR6 = 0x1, unprogrammed default
  7477                           ;	Table Read Protection Block 7
  7478                           ;	EBTR7 = 0x1, unprogrammed default
  7479   30000A                     	org	3145738
  7480   30000A  FF                 	db	255
  7481                           
  7482                           ;Config register CONFIG6H @ 0x30000B
  7483                           ;	unspecified, using default values
  7484                           ;	Boot Block Table Read Protection bit
  7485                           ;	EBTRB = 0x1, unprogrammed default
  7486   30000B                     	org	3145739
  7487   30000B  FF                 	db	255
  7488                           tosu	equ	0xFFF
  7489                           tosh	equ	0xFFE
  7490                           tosl	equ	0xFFD
  7491                           stkptr	equ	0xFFC
  7492                           pclatu	equ	0xFFB
  7493                           pclath	equ	0xFFA
  7494                           pcl	equ	0xFF9
  7495                           tblptru	equ	0xFF8
  7496                           tblptrh	equ	0xFF7
  7497                           tblptrl	equ	0xFF6
  7498                           tablat	equ	0xFF5
  7499                           prodh	equ	0xFF4
  7500                           prodl	equ	0xFF3
  7501                           indf0	equ	0xFEF
  7502                           postinc0	equ	0xFEE
  7503                           postdec0	equ	0xFED
  7504                           preinc0	equ	0xFEC
  7505                           plusw0	equ	0xFEB
  7506                           fsr0h	equ	0xFEA
  7507                           fsr0l	equ	0xFE9
  7508                           wreg	equ	0xFE8
  7509                           indf1	equ	0xFE7
  7510                           postinc1	equ	0xFE6
  7511                           postdec1	equ	0xFE5
  7512                           preinc1	equ	0xFE4
  7513                           plusw1	equ	0xFE3
  7514                           fsr1h	equ	0xFE2
  7515                           fsr1l	equ	0xFE1
  7516                           bsr	equ	0xFE0
  7517                           indf2	equ	0xFDF
  7518                           postinc2	equ	0xFDE
  7519                           postdec2	equ	0xFDD
  7520                           preinc2	equ	0xFDC
  7521                           plusw2	equ	0xFDB
  7522                           fsr2h	equ	0xFDA
  7523                           fsr2l	equ	0xFD9
  7524                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      93
    BANK0           160     32      92
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    average_RGBC@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    convert_HSV@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    convert_HSV@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    max_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    min_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2740$buffer	PTR unsigned char  size(2) Largest target is 0

    S2740$source	PTR const unsigned char  size(2) Largest target is 0

    scale_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _scale_RGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _convert_HSV->___lldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _average_RGBC->___lldiv
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   28032
                                             81 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                       _average_RGBC
                  _buggy_lights_init
                   _color_click_init
                        _convert_HSV
                    _initDCmotorsPWM
                         _initUSART4
                          _scale_RGB
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5919
                                             54 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5897
                                             54 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5182
                                             28 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4357
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    4005
                                             10 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scale_RGB                                            3     2      1    6039
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convert_HSV                                         52    50      2    5869
                                             13 COMRAM    52    50      2
                            ___lldiv
                             ___lmul
                            _max_RGB
                            _min_RGB
 ---------------------------------------------------------------------------------
 (2) _min_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _max_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _average_RGBC                                        20    19      1    3087
                                             13 COMRAM    20    19      1
                            ___lldiv
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (2) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1834
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _average_RGBC
     ___lldiv
     _getRGBCval
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _convert_HSV
     ___lldiv
     ___lmul
     _max_RGB
     _min_RGB
   _initDCmotorsPWM
   _initUSART4
   _scale_RGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sendHSVvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F5      60        0.0%
DATA                 0      0      F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 18:14:51 2024

                 _turn180Delay 00AF                 _color_read_Red 2B24                _color_read_Blue 2C14  
              _trail_timer_low 0114                             l42 23B0                             l27 2DD2  
                           l71 2B72                             l80 2C12                             l65 2DA4  
                           l74 2BC2                             l83 2B22                             l68 2E68  
                           l77 2C62                             l89 1E12                             l99 27D0  
                 ___awdiv@sign 0006               _trail_timer_high 0128               _color_read_Clear 2BC4  
             _color_read_Green 2B74                            l101 280A                            l104 2754  
                          l106 278E                            l210 2712                            l125 14E4  
                          l109 22E8                            l311 2E24                            l320 2EE2  
                          l305 2DFC                            l314 2EEC                            l323 2EC0  
                          l308 2DFE                            l317 2EF6                            l326 2D3C  
                          l453 2E86                            l462 2E8A                            l471 2A18  
                          l465 2E9E                            l482 2A76                            l485 2CAE  
                          l760 2942                            l681 2ED8                            l761 2952  
                          l675 2E48                            l684 2ECC                            l783 2682  
                          l776 2672                            l980 2474                            l993 25DE  
                          _ISR 0008         ??_toggle_tricolour_LED 0001                            _abs 2D3E  
                 ___awmod@sign 0006                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ?_convert_HSV 000E                   ___flmul@sign 001B  
                 ___flmul@temp 0026                   ___flmul@prod 0022                 min_RGB@min_val 0005  
                  _squareDelay 00AB                           ?_ISR 0001                   ___fltol@exp1 0031  
                         ?_abs 0007                           l1046 2212                           l3000 23E6  
                         l1240 2876                           l3010 2414                           l3002 23EA  
                         l1250 29AE                           l1411 1F02                           l1404 1E6A  
                         l3020 2448                           l3012 2422                           l3004 23F2  
                         l3100 299A                           l3022 244E                           l3014 2428  
                         l3006 2404                           l3102 29A2                           l3110 2496  
                         l1407 1FC6                           l1247 287E                           l3016 243E  
                         l3008 240C                           l3024 2454                           l3040 254E  
                         l3032 2530                           l3104 29A8                           l3120 2D3E  
                         l3112 24A0                           l1257 29B6                           l3130 2EBC  
                         l1370 17A0                           l1418 1F5E                           l3026 2464  
                         l3018 2446                           l3050 2586                           l3042 255C  
                         l3034 2534                           l3122 2D4C                           l3114 24BC  
                         l3106 2476                           l1363 15AA                           l1507 252E  
                         l1427 2CFA                           l3140 2CFE                           l3124 2EE4  
                         l3132 2EDA                           l4100 26EE                           l1380 18D0  
                         l1372 1818                           l3028 246C                           l3052 2594  
                         l3060 25BE                           l3044 2564                           l3036 2542  
                         l3116 24EE                           l3108 2486                           l3300 1B4C  
                         l1373 1806                           l3150 2D3A                           l3142 2D02  
                         l3126 2EE8                           l3134 2EDE                           l4110 2710  
                         l4102 26F8                           l3062 25CE                           l3054 25AA  
                         l3046 2576                           l3038 254A                           l3070 2814  
                         l1518 2EFE                           l3302 1B5E                           l1367 190E  
                         l3144 2D0A                           l3136 2EEE                           l3128 2EB8  
                         l4104 26FA                           l3400 2E8A                           l3064 25D6  
                         l3056 25B2                           l3048 257E                           l3080 284A  
                         l3072 2826                           l3304 1B72                           l3312 1BA4  
                         l3320 1BE8                           l3240 1910                           l3146 2D12  
                         l3138 2EF2                           l4106 2704                           l3402 2E9A  
                         l3058 25B8                           l3082 2860                           l3074 282E  
                         l3090 2954                           l3322 1C0A                           l3306 1B8C  
                         l3314 1BD4                           l3250 1958                           l3242 1918  
                         l3410 2A7C                           l3404 2ED0                           l3148 2D38  
                         l3340 2B74                           l3420 2DE4                           l4108 2706  
                         l4140 2E80                           l3084 2868                           l3076 2836  
                         l3068 280C                           l3092 2966                           l1492 2D58  
                         l3324 1C12                           l3316 1BDC                           l3308 1B8E  
                         l1468 1AB2                           l3260 19C4                           l3252 1962  
                         l3244 193E                           l3412 2A8A                           l1469 1C1A  
                         l3406 2ED4                           l4150 2E30                           l3342 2BBA  
                         l3334 2B24                           l3430 2ACE                           l3422 2DE6  
                         l4142 2E82                           l4134 2E6A                           l3086 286A  
                         l3078 2844                           l3094 296E                           l3270 1A3E  
                         l3262 19DC                           l3254 1982                           l3246 1946  
                         l3414 2AA4                           l1495 2D70                           l1487 2AC4  
                         l4160 2E46                           l4152 2E3A                           l3600 2628  
                         l3352 2BC4                           l3336 2B6A                           l3424 2DE8  
                         l3416 2DD4                           l3440 2802                           l3432 2790  
                         l4144 2E84                           l4136 2E74                           l3088 2870  
                         l3096 2976                           l3280 1A84                           l3272 1A4E  
                         l3264 1A0C                           l3256 19A2                           l3248 1954  
                         l1488 2ACC                           l3408 2A78                           l4240 200E  
                         l4154 2E3E                           l4146 2E26                           l3610 266C  
                         l3602 2632                           l3346 2C14                           l3354 2C0A  
                         l3426 2DEA                           l3418 2DDE                           l3434 279E  
                         l3450 2774                           l4090 2694                           l4138 2E76  
                         l3098 2984                           l3290 1AF6                           l3282 1A9E  
                         l3274 1A5E                           l3266 1A28                           l3258 19BA  
                         l4162 2A1A                           l4250 2042                           l4242 2016  
                         l4156 2E40                           l4148 2E2E                           l3604 2650  
                         l3348 2C5A                           l3428 2E4C                           l3436 27BE  
                         l3452 2786                           l3444 2714                           l4092 26BA  
                         l3700 17B0                           l3620 1512                           l3612 14E6  
                         l3460 29E2                           l3292 1B04                           l3276 1A6E  
                         l3284 1AA0                           l3268 1A2C                           l4164 2A6C  
                         l4260 2066                           l4252 204A                           l4244 201E  
                         l4158 2E44                           l3606 2660                           l3438 27F0  
                         l3446 2722                           l4094 26BE                           l3702 17BE  
                         l3630 154E                           l3622 1522                           l3614 14F2  
                         l3462 29E6                           l3294 1B08                           l3278 1A7C  
                         l3286 1ABE                           l3470 2CCC                           l4166 2C64  
                         l4270 2070                           l4262 2068                           l4254 205A  
                         l4246 2032                           l4238 1FC8                           l3608 2662  
                         l3448 2742                           l4096 26E2                           l4088 2684  
                         l3712 1828                           l3720 1870                           l3704 17C2  
                         l3640 1584                           l3632 1554                           l3624 1532  
                         l3616 1500                           l3800 1EAC                           l3456 29B8  
                         l3296 1B2C                           l3288 1ADE                           l3472 2CE4  
                         l3464 2CB0                           l4168 2CA4                           l4280 20CA  
                         l4272 2072                           l4264 206A                           l4256 205E  
                         l4248 203A                           l4098 26EC                           l3730 18E4  
                         l3722 188A                           l3714 1834                           l3706 17D0  
                         l3642 1594                           l3634 1562                           l3626 1538  
                         l3618 1502                           l3810 1F34                           l3802 1EB8  
                         l3458 29BC                           l3298 1B48                           l3474 2CF2  
                         l3466 2CBC                           l4282 20D2                           l4274 2076  
                         l4266 206C                           l4258 2062                           l3580 28EA  
                         l3900 0EC4                           l3732 18F2                           l3724 189E  
                         l3716 1842                           l3708 17FE                           l3660 1616  
                         l3652 15DE                           l3644 159A                           l3636 1564  
                         l3628 1548                           l3820 1F72                           l3812 1F40  
                         l3804 1EEA                           l3468 2CC4                           l4284 20DE  
                         l4276 20BE                           l4268 206E                           l3590 25E0  
                         l3582 28FA                           l3910 0F78                           l3902 0EC4  
                         l3734 18F4                           l3726 18B8                           l3718 186C  
                         l3670 1660                           l3662 162E                           l3654 15EA  
                         l3646 15BA                           l3638 1574                           l3750 2162  
                         l3742 210E                           l3822 1F96                           l3814 1F4E  
                         l3806 1EEC                           l4286 20E6                           l4278 20C2  
                         l3592 25F0                           l3832 2DA6                           l3840 2D80  
                         l3584 2908                           l3920 103C                           l3904 0ED4  
                         l3912 0F84                           l3728 18D4                           l3736 18FA  
                         l3680 16B6                           l3672 1670                           l3664 163A  
                         l3656 15F4                           l3648 15CA                           l3752 2164  
                         l3744 2124                           l3824 1FA6                           l3816 1F6C  
                         l3808 1EF8                           l4288 20EE                           l3578 2EC2  
                         l3594 2606                           l3850 1C68                           l3842 2D90  
                         l3586 2918                           l3930 10C8                           l3922 106C  
                         l3914 0F90                           l3906 0F14                           l3738 18FE  
                         l3690 175A                           l3682 16D2                           l3674 167C  
                         l3666 1646                           l3658 160A                           l3754 2174  
                         l3826 1FB4                           l3818 1F6E                           l4554 1BC6  
                         l3834 22EA                           l3596 260E                           l3852 1C86  
                         l3860 1CEE                           l3844 2D9A                           l3836 2D72  
                         l3588 2922                           l3932 10D2                           l3940 117E  
                         l3916 0FC4                           l3908 0F48                           l3924 1074  
                         l3692 1768                           l3684 16DE                           l3676 168C  
                         l3668 1654                           l3780 21F2                           l3764 219E  
                         l3756 2178                           l3748 2138                           l3828 1FB6  
                         l3598 261A                           l3870 1E00                           l3862 1CFE  
                         l3854 1CA8                           l3846 1C1C                           l3838 2D76  
                         l3950 1238                           l3942 118A                           l3934 110E  
                         l3926 1096                           l3918 1008                           l3694 1786  
                         l3686 16FA                           l3678 16A6                           l3782 2202  
                         l3774 21C6                           l3766 21A8                           l3758 2186  
                         l3790 1E34                           l2990 23B6                           l2984 2DFE  
                         l3864 1DCE                           l3856 1CCA                           l3848 1C60  
                         l3960 12A6                           l3944 1194                           l3936 1142  
                         l3928 10BC                           l3952 1240                           l3696 1790  
                         l3688 1724                           l3776 21D2                           l3768 21B2  
                         l3792 1E7A                           l2992 23C4                           l2986 2E0E  
                         l3866 1DDC                           l3858 1CEC                           l3970 135E  
                         l3962 12E2                           l3954 1262                           l3946 11D4  
                         l3938 1172                           l3890 0E52                           l3698 179E  
                         l3778 21E2                           l3794 1E90                           l3786 1E16  
                         l3882 2214                           l2994 23CC                           l3868 1DEE  
                         l3972 1370                           l3964 1316                           l3956 1288  
                         l3948 1208                           l3980 141C                           l3892 0E5E  
                         l3884 0E1A                           l3788 1E26                           l2996 23D0  
                         l2988 23B2                           l3990 14AA                           l3982 142E  
                         l3974 13B0                           l3966 1346                           l3958 1294  
                         l3894 0E70                           l3886 0E32                           l3798 1EA4  
                         l2998 23DE                           l3992 14B2                           l3984 143A  
                         l3976 13E4                           l3968 1352                           l3896 0E7C  
                         l3888 0E42                           l3994 14C0                           l3986 1446  
                         l3978 1414                           l3898 0E9A                           l3996 14D2  
                         l3988 147A                           STR_1 0E0F                           STR_2 0E14  
                         STR_5 0E01                           STR_6 0E04                           u2000 23C4  
                         u2001 23C0                           u2010 23DE                           u2011 23DA  
                         u2020 2404                           u2100 25AA                           u2021 2400  
                         u2101 25A6                           u2030 2422                           u2110 25CE  
                         u2031 241E                           u2111 25CA                           u3000 1F4E  
                         u2040 243E                           u2120 2826                           u2200 24BC  
                         u3001 1F4A                           u2041 243A                           u2121 2822  
                         u2201 24B8                           u3010 1F5E                           u2050 2464  
                         u2130 2844                           u2210 24EE                           u3011 1F5A  
                         u2051 2460                           u2131 2840                           u2211 24EA  
                         u3020 1F6C                           u2060 2542                           u2140 2860  
                         u2220 2D4C                           u3021 1F68                           u2061 253E  
                         u2141 285C                           u2221 2D48                           u2230 2D26  
                         u3030 1FA6                           u2070 255C                           u2150 2966  
                         u3110 235E                           u2231 2D1E                           u3031 1FA2  
                         u2071 2558                           u2151 2962                           u3111 2356  
                         u3200 0E70                           u3040 1FB4                           u2080 2576  
                         u2160 2984                   _BAUD4CONbits 0EE9                           u3201 0E6C  
                         u3041 1FB0                           u2081 2572                           u2161 2980  
                         u3210 0E9A                           u2090 2594                           u2170 299A  
                         u2410 193E                           u3130 237C                           u3050 22FC  
                         u3211 0E96                           u2091 2590                           u2171 2996  
                         u2411 193A                           u3131 2374                           u3051 22F4  
                         u3220 0EC4                           u2180 2486                           u2500 1AB2  
                         u2420 1982                           u3108 233E                           u3221 0EC0  
                         u2181 2482                           u2501 1AAE                           u2421 197E  
                         u3230 1096                           u2190 2496                           u2510 1ADE  
                         u2430 19A2                           u3150 239E                           u3070 231C  
                         u3231 1092                           u2191 2492                           u2511 1ADA  
                         u2431 199E                           u3151 2396                           u3071 2314  
                         u2248 2D28                           u2600 2774                           u3240 10BC  
                         u2520 1B5E                           u2440 19D8                           u3128 2360  
                         u2601 2770                           u3241 10B8                           u2521 1B5A  
                         u2441 19D2                           u3170 1CFE                           u3250 1262  
                         u2610 29DE                           u2530 1B6E                           u2450 19DA  
                         u3090 233C                           _T2PR 0FBC                           u3171 1CFA  
                         u3251 125E                           u2531 1B6A                           u3091 2334  
                         u3260 1288                           u2700 1512                           u2620 2A08  
                         u2540 1BA0                           u2460 1A3E                           u3148 237E  
                         u3068 22FE                           u3261 1284                           u2701 150E  
                         u2541 1B9C                           u2461 1A3A                           u2710 1522  
                         u2550 2E9A                           u2630 2A18                           u2470 1A4E  
                         u2711 151E                           u2551 2E96                           u2631 2A14  
                         u2471 1A4A                           u2640 2908                           u2800 17D0  
                         u2720 1562                           u2480 1A5E                           u2560 2AC4  
                         u3168 23A0                           u3088 231E                           u2641 2904  
                         u2801 17CC                           u2721 155E                           u2617 29D4  
                         u2481 1A5A                           u2561 2AC0                           u2650 2942  
                         u2570 27BE                           u3290 142E                           u2810 17FE  
                         u2730 1574                           u2490 1A6E                           u2651 293E  
                         u2571 27BA                           u3291 142A                           u3275 1296  
                         u2811 17FA                           u2731 1570                           u2627 29FE  
                         u2491 1A6A                           u2660 2606                           u2580 27F0  
                         u2820 1814                           u2740 1584                           u2900 2186  
                         u2661 2602                           u2581 27EC                           u3285 1360  
                         u2821 1810                           u2741 1580                           u2901 2182  
                         u2670 2628                           u2590 2742                           u2830 1828  
                         u2750 15BA                           u2910 219A                           u3710 20AC  
                         u2671 2624                           u2591 273E                           u2831 1824  
                         u2751 15B6                           u2911 2196                           u3711 20A4  
                         u2680 2650                           u2840 1842                           u2760 15CA  
                         u2920 21C2                           u2681 264C                           u2841 183E  
                         u2761 15C6                           u2921 21BE                           u2850 188A  
                         u2770 1744                           u2690 1500                           u2930 21E2  
                         u2851 1886                           u2691 14FC                           u2931 21DE  
                         u1980 2E0E                           u2860 18B8                           u2780 179E  
                         u2940 21F2                           u3708 208C                           u1981 2E0A  
                         u2861 18B4                           u2781 179A                           u2941 21EE  
                         u1990 2E24                           u2870 18F2                           u2790 17BE  
                         u2950 1E26                           u1991 2E20                           u2871 18EE  
                         u2791 17BA                           u2775 173A                           u2951 1E22  
                         u2880 2124                           u2960 1E34                           u3728 20AE  
                         u2881 2120                           u2961 1E30                           u2890 2158  
                         u2970 1E90                           u3690 208A                           u2971 1E8C  
                         u3691 2082                           u2980 1EE6                           u2981 1EE2  
                         u2990 1F30                           u2895 214E                           u2991 1F2C  
                         u3887 20F8                           u3897 2D86                           abs@a 0007  
                         _dbuf 0060                           _main 1FC8                           _prec 0084  
                         _nout 0080                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005E             _sendRGBCvalSerial4 2A1A                           prodh 0FF4  
                         prodl 0FF3                 ??_average_RGBC 000F                           start 003C  
           average_RGBC@temp_B 001A             average_RGBC@temp_C 001E             average_RGBC@temp_G 0016  
           average_RGBC@temp_R 0012         __end_of_color_read_Red 2B74                   ___param_bank 0000  
                        ??_ISR 0001            ?_sendRGBCvalSerial4 0037                          ??_abs 0009  
                write_timer@tH 0002                  write_timer@tL 0001                  ___fltol@sign1 0030  
                        ?_main 0001             _timer_high_pointer 0054                __end_of___awdiv 2476  
              __end_of___awmod 25E0                __end_of___flmul 1910                __end_of___fltol 2214  
              __end_of___lldiv 2684                ___awdiv@divisor 0003                __end_of___lwdiv 2880  
              __end_of___lwmod 29B8                          i2l719 0038                ___awdiv@counter 0005  
                 vfpfcnvrt@cnt 0011                   vfpfcnvrt@fmt 000C                          _TMR0H 0FD4  
                        _TMR0L 0FD3            ___lmul@multiplicand 0005        __end_of_sendCharSerial4 2EA0  
   __end_of_I2C_2_Master_Start 2EEE                    _write_timer 2ECE     __end_of_I2C_2_Master_Write 2EC2  
              __end_of_max_RGB 280C                __end_of_min_RGB 2790                    _turningGear 00BB  
                        _flags 0086           ??_sendRGBCvalSerial4 0038                          _fputc 2476  
                        _width 0082                          _putch 2EFE              _turnRight135Delay 00B1  
                        tablat 0FF5                _turnLeft90Delay 00B7                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 2CFC        __end_of_color_read_Blue 2C64  
                average_RGBC@i 0011                  average_RGBC@p 000E          _I2C_2_Master_RepStart 2EEE  
              ?_color_read_Red 0005                __initialization 2880                   __end_of_main 210E  
                       ??_main 0052                  __activetblptr 0003                         ?_fputc 0001  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0001                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RD6PPS 0E70  
                       _RE4PPS 0E76                         i2l2940 002A                         i2l2942 0032  
                       i2l2944 0036                         i2l2936 000A                         i2l2938 001A  
                       _RG6PPS 0E88                  vfpfcnvrt@done 0010       __end_of_color_click_init 2DA6  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 1FC8  
             _turnLeft135Delay 00B3                  ??_Timer0_init 0003                   ?_reset_timer 0001  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001C                   convert_HSV@C 0040  
                 convert_HSV@M 003E                         ___lmul 28EA                   convert_HSV@m 001A  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___flmul 0017  
                    ??___fltol 002C                      ??___lldiv 0009                      ??___lwdiv 0005  
                    ??___lwmod 0005                         clear_0 28C6                         clear_1 28D2  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                      ??_max_RGB 0003                      ??_min_RGB 0003  
                       fputc@c 0001                   __pdataCOMRAM 0054              _timer_low_pointer 00A9  
         __end_of_average_RGBC 1E14                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 2ACE              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0028            convert_HSV@temp_610 0028            convert_HSV@temp_611 002C  
          convert_HSV@temp_612 0030            convert_HSV@temp_613 0034            convert_HSV@temp_614 0020  
          convert_HSV@temp_609 0038                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001              _buggy_lights_init 2DA6                     __accesstop 0060  
      __end_of__initialization 28E0       __end_of_color_read_Clear 2C14       __end_of_color_read_Green 2BC4  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
                   ___fltol@f1 0028               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2EA0            ??_buggy_lights_init 0001                  __end_of_fputc 2530  
                __end_of_putch 2F00            __end_of_Timer0_init 2E4A                        ??_fputc 0004  
    __end_of_buggy_lights_init 2DD4                        ??_putch 0001                     __pbssBANK0 0060  
                   __pbssBANK1 0100                     _getRGBCval 2ACE              _color_writetoaddr 2E4A  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___lmul 0001  
               ___lmul@product 0009            ??_color_writetoaddr 0004                      ?___xxtofl 0001  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                   ?_write_timer 0001  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 2E6A             _I2C_2_Master_Start 2EE4  
                   _initUSART4 2E6A             _I2C_2_Master_Write 2EB6                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 2E26  
      sendStringSerial4@string 0002                        ___awdiv 23B2                        ___awmod 2530  
                      ___flmul 14E6                        ___fltol 210E                        ___lldiv 25E0  
                convert_HSV@p1 000E            ?_I2C_2_Master_Start 0001                  convert_HSV@p2 000F  
                      ___lwdiv 280C            ?_I2C_2_Master_Write 0001                        ___lwmod 2954  
                    ?_vfprintf 0019                   __psmallconst 0E00                        __pcinit 2880  
                      __ramtop 0E00                        __ptext0 1FC8                        __ptext1 22EA  
                      __ptext2 2A1A                        __ptext3 2C64                        __ptext4 2CB0  
                      __ptext5 2A78                        __ptext6 1910                        __ptext7 2476  
                      __ptext8 2EFE                        __ptext9 2D3E                        _max_RGB 2790  
                      _min_RGB 2714                      _T2CONbits 0FBD                     ??___xxtofl 0005  
             ___awmod@dividend 0001              __end_of_scale_RGB 22EA                      _T2HLTbits 0FBE  
                      _sprintf 2CB0           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 28E0              _sendHSVvalSerial4 2C64                    ?_getRGBCval 000C  
                      fputc@fp 0003              ?_color_click_init 0001             ?_sendHSVvalSerial4 0037  
              ___lldiv@divisor 0005             ??_color_click_init 0005                ___lldiv@counter 000D  
                 _average_RGBC 1C1C              __end_of_vfpfcnvrt 1C1C            ??_sendHSVvalSerial4 0038  
         convert_HSV@hue_scale 003C                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0014                     ??_vfprintf 001C                _initDCmotorsPWM 2684  
         convert_HSV@sat_scale 0018                  ___xxtofl@sign 0009                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
    __end_of_sendHSVvalSerial4 2CB0       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 001C                    _CCP1CONbits 0FAB              ?_color_read_Clear 0005  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
                   main@motorL 008D                     main@motorR 0096             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                 __end_of___lmul 2954                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0013                    vfpfcnvrt@fp 000B                  __pidataCOMRAM 2EF8  
    sendRGBCvalSerial4@col_val 0037       sendHSVvalSerial4@col_val 0037            color_read_Clear@tmp 000A  
          start_initialization 2880                  ??_convert_HSV 0010                    __end_of_ISR 003C  
                  __end_of_abs 2D72               _turnRight90Delay 00B5      sendRGBCvalSerial4@tempStr 0038  
     sendHSVvalSerial4@tempStr 0038            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 2714  
                  vfprintf@fmt 001A                       ??___lmul 0009                    __pdataBANK0 00A7  
                   scale_RGB@p 0032                 max_RGB@max_val 0005                      ___flmul@a 0013  
                    ___flmul@b 000F                    __pbssCOMRAM 005A                  __pcstackBANK0 0087  
              convert_HSV@temp 0024                 _wall_threshold 00B9            __end_of_convert_HSV 14E6  
 __end_of_toggle_tricolour_LED 23B2               ___lwdiv@dividend 0001                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___flmul 000F                       ?___fltol 0028                       ?___lldiv 0001  
                     ?___lwdiv 0001                       ?___lwmod 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                       ?_max_RGB 0001                       ?_min_RGB 0001  
                  __smallconst 0E00              _I2C_2_Master_Idle 2DFE              _I2C_2_Master_Init 2DD4  
            _I2C_2_Master_Read 2CFC              _I2C_2_Master_Stop 2EDA             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 0005                  _headbuttDelay 00AD       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 001D                      _scale_RGB 2214                      _rampDelay 0058  
                 ??_getRGBCval 000D              _sendStringSerial4 29B8            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                       _PIE0bits 0E29             ?_sendStringSerial4 0002  
                ??_reset_timer 0003                      _lost_flag 005B                       _PIR0bits 0E33  
                     i2u194_40 001A                       i2u194_41 0016                       i2u195_40 002A  
                     i2u195_41 0026                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                      _returning 005D                      _vfpfcnvrt 1910  
    __end_of_I2C_2_Master_Idle 2E26      __end_of_I2C_2_Master_Init 2DFE      __end_of_I2C_2_Master_Read 2D3E  
    __end_of_I2C_2_Master_Stop 2EE4    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 2B24  
   __end_of_sendRGBCvalSerial4 2A78              ??_color_read_Blue 0007                    _convert_HSV 0E1A  
              main@RGBC_colour 009F                     vfpfcnvrt@c 0018              ___lmul@multiplier 0001  
                    copy_data0 2894                      copy_data1 28B4      __end_of_sendStringSerial4 2A1A  
                   ?_scale_RGB 0032  __end_of_I2C_2_Master_RepStart 2EF8             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001B  
                     __Lrparam 0000                     vfprintf@fp 0019                   _sample_count 0059  
                   ?_vfpfcnvrt 000B            __end_of_reset_timer 2ECE                 convert_HSV@hue 001E  
               convert_HSV@sat 001C                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001F                     sprintf@ret 0028                       ___xxtofl 1E14  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6           _toggle_tricolour_LED 22EA  
              ___lwdiv@divisor 0003             __end_of_initUSART4 2E88                ___lwdiv@counter 0007  
                     __ptext10 2954                       __ptext11 280C                       __ptext20 2E6A  
                     __ptext12 2530                       __ptext21 2684                       __ptext13 23B2  
                     __ptext30 1C1C                       __ptext22 0E1A                       __ptext14 29B8  
                     __ptext31 2ACE                       __ptext23 2714                       __ptext15 2E88  
                     __ptext40 2CFC                       __ptext32 2B24                       __ptext24 2790  
                     __ptext16 2214                       __ptext41 2DFE                       __ptext33 2B74  
                     __ptext25 28EA                       __ptext17 1E14                       __ptext42 25E0  
                     __ptext34 2BC4                       __ptext26 2D72                       __ptext18 210E  
                     __ptext43 2E26                       __ptext35 2C14                       __ptext27 2E4A  
                     __ptext19 14E6                       __ptext44 2EC2                       __ptext36 2EB6  
                     __ptext28 2DD4                       __ptext45 2ECE                       __ptext37 2EDA  
                     __ptext29 2DA6                       __ptext38 2EE4                       __ptext39 2EEE  
                  getRGBCval@p 000C                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 2A78                       max_RGB@p 0001                       min_RGB@p 0001  
                   _INTCONbits 0FF2          ?_toggle_tricolour_LED 0001                  ??_write_timer 0002  
                  ??_scale_RGB 0033                       intlevel2 0000                      sprintf@ap 002A  
                 _topGearRight 0056              _manoeuvre_pointer 00A7               ___lwmod@dividend 0001  
             ___lldiv@dividend 0001                 main@HSV_colour 0087                    _reset_timer 2EC2  
                  ??_vfpfcnvrt 000E               _color_click_init 2D72                    _topGearLeft 0057  
                     sprintf@f 002B                       sprintf@s 001D                     _SSP2DATPPS 0E1D  
             ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C                ___lwmod@divisor 0003  
              ___lwmod@counter 0005                _trail_manoeuvre 0100                    _return_flag 005C  
              _manoeuvre_count 005A                     _TX4STAbits 0EE8                _sendCharSerial4 2E88  
          __end_of_write_timer 2EDA                  ?_average_RGBC 000E  
