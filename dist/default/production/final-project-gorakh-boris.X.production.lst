

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 15:03:54 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 18/08/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataBANK0
    86   0017F6                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for _squareDelay
    90   0017F6  012C               	dw	300
    91                           
    92                           ;initializer for _headbuttDelay
    93   0017F8  0046               	dw	70
    94                           
    95                           ;initializer for _turn180Delay
    96   0017FA  01FE               	dw	510
    97                           
    98                           ;initializer for _turnRight135Delay
    99   0017FC  012C               	dw	300
   100                           
   101                           ;initializer for _turnLeft135Delay
   102   0017FE  012C               	dw	300
   103                           
   104                           ;initializer for _turnRight90Delay
   105   001800  00AF               	dw	175
   106                           
   107                           ;initializer for _turnLeft90Delay
   108   001802  00AF               	dw	175
   109                           
   110                           ;initializer for _manoeuvre_count
   111   001804  14                 	db	20
   112                           
   113                           ;initializer for _manoeuvre_pointer
   114   001805  8A                 	db	low (_trail_manoeuvre+20)
   115                           
   116                           ;initializer for _timer_low_pointer
   117   001806  9E                 	db	low (_trail_timer_low+20)
   118                           
   119                           ;initializer for _timer_high_pointer
   120   001807  B2                 	db	low (_trail_timer_high+20)
   121                           
   122                           ;initializer for _turningGear
   123   001808  2A                 	db	42
   124                           
   125                           ;initializer for _topGearRight
   126   001809  14                 	db	20
   127                           
   128                           ;initializer for _topGearLeft
   129   00180A  14                 	db	20
   130                           
   131                           ;initializer for _rampDelay
   132   00180B  08                 	db	8
   133                           
   134                           ;initializer for _trail_manoeuvre
   135   00180C  01                 	db	1
   136   00180D  02                 	db	2
   137   00180E  03                 	db	3
   138   00180F  04                 	db	4
   139   001810  05                 	db	5
   140   001811  06                 	db	6
   141   001812  07                 	db	7
   142   001813  08                 	db	8
   143   001814  09                 	db	9
   144   001815  00                 	db	0
   145   001816  01                 	db	1
   146   001817  02                 	db	2
   147   001818  03                 	db	3
   148   001819  04                 	db	4
   149   00181A  05                 	db	5
   150   00181B  06                 	db	6
   151   00181C  07                 	db	7
   152   00181D  08                 	db	8
   153   00181E  09                 	db	9
   154   00181F  00                 	db	0
   155                           
   156                           ;initializer for _trail_timer_low
   157   001820  64                 	db	100
   158   001821  C8                 	db	200
   159   001822  64                 	db	100
   160   001823  C8                 	db	200
   161   001824  64                 	db	100
   162   001825  C8                 	db	200
   163   001826  64                 	db	100
   164   001827  C8                 	db	200
   165   001828  64                 	db	100
   166   001829  C8                 	db	200
   167   00182A  64                 	db	100
   168   00182B  C8                 	db	200
   169   00182C  64                 	db	100
   170   00182D  C8                 	db	200
   171   00182E  64                 	db	100
   172   00182F  C8                 	db	200
   173   001830  64                 	db	100
   174   001831  C8                 	db	200
   175   001832  64                 	db	100
   176   001833  C8                 	db	200
   177                           
   178                           ;initializer for _trail_timer_high
   179   001834  05                 	db	5
   180   001835  0A                 	db	10
   181   001836  05                 	db	5
   182   001837  0A                 	db	10
   183   001838  05                 	db	5
   184   001839  0A                 	db	10
   185   00183A  05                 	db	5
   186   00183B  0A                 	db	10
   187   00183C  05                 	db	5
   188   00183D  0A                 	db	10
   189   00183E  05                 	db	5
   190   00183F  0A                 	db	10
   191   001840  05                 	db	5
   192   001841  0A                 	db	10
   193   001842  05                 	db	5
   194   001843  0A                 	db	10
   195   001844  05                 	db	5
   196   001845  0A                 	db	10
   197   001846  05                 	db	5
   198   001847  0A                 	db	10
   199   000000                     _TX4REG	set	3812
   200   000000                     _RC4STAbits	set	3815
   201   000000                     _SP4BRGH	set	3814
   202   000000                     _LATEbits	set	3965
   203   000000                     _TRISEbits	set	3973
   204   000000                     _LATGbits	set	3967
   205   000000                     _TRISGbits	set	3975
   206   000000                     _LATFbits	set	3966
   207   000000                     _LATHbits	set	3968
   208   000000                     _TRISFbits	set	3974
   209   000000                     _TRISHbits	set	3976
   210   000000                     _SSP2CON2bits	set	3802
   211   000000                     _RX4PPS	set	3605
   212   000000                     _SSP2CLKPPS	set	3612
   213   000000                     _SSP2DATPPS	set	3613
   214   000000                     _RC7PPS	set	3689
   215   000000                     _RE2PPS	set	3700
   216   000000                     _LATAbits	set	3961
   217   000000                     _LATDbits	set	3964
   218   000000                     _TRISDbits	set	3972
   219   000000                     _PORTFbits	set	3982
   220   000000                     _T2PR	set	4028
   221   000000                     _T2CONbits	set	4029
   222   000000                     _CCPR2H	set	4006
   223   000000                     _CCPR1H	set	4010
   224   000000                     _TRISCbits	set	3971
   225   000000                     _TRISAbits	set	3969
   226   000000                     _LATCbits	set	3963
   227   000000                     _RE4PPS	set	3702
   228   000000                     _RG6PPS	set	3720
   229   000000                     _RD5PPS	set	3695
   230   000000                     _ANSELDbits	set	3751
   231   000000                     _SSP2ADD	set	3798
   232   000000                     _SSP2CON1bits	set	3801
   233   000000                     _CCPR4H	set	3873
   234   000000                     _CCPR3H	set	3877
   235   000000                     _TMR0L	set	4051
   236   000000                     _TMR0H	set	4052
   237   000000                     _T0CON0bits	set	4053
   238   000000                     _T0CON1bits	set	4054
   239   000000                     _T2CLKCONbits	set	4031
   240   000000                     _T2HLTbits	set	4030
   241   000000                     _CCP1CONbits	set	4011
   242   000000                     _CCPTMRS0bits	set	4013
   243   000000                     _CCP2CONbits	set	4007
   244   000000                     _CCP3CONbits	set	3878
   245   000000                     _CCP4CONbits	set	3874
   246   000000                     _RC4REG	set	3811
   247   000000                     _SP4BRGL	set	3813
   248   000000                     _TX4STAbits	set	3816
   249   000000                     _BAUD4CONbits	set	3817
   250   000000                     _SSP2CON2	set	3802
   251   000000                     _SSP2STAT	set	3800
   252   000000                     _ANSELFbits	set	3764
   253   000000                     _SSP2BUF	set	3797
   254   000000                     _PIE0bits	set	3625
   255   000000                     _PIE4bits	set	3629
   256   000000                     _PIR4bits	set	3639
   257   000000                     _RC0PPS	set	3682
   258   000000                     _RD6PPS	set	3696
   259   000000                     _PIR0bits	set	3635
   260   000000                     _INTCONbits	set	4082
   261                           
   262                           	psect	smallconst
   263   000E00                     __psmallconst:
   264                           	callstack 0
   265   000E00  00                 	db	0
   266   000E01                     STR_1:
   267                           
   268                           ; BSR set to: 14
   269   000E01  25                 	db	37
   270   000E02  64                 	db	100	;'d'
   271   000E03  20                 	db	32
   272   000E04  0D                 	db	13
   273   000E05  00                 	db	0
   274   000E06                     STR_2:
   275                           
   276                           ; BSR set to: 14
   277   000E06  25                 	db	37
   278   000E07  64                 	db	100	;'d'
   279   000E08  00                 	db	0
   280   000E09  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   0018E2                     __pcinit:
   286                           	callstack 0
   287   0018E2                     start_initialization:
   288                           	callstack 0
   289   0018E2                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to BANK0 (82 bytes)
   293                           ; load TBLPTR registers with __pidataBANK0
   294   0018E2  0EF6               	movlw	low __pidataBANK0
   295   0018E4  6EF6               	movwf	tblptrl,c
   296   0018E6  0E17               	movlw	high __pidataBANK0
   297   0018E8  6EF7               	movwf	tblptrh,c
   298   0018EA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   299   0018EC  6EF8               	movwf	tblptru,c
   300   0018EE  EE00  F060         	lfsr	0,__pdataBANK0
   301   0018F2  EE10 F052          	lfsr	1,82
   302   0018F6                     copy_data0:
   303   0018F6  0009               	tblrd		*+
   304   0018F8  CFF5 FFEE          	movff	tablat,postinc0
   305   0018FC  50E5               	movf	postdec1,w,c
   306   0018FE  50E1               	movf	fsr1l,w,c
   307   001900  E1FA               	bnz	copy_data0
   308                           
   309                           ; Clear objects allocated to BANK1 (60 bytes)
   310   001902  EE01  F000         	lfsr	0,__pbssBANK1
   311   001906  0E3C               	movlw	60
   312   001908                     clear_0:
   313   001908  6AEE               	clrf	postinc0,c
   314   00190A  06E8               	decf	wreg,f,c
   315   00190C  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to BANK0 (62 bytes)
   318   00190E  EE00  F0B2         	lfsr	0,__pbssBANK0
   319   001912  0E3E               	movlw	62
   320   001914                     clear_1:
   321   001914  6AEE               	clrf	postinc0,c
   322   001916  06E8               	decf	wreg,f,c
   323   001918  E1FD               	bnz	clear_1
   324                           
   325                           ; Clear objects allocated to COMRAM (2 bytes)
   326   00191A  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   327   00191C  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   328   00191E                     end_of_initialization:
   329                           	callstack 0
   330   00191E                     __end_of__initialization:
   331                           	callstack 0
   332   00191E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333   001920  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334   001922  0100               	movlb	0
   335   001924  EFAA  F008         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338   00005D                     __pbssCOMRAM:
   339                           	callstack 0
   340   00005D                     _TxBufReadCnt:
   341                           	callstack 0
   342   00005D                     	ds	1
   343   00005E                     _TxBufWriteCnt:
   344                           	callstack 0
   345   00005E                     	ds	1
   346                           
   347                           	psect	bssBANK0
   348   0000B2                     __pbssBANK0:
   349                           	callstack 0
   350   0000B2                     _dbuf:
   351                           	callstack 0
   352   0000B2                     	ds	32
   353   0000D2                     _EUSART4RXbuf:
   354                           	callstack 0
   355   0000D2                     	ds	20
   356   0000E6                     _nout:
   357                           	callstack 0
   358   0000E6                     	ds	2
   359   0000E8                     _width:
   360                           	callstack 0
   361   0000E8                     	ds	2
   362   0000EA                     _prec:
   363                           	callstack 0
   364   0000EA                     	ds	2
   365   0000EC                     _flags:
   366                           	callstack 0
   367   0000EC                     	ds	1
   368   0000ED                     _backtrack:
   369                           	callstack 0
   370   0000ED                     	ds	1
   371   0000EE                     _RxBufReadCnt:
   372                           	callstack 0
   373   0000EE                     	ds	1
   374   0000EF                     _RxBufWriteCnt:
   375                           	callstack 0
   376   0000EF                     	ds	1
   377                           
   378                           	psect	dataBANK0
   379   000060                     __pdataBANK0:
   380                           	callstack 0
   381   000060                     _squareDelay:
   382                           	callstack 0
   383   000060                     	ds	2
   384   000062                     _headbuttDelay:
   385                           	callstack 0
   386   000062                     	ds	2
   387   000064                     _turn180Delay:
   388                           	callstack 0
   389   000064                     	ds	2
   390   000066                     _turnRight135Delay:
   391                           	callstack 0
   392   000066                     	ds	2
   393   000068                     _turnLeft135Delay:
   394                           	callstack 0
   395   000068                     	ds	2
   396   00006A                     _turnRight90Delay:
   397                           	callstack 0
   398   00006A                     	ds	2
   399   00006C                     _turnLeft90Delay:
   400                           	callstack 0
   401   00006C                     	ds	2
   402   00006E                     _manoeuvre_count:
   403                           	callstack 0
   404   00006E                     	ds	1
   405   00006F                     _manoeuvre_pointer:
   406                           	callstack 0
   407   00006F                     	ds	1
   408   000070                     _timer_low_pointer:
   409                           	callstack 0
   410   000070                     	ds	1
   411   000071                     _timer_high_pointer:
   412                           	callstack 0
   413   000071                     	ds	1
   414   000072                     _turningGear:
   415                           	callstack 0
   416   000072                     	ds	1
   417   000073                     _topGearRight:
   418                           	callstack 0
   419   000073                     	ds	1
   420   000074                     _topGearLeft:
   421                           	callstack 0
   422   000074                     	ds	1
   423   000075                     _rampDelay:
   424                           	callstack 0
   425   000075                     	ds	1
   426   000076                     _trail_manoeuvre:
   427                           	callstack 0
   428   000076                     	ds	20
   429   00008A                     _trail_timer_low:
   430                           	callstack 0
   431   00008A                     	ds	20
   432   00009E                     _trail_timer_high:
   433                           	callstack 0
   434   00009E                     	ds	20
   435                           
   436                           	psect	bssBANK1
   437   000100                     __pbssBANK1:
   438                           	callstack 0
   439   000100                     _EUSART4TXbuf:
   440                           	callstack 0
   441   000100                     	ds	60
   442                           
   443                           	psect	cstackCOMRAM
   444   000001                     __pcstackCOMRAM:
   445                           	callstack 0
   446   000001                     ??_I2C_2_Master_Idle:
   447   000001                     ?___wmul:
   448                           	callstack 0
   449   000001                     ?___awdiv:
   450                           	callstack 0
   451   000001                     ?___awmod:
   452                           	callstack 0
   453   000001                     sendCharSerial4@charToSend:
   454                           	callstack 0
   455   000001                     readTrail@tH:
   456                           	callstack 0
   457   000001                     initDCmotorsPWM@PWMperiod:
   458                           	callstack 0
   459   000001                     ___wmul@multiplier:
   460                           	callstack 0
   461   000001                     ___awdiv@dividend:
   462                           	callstack 0
   463   000001                     ___awmod@dividend:
   464                           	callstack 0
   465   000001                     fputc@c:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x0
   469   000001                     	ds	1
   470   000002                     I2C_2_Master_Write@data_byte:
   471                           	callstack 0
   472   000002                     readTrail@tL:
   473                           	callstack 0
   474   000002                     sendStringSerial4@string:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x1
   478   000002                     	ds	1
   479   000003                     color_writetoaddr@value:
   480                           	callstack 0
   481   000003                     readTrail@man:
   482                           	callstack 0
   483   000003                     fputc@fp:
   484                           	callstack 0
   485   000003                     ___wmul@multiplicand:
   486                           	callstack 0
   487   000003                     ___awdiv@divisor:
   488                           	callstack 0
   489   000003                     ___awmod@divisor:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2
   493   000003                     	ds	1
   494   000004                     ??_fputc:
   495   000004                     color_writetoaddr@address:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x3
   499   000004                     	ds	1
   500   000005                     ??_color_click_init:
   501   000005                     ___awdiv@counter:
   502                           	callstack 0
   503   000005                     ___awmod@counter:
   504                           	callstack 0
   505   000005                     ___wmul@product:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x4
   509   000005                     	ds	1
   510   000006                     ___awdiv@sign:
   511                           	callstack 0
   512   000006                     ___awmod@sign:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x5
   516   000006                     	ds	1
   517   000007                     ?_abs:
   518                           	callstack 0
   519   000007                     ?___lwdiv:
   520                           	callstack 0
   521   000007                     ___awdiv@quotient:
   522                           	callstack 0
   523   000007                     ___lwdiv@dividend:
   524                           	callstack 0
   525   000007                     abs@a:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x6
   529   000007                     	ds	2
   530   000009                     ??_abs:
   531   000009                     ___lwdiv@divisor:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x8
   535   000009                     	ds	2
   536   00000B                     ?_vfpfcnvrt:
   537                           	callstack 0
   538   00000B                     vfpfcnvrt@fp:
   539                           	callstack 0
   540   00000B                     ___lwdiv@quotient:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xA
   544   00000B                     	ds	1
   545   00000C                     vfpfcnvrt@fmt:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0xB
   549   00000C                     	ds	1
   550   00000D                     ___lwdiv@counter:
   551                           	callstack 0
   552   00000D                     vfpfcnvrt@ap:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0xC
   556   00000D                     	ds	1
   557   00000E                     ??_vfpfcnvrt:
   558   00000E                     setMotorPWM@m:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0xD
   562   00000E                     	ds	1
   563   00000F                     ??_setMotorPWM:
   564   00000F                     vfpfcnvrt@done:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0xE
   568   00000F                     	ds	1
   569   000010                     vfpfcnvrt@cnt:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0xF
   573   000010                     	ds	1
   574   000011                     setMotorPWM@posDuty:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x10
   578   000011                     	ds	1
   579   000012                     setMotorPWM@negDuty:
   580                           	callstack 0
   581   000012                     vfpfcnvrt@cp:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x11
   585   000012                     	ds	1
   586   000013                     stop@mL:
   587                           	callstack 0
   588   000013                     fullSpeedAhead@mL:
   589                           	callstack 0
   590   000013                     vfpfcnvrt@convarg:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x12
   594   000013                     	ds	1
   595   000014                     stop@mR:
   596                           	callstack 0
   597   000014                     fullSpeedAhead@mR:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x13
   601   000014                     	ds	1
   602   000015                     ??_stop:
   603   000015                     ??_fullSpeedAhead:
   604                           
   605                           ; 1 bytes @ 0x14
   606   000015                     	ds	1
   607   000016                     fullSpeedAhead@leftGear:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x15
   611   000016                     	ds	1
   612   000017                     fullSpeedAhead@rightGear:
   613                           	callstack 0
   614   000017                     vfpfcnvrt@c:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x16
   618   000017                     	ds	1
   619   000018                     ?_vfprintf:
   620                           	callstack 0
   621   000018                     vfprintf@fp:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x17
   625   000018                     	ds	1
   626   000019                     vfprintf@fmt:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x18
   630   000019                     	ds	1
   631   00001A                     vfprintf@ap:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x19
   635   00001A                     	ds	1
   636   00001B                     vfprintf@cfmt:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1A
   640   00001B                     	ds	1
   641   00001C                     ?_sprintf:
   642                           	callstack 0
   643   00001C                     sprintf@s:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x1B
   647   00001C                     	ds	2
   648   00001E                     sprintf@fmt:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x1D
   652   00001E                     	ds	3
   653   000021                     sprintf@ret:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x20
   657   000021                     	ds	2
   658   000023                     sprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x22
   662   000023                     	ds	1
   663   000024                     sprintf@f:
   664                           	callstack 0
   665                           
   666                           ; 12 bytes @ 0x23
   667   000024                     	ds	12
   668   000030                     sendIntSerial4@integer:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x2F
   672   000030                     	ds	2
   673   000032                     sendIntSerial4@string:
   674                           	callstack 0
   675                           
   676                           ; 17 bytes @ 0x31
   677   000032                     	ds	17
   678   000043                     returnToSender@mL:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x42
   682   000043                     	ds	1
   683   000044                     returnToSender@mR:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x43
   687   000044                     	ds	1
   688   000045                     ??_returnToSender:
   689                           
   690                           ; 1 bytes @ 0x44
   691   000045                     	ds	1
   692   000046                     returnToSender@timerH:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x45
   696   000046                     	ds	1
   697   000047                     returnToSender@timerL:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x46
   701   000047                     	ds	1
   702   000048                     returnToSender@mann:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x47
   706   000048                     	ds	1
   707   000049                     ??_main:
   708                           
   709                           ; 1 bytes @ 0x48
   710   000049                     	ds	2
   711   00004B                     main@motorL:
   712                           	callstack 0
   713                           
   714                           ; 9 bytes @ 0x4A
   715   00004B                     	ds	9
   716   000054                     main@motorR:
   717                           	callstack 0
   718                           
   719                           ; 9 bytes @ 0x53
   720   000054                     	ds	9
   721                           
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 26 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  motorR          9   83[COMRAM] struct DC_motor
   732 ;;  motorL          9   74[COMRAM] struct DC_motor
   733 ;;  PWMcycle        2    0        unsigned int 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   744 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   746 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   747 ;;Total ram usage:       20 bytes
   748 ;; Hardware stack levels required when called: 8
   749 ;; This function calls:
   750 ;;		_Timer0_init
   751 ;;		_buggy_lights_init
   752 ;;		_color_click_init
   753 ;;		_initDCmotorsPWM
   754 ;;		_initUSART4
   755 ;;		_returnToSender
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text0
   762   001154                     __ptext0:
   763                           	callstack 0
   764   001154                     _main:
   765                           	callstack 23
   766   001154                     
   767                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   768   001154  0E52               	movlw	82
   769   001156  6E4A               	movwf	(??_main+1)^0,c
   770   001158  0E2B               	movlw	43
   771   00115A  6E49               	movwf	??_main^0,c
   772   00115C  0E00               	movlw	0
   773   00115E                     u2297:
   774   00115E  2EE8               	decfsz	wreg,f,c
   775   001160  D7FE               	bra	u2297
   776   001162  2E49               	decfsz	??_main^0,f,c
   777   001164  D7FC               	bra	u2297
   778   001166  2E4A               	decfsz	(??_main+1)^0,f,c
   779   001168  D7FA               	bra	u2297
   780   00116A  D000               	nop2	
   781   00116C                     
   782                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   783   00116C  0E00               	movlw	0
   784   00116E  6E4B               	movwf	main@motorL^0,c
   785   001170                     
   786                           ;main.c: 33:     motorL.direction = 1;
   787   001170  0E01               	movlw	1
   788   001172  6E4C               	movwf	(main@motorL+1)^0,c
   789   001174                     
   790                           ;main.c: 34:     motorL.brakemode = 1;
   791   001174  0E01               	movlw	1
   792   001176  6E4D               	movwf	(main@motorL+2)^0,c
   793   001178                     
   794                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   795   001178  0E00               	movlw	0
   796   00117A  6E4F               	movwf	(main@motorL+4)^0,c
   797   00117C  0E63               	movlw	99
   798   00117E  6E4E               	movwf	(main@motorL+3)^0,c
   799   001180                     
   800                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   801   001180  0EAA               	movlw	170
   802   001182  6E50               	movwf	(main@motorL+5)^0,c
   803   001184  0E0F               	movlw	15
   804   001186  6E51               	movwf	(main@motorL+6)^0,c
   805   001188                     
   806                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   807   001188  0EA6               	movlw	166
   808   00118A  6E52               	movwf	(main@motorL+7)^0,c
   809   00118C  0E0F               	movlw	15
   810   00118E  6E53               	movwf	(main@motorL+8)^0,c
   811   001190                     
   812                           ;main.c: 39:     motorR.power = 0;
   813   001190  0E00               	movlw	0
   814   001192  6E54               	movwf	main@motorR^0,c
   815   001194                     
   816                           ;main.c: 40:     motorR.direction = 1;
   817   001194  0E01               	movlw	1
   818   001196  6E55               	movwf	(main@motorR+1)^0,c
   819   001198                     
   820                           ;main.c: 41:     motorR.brakemode = 1;
   821   001198  0E01               	movlw	1
   822   00119A  6E56               	movwf	(main@motorR+2)^0,c
   823   00119C                     
   824                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   825   00119C  0E00               	movlw	0
   826   00119E  6E58               	movwf	(main@motorR+4)^0,c
   827   0011A0  0E63               	movlw	99
   828   0011A2  6E57               	movwf	(main@motorR+3)^0,c
   829   0011A4                     
   830                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   831   0011A4  0E25               	movlw	37
   832   0011A6  6E59               	movwf	(main@motorR+5)^0,c
   833   0011A8  0E0F               	movlw	15
   834   0011AA  6E5A               	movwf	(main@motorR+6)^0,c
   835   0011AC                     
   836                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   837   0011AC  0E21               	movlw	33
   838   0011AE  6E5B               	movwf	(main@motorR+7)^0,c
   839   0011B0  0E0F               	movlw	15
   840   0011B2  6E5C               	movwf	(main@motorR+8)^0,c
   841   0011B4                     
   842                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   843   0011B4  0E00               	movlw	0
   844   0011B6  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   845   0011B8  0E63               	movlw	99
   846   0011BA  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   847   0011BC  EC8F  F00A         	call	_initDCmotorsPWM	;wreg free
   848   0011C0                     
   849                           ;main.c: 47:     buggy_lights_init();
   850   0011C0  EC24  F00C         	call	_buggy_lights_init	;wreg free
   851   0011C4                     
   852                           ;main.c: 48:     color_click_init();
   853   0011C4  ECCC  F00C         	call	_color_click_init	;wreg free
   854   0011C8                     
   855                           ;main.c: 49:     initUSART4();
   856   0011C8  EC57  F00D         	call	_initUSART4	;wreg free
   857   0011CC                     
   858                           ;main.c: 50:     Timer0_init();
   859   0011CC  EC0F  F00D         	call	_Timer0_init	;wreg free
   860   0011D0                     
   861                           ;main.c: 54:         TRISFbits.TRISF2 = 1;
   862   0011D0  8486               	bsf	134,2,c	;volatile
   863   0011D2                     
   864                           ;main.c: 55:         TRISFbits.TRISF3 = 1;
   865   0011D2  8686               	bsf	134,3,c	;volatile
   866   0011D4                     
   867                           ;main.c: 57:         ANSELFbits.ANSELF2 = 0;
   868   0011D4  010E               	movlb	14	; () banked
   869   0011D6  95B4               	bcf	180,2,b	;volatile
   870   0011D8                     
   871                           ; BSR set to: 14
   872                           ;main.c: 58:         ANSELFbits.ANSELF3 = 0;
   873   0011D8  97B4               	bcf	180,3,b	;volatile
   874   0011DA                     
   875                           ; BSR set to: 14
   876                           ;main.c: 70:     returnToSender(&motorL, &motorR);
   877   0011DA  0E4B               	movlw	low main@motorL
   878   0011DC  6E43               	movwf	returnToSender@mL^0,c
   879   0011DE  0E54               	movlw	low main@motorR
   880   0011E0  6E44               	movwf	returnToSender@mR^0,c
   881   0011E2  ECD7  F00A         	call	_returnToSender	;wreg free
   882   0011E6                     l2956:
   883                           
   884                           ;main.c: 75:         if (!PORTFbits.RF2) {
   885   0011E6  B48E               	btfsc	142,2,c	;volatile
   886   0011E8  EFF8  F008         	goto	u1841
   887   0011EC  EFFA  F008         	goto	u1840
   888   0011F0                     u1841:
   889   0011F0  EF0B  F009         	goto	l2960
   890   0011F4                     u1840:
   891   0011F4                     
   892                           ;main.c: 76:             LATDbits.LATD7 = !LATDbits.LATD7;
   893   0011F4  AE7C               	btfss	124,7,c	;volatile
   894   0011F6  EFFF  F008         	goto	u1851
   895   0011FA  EF03  F009         	goto	u1850
   896   0011FE                     u1851:
   897   0011FE  6A49               	clrf	??_main^0,c
   898   001200  2A49               	incf	??_main^0,f,c
   899   001202  EF04  F009         	goto	u1868
   900   001206                     u1850:
   901   001206  6A49               	clrf	??_main^0,c
   902   001208                     u1868:
   903   001208  3249               	rrcf	??_main^0,f,c
   904   00120A  3249               	rrcf	??_main^0,f,c
   905   00120C  507C               	movf	124,w,c	;volatile
   906   00120E  1849               	xorwf	??_main^0,w,c
   907   001210  0B7F               	andlw	-129
   908   001212  1849               	xorwf	??_main^0,w,c
   909   001214  6E7C               	movwf	124,c	;volatile
   910   001216                     l2960:
   911                           
   912                           ;main.c: 81:         _delay((unsigned long)((500)*(64000000/4000.0)));
   913   001216  0E29               	movlw	41
   914   001218  6E4A               	movwf	(??_main+1)^0,c
   915   00121A  0E96               	movlw	150
   916   00121C  6E49               	movwf	??_main^0,c
   917   00121E  0E7F               	movlw	127
   918   001220                     u2307:
   919   001220  2EE8               	decfsz	wreg,f,c
   920   001222  D7FE               	bra	u2307
   921   001224  2E49               	decfsz	??_main^0,f,c
   922   001226  D7FC               	bra	u2307
   923   001228  2E4A               	decfsz	(??_main+1)^0,f,c
   924   00122A  D7FA               	bra	u2307
   925   00122C  0000               	nop	
   926   00122E  EFF3  F008         	goto	l2956
   927   001232  EF10  F000         	goto	start
   928   001236                     __end_of_main:
   929                           	callstack 0
   930                           
   931 ;; *************** function _returnToSender *****************
   932 ;; Defined at:
   933 ;;		line 56 in file "timers.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  mL              1   66[COMRAM] PTR struct DC_motor
   936 ;;		 -> main@motorL(9), 
   937 ;;  mR              1   67[COMRAM] PTR struct DC_motor
   938 ;;		 -> main@motorR(9), 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  mann            1   71[COMRAM] unsigned char 
   941 ;;  timerL          1   70[COMRAM] unsigned char 
   942 ;;  timerH          1   69[COMRAM] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;Total ram usage:        6 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; Hardware stack levels required when called: 7
   959 ;; This function calls:
   960 ;;		_fullSpeedAhead
   961 ;;		_readTrail
   962 ;;		_sendIntSerial4
   963 ;;		_stop
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970   0015AE                     __ptext1:
   971                           	callstack 0
   972   0015AE                     _returnToSender:
   973                           	callstack 23
   974   0015AE                     
   975                           ;timers.c: 57:     while (manoeuvre_count != 0) {
   976   0015AE  EF02  F00B         	goto	l2896
   977   0015B2                     l2882:
   978                           
   979                           ; BSR set to: 0
   980                           ;timers.c: 58:         unsigned char timerH = 0;
   981   0015B2  0E00               	movlw	0
   982   0015B4  6E46               	movwf	returnToSender@timerH^0,c
   983                           
   984                           ;timers.c: 59:         unsigned char timerL = 0;
   985   0015B6  0E00               	movlw	0
   986   0015B8  6E47               	movwf	returnToSender@timerL^0,c
   987                           
   988                           ;timers.c: 60:         unsigned char mann = 0;
   989   0015BA  0E00               	movlw	0
   990   0015BC  6E48               	movwf	returnToSender@mann^0,c
   991   0015BE                     
   992                           ; BSR set to: 0
   993                           ;timers.c: 61:         readTrail(&timerH, &timerL, &mann);
   994   0015BE  0E46               	movlw	low returnToSender@timerH
   995   0015C0  6E01               	movwf	readTrail@tH^0,c
   996   0015C2  0E47               	movlw	low returnToSender@timerL
   997   0015C4  6E02               	movwf	readTrail@tL^0,c
   998   0015C6  0E48               	movlw	low returnToSender@mann
   999   0015C8  6E03               	movwf	readTrail@man^0,c
  1000   0015CA  EC94  F00C         	call	_readTrail	;wreg free
  1001   0015CE                     
  1002                           ;timers.c: 62:         sendIntSerial4(timerH);
  1003   0015CE  C046  F030         	movff	returnToSender@timerH,sendIntSerial4@integer
  1004   0015D2  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
  1005   0015D4  EC36  F00D         	call	_sendIntSerial4	;wreg free
  1006   0015D8                     
  1007                           ;timers.c: 63:         sendIntSerial4(timerL);
  1008   0015D8  C047  F030         	movff	returnToSender@timerL,sendIntSerial4@integer
  1009   0015DC  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
  1010   0015DE  EC36  F00D         	call	_sendIntSerial4	;wreg free
  1011   0015E2                     
  1012                           ;timers.c: 64:         sendIntSerial4(mann);
  1013   0015E2  C048  F030         	movff	returnToSender@mann,sendIntSerial4@integer
  1014   0015E6  6A31               	clrf	(sendIntSerial4@integer+1)^0,c
  1015   0015E8  EC36  F00D         	call	_sendIntSerial4	;wreg free
  1016   0015EC                     
  1017                           ;timers.c: 65:         fullSpeedAhead(mL, mR);
  1018   0015EC  C043  F013         	movff	returnToSender@mL,fullSpeedAhead@mL
  1019   0015F0  C044  F014         	movff	returnToSender@mR,fullSpeedAhead@mR
  1020   0015F4  ECDA  F009         	call	_fullSpeedAhead	;wreg free
  1021   0015F8                     
  1022                           ;timers.c: 66:         stop(mL, mR);
  1023   0015F8  C043  F013         	movff	returnToSender@mL,stop@mL
  1024   0015FC  C044  F014         	movff	returnToSender@mR,stop@mR
  1025   001600  EC1E  F00B         	call	_stop	;wreg free
  1026   001604                     l2896:
  1027                           
  1028                           ;timers.c: 57:     while (manoeuvre_count != 0) {
  1029   001604  0100               	movlb	0	; () banked
  1030   001606  516E               	movf	_manoeuvre_count& (0+255),w,b
  1031   001608  A4D8               	btfss	status,2,c
  1032   00160A  EF09  F00B         	goto	u1801
  1033   00160E  EF0B  F00B         	goto	u1800
  1034   001612                     u1801:
  1035   001612  EFD9  F00A         	goto	l2882
  1036   001616                     u1800:
  1037   001616                     
  1038                           ; BSR set to: 0
  1039                           ;timers.c: 68:     LATHbits.LATH3 = !LATHbits.LATH3;
  1040   001616  A680               	btfss	128,3,c	;volatile
  1041   001618  EF10  F00B         	goto	u1811
  1042   00161C  EF14  F00B         	goto	u1810
  1043   001620                     u1811:
  1044   001620  6A45               	clrf	??_returnToSender^0,c
  1045   001622  2A45               	incf	??_returnToSender^0,f,c
  1046   001624  EF15  F00B         	goto	u1828
  1047   001628                     u1810:
  1048   001628  6A45               	clrf	??_returnToSender^0,c
  1049   00162A                     u1828:
  1050   00162A  4645               	rlncf	??_returnToSender^0,f,c
  1051   00162C  4645               	rlncf	??_returnToSender^0,f,c
  1052   00162E  4645               	rlncf	??_returnToSender^0,f,c
  1053   001630  5080               	movf	128,w,c	;volatile
  1054   001632  1845               	xorwf	??_returnToSender^0,w,c
  1055   001634  0BF7               	andlw	-9
  1056   001636  1845               	xorwf	??_returnToSender^0,w,c
  1057   001638  6E80               	movwf	128,c	;volatile
  1058   00163A  0012               	return		;funcret
  1059   00163C                     __end_of_returnToSender:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _stop *****************
  1063 ;; Defined at:
  1064 ;;		line 88 in file "dc_motor.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1067 ;;		 -> main@motorL(9), 
  1068 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1069 ;;		 -> main@motorR(9), 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;Total ram usage:        3 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 3
  1088 ;; This function calls:
  1089 ;;		_setMotorPWM
  1090 ;; This function is called by:
  1091 ;;		_returnToSender
  1092 ;;		_turnLeft90
  1093 ;;		_turnRight90
  1094 ;;		_turnLeft135
  1095 ;;		_turnRight135
  1096 ;;		_UTurn
  1097 ;;		_headbuttReverse
  1098 ;;		_squareReverse
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text2
  1103   00163C                     __ptext2:
  1104                           	callstack 0
  1105   00163C                     _stop:
  1106                           	callstack 26
  1107   00163C                     
  1108                           ;dc_motor.c: 88: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 92:
      +                               while ((mL->power>0) || (mR->power>0)){
  1109   00163C  EF4E  F00B         	goto	l2698
  1110   001640                     l2684:
  1111                           
  1112                           ;dc_motor.c: 93:         if (mL->power>0) {mL->power--;}
  1113   001640  5013               	movf	stop@mL^0,w,c
  1114   001642  6ED9               	movwf	fsr2l,c
  1115   001644  6ADA               	clrf	fsr2h,c
  1116   001646  50DF               	movf	indf2,w,c
  1117   001648  B4D8               	btfsc	status,2,c
  1118   00164A  EF29  F00B         	goto	u1601
  1119   00164E  EF2B  F00B         	goto	u1600
  1120   001652                     u1601:
  1121   001652  EF2F  F00B         	goto	l2688
  1122   001656                     u1600:
  1123   001656  5013               	movf	stop@mL^0,w,c
  1124   001658  6ED9               	movwf	fsr2l,c
  1125   00165A  6ADA               	clrf	fsr2h,c
  1126   00165C  06DF               	decf	indf2,f,c
  1127   00165E                     l2688:
  1128                           
  1129                           ;dc_motor.c: 94:         if (mR->power>0) {mR->power--;}
  1130   00165E  5014               	movf	stop@mR^0,w,c
  1131   001660  6ED9               	movwf	fsr2l,c
  1132   001662  6ADA               	clrf	fsr2h,c
  1133   001664  50DF               	movf	indf2,w,c
  1134   001666  B4D8               	btfsc	status,2,c
  1135   001668  EF38  F00B         	goto	u1611
  1136   00166C  EF3A  F00B         	goto	u1610
  1137   001670                     u1611:
  1138   001670  EF3E  F00B         	goto	l2692
  1139   001674                     u1610:
  1140   001674  5014               	movf	stop@mR^0,w,c
  1141   001676  6ED9               	movwf	fsr2l,c
  1142   001678  6ADA               	clrf	fsr2h,c
  1143   00167A  06DF               	decf	indf2,f,c
  1144   00167C                     l2692:
  1145                           
  1146                           ;dc_motor.c: 95:         setMotorPWM(mL);
  1147   00167C  C013  F00E         	movff	stop@mL,setMotorPWM@m
  1148   001680  EC00  F008         	call	_setMotorPWM	;wreg free
  1149   001684                     
  1150                           ;dc_motor.c: 96:         setMotorPWM(mR);
  1151   001684  C014  F00E         	movff	stop@mR,setMotorPWM@m
  1152   001688  EC00  F008         	call	_setMotorPWM	;wreg free
  1153   00168C                     
  1154                           ;dc_motor.c: 97:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  1155   00168C  0EA7               	movlw	167
  1156   00168E  6E15               	movwf	??_stop^0,c
  1157   001690  0E3A               	movlw	58
  1158   001692                     u2317:
  1159   001692  2EE8               	decfsz	wreg,f,c
  1160   001694  D7FE               	bra	u2317
  1161   001696  2E15               	decfsz	??_stop^0,f,c
  1162   001698  D7FC               	bra	u2317
  1163   00169A  D000               	nop2	
  1164   00169C                     l2698:
  1165                           
  1166                           ;dc_motor.c: 92:     while ((mL->power>0) || (mR->power>0)){
  1167   00169C  5013               	movf	stop@mL^0,w,c
  1168   00169E  6ED9               	movwf	fsr2l,c
  1169   0016A0  6ADA               	clrf	fsr2h,c
  1170   0016A2  50DF               	movf	indf2,w,c
  1171   0016A4  A4D8               	btfss	status,2,c
  1172   0016A6  EF57  F00B         	goto	u1621
  1173   0016AA  EF59  F00B         	goto	u1620
  1174   0016AE                     u1621:
  1175   0016AE  EF20  F00B         	goto	l2684
  1176   0016B2                     u1620:
  1177   0016B2  5014               	movf	stop@mR^0,w,c
  1178   0016B4  6ED9               	movwf	fsr2l,c
  1179   0016B6  6ADA               	clrf	fsr2h,c
  1180   0016B8  50DF               	movf	indf2,w,c
  1181   0016BA  A4D8               	btfss	status,2,c
  1182   0016BC  EF62  F00B         	goto	u1631
  1183   0016C0  EF64  F00B         	goto	u1630
  1184   0016C4                     u1631:
  1185   0016C4  EF20  F00B         	goto	l2684
  1186   0016C8                     u1630:
  1187   0016C8  0012               	return		;funcret
  1188   0016CA                     __end_of_stop:
  1189                           	callstack 0
  1190                           
  1191 ;; *************** function _sendIntSerial4 *****************
  1192 ;; Defined at:
  1193 ;;		line 43 in file "serial.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  integer         2   47[COMRAM] int 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  string         17   49[COMRAM] unsigned char [17]
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1210 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1211 ;;Total ram usage:       19 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 6
  1214 ;; This function calls:
  1215 ;;		_sendStringSerial4
  1216 ;;		_sprintf
  1217 ;; This function is called by:
  1218 ;;		_returnToSender
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text3
  1223   001A6C                     __ptext3:
  1224                           	callstack 0
  1225   001A6C                     _sendIntSerial4:
  1226                           	callstack 23
  1227   001A6C                     
  1228                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
  1229   001A6C  0E32               	movlw	low sendIntSerial4@string
  1230   001A6E  6E1C               	movwf	sprintf@s^0,c
  1231   001A70  6A1D               	clrf	(sprintf@s+1)^0,c
  1232   001A72  0E01               	movlw	low STR_1
  1233   001A74  6E1E               	movwf	sprintf@fmt^0,c
  1234   001A76  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
  1235   001A7A  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
  1236   001A7E  EC4B  F00C         	call	_sprintf	;wreg free
  1237   001A82                     
  1238                           ;serial.c: 46:     sendStringSerial4(string);
  1239   001A82  0E32               	movlw	low sendIntSerial4@string
  1240   001A84  6E02               	movwf	sendStringSerial4@string^0,c
  1241   001A86  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1242   001A88  EC9F  F00B         	call	_sendStringSerial4	;wreg free
  1243   001A8C  0012               	return		;funcret
  1244   001A8E                     __end_of_sendIntSerial4:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _sprintf *****************
  1248 ;; Defined at:
  1249 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  s               2   27[COMRAM] PTR unsigned char 
  1252 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1253 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
  1254 ;;		 -> STR_3(3), STR_1(5), 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  f              12   35[COMRAM] struct _IO_FILE
  1257 ;;  ret             2   32[COMRAM] int 
  1258 ;;  ap              1   34[COMRAM] PTR void [1]
  1259 ;;		 -> ?_sprintf(2), 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2   27[COMRAM] int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1269 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;Total ram usage:       20 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 5
  1276 ;; This function calls:
  1277 ;;		_vfprintf
  1278 ;; This function is called by:
  1279 ;;		_sendIntSerial4
  1280 ;;		_sendArrayCharSerial4
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text4
  1285   001896                     __ptext4:
  1286                           	callstack 0
  1287   001896                     _sprintf:
  1288                           	callstack 23
  1289   001896  0E1F               	movlw	low (?_sprintf+3)
  1290   001898  6E23               	movwf	sprintf@ap^0,c
  1291   00189A  C01C  F024         	movff	sprintf@s,sprintf@f
  1292   00189E  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
  1293   0018A2  0E00               	movlw	0
  1294   0018A4  6E28               	movwf	(sprintf@f+4)^0,c
  1295   0018A6  0E00               	movlw	0
  1296   0018A8  6E27               	movwf	(sprintf@f+3)^0,c
  1297   0018AA  0E00               	movlw	0
  1298   0018AC  6E2F               	movwf	(sprintf@f+11)^0,c
  1299   0018AE  0E00               	movlw	0
  1300   0018B0  6E2E               	movwf	(sprintf@f+10)^0,c
  1301   0018B2  0E24               	movlw	low sprintf@f
  1302   0018B4  6E18               	movwf	vfprintf@fp^0,c
  1303   0018B6  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  1304   0018BA  0E23               	movlw	low sprintf@ap
  1305   0018BC  6E1A               	movwf	vfprintf@ap^0,c
  1306   0018BE  ECD0  F00B         	call	_vfprintf	;wreg free
  1307   0018C2  C018  F021         	movff	?_vfprintf,sprintf@ret
  1308   0018C6  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
  1309   0018CA  5027               	movf	(sprintf@f+3)^0,w,c
  1310   0018CC  241C               	addwf	sprintf@s^0,w,c
  1311   0018CE  6ED9               	movwf	fsr2l,c
  1312   0018D0  5028               	movf	(sprintf@f+4)^0,w,c
  1313   0018D2  201D               	addwfc	(sprintf@s+1)^0,w,c
  1314   0018D4  6EDA               	movwf	fsr2h,c
  1315   0018D6  6ADF               	clrf	indf2,c
  1316   0018D8  C021  F01C         	movff	sprintf@ret,?_sprintf
  1317   0018DC  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1318   0018E0  0012               	return		;funcret
  1319   0018E2                     __end_of_sprintf:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _vfprintf *****************
  1323 ;; Defined at:
  1324 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1327 ;;		 -> sprintf@f(12), 
  1328 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1329 ;;		 -> STR_3(3), STR_1(5), 
  1330 ;;  ap              1   25[COMRAM] PTR PTR void 
  1331 ;;		 -> sprintf@ap(1), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1334 ;;		 -> STR_3(3), STR_1(5), 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2   23[COMRAM] int 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1344 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;Total ram usage:        4 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 4
  1351 ;; This function calls:
  1352 ;;		_vfpfcnvrt
  1353 ;; This function is called by:
  1354 ;;		_sprintf
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text5
  1359   0017A0                     __ptext5:
  1360                           	callstack 0
  1361   0017A0                     _vfprintf:
  1362                           	callstack 23
  1363   0017A0                     
  1364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1365   0017A0  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1366   0017A4                     
  1367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1368   0017A4  0E00               	movlw	0
  1369   0017A6  0100               	movlb	0	; () banked
  1370   0017A8  6FE7               	movwf	(_nout+1)& (0+255),b
  1371   0017AA  0E00               	movlw	0
  1372   0017AC  6FE6               	movwf	_nout& (0+255),b
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1375   0017AE  EFE6  F00B         	goto	l2640
  1376   0017B2                     l2638:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1380   0017B2  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1381   0017B6  0E1B               	movlw	low vfprintf@cfmt
  1382   0017B8  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1383   0017BA  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1384   0017BE  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1385   0017C2  500B               	movf	?_vfpfcnvrt^0,w,c
  1386   0017C4  0100               	movlb	0	; () banked
  1387   0017C6  27E6               	addwf	_nout& (0+255),f,b
  1388   0017C8  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1389   0017CA  23E7               	addwfc	(_nout+1)& (0+255),f,b
  1390   0017CC                     l2640:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1394   0017CC  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1395   0017D0                     	if	1	;There is more than 1 active tblptr byte
  1396   0017D0  0E0E               	movlw	high __smallconst
  1397   0017D2  6EF7               	movwf	tblptrh,c
  1398   0017D4                     	endif
  1399   0017D4                     	if	0	;tblptru may be non-zero
  1400   0017D4                     	endif
  1401   0017D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1402   0017D4  0E00               	movlw	low (__smallconst shr (0+16))
  1403   0017D6  6EF8               	movwf	tblptru,c
  1404   0017D8                     	endif
  1405   0017D8  0008               	tblrd		*
  1406   0017DA  50F5               	movf	tablat,w,c
  1407   0017DC  0900               	iorlw	0
  1408   0017DE  A4D8               	btfss	status,2,c
  1409   0017E0  EFF4  F00B         	goto	u1541
  1410   0017E4  EFF6  F00B         	goto	u1540
  1411   0017E8                     u1541:
  1412   0017E8  EFD9  F00B         	goto	l2638
  1413   0017EC                     u1540:
  1414   0017EC                     
  1415                           ; BSR set to: 0
  1416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1417   0017EC  C0E6  F018         	movff	_nout,?_vfprintf
  1418   0017F0  C0E7  F019         	movff	_nout+1,?_vfprintf+1
  1419   0017F4                     
  1420                           ; BSR set to: 0
  1421   0017F4  0012               	return		;funcret
  1422   0017F6                     __end_of_vfprintf:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _vfpfcnvrt *****************
  1426 ;; Defined at:
  1427 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1430 ;;		 -> sprintf@f(12), 
  1431 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1432 ;;		 -> vfprintf@cfmt(1), 
  1433 ;;  ap              1   12[COMRAM] PTR PTR void 
  1434 ;;		 -> sprintf@ap(1), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  convarg         4   18[COMRAM] struct .
  1437 ;;  cnt             2   15[COMRAM] int 
  1438 ;;  c               1   22[COMRAM] unsigned char 
  1439 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1440 ;;		 -> STR_3(3), STR_1(5), 
  1441 ;;  done            1   14[COMRAM] _Bool 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2   10[COMRAM] int 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1451 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;Total ram usage:       13 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 3
  1458 ;; This function calls:
  1459 ;;		___awdiv
  1460 ;;		___awmod
  1461 ;;		_abs
  1462 ;;		_fputc
  1463 ;; This function is called by:
  1464 ;;		_vfprintf
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text6
  1469   000E0A                     __ptext6:
  1470                           	callstack 0
  1471   000E0A                     _vfpfcnvrt:
  1472                           	callstack 23
  1473   000E0A                     
  1474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1475   000E0A  0E00               	movlw	0
  1476   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1477   000E0E  0E00               	movlw	0
  1478   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1479   000E12                     
  1480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1481   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1482   000E14  6ED9               	movwf	fsr2l,c
  1483   000E16  6ADA               	clrf	fsr2h,c
  1484   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1485   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1486   000E1C  0E0E               	movlw	high __smallconst
  1487   000E1E  6EF7               	movwf	tblptrh,c
  1488   000E20                     	endif
  1489   000E20                     	if	0	;tblptru may be non-zero
  1490   000E20                     	endif
  1491   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1492   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1493   000E22  6EF8               	movwf	tblptru,c
  1494   000E24                     	endif
  1495   000E24  0008               	tblrd		*
  1496   000E26  50F5               	movf	tablat,w,c
  1497   000E28  0A25               	xorlw	37
  1498   000E2A  A4D8               	btfss	status,2,c
  1499   000E2C  EF1A  F007         	goto	u1401
  1500   000E30  EF1C  F007         	goto	u1400
  1501   000E34                     u1401:
  1502   000E34  EFE6  F007         	goto	l2594
  1503   000E38                     u1400:
  1504   000E38                     
  1505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1506   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1507   000E3A  6ED9               	movwf	fsr2l,c
  1508   000E3C  6ADA               	clrf	fsr2h,c
  1509   000E3E  2ADF               	incf	indf2,f,c
  1510   000E40                     
  1511                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1512   000E40  0E00               	movlw	0
  1513   000E42  0100               	movlb	0	; () banked
  1514   000E44  6FE9               	movwf	(_width+1)& (0+255),b
  1515   000E46  0E00               	movlw	0
  1516   000E48  6FE8               	movwf	_width& (0+255),b
  1517   000E4A  C0E8  F0EC         	movff	_width,_flags
  1518   000E4E                     
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1521   000E4E  69EA               	setf	_prec& (0+255),b
  1522   000E50  69EB               	setf	(_prec+1)& (0+255),b
  1523   000E52                     
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1526   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1527   000E54  6ED9               	movwf	fsr2l,c
  1528   000E56  6ADA               	clrf	fsr2h,c
  1529   000E58  50DF               	movf	indf2,w,c
  1530   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1531   000E5C                     
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1534   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1535   000E60                     	if	1	;There is more than 1 active tblptr byte
  1536   000E60  0E0E               	movlw	high __smallconst
  1537   000E62  6EF7               	movwf	tblptrh,c
  1538   000E64                     	endif
  1539   000E64                     	if	0	;tblptru may be non-zero
  1540   000E64                     	endif
  1541   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1542   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1543   000E66  6EF8               	movwf	tblptru,c
  1544   000E68                     	endif
  1545   000E68  0008               	tblrd		*
  1546   000E6A  50F5               	movf	tablat,w,c
  1547   000E6C  0A64               	xorlw	100
  1548   000E6E  B4D8               	btfsc	status,2,c
  1549   000E70  EF3C  F007         	goto	u1411
  1550   000E74  EF3E  F007         	goto	u1410
  1551   000E78                     u1411:
  1552   000E78  EF4E  F007         	goto	l2558
  1553   000E7C                     u1410:
  1554   000E7C                     
  1555                           ; BSR set to: 0
  1556   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1557   000E80                     	if	1	;There is more than 1 active tblptr byte
  1558   000E80  0E0E               	movlw	high __smallconst
  1559   000E82  6EF7               	movwf	tblptrh,c
  1560   000E84                     	endif
  1561   000E84                     	if	0	;tblptru may be non-zero
  1562   000E84                     	endif
  1563   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1564   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1565   000E86  6EF8               	movwf	tblptru,c
  1566   000E88                     	endif
  1567   000E88  0008               	tblrd		*
  1568   000E8A  50F5               	movf	tablat,w,c
  1569   000E8C  0A69               	xorlw	105
  1570   000E8E  A4D8               	btfss	status,2,c
  1571   000E90  EF4C  F007         	goto	u1421
  1572   000E94  EF4E  F007         	goto	u1420
  1573   000E98                     u1421:
  1574   000E98  EFDC  F007         	goto	l2588
  1575   000E9C                     u1420:
  1576   000E9C                     l2558:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1580   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1581   000E9E  6ED9               	movwf	fsr2l,c
  1582   000EA0  6ADA               	clrf	fsr2h,c
  1583   000EA2  0E02               	movlw	2
  1584   000EA4  26DF               	addwf	indf2,f,c
  1585   000EA6  5CDF               	subwf	indf2,w,c
  1586   000EA8  6ED9               	movwf	fsr2l,c
  1587   000EAA  6ADA               	clrf	fsr2h,c
  1588   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1589   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1590   000EB4                     
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1593   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1594   000EB6  6ED9               	movwf	fsr2l,c
  1595   000EB8  6ADA               	clrf	fsr2h,c
  1596   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1597   000EBC  6EDF               	movwf	indf2,c
  1598   000EBE                     
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1601   000EBE  0E20               	movlw	32
  1602   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1605   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1606   000EC4  EF66  F007         	goto	u1431
  1607   000EC8  EF69  F007         	goto	u1430
  1608   000ECC                     u1431:
  1609   000ECC  0E01               	movlw	1
  1610   000ECE  EF6A  F007         	goto	u1440
  1611   000ED2                     u1430:
  1612   000ED2  0E00               	movlw	0
  1613   000ED4                     u1440:
  1614   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1615   000ED6                     l2564:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1618   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1619   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1620   000EDA  0FB2               	addlw	low _dbuf
  1621   000EDC  6ED9               	movwf	fsr2l,c
  1622   000EDE  6ADA               	clrf	fsr2h,c
  1623   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1624   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1625   000EE8  0E00               	movlw	0
  1626   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1627   000EEC  0E0A               	movlw	10
  1628   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1629   000EF0  EC37  F00A         	call	___awmod	;wreg free
  1630   000EF4  C001  F007         	movff	?___awmod,abs@a
  1631   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1632   000EFC  ECB2  F00C         	call	_abs	;wreg free
  1633   000F00  5007               	movf	?_abs^0,w,c
  1634   000F02  0F30               	addlw	48
  1635   000F04  6EDF               	movwf	indf2,c
  1636   000F06                     
  1637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1638   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1639   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1640   000F0E  0E00               	movlw	0
  1641   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1642   000F12  0E0A               	movlw	10
  1643   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1644   000F16  EC1B  F009         	call	___awdiv	;wreg free
  1645   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1646   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1647   000F22                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1649   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1650   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1651   000F26                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1653   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1654   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1655   000F2A  B4D8               	btfsc	status,2,c
  1656   000F2C  EF9A  F007         	goto	u1451
  1657   000F30  EF9C  F007         	goto	u1450
  1658   000F34                     u1451:
  1659   000F34  EFA4  F007         	goto	l2574
  1660   000F38                     u1450:
  1661   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1662   000F3A  A4D8               	btfss	status,2,c
  1663   000F3C  EFA2  F007         	goto	u1461
  1664   000F40  EFA4  F007         	goto	u1460
  1665   000F44                     u1461:
  1666   000F44  EF6B  F007         	goto	l2564
  1667   000F48                     u1460:
  1668   000F48                     l2574:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1671   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1672   000F4A  B4D8               	btfsc	status,2,c
  1673   000F4C  EFAA  F007         	goto	u1471
  1674   000F50  EFAC  F007         	goto	u1470
  1675   000F54                     u1471:
  1676   000F54  EFCD  F007         	goto	l2586
  1677   000F58                     u1470:
  1678   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1679   000F5A  B4D8               	btfsc	status,2,c
  1680   000F5C  EFB2  F007         	goto	u1481
  1681   000F60  EFB4  F007         	goto	u1480
  1682   000F64                     u1481:
  1683   000F64  EFCD  F007         	goto	l2586
  1684   000F68                     u1480:
  1685   000F68                     
  1686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1687   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1688   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1689   000F6C  0FB2               	addlw	low _dbuf
  1690   000F6E  6ED9               	movwf	fsr2l,c
  1691   000F70  6ADA               	clrf	fsr2h,c
  1692   000F72  0E2D               	movlw	45
  1693   000F74  6EDF               	movwf	indf2,c
  1694   000F76                     
  1695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1696   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1697   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1698   000F7A  EFCD  F007         	goto	l2586
  1699   000F7E                     l2582:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1702   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1703   000F80  0FB2               	addlw	low _dbuf
  1704   000F82  6ED9               	movwf	fsr2l,c
  1705   000F84  6ADA               	clrf	fsr2h,c
  1706   000F86  50DF               	movf	indf2,w,c
  1707   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1708   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1709   000F8C  6E01               	movwf	fputc@c^0,c
  1710   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1711   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1712   000F94  EC7D  F009         	call	_fputc	;wreg free
  1713   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1714   000F9A                     l2586:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1717   000F9A  0E20               	movlw	32
  1718   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1719   000F9E  A4D8               	btfss	status,2,c
  1720   000FA0  EFD4  F007         	goto	u1491
  1721   000FA4  EFD6  F007         	goto	u1490
  1722   000FA8                     u1491:
  1723   000FA8  EFBF  F007         	goto	l2582
  1724   000FAC                     u1490:
  1725   000FAC                     
  1726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1727   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1728   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1729   000FB4  EFFF  F007         	goto	l1352
  1730   000FB8                     l2588:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1734   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1735   000FBA  6ED9               	movwf	fsr2l,c
  1736   000FBC  6ADA               	clrf	fsr2h,c
  1737   000FBE  2ADF               	incf	indf2,f,c
  1738   000FC0                     
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1741   000FC0  0E00               	movlw	0
  1742   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1743   000FC4  0E00               	movlw	0
  1744   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1745   000FC8  EFFF  F007         	goto	l1352
  1746   000FCC                     l2594:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1749   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1750   000FCE  6ED9               	movwf	fsr2l,c
  1751   000FD0  6ADA               	clrf	fsr2h,c
  1752   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1753   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1754   000FD6  0E0E               	movlw	high __smallconst
  1755   000FD8  6EF7               	movwf	tblptrh,c
  1756   000FDA                     	endif
  1757   000FDA                     	if	0	;tblptru may be non-zero
  1758   000FDA                     	endif
  1759   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1760   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1761   000FDC  6EF8               	movwf	tblptru,c
  1762   000FDE                     	endif
  1763   000FDE  0008               	tblrd		*
  1764   000FE0  50F5               	movf	tablat,w,c
  1765   000FE2  6E01               	movwf	fputc@c^0,c
  1766   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1767   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1768   000FEA  EC7D  F009         	call	_fputc	;wreg free
  1769   000FEE                     
  1770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1771   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1772   000FF0  6ED9               	movwf	fsr2l,c
  1773   000FF2  6ADA               	clrf	fsr2h,c
  1774   000FF4  2ADF               	incf	indf2,f,c
  1775   000FF6                     
  1776                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1777   000FF6  0E00               	movlw	0
  1778   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1779   000FFA  0E01               	movlw	1
  1780   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1781   000FFE                     l1352:
  1782   000FFE  0012               	return		;funcret
  1783   001000                     __end_of_vfpfcnvrt:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _fputc *****************
  1787 ;; Defined at:
  1788 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  c               2    0[COMRAM] int 
  1791 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1792 ;;		 -> sprintf@f(12), 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    0[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1804 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;Total ram usage:        8 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 2
  1811 ;; This function calls:
  1812 ;;		_putch
  1813 ;; This function is called by:
  1814 ;;		_vfpfcnvrt
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text7
  1819   0012FA                     __ptext7:
  1820                           	callstack 0
  1821   0012FA                     _fputc:
  1822                           	callstack 23
  1823   0012FA  5003               	movf	fputc@fp^0,w,c
  1824   0012FC  B4D8               	btfsc	status,2,c
  1825   0012FE  EF83  F009         	goto	u1351
  1826   001302  EF85  F009         	goto	u1350
  1827   001306                     u1351:
  1828   001306  EF8D  F009         	goto	l2528
  1829   00130A                     u1350:
  1830   00130A  5003               	movf	fputc@fp^0,w,c
  1831   00130C  A4D8               	btfss	status,2,c
  1832   00130E  EF8B  F009         	goto	u1361
  1833   001312  EF8D  F009         	goto	u1360
  1834   001316                     u1361:
  1835   001316  EF92  F009         	goto	l2530
  1836   00131A                     u1360:
  1837   00131A                     l2528:
  1838   00131A  5001               	movf	fputc@c^0,w,c
  1839   00131C  EC82  F00D         	call	_putch
  1840   001320  EFD9  F009         	goto	l1377
  1841   001324                     l2530:
  1842   001324  5003               	movf	fputc@fp^0,w,c
  1843   001326  6ED9               	movwf	fsr2l,c
  1844   001328  6ADA               	clrf	fsr2h,c
  1845   00132A  0E0A               	movlw	10
  1846   00132C  26D9               	addwf	fsr2l,f,c
  1847   00132E  50DE               	movf	postinc2,w,c
  1848   001330  10DE               	iorwf	postinc2,w,c
  1849   001332  B4D8               	btfsc	status,2,c
  1850   001334  EF9E  F009         	goto	u1371
  1851   001338  EFA0  F009         	goto	u1370
  1852   00133C                     u1371:
  1853   00133C  EFB9  F009         	goto	l2534
  1854   001340                     u1370:
  1855   001340  5003               	movf	fputc@fp^0,w,c
  1856   001342  6ED9               	movwf	fsr2l,c
  1857   001344  6ADA               	clrf	fsr2h,c
  1858   001346  0E0A               	movlw	10
  1859   001348  26D9               	addwf	fsr2l,f,c
  1860   00134A  5003               	movf	fputc@fp^0,w,c
  1861   00134C  6EE1               	movwf	fsr1l,c
  1862   00134E  6AE2               	clrf	fsr1h,c
  1863   001350  0E03               	movlw	3
  1864   001352  26E1               	addwf	fsr1l,f,c
  1865   001354  50DE               	movf	postinc2,w,c
  1866   001356  5CE6               	subwf	postinc1,w,c
  1867   001358  50E6               	movf	postinc1,w,c
  1868   00135A  0A80               	xorlw	128
  1869   00135C  6E08               	movwf	(??_fputc+4)^0,c
  1870   00135E  50DE               	movf	postinc2,w,c
  1871   001360  0A80               	xorlw	128
  1872   001362  5808               	subwfb	(??_fputc+4)^0,w,c
  1873   001364  B0D8               	btfsc	status,0,c
  1874   001366  EFB7  F009         	goto	u1381
  1875   00136A  EFB9  F009         	goto	u1380
  1876   00136E                     u1381:
  1877   00136E  EFD9  F009         	goto	l1377
  1878   001372                     u1380:
  1879   001372                     l2534:
  1880   001372  5003               	movf	fputc@fp^0,w,c
  1881   001374  6ED9               	movwf	fsr2l,c
  1882   001376  6ADA               	clrf	fsr2h,c
  1883   001378  0E03               	movlw	3
  1884   00137A  26D9               	addwf	fsr2l,f,c
  1885   00137C  CFDE F004          	movff	postinc2,??_fputc
  1886   001380  CFDD F005          	movff	postdec2,??_fputc+1
  1887   001384  5003               	movf	fputc@fp^0,w,c
  1888   001386  6ED9               	movwf	fsr2l,c
  1889   001388  6ADA               	clrf	fsr2h,c
  1890   00138A  CFDE F006          	movff	postinc2,??_fputc+2
  1891   00138E  CFDD F007          	movff	postdec2,??_fputc+3
  1892   001392  5004               	movf	??_fputc^0,w,c
  1893   001394  2406               	addwf	(??_fputc+2)^0,w,c
  1894   001396  6ED9               	movwf	fsr2l,c
  1895   001398  5005               	movf	(??_fputc+1)^0,w,c
  1896   00139A  2007               	addwfc	(??_fputc+3)^0,w,c
  1897   00139C  6EDA               	movwf	fsr2h,c
  1898   00139E  C001  FFDF         	movff	fputc@c,indf2
  1899   0013A2  5003               	movf	fputc@fp^0,w,c
  1900   0013A4  6ED9               	movwf	fsr2l,c
  1901   0013A6  6ADA               	clrf	fsr2h,c
  1902   0013A8  0E03               	movlw	3
  1903   0013AA  26D9               	addwf	fsr2l,f,c
  1904   0013AC  2ADE               	incf	postinc2,f,c
  1905   0013AE  0E00               	movlw	0
  1906   0013B0  22DD               	addwfc	postdec2,f,c
  1907   0013B2                     l1377:
  1908   0013B2  0012               	return		;funcret
  1909   0013B4                     __end_of_fputc:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _putch *****************
  1913 ;; Defined at:
  1914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  c               1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  c               1    0[COMRAM] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_fputc
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text8
  1943   001B04                     __ptext8:
  1944                           	callstack 0
  1945   001B04                     _putch:
  1946                           	callstack 23
  1947   001B04  0012               	return		;funcret
  1948   001B06                     __end_of_putch:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _abs *****************
  1952 ;; Defined at:
  1953 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  a               2    6[COMRAM] int 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    6[COMRAM] int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;Total ram usage:        4 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_vfpfcnvrt
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text9
  1982   001964                     __ptext9:
  1983                           	callstack 0
  1984   001964                     _abs:
  1985                           	callstack 24
  1986   001964  BE08               	btfsc	(abs@a+1)^0,7,c
  1987   001966  EFB7  F00C         	goto	u1391
  1988   00196A  EFB9  F00C         	goto	u1390
  1989   00196E                     u1391:
  1990   00196E  EFBF  F00C         	goto	l1362
  1991   001972                     u1390:
  1992   001972  C007  F007         	movff	abs@a,?_abs
  1993   001976  C008  F008         	movff	abs@a+1,?_abs+1
  1994   00197A  EFCB  F00C         	goto	l1365
  1995   00197E                     l1362:
  1996   00197E  C007  F009         	movff	abs@a,??_abs
  1997   001982  C008  F00A         	movff	abs@a+1,??_abs+1
  1998   001986  1E09               	comf	??_abs^0,f,c
  1999   001988  1E0A               	comf	(??_abs+1)^0,f,c
  2000   00198A  4A09               	infsnz	??_abs^0,f,c
  2001   00198C  2A0A               	incf	(??_abs+1)^0,f,c
  2002   00198E  C009  F007         	movff	??_abs,?_abs
  2003   001992  C00A  F008         	movff	??_abs+1,?_abs+1
  2004   001996                     l1365:
  2005   001996  0012               	return		;funcret
  2006   001998                     __end_of_abs:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function ___awmod *****************
  2010 ;; Defined at:
  2011 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  dividend        2    0[COMRAM] int 
  2014 ;;  divisor         2    2[COMRAM] int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  sign            1    5[COMRAM] unsigned char 
  2017 ;;  counter         1    4[COMRAM] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  2    0[COMRAM] int 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2031 ;;Total ram usage:        6 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_vfpfcnvrt
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text10
  2042   00146E                     __ptext10:
  2043                           	callstack 0
  2044   00146E                     ___awmod:
  2045                           	callstack 24
  2046   00146E  0E00               	movlw	0
  2047   001470  6E06               	movwf	___awmod@sign^0,c
  2048   001472  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2049   001474  EF40  F00A         	goto	u1290
  2050   001478  EF3E  F00A         	goto	u1291
  2051   00147C                     u1291:
  2052   00147C  EF46  F00A         	goto	l2496
  2053   001480                     u1290:
  2054   001480  6C01               	negf	___awmod@dividend^0,c
  2055   001482  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2056   001484  B0D8               	btfsc	status,0,c
  2057   001486  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2058   001488  0E01               	movlw	1
  2059   00148A  6E06               	movwf	___awmod@sign^0,c
  2060   00148C                     l2496:
  2061   00148C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2062   00148E  EF4D  F00A         	goto	u1300
  2063   001492  EF4B  F00A         	goto	u1301
  2064   001496                     u1301:
  2065   001496  EF51  F00A         	goto	l2500
  2066   00149A                     u1300:
  2067   00149A  6C03               	negf	___awmod@divisor^0,c
  2068   00149C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2069   00149E  B0D8               	btfsc	status,0,c
  2070   0014A0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2071   0014A2                     l2500:
  2072   0014A2  5003               	movf	___awmod@divisor^0,w,c
  2073   0014A4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2074   0014A6  B4D8               	btfsc	status,2,c
  2075   0014A8  EF58  F00A         	goto	u1311
  2076   0014AC  EF5A  F00A         	goto	u1310
  2077   0014B0                     u1311:
  2078   0014B0  EF7E  F00A         	goto	l2516
  2079   0014B4                     u1310:
  2080   0014B4  0E01               	movlw	1
  2081   0014B6  6E05               	movwf	___awmod@counter^0,c
  2082   0014B8  EF62  F00A         	goto	l2506
  2083   0014BC                     l2504:
  2084   0014BC  90D8               	bcf	status,0,c
  2085   0014BE  3603               	rlcf	___awmod@divisor^0,f,c
  2086   0014C0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2087   0014C2  2A05               	incf	___awmod@counter^0,f,c
  2088   0014C4                     l2506:
  2089   0014C4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2090   0014C6  EF67  F00A         	goto	u1321
  2091   0014CA  EF69  F00A         	goto	u1320
  2092   0014CE                     u1321:
  2093   0014CE  EF5E  F00A         	goto	l2504
  2094   0014D2                     u1320:
  2095   0014D2                     l2508:
  2096   0014D2  5003               	movf	___awmod@divisor^0,w,c
  2097   0014D4  5C01               	subwf	___awmod@dividend^0,w,c
  2098   0014D6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2099   0014D8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2100   0014DA  A0D8               	btfss	status,0,c
  2101   0014DC  EF72  F00A         	goto	u1331
  2102   0014E0  EF74  F00A         	goto	u1330
  2103   0014E4                     u1331:
  2104   0014E4  EF78  F00A         	goto	l2512
  2105   0014E8                     u1330:
  2106   0014E8  5003               	movf	___awmod@divisor^0,w,c
  2107   0014EA  5E01               	subwf	___awmod@dividend^0,f,c
  2108   0014EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  2109   0014EE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2110   0014F0                     l2512:
  2111   0014F0  90D8               	bcf	status,0,c
  2112   0014F2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2113   0014F4  3203               	rrcf	___awmod@divisor^0,f,c
  2114   0014F6  2E05               	decfsz	___awmod@counter^0,f,c
  2115   0014F8  EF69  F00A         	goto	l2508
  2116   0014FC                     l2516:
  2117   0014FC  5006               	movf	___awmod@sign^0,w,c
  2118   0014FE  B4D8               	btfsc	status,2,c
  2119   001500  EF84  F00A         	goto	u1341
  2120   001504  EF86  F00A         	goto	u1340
  2121   001508                     u1341:
  2122   001508  EF8A  F00A         	goto	l2520
  2123   00150C                     u1340:
  2124   00150C  6C01               	negf	___awmod@dividend^0,c
  2125   00150E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2126   001510  B0D8               	btfsc	status,0,c
  2127   001512  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2128   001514                     l2520:
  2129   001514  C001  F001         	movff	___awmod@dividend,?___awmod
  2130   001518  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2131   00151C  0012               	return		;funcret
  2132   00151E                     __end_of___awmod:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function ___awdiv *****************
  2136 ;; Defined at:
  2137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  dividend        2    0[COMRAM] int 
  2140 ;;  divisor         2    2[COMRAM] int 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  quotient        2    6[COMRAM] int 
  2143 ;;  sign            1    5[COMRAM] unsigned char 
  2144 ;;  counter         1    4[COMRAM] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  2    0[COMRAM] int 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;Total ram usage:        8 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_vfpfcnvrt
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text11
  2169   001236                     __ptext11:
  2170                           	callstack 0
  2171   001236                     ___awdiv:
  2172                           	callstack 24
  2173   001236  0E00               	movlw	0
  2174   001238  6E06               	movwf	___awdiv@sign^0,c
  2175   00123A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2176   00123C  EF24  F009         	goto	u1230
  2177   001240  EF22  F009         	goto	u1231
  2178   001244                     u1231:
  2179   001244  EF2A  F009         	goto	l2452
  2180   001248                     u1230:
  2181   001248  6C03               	negf	___awdiv@divisor^0,c
  2182   00124A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2183   00124C  B0D8               	btfsc	status,0,c
  2184   00124E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2185   001250  0E01               	movlw	1
  2186   001252  6E06               	movwf	___awdiv@sign^0,c
  2187   001254                     l2452:
  2188   001254  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2189   001256  EF31  F009         	goto	u1240
  2190   00125A  EF2F  F009         	goto	u1241
  2191   00125E                     u1241:
  2192   00125E  EF37  F009         	goto	l2458
  2193   001262                     u1240:
  2194   001262  6C01               	negf	___awdiv@dividend^0,c
  2195   001264  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2196   001266  B0D8               	btfsc	status,0,c
  2197   001268  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2198   00126A  0E01               	movlw	1
  2199   00126C  1A06               	xorwf	___awdiv@sign^0,f,c
  2200   00126E                     l2458:
  2201   00126E  0E00               	movlw	0
  2202   001270  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2203   001272  0E00               	movlw	0
  2204   001274  6E07               	movwf	___awdiv@quotient^0,c
  2205   001276  5003               	movf	___awdiv@divisor^0,w,c
  2206   001278  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2207   00127A  B4D8               	btfsc	status,2,c
  2208   00127C  EF42  F009         	goto	u1251
  2209   001280  EF44  F009         	goto	u1250
  2210   001284                     u1251:
  2211   001284  EF6C  F009         	goto	l2480
  2212   001288                     u1250:
  2213   001288  0E01               	movlw	1
  2214   00128A  6E05               	movwf	___awdiv@counter^0,c
  2215   00128C  EF4C  F009         	goto	l2466
  2216   001290                     l2464:
  2217   001290  90D8               	bcf	status,0,c
  2218   001292  3603               	rlcf	___awdiv@divisor^0,f,c
  2219   001294  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2220   001296  2A05               	incf	___awdiv@counter^0,f,c
  2221   001298                     l2466:
  2222   001298  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2223   00129A  EF51  F009         	goto	u1261
  2224   00129E  EF53  F009         	goto	u1260
  2225   0012A2                     u1261:
  2226   0012A2  EF48  F009         	goto	l2464
  2227   0012A6                     u1260:
  2228   0012A6                     l2468:
  2229   0012A6  90D8               	bcf	status,0,c
  2230   0012A8  3607               	rlcf	___awdiv@quotient^0,f,c
  2231   0012AA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2232   0012AC  5003               	movf	___awdiv@divisor^0,w,c
  2233   0012AE  5C01               	subwf	___awdiv@dividend^0,w,c
  2234   0012B0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2235   0012B2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2236   0012B4  A0D8               	btfss	status,0,c
  2237   0012B6  EF5F  F009         	goto	u1271
  2238   0012BA  EF61  F009         	goto	u1270
  2239   0012BE                     u1271:
  2240   0012BE  EF66  F009         	goto	l2476
  2241   0012C2                     u1270:
  2242   0012C2  5003               	movf	___awdiv@divisor^0,w,c
  2243   0012C4  5E01               	subwf	___awdiv@dividend^0,f,c
  2244   0012C6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2245   0012C8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2246   0012CA  8007               	bsf	___awdiv@quotient^0,0,c
  2247   0012CC                     l2476:
  2248   0012CC  90D8               	bcf	status,0,c
  2249   0012CE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2250   0012D0  3203               	rrcf	___awdiv@divisor^0,f,c
  2251   0012D2  2E05               	decfsz	___awdiv@counter^0,f,c
  2252   0012D4  EF53  F009         	goto	l2468
  2253   0012D8                     l2480:
  2254   0012D8  5006               	movf	___awdiv@sign^0,w,c
  2255   0012DA  B4D8               	btfsc	status,2,c
  2256   0012DC  EF72  F009         	goto	u1281
  2257   0012E0  EF74  F009         	goto	u1280
  2258   0012E4                     u1281:
  2259   0012E4  EF78  F009         	goto	l2484
  2260   0012E8                     u1280:
  2261   0012E8  6C07               	negf	___awdiv@quotient^0,c
  2262   0012EA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2263   0012EC  B0D8               	btfsc	status,0,c
  2264   0012EE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2265   0012F0                     l2484:
  2266   0012F0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2267   0012F4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2268   0012F8  0012               	return		;funcret
  2269   0012FA                     __end_of___awdiv:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _sendStringSerial4 *****************
  2273 ;; Defined at:
  2274 ;;		line 35 in file "serial.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  string          2    1[COMRAM] PTR unsigned char 
  2277 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;Total ram usage:        2 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 2
  2296 ;; This function calls:
  2297 ;;		_sendCharSerial4
  2298 ;; This function is called by:
  2299 ;;		_sendIntSerial4
  2300 ;;		_sendArrayCharSerial4
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text12
  2305   00173E                     __ptext12:
  2306                           	callstack 0
  2307   00173E                     _sendStringSerial4:
  2308                           	callstack 26
  2309   00173E                     
  2310                           ;serial.c: 37:     while(*string != 0){
  2311   00173E  EFB6  F00B         	goto	l2664
  2312   001742                     l2660:
  2313                           
  2314                           ;serial.c: 38:   sendCharSerial4(*string++);
  2315   001742  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2316   001746  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2317   00174A  0E00               	movlw	low (__smallconst shr (0+16))
  2318   00174C  6EF8               	movwf	tblptru,c
  2319   00174E  0E0D               	movlw	(high __ramtop+-1)
  2320   001750  64F7               	cpfsgt	tblptrh,c
  2321   001752  D003               	bra	u1577
  2322   001754  0008               	tblrd		*
  2323   001756  50F5               	movf	tablat,w,c
  2324   001758  D005               	bra	u1570
  2325   00175A                     u1577:
  2326   00175A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2327   00175E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2328   001762  50EF               	movf	indf0,w,c
  2329   001764                     u1570:
  2330   001764  EC66  F00D         	call	_sendCharSerial4
  2331   001768  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2332   00176A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2333   00176C                     l2664:
  2334                           
  2335                           ;serial.c: 37:     while(*string != 0){
  2336   00176C  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2337   001770  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2338   001774  0E00               	movlw	low (__smallconst shr (0+16))
  2339   001776  6EF8               	movwf	tblptru,c
  2340   001778  0E0D               	movlw	(high __ramtop+-1)
  2341   00177A  64F7               	cpfsgt	tblptrh,c
  2342   00177C  D003               	bra	u1587
  2343   00177E  0008               	tblrd		*
  2344   001780  50F5               	movf	tablat,w,c
  2345   001782  D005               	bra	u1580
  2346   001784                     u1587:
  2347   001784  CFF6 FFE9          	movff	tblptrl,fsr0l
  2348   001788  CFF7 FFEA          	movff	tblptrh,fsr0h
  2349   00178C  50EF               	movf	indf0,w,c
  2350   00178E                     u1580:
  2351   00178E  0900               	iorlw	0
  2352   001790  A4D8               	btfss	status,2,c
  2353   001792  EFCD  F00B         	goto	u1591
  2354   001796  EFCF  F00B         	goto	u1590
  2355   00179A                     u1591:
  2356   00179A  EFA1  F00B         	goto	l2660
  2357   00179E                     u1590:
  2358   00179E  0012               	return		;funcret
  2359   0017A0                     __end_of_sendStringSerial4:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _sendCharSerial4 *****************
  2363 ;; Defined at:
  2364 ;;		line 29 in file "serial.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  charToSend      1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  charToSend      1    0[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_sendStringSerial4
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text13
  2393   001ACC                     __ptext13:
  2394                           	callstack 0
  2395   001ACC                     _sendCharSerial4:
  2396                           	callstack 26
  2397                           
  2398                           ;incstack = 0
  2399                           ;sendCharSerial4@charToSend stored from wreg
  2400   001ACC  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2401   001ACE                     l397:
  2402   001ACE  010E               	movlb	14	; () banked
  2403   001AD0  A537               	btfss	55,2,b	;volatile
  2404   001AD2  EF6D  F00D         	goto	u1501
  2405   001AD6  EF6F  F00D         	goto	u1500
  2406   001ADA                     u1501:
  2407   001ADA  EF67  F00D         	goto	l397
  2408   001ADE                     u1500:
  2409   001ADE                     
  2410                           ; BSR set to: 14
  2411                           ;serial.c: 31:     TX4REG = charToSend;
  2412   001ADE  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2413   001AE2                     
  2414                           ; BSR set to: 14
  2415   001AE2  0012               	return		;funcret
  2416   001AE4                     __end_of_sendCharSerial4:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _readTrail *****************
  2420 ;; Defined at:
  2421 ;;		line 44 in file "timers.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  tH              1    0[COMRAM] PTR unsigned char 
  2424 ;;		 -> returnToSender@timerH(1), 
  2425 ;;  tL              1    1[COMRAM] PTR unsigned char 
  2426 ;;		 -> returnToSender@timerL(1), 
  2427 ;;  man             1    2[COMRAM] PTR unsigned char 
  2428 ;;		 -> returnToSender@mann(1), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2440 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;Total ram usage:        3 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_returnToSender
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text14
  2455   001928                     __ptext14:
  2456                           	callstack 0
  2457   001928                     _readTrail:
  2458                           	callstack 28
  2459   001928                     
  2460                           ;timers.c: 45:     timer_high_pointer --;
  2461   001928  0100               	movlb	0	; () banked
  2462   00192A  0771               	decf	_timer_high_pointer& (0+255),f,b
  2463                           
  2464                           ;timers.c: 46:     timer_low_pointer --;
  2465   00192C  0770               	decf	_timer_low_pointer& (0+255),f,b
  2466                           
  2467                           ;timers.c: 47:     manoeuvre_pointer --;
  2468   00192E  076F               	decf	_manoeuvre_pointer& (0+255),f,b
  2469   001930                     
  2470                           ; BSR set to: 0
  2471                           ;timers.c: 49:     *tH = *timer_high_pointer;
  2472   001930  5171               	movf	_timer_high_pointer& (0+255),w,b
  2473   001932  6ED9               	movwf	fsr2l,c
  2474   001934  6ADA               	clrf	fsr2h,c
  2475   001936  5001               	movf	readTrail@tH^0,w,c
  2476   001938  6EE1               	movwf	fsr1l,c
  2477   00193A  6AE2               	clrf	fsr1h,c
  2478   00193C  CFDF FFE7          	movff	indf2,indf1
  2479   001940                     
  2480                           ; BSR set to: 0
  2481                           ;timers.c: 50:     *tL = *timer_low_pointer;
  2482   001940  5170               	movf	_timer_low_pointer& (0+255),w,b
  2483   001942  6ED9               	movwf	fsr2l,c
  2484   001944  6ADA               	clrf	fsr2h,c
  2485   001946  5002               	movf	readTrail@tL^0,w,c
  2486   001948  6EE1               	movwf	fsr1l,c
  2487   00194A  6AE2               	clrf	fsr1h,c
  2488   00194C  CFDF FFE7          	movff	indf2,indf1
  2489   001950                     
  2490                           ; BSR set to: 0
  2491                           ;timers.c: 51:     *man = *manoeuvre_pointer;
  2492   001950  516F               	movf	_manoeuvre_pointer& (0+255),w,b
  2493   001952  6ED9               	movwf	fsr2l,c
  2494   001954  6ADA               	clrf	fsr2h,c
  2495   001956  5003               	movf	readTrail@man^0,w,c
  2496   001958  6EE1               	movwf	fsr1l,c
  2497   00195A  6AE2               	clrf	fsr1h,c
  2498   00195C  CFDF FFE7          	movff	indf2,indf1
  2499   001960                     
  2500                           ; BSR set to: 0
  2501                           ;timers.c: 53:     manoeuvre_count --;
  2502   001960  076E               	decf	_manoeuvre_count& (0+255),f,b
  2503   001962                     
  2504                           ; BSR set to: 0
  2505   001962  0012               	return		;funcret
  2506   001964                     __end_of_readTrail:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _fullSpeedAhead *****************
  2510 ;; Defined at:
  2511 ;;		line 134 in file "dc_motor.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  2514 ;;		 -> main@motorL(9), 
  2515 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  2516 ;;		 -> main@motorR(9), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  rightGear       1   22[COMRAM] unsigned char 
  2519 ;;  leftGear        1   21[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;Total ram usage:        5 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 3
  2536 ;; This function calls:
  2537 ;;		_setMotorPWM
  2538 ;; This function is called by:
  2539 ;;		_returnToSender
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text15
  2544   0013B4                     __ptext15:
  2545                           	callstack 0
  2546   0013B4                     _fullSpeedAhead:
  2547                           	callstack 26
  2548   0013B4  0E14               	movlw	20
  2549   0013B6  6E16               	movwf	fullSpeedAhead@leftGear^0,c
  2550   0013B8  0E14               	movlw	20
  2551   0013BA  6E17               	movwf	fullSpeedAhead@rightGear^0,c
  2552   0013BC                     
  2553                           ;dc_motor.c: 138:     (mL -> direction) = 1;
  2554   0013BC  5013               	movf	fullSpeedAhead@mL^0,w,c
  2555   0013BE  6ED9               	movwf	fsr2l,c
  2556   0013C0  6ADA               	clrf	fsr2h,c
  2557   0013C2  0E01               	movlw	1
  2558   0013C4  26D9               	addwf	fsr2l,f,c
  2559   0013C6  0E01               	movlw	1
  2560   0013C8  6EDF               	movwf	indf2,c
  2561   0013CA                     
  2562                           ;dc_motor.c: 139:     (mR -> direction) = 1;
  2563   0013CA  5014               	movf	fullSpeedAhead@mR^0,w,c
  2564   0013CC  6ED9               	movwf	fsr2l,c
  2565   0013CE  6ADA               	clrf	fsr2h,c
  2566   0013D0  0E01               	movlw	1
  2567   0013D2  26D9               	addwf	fsr2l,f,c
  2568   0013D4  0E01               	movlw	1
  2569   0013D6  6EDF               	movwf	indf2,c
  2570                           
  2571                           ;dc_motor.c: 140:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  2572   0013D8  EF1E  F00A         	goto	l2764
  2573   0013DC                     l2752:
  2574                           
  2575                           ;dc_motor.c: 141:         if (mL->power<leftGear) {mL->power++;}
  2576   0013DC  5013               	movf	fullSpeedAhead@mL^0,w,c
  2577   0013DE  6ED9               	movwf	fsr2l,c
  2578   0013E0  6ADA               	clrf	fsr2h,c
  2579   0013E2  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  2580   0013E4  5CDE               	subwf	postinc2,w,c
  2581   0013E6  B0D8               	btfsc	status,0,c
  2582   0013E8  EFF8  F009         	goto	u1721
  2583   0013EC  EFFA  F009         	goto	u1720
  2584   0013F0                     u1721:
  2585   0013F0  EFFE  F009         	goto	l180
  2586   0013F4                     u1720:
  2587   0013F4  5013               	movf	fullSpeedAhead@mL^0,w,c
  2588   0013F6  6ED9               	movwf	fsr2l,c
  2589   0013F8  6ADA               	clrf	fsr2h,c
  2590   0013FA  2ADF               	incf	indf2,f,c
  2591   0013FC                     l180:
  2592                           
  2593                           ;dc_motor.c: 142:         if (mR->power<rightGear) {mR->power++;}
  2594   0013FC  5014               	movf	fullSpeedAhead@mR^0,w,c
  2595   0013FE  6ED9               	movwf	fsr2l,c
  2596   001400  6ADA               	clrf	fsr2h,c
  2597   001402  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  2598   001404  5CDE               	subwf	postinc2,w,c
  2599   001406  B0D8               	btfsc	status,0,c
  2600   001408  EF08  F00A         	goto	u1731
  2601   00140C  EF0A  F00A         	goto	u1730
  2602   001410                     u1731:
  2603   001410  EF0E  F00A         	goto	l2758
  2604   001414                     u1730:
  2605   001414  5014               	movf	fullSpeedAhead@mR^0,w,c
  2606   001416  6ED9               	movwf	fsr2l,c
  2607   001418  6ADA               	clrf	fsr2h,c
  2608   00141A  2ADF               	incf	indf2,f,c
  2609   00141C                     l2758:
  2610                           
  2611                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2612   00141C  C013  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2613   001420  EC00  F008         	call	_setMotorPWM	;wreg free
  2614   001424                     
  2615                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2616   001424  C014  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2617   001428  EC00  F008         	call	_setMotorPWM	;wreg free
  2618   00142C                     
  2619                           ;dc_motor.c: 145:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  2620   00142C  0EA7               	movlw	167
  2621   00142E  6E15               	movwf	??_fullSpeedAhead^0,c
  2622   001430  0E3A               	movlw	58
  2623   001432                     u2327:
  2624   001432  2EE8               	decfsz	wreg,f,c
  2625   001434  D7FE               	bra	u2327
  2626   001436  2E15               	decfsz	??_fullSpeedAhead^0,f,c
  2627   001438  D7FC               	bra	u2327
  2628   00143A  D000               	nop2	
  2629   00143C                     l2764:
  2630                           
  2631                           ;dc_motor.c: 140:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  2632   00143C  5013               	movf	fullSpeedAhead@mL^0,w,c
  2633   00143E  6ED9               	movwf	fsr2l,c
  2634   001440  6ADA               	clrf	fsr2h,c
  2635   001442  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  2636   001444  5CDE               	subwf	postinc2,w,c
  2637   001446  A0D8               	btfss	status,0,c
  2638   001448  EF28  F00A         	goto	u1741
  2639   00144C  EF2A  F00A         	goto	u1740
  2640   001450                     u1741:
  2641   001450  EFEE  F009         	goto	l2752
  2642   001454                     u1740:
  2643   001454  5014               	movf	fullSpeedAhead@mR^0,w,c
  2644   001456  6ED9               	movwf	fsr2l,c
  2645   001458  6ADA               	clrf	fsr2h,c
  2646   00145A  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  2647   00145C  5CDE               	subwf	postinc2,w,c
  2648   00145E  A0D8               	btfss	status,0,c
  2649   001460  EF34  F00A         	goto	u1751
  2650   001464  EF36  F00A         	goto	u1750
  2651   001468                     u1751:
  2652   001468  EFEE  F009         	goto	l2752
  2653   00146C                     u1750:
  2654   00146C  0012               	return		;funcret
  2655   00146E                     __end_of_fullSpeedAhead:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _setMotorPWM *****************
  2659 ;; Defined at:
  2660 ;;		line 65 in file "dc_motor.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  m               1   13[COMRAM] PTR struct DC_motor
  2663 ;;		 -> main@motorR(9), main@motorL(9), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  negDuty         1   17[COMRAM] unsigned char 
  2666 ;;  posDuty         1   16[COMRAM] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2676 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;Total ram usage:        5 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 2
  2683 ;; This function calls:
  2684 ;;		___lwdiv
  2685 ;;		___wmul
  2686 ;; This function is called by:
  2687 ;;		_stop
  2688 ;;		_fullSpeedAhead
  2689 ;;		_turnLeft
  2690 ;;		_turnRight
  2691 ;;		_fullSpeedReverse
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text16
  2696   001000                     __ptext16:
  2697                           	callstack 0
  2698   001000                     _setMotorPWM:
  2699                           	callstack 26
  2700   001000                     
  2701                           ;dc_motor.c: 65: void setMotorPWM(DC_motor *m);dc_motor.c: 66: {;dc_motor.c: 67:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 69:     if(m->brakemode) {
  2702   001000  500E               	movf	setMotorPWM@m^0,w,c
  2703   001002  6ED9               	movwf	fsr2l,c
  2704   001004  6ADA               	clrf	fsr2h,c
  2705   001006  0E02               	movlw	2
  2706   001008  26D9               	addwf	fsr2l,f,c
  2707   00100A  50DF               	movf	indf2,w,c
  2708   00100C  B4D8               	btfsc	status,2,c
  2709   00100E  EF0B  F008         	goto	u1551
  2710   001012  EF0D  F008         	goto	u1550
  2711   001016                     u1551:
  2712   001016  EF3D  F008         	goto	l2648
  2713   00101A                     u1550:
  2714   00101A                     
  2715                           ;dc_motor.c: 70:         posDuty=(unsigned char)(m->PWMperiod - ((unsigned int)(m->power
      +                          )*(m->PWMperiod))/100);
  2716   00101A  500E               	movf	setMotorPWM@m^0,w,c
  2717   00101C  6ED9               	movwf	fsr2l,c
  2718   00101E  6ADA               	clrf	fsr2h,c
  2719   001020  50DF               	movf	indf2,w,c
  2720   001022  6E0F               	movwf	??_setMotorPWM^0,c
  2721   001024  500F               	movf	??_setMotorPWM^0,w,c
  2722   001026  6E01               	movwf	___wmul@multiplier^0,c
  2723   001028  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2724   00102A  500E               	movf	setMotorPWM@m^0,w,c
  2725   00102C  6ED9               	movwf	fsr2l,c
  2726   00102E  6ADA               	clrf	fsr2h,c
  2727   001030  0E03               	movlw	3
  2728   001032  26D9               	addwf	fsr2l,f,c
  2729   001034  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2730   001038  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2731   00103C  EC23  F00D         	call	___wmul	;wreg free
  2732   001040  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2733   001044  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2734   001048  0E00               	movlw	0
  2735   00104A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2736   00104C  0E64               	movlw	100
  2737   00104E  6E09               	movwf	___lwdiv@divisor^0,c
  2738   001050  EC65  F00B         	call	___lwdiv	;wreg free
  2739   001054  500E               	movf	setMotorPWM@m^0,w,c
  2740   001056  6ED9               	movwf	fsr2l,c
  2741   001058  6ADA               	clrf	fsr2h,c
  2742   00105A  0E03               	movlw	3
  2743   00105C  26D9               	addwf	fsr2l,f,c
  2744   00105E  50DF               	movf	indf2,w,c
  2745   001060  6E10               	movwf	(??_setMotorPWM+1)^0,c
  2746   001062  5007               	movf	?___lwdiv^0,w,c
  2747   001064  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  2748   001066  6E11               	movwf	setMotorPWM@posDuty^0,c
  2749   001068                     
  2750                           ;dc_motor.c: 71:         negDuty=(unsigned char)(m->PWMperiod);
  2751   001068  500E               	movf	setMotorPWM@m^0,w,c
  2752   00106A  6ED9               	movwf	fsr2l,c
  2753   00106C  6ADA               	clrf	fsr2h,c
  2754   00106E  0E03               	movlw	3
  2755   001070  26D9               	addwf	fsr2l,f,c
  2756   001072  50DF               	movf	indf2,w,c
  2757   001074  6E12               	movwf	setMotorPWM@negDuty^0,c
  2758                           
  2759                           ;dc_motor.c: 72:     }
  2760   001076  EF5E  F008         	goto	l2652
  2761   00107A                     l2648:
  2762                           
  2763                           ;dc_motor.c: 74:         posDuty=0;
  2764   00107A  0E00               	movlw	0
  2765   00107C  6E11               	movwf	setMotorPWM@posDuty^0,c
  2766   00107E                     
  2767                           ;dc_motor.c: 75:   negDuty=(unsigned char)(((unsigned int)(m->power)*(m->PWMperiod))/100
      +                          );
  2768   00107E  500E               	movf	setMotorPWM@m^0,w,c
  2769   001080  6ED9               	movwf	fsr2l,c
  2770   001082  6ADA               	clrf	fsr2h,c
  2771   001084  50DF               	movf	indf2,w,c
  2772   001086  6E0F               	movwf	??_setMotorPWM^0,c
  2773   001088  500F               	movf	??_setMotorPWM^0,w,c
  2774   00108A  6E01               	movwf	___wmul@multiplier^0,c
  2775   00108C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2776   00108E  500E               	movf	setMotorPWM@m^0,w,c
  2777   001090  6ED9               	movwf	fsr2l,c
  2778   001092  6ADA               	clrf	fsr2h,c
  2779   001094  0E03               	movlw	3
  2780   001096  26D9               	addwf	fsr2l,f,c
  2781   001098  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2782   00109C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2783   0010A0  EC23  F00D         	call	___wmul	;wreg free
  2784   0010A4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2785   0010A8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2786   0010AC  0E00               	movlw	0
  2787   0010AE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2788   0010B0  0E64               	movlw	100
  2789   0010B2  6E09               	movwf	___lwdiv@divisor^0,c
  2790   0010B4  EC65  F00B         	call	___lwdiv	;wreg free
  2791   0010B8  5007               	movf	?___lwdiv^0,w,c
  2792   0010BA  6E12               	movwf	setMotorPWM@negDuty^0,c
  2793   0010BC                     l2652:
  2794                           
  2795                           ;dc_motor.c: 78:     if (m->direction) {
  2796   0010BC  500E               	movf	setMotorPWM@m^0,w,c
  2797   0010BE  6ED9               	movwf	fsr2l,c
  2798   0010C0  6ADA               	clrf	fsr2h,c
  2799   0010C2  0E01               	movlw	1
  2800   0010C4  26D9               	addwf	fsr2l,f,c
  2801   0010C6  50DF               	movf	indf2,w,c
  2802   0010C8  B4D8               	btfsc	status,2,c
  2803   0010CA  EF69  F008         	goto	u1561
  2804   0010CE  EF6B  F008         	goto	u1560
  2805   0010D2                     u1561:
  2806   0010D2  EF8B  F008         	goto	l2656
  2807   0010D6                     u1560:
  2808   0010D6                     
  2809                           ;dc_motor.c: 79:         *(m->posDutyHighByte)=posDuty;
  2810   0010D6  500E               	movf	setMotorPWM@m^0,w,c
  2811   0010D8  6ED9               	movwf	fsr2l,c
  2812   0010DA  6ADA               	clrf	fsr2h,c
  2813   0010DC  0E05               	movlw	5
  2814   0010DE  26D9               	addwf	fsr2l,f,c
  2815   0010E0  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2816   0010E4  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2817   0010E8  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2818   0010EC  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2819   0010F0  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  2820                           
  2821                           ;dc_motor.c: 80:         *(m->negDutyHighByte)=negDuty;
  2822   0010F4  500E               	movf	setMotorPWM@m^0,w,c
  2823   0010F6  6ED9               	movwf	fsr2l,c
  2824   0010F8  6ADA               	clrf	fsr2h,c
  2825   0010FA  0E07               	movlw	7
  2826   0010FC  26D9               	addwf	fsr2l,f,c
  2827   0010FE  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2828   001102  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2829   001106  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2830   00110A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2831   00110E  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  2832                           
  2833                           ;dc_motor.c: 81:     } else {
  2834   001112  EFA9  F008         	goto	l151
  2835   001116                     l2656:
  2836                           
  2837                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
  2838   001116  500E               	movf	setMotorPWM@m^0,w,c
  2839   001118  6ED9               	movwf	fsr2l,c
  2840   00111A  6ADA               	clrf	fsr2h,c
  2841   00111C  0E05               	movlw	5
  2842   00111E  26D9               	addwf	fsr2l,f,c
  2843   001120  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2844   001124  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2845   001128  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2846   00112C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2847   001130  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  2848                           
  2849                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
  2850   001134  500E               	movf	setMotorPWM@m^0,w,c
  2851   001136  6ED9               	movwf	fsr2l,c
  2852   001138  6ADA               	clrf	fsr2h,c
  2853   00113A  0E07               	movlw	7
  2854   00113C  26D9               	addwf	fsr2l,f,c
  2855   00113E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2856   001142  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2857   001146  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2858   00114A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2859   00114E  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  2860   001152                     l151:
  2861   001152  0012               	return		;funcret
  2862   001154                     __end_of_setMotorPWM:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function ___wmul *****************
  2866 ;; Defined at:
  2867 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  multiplier      2    0[COMRAM] unsigned int 
  2870 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  product         2    4[COMRAM] unsigned int 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2    0[COMRAM] unsigned int 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, prodl, prodh
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;Total ram usage:        6 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_setMotorPWM
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text17
  2897   001A46                     __ptext17:
  2898                           	callstack 0
  2899   001A46                     ___wmul:
  2900                           	callstack 26
  2901   001A46  5001               	movf	___wmul@multiplier^0,w,c
  2902   001A48  0203               	mulwf	___wmul@multiplicand^0,c
  2903   001A4A  CFF3 F005          	movff	prodl,___wmul@product
  2904   001A4E  CFF4 F006          	movff	prodh,___wmul@product+1
  2905   001A52  5001               	movf	___wmul@multiplier^0,w,c
  2906   001A54  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2907   001A56  50F3               	movf	243,w,c
  2908   001A58  2606               	addwf	(___wmul@product+1)^0,f,c
  2909   001A5A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2910   001A5C  0203               	mulwf	___wmul@multiplicand^0,c
  2911   001A5E  50F3               	movf	243,w,c
  2912   001A60  2606               	addwf	(___wmul@product+1)^0,f,c
  2913   001A62  C005  F001         	movff	___wmul@product,?___wmul
  2914   001A66  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2915   001A6A  0012               	return		;funcret
  2916   001A6C                     __end_of___wmul:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function ___lwdiv *****************
  2920 ;; Defined at:
  2921 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  dividend        2    6[COMRAM] unsigned int 
  2924 ;;  divisor         2    8[COMRAM] unsigned int 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  quotient        2   10[COMRAM] unsigned int 
  2927 ;;  counter         1   12[COMRAM] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  2    6[COMRAM] unsigned int 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;Total ram usage:        7 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_setMotorPWM
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text18
  2952   0016CA                     __ptext18:
  2953                           	callstack 0
  2954   0016CA                     ___lwdiv:
  2955                           	callstack 26
  2956   0016CA  0E00               	movlw	0
  2957   0016CC  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2958   0016CE  0E00               	movlw	0
  2959   0016D0  6E0B               	movwf	___lwdiv@quotient^0,c
  2960   0016D2  5009               	movf	___lwdiv@divisor^0,w,c
  2961   0016D4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2962   0016D6  B4D8               	btfsc	status,2,c
  2963   0016D8  EF70  F00B         	goto	u1511
  2964   0016DC  EF72  F00B         	goto	u1510
  2965   0016E0                     u1511:
  2966   0016E0  EF9A  F00B         	goto	l1123
  2967   0016E4                     u1510:
  2968   0016E4  0E01               	movlw	1
  2969   0016E6  6E0D               	movwf	___lwdiv@counter^0,c
  2970   0016E8  EF7A  F00B         	goto	l2620
  2971   0016EC                     l2618:
  2972   0016EC  90D8               	bcf	status,0,c
  2973   0016EE  3609               	rlcf	___lwdiv@divisor^0,f,c
  2974   0016F0  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2975   0016F2  2A0D               	incf	___lwdiv@counter^0,f,c
  2976   0016F4                     l2620:
  2977   0016F4  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2978   0016F6  EF7F  F00B         	goto	u1521
  2979   0016FA  EF81  F00B         	goto	u1520
  2980   0016FE                     u1521:
  2981   0016FE  EF76  F00B         	goto	l2618
  2982   001702                     u1520:
  2983   001702                     l2622:
  2984   001702  90D8               	bcf	status,0,c
  2985   001704  360B               	rlcf	___lwdiv@quotient^0,f,c
  2986   001706  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2987   001708  5009               	movf	___lwdiv@divisor^0,w,c
  2988   00170A  5C07               	subwf	___lwdiv@dividend^0,w,c
  2989   00170C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2990   00170E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2991   001710  A0D8               	btfss	status,0,c
  2992   001712  EF8D  F00B         	goto	u1531
  2993   001716  EF8F  F00B         	goto	u1530
  2994   00171A                     u1531:
  2995   00171A  EF94  F00B         	goto	l2630
  2996   00171E                     u1530:
  2997   00171E  5009               	movf	___lwdiv@divisor^0,w,c
  2998   001720  5E07               	subwf	___lwdiv@dividend^0,f,c
  2999   001722  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3000   001724  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3001   001726  800B               	bsf	___lwdiv@quotient^0,0,c
  3002   001728                     l2630:
  3003   001728  90D8               	bcf	status,0,c
  3004   00172A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3005   00172C  3209               	rrcf	___lwdiv@divisor^0,f,c
  3006   00172E  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3007   001730  EF81  F00B         	goto	l2622
  3008   001734                     l1123:
  3009   001734  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3010   001738  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3011   00173C  0012               	return		;funcret
  3012   00173E                     __end_of___lwdiv:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _initUSART4 *****************
  3016 ;; Defined at:
  3017 ;;		line 5 in file "serial.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text19
  3046   001AAE                     __ptext19:
  3047                           	callstack 0
  3048   001AAE                     _initUSART4:
  3049                           	callstack 29
  3050   001AAE                     
  3051                           ;serial.c: 9:     RC0PPS = 0x12;
  3052   001AAE  0E12               	movlw	18
  3053   001AB0  010E               	movlb	14	; () banked
  3054   001AB2  6F62               	movwf	98,b	;volatile
  3055                           
  3056                           ;serial.c: 10:     RX4PPS = 0x11;
  3057   001AB4  0E11               	movlw	17
  3058   001AB6  6F15               	movwf	21,b	;volatile
  3059   001AB8                     
  3060                           ; BSR set to: 14
  3061                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3062   001AB8  97E9               	bcf	233,3,b	;volatile
  3063   001ABA                     
  3064                           ; BSR set to: 14
  3065                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3066   001ABA  95E8               	bcf	232,2,b	;volatile
  3067                           
  3068                           ;serial.c: 14:     SP4BRGL = 51;
  3069   001ABC  0E33               	movlw	51
  3070   001ABE  6FE5               	movwf	229,b	;volatile
  3071                           
  3072                           ;serial.c: 15:     SP4BRGH = 0;
  3073   001AC0  0E00               	movlw	0
  3074   001AC2  6FE6               	movwf	230,b	;volatile
  3075   001AC4                     
  3076                           ; BSR set to: 14
  3077                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3078   001AC4  89E7               	bsf	231,4,b	;volatile
  3079   001AC6                     
  3080                           ; BSR set to: 14
  3081                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3082   001AC6  8BE8               	bsf	232,5,b	;volatile
  3083   001AC8                     
  3084                           ; BSR set to: 14
  3085                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3086   001AC8  8FE7               	bsf	231,7,b	;volatile
  3087   001ACA                     
  3088                           ; BSR set to: 14
  3089   001ACA  0012               	return		;funcret
  3090   001ACC                     __end_of_initUSART4:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _initDCmotorsPWM *****************
  3094 ;; Defined at:
  3095 ;;		line 5 in file "dc_motor.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;Total ram usage:        2 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text20
  3124   00151E                     __ptext20:
  3125                           	callstack 0
  3126   00151E                     _initDCmotorsPWM:
  3127                           	callstack 29
  3128   00151E                     
  3129                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  3130   00151E  9485               	bcf	133,2,c	;volatile
  3131                           
  3132                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  3133   001520  9885               	bcf	133,4,c	;volatile
  3134                           
  3135                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  3136   001522  9E83               	bcf	131,7,c	;volatile
  3137                           
  3138                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  3139   001524  9C87               	bcf	135,6,c	;volatile
  3140                           
  3141                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  3142   001526  947D               	bcf	125,2,c	;volatile
  3143                           
  3144                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  3145   001528  987D               	bcf	125,4,c	;volatile
  3146                           
  3147                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  3148   00152A  9E7B               	bcf	123,7,c	;volatile
  3149                           
  3150                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  3151   00152C  9C7F               	bcf	127,6,c	;volatile
  3152   00152E                     
  3153                           ;dc_motor.c: 18:     RE2PPS=0x05;
  3154   00152E  0E05               	movlw	5
  3155   001530  010E               	movlb	14	; () banked
  3156   001532  6F74               	movwf	116,b	;volatile
  3157                           
  3158                           ;dc_motor.c: 19:     RE4PPS=0x06;
  3159   001534  0E06               	movlw	6
  3160   001536  6F76               	movwf	118,b	;volatile
  3161                           
  3162                           ;dc_motor.c: 20:     RC7PPS=0x07;
  3163   001538  0E07               	movlw	7
  3164   00153A  6F69               	movwf	105,b	;volatile
  3165                           
  3166                           ;dc_motor.c: 21:     RG6PPS=0x08;
  3167   00153C  0E08               	movlw	8
  3168   00153E  6F88               	movwf	136,b	;volatile
  3169                           
  3170                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  3171   001540  50BD               	movf	189,w,c	;volatile
  3172   001542  0B8F               	andlw	-113
  3173   001544  0940               	iorlw	64
  3174   001546  6EBD               	movwf	189,c	;volatile
  3175                           
  3176                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  3177   001548  0EE0               	movlw	-32
  3178   00154A  16BE               	andwf	190,f,c	;volatile
  3179                           
  3180                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  3181   00154C  50BF               	movf	191,w,c	;volatile
  3182   00154E  0BF0               	andlw	-16
  3183   001550  0901               	iorlw	1
  3184   001552  6EBF               	movwf	191,c	;volatile
  3185   001554                     
  3186                           ; BSR set to: 14
  3187                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  3188   001554  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3189   001558                     
  3190                           ; BSR set to: 14
  3191                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  3192   001558  8EBD               	bsf	189,7,c	;volatile
  3193                           
  3194                           ;dc_motor.c: 35:     CCPR1H=0;
  3195   00155A  0E00               	movlw	0
  3196   00155C  6EAA               	movwf	170,c	;volatile
  3197                           
  3198                           ;dc_motor.c: 36:     CCPR2H=0;
  3199   00155E  0E00               	movlw	0
  3200   001560  6EA6               	movwf	166,c	;volatile
  3201                           
  3202                           ;dc_motor.c: 37:     CCPR3H=0;
  3203   001562  0E00               	movlw	0
  3204   001564  010F               	movlb	15	; () banked
  3205   001566  6F25               	movwf	37,b	;volatile
  3206                           
  3207                           ;dc_motor.c: 38:     CCPR4H=0;
  3208   001568  0E00               	movlw	0
  3209   00156A  6F21               	movwf	33,b	;volatile
  3210                           
  3211                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  3212   00156C  0EFC               	movlw	-4
  3213   00156E  16AD               	andwf	173,f,c	;volatile
  3214                           
  3215                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  3216   001570  0EF3               	movlw	-13
  3217   001572  16AD               	andwf	173,f,c	;volatile
  3218                           
  3219                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  3220   001574  0ECF               	movlw	-49
  3221   001576  16AD               	andwf	173,f,c	;volatile
  3222                           
  3223                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  3224   001578  0E3F               	movlw	-193
  3225   00157A  16AD               	andwf	173,f,c	;volatile
  3226   00157C                     
  3227                           ; BSR set to: 15
  3228                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  3229   00157C  88AB               	bsf	171,4,c	;volatile
  3230                           
  3231                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  3232   00157E  50AB               	movf	171,w,c	;volatile
  3233   001580  0BF0               	andlw	-16
  3234   001582  090C               	iorlw	12
  3235   001584  6EAB               	movwf	171,c	;volatile
  3236   001586                     
  3237                           ; BSR set to: 15
  3238                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  3239   001586  8EAB               	bsf	171,7,c	;volatile
  3240   001588                     
  3241                           ; BSR set to: 15
  3242                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  3243   001588  88A7               	bsf	167,4,c	;volatile
  3244                           
  3245                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  3246   00158A  50A7               	movf	167,w,c	;volatile
  3247   00158C  0BF0               	andlw	-16
  3248   00158E  090C               	iorlw	12
  3249   001590  6EA7               	movwf	167,c	;volatile
  3250   001592                     
  3251                           ; BSR set to: 15
  3252                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  3253   001592  8EA7               	bsf	167,7,c	;volatile
  3254   001594                     
  3255                           ; BSR set to: 15
  3256                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  3257   001594  8926               	bsf	38,4,b	;volatile
  3258                           
  3259                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  3260   001596  5126               	movf	38,w,b	;volatile
  3261   001598  0BF0               	andlw	-16
  3262   00159A  090C               	iorlw	12
  3263   00159C  6F26               	movwf	38,b	;volatile
  3264   00159E                     
  3265                           ; BSR set to: 15
  3266                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  3267   00159E  8F26               	bsf	38,7,b	;volatile
  3268   0015A0                     
  3269                           ; BSR set to: 15
  3270                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  3271   0015A0  8922               	bsf	34,4,b	;volatile
  3272                           
  3273                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  3274   0015A2  5122               	movf	34,w,b	;volatile
  3275   0015A4  0BF0               	andlw	-16
  3276   0015A6  090C               	iorlw	12
  3277   0015A8  6F22               	movwf	34,b	;volatile
  3278   0015AA                     
  3279                           ; BSR set to: 15
  3280                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  3281   0015AA  8F22               	bsf	34,7,b	;volatile
  3282   0015AC                     
  3283                           ; BSR set to: 15
  3284   0015AC  0012               	return		;funcret
  3285   0015AE                     __end_of_initDCmotorsPWM:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _color_click_init *****************
  3289 ;; Defined at:
  3290 ;;		line 5 in file "color.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;Total ram usage:        1 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 4
  3311 ;; This function calls:
  3312 ;;		_I2C_2_Master_Init
  3313 ;;		_color_writetoaddr
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text21
  3320   001998                     __ptext21:
  3321                           	callstack 0
  3322   001998                     _color_click_init:
  3323                           	callstack 26
  3324   001998                     
  3325                           ;color.c: 8:     I2C_2_Master_Init();
  3326   001998  ECE6  F00C         	call	_I2C_2_Master_Init	;wreg free
  3327   00199C                     
  3328                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3329   00199C  0E01               	movlw	1
  3330   00199E  6E03               	movwf	color_writetoaddr@value^0,c
  3331   0019A0  0E00               	movlw	0
  3332   0019A2  EC47  F00D         	call	_color_writetoaddr
  3333   0019A6                     
  3334                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3335   0019A6  0E3F               	movlw	63
  3336   0019A8  6E05               	movwf	??_color_click_init^0,c
  3337   0019AA  0E55               	movlw	85
  3338   0019AC                     u2337:
  3339   0019AC  2EE8               	decfsz	wreg,f,c
  3340   0019AE  D7FE               	bra	u2337
  3341   0019B0  2E05               	decfsz	??_color_click_init^0,f,c
  3342   0019B2  D7FC               	bra	u2337
  3343   0019B4  0000               	nop	
  3344   0019B6                     
  3345                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3346   0019B6  0E03               	movlw	3
  3347   0019B8  6E03               	movwf	color_writetoaddr@value^0,c
  3348   0019BA  0E00               	movlw	0
  3349   0019BC  EC47  F00D         	call	_color_writetoaddr
  3350   0019C0                     
  3351                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3352   0019C0  0ED5               	movlw	213
  3353   0019C2  6E03               	movwf	color_writetoaddr@value^0,c
  3354   0019C4  0E01               	movlw	1
  3355   0019C6  EC47  F00D         	call	_color_writetoaddr
  3356   0019CA  0012               	return		;funcret
  3357   0019CC                     __end_of_color_click_init:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _color_writetoaddr *****************
  3361 ;; Defined at:
  3362 ;;		line 21 in file "color.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  address         1    wreg     unsigned char 
  3365 ;;  value           1    2[COMRAM] unsigned char 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  address         1    3[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:        2 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 3
  3384 ;; This function calls:
  3385 ;;		_I2C_2_Master_Start
  3386 ;;		_I2C_2_Master_Stop
  3387 ;;		_I2C_2_Master_Write
  3388 ;; This function is called by:
  3389 ;;		_color_click_init
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text22
  3394   001A8E                     __ptext22:
  3395                           	callstack 0
  3396   001A8E                     _color_writetoaddr:
  3397                           	callstack 26
  3398                           
  3399                           ;incstack = 0
  3400                           ;color_writetoaddr@address stored from wreg
  3401   001A8E  6E04               	movwf	color_writetoaddr@address^0,c
  3402   001A90                     
  3403                           ;color.c: 22:     I2C_2_Master_Start();
  3404   001A90  EC7D  F00D         	call	_I2C_2_Master_Start	;wreg free
  3405                           
  3406                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3407   001A94  0E52               	movlw	82
  3408   001A96  EC72  F00D         	call	_I2C_2_Master_Write
  3409                           
  3410                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3411   001A9A  5004               	movf	color_writetoaddr@address^0,w,c
  3412   001A9C  0980               	iorlw	128
  3413   001A9E  EC72  F00D         	call	_I2C_2_Master_Write
  3414                           
  3415                           ;color.c: 25:     I2C_2_Master_Write(value);
  3416   001AA2  5003               	movf	color_writetoaddr@value^0,w,c
  3417   001AA4  EC72  F00D         	call	_I2C_2_Master_Write
  3418                           
  3419                           ;color.c: 26:     I2C_2_Master_Stop();
  3420   001AA8  EC78  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3421   001AAC  0012               	return		;funcret
  3422   001AAE                     __end_of_color_writetoaddr:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _I2C_2_Master_Write *****************
  3426 ;; Defined at:
  3427 ;;		line 45 in file "i2c.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  data_byte       1    wreg     unsigned char 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  data_byte       1    1[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        1 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 2
  3448 ;; This function calls:
  3449 ;;		_I2C_2_Master_Idle
  3450 ;; This function is called by:
  3451 ;;		_color_writetoaddr
  3452 ;;		_color_read_Red
  3453 ;;		_color_read_Blue
  3454 ;;		_color_read_Green
  3455 ;;		_color_read_Clear
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text23
  3460   001AE4                     __ptext23:
  3461                           	callstack 0
  3462   001AE4                     _I2C_2_Master_Write:
  3463                           	callstack 26
  3464                           
  3465                           ;incstack = 0
  3466                           ;I2C_2_Master_Write@data_byte stored from wreg
  3467   001AE4  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3468   001AE6                     
  3469                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3470   001AE6  ECFB  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3471   001AEA                     
  3472                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3473   001AEA  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3474   001AEE  0012               	return		;funcret
  3475   001AF0                     __end_of_I2C_2_Master_Write:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _I2C_2_Master_Stop *****************
  3479 ;; Defined at:
  3480 ;;		line 39 in file "i2c.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 2
  3501 ;; This function calls:
  3502 ;;		_I2C_2_Master_Idle
  3503 ;; This function is called by:
  3504 ;;		_color_writetoaddr
  3505 ;;		_color_read_Red
  3506 ;;		_color_read_Blue
  3507 ;;		_color_read_Green
  3508 ;;		_color_read_Clear
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text24
  3513   001AF0                     __ptext24:
  3514                           	callstack 0
  3515   001AF0                     _I2C_2_Master_Stop:
  3516                           	callstack 26
  3517   001AF0                     
  3518                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3519   001AF0  ECFB  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3520   001AF4                     
  3521                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3522   001AF4  010E               	movlb	14	; () banked
  3523   001AF6  85DA               	bsf	218,2,b	;volatile
  3524   001AF8                     
  3525                           ; BSR set to: 14
  3526   001AF8  0012               	return		;funcret
  3527   001AFA                     __end_of_I2C_2_Master_Stop:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _I2C_2_Master_Start *****************
  3531 ;; Defined at:
  3532 ;;		line 27 in file "i2c.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 2
  3553 ;; This function calls:
  3554 ;;		_I2C_2_Master_Idle
  3555 ;; This function is called by:
  3556 ;;		_color_writetoaddr
  3557 ;;		_color_read_Red
  3558 ;;		_color_read_Blue
  3559 ;;		_color_read_Green
  3560 ;;		_color_read_Clear
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text25
  3565   001AFA                     __ptext25:
  3566                           	callstack 0
  3567   001AFA                     _I2C_2_Master_Start:
  3568                           	callstack 26
  3569   001AFA                     
  3570                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3571   001AFA  ECFB  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3572   001AFE                     
  3573                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3574   001AFE  010E               	movlb	14	; () banked
  3575   001B00  81DA               	bsf	218,0,b	;volatile
  3576   001B02                     
  3577                           ; BSR set to: 14
  3578   001B02  0012               	return		;funcret
  3579   001B04                     __end_of_I2C_2_Master_Start:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _I2C_2_Master_Idle *****************
  3583 ;; Defined at:
  3584 ;;		line 22 in file "i2c.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3602 ;;Total ram usage:        1 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_I2C_2_Master_Start
  3609 ;;		_I2C_2_Master_Stop
  3610 ;;		_I2C_2_Master_Write
  3611 ;;		_I2C_2_Master_RepStart
  3612 ;;		_I2C_2_Master_Read
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text26
  3617   0019F6                     __ptext26:
  3618                           	callstack 0
  3619   0019F6                     _I2C_2_Master_Idle:
  3620                           	callstack 26
  3621   0019F6                     l242:
  3622   0019F6  010E               	movlb	14	; () banked
  3623   0019F8  B5D8               	btfsc	216,2,b	;volatile
  3624   0019FA  EF01  F00D         	goto	u281
  3625   0019FE  EF03  F00D         	goto	u280
  3626   001A02                     u281:
  3627   001A02  EFFB  F00C         	goto	l242
  3628   001A06                     u280:
  3629   001A06                     
  3630                           ; BSR set to: 14
  3631   001A06  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3632   001A0A  0E1F               	movlw	31
  3633   001A0C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3634   001A0E  A4D8               	btfss	status,2,c
  3635   001A10  EF0C  F00D         	goto	u291
  3636   001A14  EF0E  F00D         	goto	u290
  3637   001A18                     u291:
  3638   001A18  EFFB  F00C         	goto	l242
  3639   001A1C                     u290:
  3640   001A1C                     
  3641                           ; BSR set to: 14
  3642   001A1C  0012               	return		;funcret
  3643   001A1E                     __end_of_I2C_2_Master_Idle:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _I2C_2_Master_Init *****************
  3647 ;; Defined at:
  3648 ;;		line 4 in file "i2c.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_color_click_init
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text27
  3677   0019CC                     __ptext27:
  3678                           	callstack 0
  3679   0019CC                     _I2C_2_Master_Init:
  3680                           	callstack 28
  3681   0019CC                     
  3682                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3683   0019CC  010E               	movlb	14	; () banked
  3684   0019CE  51D9               	movf	217,w,b	;volatile
  3685   0019D0  0BF0               	andlw	-16
  3686   0019D2  0908               	iorlw	8
  3687   0019D4  6FD9               	movwf	217,b	;volatile
  3688   0019D6                     
  3689                           ; BSR set to: 14
  3690                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3691   0019D6  8BD9               	bsf	217,5,b	;volatile
  3692                           
  3693                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3694   0019D8  0E9F               	movlw	159
  3695   0019DA  6FD6               	movwf	214,b	;volatile
  3696   0019DC                     
  3697                           ; BSR set to: 14
  3698                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3699   0019DC  8A84               	bsf	132,5,c	;volatile
  3700   0019DE                     
  3701                           ; BSR set to: 14
  3702                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3703   0019DE  8C84               	bsf	132,6,c	;volatile
  3704   0019E0                     
  3705                           ; BSR set to: 14
  3706                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3707   0019E0  9BA7               	bcf	167,5,b	;volatile
  3708   0019E2                     
  3709                           ; BSR set to: 14
  3710                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3711   0019E2  9DA7               	bcf	167,6,b	;volatile
  3712                           
  3713                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3714   0019E4  0E1D               	movlw	29
  3715   0019E6  6F1D               	movwf	29,b	;volatile
  3716                           
  3717                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3718   0019E8  0E1E               	movlw	30
  3719   0019EA  6F1C               	movwf	28,b	;volatile
  3720                           
  3721                           ;i2c.c: 18:   RD5PPS=0x1C;
  3722   0019EC  0E1C               	movlw	28
  3723   0019EE  6F6F               	movwf	111,b	;volatile
  3724                           
  3725                           ;i2c.c: 19:   RD6PPS=0x1B;
  3726   0019F0  0E1B               	movlw	27
  3727   0019F2  6F70               	movwf	112,b	;volatile
  3728   0019F4                     
  3729                           ; BSR set to: 14
  3730   0019F4  0012               	return		;funcret
  3731   0019F6                     __end_of_I2C_2_Master_Init:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _buggy_lights_init *****************
  3735 ;; Defined at:
  3736 ;;		line 4 in file "buggy_lights.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		None
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 1
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text28
  3765   001848                     __ptext28:
  3766                           	callstack 0
  3767   001848                     _buggy_lights_init:
  3768                           	callstack 29
  3769   001848                     
  3770                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3771   001848  9884               	bcf	132,4,c	;volatile
  3772                           
  3773                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3774   00184A  9288               	bcf	136,1,c	;volatile
  3775                           
  3776                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3777   00184C  9684               	bcf	132,3,c	;volatile
  3778                           
  3779                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3780   00184E  9086               	bcf	134,0,c	;volatile
  3781                           
  3782                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3783   001850  9088               	bcf	136,0,c	;volatile
  3784                           
  3785                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  3786   001852  887C               	bsf	124,4,c	;volatile
  3787                           
  3788                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  3789   001854  8280               	bsf	128,1,c	;volatile
  3790                           
  3791                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  3792   001856  867C               	bsf	124,3,c	;volatile
  3793                           
  3794                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  3795   001858  807E               	bsf	126,0,c	;volatile
  3796                           
  3797                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  3798   00185A  8080               	bsf	128,0,c	;volatile
  3799                           
  3800                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  3801   00185C  9E84               	bcf	132,7,c	;volatile
  3802                           
  3803                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  3804   00185E  9688               	bcf	136,3,c	;volatile
  3805                           
  3806                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  3807   001860  8E7C               	bsf	124,7,c	;volatile
  3808                           
  3809                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  3810   001862  8680               	bsf	128,3,c	;volatile
  3811                           
  3812                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  3813   001864  9081               	bcf	129,0,c	;volatile
  3814                           
  3815                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  3816   001866  9483               	bcf	131,2,c	;volatile
  3817                           
  3818                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  3819   001868  9084               	bcf	132,0,c	;volatile
  3820                           
  3821                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  3822   00186A  8079               	bsf	121,0,c	;volatile
  3823                           
  3824                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  3825   00186C  847B               	bsf	123,2,c	;volatile
  3826                           
  3827                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  3828   00186E  807C               	bsf	124,0,c	;volatile
  3829                           
  3830                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  3831   001870  9281               	bcf	129,1,c	;volatile
  3832                           
  3833                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  3834   001872  9C83               	bcf	131,6,c	;volatile
  3835                           
  3836                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  3837   001874  9488               	bcf	136,2,c	;volatile
  3838                           
  3839                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  3840   001876  8279               	bsf	121,1,c	;volatile
  3841                           
  3842                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  3843   001878  8C7B               	bsf	123,6,c	;volatile
  3844                           
  3845                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  3846   00187A  8480               	bsf	128,2,c	;volatile
  3847                           
  3848                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  3849   00187C  9287               	bcf	135,1,c	;volatile
  3850                           
  3851                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  3852   00187E  9881               	bcf	129,4,c	;volatile
  3853                           
  3854                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  3855   001880  9E86               	bcf	134,7,c	;volatile
  3856                           
  3857                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  3858   001882  827F               	bsf	127,1,c	;volatile
  3859                           
  3860                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  3861   001884  8879               	bsf	121,4,c	;volatile
  3862                           
  3863                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  3864   001886  8E7E               	bsf	126,7,c	;volatile
  3865                           
  3866                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  3867   001888  9087               	bcf	135,0,c	;volatile
  3868                           
  3869                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  3870   00188A  9E85               	bcf	133,7,c	;volatile
  3871                           
  3872                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  3873   00188C  9681               	bcf	129,3,c	;volatile
  3874                           
  3875                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  3876   00188E  807F               	bsf	127,0,c	;volatile
  3877                           
  3878                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  3879   001890  8E7D               	bsf	125,7,c	;volatile
  3880                           
  3881                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  3882   001892  8679               	bsf	121,3,c	;volatile
  3883   001894  0012               	return		;funcret
  3884   001896                     __end_of_buggy_lights_init:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _Timer0_init *****************
  3888 ;; Defined at:
  3889 ;;		line 10 in file "timers.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text29
  3918   001A1E                     __ptext29:
  3919                           	callstack 0
  3920   001A1E                     _Timer0_init:
  3921                           	callstack 29
  3922   001A1E                     
  3923                           ;timers.c: 12:     T0CON1bits.T0CS=0b010;
  3924   001A1E  50D6               	movf	214,w,c	;volatile
  3925   001A20  0B1F               	andlw	-225
  3926   001A22  0940               	iorlw	64
  3927   001A24  6ED6               	movwf	214,c	;volatile
  3928   001A26                     
  3929                           ;timers.c: 13:     T0CON1bits.T0ASYNC=1;
  3930   001A26  88D6               	bsf	214,4,c	;volatile
  3931   001A28                     
  3932                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  3933   001A28  88D5               	bsf	213,4,c	;volatile
  3934                           
  3935                           ;timers.c: 16:     T0CON1bits.T0CKPS=0b1110;
  3936   001A2A  50D6               	movf	214,w,c	;volatile
  3937   001A2C  0BF0               	andlw	-16
  3938   001A2E  090E               	iorlw	14
  3939   001A30  6ED6               	movwf	214,c	;volatile
  3940                           
  3941                           ;timers.c: 23:     TMR0H = 0;
  3942   001A32  0E00               	movlw	0
  3943   001A34  6ED4               	movwf	212,c	;volatile
  3944                           
  3945                           ;timers.c: 24:     TMR0L = 0;
  3946   001A36  0E00               	movlw	0
  3947   001A38  6ED3               	movwf	211,c	;volatile
  3948   001A3A                     
  3949                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  3950   001A3A  8ED5               	bsf	213,7,c	;volatile
  3951   001A3C                     
  3952                           ;timers.c: 27:     PIE0bits.TMR0IE = 1;
  3953   001A3C  010E               	movlb	14	; () banked
  3954   001A3E  8B29               	bsf	41,5,b	;volatile
  3955   001A40                     
  3956                           ; BSR set to: 14
  3957                           ;timers.c: 28:     INTCONbits.PEIE = 1;
  3958   001A40  8CF2               	bsf	242,6,c	;volatile
  3959   001A42                     
  3960                           ; BSR set to: 14
  3961                           ;timers.c: 29:     INTCONbits.GIE = 1;
  3962   001A42  8EF2               	bsf	242,7,c	;volatile
  3963   001A44                     
  3964                           ; BSR set to: 14
  3965   001A44  0012               	return		;funcret
  3966   001A46                     __end_of_Timer0_init:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _ISR *****************
  3970 ;; Defined at:
  3971 ;;		line 71 in file "timers.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		None
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		Interrupt level 2
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	intcode
  3999   000008                     __pintcode:
  4000                           	callstack 0
  4001   000008                     _ISR:
  4002                           	callstack 23
  4003                           
  4004                           ; BSR set to: 14
  4005                           ;incstack = 0
  4006   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4007   00000A                     
  4008                           ;timers.c: 74:     if (PIR0bits.TMR0IF) {
  4009   00000A  010E               	movlb	14	; () banked
  4010   00000C  AB33               	btfss	51,5,b	;volatile
  4011   00000E  EF0B  F000         	goto	i2u192_41
  4012   000012  EF0D  F000         	goto	i2u192_40
  4013   000016                     i2u192_41:
  4014   000016  EF0E  F000         	goto	i2l629
  4015   00001A                     i2u192_40:
  4016   00001A                     
  4017                           ; BSR set to: 14
  4018                           ;timers.c: 82:         PIR0bits.TMR0IF = 0;
  4019   00001A  9B33               	bcf	51,5,b	;volatile
  4020   00001C                     i2l629:
  4021                           
  4022                           ; BSR set to: 14
  4023   00001C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4024   00001E  0011               	retfie		f
  4025   000020                     __end_of_ISR:
  4026                           	callstack 0
  4027                           
  4028                           	psect	rparam
  4029   000000                     
  4030                           	psect	temp
  4031   00005F                     btemp:
  4032                           	callstack 0
  4033   00005F                     	ds	1
  4034   000000                     int$flags	set	btemp
  4035   000000                     wtemp8	set	btemp+1
  4036   000000                     ttemp5	set	btemp+1
  4037   000000                     ttemp6	set	btemp+4
  4038   000000                     ttemp7	set	btemp+8
  4039                           
  4040                           	psect	idloc
  4041                           
  4042                           ;Config register IDLOC0 @ 0x200000
  4043                           ;	unspecified, using default values
  4044   200000                     	org	2097152
  4045   200000  FFFF               	dw	65535
  4046                           
  4047                           ;Config register IDLOC1 @ 0x200002
  4048                           ;	unspecified, using default values
  4049   200002                     	org	2097154
  4050   200002  FFFF               	dw	65535
  4051                           
  4052                           ;Config register IDLOC2 @ 0x200004
  4053                           ;	unspecified, using default values
  4054   200004                     	org	2097156
  4055   200004  FFFF               	dw	65535
  4056                           
  4057                           ;Config register IDLOC3 @ 0x200006
  4058                           ;	unspecified, using default values
  4059   200006                     	org	2097158
  4060   200006  FFFF               	dw	65535
  4061                           
  4062                           ;Config register IDLOC4 @ 0x200008
  4063                           ;	unspecified, using default values
  4064   200008                     	org	2097160
  4065   200008  FFFF               	dw	65535
  4066                           
  4067                           ;Config register IDLOC5 @ 0x20000A
  4068                           ;	unspecified, using default values
  4069   20000A                     	org	2097162
  4070   20000A  FFFF               	dw	65535
  4071                           
  4072                           ;Config register IDLOC6 @ 0x20000C
  4073                           ;	unspecified, using default values
  4074   20000C                     	org	2097164
  4075   20000C  FFFF               	dw	65535
  4076                           
  4077                           ;Config register IDLOC7 @ 0x20000E
  4078                           ;	unspecified, using default values
  4079   20000E                     	org	2097166
  4080   20000E  FFFF               	dw	65535
  4081                           
  4082                           	psect	config
  4083                           
  4084                           ;Config register CONFIG1L @ 0x300000
  4085                           ;	External Oscillator mode Selection bits
  4086                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4087                           ;	Power-up default value for COSC bits
  4088                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4089   300000                     	org	3145728
  4090   300000  AA                 	db	170
  4091                           
  4092                           ;Config register CONFIG1H @ 0x300001
  4093                           ;	unspecified, using default values
  4094                           ;	Clock Out Enable bit
  4095                           ;	CLKOUTEN = 0x1, unprogrammed default
  4096                           ;	Clock Switch Enable bit
  4097                           ;	CSWEN = 0x1, unprogrammed default
  4098                           ;	Fail-Safe Clock Monitor Enable bit
  4099                           ;	FCMEN = 0x1, unprogrammed default
  4100   300001                     	org	3145729
  4101   300001  FF                 	db	255
  4102                           
  4103                           ;Config register CONFIG2L @ 0x300002
  4104                           ;	unspecified, using default values
  4105                           ;	Master Clear Enable bit
  4106                           ;	MCLRE = 0x1, unprogrammed default
  4107                           ;	Power-up Timer Enable bit
  4108                           ;	PWRTE = 0x1, unprogrammed default
  4109                           ;	Low-power BOR enable bit
  4110                           ;	LPBOREN = 0x1, unprogrammed default
  4111                           ;	Brown-out Reset Enable bits
  4112                           ;	BOREN = 0x3, unprogrammed default
  4113   300002                     	org	3145730
  4114   300002  FF                 	db	255
  4115                           
  4116                           ;Config register CONFIG2H @ 0x300003
  4117                           ;	unspecified, using default values
  4118                           ;	Brown Out Reset Voltage selection bits
  4119                           ;	BORV = 0x3, unprogrammed default
  4120                           ;	ZCD Disable bit
  4121                           ;	ZCD = 0x1, unprogrammed default
  4122                           ;	PPSLOCK bit One-Way Set Enable bit
  4123                           ;	PPS1WAY = 0x1, unprogrammed default
  4124                           ;	Stack Full/Underflow Reset Enable bit
  4125                           ;	STVREN = 0x1, unprogrammed default
  4126                           ;	Debugger Enable bit
  4127                           ;	DEBUG = 0x1, unprogrammed default
  4128                           ;	Extended Instruction Set Enable bit
  4129                           ;	XINST = 0x1, unprogrammed default
  4130   300003                     	org	3145731
  4131   300003  FF                 	db	255
  4132                           
  4133                           ;Config register CONFIG3L @ 0x300004
  4134                           ;	WDT Period Select bits
  4135                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4136                           ;	WDT operating mode
  4137                           ;	WDTE = OFF, WDT Disabled
  4138   300004                     	org	3145732
  4139   300004  9F                 	db	159
  4140                           
  4141                           ;Config register CONFIG3H @ 0x300005
  4142                           ;	unspecified, using default values
  4143                           ;	WDT Window Select bits
  4144                           ;	WDTCWS = 0x7, unprogrammed default
  4145                           ;	WDT input clock selector
  4146                           ;	WDTCCS = 0x7, unprogrammed default
  4147   300005                     	org	3145733
  4148   300005  FF                 	db	255
  4149                           
  4150                           ;Config register CONFIG4L @ 0x300006
  4151                           ;	unspecified, using default values
  4152                           ;	Write Protection Block 0
  4153                           ;	WRT0 = 0x1, unprogrammed default
  4154                           ;	Write Protection Block 1
  4155                           ;	WRT1 = 0x1, unprogrammed default
  4156                           ;	Write Protection Block 2
  4157                           ;	WRT2 = 0x1, unprogrammed default
  4158                           ;	Write Protection Block 3
  4159                           ;	WRT3 = 0x1, unprogrammed default
  4160                           ;	Write Protection Block 3
  4161                           ;	WRT4 = 0x1, unprogrammed default
  4162                           ;	Write Protection Block 3
  4163                           ;	WRT5 = 0x1, unprogrammed default
  4164                           ;	Write Protection Block 3
  4165                           ;	WRT6 = 0x1, unprogrammed default
  4166                           ;	Write Protection Block 3
  4167                           ;	WRT7 = 0x1, unprogrammed default
  4168   300006                     	org	3145734
  4169   300006  FF                 	db	255
  4170                           
  4171                           ;Config register CONFIG4H @ 0x300007
  4172                           ;	unspecified, using default values
  4173                           ;	Configuration Register Write Protection bit
  4174                           ;	WRTC = 0x1, unprogrammed default
  4175                           ;	Boot Block Write Protection bit
  4176                           ;	WRTB = 0x1, unprogrammed default
  4177                           ;	Data EEPROM Write Protection bit
  4178                           ;	WRTD = 0x1, unprogrammed default
  4179                           ;	Scanner Enable bit
  4180                           ;	SCANE = 0x1, unprogrammed default
  4181                           ;	Low Voltage Programming Enable bit
  4182                           ;	LVP = 0x1, unprogrammed default
  4183   300007                     	org	3145735
  4184   300007  FF                 	db	255
  4185                           
  4186                           ;Config register CONFIG5L @ 0x300008
  4187                           ;	unspecified, using default values
  4188                           ;	UserNVM Program Memory Code Protection bit
  4189                           ;	CP = 0x1, unprogrammed default
  4190                           ;	DataNVM Memory Code Protection bit
  4191                           ;	CPD = 0x1, unprogrammed default
  4192   300008                     	org	3145736
  4193   300008  FF                 	db	255
  4194                           
  4195                           ;Config register CONFIG5H @ 0x300009
  4196                           ;	unspecified, using default values
  4197   300009                     	org	3145737
  4198   300009  FF                 	db	255
  4199                           
  4200                           ;Config register CONFIG6L @ 0x30000A
  4201                           ;	unspecified, using default values
  4202                           ;	Table Read Protection Block 0
  4203                           ;	EBTR0 = 0x1, unprogrammed default
  4204                           ;	Table Read Protection Block 1
  4205                           ;	EBTR1 = 0x1, unprogrammed default
  4206                           ;	Table Read Protection Block 2
  4207                           ;	EBTR2 = 0x1, unprogrammed default
  4208                           ;	Table Read Protection Block 3
  4209                           ;	EBTR3 = 0x1, unprogrammed default
  4210                           ;	Table Read Protection Block 4
  4211                           ;	EBTR4 = 0x1, unprogrammed default
  4212                           ;	Table Read Protection Block 5
  4213                           ;	EBTR5 = 0x1, unprogrammed default
  4214                           ;	Table Read Protection Block 6
  4215                           ;	EBTR6 = 0x1, unprogrammed default
  4216                           ;	Table Read Protection Block 7
  4217                           ;	EBTR7 = 0x1, unprogrammed default
  4218   30000A                     	org	3145738
  4219   30000A  FF                 	db	255
  4220                           
  4221                           ;Config register CONFIG6H @ 0x30000B
  4222                           ;	unspecified, using default values
  4223                           ;	Boot Block Table Read Protection bit
  4224                           ;	EBTRB = 0x1, unprogrammed default
  4225   30000B                     	org	3145739
  4226   30000B  FF                 	db	255
  4227                           tosu	equ	0xFFF
  4228                           tosh	equ	0xFFE
  4229                           tosl	equ	0xFFD
  4230                           stkptr	equ	0xFFC
  4231                           pclatu	equ	0xFFB
  4232                           pclath	equ	0xFFA
  4233                           pcl	equ	0xFF9
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           indf0	equ	0xFEF
  4241                           postinc0	equ	0xFEE
  4242                           postdec0	equ	0xFED
  4243                           preinc0	equ	0xFEC
  4244                           plusw0	equ	0xFEB
  4245                           fsr0h	equ	0xFEA
  4246                           fsr0l	equ	0xFE9
  4247                           wreg	equ	0xFE8
  4248                           indf1	equ	0xFE7
  4249                           postinc1	equ	0xFE6
  4250                           postdec1	equ	0xFE5
  4251                           preinc1	equ	0xFE4
  4252                           plusw1	equ	0xFE3
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           bsr	equ	0xFE0
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           postdec2	equ	0xFDD
  4259                           preinc2	equ	0xFDC
  4260                           plusw2	equ	0xFDB
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        82
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160      0     144
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    readTrail@man	PTR unsigned char  size(1) Largest target is 1
		 -> returnToSender@mann(COMRAM[1]), 

    readTrail@tH	PTR unsigned char  size(1) Largest target is 1
		 -> returnToSender@timerH(COMRAM[1]), 

    readTrail@tL	PTR unsigned char  size(1) Largest target is 1
		 -> returnToSender@timerL(COMRAM[1]), 

    returnToSender@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    returnToSender@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2614$buffer	PTR unsigned char  size(2) Largest target is 0

    S2614$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), main@motorR(COMRAM[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_returnToSender
    _returnToSender->_sendIntSerial4
    _stop->_setMotorPWM
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   11044
                                             72 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                     _returnToSender
 ---------------------------------------------------------------------------------
 (1) _returnToSender                                       6     4      2   10262
                                             66 COMRAM     6     4      2
                     _fullSpeedAhead
                          _readTrail
                     _sendIntSerial4
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 3     1      2    3221
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _sendIntSerial4                                      19    17      2    4075
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _readTrail                                            3     0      3     294
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     3      2    2291
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    1829
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _returnToSender
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _readTrail
     _sendIntSerial4
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     _stop
       _setMotorPWM

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      62        0.0%
DATA                 0      0     12A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 15:03:54 2024

               _turn180Delay 0064              _trail_timer_low 008A                           l31 1894  
                         l53 19CA                           l56 1AAC                 ___awdiv@sign 0006  
        ___wmul@multiplicand 0003             _trail_timer_high 009E                          l151 1152  
                        l144 15AC                          l400 1AE2                          l242 19F6  
                        l180 13FC                          l245 1A1C                          l254 1AF8  
                        l406 179E                          l239 19F4                          l183 146C  
                        l159 16C8                          l248 1B02                          l257 1AEE  
                        l409 1A8C                          l621 163A                          l615 1962  
                        l632 1A6A                          l609 1A44                          l388 1ACA  
                        l397 1ACE                          l863 12F8                          l876 151C  
                        u280 1A06                          u281 1A02                          u290 1A1C  
                        u291 1A18                          _ISR 0008                          _abs 1964  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 0060  
                       ?_ISR 0001                         l1130 173C                         l1123 1734  
                       ?_abs 0007                         l1310 18E0                         l1351 0FAC  
                       l1600 1AFE                         l1352 0FFE                         l1602 1AE6  
                       l1362 197E                         l1604 1AEA                         l2500 14A2  
                       l1365 1996                         l1357 17EC                         l1606 1AF0  
                       l2510 14E8                         l2502 14B4                         l1358 17F4  
                       l1608 1AF4                         l2520 1514                         l2512 14F0  
                       l2504 14BC                         l1377 13B2                         l1650 19D6  
                       l1554 19F6                         l2602 1ACE                         l2450 1250  
                       l2514 14F6                         l2506 14C4                         l2530 1324  
                       l1652 19DC                         l1556 1A06                         l2620 16F4  
                       l2612 16CA                         l2604 1ADE                         l2460 1276  
                       l2452 1254                         l2444 1236                         l2508 14D2  
                       l2516 14FC                         l2540 1972                         l1388 1B04  
                       l2532 1340                         l2524 12FA                         l2700 16B2  
                       l1654 19DE                         l1910 1AAE                         l2630 1728  
                       l2622 1702                         l2614 16D2                         l2606 1A46  
                       l2470 12AC                         l2462 1288                         l2454 1262  
                       l2446 123A                         l2518 150C                         l2534 1372  
                       l2526 130A                         l2550 0E4E                         l2542 0E0A  
                       l1656 19E0                         l1648 19CC                         l1920 1AC8  
                       l1912 1AB8                         l2632 172E                         l2624 1708  
                       l2616 16E4                         l2608 1A62                         l2800 1950  
                       l2472 12C2                         l2464 1290                         l2480 12D8  
                       l2456 126A                         l2448 1248                         l2528 131A  
                       l2560 0EB4                         l2552 0E52                         l2544 0E12  
                       l2640 17CC                         l1930 1A3C                         l1922 1A1E  
                       l1658 19E2                         l2810 19B6                         l1914 1ABA  
                       l2626 171E                         l2618 16EC                         l2650 107E  
                       l2642 1000                         l2802 1960                         l2482 12E8  
                       l2474 12CA                         l2466 1298                         l2458 126E  
                       l2490 1472                         l2538 1964                         l2570 0F26  
                       l2562 0EBE                         l2554 0E5C                         l2546 0E38  
                       l2634 17A0                         l1932 1A40                         l1924 1A26  
                       l2812 19C0                         l2804 1998                         l2820 1558  
                       l1916 1AC4                         l2628 1726                         l2652 10BC  
                       l2644 101A                         l2660 1742                         l2484 12F0  
                       l2476 12CC                         l2468 12A6                         l2492 1480  
                       l2580 0F76                         l2572 0F38                         l2564 0ED6  
                       l2556 0E7C                         l2548 0E40                         l2636 17A4  
                       l1934 1A42                         l1926 1A28                         l1598 1AFA  
                       l2806 199C                         l2830 1594                         l2822 157C  
                       l2814 151E                         l1918 1AC6                         l2654 10D6  
                       l2646 1068                         l2750 13CA                         l2662 1768  
                       l2478 12D2                         l2494 1488                         l2590 0FC0  
                       l2582 0F7E                         l2574 0F48                         l2566 0F06  
                       l2558 0E9C                         l2638 17B2                         l2670 18AA  
                       l2910 116C                         l1928 1A3A                         l1784 1848  
                       l2680 1A90                         l2808 19A6                         l2832 159E  
                       l2824 1586                         l2816 152E                         l2656 1116  
                       l2648 107A                         l2760 1424                         l2752 13DC  
                       l2664 176C                         l2496 148C                         l2488 146E  
                       l2584 0F98                         l2576 0F58                         l2568 0F22  
                       l2672 18B2                         l2920 1180                         l2912 116C  
                       l2834 15A0                         l2826 1588                         l2818 1554  
                       l2762 142C                         l2754 13F4                         l2746 13B4  
                       l2658 173E                         l2498 149A                         l2578 0F68  
                       l2586 0F9A                         l2594 0FCC                         l2674 18CA  
                       l2666 1896                         l2690 1674                         l2682 163C  
                       l2930 119C                         l2922 1188                         l2914 1170  
                       l2836 15AA                         l2828 1592                         l2756 1414  
                       l2764 143C                         l2748 13BC                         l2596 0FEE  
                       l2588 0FB8                         l2676 18D8                         l2668 18A2  
                       l2692 167C                         l2684 1640                         l2940 11C4  
                       l2932 11A4                         l2924 1190                         l2916 1174  
                       l2908 1154                         l2766 1454                         l2758 141C  
                       l2598 0FF6                         l2790 1A6C                         l2694 1684  
                       l2686 1656                         l2950 11D4                         l2942 11C8  
                       l2934 11AC                         l2926 1194                         l2918 1178  
                       l2792 1A82                         l2696 168C                         l2688 165E  
                       l2880 15AE                         l2960 1216                         l2952 11D8  
                       l2944 11CC                         l2936 11B4                         l2928 1198  
                       l2794 1928                         l2698 169C                         l2890 15E2  
                       l2882 15B2                         l2954 11DA                         l2946 11D0  
                       l2938 11C0                         l2796 1930                         l2892 15EC  
                       l2884 15BE                         l2956 11E6                         l2948 11D2  
                       l2798 1940                         l2894 15F8                         l2886 15CE  
                       l2958 11F4                         l2888 15D8                         l2896 1604  
                       l2898 1616                         STR_1 0E01                         STR_2 0E06  
                       u1300 149A                         u1301 1496                         u1230 1248  
                       u1310 14B4                         u1231 1244                         u1311 14B0  
                       u1240 1262                         u1320 14D2                         u1400 0E38  
                       u1241 125E                         u1321 14CE                         u1401 0E34  
                       u1250 1288                         u1330 14E8                         u1410 0E7C  
                       u1251 1284                         u1331 14E4                         u1411 0E78  
                       u1500 1ADE                         u1260 12A6                         u1340 150C  
                       u1420 0E9C                         u1501 1ADA                         u1261 12A2  
                       u1341 1508                         u1421 0E98                         u1510 16E4  
                       u1270 12C2                         u1350 130A                         u1430 0ED2  
                       u1511 16E0                         u1271 12BE                         u1351 1306  
                       u1431 0ECC                         u1520 1702                         u1280 12E8  
                       u1360 131A                         u1440 0ED4                         u1600 1656  
               _BAUD4CONbits 0EE9                         u1521 16FE                         u1281 12E4  
                       u1361 1316                         u1601 1652                         u1530 171E  
                       u1290 1480                         u1370 1340                         u1450 0F38  
                       u1610 1674                         u1531 171A                         u1291 147C  
                       u1371 133C                         u1451 0F34                         u1611 1670  
                       u2307 1220                         u1380 1372                         u1460 0F48  
                       u1540 17EC                         u1620 16B2                         u1381 136E  
                       u1461 0F44                         u1541 17E8                         u1621 16AE  
                       u2317 1692                         u1550 101A                         u1390 1972  
                       u1470 0F58                         u1630 16C8                         u1551 1016  
                       u2327 1432                         u1391 196E                         u1471 0F54  
                       u1631 16C4                         u1560 10D6                         u1720 13F4  
                       u1480 0F68                         u1800 1616                         u2337 19AC  
                       u1561 10D2                         u1721 13F0                         u1481 0F64  
                       u1801 1612                         u1730 1414                         u1570 1764  
                       u1490 0FAC                         u1810 1628                         _T2PR 0FBC  
                       u1731 1410                         u1491 0FA8                         u1811 1620  
                       u1740 1454                         u1580 178E                         u1741 1450  
                       u1750 146C                         u1590 179E                         u1751 1468  
                       u1591 179A                         u1840 11F4                         u1577 175A  
                       u1841 11F0                         u2297 115E                         u1850 1206  
                       u1587 1784                         u1851 11FE                         u1828 162A  
                       u1868 1208                         abs@a 0007                         _dbuf 00B2  
                       _main 1154                         _prec 00EA                         _nout 00E6  
                       fsr0h 0FEA                         fsr1h 0FE2                         indf0 0FEF  
                       fsr2h 0FDA                         fsr0l 0FE9                         indf1 0FE7  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 005F                         _stop 163C                         prodh 0FF4  
                       prodl 0FF3                         start 0020             returnToSender@mL 0043  
           returnToSender@mR 0044                 ___param_bank 0000                        ??_ISR 0001  
                      ??_abs 0009         returnToSender@timerH 0046         returnToSender@timerL 0047  
             _sendIntSerial4 1A6C                        ?_main 0001           _timer_high_pointer 0071  
            __end_of___awdiv 12FA              __end_of___awmod 151E                        ?_stop 0013  
            ___awdiv@divisor 0003              __end_of___lwdiv 173E                        i2l628 001A  
                      i2l629 001C              ___awdiv@counter 0005                 vfpfcnvrt@cnt 0010  
               vfpfcnvrt@fmt 000C                        _TMR0H 0FD4                        _TMR0L 0FD3  
    __end_of_sendCharSerial4 1AE4   __end_of_I2C_2_Master_Start 1B04   __end_of_I2C_2_Master_Write 1AF0  
                _turningGear 0072                        _flags 00EC                        _fputc 12FA  
                      _width 00E8                        _putch 1B04            _turnRight135Delay 0066  
                      tablat 0FF5              _turnLeft90Delay 006C             ??_returnToSender 0045  
                      ttemp5 0060                        ttemp6 0063                        ttemp7 0067  
                      status 0FD8                        wtemp8 0060              __end_of_sprintf 18E2  
            __initialization 18E2                 __end_of_main 1236                 __end_of_stop 16CA  
     __end_of_sendIntSerial4 1A8E                       ??_main 0049                       ??_stop 0015  
              __activetblptr 0003                 ?_setMotorPWM 000E                       ?_fputc 0001  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0001                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l3124 000A                       _RG6PPS 0E88  
              vfpfcnvrt@done 000F     __end_of_color_click_init 19CC                       _RX4PPS 0E15  
                     _TX4REG 0EE4             _turnLeft135Delay 0068                ??_Timer0_init 0001  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 001B                       ___wmul 1A46  
                  ??___awdiv 0005                    ??___awmod 0005                    ??___lwdiv 000B  
            ?_sendIntSerial4 0030                       clear_0 1908                       clear_1 1914  
           ___awdiv@quotient 0007              ___awmod@divisor 0003                  readTrail@tH 0001  
                readTrail@tL 0002                       isa$std 0001              ___awmod@counter 0005  
                     fputc@c 0001            _timer_low_pointer 0070                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           ?_sendCharSerial4 0001                       putch@c 0001             __end_of_vfprintf 17F6  
                     stop@mL 0013                       stop@mR 0014            ??_initDCmotorsPWM 0003  
                  ??_sprintf 0021            _buggy_lights_init 1848                   __accesstop 0060  
    __end_of__initialization 191E           ?_buggy_lights_init 0001                ___rparam_used 0001  
         returnToSender@mann 0048               __pcstackCOMRAM 0001                 __pidataBANK0 17F6  
        ??_buggy_lights_init 0001                __end_of_fputc 13B4                __end_of_putch 1B06  
        __end_of_Timer0_init 1A46                      ??_fputc 0004    __end_of_buggy_lights_init 1896  
                    ??_putch 0001                   __pbssBANK0 00B2                   __pbssBANK1 0100  
          _color_writetoaddr 1A8E                 _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003  
                    ?___wmul 0001          ??_color_writetoaddr 0004                      _SP4BRGH 0EE6  
                    _SP4BRGL 0EE5                      _SSP2ADD 0ED6                      _SSP2BUF 0ED5  
     color_writetoaddr@value 0003    __end_of_color_writetoaddr 1AAE           _I2C_2_Master_Start 1AFA  
                 _initUSART4 1AAE           _I2C_2_Master_Write 1AE4                      __Hparam 0000  
                    __Lparam 0000                  _Timer0_init 1A1E      sendStringSerial4@string 0002  
                    ___awdiv 1236                      ___awmod 146E          ?_I2C_2_Master_Start 0001  
                    ___lwdiv 16CA          ?_I2C_2_Master_Write 0001                    ?_vfprintf 0018  
               __psmallconst 0E00                      __pcinit 18E2                      __ramtop 0E00  
                    __ptext0 1154                      __ptext1 15AE                      __ptext2 163C  
                    __ptext3 1A6C                      __ptext4 1896                      __ptext5 17A0  
                    __ptext6 0E0A                      __ptext7 12FA                      __ptext8 1B04  
                    __ptext9 1964                    _T2CONbits 0FBD            __end_of_readTrail 1964  
           ___awmod@dividend 0001                    _T2HLTbits 0FBE                 readTrail@man 0003  
              _RxBufWriteCnt 00EF       fullSpeedAhead@leftGear 0016                      _sprintf 1896  
       ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002         end_of_initialization 191E  
                    fputc@fp 0003            ?_color_click_init 0001           ??_color_click_init 0005  
           ??_sendIntSerial4 0032            __end_of_vfpfcnvrt 1000                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0013                   ??_vfprintf 001B  
            _initDCmotorsPWM 151E         sendIntSerial4@string 0032                    _PORTFbits 0F8E  
         setMotorPWM@negDuty 0012                    _TRISAbits 0F81           setMotorPWM@posDuty 0011  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
           fullSpeedAhead@mL 0013             fullSpeedAhead@mR 0014     color_writetoaddr@address 0004  
                _CCP1CONbits 0FAB                 _EUSART4RXbuf 00D2                 _EUSART4TXbuf 0100  
                _CCP2CONbits 0FA7                  _CCP3CONbits 0F26                  ?_initUSART4 0001  
                _CCP4CONbits 0F22    sendCharSerial4@charToSend 0001                   main@motorL 004B  
                 main@motorR 0054               _fullSpeedAhead 13B4                  vfpfcnvrt@ap 000D  
                vfpfcnvrt@cp 0012                  vfpfcnvrt@fp 000B               __end_of___wmul 1A6C  
        start_initialization 18E2                  __end_of_ISR 0020                  __end_of_abs 1998  
              _TxBufWriteCnt 005E             _turnRight90Delay 006A      __end_of_initDCmotorsPWM 15AE  
                vfprintf@fmt 0019       __end_of_fullSpeedAhead 146E                     ??___wmul 0005  
                __pdataBANK0 0060                  __pbssCOMRAM 005D                    _backtrack 00ED  
           ___lwdiv@dividend 0007                 ?_Timer0_init 0001              ?_fullSpeedAhead 0013  
                  __pintcode 0008                     ?___awdiv 0001                     ?___awmod 0001  
                   ?___lwdiv 0007                  __smallconst 0E00            _I2C_2_Master_Idle 19F6  
          _I2C_2_Master_Init 19CC            _I2C_2_Master_Stop 1AF0                 _RxBufReadCnt 00EE  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001                ??_setMotorPWM 000F  
         ?_I2C_2_Master_Stop 0001             ___lwdiv@quotient 000B                _headbuttDelay 0062  
                  _readTrail 1928     initDCmotorsPWM@PWMperiod 0001                     ?_sprintf 001C  
                  _rampDelay 0075            _sendStringSerial4 173E          ??_I2C_2_Master_Idle 0001  
        ??_I2C_2_Master_Init 0001               ___wmul@product 0005                     _LATAbits 0F79  
        ??_I2C_2_Master_Stop 0002                     _LATCbits 0F7B                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0002  
                   _PIE4bits 0E2D                     _PIR0bits 0E33                     i2u192_40 001A  
                   i2u192_41 0016                     _PIR4bits 0E37             ?_initDCmotorsPWM 0001  
          ??_sendCharSerial4 0001               _returnToSender 15AE                     _SSP2CON2 0EDA  
        ??_sendStringSerial4 0004                     _SSP2STAT 0ED8                    _vfpfcnvrt 0E0A  
  __end_of_I2C_2_Master_Idle 1A1E    __end_of_I2C_2_Master_Init 19F6            ___wmul@multiplier 0001  
  __end_of_I2C_2_Master_Stop 1AFA                 setMotorPWM@m 000E  I2C_2_Master_Write@data_byte 0002  
               _TxBufReadCnt 005D                   ?_readTrail 0001                   vfpfcnvrt@c 0017  
                  copy_data0 18F6    __end_of_sendStringSerial4 17A0          __end_of_setMotorPWM 1154  
               ??_initUSART4 0001                     __Hrparam 0000       __end_of_returnToSender 163C  
                 vfprintf@ap 001A                     __Lrparam 0000                   vfprintf@fp 0018  
                 ?_vfpfcnvrt 000B                   _ANSELDbits 0EA7                   _ANSELFbits 0EB4  
                 sprintf@fmt 001E                   sprintf@ret 0021                   _T0CON0bits 0FD5  
                 _T0CON1bits 0FD6              ___lwdiv@divisor 0009           __end_of_initUSART4 1ACC  
            ___lwdiv@counter 000D                     __ptext10 146E                     __ptext11 1236  
                   __ptext20 151E                     __ptext12 173E                     __ptext21 1998  
                   __ptext13 1ACC                     __ptext22 1A8E                     __ptext14 1928  
                   __ptext23 1AE4                     __ptext15 13B4                     __ptext24 1AF0  
                   __ptext16 1000                     __ptext25 1AFA                     __ptext17 1A46  
                   __ptext26 19F6                     __ptext18 16CA                     __ptext27 19CC  
                   __ptext19 1AAE                     __ptext28 1848                     __ptext29 1A1E  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA              ?_returnToSender 0043  
                   isa$xinst 0000                   _RC4STAbits 0EE7                     int$flags 005F  
                   _vfprintf 17A0                   _INTCONbits 0FF2                  ??_readTrail 0004  
                _setMotorPWM 1000                     intlevel2 0000      fullSpeedAhead@rightGear 0017  
                  sprintf@ap 0023                 _topGearRight 0073            _manoeuvre_pointer 006F  
           ??_fullSpeedAhead 0015                  ??_vfpfcnvrt 000E             _color_click_init 1998  
      sendIntSerial4@integer 0030                  _topGearLeft 0074                     sprintf@f 0024  
                   sprintf@s 001C                   _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C  
            _trail_manoeuvre 0076              _manoeuvre_count 006E                   _TX4STAbits 0EE8  
            _sendCharSerial4 1ACC  
