

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 15:40:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 18/08/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F67K40 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   001678                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _turnLeft90Delay
    85   001678  00AF               	dw	175
    86                           
    87                           ;initializer for _turningGear
    88   00167A  2A                 	db	42
    89                           
    90                           ;initializer for _topGearRight
    91   00167B  20                 	db	32
    92                           
    93                           ;initializer for _topGearLeft
    94   00167C  1E                 	db	30
    95                           
    96                           ;initializer for _rampDelay
    97   00167D  08                 	db	8
    98                           
    99                           	psect	idataBANK0
   100   00164C                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _squareDelay
   104   00164C  012C               	dw	300
   105                           
   106                           ;initializer for _headbuttDelay
   107   00164E  0046               	dw	70
   108                           
   109                           ;initializer for _turn180Delay
   110   001650  01FE               	dw	510
   111                           
   112                           ;initializer for _turnRight135Delay
   113   001652  012C               	dw	300
   114                           
   115                           ;initializer for _turnLeft135Delay
   116   001654  012C               	dw	300
   117                           
   118                           ;initializer for _turnRight90Delay
   119   001656  00AF               	dw	175
   120   000000                     _TX4REG	set	3812
   121   000000                     _RC4STAbits	set	3815
   122   000000                     _SP4BRGH	set	3814
   123   000000                     _LATEbits	set	3965
   124   000000                     _TRISEbits	set	3973
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _LATFbits	set	3966
   128   000000                     _LATHbits	set	3968
   129   000000                     _TRISFbits	set	3974
   130   000000                     _TRISHbits	set	3976
   131   000000                     _SSP2CON2bits	set	3802
   132   000000                     _RX4PPS	set	3605
   133   000000                     _SSP2CLKPPS	set	3612
   134   000000                     _SSP2DATPPS	set	3613
   135   000000                     _RC7PPS	set	3689
   136   000000                     _RE2PPS	set	3700
   137   000000                     _LATAbits	set	3961
   138   000000                     _LATDbits	set	3964
   139   000000                     _TRISDbits	set	3972
   140   000000                     _T2PR	set	4028
   141   000000                     _T2CONbits	set	4029
   142   000000                     _CCPR2H	set	4006
   143   000000                     _CCPR1H	set	4010
   144   000000                     _TRISCbits	set	3971
   145   000000                     _TRISAbits	set	3969
   146   000000                     _LATCbits	set	3963
   147   000000                     _RE4PPS	set	3702
   148   000000                     _RG6PPS	set	3720
   149   000000                     _RD5PPS	set	3695
   150   000000                     _ANSELDbits	set	3751
   151   000000                     _SSP2ADD	set	3798
   152   000000                     _SSP2CON1bits	set	3801
   153   000000                     _CCPR4H	set	3873
   154   000000                     _CCPR3H	set	3877
   155   000000                     _T0CON0bits	set	4053
   156   000000                     _T0CON1bits	set	4054
   157   000000                     _T2CLKCONbits	set	4031
   158   000000                     _T2HLTbits	set	4030
   159   000000                     _CCP1CONbits	set	4011
   160   000000                     _CCPTMRS0bits	set	4013
   161   000000                     _CCP2CONbits	set	4007
   162   000000                     _CCP3CONbits	set	3878
   163   000000                     _CCP4CONbits	set	3874
   164   000000                     _RC4REG	set	3811
   165   000000                     _SP4BRGL	set	3813
   166   000000                     _TX4STAbits	set	3816
   167   000000                     _BAUD4CONbits	set	3817
   168   000000                     _SSP2CON2	set	3802
   169   000000                     _SSP2STAT	set	3800
   170   000000                     _SSP2BUF	set	3797
   171   000000                     _PIE0bits	set	3625
   172   000000                     _PIE4bits	set	3629
   173   000000                     _PIR4bits	set	3639
   174   000000                     _RC0PPS	set	3682
   175   000000                     _RD6PPS	set	3696
   176   000000                     _PIR0bits	set	3635
   177   000000                     _INTCONbits	set	4082
   178                           
   179                           	psect	smallconst
   180   000E00                     __psmallconst:
   181                           	callstack 0
   182   000E00  00                 	db	0
   183   000E01                     STR_1:
   184                           
   185                           ; BSR set to: 14
   186   000E01  25                 	db	37
   187   000E02  64                 	db	100	;'d'
   188   000E03  20                 	db	32
   189   000E04  0D                 	db	13
   190   000E05  00                 	db	0
   191   000E06  00                 	db	0	; dummy byte at the end
   192   000000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196   0013AE                     __pcinit:
   197                           	callstack 0
   198   0013AE                     start_initialization:
   199                           	callstack 0
   200   0013AE                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to BANK0 (12 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205   0013AE  0E4C               	movlw	low __pidataBANK0
   206   0013B0  6EF6               	movwf	tblptrl,c
   207   0013B2  0E16               	movlw	high __pidataBANK0
   208   0013B4  6EF7               	movwf	tblptrh,c
   209   0013B6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210   0013B8  6EF8               	movwf	tblptru,c
   211   0013BA  EE00  F0D4         	lfsr	0,__pdataBANK0
   212   0013BE  EE10 F00C          	lfsr	1,12
   213   0013C2                     copy_data0:
   214   0013C2  0009               	tblrd		*+
   215   0013C4  CFF5 FFEE          	movff	tablat,postinc0
   216   0013C8  50E5               	movf	postdec1,w,c
   217   0013CA  50E1               	movf	fsr1l,w,c
   218   0013CC  E1FA               	bnz	copy_data0
   219                           
   220                           ; Initialize objects allocated to COMRAM (6 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222   0013CE  0E78               	movlw	low __pidataCOMRAM
   223   0013D0  6EF6               	movwf	tblptrl,c
   224   0013D2  0E16               	movlw	high __pidataCOMRAM
   225   0013D4  6EF7               	movwf	tblptrh,c
   226   0013D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227   0013D8  6EF8               	movwf	tblptru,c
   228   0013DA  EE00  F059         	lfsr	0,__pdataCOMRAM
   229   0013DE  EE10 F006          	lfsr	1,6
   230   0013E2                     copy_data1:
   231   0013E2  0009               	tblrd		*+
   232   0013E4  CFF5 FFEE          	movff	tablat,postinc0
   233   0013E8  50E5               	movf	postdec1,w,c
   234   0013EA  50E1               	movf	fsr1l,w,c
   235   0013EC  E1FA               	bnz	copy_data1
   236                           
   237                           ; Clear objects allocated to BANK0 (116 bytes)
   238   0013EE  EE00  F060         	lfsr	0,__pbssBANK0
   239   0013F2  0E74               	movlw	116
   240   0013F4                     clear_0:
   241   0013F4  6AEE               	clrf	postinc0,c
   242   0013F6  06E8               	decf	wreg,f,c
   243   0013F8  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to COMRAM (7 bytes)
   246   0013FA  EE00  F052         	lfsr	0,__pbssCOMRAM
   247   0013FE  0E07               	movlw	7
   248   001400                     clear_1:
   249   001400  6AEE               	clrf	postinc0,c
   250   001402  06E8               	decf	wreg,f,c
   251   001404  E1FD               	bnz	clear_1
   252   001406                     end_of_initialization:
   253                           	callstack 0
   254   001406                     __end_of__initialization:
   255                           	callstack 0
   256   001406  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   257   001408  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   258   00140A  0100               	movlb	0
   259   00140C  EF45  F009         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262   000052                     __pbssCOMRAM:
   263                           	callstack 0
   264   000052                     _timer_count:
   265                           	callstack 0
   266   000052                     	ds	2
   267   000054                     _flags:
   268                           	callstack 0
   269   000054                     	ds	1
   270   000055                     _TxBufReadCnt:
   271                           	callstack 0
   272   000055                     	ds	1
   273   000056                     _TxBufWriteCnt:
   274                           	callstack 0
   275   000056                     	ds	1
   276   000057                     _RxBufReadCnt:
   277                           	callstack 0
   278   000057                     	ds	1
   279   000058                     _RxBufWriteCnt:
   280                           	callstack 0
   281   000058                     	ds	1
   282                           
   283                           	psect	dataCOMRAM
   284   000059                     __pdataCOMRAM:
   285                           	callstack 0
   286   000059                     _turnLeft90Delay:
   287                           	callstack 0
   288   000059                     	ds	2
   289   00005B                     _turningGear:
   290                           	callstack 0
   291   00005B                     	ds	1
   292   00005C                     _topGearRight:
   293                           	callstack 0
   294   00005C                     	ds	1
   295   00005D                     _topGearLeft:
   296                           	callstack 0
   297   00005D                     	ds	1
   298   00005E                     _rampDelay:
   299                           	callstack 0
   300   00005E                     	ds	1
   301                           
   302                           	psect	bssBANK0
   303   000060                     __pbssBANK0:
   304                           	callstack 0
   305   000060                     _EUSART4TXbuf:
   306                           	callstack 0
   307   000060                     	ds	60
   308   00009C                     _dbuf:
   309                           	callstack 0
   310   00009C                     	ds	32
   311   0000BC                     _EUSART4RXbuf:
   312                           	callstack 0
   313   0000BC                     	ds	20
   314   0000D0                     _width:
   315                           	callstack 0
   316   0000D0                     	ds	2
   317   0000D2                     _prec:
   318                           	callstack 0
   319   0000D2                     	ds	2
   320                           
   321                           	psect	dataBANK0
   322   0000D4                     __pdataBANK0:
   323                           	callstack 0
   324   0000D4                     _squareDelay:
   325                           	callstack 0
   326   0000D4                     	ds	2
   327   0000D6                     _headbuttDelay:
   328                           	callstack 0
   329   0000D6                     	ds	2
   330   0000D8                     _turn180Delay:
   331                           	callstack 0
   332   0000D8                     	ds	2
   333   0000DA                     _turnRight135Delay:
   334                           	callstack 0
   335   0000DA                     	ds	2
   336   0000DC                     _turnLeft135Delay:
   337                           	callstack 0
   338   0000DC                     	ds	2
   339   0000DE                     _turnRight90Delay:
   340                           	callstack 0
   341   0000DE                     	ds	2
   342                           
   343                           	psect	cstackCOMRAM
   344   000001                     __pcstackCOMRAM:
   345                           	callstack 0
   346   000001                     ??_lights_flashing:
   347   000001                     ??_I2C_2_Master_Idle:
   348   000001                     ?___awdiv:
   349                           	callstack 0
   350   000001                     ?___awmod:
   351                           	callstack 0
   352   000001                     sendCharSerial4@charToSend:
   353                           	callstack 0
   354   000001                     initDCmotorsPWM@PWMperiod:
   355                           	callstack 0
   356   000001                     ___awdiv@dividend:
   357                           	callstack 0
   358   000001                     ___awmod@dividend:
   359                           	callstack 0
   360   000001                     fputc@c:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x0
   364   000001                     	ds	1
   365   000002                     I2C_2_Master_Write@data_byte:
   366                           	callstack 0
   367   000002                     sendStringSerial4@string:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x1
   371   000002                     	ds	1
   372   000003                     color_writetoaddr@value:
   373                           	callstack 0
   374   000003                     fputc@fp:
   375                           	callstack 0
   376   000003                     ___awdiv@divisor:
   377                           	callstack 0
   378   000003                     ___awmod@divisor:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x2
   382   000003                     	ds	1
   383   000004                     ??_fputc:
   384   000004                     color_writetoaddr@address:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388   000004                     	ds	1
   389   000005                     ??_color_click_init:
   390   000005                     ___awdiv@counter:
   391                           	callstack 0
   392   000005                     ___awmod@counter:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x4
   396   000005                     	ds	1
   397   000006                     ___awdiv@sign:
   398                           	callstack 0
   399   000006                     ___awmod@sign:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x5
   403   000006                     	ds	1
   404   000007                     ?_abs:
   405                           	callstack 0
   406   000007                     ___awdiv@quotient:
   407                           	callstack 0
   408   000007                     abs@a:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x6
   412   000007                     	ds	2
   413   000009                     ??_abs:
   414                           
   415                           ; 1 bytes @ 0x8
   416   000009                     	ds	2
   417   00000B                     vfpfcnvrt@fp:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xA
   421   00000B                     	ds	1
   422   00000C                     vfpfcnvrt@fmt:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xB
   426   00000C                     	ds	1
   427   00000D                     vfpfcnvrt@ap:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xC
   431   00000D                     	ds	1
   432   00000E                     ??_vfpfcnvrt:
   433                           
   434                           ; 1 bytes @ 0xD
   435   00000E                     	ds	1
   436   00000F                     vfpfcnvrt@done:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0xE
   440   00000F                     	ds	1
   441   000010                     vfpfcnvrt@cp:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xF
   445   000010                     	ds	1
   446   000011                     vfpfcnvrt@convarg:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x10
   450   000011                     	ds	4
   451   000015                     vfpfcnvrt@c:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x14
   455   000015                     	ds	1
   456   000016                     ?_vfprintf:
   457                           	callstack 0
   458   000016                     vfprintf@fp:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x15
   462   000016                     	ds	1
   463   000017                     vfprintf@fmt:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x16
   467   000017                     	ds	1
   468   000018                     vfprintf@ap:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x17
   472   000018                     	ds	1
   473   000019                     vfprintf@cfmt:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x18
   477   000019                     	ds	1
   478   00001A                     ?_sprintf:
   479                           	callstack 0
   480   00001A                     sprintf@s:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x19
   484   00001A                     	ds	1
   485   00001B                     sprintf@fmt:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x1A
   489   00001B                     	ds	3
   490   00001E                     sprintf@ap:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x1D
   494   00001E                     	ds	1
   495   00001F                     sprintf@f:
   496                           	callstack 0
   497                           
   498                           ; 12 bytes @ 0x1E
   499   00001F                     	ds	12
   500   00002B                     sendIntSerial4@integer:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x2A
   504   00002B                     	ds	2
   505   00002D                     sendIntSerial4@string:
   506                           	callstack 0
   507                           
   508                           ; 17 bytes @ 0x2C
   509   00002D                     	ds	17
   510   00003E                     ??_main:
   511                           
   512                           ; 1 bytes @ 0x3D
   513   00003E                     	ds	2
   514   000040                     main@motorL:
   515                           	callstack 0
   516                           
   517                           ; 9 bytes @ 0x3F
   518   000040                     	ds	9
   519   000049                     main@motorR:
   520                           	callstack 0
   521                           
   522                           ; 9 bytes @ 0x48
   523   000049                     	ds	9
   524                           
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 26 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  motorR          9   72[COMRAM] struct DC_motor
   535 ;;  motorL          9   63[COMRAM] struct DC_motor
   536 ;;  PWMcycle        2    0        unsigned int 
   537 ;;  backtrack       1    0        unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   548 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   550 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   551 ;;Total ram usage:       20 bytes
   552 ;; Hardware stack levels required when called: 7
   553 ;; This function calls:
   554 ;;		_Timer0_init
   555 ;;		_buggy_lights_init
   556 ;;		_color_click_init
   557 ;;		_initDCmotorsPWM
   558 ;;		_initUSART4
   559 ;;		_lights_flashing
   560 ;;		_sendIntSerial4
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567   00128A                     __ptext0:
   568                           	callstack 0
   569   00128A                     _main:
   570                           	callstack 24
   571   00128A                     
   572                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   573   00128A  0E52               	movlw	82
   574   00128C  6E3F               	movwf	(??_main+1)^0,c
   575   00128E  0E2B               	movlw	43
   576   001290  6E3E               	movwf	??_main^0,c
   577   001292  0E00               	movlw	0
   578   001294                     u1707:
   579   001294  2EE8               	decfsz	wreg,f,c
   580   001296  D7FE               	bra	u1707
   581   001298  2E3E               	decfsz	??_main^0,f,c
   582   00129A  D7FC               	bra	u1707
   583   00129C  2E3F               	decfsz	(??_main+1)^0,f,c
   584   00129E  D7FA               	bra	u1707
   585   0012A0  D000               	nop2	
   586   0012A2                     
   587                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   588   0012A2  0E00               	movlw	0
   589   0012A4  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   590   0012A6  0E63               	movlw	99
   591   0012A8  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   592   0012AA  EC8F  F009         	call	_initDCmotorsPWM	;wreg free
   593   0012AE                     
   594                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   595   0012AE  0E00               	movlw	0
   596   0012B0  6E40               	movwf	main@motorL^0,c
   597   0012B2                     
   598                           ;main.c: 35:     motorL.direction = 1;
   599   0012B2  0E01               	movlw	1
   600   0012B4  6E41               	movwf	(main@motorL+1)^0,c
   601   0012B6                     
   602                           ;main.c: 36:     motorL.brakemode = 1;
   603   0012B6  0E01               	movlw	1
   604   0012B8  6E42               	movwf	(main@motorL+2)^0,c
   605   0012BA                     
   606                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   607   0012BA  0E00               	movlw	0
   608   0012BC  6E44               	movwf	(main@motorL+4)^0,c
   609   0012BE  0E63               	movlw	99
   610   0012C0  6E43               	movwf	(main@motorL+3)^0,c
   611   0012C2                     
   612                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   613   0012C2  0EAA               	movlw	170
   614   0012C4  6E45               	movwf	(main@motorL+5)^0,c
   615   0012C6  0E0F               	movlw	15
   616   0012C8  6E46               	movwf	(main@motorL+6)^0,c
   617   0012CA                     
   618                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   619   0012CA  0EA6               	movlw	166
   620   0012CC  6E47               	movwf	(main@motorL+7)^0,c
   621   0012CE  0E0F               	movlw	15
   622   0012D0  6E48               	movwf	(main@motorL+8)^0,c
   623   0012D2                     
   624                           ;main.c: 41:     motorR.power = 0;
   625   0012D2  0E00               	movlw	0
   626   0012D4  6E49               	movwf	main@motorR^0,c
   627   0012D6                     
   628                           ;main.c: 42:     motorR.direction = 1;
   629   0012D6  0E01               	movlw	1
   630   0012D8  6E4A               	movwf	(main@motorR+1)^0,c
   631   0012DA                     
   632                           ;main.c: 43:     motorR.brakemode = 1;
   633   0012DA  0E01               	movlw	1
   634   0012DC  6E4B               	movwf	(main@motorR+2)^0,c
   635   0012DE                     
   636                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   637   0012DE  0E00               	movlw	0
   638   0012E0  6E4D               	movwf	(main@motorR+4)^0,c
   639   0012E2  0E63               	movlw	99
   640   0012E4  6E4C               	movwf	(main@motorR+3)^0,c
   641   0012E6                     
   642                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   643   0012E6  0E25               	movlw	37
   644   0012E8  6E4E               	movwf	(main@motorR+5)^0,c
   645   0012EA  0E0F               	movlw	15
   646   0012EC  6E4F               	movwf	(main@motorR+6)^0,c
   647   0012EE                     
   648                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   649   0012EE  0E21               	movlw	33
   650   0012F0  6E50               	movwf	(main@motorR+7)^0,c
   651   0012F2  0E0F               	movlw	15
   652   0012F4  6E51               	movwf	(main@motorR+8)^0,c
   653   0012F6                     
   654                           ;main.c: 48:     buggy_lights_init();
   655   0012F6  EC08  F00A         	call	_buggy_lights_init	;wreg free
   656   0012FA                     
   657                           ;main.c: 49:     color_click_init();
   658   0012FA  EC84  F00A         	call	_color_click_init	;wreg free
   659   0012FE                     
   660                           ;main.c: 50:     initUSART4();
   661   0012FE  EC0B  F00B         	call	_initUSART4	;wreg free
   662   001302                     
   663                           ;main.c: 51:     Timer0_init();
   664   001302  ECEC  F00A         	call	_Timer0_init	;wreg free
   665   001306                     l2450:
   666                           
   667                           ;main.c: 65:         sendIntSerial4((int)timer_count);
   668   001306  C052  F02B         	movff	_timer_count,sendIntSerial4@integer
   669   00130A  C053  F02C         	movff	_timer_count+1,sendIntSerial4@integer+1
   670   00130E  ECFC  F00A         	call	_sendIntSerial4	;wreg free
   671   001312                     
   672                           ;main.c: 66:         lights_flashing();
   673   001312  ECF8  F008         	call	_lights_flashing	;wreg free
   674   001316  EF83  F009         	goto	l2450
   675   00131A  EF12  F000         	goto	start
   676   00131E                     __end_of_main:
   677                           	callstack 0
   678                           
   679 ;; *************** function _sendIntSerial4 *****************
   680 ;; Defined at:
   681 ;;		line 44 in file "serial.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  integer         2   42[COMRAM] int 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  string         17   44[COMRAM] unsigned char [17]
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;Total ram usage:       19 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 6
   702 ;; This function calls:
   703 ;;		_sendStringSerial4
   704 ;;		_sprintf
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711   0015F8                     __ptext1:
   712                           	callstack 0
   713   0015F8                     _sendIntSerial4:
   714                           	callstack 24
   715   0015F8                     
   716                           ;serial.c: 45:     char string[sizeof(int) * 8 + 1];;serial.c: 46:     sprintf(string, "
      +                          %d \r", integer);
   717   0015F8  0E2D               	movlw	low sendIntSerial4@string
   718   0015FA  6E1A               	movwf	sprintf@s^0,c
   719   0015FC  0E01               	movlw	low STR_1
   720   0015FE  6E1B               	movwf	sprintf@fmt^0,c
   721   001600  C02B  F01C         	movff	sendIntSerial4@integer,?_sprintf+2
   722   001604  C02C  F01D         	movff	sendIntSerial4@integer+1,?_sprintf+3
   723   001608  EC50  F00A         	call	_sprintf	;wreg free
   724   00160C                     
   725                           ;serial.c: 47:     sendStringSerial4(string);
   726   00160C  0E2D               	movlw	low sendIntSerial4@string
   727   00160E  6E02               	movwf	sendStringSerial4@string^0,c
   728   001610  EC9E  F00A         	call	_sendStringSerial4	;wreg free
   729   001614  0012               	return		;funcret
   730   001616                     __end_of_sendIntSerial4:
   731                           	callstack 0
   732                           
   733 ;; *************** function _sprintf *****************
   734 ;; Defined at:
   735 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  s               1   25[COMRAM] PTR unsigned char 
   738 ;;		 -> sendIntSerial4@string(17), 
   739 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   740 ;;		 -> STR_1(5), 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  f              12   30[COMRAM] struct _IO_FILE
   743 ;;  ret             2    0        int 
   744 ;;  ap              1   29[COMRAM] PTR void [1]
   745 ;;		 -> ?_sprintf(2), 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  2   25[COMRAM] int 
   748 ;; Registers used:
   749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:       17 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 5
   762 ;; This function calls:
   763 ;;		_vfprintf
   764 ;; This function is called by:
   765 ;;		_sendIntSerial4
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770   0014A0                     __ptext2:
   771                           	callstack 0
   772   0014A0                     _sprintf:
   773                           	callstack 24
   774   0014A0  0E1C               	movlw	low (?_sprintf+2)
   775   0014A2  6E1E               	movwf	sprintf@ap^0,c
   776   0014A4  C01A  F01F         	movff	sprintf@s,sprintf@f
   777   0014A8  0E00               	movlw	0
   778   0014AA  6E23               	movwf	(sprintf@f+4)^0,c
   779   0014AC  0E00               	movlw	0
   780   0014AE  6E22               	movwf	(sprintf@f+3)^0,c
   781   0014B0  0E00               	movlw	0
   782   0014B2  6E2A               	movwf	(sprintf@f+11)^0,c
   783   0014B4  0E00               	movlw	0
   784   0014B6  6E29               	movwf	(sprintf@f+10)^0,c
   785   0014B8  0E1F               	movlw	low sprintf@f
   786   0014BA  6E16               	movwf	vfprintf@fp^0,c
   787   0014BC  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   788   0014C0  0E1E               	movlw	low sprintf@ap
   789   0014C2  6E18               	movwf	vfprintf@ap^0,c
   790   0014C4  EC2F  F00A         	call	_vfprintf	;wreg free
   791   0014C8  501A               	movf	sprintf@s^0,w,c
   792   0014CA  2422               	addwf	(sprintf@f+3)^0,w,c
   793   0014CC  6ED9               	movwf	fsr2l,c
   794   0014CE  6ADA               	clrf	fsr2h,c
   795   0014D0  6ADF               	clrf	indf2,c
   796   0014D2  0012               	return		;funcret
   797   0014D4                     __end_of_sprintf:
   798                           	callstack 0
   799                           
   800 ;; *************** function _vfprintf *****************
   801 ;; Defined at:
   802 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
   805 ;;		 -> sprintf@f(12), 
   806 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   807 ;;		 -> STR_1(5), 
   808 ;;  ap              1   23[COMRAM] PTR PTR void 
   809 ;;		 -> sprintf@ap(1), 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   812 ;;		 -> STR_1(5), 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2   21[COMRAM] int 
   815 ;; Registers used:
   816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;Total ram usage:        4 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 4
   829 ;; This function calls:
   830 ;;		_vfpfcnvrt
   831 ;; This function is called by:
   832 ;;		_sprintf
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text3
   837   00145E                     __ptext3:
   838                           	callstack 0
   839   00145E                     _vfprintf:
   840                           	callstack 24
   841   00145E                     
   842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   843   00145E  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
   844                           
   845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   846   001462  EF3B  F00A         	goto	l2186
   847   001466                     l2184:
   848                           
   849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   850   001466  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
   851   00146A  0E19               	movlw	low vfprintf@cfmt
   852   00146C  6E0C               	movwf	vfpfcnvrt@fmt^0,c
   853   00146E  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
   854   001472  EC04  F007         	call	_vfpfcnvrt	;wreg free
   855   001476                     l2186:
   856                           
   857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   858   001476  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
   859   00147A                     	if	1	;There is more than 1 active tblptr byte
   860   00147A  0E0E               	movlw	high __smallconst
   861   00147C  6EF7               	movwf	tblptrh,c
   862   00147E                     	endif
   863   00147E                     	if	0	;tblptru may be non-zero
   864   00147E                     	endif
   865   00147E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   866   00147E  0E00               	movlw	low (__smallconst shr (0+16))
   867   001480  6EF8               	movwf	tblptru,c
   868   001482                     	endif
   869   001482  0008               	tblrd		*
   870   001484  50F5               	movf	tablat,w,c
   871   001486  0900               	iorlw	0
   872   001488  A4D8               	btfss	status,2,c
   873   00148A  EF49  F00A         	goto	u1041
   874   00148E  EF4B  F00A         	goto	u1040
   875   001492                     u1041:
   876   001492  EF33  F00A         	goto	l2184
   877   001496                     u1040:
   878   001496                     
   879                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   880   001496  0E00               	movlw	0
   881   001498  6E17               	movwf	(?_vfprintf+1)^0,c
   882   00149A  0E00               	movlw	0
   883   00149C  6E16               	movwf	?_vfprintf^0,c
   884   00149E  0012               	return		;funcret
   885   0014A0                     __end_of_vfprintf:
   886                           	callstack 0
   887                           
   888 ;; *************** function _vfpfcnvrt *****************
   889 ;; Defined at:
   890 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
   893 ;;		 -> sprintf@f(12), 
   894 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
   895 ;;		 -> vfprintf@cfmt(1), 
   896 ;;  ap              1   12[COMRAM] PTR PTR void 
   897 ;;		 -> sprintf@ap(1), 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  convarg         4   16[COMRAM] struct .
   900 ;;  c               1   20[COMRAM] unsigned char 
   901 ;;  cp              1   15[COMRAM] PTR unsigned char 
   902 ;;		 -> STR_1(5), 
   903 ;;  done            1   14[COMRAM] _Bool 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   913 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;Total ram usage:       11 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 3
   920 ;; This function calls:
   921 ;;		___awdiv
   922 ;;		___awmod
   923 ;;		_abs
   924 ;;		_fputc
   925 ;; This function is called by:
   926 ;;		_vfprintf
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text4
   931   000E08                     __ptext4:
   932                           	callstack 0
   933   000E08                     _vfpfcnvrt:
   934                           	callstack 24
   935   000E08                     
   936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   937   000E08  500C               	movf	vfpfcnvrt@fmt^0,w,c
   938   000E0A  6ED9               	movwf	fsr2l,c
   939   000E0C  6ADA               	clrf	fsr2h,c
   940   000E0E  CFDF FFF6          	movff	indf2,tblptrl
   941   000E12                     	if	1	;There is more than 1 active tblptr byte
   942   000E12  0E0E               	movlw	high __smallconst
   943   000E14  6EF7               	movwf	tblptrh,c
   944   000E16                     	endif
   945   000E16                     	if	0	;tblptru may be non-zero
   946   000E16                     	endif
   947   000E16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   948   000E16  0E00               	movlw	low (__smallconst shr (0+16))
   949   000E18  6EF8               	movwf	tblptru,c
   950   000E1A                     	endif
   951   000E1A  0008               	tblrd		*
   952   000E1C  50F5               	movf	tablat,w,c
   953   000E1E  0A25               	xorlw	37
   954   000E20  A4D8               	btfss	status,2,c
   955   000E22  EF15  F007         	goto	u921
   956   000E26  EF17  F007         	goto	u920
   957   000E2A                     u921:
   958   000E2A  EFD5  F007         	goto	l2160
   959   000E2E                     u920:
   960   000E2E                     
   961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   962   000E2E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   963   000E30  6ED9               	movwf	fsr2l,c
   964   000E32  6ADA               	clrf	fsr2h,c
   965   000E34  2ADF               	incf	indf2,f,c
   966   000E36                     
   967                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   968   000E36  0E00               	movlw	0
   969   000E38  0100               	movlb	0	; () banked
   970   000E3A  6FD1               	movwf	(_width+1)& (0+255),b
   971   000E3C  0E00               	movlw	0
   972   000E3E  6FD0               	movwf	_width& (0+255),b
   973   000E40  C0D0  F054         	movff	_width,_flags
   974   000E44                     
   975                           ; BSR set to: 0
   976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   977   000E44  69D2               	setf	_prec& (0+255),b
   978   000E46  69D3               	setf	(_prec+1)& (0+255),b
   979   000E48                     
   980                           ; BSR set to: 0
   981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   982   000E48  500C               	movf	vfpfcnvrt@fmt^0,w,c
   983   000E4A  6ED9               	movwf	fsr2l,c
   984   000E4C  6ADA               	clrf	fsr2h,c
   985   000E4E  50DF               	movf	indf2,w,c
   986   000E50  6E10               	movwf	vfpfcnvrt@cp^0,c
   987   000E52                     
   988                           ; BSR set to: 0
   989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   990   000E52  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   991   000E56                     	if	1	;There is more than 1 active tblptr byte
   992   000E56  0E0E               	movlw	high __smallconst
   993   000E58  6EF7               	movwf	tblptrh,c
   994   000E5A                     	endif
   995   000E5A                     	if	0	;tblptru may be non-zero
   996   000E5A                     	endif
   997   000E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   998   000E5A  0E00               	movlw	low (__smallconst shr (0+16))
   999   000E5C  6EF8               	movwf	tblptru,c
  1000   000E5E                     	endif
  1001   000E5E  0008               	tblrd		*
  1002   000E60  50F5               	movf	tablat,w,c
  1003   000E62  0A64               	xorlw	100
  1004   000E64  B4D8               	btfsc	status,2,c
  1005   000E66  EF37  F007         	goto	u931
  1006   000E6A  EF39  F007         	goto	u930
  1007   000E6E                     u931:
  1008   000E6E  EF49  F007         	goto	l2130
  1009   000E72                     u930:
  1010   000E72                     
  1011                           ; BSR set to: 0
  1012   000E72  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1013   000E76                     	if	1	;There is more than 1 active tblptr byte
  1014   000E76  0E0E               	movlw	high __smallconst
  1015   000E78  6EF7               	movwf	tblptrh,c
  1016   000E7A                     	endif
  1017   000E7A                     	if	0	;tblptru may be non-zero
  1018   000E7A                     	endif
  1019   000E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1020   000E7A  0E00               	movlw	low (__smallconst shr (0+16))
  1021   000E7C  6EF8               	movwf	tblptru,c
  1022   000E7E                     	endif
  1023   000E7E  0008               	tblrd		*
  1024   000E80  50F5               	movf	tablat,w,c
  1025   000E82  0A69               	xorlw	105
  1026   000E84  A4D8               	btfss	status,2,c
  1027   000E86  EF47  F007         	goto	u941
  1028   000E8A  EF49  F007         	goto	u940
  1029   000E8E                     u941:
  1030   000E8E  EFCF  F007         	goto	l2156
  1031   000E92                     u940:
  1032   000E92                     l2130:
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1036   000E92  500D               	movf	vfpfcnvrt@ap^0,w,c
  1037   000E94  6ED9               	movwf	fsr2l,c
  1038   000E96  6ADA               	clrf	fsr2h,c
  1039   000E98  0E02               	movlw	2
  1040   000E9A  26DF               	addwf	indf2,f,c
  1041   000E9C  5CDF               	subwf	indf2,w,c
  1042   000E9E  6ED9               	movwf	fsr2l,c
  1043   000EA0  6ADA               	clrf	fsr2h,c
  1044   000EA2  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1045   000EA6  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1046   000EAA                     
  1047                           ; BSR set to: 0
  1048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1049   000EAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1050   000EAC  6ED9               	movwf	fsr2l,c
  1051   000EAE  6ADA               	clrf	fsr2h,c
  1052   000EB0  2810               	incf	vfpfcnvrt@cp^0,w,c
  1053   000EB2  6EDF               	movwf	indf2,c
  1054   000EB4                     
  1055                           ; BSR set to: 0
  1056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1057   000EB4  0E20               	movlw	32
  1058   000EB6  6E15               	movwf	vfpfcnvrt@c^0,c
  1059                           
  1060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1061   000EB8  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1062   000EBA  EF61  F007         	goto	u951
  1063   000EBE  EF64  F007         	goto	u950
  1064   000EC2                     u951:
  1065   000EC2  0E01               	movlw	1
  1066   000EC4  EF65  F007         	goto	u960
  1067   000EC8                     u950:
  1068   000EC8  0E00               	movlw	0
  1069   000ECA                     u960:
  1070   000ECA  6E0F               	movwf	vfpfcnvrt@done^0,c
  1071   000ECC                     l2136:
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1074   000ECC  0615               	decf	vfpfcnvrt@c^0,f,c
  1075   000ECE  5015               	movf	vfpfcnvrt@c^0,w,c
  1076   000ED0  0F9C               	addlw	low _dbuf
  1077   000ED2  6ED9               	movwf	fsr2l,c
  1078   000ED4  6ADA               	clrf	fsr2h,c
  1079   000ED6  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1080   000EDA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1081   000EDE  0E00               	movlw	0
  1082   000EE0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1083   000EE2  0E0A               	movlw	10
  1084   000EE4  6E03               	movwf	___awmod@divisor^0,c
  1085   000EE6  EC4B  F008         	call	___awmod	;wreg free
  1086   000EEA  C001  F007         	movff	?___awmod,abs@a
  1087   000EEE  C002  F008         	movff	?___awmod+1,abs@a+1
  1088   000EF2  EC6A  F00A         	call	_abs	;wreg free
  1089   000EF6  5007               	movf	?_abs^0,w,c
  1090   000EF8  0F30               	addlw	48
  1091   000EFA  6EDF               	movwf	indf2,c
  1092   000EFC                     
  1093                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1094   000EFC  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1095   000F00  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1096   000F04  0E00               	movlw	0
  1097   000F06  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1098   000F08  0E0A               	movlw	10
  1099   000F0A  6E03               	movwf	___awdiv@divisor^0,c
  1100   000F0C  ECE9  F007         	call	___awdiv	;wreg free
  1101   000F10  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1102   000F14  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1103   000F18                     
  1104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1105   000F18  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1106   000F1A  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1107   000F1C  B4D8               	btfsc	status,2,c
  1108   000F1E  EF93  F007         	goto	u971
  1109   000F22  EF95  F007         	goto	u970
  1110   000F26                     u971:
  1111   000F26  EF9D  F007         	goto	l2144
  1112   000F2A                     u970:
  1113   000F2A  5015               	movf	vfpfcnvrt@c^0,w,c
  1114   000F2C  A4D8               	btfss	status,2,c
  1115   000F2E  EF9B  F007         	goto	u981
  1116   000F32  EF9D  F007         	goto	u980
  1117   000F36                     u981:
  1118   000F36  EF66  F007         	goto	l2136
  1119   000F3A                     u980:
  1120   000F3A                     l2144:
  1121                           
  1122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1123   000F3A  5015               	movf	vfpfcnvrt@c^0,w,c
  1124   000F3C  B4D8               	btfsc	status,2,c
  1125   000F3E  EFA3  F007         	goto	u991
  1126   000F42  EFA5  F007         	goto	u990
  1127   000F46                     u991:
  1128   000F46  EFC4  F007         	goto	l2154
  1129   000F4A                     u990:
  1130   000F4A  500F               	movf	vfpfcnvrt@done^0,w,c
  1131   000F4C  B4D8               	btfsc	status,2,c
  1132   000F4E  EFAB  F007         	goto	u1001
  1133   000F52  EFAD  F007         	goto	u1000
  1134   000F56                     u1001:
  1135   000F56  EFC4  F007         	goto	l2154
  1136   000F5A                     u1000:
  1137   000F5A                     
  1138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1139   000F5A  0615               	decf	vfpfcnvrt@c^0,f,c
  1140   000F5C  5015               	movf	vfpfcnvrt@c^0,w,c
  1141   000F5E  0F9C               	addlw	low _dbuf
  1142   000F60  6ED9               	movwf	fsr2l,c
  1143   000F62  6ADA               	clrf	fsr2h,c
  1144   000F64  0E2D               	movlw	45
  1145   000F66  6EDF               	movwf	indf2,c
  1146   000F68  EFC4  F007         	goto	l2154
  1147   000F6C                     l2150:
  1148                           
  1149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1150   000F6C  5015               	movf	vfpfcnvrt@c^0,w,c
  1151   000F6E  0F9C               	addlw	low _dbuf
  1152   000F70  6ED9               	movwf	fsr2l,c
  1153   000F72  6ADA               	clrf	fsr2h,c
  1154   000F74  50DF               	movf	indf2,w,c
  1155   000F76  6E0E               	movwf	??_vfpfcnvrt^0,c
  1156   000F78  500E               	movf	??_vfpfcnvrt^0,w,c
  1157   000F7A  6E01               	movwf	fputc@c^0,c
  1158   000F7C  6A02               	clrf	(fputc@c+1)^0,c
  1159   000F7E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1160   000F82  ECA3  F008         	call	_fputc	;wreg free
  1161   000F86  2A15               	incf	vfpfcnvrt@c^0,f,c
  1162   000F88                     l2154:
  1163                           
  1164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1165   000F88  0E20               	movlw	32
  1166   000F8A  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1167   000F8C  A4D8               	btfss	status,2,c
  1168   000F8E  EFCB  F007         	goto	u1011
  1169   000F92  EFCD  F007         	goto	u1010
  1170   000F96                     u1011:
  1171   000F96  EFB6  F007         	goto	l2150
  1172   000F9A                     u1010:
  1173   000F9A  EFE8  F007         	goto	l1250
  1174   000F9E                     l2156:
  1175                           
  1176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1177   000F9E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1178   000FA0  6ED9               	movwf	fsr2l,c
  1179   000FA2  6ADA               	clrf	fsr2h,c
  1180   000FA4  2ADF               	incf	indf2,f,c
  1181   000FA6  EFE8  F007         	goto	l1250
  1182   000FAA                     l2160:
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1185   000FAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1186   000FAC  6ED9               	movwf	fsr2l,c
  1187   000FAE  6ADA               	clrf	fsr2h,c
  1188   000FB0  CFDF FFF6          	movff	indf2,tblptrl
  1189   000FB4                     	if	1	;There is more than 1 active tblptr byte
  1190   000FB4  0E0E               	movlw	high __smallconst
  1191   000FB6  6EF7               	movwf	tblptrh,c
  1192   000FB8                     	endif
  1193   000FB8                     	if	0	;tblptru may be non-zero
  1194   000FB8                     	endif
  1195   000FB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1196   000FB8  0E00               	movlw	low (__smallconst shr (0+16))
  1197   000FBA  6EF8               	movwf	tblptru,c
  1198   000FBC                     	endif
  1199   000FBC  0008               	tblrd		*
  1200   000FBE  50F5               	movf	tablat,w,c
  1201   000FC0  6E01               	movwf	fputc@c^0,c
  1202   000FC2  6A02               	clrf	(fputc@c+1)^0,c
  1203   000FC4  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1204   000FC8  ECA3  F008         	call	_fputc	;wreg free
  1205   000FCC  EFCF  F007         	goto	l2156
  1206   000FD0                     l1250:
  1207   000FD0  0012               	return		;funcret
  1208   000FD2                     __end_of_vfpfcnvrt:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _fputc *****************
  1212 ;; Defined at:
  1213 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  c               2    0[COMRAM] int 
  1216 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1217 ;;		 -> sprintf@f(12), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2    0[COMRAM] int 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;Total ram usage:        8 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 2
  1236 ;; This function calls:
  1237 ;;		_putch
  1238 ;; This function is called by:
  1239 ;;		_vfpfcnvrt
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text5
  1244   001146                     __ptext5:
  1245                           	callstack 0
  1246   001146                     _fputc:
  1247                           	callstack 24
  1248   001146  5003               	movf	fputc@fp^0,w,c
  1249   001148  B4D8               	btfsc	status,2,c
  1250   00114A  EFA9  F008         	goto	u871
  1251   00114E  EFAB  F008         	goto	u870
  1252   001152                     u871:
  1253   001152  EFB3  F008         	goto	l2102
  1254   001156                     u870:
  1255   001156  5003               	movf	fputc@fp^0,w,c
  1256   001158  A4D8               	btfss	status,2,c
  1257   00115A  EFB1  F008         	goto	u881
  1258   00115E  EFB3  F008         	goto	u880
  1259   001162                     u881:
  1260   001162  EFB8  F008         	goto	l2104
  1261   001166                     u880:
  1262   001166                     l2102:
  1263   001166  5001               	movf	fputc@c^0,w,c
  1264   001168  EC3F  F00B         	call	_putch
  1265   00116C  EFF7  F008         	goto	l1275
  1266   001170                     l2104:
  1267   001170  5003               	movf	fputc@fp^0,w,c
  1268   001172  6ED9               	movwf	fsr2l,c
  1269   001174  6ADA               	clrf	fsr2h,c
  1270   001176  0E0A               	movlw	10
  1271   001178  26D9               	addwf	fsr2l,f,c
  1272   00117A  50DE               	movf	postinc2,w,c
  1273   00117C  10DE               	iorwf	postinc2,w,c
  1274   00117E  B4D8               	btfsc	status,2,c
  1275   001180  EFC4  F008         	goto	u891
  1276   001184  EFC6  F008         	goto	u890
  1277   001188                     u891:
  1278   001188  EFDF  F008         	goto	l2108
  1279   00118C                     u890:
  1280   00118C  5003               	movf	fputc@fp^0,w,c
  1281   00118E  6ED9               	movwf	fsr2l,c
  1282   001190  6ADA               	clrf	fsr2h,c
  1283   001192  0E0A               	movlw	10
  1284   001194  26D9               	addwf	fsr2l,f,c
  1285   001196  5003               	movf	fputc@fp^0,w,c
  1286   001198  6EE1               	movwf	fsr1l,c
  1287   00119A  6AE2               	clrf	fsr1h,c
  1288   00119C  0E03               	movlw	3
  1289   00119E  26E1               	addwf	fsr1l,f,c
  1290   0011A0  50DE               	movf	postinc2,w,c
  1291   0011A2  5CE6               	subwf	postinc1,w,c
  1292   0011A4  50E6               	movf	postinc1,w,c
  1293   0011A6  0A80               	xorlw	128
  1294   0011A8  6E08               	movwf	(??_fputc+4)^0,c
  1295   0011AA  50DE               	movf	postinc2,w,c
  1296   0011AC  0A80               	xorlw	128
  1297   0011AE  5808               	subwfb	(??_fputc+4)^0,w,c
  1298   0011B0  B0D8               	btfsc	status,0,c
  1299   0011B2  EFDD  F008         	goto	u901
  1300   0011B6  EFDF  F008         	goto	u900
  1301   0011BA                     u901:
  1302   0011BA  EFF7  F008         	goto	l1275
  1303   0011BE                     u900:
  1304   0011BE                     l2108:
  1305   0011BE  5003               	movf	fputc@fp^0,w,c
  1306   0011C0  6ED9               	movwf	fsr2l,c
  1307   0011C2  6ADA               	clrf	fsr2h,c
  1308   0011C4  0E03               	movlw	3
  1309   0011C6  26D9               	addwf	fsr2l,f,c
  1310   0011C8  50DF               	movf	indf2,w,c
  1311   0011CA  6E04               	movwf	??_fputc^0,c
  1312   0011CC  5003               	movf	fputc@fp^0,w,c
  1313   0011CE  6ED9               	movwf	fsr2l,c
  1314   0011D0  6ADA               	clrf	fsr2h,c
  1315   0011D2  50DF               	movf	indf2,w,c
  1316   0011D4  2404               	addwf	??_fputc^0,w,c
  1317   0011D6  6ED9               	movwf	fsr2l,c
  1318   0011D8  6ADA               	clrf	fsr2h,c
  1319   0011DA  C001  FFDF         	movff	fputc@c,indf2
  1320   0011DE  5003               	movf	fputc@fp^0,w,c
  1321   0011E0  6ED9               	movwf	fsr2l,c
  1322   0011E2  6ADA               	clrf	fsr2h,c
  1323   0011E4  0E03               	movlw	3
  1324   0011E6  26D9               	addwf	fsr2l,f,c
  1325   0011E8  2ADE               	incf	postinc2,f,c
  1326   0011EA  0E00               	movlw	0
  1327   0011EC  22DD               	addwfc	postdec2,f,c
  1328   0011EE                     l1275:
  1329   0011EE  0012               	return		;funcret
  1330   0011F0                     __end_of_fputc:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _putch *****************
  1334 ;; Defined at:
  1335 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  c               1    wreg     unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  c               1    0[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_fputc
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text6
  1364   00167E                     __ptext6:
  1365                           	callstack 0
  1366   00167E                     _putch:
  1367                           	callstack 24
  1368   00167E  0012               	return		;funcret
  1369   001680                     __end_of_putch:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _abs *****************
  1373 ;; Defined at:
  1374 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  a               2    6[COMRAM] int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2    6[COMRAM] int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;Total ram usage:        4 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_vfpfcnvrt
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text7
  1403   0014D4                     __ptext7:
  1404                           	callstack 0
  1405   0014D4                     _abs:
  1406                           	callstack 25
  1407   0014D4  BE08               	btfsc	(abs@a+1)^0,7,c
  1408   0014D6  EF6F  F00A         	goto	u911
  1409   0014DA  EF71  F00A         	goto	u910
  1410   0014DE                     u911:
  1411   0014DE  EF77  F00A         	goto	l1260
  1412   0014E2                     u910:
  1413   0014E2  C007  F007         	movff	abs@a,?_abs
  1414   0014E6  C008  F008         	movff	abs@a+1,?_abs+1
  1415   0014EA  EF83  F00A         	goto	l1263
  1416   0014EE                     l1260:
  1417   0014EE  C007  F009         	movff	abs@a,??_abs
  1418   0014F2  C008  F00A         	movff	abs@a+1,??_abs+1
  1419   0014F6  1E09               	comf	??_abs^0,f,c
  1420   0014F8  1E0A               	comf	(??_abs+1)^0,f,c
  1421   0014FA  4A09               	infsnz	??_abs^0,f,c
  1422   0014FC  2A0A               	incf	(??_abs+1)^0,f,c
  1423   0014FE  C009  F007         	movff	??_abs,?_abs
  1424   001502  C00A  F008         	movff	??_abs+1,?_abs+1
  1425   001506                     l1263:
  1426   001506  0012               	return		;funcret
  1427   001508                     __end_of_abs:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function ___awmod *****************
  1431 ;; Defined at:
  1432 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  dividend        2    0[COMRAM] int 
  1435 ;;  divisor         2    2[COMRAM] int 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  sign            1    5[COMRAM] unsigned char 
  1438 ;;  counter         1    4[COMRAM] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2    0[COMRAM] int 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;Total ram usage:        6 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_vfpfcnvrt
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text8
  1463   001096                     __ptext8:
  1464                           	callstack 0
  1465   001096                     ___awmod:
  1466                           	callstack 25
  1467   001096  0E00               	movlw	0
  1468   001098  6E06               	movwf	___awmod@sign^0,c
  1469   00109A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1470   00109C  EF54  F008         	goto	u810
  1471   0010A0  EF52  F008         	goto	u811
  1472   0010A4                     u811:
  1473   0010A4  EF5A  F008         	goto	l2070
  1474   0010A8                     u810:
  1475   0010A8  6C01               	negf	___awmod@dividend^0,c
  1476   0010AA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1477   0010AC  B0D8               	btfsc	status,0,c
  1478   0010AE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1479   0010B0  0E01               	movlw	1
  1480   0010B2  6E06               	movwf	___awmod@sign^0,c
  1481   0010B4                     l2070:
  1482   0010B4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1483   0010B6  EF61  F008         	goto	u820
  1484   0010BA  EF5F  F008         	goto	u821
  1485   0010BE                     u821:
  1486   0010BE  EF65  F008         	goto	l2074
  1487   0010C2                     u820:
  1488   0010C2  6C03               	negf	___awmod@divisor^0,c
  1489   0010C4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1490   0010C6  B0D8               	btfsc	status,0,c
  1491   0010C8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1492   0010CA                     l2074:
  1493   0010CA  5003               	movf	___awmod@divisor^0,w,c
  1494   0010CC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1495   0010CE  B4D8               	btfsc	status,2,c
  1496   0010D0  EF6C  F008         	goto	u831
  1497   0010D4  EF6E  F008         	goto	u830
  1498   0010D8                     u831:
  1499   0010D8  EF92  F008         	goto	l2090
  1500   0010DC                     u830:
  1501   0010DC  0E01               	movlw	1
  1502   0010DE  6E05               	movwf	___awmod@counter^0,c
  1503   0010E0  EF76  F008         	goto	l2080
  1504   0010E4                     l2078:
  1505   0010E4  90D8               	bcf	status,0,c
  1506   0010E6  3603               	rlcf	___awmod@divisor^0,f,c
  1507   0010E8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1508   0010EA  2A05               	incf	___awmod@counter^0,f,c
  1509   0010EC                     l2080:
  1510   0010EC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1511   0010EE  EF7B  F008         	goto	u841
  1512   0010F2  EF7D  F008         	goto	u840
  1513   0010F6                     u841:
  1514   0010F6  EF72  F008         	goto	l2078
  1515   0010FA                     u840:
  1516   0010FA                     l2082:
  1517   0010FA  5003               	movf	___awmod@divisor^0,w,c
  1518   0010FC  5C01               	subwf	___awmod@dividend^0,w,c
  1519   0010FE  5004               	movf	(___awmod@divisor+1)^0,w,c
  1520   001100  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1521   001102  A0D8               	btfss	status,0,c
  1522   001104  EF86  F008         	goto	u851
  1523   001108  EF88  F008         	goto	u850
  1524   00110C                     u851:
  1525   00110C  EF8C  F008         	goto	l2086
  1526   001110                     u850:
  1527   001110  5003               	movf	___awmod@divisor^0,w,c
  1528   001112  5E01               	subwf	___awmod@dividend^0,f,c
  1529   001114  5004               	movf	(___awmod@divisor+1)^0,w,c
  1530   001116  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1531   001118                     l2086:
  1532   001118  90D8               	bcf	status,0,c
  1533   00111A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1534   00111C  3203               	rrcf	___awmod@divisor^0,f,c
  1535   00111E  2E05               	decfsz	___awmod@counter^0,f,c
  1536   001120  EF7D  F008         	goto	l2082
  1537   001124                     l2090:
  1538   001124  5006               	movf	___awmod@sign^0,w,c
  1539   001126  B4D8               	btfsc	status,2,c
  1540   001128  EF98  F008         	goto	u861
  1541   00112C  EF9A  F008         	goto	u860
  1542   001130                     u861:
  1543   001130  EF9E  F008         	goto	l2094
  1544   001134                     u860:
  1545   001134  6C01               	negf	___awmod@dividend^0,c
  1546   001136  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1547   001138  B0D8               	btfsc	status,0,c
  1548   00113A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1549   00113C                     l2094:
  1550   00113C  C001  F001         	movff	___awmod@dividend,?___awmod
  1551   001140  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1552   001144  0012               	return		;funcret
  1553   001146                     __end_of___awmod:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function ___awdiv *****************
  1557 ;; Defined at:
  1558 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  dividend        2    0[COMRAM] int 
  1561 ;;  divisor         2    2[COMRAM] int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  quotient        2    6[COMRAM] int 
  1564 ;;  sign            1    5[COMRAM] unsigned char 
  1565 ;;  counter         1    4[COMRAM] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2    0[COMRAM] int 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;Total ram usage:        8 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_vfpfcnvrt
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text9
  1590   000FD2                     __ptext9:
  1591                           	callstack 0
  1592   000FD2                     ___awdiv:
  1593                           	callstack 25
  1594   000FD2  0E00               	movlw	0
  1595   000FD4  6E06               	movwf	___awdiv@sign^0,c
  1596   000FD6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1597   000FD8  EFF2  F007         	goto	u750
  1598   000FDC  EFF0  F007         	goto	u751
  1599   000FE0                     u751:
  1600   000FE0  EFF8  F007         	goto	l2026
  1601   000FE4                     u750:
  1602   000FE4  6C03               	negf	___awdiv@divisor^0,c
  1603   000FE6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1604   000FE8  B0D8               	btfsc	status,0,c
  1605   000FEA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1606   000FEC  0E01               	movlw	1
  1607   000FEE  6E06               	movwf	___awdiv@sign^0,c
  1608   000FF0                     l2026:
  1609   000FF0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1610   000FF2  EFFF  F007         	goto	u760
  1611   000FF6  EFFD  F007         	goto	u761
  1612   000FFA                     u761:
  1613   000FFA  EF05  F008         	goto	l2032
  1614   000FFE                     u760:
  1615   000FFE  6C01               	negf	___awdiv@dividend^0,c
  1616   001000  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1617   001002  B0D8               	btfsc	status,0,c
  1618   001004  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1619   001006  0E01               	movlw	1
  1620   001008  1A06               	xorwf	___awdiv@sign^0,f,c
  1621   00100A                     l2032:
  1622   00100A  0E00               	movlw	0
  1623   00100C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1624   00100E  0E00               	movlw	0
  1625   001010  6E07               	movwf	___awdiv@quotient^0,c
  1626   001012  5003               	movf	___awdiv@divisor^0,w,c
  1627   001014  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1628   001016  B4D8               	btfsc	status,2,c
  1629   001018  EF10  F008         	goto	u771
  1630   00101C  EF12  F008         	goto	u770
  1631   001020                     u771:
  1632   001020  EF3A  F008         	goto	l2054
  1633   001024                     u770:
  1634   001024  0E01               	movlw	1
  1635   001026  6E05               	movwf	___awdiv@counter^0,c
  1636   001028  EF1A  F008         	goto	l2040
  1637   00102C                     l2038:
  1638   00102C  90D8               	bcf	status,0,c
  1639   00102E  3603               	rlcf	___awdiv@divisor^0,f,c
  1640   001030  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1641   001032  2A05               	incf	___awdiv@counter^0,f,c
  1642   001034                     l2040:
  1643   001034  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1644   001036  EF1F  F008         	goto	u781
  1645   00103A  EF21  F008         	goto	u780
  1646   00103E                     u781:
  1647   00103E  EF16  F008         	goto	l2038
  1648   001042                     u780:
  1649   001042                     l2042:
  1650   001042  90D8               	bcf	status,0,c
  1651   001044  3607               	rlcf	___awdiv@quotient^0,f,c
  1652   001046  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1653   001048  5003               	movf	___awdiv@divisor^0,w,c
  1654   00104A  5C01               	subwf	___awdiv@dividend^0,w,c
  1655   00104C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1656   00104E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1657   001050  A0D8               	btfss	status,0,c
  1658   001052  EF2D  F008         	goto	u791
  1659   001056  EF2F  F008         	goto	u790
  1660   00105A                     u791:
  1661   00105A  EF34  F008         	goto	l2050
  1662   00105E                     u790:
  1663   00105E  5003               	movf	___awdiv@divisor^0,w,c
  1664   001060  5E01               	subwf	___awdiv@dividend^0,f,c
  1665   001062  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1666   001064  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1667   001066  8007               	bsf	___awdiv@quotient^0,0,c
  1668   001068                     l2050:
  1669   001068  90D8               	bcf	status,0,c
  1670   00106A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1671   00106C  3203               	rrcf	___awdiv@divisor^0,f,c
  1672   00106E  2E05               	decfsz	___awdiv@counter^0,f,c
  1673   001070  EF21  F008         	goto	l2042
  1674   001074                     l2054:
  1675   001074  5006               	movf	___awdiv@sign^0,w,c
  1676   001076  B4D8               	btfsc	status,2,c
  1677   001078  EF40  F008         	goto	u801
  1678   00107C  EF42  F008         	goto	u800
  1679   001080                     u801:
  1680   001080  EF46  F008         	goto	l2058
  1681   001084                     u800:
  1682   001084  6C07               	negf	___awdiv@quotient^0,c
  1683   001086  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1684   001088  B0D8               	btfsc	status,0,c
  1685   00108A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1686   00108C                     l2058:
  1687   00108C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1688   001090  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1689   001094  0012               	return		;funcret
  1690   001096                     __end_of___awdiv:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _sendStringSerial4 *****************
  1694 ;; Defined at:
  1695 ;;		line 36 in file "serial.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  string          1    1[COMRAM] PTR unsigned char 
  1698 ;;		 -> sendIntSerial4@string(17), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1710 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;Total ram usage:        1 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 2
  1717 ;; This function calls:
  1718 ;;		_sendCharSerial4
  1719 ;; This function is called by:
  1720 ;;		_sendIntSerial4
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text10
  1725   00153C                     __ptext10:
  1726                           	callstack 0
  1727   00153C                     _sendStringSerial4:
  1728                           	callstack 27
  1729   00153C                     
  1730                           ;serial.c: 38:     while(*string != 0){
  1731   00153C  EFA7  F00A         	goto	l2286
  1732   001540                     l2282:
  1733                           
  1734                           ;serial.c: 39:   sendCharSerial4(*string++);
  1735   001540  5002               	movf	sendStringSerial4@string^0,w,c
  1736   001542  6ED9               	movwf	fsr2l,c
  1737   001544  6ADA               	clrf	fsr2h,c
  1738   001546  50DF               	movf	indf2,w,c
  1739   001548  EC1A  F00B         	call	_sendCharSerial4
  1740   00154C  2A02               	incf	sendStringSerial4@string^0,f,c
  1741   00154E                     l2286:
  1742                           
  1743                           ;serial.c: 38:     while(*string != 0){
  1744   00154E  5002               	movf	sendStringSerial4@string^0,w,c
  1745   001550  6ED9               	movwf	fsr2l,c
  1746   001552  6ADA               	clrf	fsr2h,c
  1747   001554  50DF               	movf	indf2,w,c
  1748   001556  A4D8               	btfss	status,2,c
  1749   001558  EFB0  F00A         	goto	u1211
  1750   00155C  EFB2  F00A         	goto	u1210
  1751   001560                     u1211:
  1752   001560  EFA0  F00A         	goto	l2282
  1753   001564                     u1210:
  1754   001564  0012               	return		;funcret
  1755   001566                     __end_of_sendStringSerial4:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _sendCharSerial4 *****************
  1759 ;; Defined at:
  1760 ;;		line 30 in file "serial.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  charToSend      1    wreg     unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  charToSend      1    0[COMRAM] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;Total ram usage:        1 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_sendStringSerial4
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text11
  1789   001634                     __ptext11:
  1790                           	callstack 0
  1791   001634                     _sendCharSerial4:
  1792                           	callstack 27
  1793                           
  1794                           ;incstack = 0
  1795                           ;sendCharSerial4@charToSend stored from wreg
  1796   001634  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1797   001636                     l378:
  1798   001636  010E               	movlb	14	; () banked
  1799   001638  A537               	btfss	55,2,b	;volatile
  1800   00163A  EF21  F00B         	goto	u321
  1801   00163E  EF23  F00B         	goto	u320
  1802   001642                     u321:
  1803   001642  EF1B  F00B         	goto	l378
  1804   001646                     u320:
  1805   001646                     
  1806                           ; BSR set to: 14
  1807                           ;serial.c: 32:     TX4REG = charToSend;
  1808   001646  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1809   00164A                     
  1810                           ; BSR set to: 14
  1811   00164A  0012               	return		;funcret
  1812   00164C                     __end_of_sendCharSerial4:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _lights_flashing *****************
  1816 ;; Defined at:
  1817 ;;		line 71 in file "buggy_lights.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text12
  1846   0011F0                     __ptext12:
  1847                           	callstack 0
  1848   0011F0                     _lights_flashing:
  1849                           	callstack 29
  1850   0011F0                     
  1851                           ;buggy_lights.c: 73:     LATDbits.LATD4 = !LATDbits.LATD4;
  1852   0011F0  A87C               	btfss	124,4,c	;volatile
  1853   0011F2  EFFD  F008         	goto	u511
  1854   0011F6  EF01  F009         	goto	u510
  1855   0011FA                     u511:
  1856   0011FA  6A01               	clrf	??_lights_flashing^0,c
  1857   0011FC  2A01               	incf	??_lights_flashing^0,f,c
  1858   0011FE  EF02  F009         	goto	u528
  1859   001202                     u510:
  1860   001202  6A01               	clrf	??_lights_flashing^0,c
  1861   001204                     u528:
  1862   001204  3A01               	swapf	??_lights_flashing^0,f,c
  1863   001206  507C               	movf	124,w,c	;volatile
  1864   001208  1801               	xorwf	??_lights_flashing^0,w,c
  1865   00120A  0BEF               	andlw	-17
  1866   00120C  1801               	xorwf	??_lights_flashing^0,w,c
  1867   00120E  6E7C               	movwf	124,c	;volatile
  1868                           
  1869                           ;buggy_lights.c: 74:     LATDbits.LATD3 = !LATDbits.LATD3;
  1870   001210  A67C               	btfss	124,3,c	;volatile
  1871   001212  EF0D  F009         	goto	u531
  1872   001216  EF11  F009         	goto	u530
  1873   00121A                     u531:
  1874   00121A  6A01               	clrf	??_lights_flashing^0,c
  1875   00121C  2A01               	incf	??_lights_flashing^0,f,c
  1876   00121E  EF12  F009         	goto	u548
  1877   001222                     u530:
  1878   001222  6A01               	clrf	??_lights_flashing^0,c
  1879   001224                     u548:
  1880   001224  4601               	rlncf	??_lights_flashing^0,f,c
  1881   001226  4601               	rlncf	??_lights_flashing^0,f,c
  1882   001228  4601               	rlncf	??_lights_flashing^0,f,c
  1883   00122A  507C               	movf	124,w,c	;volatile
  1884   00122C  1801               	xorwf	??_lights_flashing^0,w,c
  1885   00122E  0BF7               	andlw	-9
  1886   001230  1801               	xorwf	??_lights_flashing^0,w,c
  1887   001232  6E7C               	movwf	124,c	;volatile
  1888   001234                     
  1889                           ;buggy_lights.c: 75:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1890   001234  0E29               	movlw	41
  1891   001236  6E02               	movwf	(??_lights_flashing+1)^0,c
  1892   001238  0E96               	movlw	150
  1893   00123A  6E01               	movwf	??_lights_flashing^0,c
  1894   00123C  0E7F               	movlw	127
  1895   00123E                     u1717:
  1896   00123E  2EE8               	decfsz	wreg,f,c
  1897   001240  D7FE               	bra	u1717
  1898   001242  2E01               	decfsz	??_lights_flashing^0,f,c
  1899   001244  D7FC               	bra	u1717
  1900   001246  2E02               	decfsz	(??_lights_flashing+1)^0,f,c
  1901   001248  D7FA               	bra	u1717
  1902   00124A  0000               	nop	
  1903   00124C                     
  1904                           ;buggy_lights.c: 76:     LATFbits.LATF0 = !LATFbits.LATF0;
  1905   00124C  A07E               	btfss	126,0,c	;volatile
  1906   00124E  EF2B  F009         	goto	u551
  1907   001252  EF2F  F009         	goto	u550
  1908   001256                     u551:
  1909   001256  6A01               	clrf	??_lights_flashing^0,c
  1910   001258  2A01               	incf	??_lights_flashing^0,f,c
  1911   00125A  EF30  F009         	goto	u568
  1912   00125E                     u550:
  1913   00125E  6A01               	clrf	??_lights_flashing^0,c
  1914   001260                     u568:
  1915   001260  507E               	movf	126,w,c	;volatile
  1916   001262  1801               	xorwf	??_lights_flashing^0,w,c
  1917   001264  0BFE               	andlw	-2
  1918   001266  1801               	xorwf	??_lights_flashing^0,w,c
  1919   001268  6E7E               	movwf	126,c	;volatile
  1920   00126A                     
  1921                           ;buggy_lights.c: 77:     LATHbits.LATH0 = !LATHbits.LATH0;
  1922   00126A  A080               	btfss	128,0,c	;volatile
  1923   00126C  EF3A  F009         	goto	u571
  1924   001270  EF3E  F009         	goto	u570
  1925   001274                     u571:
  1926   001274  6A01               	clrf	??_lights_flashing^0,c
  1927   001276  2A01               	incf	??_lights_flashing^0,f,c
  1928   001278  EF3F  F009         	goto	u588
  1929   00127C                     u570:
  1930   00127C  6A01               	clrf	??_lights_flashing^0,c
  1931   00127E                     u588:
  1932   00127E  5080               	movf	128,w,c	;volatile
  1933   001280  1801               	xorwf	??_lights_flashing^0,w,c
  1934   001282  0BFE               	andlw	-2
  1935   001284  1801               	xorwf	??_lights_flashing^0,w,c
  1936   001286  6E80               	movwf	128,c	;volatile
  1937   001288  0012               	return		;funcret
  1938   00128A                     __end_of_lights_flashing:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _initUSART4 *****************
  1942 ;; Defined at:
  1943 ;;		line 5 in file "serial.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text13
  1972   001616                     __ptext13:
  1973                           	callstack 0
  1974   001616                     _initUSART4:
  1975                           	callstack 29
  1976   001616                     
  1977                           ;serial.c: 9:     RC0PPS = 0x12;
  1978   001616  0E12               	movlw	18
  1979   001618  010E               	movlb	14	; () banked
  1980   00161A  6F62               	movwf	98,b	;volatile
  1981                           
  1982                           ;serial.c: 10:     RX4PPS = 0x11;
  1983   00161C  0E11               	movlw	17
  1984   00161E  6F15               	movwf	21,b	;volatile
  1985   001620                     
  1986                           ; BSR set to: 14
  1987                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1988   001620  97E9               	bcf	233,3,b	;volatile
  1989   001622                     
  1990                           ; BSR set to: 14
  1991                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1992   001622  95E8               	bcf	232,2,b	;volatile
  1993                           
  1994                           ;serial.c: 15:     SP4BRGL = 51;
  1995   001624  0E33               	movlw	51
  1996   001626  6FE5               	movwf	229,b	;volatile
  1997                           
  1998                           ;serial.c: 16:     SP4BRGH = 0;
  1999   001628  0E00               	movlw	0
  2000   00162A  6FE6               	movwf	230,b	;volatile
  2001   00162C                     
  2002                           ; BSR set to: 14
  2003                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  2004   00162C  89E7               	bsf	231,4,b	;volatile
  2005   00162E                     
  2006                           ; BSR set to: 14
  2007                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  2008   00162E  8BE8               	bsf	232,5,b	;volatile
  2009   001630                     
  2010                           ; BSR set to: 14
  2011                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  2012   001630  8FE7               	bsf	231,7,b	;volatile
  2013   001632                     
  2014                           ; BSR set to: 14
  2015   001632  0012               	return		;funcret
  2016   001634                     __end_of_initUSART4:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _initDCmotorsPWM *****************
  2020 ;; Defined at:
  2021 ;;		line 5 in file "dc_motor.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;Total ram usage:        2 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; Hardware stack levels required when called: 1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text14
  2050   00131E                     __ptext14:
  2051                           	callstack 0
  2052   00131E                     _initDCmotorsPWM:
  2053                           	callstack 29
  2054   00131E                     
  2055                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2056   00131E  9485               	bcf	133,2,c	;volatile
  2057                           
  2058                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2059   001320  9885               	bcf	133,4,c	;volatile
  2060                           
  2061                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2062   001322  9E83               	bcf	131,7,c	;volatile
  2063                           
  2064                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2065   001324  9C87               	bcf	135,6,c	;volatile
  2066                           
  2067                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2068   001326  947D               	bcf	125,2,c	;volatile
  2069                           
  2070                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2071   001328  987D               	bcf	125,4,c	;volatile
  2072                           
  2073                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2074   00132A  9E7B               	bcf	123,7,c	;volatile
  2075                           
  2076                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2077   00132C  9C7F               	bcf	127,6,c	;volatile
  2078   00132E                     
  2079                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2080   00132E  0E05               	movlw	5
  2081   001330  010E               	movlb	14	; () banked
  2082   001332  6F74               	movwf	116,b	;volatile
  2083                           
  2084                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2085   001334  0E06               	movlw	6
  2086   001336  6F76               	movwf	118,b	;volatile
  2087                           
  2088                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2089   001338  0E07               	movlw	7
  2090   00133A  6F69               	movwf	105,b	;volatile
  2091                           
  2092                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2093   00133C  0E08               	movlw	8
  2094   00133E  6F88               	movwf	136,b	;volatile
  2095                           
  2096                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2097   001340  50BD               	movf	189,w,c	;volatile
  2098   001342  0B8F               	andlw	-113
  2099   001344  0940               	iorlw	64
  2100   001346  6EBD               	movwf	189,c	;volatile
  2101                           
  2102                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2103   001348  0EE0               	movlw	-32
  2104   00134A  16BE               	andwf	190,f,c	;volatile
  2105                           
  2106                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2107   00134C  50BF               	movf	191,w,c	;volatile
  2108   00134E  0BF0               	andlw	-16
  2109   001350  0901               	iorlw	1
  2110   001352  6EBF               	movwf	191,c	;volatile
  2111   001354                     
  2112                           ; BSR set to: 14
  2113                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  2114   001354  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2115   001358                     
  2116                           ; BSR set to: 14
  2117                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2118   001358  8EBD               	bsf	189,7,c	;volatile
  2119                           
  2120                           ;dc_motor.c: 35:     CCPR1H=0;
  2121   00135A  0E00               	movlw	0
  2122   00135C  6EAA               	movwf	170,c	;volatile
  2123                           
  2124                           ;dc_motor.c: 36:     CCPR2H=0;
  2125   00135E  0E00               	movlw	0
  2126   001360  6EA6               	movwf	166,c	;volatile
  2127                           
  2128                           ;dc_motor.c: 37:     CCPR3H=0;
  2129   001362  0E00               	movlw	0
  2130   001364  010F               	movlb	15	; () banked
  2131   001366  6F25               	movwf	37,b	;volatile
  2132                           
  2133                           ;dc_motor.c: 38:     CCPR4H=0;
  2134   001368  0E00               	movlw	0
  2135   00136A  6F21               	movwf	33,b	;volatile
  2136                           
  2137                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2138   00136C  0EFC               	movlw	-4
  2139   00136E  16AD               	andwf	173,f,c	;volatile
  2140                           
  2141                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2142   001370  0EF3               	movlw	-13
  2143   001372  16AD               	andwf	173,f,c	;volatile
  2144                           
  2145                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2146   001374  0ECF               	movlw	-49
  2147   001376  16AD               	andwf	173,f,c	;volatile
  2148                           
  2149                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2150   001378  0E3F               	movlw	-193
  2151   00137A  16AD               	andwf	173,f,c	;volatile
  2152   00137C                     
  2153                           ; BSR set to: 15
  2154                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2155   00137C  88AB               	bsf	171,4,c	;volatile
  2156                           
  2157                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2158   00137E  50AB               	movf	171,w,c	;volatile
  2159   001380  0BF0               	andlw	-16
  2160   001382  090C               	iorlw	12
  2161   001384  6EAB               	movwf	171,c	;volatile
  2162   001386                     
  2163                           ; BSR set to: 15
  2164                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2165   001386  8EAB               	bsf	171,7,c	;volatile
  2166   001388                     
  2167                           ; BSR set to: 15
  2168                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2169   001388  88A7               	bsf	167,4,c	;volatile
  2170                           
  2171                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2172   00138A  50A7               	movf	167,w,c	;volatile
  2173   00138C  0BF0               	andlw	-16
  2174   00138E  090C               	iorlw	12
  2175   001390  6EA7               	movwf	167,c	;volatile
  2176   001392                     
  2177                           ; BSR set to: 15
  2178                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2179   001392  8EA7               	bsf	167,7,c	;volatile
  2180   001394                     
  2181                           ; BSR set to: 15
  2182                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2183   001394  8926               	bsf	38,4,b	;volatile
  2184                           
  2185                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2186   001396  5126               	movf	38,w,b	;volatile
  2187   001398  0BF0               	andlw	-16
  2188   00139A  090C               	iorlw	12
  2189   00139C  6F26               	movwf	38,b	;volatile
  2190   00139E                     
  2191                           ; BSR set to: 15
  2192                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2193   00139E  8F26               	bsf	38,7,b	;volatile
  2194   0013A0                     
  2195                           ; BSR set to: 15
  2196                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2197   0013A0  8922               	bsf	34,4,b	;volatile
  2198                           
  2199                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2200   0013A2  5122               	movf	34,w,b	;volatile
  2201   0013A4  0BF0               	andlw	-16
  2202   0013A6  090C               	iorlw	12
  2203   0013A8  6F22               	movwf	34,b	;volatile
  2204   0013AA                     
  2205                           ; BSR set to: 15
  2206                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2207   0013AA  8F22               	bsf	34,7,b	;volatile
  2208   0013AC                     
  2209                           ; BSR set to: 15
  2210   0013AC  0012               	return		;funcret
  2211   0013AE                     __end_of_initDCmotorsPWM:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _color_click_init *****************
  2215 ;; Defined at:
  2216 ;;		line 5 in file "color.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;Total ram usage:        1 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 4
  2237 ;; This function calls:
  2238 ;;		_I2C_2_Master_Init
  2239 ;;		_color_writetoaddr
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text15
  2246   001508                     __ptext15:
  2247                           	callstack 0
  2248   001508                     _color_click_init:
  2249                           	callstack 26
  2250   001508                     
  2251                           ;color.c: 8:     I2C_2_Master_Init();
  2252   001508  ECB3  F00A         	call	_I2C_2_Master_Init	;wreg free
  2253   00150C                     
  2254                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2255   00150C  0E01               	movlw	1
  2256   00150E  6E03               	movwf	color_writetoaddr@value^0,c
  2257   001510  0E00               	movlw	0
  2258   001512  ECDC  F00A         	call	_color_writetoaddr
  2259   001516                     
  2260                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2261   001516  0E3F               	movlw	63
  2262   001518  6E05               	movwf	??_color_click_init^0,c
  2263   00151A  0E55               	movlw	85
  2264   00151C                     u1727:
  2265   00151C  2EE8               	decfsz	wreg,f,c
  2266   00151E  D7FE               	bra	u1727
  2267   001520  2E05               	decfsz	??_color_click_init^0,f,c
  2268   001522  D7FC               	bra	u1727
  2269   001524  0000               	nop	
  2270   001526                     
  2271                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2272   001526  0E03               	movlw	3
  2273   001528  6E03               	movwf	color_writetoaddr@value^0,c
  2274   00152A  0E00               	movlw	0
  2275   00152C  ECDC  F00A         	call	_color_writetoaddr
  2276   001530                     
  2277                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2278   001530  0ED5               	movlw	213
  2279   001532  6E03               	movwf	color_writetoaddr@value^0,c
  2280   001534  0E01               	movlw	1
  2281   001536  ECDC  F00A         	call	_color_writetoaddr
  2282   00153A  0012               	return		;funcret
  2283   00153C                     __end_of_color_click_init:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _color_writetoaddr *****************
  2287 ;; Defined at:
  2288 ;;		line 21 in file "color.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  address         1    wreg     unsigned char 
  2291 ;;  value           1    2[COMRAM] unsigned char 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  address         1    3[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;Total ram usage:        2 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 3
  2310 ;; This function calls:
  2311 ;;		_I2C_2_Master_Start
  2312 ;;		_I2C_2_Master_Stop
  2313 ;;		_I2C_2_Master_Write
  2314 ;; This function is called by:
  2315 ;;		_color_click_init
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text16
  2320   0015B8                     __ptext16:
  2321                           	callstack 0
  2322   0015B8                     _color_writetoaddr:
  2323                           	callstack 26
  2324                           
  2325                           ;incstack = 0
  2326                           ;color_writetoaddr@address stored from wreg
  2327   0015B8  6E04               	movwf	color_writetoaddr@address^0,c
  2328   0015BA                     
  2329                           ;color.c: 22:     I2C_2_Master_Start();
  2330   0015BA  EC37  F00B         	call	_I2C_2_Master_Start	;wreg free
  2331                           
  2332                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2333   0015BE  0E52               	movlw	82
  2334   0015C0  EC2C  F00B         	call	_I2C_2_Master_Write
  2335                           
  2336                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2337   0015C4  5004               	movf	color_writetoaddr@address^0,w,c
  2338   0015C6  0980               	iorlw	128
  2339   0015C8  EC2C  F00B         	call	_I2C_2_Master_Write
  2340                           
  2341                           ;color.c: 25:     I2C_2_Master_Write(value);
  2342   0015CC  5003               	movf	color_writetoaddr@value^0,w,c
  2343   0015CE  EC2C  F00B         	call	_I2C_2_Master_Write
  2344                           
  2345                           ;color.c: 26:     I2C_2_Master_Stop();
  2346   0015D2  EC32  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2347   0015D6  0012               	return		;funcret
  2348   0015D8                     __end_of_color_writetoaddr:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _I2C_2_Master_Write *****************
  2352 ;; Defined at:
  2353 ;;		line 45 in file "i2c.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  data_byte       1    wreg     unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  data_byte       1    1[COMRAM] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;Total ram usage:        1 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 2
  2374 ;; This function calls:
  2375 ;;		_I2C_2_Master_Idle
  2376 ;; This function is called by:
  2377 ;;		_color_writetoaddr
  2378 ;;		_color_read_Red
  2379 ;;		_color_read_Blue
  2380 ;;		_color_read_Green
  2381 ;;		_color_read_Clear
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text17
  2386   001658                     __ptext17:
  2387                           	callstack 0
  2388   001658                     _I2C_2_Master_Write:
  2389                           	callstack 26
  2390                           
  2391                           ;incstack = 0
  2392                           ;I2C_2_Master_Write@data_byte stored from wreg
  2393   001658  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2394   00165A                     
  2395                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2396   00165A  ECC8  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2397   00165E                     
  2398                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2399   00165E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2400   001662  0012               	return		;funcret
  2401   001664                     __end_of_I2C_2_Master_Write:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _I2C_2_Master_Stop *****************
  2405 ;; Defined at:
  2406 ;;		line 39 in file "i2c.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 2
  2427 ;; This function calls:
  2428 ;;		_I2C_2_Master_Idle
  2429 ;; This function is called by:
  2430 ;;		_color_writetoaddr
  2431 ;;		_color_read_Red
  2432 ;;		_color_read_Blue
  2433 ;;		_color_read_Green
  2434 ;;		_color_read_Clear
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text18
  2439   001664                     __ptext18:
  2440                           	callstack 0
  2441   001664                     _I2C_2_Master_Stop:
  2442                           	callstack 26
  2443   001664                     
  2444                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2445   001664  ECC8  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2446   001668                     
  2447                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2448   001668  010E               	movlb	14	; () banked
  2449   00166A  85DA               	bsf	218,2,b	;volatile
  2450   00166C                     
  2451                           ; BSR set to: 14
  2452   00166C  0012               	return		;funcret
  2453   00166E                     __end_of_I2C_2_Master_Stop:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _I2C_2_Master_Start *****************
  2457 ;; Defined at:
  2458 ;;		line 27 in file "i2c.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 2
  2479 ;; This function calls:
  2480 ;;		_I2C_2_Master_Idle
  2481 ;; This function is called by:
  2482 ;;		_color_writetoaddr
  2483 ;;		_color_read_Red
  2484 ;;		_color_read_Blue
  2485 ;;		_color_read_Green
  2486 ;;		_color_read_Clear
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text19
  2491   00166E                     __ptext19:
  2492                           	callstack 0
  2493   00166E                     _I2C_2_Master_Start:
  2494                           	callstack 26
  2495   00166E                     
  2496                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2497   00166E  ECC8  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2498   001672                     
  2499                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2500   001672  010E               	movlb	14	; () banked
  2501   001674  81DA               	bsf	218,0,b	;volatile
  2502   001676                     
  2503                           ; BSR set to: 14
  2504   001676  0012               	return		;funcret
  2505   001678                     __end_of_I2C_2_Master_Start:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _I2C_2_Master_Idle *****************
  2509 ;; Defined at:
  2510 ;;		line 22 in file "i2c.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_I2C_2_Master_Start
  2535 ;;		_I2C_2_Master_Stop
  2536 ;;		_I2C_2_Master_Write
  2537 ;;		_I2C_2_Master_RepStart
  2538 ;;		_I2C_2_Master_Read
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text20
  2543   001590                     __ptext20:
  2544                           	callstack 0
  2545   001590                     _I2C_2_Master_Idle:
  2546                           	callstack 26
  2547   001590                     l244:
  2548   001590  010E               	movlb	14	; () banked
  2549   001592  B5D8               	btfsc	216,2,b	;volatile
  2550   001594  EFCE  F00A         	goto	u181
  2551   001598  EFD0  F00A         	goto	u180
  2552   00159C                     u181:
  2553   00159C  EFC8  F00A         	goto	l244
  2554   0015A0                     u180:
  2555   0015A0                     
  2556                           ; BSR set to: 14
  2557   0015A0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2558   0015A4  0E1F               	movlw	31
  2559   0015A6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2560   0015A8  A4D8               	btfss	status,2,c
  2561   0015AA  EFD9  F00A         	goto	u191
  2562   0015AE  EFDB  F00A         	goto	u190
  2563   0015B2                     u191:
  2564   0015B2  EFC8  F00A         	goto	l244
  2565   0015B6                     u190:
  2566   0015B6                     
  2567                           ; BSR set to: 14
  2568   0015B6  0012               	return		;funcret
  2569   0015B8                     __end_of_I2C_2_Master_Idle:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _I2C_2_Master_Init *****************
  2573 ;; Defined at:
  2574 ;;		line 4 in file "i2c.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 1
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_color_click_init
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text21
  2603   001566                     __ptext21:
  2604                           	callstack 0
  2605   001566                     _I2C_2_Master_Init:
  2606                           	callstack 28
  2607   001566                     
  2608                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2609   001566  010E               	movlb	14	; () banked
  2610   001568  51D9               	movf	217,w,b	;volatile
  2611   00156A  0BF0               	andlw	-16
  2612   00156C  0908               	iorlw	8
  2613   00156E  6FD9               	movwf	217,b	;volatile
  2614   001570                     
  2615                           ; BSR set to: 14
  2616                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2617   001570  8BD9               	bsf	217,5,b	;volatile
  2618                           
  2619                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2620   001572  0E9F               	movlw	159
  2621   001574  6FD6               	movwf	214,b	;volatile
  2622   001576                     
  2623                           ; BSR set to: 14
  2624                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2625   001576  8A84               	bsf	132,5,c	;volatile
  2626   001578                     
  2627                           ; BSR set to: 14
  2628                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2629   001578  8C84               	bsf	132,6,c	;volatile
  2630   00157A                     
  2631                           ; BSR set to: 14
  2632                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2633   00157A  9BA7               	bcf	167,5,b	;volatile
  2634   00157C                     
  2635                           ; BSR set to: 14
  2636                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2637   00157C  9DA7               	bcf	167,6,b	;volatile
  2638                           
  2639                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2640   00157E  0E1D               	movlw	29
  2641   001580  6F1D               	movwf	29,b	;volatile
  2642                           
  2643                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2644   001582  0E1E               	movlw	30
  2645   001584  6F1C               	movwf	28,b	;volatile
  2646                           
  2647                           ;i2c.c: 18:   RD5PPS=0x1C;
  2648   001586  0E1C               	movlw	28
  2649   001588  6F6F               	movwf	111,b	;volatile
  2650                           
  2651                           ;i2c.c: 19:   RD6PPS=0x1B;
  2652   00158A  0E1B               	movlw	27
  2653   00158C  6F70               	movwf	112,b	;volatile
  2654   00158E                     
  2655                           ; BSR set to: 14
  2656   00158E  0012               	return		;funcret
  2657   001590                     __end_of_I2C_2_Master_Init:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _buggy_lights_init *****************
  2661 ;; Defined at:
  2662 ;;		line 4 in file "buggy_lights.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		None
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 1
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text22
  2691   001410                     __ptext22:
  2692                           	callstack 0
  2693   001410                     _buggy_lights_init:
  2694                           	callstack 29
  2695   001410                     
  2696                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2697   001410  9884               	bcf	132,4,c	;volatile
  2698                           
  2699                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2700   001412  9288               	bcf	136,1,c	;volatile
  2701                           
  2702                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2703   001414  9684               	bcf	132,3,c	;volatile
  2704                           
  2705                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2706   001416  9086               	bcf	134,0,c	;volatile
  2707                           
  2708                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2709   001418  9088               	bcf	136,0,c	;volatile
  2710                           
  2711                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 0;
  2712   00141A  987C               	bcf	124,4,c	;volatile
  2713                           
  2714                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 0;
  2715   00141C  9280               	bcf	128,1,c	;volatile
  2716                           
  2717                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 0;
  2718   00141E  967C               	bcf	124,3,c	;volatile
  2719                           
  2720                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 0;
  2721   001420  907E               	bcf	126,0,c	;volatile
  2722                           
  2723                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 0;
  2724   001422  9080               	bcf	128,0,c	;volatile
  2725                           
  2726                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2727   001424  9E84               	bcf	132,7,c	;volatile
  2728                           
  2729                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2730   001426  9688               	bcf	136,3,c	;volatile
  2731                           
  2732                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 0;
  2733   001428  9E7C               	bcf	124,7,c	;volatile
  2734                           
  2735                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 0;
  2736   00142A  9680               	bcf	128,3,c	;volatile
  2737                           
  2738                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  2739   00142C  9081               	bcf	129,0,c	;volatile
  2740                           
  2741                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  2742   00142E  9483               	bcf	131,2,c	;volatile
  2743                           
  2744                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  2745   001430  9084               	bcf	132,0,c	;volatile
  2746                           
  2747                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 0;
  2748   001432  9079               	bcf	121,0,c	;volatile
  2749                           
  2750                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 0;
  2751   001434  947B               	bcf	123,2,c	;volatile
  2752                           
  2753                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 0;
  2754   001436  907C               	bcf	124,0,c	;volatile
  2755                           
  2756                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  2757   001438  9281               	bcf	129,1,c	;volatile
  2758                           
  2759                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  2760   00143A  9C83               	bcf	131,6,c	;volatile
  2761                           
  2762                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  2763   00143C  9488               	bcf	136,2,c	;volatile
  2764                           
  2765                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 0;
  2766   00143E  9279               	bcf	121,1,c	;volatile
  2767                           
  2768                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 0;
  2769   001440  9C7B               	bcf	123,6,c	;volatile
  2770                           
  2771                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 0;
  2772   001442  9480               	bcf	128,2,c	;volatile
  2773                           
  2774                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  2775   001444  9287               	bcf	135,1,c	;volatile
  2776                           
  2777                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  2778   001446  9881               	bcf	129,4,c	;volatile
  2779                           
  2780                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  2781   001448  9E86               	bcf	134,7,c	;volatile
  2782                           
  2783                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 0;
  2784   00144A  927F               	bcf	127,1,c	;volatile
  2785                           
  2786                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 0;
  2787   00144C  9879               	bcf	121,4,c	;volatile
  2788                           
  2789                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 0;
  2790   00144E  9E7E               	bcf	126,7,c	;volatile
  2791                           
  2792                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  2793   001450  9087               	bcf	135,0,c	;volatile
  2794                           
  2795                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  2796   001452  9E85               	bcf	133,7,c	;volatile
  2797                           
  2798                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  2799   001454  9681               	bcf	129,3,c	;volatile
  2800                           
  2801                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 0;
  2802   001456  907F               	bcf	127,0,c	;volatile
  2803                           
  2804                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 0;
  2805   001458  9E7D               	bcf	125,7,c	;volatile
  2806                           
  2807                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 0;
  2808   00145A  9679               	bcf	121,3,c	;volatile
  2809   00145C  0012               	return		;funcret
  2810   00145E                     __end_of_buggy_lights_init:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _Timer0_init *****************
  2814 ;; Defined at:
  2815 ;;		line 7 in file "timers.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; Hardware stack levels required when called: 1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text23
  2844   0015D8                     __ptext23:
  2845                           	callstack 0
  2846   0015D8                     _Timer0_init:
  2847                           	callstack 29
  2848   0015D8                     
  2849                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2850   0015D8  50D6               	movf	214,w,c	;volatile
  2851   0015DA  0B1F               	andlw	-225
  2852   0015DC  0940               	iorlw	64
  2853   0015DE  6ED6               	movwf	214,c	;volatile
  2854   0015E0                     
  2855                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2856   0015E0  88D6               	bsf	214,4,c	;volatile
  2857   0015E2                     
  2858                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  2859   0015E2  88D5               	bsf	213,4,c	;volatile
  2860                           
  2861                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  2862   0015E4  50D6               	movf	214,w,c	;volatile
  2863   0015E6  0BF0               	andlw	-16
  2864   0015E8  090E               	iorlw	14
  2865   0015EA  6ED6               	movwf	214,c	;volatile
  2866   0015EC                     
  2867                           ;timers.c: 21:     T0CON0bits.T0EN=1;
  2868   0015EC  8ED5               	bsf	213,7,c	;volatile
  2869   0015EE                     
  2870                           ;timers.c: 22:     PIE0bits.TMR0IE = 1;
  2871   0015EE  010E               	movlb	14	; () banked
  2872   0015F0  8B29               	bsf	41,5,b	;volatile
  2873   0015F2                     
  2874                           ; BSR set to: 14
  2875                           ;timers.c: 23:     INTCONbits.PEIE = 1;
  2876   0015F2  8CF2               	bsf	242,6,c	;volatile
  2877   0015F4                     
  2878                           ; BSR set to: 14
  2879                           ;timers.c: 24:     INTCONbits.GIE = 1;
  2880   0015F4  8EF2               	bsf	242,7,c	;volatile
  2881   0015F6                     
  2882                           ; BSR set to: 14
  2883   0015F6  0012               	return		;funcret
  2884   0015F8                     __end_of_Timer0_init:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _ISR *****************
  2888 ;; Defined at:
  2889 ;;		line 27 in file "timers.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		Interrupt level 2
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	intcode
  2917   000008                     __pintcode:
  2918                           	callstack 0
  2919   000008                     _ISR:
  2920                           	callstack 24
  2921                           
  2922                           ; BSR set to: 14
  2923                           ;incstack = 0
  2924   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2925   00000A                     
  2926                           ;timers.c: 30:     if (PIR0bits.TMR0IF) {
  2927   00000A  010E               	movlb	14	; () banked
  2928   00000C  AB33               	btfss	51,5,b	;volatile
  2929   00000E  EF0B  F000         	goto	i2u74_41
  2930   000012  EF0D  F000         	goto	i2u74_40
  2931   000016                     i2u74_41:
  2932   000016  EF10  F000         	goto	i2l531
  2933   00001A                     i2u74_40:
  2934   00001A                     
  2935                           ; BSR set to: 14
  2936                           ;timers.c: 31:         timer_count++;
  2937   00001A  4A52               	infsnz	_timer_count^0,f,c
  2938   00001C  2A53               	incf	(_timer_count+1)^0,f,c
  2939   00001E                     
  2940                           ; BSR set to: 14
  2941                           ;timers.c: 32:         PIR0bits.TMR0IF = 0;
  2942   00001E  9B33               	bcf	51,5,b	;volatile
  2943   000020                     i2l531:
  2944                           
  2945                           ; BSR set to: 14
  2946   000020  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2947   000022  0011               	retfie		f
  2948   000024                     __end_of_ISR:
  2949                           	callstack 0
  2950                           
  2951                           	psect	rparam
  2952   000000                     
  2953                           	psect	temp
  2954   00005F                     btemp:
  2955                           	callstack 0
  2956   00005F                     	ds	1
  2957   000000                     int$flags	set	btemp
  2958   000000                     wtemp8	set	btemp+1
  2959   000000                     ttemp5	set	btemp+1
  2960   000000                     ttemp6	set	btemp+4
  2961   000000                     ttemp7	set	btemp+8
  2962                           
  2963                           	psect	idloc
  2964                           
  2965                           ;Config register IDLOC0 @ 0x200000
  2966                           ;	unspecified, using default values
  2967   200000                     	org	2097152
  2968   200000  FFFF               	dw	65535
  2969                           
  2970                           ;Config register IDLOC1 @ 0x200002
  2971                           ;	unspecified, using default values
  2972   200002                     	org	2097154
  2973   200002  FFFF               	dw	65535
  2974                           
  2975                           ;Config register IDLOC2 @ 0x200004
  2976                           ;	unspecified, using default values
  2977   200004                     	org	2097156
  2978   200004  FFFF               	dw	65535
  2979                           
  2980                           ;Config register IDLOC3 @ 0x200006
  2981                           ;	unspecified, using default values
  2982   200006                     	org	2097158
  2983   200006  FFFF               	dw	65535
  2984                           
  2985                           ;Config register IDLOC4 @ 0x200008
  2986                           ;	unspecified, using default values
  2987   200008                     	org	2097160
  2988   200008  FFFF               	dw	65535
  2989                           
  2990                           ;Config register IDLOC5 @ 0x20000A
  2991                           ;	unspecified, using default values
  2992   20000A                     	org	2097162
  2993   20000A  FFFF               	dw	65535
  2994                           
  2995                           ;Config register IDLOC6 @ 0x20000C
  2996                           ;	unspecified, using default values
  2997   20000C                     	org	2097164
  2998   20000C  FFFF               	dw	65535
  2999                           
  3000                           ;Config register IDLOC7 @ 0x20000E
  3001                           ;	unspecified, using default values
  3002   20000E                     	org	2097166
  3003   20000E  FFFF               	dw	65535
  3004                           
  3005                           	psect	config
  3006                           
  3007                           ;Config register CONFIG1L @ 0x300000
  3008                           ;	External Oscillator mode Selection bits
  3009                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3010                           ;	Power-up default value for COSC bits
  3011                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3012   300000                     	org	3145728
  3013   300000  AA                 	db	170
  3014                           
  3015                           ;Config register CONFIG1H @ 0x300001
  3016                           ;	unspecified, using default values
  3017                           ;	Clock Out Enable bit
  3018                           ;	CLKOUTEN = 0x1, unprogrammed default
  3019                           ;	Clock Switch Enable bit
  3020                           ;	CSWEN = 0x1, unprogrammed default
  3021                           ;	Fail-Safe Clock Monitor Enable bit
  3022                           ;	FCMEN = 0x1, unprogrammed default
  3023   300001                     	org	3145729
  3024   300001  FF                 	db	255
  3025                           
  3026                           ;Config register CONFIG2L @ 0x300002
  3027                           ;	unspecified, using default values
  3028                           ;	Master Clear Enable bit
  3029                           ;	MCLRE = 0x1, unprogrammed default
  3030                           ;	Power-up Timer Enable bit
  3031                           ;	PWRTE = 0x1, unprogrammed default
  3032                           ;	Low-power BOR enable bit
  3033                           ;	LPBOREN = 0x1, unprogrammed default
  3034                           ;	Brown-out Reset Enable bits
  3035                           ;	BOREN = 0x3, unprogrammed default
  3036   300002                     	org	3145730
  3037   300002  FF                 	db	255
  3038                           
  3039                           ;Config register CONFIG2H @ 0x300003
  3040                           ;	unspecified, using default values
  3041                           ;	Brown Out Reset Voltage selection bits
  3042                           ;	BORV = 0x3, unprogrammed default
  3043                           ;	ZCD Disable bit
  3044                           ;	ZCD = 0x1, unprogrammed default
  3045                           ;	PPSLOCK bit One-Way Set Enable bit
  3046                           ;	PPS1WAY = 0x1, unprogrammed default
  3047                           ;	Stack Full/Underflow Reset Enable bit
  3048                           ;	STVREN = 0x1, unprogrammed default
  3049                           ;	Debugger Enable bit
  3050                           ;	DEBUG = 0x1, unprogrammed default
  3051                           ;	Extended Instruction Set Enable bit
  3052                           ;	XINST = 0x1, unprogrammed default
  3053   300003                     	org	3145731
  3054   300003  FF                 	db	255
  3055                           
  3056                           ;Config register CONFIG3L @ 0x300004
  3057                           ;	WDT Period Select bits
  3058                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3059                           ;	WDT operating mode
  3060                           ;	WDTE = OFF, WDT Disabled
  3061   300004                     	org	3145732
  3062   300004  9F                 	db	159
  3063                           
  3064                           ;Config register CONFIG3H @ 0x300005
  3065                           ;	unspecified, using default values
  3066                           ;	WDT Window Select bits
  3067                           ;	WDTCWS = 0x7, unprogrammed default
  3068                           ;	WDT input clock selector
  3069                           ;	WDTCCS = 0x7, unprogrammed default
  3070   300005                     	org	3145733
  3071   300005  FF                 	db	255
  3072                           
  3073                           ;Config register CONFIG4L @ 0x300006
  3074                           ;	unspecified, using default values
  3075                           ;	Write Protection Block 0
  3076                           ;	WRT0 = 0x1, unprogrammed default
  3077                           ;	Write Protection Block 1
  3078                           ;	WRT1 = 0x1, unprogrammed default
  3079                           ;	Write Protection Block 2
  3080                           ;	WRT2 = 0x1, unprogrammed default
  3081                           ;	Write Protection Block 3
  3082                           ;	WRT3 = 0x1, unprogrammed default
  3083                           ;	Write Protection Block 3
  3084                           ;	WRT4 = 0x1, unprogrammed default
  3085                           ;	Write Protection Block 3
  3086                           ;	WRT5 = 0x1, unprogrammed default
  3087                           ;	Write Protection Block 3
  3088                           ;	WRT6 = 0x1, unprogrammed default
  3089                           ;	Write Protection Block 3
  3090                           ;	WRT7 = 0x1, unprogrammed default
  3091   300006                     	org	3145734
  3092   300006  FF                 	db	255
  3093                           
  3094                           ;Config register CONFIG4H @ 0x300007
  3095                           ;	unspecified, using default values
  3096                           ;	Configuration Register Write Protection bit
  3097                           ;	WRTC = 0x1, unprogrammed default
  3098                           ;	Boot Block Write Protection bit
  3099                           ;	WRTB = 0x1, unprogrammed default
  3100                           ;	Data EEPROM Write Protection bit
  3101                           ;	WRTD = 0x1, unprogrammed default
  3102                           ;	Scanner Enable bit
  3103                           ;	SCANE = 0x1, unprogrammed default
  3104                           ;	Low Voltage Programming Enable bit
  3105                           ;	LVP = 0x1, unprogrammed default
  3106   300007                     	org	3145735
  3107   300007  FF                 	db	255
  3108                           
  3109                           ;Config register CONFIG5L @ 0x300008
  3110                           ;	unspecified, using default values
  3111                           ;	UserNVM Program Memory Code Protection bit
  3112                           ;	CP = 0x1, unprogrammed default
  3113                           ;	DataNVM Memory Code Protection bit
  3114                           ;	CPD = 0x1, unprogrammed default
  3115   300008                     	org	3145736
  3116   300008  FF                 	db	255
  3117                           
  3118                           ;Config register CONFIG5H @ 0x300009
  3119                           ;	unspecified, using default values
  3120   300009                     	org	3145737
  3121   300009  FF                 	db	255
  3122                           
  3123                           ;Config register CONFIG6L @ 0x30000A
  3124                           ;	unspecified, using default values
  3125                           ;	Table Read Protection Block 0
  3126                           ;	EBTR0 = 0x1, unprogrammed default
  3127                           ;	Table Read Protection Block 1
  3128                           ;	EBTR1 = 0x1, unprogrammed default
  3129                           ;	Table Read Protection Block 2
  3130                           ;	EBTR2 = 0x1, unprogrammed default
  3131                           ;	Table Read Protection Block 3
  3132                           ;	EBTR3 = 0x1, unprogrammed default
  3133                           ;	Table Read Protection Block 4
  3134                           ;	EBTR4 = 0x1, unprogrammed default
  3135                           ;	Table Read Protection Block 5
  3136                           ;	EBTR5 = 0x1, unprogrammed default
  3137                           ;	Table Read Protection Block 6
  3138                           ;	EBTR6 = 0x1, unprogrammed default
  3139                           ;	Table Read Protection Block 7
  3140                           ;	EBTR7 = 0x1, unprogrammed default
  3141   30000A                     	org	3145738
  3142   30000A  FF                 	db	255
  3143                           
  3144                           ;Config register CONFIG6H @ 0x30000B
  3145                           ;	unspecified, using default values
  3146                           ;	Boot Block Table Read Protection bit
  3147                           ;	EBTRB = 0x1, unprogrammed default
  3148   30000B                     	org	3145739
  3149   30000B  FF                 	db	255
  3150                           tosu	equ	0xFFF
  3151                           tosh	equ	0xFFE
  3152                           tosl	equ	0xFFD
  3153                           stkptr	equ	0xFFC
  3154                           pclatu	equ	0xFFB
  3155                           pclath	equ	0xFFA
  3156                           pcl	equ	0xFF9
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           indf0	equ	0xFEF
  3164                           postinc0	equ	0xFEE
  3165                           postdec0	equ	0xFED
  3166                           preinc0	equ	0xFEC
  3167                           plusw0	equ	0xFEB
  3168                           fsr0h	equ	0xFEA
  3169                           fsr0l	equ	0xFE9
  3170                           wreg	equ	0xFE8
  3171                           indf1	equ	0xFE7
  3172                           postinc1	equ	0xFE6
  3173                           postdec1	equ	0xFE5
  3174                           preinc1	equ	0xFE4
  3175                           plusw1	equ	0xFE3
  3176                           fsr1h	equ	0xFE2
  3177                           fsr1l	equ	0xFE1
  3178                           bsr	equ	0xFE0
  3179                           indf2	equ	0xFDF
  3180                           postinc2	equ	0xFDE
  3181                           postdec2	equ	0xFDD
  3182                           preinc2	equ	0xFDC
  3183                           plusw2	equ	0xFDB
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        18
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2421$buffer	PTR unsigned char  size(2) Largest target is 0

    S2421$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    4266
                                             61 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                    _lights_flashing
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3571
                                             42 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3287
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     136
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lights_flashing                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _lights_flashing
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllhhh     2D      0       0      46        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       15      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      48        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      55        0.0%
BITBIGSFRllllhl      5      0       0      51        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      50        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      60        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 15:40:50 2024

               _turn180Delay 00D8                           l33 145C                           l36 1288  
                         l55 153A                           l58 15D6                 ___awdiv@sign 0006  
                        l241 158E                          l250 1676                          l146 13AC  
                        l244 1590                          l247 15B6                          l256 166C  
                        l259 1662                          l525 15F6                          l381 164A  
                        l390 1614                          l369 1632                          l378 1636  
                        l387 1564                          l765 1094                          l778 1144  
                        u320 1646                          u321 1642                          u180 15A0  
                        u181 159C                          u190 15B6                          u510 1202  
                        u191 15B2                          u511 11FA                          u530 1222  
                        u531 121A                          _ISR 0008                          u550 125E  
                        u551 1256                          u528 1204                          u800 1084  
                        u801 1080                          u570 127C                          u810 10A8  
                        u571 1274                          u811 10A4                          u548 1224  
                        u820 10C2                          u900 11BE                          u821 10BE  
                        u901 11BA                          u750 0FE4                          u830 10DC  
                        u910 14E2                          u751 0FE0                          u831 10D8  
                        u911 14DE                          u568 1260                          u760 0FFE  
                        u840 10FA                          u920 0E2E                          u761 0FFA  
                        u841 10F6                          u921 0E2A                          u770 1024  
                        u850 1110                          u930 0E72                          u771 1020  
                        u851 110C                          u931 0E6E                          u588 127E  
                        u780 1042                          u860 1134                          u940 0E92  
                        u781 103E                          u861 1130                          u941 0E8E  
                        u790 105E                          u870 1156                          u950 0EC8  
                        u791 105A                          u871 1152                          u951 0EC2  
                        u880 1166                          u960 0ECA                          u881 1162  
                        u890 118C                          u970 0F2A                          u891 1188  
                        u971 0F26                          u980 0F3A                          u981 0F36  
                        u990 0F4A                          u991 0F46                          _abs 14D4  
               ___awmod@sign 0006                          wreg 0FE8                  _squareDelay 00D4  
                       ?_ISR 0001                         ?_abs 0007                         l2020 0FD6  
                       l2100 1156                         l1212 14D2                         l2030 1006  
                       l2022 0FE4                         l2102 1166                         l2040 1034  
                       l2032 100A                         l2024 0FEC                         l2112 14D4  
                       l2104 1170                         l2120 0E36                         l2050 1068  
                       l2042 1042                         l2034 1012                         l2026 0FF0  
                       l2018 0FD2                         l2114 14E2                         l2106 118C  
                       l1250 0FD0                         l2130 0E92                         l2122 0E44  
                       l2300 1508                         l2052 106E                         l2044 1048  
                       l2036 1024                         l2028 0FFE                         l1260 14EE  
                       l2108 11BE                         l2140 0F18                         l2132 0EAA  
                       l2124 0E48                         l2116 0E08                         l2302 150C  
                       l2310 131E                         l2046 105E                         l2038 102C  
                       l2054 1074                         l2070 10B4                         l2062 1096  
                       l2150 0F6C                         l2142 0F2A                         l2134 0EB4  
                       l2126 0E52                         l2118 0E2E                         l1263 1506  
                       l1440 166E                         l2304 1516                         l2320 1386  
                       l2312 132E                         l2056 1084                         l2048 1066  
                       l2080 10EC                         l2072 10C2                         l2064 109A  
                       l2152 0F86                         l2144 0F3A                         l2136 0ECC  
                       l2128 0E72                         l2160 0FAA                         l1256 149E  
                       l1602 1410                         l1442 1672                         l1450 1668  
                       l2306 1526                         l2330 13A0                         l2322 1388  
                       l2314 1354                         l1610 126A                         l2058 108C  
                       l2082 10FA                         l2090 1124                         l2074 10CA  
                       l2066 10A8                         l2146 0F4A                         l2154 0F88  
                       l2138 0EFC                         l2410 128A                         l1275 11EE  
                       l1444 165A                         l2308 1530                         l2332 13AA  
                       l2324 1392                         l2316 1358                         l1604 11F0  
                       l2092 1134                         l2084 1110                         l2076 10DC  
                       l2068 10B0                         l2148 0F5A                         l2156 0F9E  
                       l2420 12B6                         l2412 12A2                         l1446 165E  
                       l2326 1394                         l2318 137C                         l1606 1234  
                       l1470 1646                         l2094 113C                         l2086 1118  
                       l2078 10E4                         l1286 167E                         l2182 145E  
                       l2430 12D6                         l2422 12BA                         l2414 12A2  
                       l1448 1664                         l2192 15BA                         l2328 139E  
                       l1608 124C                         l2280 153C                         l2088 111E  
                       l2184 1466                         l2440 12F6                         l2432 12DA  
                       l2424 12C2                         l2416 12AE                         l1490 157A  
                       l1482 1566                         l1386 1590                         l2282 1540  
                       l2098 1146                         l2186 1476                         l2290 14A8  
                       l2450 1306                         l2442 12FA                         l2434 12DE  
                       l2426 12CA                         l2418 12B2                         l1492 157C  
                       l1484 1570                         l1388 15A0                         l1740 1622  
                       l1468 1636                         l2284 154C                         l2188 1496  
                       l2292 14B0                         l2452 1312                         l2444 12FE  
                       l2436 12E6                         l2428 12D2                         l1750 15E0  
                       l1486 1576                         l1742 162C                         l2286 154E  
                       l2294 14B8                         l2446 1302                         l2438 12EE  
                       l1760 15F4                         l1752 15E2                         l1488 1578  
                       l1744 162E                         l1736 1616                         l2296 14C8  
                       l2288 14A0                         l2376 15F8                         l2448 1306  
                       l1754 15EC                         l1746 1630                         l1738 1620  
                       l2378 160C                         l1756 15EE                         l1748 15D8  
                       l1758 15F2                         STR_1 0E01                         u1000 0F5A  
                       u1001 0F56                         u1010 0F9A                         u1011 0F96  
                       u1040 1496                         u1041 1492                         u1210 1564  
                       u1211 1560                 _BAUD4CONbits 0EE9                         _T2PR 0FBC  
                       u1707 1294                         u1717 123E                         u1727 151C  
                       abs@a 0007                         _dbuf 009C                         _main 128A  
                       _prec 00D2                         fsr1h 0FE2                         fsr2h 0FDA  
                       indf2 0FDF                         fsr1l 0FE1                         fsr2l 0FD9  
                       btemp 005F                         start 0024                 ___param_bank 0000  
                      ??_ISR 0001                        ??_abs 0009               _sendIntSerial4 15F8  
                      ?_main 0001              __end_of___awdiv 1096              __end_of___awmod 1146  
            ___awdiv@divisor 0003                        i2l531 0020              ___awdiv@counter 0005  
               vfpfcnvrt@fmt 000C      __end_of_sendCharSerial4 164C   __end_of_I2C_2_Master_Start 1678  
 __end_of_I2C_2_Master_Write 1664                  _turningGear 005B                        _flags 0054  
                      _fputc 1146                        _width 00D0                        _putch 167E  
          _turnRight135Delay 00DA                        tablat 0FF5              _turnLeft90Delay 0059  
                      ttemp5 0060                        ttemp6 0063                        ttemp7 0067  
                      status 0FD8                        wtemp8 0060              __end_of_sprintf 14D4  
            __initialization 13AE                 __end_of_main 131E       __end_of_sendIntSerial4 1616  
                     ??_main 003E                __activetblptr 0003                       ?_fputc 0001  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0001                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2012 000A                       i2l2014 001A  
                     i2l2016 001E                       _RG6PPS 0E88                vfpfcnvrt@done 000F  
   __end_of_color_click_init 153C                       _RX4PPS 0E15                       _TX4REG 0EE4  
           _turnLeft135Delay 00DC                ??_Timer0_init 0001                 _CCPTMRS0bits 0FAD  
               vfprintf@cfmt 0019              _lights_flashing 11F0                    ??___awdiv 0005  
                  ??___awmod 0005              ?_sendIntSerial4 002B                       clear_0 13F4  
                     clear_1 1400             ___awdiv@quotient 0007              ___awmod@divisor 0003  
                     isa$std 0001              ___awmod@counter 0005                       fputc@c 0001  
               __pdataCOMRAM 0059                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8             ?_sendCharSerial4 0001  
                     putch@c 0001             __end_of_vfprintf 14A0            ??_initDCmotorsPWM 0003  
                  ??_sprintf 001E            _buggy_lights_init 1410                   __accesstop 0060  
    __end_of__initialization 1406           ?_buggy_lights_init 0001                ___rparam_used 0001  
             __pcstackCOMRAM 0001                 __pidataBANK0 164C          ??_buggy_lights_init 0001  
              __end_of_fputc 11F0                __end_of_putch 1680          __end_of_Timer0_init 15F8  
                    ??_fputc 0004    __end_of_buggy_lights_init 145E                      ??_putch 0001  
                 __pbssBANK0 0060      __end_of_lights_flashing 128A            _color_writetoaddr 15B8  
               _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003          ??_color_writetoaddr 0004  
                    _SP4BRGH 0EE6                      _SP4BRGL 0EE5                      i2u74_40 001A  
                    i2u74_41 0016                      _SSP2ADD 0ED6                      _SSP2BUF 0ED5  
     color_writetoaddr@value 0003    __end_of_color_writetoaddr 15D8           _I2C_2_Master_Start 166E  
                 _initUSART4 1616           _I2C_2_Master_Write 1658                      __Hparam 0000  
                    __Lparam 0000                  _Timer0_init 15D8      sendStringSerial4@string 0002  
                    ___awdiv 0FD2                      ___awmod 1096          ?_I2C_2_Master_Start 0001  
        ?_I2C_2_Master_Write 0001                    ?_vfprintf 0016                 __psmallconst 0E00  
                    __pcinit 13AE                      __ramtop 0E00                      __ptext0 128A  
                    __ptext1 15F8                      __ptext2 14A0                      __ptext3 145E  
                    __ptext4 0E08                      __ptext5 1146                      __ptext6 167E  
                    __ptext7 14D4                      __ptext8 1096                      __ptext9 0FD2  
                  _T2CONbits 0FBD             ___awmod@dividend 0001                    _T2HLTbits 0FBE  
              _RxBufWriteCnt 0058                      _sprintf 14A0         ??_I2C_2_Master_Start 0002  
       ??_I2C_2_Master_Write 0002         end_of_initialization 1406                      fputc@fp 0003  
          ?_color_click_init 0001             ?_lights_flashing 0001           ??_color_click_init 0005  
           ??_sendIntSerial4 002D            __end_of_vfpfcnvrt 0FD2                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0011                   ??_vfprintf 0019  
            _initDCmotorsPWM 131E         sendIntSerial4@string 002D                    _TRISAbits 0F81  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
   color_writetoaddr@address 0004                  _CCP1CONbits 0FAB                 _EUSART4RXbuf 00BC  
               _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7                  _CCP3CONbits 0F26  
                ?_initUSART4 0001                  _CCP4CONbits 0F22    sendCharSerial4@charToSend 0001  
                 main@motorL 0040                   main@motorR 0049                  vfpfcnvrt@ap 000D  
                vfpfcnvrt@cp 0010                  vfpfcnvrt@fp 000B                __pidataCOMRAM 1678  
        start_initialization 13AE                  __end_of_ISR 0024                  __end_of_abs 1508  
              _TxBufWriteCnt 0056             _turnRight90Delay 00DE      __end_of_initDCmotorsPWM 13AE  
                vfprintf@fmt 0017                  __pdataBANK0 00D4                  __pbssCOMRAM 0052  
               ?_Timer0_init 0001                    __pintcode 0008                     ?___awdiv 0001  
                   ?___awmod 0001                  __smallconst 0E00            _I2C_2_Master_Idle 1590  
          _I2C_2_Master_Init 1566            _I2C_2_Master_Stop 1664                 _RxBufReadCnt 0057  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001  
              _headbuttDelay 00D6     initDCmotorsPWM@PWMperiod 0001                     ?_sprintf 001A  
                  _rampDelay 005E            _sendStringSerial4 153C          ??_I2C_2_Master_Idle 0001  
        ??_I2C_2_Master_Init 0001                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0002  
                   _LATCbits 0F7B                     _LATDbits 0F7C                     _LATEbits 0F7D  
                   _LATFbits 0F7E                     _LATGbits 0F7F                     _LATHbits 0F80  
                   _PIE0bits 0E29           ?_sendStringSerial4 0002                     _PIE4bits 0E2D  
                   _PIR0bits 0E33                     _PIR4bits 0E37             ?_initDCmotorsPWM 0001  
          ??_sendCharSerial4 0001                     _SSP2CON2 0EDA          ??_sendStringSerial4 0003  
                   _SSP2STAT 0ED8                    _vfpfcnvrt 0E08    __end_of_I2C_2_Master_Idle 15B8  
  __end_of_I2C_2_Master_Init 1590    __end_of_I2C_2_Master_Stop 166E  I2C_2_Master_Write@data_byte 0002  
               _TxBufReadCnt 0055                   vfpfcnvrt@c 0015                    copy_data0 13C2  
                  copy_data1 13E2    __end_of_sendStringSerial4 1566                 ??_initUSART4 0001  
                   __Hrparam 0000                   vfprintf@ap 0018                     __Lrparam 0000  
                 vfprintf@fp 0016                   ?_vfpfcnvrt 000B                   _ANSELDbits 0EA7  
                 sprintf@fmt 001B                   _T0CON0bits 0FD5                   _T0CON1bits 0FD6  
         __end_of_initUSART4 1634                     __ptext10 153C                     __ptext11 1634  
                   __ptext20 1590                     __ptext12 11F0                     __ptext21 1566  
                   __ptext13 1616                     __ptext22 1410                     __ptext14 131E  
                   __ptext23 15D8                     __ptext15 1508                     __ptext16 15B8  
                   __ptext17 1658                     __ptext18 1664                     __ptext19 166E  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                     int$flags 005F                     _vfprintf 145E  
                 _INTCONbits 0FF2                     intlevel2 0000                    sprintf@ap 001E  
               _topGearRight 005C                  ??_vfpfcnvrt 000E             _color_click_init 1508  
      sendIntSerial4@integer 002B                  _topGearLeft 005D                     sprintf@f 001F  
                   sprintf@s 001A                   _SSP2DATPPS 0E1D            ??_lights_flashing 0001  
                 _SSP2CLKPPS 0E1C                  _timer_count 0052                   _TX4STAbits 0EE8  
            _sendCharSerial4 1634  
