

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 08 11:12:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 21/07/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F67K40 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataCOMRAM
   106   002CF6                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _timer_high_pointer
   110   002CF6  28                 	db	low _trail_timer_high
   111   002CF7  01                 	db	high _trail_timer_high
   112                           
   113                           ;initializer for _turningGear
   114   002CF8  2A                 	db	42
   115                           
   116                           ;initializer for _topGearRight
   117   002CF9  14                 	db	20
   118                           
   119                           ;initializer for _topGearLeft
   120   002CFA  14                 	db	20
   121                           
   122                           ;initializer for _rampDelay
   123   002CFB  08                 	db	8
   124                           
   125                           	psect	idataBANK0
   126   002CA0                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for _manoeuvre_pointer
   130   002CA0  00                 	db	low _trail_manoeuvre
   131   002CA1  01                 	db	high _trail_manoeuvre
   132                           
   133                           ;initializer for _timer_low_pointer
   134   002CA2  14                 	db	low _trail_timer_low
   135   002CA3  01                 	db	high _trail_timer_low
   136                           
   137                           ;initializer for _squareDelay
   138   002CA4  012C               	dw	300
   139                           
   140                           ;initializer for _headbuttDelay
   141   002CA6  0046               	dw	70
   142                           
   143                           ;initializer for _turn180Delay
   144   002CA8  01FE               	dw	510
   145                           
   146                           ;initializer for _turnRight135Delay
   147   002CAA  012C               	dw	300
   148                           
   149                           ;initializer for _turnLeft135Delay
   150   002CAC  012C               	dw	300
   151                           
   152                           ;initializer for _turnRight90Delay
   153   002CAE  00AF               	dw	175
   154                           
   155                           ;initializer for _turnLeft90Delay
   156   002CB0  00AF               	dw	175
   157                           
   158                           ;initializer for _wall_threshold
   159   002CB2  012C               	dw	300
   160   000000                     _TMR0H	set	4052
   161   000000                     _TX4REG	set	3812
   162   000000                     _RC4STAbits	set	3815
   163   000000                     _SP4BRGH	set	3814
   164   000000                     _LATEbits	set	3965
   165   000000                     _TRISEbits	set	3973
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISGbits	set	3975
   168   000000                     _LATFbits	set	3966
   169   000000                     _LATHbits	set	3968
   170   000000                     _TRISFbits	set	3974
   171   000000                     _TRISHbits	set	3976
   172   000000                     _SSP2CON2bits	set	3802
   173   000000                     _RX4PPS	set	3605
   174   000000                     _SSP2CLKPPS	set	3612
   175   000000                     _SSP2DATPPS	set	3613
   176   000000                     _RC7PPS	set	3689
   177   000000                     _RE2PPS	set	3700
   178   000000                     _LATAbits	set	3961
   179   000000                     _LATDbits	set	3964
   180   000000                     _TRISDbits	set	3972
   181   000000                     _T2PR	set	4028
   182   000000                     _T2CONbits	set	4029
   183   000000                     _CCPR2H	set	4006
   184   000000                     _CCPR1H	set	4010
   185   000000                     _TRISCbits	set	3971
   186   000000                     _TRISAbits	set	3969
   187   000000                     _LATCbits	set	3963
   188   000000                     _RE4PPS	set	3702
   189   000000                     _RG6PPS	set	3720
   190   000000                     _RD5PPS	set	3695
   191   000000                     _ANSELDbits	set	3751
   192   000000                     _SSP2ADD	set	3798
   193   000000                     _SSP2CON1bits	set	3801
   194   000000                     _CCPR4H	set	3873
   195   000000                     _CCPR3H	set	3877
   196   000000                     _TMR0L	set	4051
   197   000000                     _T0CON0bits	set	4053
   198   000000                     _T0CON1bits	set	4054
   199   000000                     _T2CLKCONbits	set	4031
   200   000000                     _T2HLTbits	set	4030
   201   000000                     _CCP1CONbits	set	4011
   202   000000                     _CCPTMRS0bits	set	4013
   203   000000                     _CCP2CONbits	set	4007
   204   000000                     _CCP3CONbits	set	3878
   205   000000                     _CCP4CONbits	set	3874
   206   000000                     _RC4REG	set	3811
   207   000000                     _SP4BRGL	set	3813
   208   000000                     _TX4STAbits	set	3816
   209   000000                     _BAUD4CONbits	set	3817
   210   000000                     _SSP2CON2	set	3802
   211   000000                     _SSP2STAT	set	3800
   212   000000                     _ANSELFbits	set	3764
   213   000000                     _SSP2BUF	set	3797
   214   000000                     _PIE0bits	set	3625
   215   000000                     _PIR4bits	set	3639
   216   000000                     _RC0PPS	set	3682
   217   000000                     _RD6PPS	set	3696
   218   000000                     _INTCONbits	set	4082
   219   000000                     _PIR0bits	set	3635
   220                           
   221                           	psect	smallconst
   222   000E00                     __psmallconst:
   223                           	callstack 0
   224   000E00  00                 	db	0
   225   000E01                     STR_5:
   226                           
   227                           ; BSR set to: 14
   228   000E01  25                 	db	37
   229   000E02  75                 	db	117	;'u'
   230   000E03  20                 	db	32
   231   000E04  25                 	db	37
   232   000E05  75                 	db	117	;'u'
   233   000E06  20                 	db	32
   234   000E07  25                 	db	37
   235   000E08  75                 	db	117	;'u'
   236   000E09  20                 	db	32
   237   000E0A  25                 	db	37
   238   000E0B  75                 	db	117	;'u'
   239   000E0C  20                 	db	32
   240   000E0D  00                 	db	0
   241   000E0E                     STR_6:
   242                           
   243                           ; BSR set to: 14
   244   000E0E  25                 	db	37
   245   000E0F  75                 	db	117	;'u'
   246   000E10  20                 	db	32
   247   000E11  25                 	db	37
   248   000E12  75                 	db	117	;'u'
   249   000E13  20                 	db	32
   250   000E14  25                 	db	37
   251   000E15  75                 	db	117	;'u'
   252   000E16  20                 	db	32
   253   000E17  0D                 	db	13
   254   000E18  00                 	db	0
   255   000E19                     STR_1:
   256                           
   257                           ; BSR set to: 14
   258   000E19  25                 	db	37
   259   000E1A  64                 	db	100	;'d'
   260   000E1B  20                 	db	32
   261   000E1C  0D                 	db	13
   262   000E1D  00                 	db	0
   263   000E1E                     STR_2:
   264                           
   265                           ; BSR set to: 14
   266   000E1E  25                 	db	37
   267   000E1F  64                 	db	100	;'d'
   268   000E20  20                 	db	32
   269   000E21  00                 	db	0
   270   000E22  00                 	db	0	; dummy byte at the end
   271   000000                     
   272                           ; #config settings
   273                           
   274                           	psect	cinit
   275   002578                     __pcinit:
   276                           	callstack 0
   277   002578                     start_initialization:
   278                           	callstack 0
   279   002578                     __initialization:
   280                           	callstack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (20 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284   002578  0EA0               	movlw	low __pidataBANK0
   285   00257A  6EF6               	movwf	tblptrl,c
   286   00257C  0E2C               	movlw	high __pidataBANK0
   287   00257E  6EF7               	movwf	tblptrh,c
   288   002580  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289   002582  6EF8               	movwf	tblptru,c
   290   002584  EE00  F0A6         	lfsr	0,__pdataBANK0
   291   002588  EE10 F014          	lfsr	1,20
   292   00258C                     copy_data0:
   293   00258C  0009               	tblrd		*+
   294   00258E  CFF5 FFEE          	movff	tablat,postinc0
   295   002592  50E5               	movf	postdec1,w,c
   296   002594  50E1               	movf	fsr1l,w,c
   297   002596  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to COMRAM (6 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301   002598  0EF6               	movlw	low __pidataCOMRAM
   302   00259A  6EF6               	movwf	tblptrl,c
   303   00259C  0E2C               	movlw	high __pidataCOMRAM
   304   00259E  6EF7               	movwf	tblptrh,c
   305   0025A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306   0025A2  6EF8               	movwf	tblptru,c
   307   0025A4  EE00  F054         	lfsr	0,__pdataCOMRAM
   308   0025A8  EE10 F006          	lfsr	1,6
   309   0025AC                     copy_data1:
   310   0025AC  0009               	tblrd		*+
   311   0025AE  CFF5 FFEE          	movff	tablat,postinc0
   312   0025B2  50E5               	movf	postdec1,w,c
   313   0025B4  50E1               	movf	fsr1l,w,c
   314   0025B6  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK1 (60 bytes)
   317   0025B8  EE01  F000         	lfsr	0,__pbssBANK1
   318   0025BC  0E3C               	movlw	60
   319   0025BE                     clear_0:
   320   0025BE  6AEE               	clrf	postinc0,c
   321   0025C0  06E8               	decf	wreg,f,c
   322   0025C2  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BANK0 (38 bytes)
   325   0025C4  EE00  F060         	lfsr	0,__pbssBANK0
   326   0025C8  0E26               	movlw	38
   327   0025CA                     clear_1:
   328   0025CA  6AEE               	clrf	postinc0,c
   329   0025CC  06E8               	decf	wreg,f,c
   330   0025CE  E1FD               	bnz	clear_1
   331                           
   332                           ; Clear objects allocated to COMRAM (4 bytes)
   333   0025D0  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   334   0025D2  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   335   0025D4  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   336   0025D6  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   337   0025D8                     end_of_initialization:
   338                           	callstack 0
   339   0025D8                     __end_of__initialization:
   340                           	callstack 0
   341   0025D8  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   0025DA  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   0025DC  0100               	movlb	0
   344   0025DE  EFED  F00E         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347   00005A                     __pbssCOMRAM:
   348                           	callstack 0
   349   00005A                     _flags:
   350                           	callstack 0
   351   00005A                     	ds	1
   352   00005B                     _manoeuvre_count:
   353                           	callstack 0
   354   00005B                     	ds	1
   355   00005C                     _return_flag:
   356                           	callstack 0
   357   00005C                     	ds	1
   358   00005D                     _returning:
   359                           	callstack 0
   360   00005D                     	ds	1
   361                           
   362                           	psect	dataCOMRAM
   363   000054                     __pdataCOMRAM:
   364                           	callstack 0
   365   000054                     _timer_high_pointer:
   366                           	callstack 0
   367   000054                     	ds	2
   368   000056                     _turningGear:
   369                           	callstack 0
   370   000056                     	ds	1
   371   000057                     _topGearRight:
   372                           	callstack 0
   373   000057                     	ds	1
   374   000058                     _topGearLeft:
   375                           	callstack 0
   376   000058                     	ds	1
   377   000059                     _rampDelay:
   378                           	callstack 0
   379   000059                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382   000060                     __pbssBANK0:
   383                           	callstack 0
   384   000060                     _dbuf:
   385                           	callstack 0
   386   000060                     	ds	32
   387   000080                     _nout:
   388                           	callstack 0
   389   000080                     	ds	2
   390   000082                     _width:
   391                           	callstack 0
   392   000082                     	ds	2
   393   000084                     _prec:
   394                           	callstack 0
   395   000084                     	ds	2
   396                           
   397                           	psect	dataBANK0
   398   0000A6                     __pdataBANK0:
   399                           	callstack 0
   400   0000A6                     _manoeuvre_pointer:
   401                           	callstack 0
   402   0000A6                     	ds	2
   403   0000A8                     _timer_low_pointer:
   404                           	callstack 0
   405   0000A8                     	ds	2
   406   0000AA                     _squareDelay:
   407                           	callstack 0
   408   0000AA                     	ds	2
   409   0000AC                     _headbuttDelay:
   410                           	callstack 0
   411   0000AC                     	ds	2
   412   0000AE                     _turn180Delay:
   413                           	callstack 0
   414   0000AE                     	ds	2
   415   0000B0                     _turnRight135Delay:
   416                           	callstack 0
   417   0000B0                     	ds	2
   418   0000B2                     _turnLeft135Delay:
   419                           	callstack 0
   420   0000B2                     	ds	2
   421   0000B4                     _turnRight90Delay:
   422                           	callstack 0
   423   0000B4                     	ds	2
   424   0000B6                     _turnLeft90Delay:
   425                           	callstack 0
   426   0000B6                     	ds	2
   427   0000B8                     _wall_threshold:
   428                           	callstack 0
   429   0000B8                     	ds	2
   430                           
   431                           	psect	bssBANK1
   432   000100                     __pbssBANK1:
   433                           	callstack 0
   434   000100                     _trail_manoeuvre:
   435                           	callstack 0
   436   000100                     	ds	20
   437   000114                     _trail_timer_low:
   438                           	callstack 0
   439   000114                     	ds	20
   440   000128                     _trail_timer_high:
   441                           	callstack 0
   442   000128                     	ds	20
   443                           
   444                           	psect	cstackBANK0
   445   000086                     __pcstackBANK0:
   446                           	callstack 0
   447   000086                     main@HSV_colour:
   448                           	callstack 0
   449                           
   450                           ; 6 bytes @ 0x0
   451   000086                     	ds	6
   452   00008C                     main@motorL:
   453                           	callstack 0
   454                           
   455                           ; 9 bytes @ 0x6
   456   00008C                     	ds	9
   457   000095                     main@motorR:
   458                           	callstack 0
   459                           
   460                           ; 9 bytes @ 0xF
   461   000095                     	ds	9
   462   00009E                     main@measured_colour:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x18
   466   00009E                     	ds	8
   467                           
   468                           	psect	cstackCOMRAM
   469   000001                     __pcstackCOMRAM:
   470                           	callstack 0
   471   000001                     ??_toggle_tricolour_LED:
   472   000001                     ??_I2C_2_Master_Idle:
   473   000001                     ?_max:
   474                           	callstack 0
   475   000001                     ?_min:
   476                           	callstack 0
   477   000001                     ?___awdiv:
   478                           	callstack 0
   479   000001                     ?___awmod:
   480                           	callstack 0
   481   000001                     ?___lwdiv:
   482                           	callstack 0
   483   000001                     ?___lwmod:
   484                           	callstack 0
   485   000001                     ?___lmul:
   486                           	callstack 0
   487   000001                     ?___lldiv:
   488                           	callstack 0
   489   000001                     ?___xxtofl:
   490                           	callstack 0
   491   000001                     sendCharSerial4@charToSend:
   492                           	callstack 0
   493   000001                     write_timer@tL:
   494                           	callstack 0
   495   000001                     max@a:
   496                           	callstack 0
   497   000001                     min@a:
   498                           	callstack 0
   499   000001                     initDCmotorsPWM@PWMperiod:
   500                           	callstack 0
   501   000001                     ___awdiv@dividend:
   502                           	callstack 0
   503   000001                     ___awmod@dividend:
   504                           	callstack 0
   505   000001                     ___lwdiv@dividend:
   506                           	callstack 0
   507   000001                     ___lwmod@dividend:
   508                           	callstack 0
   509   000001                     fputc@c:
   510                           	callstack 0
   511   000001                     ___lmul@multiplier:
   512                           	callstack 0
   513   000001                     ___lldiv@dividend:
   514                           	callstack 0
   515   000001                     ___xxtofl@val:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x0
   519   000001                     	ds	1
   520   000002                     ??_I2C_2_Master_Read:
   521   000002                     I2C_2_Master_Write@data_byte:
   522                           	callstack 0
   523   000002                     write_timer@tH:
   524                           	callstack 0
   525   000002                     sendStringSerial4@string:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1
   529   000002                     	ds	1
   530   000003                     color_writetoaddr@value:
   531                           	callstack 0
   532   000003                     I2C_2_Master_Read@ack:
   533                           	callstack 0
   534   000003                     fputc@fp:
   535                           	callstack 0
   536   000003                     max@b:
   537                           	callstack 0
   538   000003                     min@b:
   539                           	callstack 0
   540   000003                     ___awdiv@divisor:
   541                           	callstack 0
   542   000003                     ___awmod@divisor:
   543                           	callstack 0
   544   000003                     ___lwdiv@divisor:
   545                           	callstack 0
   546   000003                     ___lwmod@divisor:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x2
   550   000003                     	ds	1
   551   000004                     ??_fputc:
   552   000004                     color_writetoaddr@address:
   553                           	callstack 0
   554   000004                     I2C_2_Master_Read@tmp:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x3
   558   000004                     	ds	1
   559   000005                     ??_color_click_init:
   560   000005                     ??___xxtofl:
   561   000005                     ?_color_read_Red:
   562                           	callstack 0
   563   000005                     ?_color_read_Green:
   564                           	callstack 0
   565   000005                     ?_color_read_Blue:
   566                           	callstack 0
   567   000005                     ?_color_read_Clear:
   568                           	callstack 0
   569   000005                     ___awdiv@counter:
   570                           	callstack 0
   571   000005                     ___awmod@counter:
   572                           	callstack 0
   573   000005                     ___lwmod@counter:
   574                           	callstack 0
   575   000005                     max@max_val:
   576                           	callstack 0
   577   000005                     min@min_val:
   578                           	callstack 0
   579   000005                     ___lwdiv@quotient:
   580                           	callstack 0
   581   000005                     ___lmul@multiplicand:
   582                           	callstack 0
   583   000005                     ___lldiv@divisor:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x4
   587   000005                     	ds	1
   588   000006                     ___awdiv@sign:
   589                           	callstack 0
   590   000006                     ___awmod@sign:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x5
   594   000006                     	ds	1
   595   000007                     ??_color_read_Red:
   596   000007                     ??_color_read_Green:
   597   000007                     ??_color_read_Blue:
   598   000007                     ??_color_read_Clear:
   599   000007                     ?_abs:
   600                           	callstack 0
   601   000007                     ?_maxRGB:
   602                           	callstack 0
   603   000007                     ?_minRGB:
   604                           	callstack 0
   605   000007                     maxRGB@p:
   606                           	callstack 0
   607   000007                     minRGB@p:
   608                           	callstack 0
   609   000007                     ___lwdiv@counter:
   610                           	callstack 0
   611   000007                     ___awdiv@quotient:
   612                           	callstack 0
   613   000007                     abs@a:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x6
   617   000007                     	ds	2
   618   000009                     ??_abs:
   619   000009                     ___xxtofl@sign:
   620                           	callstack 0
   621   000009                     _maxRGB$3164:
   622                           	callstack 0
   623   000009                     _minRGB$3165:
   624                           	callstack 0
   625   000009                     ___lmul@product:
   626                           	callstack 0
   627   000009                     ___lldiv@quotient:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x8
   631   000009                     	ds	1
   632   00000A                     ___xxtofl@exp:
   633                           	callstack 0
   634   00000A                     color_read_Red@tmp:
   635                           	callstack 0
   636   00000A                     color_read_Green@tmp:
   637                           	callstack 0
   638   00000A                     color_read_Blue@tmp:
   639                           	callstack 0
   640   00000A                     color_read_Clear@tmp:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x9
   644   00000A                     	ds	1
   645   00000B                     ?_vfpfcnvrt:
   646                           	callstack 0
   647   00000B                     vfpfcnvrt@fp:
   648                           	callstack 0
   649   00000B                     ___xxtofl@arg:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0xA
   653   00000B                     	ds	1
   654   00000C                     getRGBCval@p:
   655                           	callstack 0
   656   00000C                     vfpfcnvrt@fmt:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0xB
   660   00000C                     	ds	1
   661   00000D                     ___lldiv@counter:
   662                           	callstack 0
   663   00000D                     vfpfcnvrt@ap:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0xC
   667   00000D                     	ds	1
   668   00000E                     ??_vfpfcnvrt:
   669   00000E                     getHSVval@p1:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0xD
   673   00000E                     	ds	1
   674   00000F                     ?___flmul:
   675                           	callstack 0
   676   00000F                     getHSVval@p2:
   677                           	callstack 0
   678   00000F                     ___flmul@b:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0xE
   682   00000F                     	ds	1
   683   000010                     ??_getHSVval:
   684   000010                     vfpfcnvrt@done:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0xF
   688   000010                     	ds	1
   689   000011                     vfpfcnvrt@cnt:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x10
   693   000011                     	ds	2
   694   000013                     vfpfcnvrt@cp:
   695                           	callstack 0
   696   000013                     ___flmul@a:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x12
   700   000013                     	ds	1
   701   000014                     vfpfcnvrt@convarg:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x13
   705   000014                     	ds	3
   706   000017                     ??___flmul:
   707                           
   708                           ; 1 bytes @ 0x16
   709   000017                     	ds	1
   710   000018                     vfpfcnvrt@c:
   711                           	callstack 0
   712   000018                     getHSVval@Sz:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716   000018                     	ds	1
   717   000019                     ?_vfprintf:
   718                           	callstack 0
   719   000019                     vfprintf@fp:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x18
   723   000019                     	ds	1
   724   00001A                     vfprintf@fmt:
   725                           	callstack 0
   726   00001A                     getHSVval@m:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x19
   730   00001A                     	ds	1
   731   00001B                     ___flmul@sign:
   732                           	callstack 0
   733   00001B                     vfprintf@ap:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x1A
   737   00001B                     	ds	1
   738   00001C                     vfprintf@cfmt:
   739                           	callstack 0
   740   00001C                     getHSVval@S:
   741                           	callstack 0
   742   00001C                     ___flmul@grs:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x1B
   746   00001C                     	ds	1
   747   00001D                     ?_sprintf:
   748                           	callstack 0
   749   00001D                     sprintf@s:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1C
   753   00001D                     	ds	1
   754   00001E                     getHSVval@H:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1D
   758   00001E                     	ds	1
   759   00001F                     sprintf@fmt:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x1E
   763   00001F                     	ds	1
   764   000020                     ___flmul@aexp:
   765                           	callstack 0
   766   000020                     getHSVval@temp_631:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x1F
   770   000020                     	ds	1
   771   000021                     ___flmul@bexp:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x20
   775   000021                     	ds	1
   776   000022                     ___flmul@prod:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x21
   780   000022                     	ds	2
   781   000024                     getHSVval@temp:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x23
   785   000024                     	ds	2
   786   000026                     ___flmul@temp:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x25
   790   000026                     	ds	2
   791   000028                     ?___fltol:
   792                           	callstack 0
   793   000028                     sprintf@ret:
   794                           	callstack 0
   795   000028                     getHSVval@temp_627:
   796                           	callstack 0
   797   000028                     ___fltol@f1:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x27
   801   000028                     	ds	2
   802   00002A                     sprintf@ap:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x29
   806   00002A                     	ds	1
   807   00002B                     sprintf@f:
   808                           	callstack 0
   809                           
   810                           ; 12 bytes @ 0x2A
   811   00002B                     	ds	1
   812   00002C                     ??___fltol:
   813   00002C                     getHSVval@temp_628:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x2B
   817   00002C                     	ds	4
   818   000030                     ___fltol@sign1:
   819                           	callstack 0
   820   000030                     getHSVval@temp_629:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x2F
   824   000030                     	ds	1
   825   000031                     ___fltol@exp1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x30
   829   000031                     	ds	1
   830   000032                     scaleRGB@p:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x31
   834   000032                     	ds	1
   835   000033                     ??_scaleRGB:
   836                           
   837                           ; 1 bytes @ 0x32
   838   000033                     	ds	1
   839   000034                     getHSVval@temp_630:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x33
   843   000034                     	ds	3
   844   000037                     sendRGBCvalSerial4@col_val:
   845                           	callstack 0
   846   000037                     sendHSVvalSerial4@col_val:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x36
   850   000037                     	ds	1
   851   000038                     getHSVval@temp_626:
   852                           	callstack 0
   853   000038                     sendHSVvalSerial4@tempStr:
   854                           	callstack 0
   855   000038                     sendRGBCvalSerial4@tempStr:
   856                           	callstack 0
   857                           
   858                           ; 26 bytes @ 0x37
   859   000038                     	ds	4
   860   00003C                     getHSVval@M:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x3B
   864   00003C                     	ds	2
   865   00003E                     getHSVval@C:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x3D
   869   00003E                     	ds	20
   870   000052                     ??_main:
   871                           
   872                           ; 1 bytes @ 0x51
   873   000052                     	ds	2
   874                           
   875 ;;
   876 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   877 ;;
   878 ;; *************** function _main *****************
   879 ;; Defined at:
   880 ;;		line 29 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  motorR          9   15[BANK0 ] struct DC_motor
   885 ;;  motorL          9    6[BANK0 ] struct DC_motor
   886 ;;  measured_col    8   24[BANK0 ] struct RGBC_val
   887 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   888 ;;  PWMcycle        2    0        unsigned int 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   899 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;Total ram usage:       34 bytes
   903 ;; Hardware stack levels required when called: 7
   904 ;; This function calls:
   905 ;;		_Timer0_init
   906 ;;		_buggy_lights_init
   907 ;;		_color_click_init
   908 ;;		_getHSVval
   909 ;;		_getRGBCval
   910 ;;		_initDCmotorsPWM
   911 ;;		_initUSART4
   912 ;;		_scaleRGB
   913 ;;		_sendHSVvalSerial4
   914 ;;		_sendRGBCvalSerial4
   915 ;;		_toggle_tricolour_LED
   916 ;; This function is called by:
   917 ;;		Startup code after reset
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text0
   922   001DDA                     __ptext0:
   923                           	callstack 0
   924   001DDA                     _main:
   925                           	callstack 24
   926   001DDA                     
   927                           ;main.c: 30:     struct RGBC_val measured_colour;;main.c: 31:         measured_colour.R 
      +                          = 0;
   928   001DDA  0E00               	movlw	0
   929   001DDC  0100               	movlb	0	; () banked
   930   001DDE  6F9F               	movwf	(main@measured_colour+1)& (0+255),b
   931   001DE0  0E00               	movlw	0
   932   001DE2  6F9E               	movwf	main@measured_colour& (0+255),b
   933                           
   934                           ;main.c: 32:         measured_colour.G = 0;
   935   001DE4  0E00               	movlw	0
   936   001DE6  6FA1               	movwf	(main@measured_colour+3)& (0+255),b
   937   001DE8  0E00               	movlw	0
   938   001DEA  6FA0               	movwf	(main@measured_colour+2)& (0+255),b
   939                           
   940                           ;main.c: 33:         measured_colour.B = 0;
   941   001DEC  0E00               	movlw	0
   942   001DEE  6FA3               	movwf	(main@measured_colour+5)& (0+255),b
   943   001DF0  0E00               	movlw	0
   944   001DF2  6FA2               	movwf	(main@measured_colour+4)& (0+255),b
   945                           
   946                           ;main.c: 34:         measured_colour.C = 0;
   947   001DF4  0E00               	movlw	0
   948   001DF6  6FA5               	movwf	(main@measured_colour+7)& (0+255),b
   949   001DF8  0E00               	movlw	0
   950   001DFA  6FA4               	movwf	(main@measured_colour+6)& (0+255),b
   951                           
   952                           ;main.c: 36:     struct HSV_val HSV_colour;;main.c: 37:         HSV_colour.H = 0;
   953   001DFC  0E00               	movlw	0
   954   001DFE  6F87               	movwf	(main@HSV_colour+1)& (0+255),b
   955   001E00  0E00               	movlw	0
   956   001E02  6F86               	movwf	main@HSV_colour& (0+255),b
   957                           
   958                           ;main.c: 38:         HSV_colour.S = 0;
   959   001E04  0E00               	movlw	0
   960   001E06  6F89               	movwf	(main@HSV_colour+3)& (0+255),b
   961   001E08  0E00               	movlw	0
   962   001E0A  6F88               	movwf	(main@HSV_colour+2)& (0+255),b
   963                           
   964                           ;main.c: 39:         HSV_colour.V = 0;
   965   001E0C  0E00               	movlw	0
   966   001E0E  6F8B               	movwf	(main@HSV_colour+5)& (0+255),b
   967   001E10  0E00               	movlw	0
   968   001E12  6F8A               	movwf	(main@HSV_colour+4)& (0+255),b
   969                           
   970                           ;main.c: 43:     struct DC_motor motorL, motorR;;main.c: 44:         motorL.power = 0;
   971   001E14  0E00               	movlw	0
   972   001E16  6F8C               	movwf	main@motorL& (0+255),b
   973                           
   974                           ;main.c: 45:         motorL.direction = 1;
   975   001E18  0E01               	movlw	1
   976   001E1A  6F8D               	movwf	(main@motorL+1)& (0+255),b
   977                           
   978                           ;main.c: 46:         motorL.brakemode = 1;
   979   001E1C  0E01               	movlw	1
   980   001E1E  6F8E               	movwf	(main@motorL+2)& (0+255),b
   981   001E20                     
   982                           ; BSR set to: 0
   983                           ;main.c: 47:         motorL.PWMperiod = PWMcycle;
   984   001E20  0E00               	movlw	0
   985   001E22  6F90               	movwf	(main@motorL+4)& (0+255),b
   986   001E24  0E63               	movlw	99
   987   001E26  6F8F               	movwf	(main@motorL+3)& (0+255),b
   988   001E28                     
   989                           ; BSR set to: 0
   990                           ;main.c: 48:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   991   001E28  0EAA               	movlw	170
   992   001E2A  6F91               	movwf	(main@motorL+5)& (0+255),b
   993   001E2C  0E0F               	movlw	15
   994   001E2E  6F92               	movwf	(main@motorL+6)& (0+255),b
   995   001E30                     
   996                           ; BSR set to: 0
   997                           ;main.c: 49:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   998   001E30  0EA6               	movlw	166
   999   001E32  6F93               	movwf	(main@motorL+7)& (0+255),b
  1000   001E34  0E0F               	movlw	15
  1001   001E36  6F94               	movwf	(main@motorL+8)& (0+255),b
  1002                           
  1003                           ;main.c: 50:         motorR.power = 0;
  1004   001E38  0E00               	movlw	0
  1005   001E3A  6F95               	movwf	main@motorR& (0+255),b
  1006                           
  1007                           ;main.c: 51:         motorR.direction = 1;
  1008   001E3C  0E01               	movlw	1
  1009   001E3E  6F96               	movwf	(main@motorR+1)& (0+255),b
  1010                           
  1011                           ;main.c: 52:         motorR.brakemode = 1;
  1012   001E40  0E01               	movlw	1
  1013   001E42  6F97               	movwf	(main@motorR+2)& (0+255),b
  1014   001E44                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 53:         motorR.PWMperiod = PWMcycle;
  1017   001E44  0E00               	movlw	0
  1018   001E46  6F99               	movwf	(main@motorR+4)& (0+255),b
  1019   001E48  0E63               	movlw	99
  1020   001E4A  6F98               	movwf	(main@motorR+3)& (0+255),b
  1021   001E4C                     
  1022                           ; BSR set to: 0
  1023                           ;main.c: 54:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1024   001E4C  0E25               	movlw	37
  1025   001E4E  6F9A               	movwf	(main@motorR+5)& (0+255),b
  1026   001E50  0E0F               	movlw	15
  1027   001E52  6F9B               	movwf	(main@motorR+6)& (0+255),b
  1028   001E54                     
  1029                           ; BSR set to: 0
  1030                           ;main.c: 55:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1031   001E54  0E21               	movlw	33
  1032   001E56  6F9C               	movwf	(main@motorR+7)& (0+255),b
  1033   001E58  0E0F               	movlw	15
  1034   001E5A  6F9D               	movwf	(main@motorR+8)& (0+255),b
  1035   001E5C                     
  1036                           ; BSR set to: 0
  1037                           ;main.c: 57:     initDCmotorsPWM(PWMcycle);
  1038   001E5C  0E00               	movlw	0
  1039   001E5E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1040   001E60  0E63               	movlw	99
  1041   001E62  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1042   001E64  EC3A  F012         	call	_initDCmotorsPWM	;wreg free
  1043                           
  1044                           ;main.c: 58:     buggy_lights_init();
  1045   001E68  ECD3  F015         	call	_buggy_lights_init	;wreg free
  1046   001E6C                     
  1047                           ;main.c: 59:     color_click_init();
  1048   001E6C  EC89  F015         	call	_color_click_init	;wreg free
  1049   001E70                     
  1050                           ;main.c: 60:     initUSART4();
  1051   001E70  EC35  F016         	call	_initUSART4	;wreg free
  1052   001E74                     
  1053                           ;main.c: 61:     Timer0_init();
  1054   001E74  EC13  F016         	call	_Timer0_init	;wreg free
  1055   001E78                     
  1056                           ;main.c: 65:         TRISDbits.TRISD7 = 0;
  1057   001E78  9E84               	bcf	132,7,c	;volatile
  1058   001E7A                     
  1059                           ;main.c: 66:         TRISHbits.TRISH3 = 0;
  1060   001E7A  9688               	bcf	136,3,c	;volatile
  1061   001E7C                     
  1062                           ;main.c: 68:         LATDbits.LATD7 = 0;
  1063   001E7C  9E7C               	bcf	124,7,c	;volatile
  1064   001E7E                     
  1065                           ;main.c: 69:         LATHbits.LATH3 = 0;
  1066   001E7E  9680               	bcf	128,3,c	;volatile
  1067   001E80                     
  1068                           ;main.c: 73:         TRISFbits.TRISF2 = 1;
  1069   001E80  8486               	bsf	134,2,c	;volatile
  1070   001E82                     
  1071                           ;main.c: 74:         TRISFbits.TRISF3 = 1;
  1072   001E82  8686               	bsf	134,3,c	;volatile
  1073   001E84                     
  1074                           ;main.c: 76:         ANSELFbits.ANSELF2 = 0;
  1075   001E84  010E               	movlb	14	; () banked
  1076   001E86  95B4               	bcf	180,2,b	;volatile
  1077   001E88                     
  1078                           ; BSR set to: 14
  1079                           ;main.c: 77:         ANSELFbits.ANSELF3 = 0;
  1080   001E88  97B4               	bcf	180,3,b	;volatile
  1081                           
  1082                           ;main.c: 83:     LATHbits.LATH3 = !LATHbits.LATH3;
  1083   001E8A  A680               	btfss	128,3,c	;volatile
  1084   001E8C  EF4A  F00F         	goto	u2911
  1085   001E90  EF4E  F00F         	goto	u2910
  1086   001E94                     u2911:
  1087   001E94  6A52               	clrf	??_main^0,c
  1088   001E96  2A52               	incf	??_main^0,f,c
  1089   001E98  EF4F  F00F         	goto	u2928
  1090   001E9C                     u2910:
  1091   001E9C  6A52               	clrf	??_main^0,c
  1092   001E9E                     u2928:
  1093   001E9E  4652               	rlncf	??_main^0,f,c
  1094   001EA0  4652               	rlncf	??_main^0,f,c
  1095   001EA2  4652               	rlncf	??_main^0,f,c
  1096   001EA4  5080               	movf	128,w,c	;volatile
  1097   001EA6  1852               	xorwf	??_main^0,w,c
  1098   001EA8  0BF7               	andlw	-9
  1099   001EAA  1852               	xorwf	??_main^0,w,c
  1100   001EAC  6E80               	movwf	128,c	;volatile
  1101   001EAE                     
  1102                           ;main.c: 84:     toggle_tricolour_LED();
  1103   001EAE  EC6D  F010         	call	_toggle_tricolour_LED	;wreg free
  1104   001EB2                     l3942:
  1105                           
  1106                           ;main.c: 89:     {;main.c: 91:         getRGBCval(&measured_colour);
  1107   001EB2  0E9E               	movlw	low main@measured_colour
  1108   001EB4  6E0C               	movwf	getRGBCval@p^0,c
  1109   001EB6  ECE3  F013         	call	_getRGBCval	;wreg free
  1110   001EBA                     
  1111                           ;main.c: 92:         scaleRGB(&measured_colour);
  1112   001EBA  0E9E               	movlw	low main@measured_colour
  1113   001EBC  6E32               	movwf	scaleRGB@p^0,c
  1114   001EBE  EC02  F010         	call	_scaleRGB	;wreg free
  1115   001EC2                     
  1116                           ;main.c: 96:         getHSVval(&HSV_colour, &measured_colour);
  1117   001EC2  0E86               	movlw	low main@HSV_colour
  1118   001EC4  6E0E               	movwf	getHSVval@p1^0,c
  1119   001EC6  0E9E               	movlw	low main@measured_colour
  1120   001EC8  6E0F               	movwf	getHSVval@p2^0,c
  1121   001ECA  EC12  F007         	call	_getHSVval	;wreg free
  1122   001ECE                     
  1123                           ;main.c: 97:         sendRGBCvalSerial4(&measured_colour);
  1124   001ECE  0E9E               	movlw	low main@measured_colour
  1125   001ED0  6E37               	movwf	sendRGBCvalSerial4@col_val^0,c
  1126   001ED2  EC89  F013         	call	_sendRGBCvalSerial4	;wreg free
  1127   001ED6                     
  1128                           ;main.c: 98:         sendHSVvalSerial4(&HSV_colour);
  1129   001ED6  0E86               	movlw	low main@HSV_colour
  1130   001ED8  6E37               	movwf	sendHSVvalSerial4@col_val^0,c
  1131   001EDA  EC02  F015         	call	_sendHSVvalSerial4	;wreg free
  1132   001EDE                     
  1133                           ;main.c: 100:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1134   001EDE  0E52               	movlw	82
  1135   001EE0  6E53               	movwf	(??_main+1)^0,c
  1136   001EE2  0E2B               	movlw	43
  1137   001EE4  6E52               	movwf	??_main^0,c
  1138   001EE6  0E00               	movlw	0
  1139   001EE8                     u3007:
  1140   001EE8  2EE8               	decfsz	wreg,f,c
  1141   001EEA  D7FE               	bra	u3007
  1142   001EEC  2E52               	decfsz	??_main^0,f,c
  1143   001EEE  D7FC               	bra	u3007
  1144   001EF0  2E53               	decfsz	(??_main+1)^0,f,c
  1145   001EF2  D7FA               	bra	u3007
  1146   001EF4  D000               	nop2	
  1147   001EF6  EF59  F00F         	goto	l3942
  1148   001EFA  EF1A  F000         	goto	start
  1149   001EFE                     __end_of_main:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _toggle_tricolour_LED *****************
  1153 ;; Defined at:
  1154 ;;		line 86 in file "buggy_lights.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text1
  1183   0020DA                     __ptext1:
  1184                           	callstack 0
  1185   0020DA                     _toggle_tricolour_LED:
  1186                           	callstack 29
  1187   0020DA                     
  1188                           ;buggy_lights.c: 91:             LATGbits.LATG1 = !LATGbits.LATG1;
  1189   0020DA  A27F               	btfss	127,1,c	;volatile
  1190   0020DC  EF72  F010         	goto	u2611
  1191   0020E0  EF76  F010         	goto	u2610
  1192   0020E4                     u2611:
  1193   0020E4  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1194   0020E6  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1195   0020E8  EF77  F010         	goto	u2628
  1196   0020EC                     u2610:
  1197   0020EC  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1198   0020EE                     u2628:
  1199   0020EE  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1200   0020F0  507F               	movf	127,w,c	;volatile
  1201   0020F2  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1202   0020F4  0BFD               	andlw	-3
  1203   0020F6  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1204   0020F8  6E7F               	movwf	127,c	;volatile
  1205                           
  1206                           ;buggy_lights.c: 92:             LATAbits.LATA4 = !LATAbits.LATA4;
  1207   0020FA  A879               	btfss	121,4,c	;volatile
  1208   0020FC  EF82  F010         	goto	u2631
  1209   002100  EF86  F010         	goto	u2630
  1210   002104                     u2631:
  1211   002104  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1212   002106  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1213   002108  EF87  F010         	goto	u2648
  1214   00210C                     u2630:
  1215   00210C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1216   00210E                     u2648:
  1217   00210E  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1218   002110  5079               	movf	121,w,c	;volatile
  1219   002112  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1220   002114  0BEF               	andlw	-17
  1221   002116  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1222   002118  6E79               	movwf	121,c	;volatile
  1223                           
  1224                           ;buggy_lights.c: 93:             LATFbits.LATF7 = !LATFbits.LATF7;
  1225   00211A  AE7E               	btfss	126,7,c	;volatile
  1226   00211C  EF92  F010         	goto	u2651
  1227   002120  EF96  F010         	goto	u2650
  1228   002124                     u2651:
  1229   002124  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1230   002126  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1231   002128  EF97  F010         	goto	u2668
  1232   00212C                     u2650:
  1233   00212C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1234   00212E                     u2668:
  1235   00212E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1236   002130  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1237   002132  507E               	movf	126,w,c	;volatile
  1238   002134  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1239   002136  0B7F               	andlw	-129
  1240   002138  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1241   00213A  6E7E               	movwf	126,c	;volatile
  1242                           
  1243                           ;buggy_lights.c: 97:             LATGbits.LATG0 = !LATGbits.LATG0;
  1244   00213C  A07F               	btfss	127,0,c	;volatile
  1245   00213E  EFA3  F010         	goto	u2671
  1246   002142  EFA7  F010         	goto	u2670
  1247   002146                     u2671:
  1248   002146  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1249   002148  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1250   00214A  EFA8  F010         	goto	u2688
  1251   00214E                     u2670:
  1252   00214E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1253   002150                     u2688:
  1254   002150  507F               	movf	127,w,c	;volatile
  1255   002152  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1256   002154  0BFE               	andlw	-2
  1257   002156  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1258   002158  6E7F               	movwf	127,c	;volatile
  1259                           
  1260                           ;buggy_lights.c: 98:             LATEbits.LATE7 = !LATEbits.LATE7;
  1261   00215A  AE7D               	btfss	125,7,c	;volatile
  1262   00215C  EFB2  F010         	goto	u2691
  1263   002160  EFB6  F010         	goto	u2690
  1264   002164                     u2691:
  1265   002164  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1266   002166  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1267   002168  EFB7  F010         	goto	u2708
  1268   00216C                     u2690:
  1269   00216C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1270   00216E                     u2708:
  1271   00216E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1272   002170  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1273   002172  507D               	movf	125,w,c	;volatile
  1274   002174  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1275   002176  0B7F               	andlw	-129
  1276   002178  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1277   00217A  6E7D               	movwf	125,c	;volatile
  1278                           
  1279                           ;buggy_lights.c: 99:             LATAbits.LATA3 = !LATAbits.LATA3;
  1280   00217C  A679               	btfss	121,3,c	;volatile
  1281   00217E  EFC3  F010         	goto	u2711
  1282   002182  EFC7  F010         	goto	u2710
  1283   002186                     u2711:
  1284   002186  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1285   002188  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1286   00218A  EFC8  F010         	goto	u2728
  1287   00218E                     u2710:
  1288   00218E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1289   002190                     u2728:
  1290   002190  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1291   002192  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1292   002194  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1293   002196  5079               	movf	121,w,c	;volatile
  1294   002198  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1295   00219A  0BF7               	andlw	-9
  1296   00219C  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1297   00219E  6E79               	movwf	121,c	;volatile
  1298   0021A0  0012               	return		;funcret
  1299   0021A2                     __end_of_toggle_tricolour_LED:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _sendRGBCvalSerial4 *****************
  1303 ;; Defined at:
  1304 ;;		line 62 in file "serial.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  col_val         1   54[COMRAM] PTR struct RGBC_val
  1307 ;;		 -> main@measured_colour(8), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  tempStr        26   55[COMRAM] unsigned char [26]
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;Total ram usage:       27 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 6
  1326 ;; This function calls:
  1327 ;;		_sendStringSerial4
  1328 ;;		_sprintf
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text2
  1335   002712                     __ptext2:
  1336                           	callstack 0
  1337   002712                     _sendRGBCvalSerial4:
  1338                           	callstack 24
  1339   002712                     
  1340                           ;serial.c: 63:     char tempStr[26];;serial.c: 65:     sprintf(tempStr, "%u %u %u %u ", 
      +                          col_val->R, col_val->G, col_val->B, col_val->C);
  1341   002712  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1342   002714  6E1D               	movwf	sprintf@s^0,c
  1343   002716  6A1E               	clrf	(sprintf@s+1)^0,c
  1344   002718  0E01               	movlw	low STR_5
  1345   00271A  6E1F               	movwf	sprintf@fmt^0,c
  1346   00271C  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1347   00271E  6ED9               	movwf	fsr2l,c
  1348   002720  6ADA               	clrf	fsr2h,c
  1349   002722  CFDE F020          	movff	postinc2,?_sprintf+3
  1350   002726  CFDD F021          	movff	postdec2,?_sprintf+4
  1351   00272A  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1352   00272C  6ED9               	movwf	fsr2l,c
  1353   00272E  6ADA               	clrf	fsr2h,c
  1354   002730  0E02               	movlw	2
  1355   002732  26D9               	addwf	fsr2l,f,c
  1356   002734  CFDE F022          	movff	postinc2,?_sprintf+5
  1357   002738  CFDD F023          	movff	postdec2,?_sprintf+6
  1358   00273C  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1359   00273E  6ED9               	movwf	fsr2l,c
  1360   002740  6ADA               	clrf	fsr2h,c
  1361   002742  0E04               	movlw	4
  1362   002744  26D9               	addwf	fsr2l,f,c
  1363   002746  CFDE F024          	movff	postinc2,?_sprintf+7
  1364   00274A  CFDD F025          	movff	postdec2,?_sprintf+8
  1365   00274E  5037               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1366   002750  6ED9               	movwf	fsr2l,c
  1367   002752  6ADA               	clrf	fsr2h,c
  1368   002754  0E06               	movlw	6
  1369   002756  26D9               	addwf	fsr2l,f,c
  1370   002758  CFDE F026          	movff	postinc2,?_sprintf+9
  1371   00275C  CFDD F027          	movff	postdec2,?_sprintf+10
  1372   002760  EC28  F015         	call	_sprintf	;wreg free
  1373   002764                     
  1374                           ;serial.c: 66:     sendStringSerial4(tempStr);
  1375   002764  0E38               	movlw	low sendRGBCvalSerial4@tempStr
  1376   002766  6E02               	movwf	sendStringSerial4@string^0,c
  1377   002768  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1378   00276A  EC58  F013         	call	_sendStringSerial4	;wreg free
  1379   00276E  0012               	return		;funcret
  1380   002770                     __end_of_sendRGBCvalSerial4:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _sendHSVvalSerial4 *****************
  1384 ;; Defined at:
  1385 ;;		line 70 in file "serial.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  col_val         1   54[COMRAM] PTR struct HSV_val
  1388 ;;		 -> main@HSV_colour(6), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  tempStr        21   55[COMRAM] unsigned char [21]
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;Total ram usage:       22 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 6
  1407 ;; This function calls:
  1408 ;;		_sendStringSerial4
  1409 ;;		_sprintf
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text3
  1416   002A04                     __ptext3:
  1417                           	callstack 0
  1418   002A04                     _sendHSVvalSerial4:
  1419                           	callstack 24
  1420   002A04                     
  1421                           ;serial.c: 71:     char tempStr[21];;serial.c: 73:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  1422   002A04  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1423   002A06  6E1D               	movwf	sprintf@s^0,c
  1424   002A08  6A1E               	clrf	(sprintf@s+1)^0,c
  1425   002A0A  0E0E               	movlw	low STR_6
  1426   002A0C  6E1F               	movwf	sprintf@fmt^0,c
  1427   002A0E  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1428   002A10  6ED9               	movwf	fsr2l,c
  1429   002A12  6ADA               	clrf	fsr2h,c
  1430   002A14  CFDE F020          	movff	postinc2,?_sprintf+3
  1431   002A18  CFDD F021          	movff	postdec2,?_sprintf+4
  1432   002A1C  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1433   002A1E  6ED9               	movwf	fsr2l,c
  1434   002A20  6ADA               	clrf	fsr2h,c
  1435   002A22  0E02               	movlw	2
  1436   002A24  26D9               	addwf	fsr2l,f,c
  1437   002A26  CFDE F022          	movff	postinc2,?_sprintf+5
  1438   002A2A  CFDD F023          	movff	postdec2,?_sprintf+6
  1439   002A2E  5037               	movf	sendHSVvalSerial4@col_val^0,w,c
  1440   002A30  6ED9               	movwf	fsr2l,c
  1441   002A32  6ADA               	clrf	fsr2h,c
  1442   002A34  0E04               	movlw	4
  1443   002A36  26D9               	addwf	fsr2l,f,c
  1444   002A38  CFDE F024          	movff	postinc2,?_sprintf+7
  1445   002A3C  CFDD F025          	movff	postdec2,?_sprintf+8
  1446   002A40  EC28  F015         	call	_sprintf	;wreg free
  1447   002A44                     
  1448                           ;serial.c: 74:     sendStringSerial4(tempStr);
  1449   002A44  0E38               	movlw	low sendHSVvalSerial4@tempStr
  1450   002A46  6E02               	movwf	sendStringSerial4@string^0,c
  1451   002A48  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1452   002A4A  EC58  F013         	call	_sendStringSerial4	;wreg free
  1453   002A4E  0012               	return		;funcret
  1454   002A50                     __end_of_sendHSVvalSerial4:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _sprintf *****************
  1458 ;; Defined at:
  1459 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  s               2   28[COMRAM] PTR unsigned char 
  1462 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  1463 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1464 ;;		 -> STR_6(11), STR_5(13), STR_3(4), STR_1(5), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  f              12   42[COMRAM] struct _IO_FILE
  1467 ;;  ret             2   39[COMRAM] int 
  1468 ;;  ap              1   41[COMRAM] PTR void [1]
  1469 ;;		 -> ?_sprintf(2), 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2   28[COMRAM] int 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1479 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1482 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1483 ;;Total ram usage:       26 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 5
  1486 ;; This function calls:
  1487 ;;		_vfprintf
  1488 ;; This function is called by:
  1489 ;;		_sendRGBCvalSerial4
  1490 ;;		_sendHSVvalSerial4
  1491 ;;		_sendIntSerial4
  1492 ;;		_sendArrayCharSerial4
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text4
  1497   002A50                     __ptext4:
  1498                           	callstack 0
  1499   002A50                     _sprintf:
  1500                           	callstack 24
  1501   002A50  0E20               	movlw	low (?_sprintf+3)
  1502   002A52  6E2A               	movwf	sprintf@ap^0,c
  1503   002A54  C01D  F02B         	movff	sprintf@s,sprintf@f
  1504   002A58  C01E  F02C         	movff	sprintf@s+1,sprintf@f+1
  1505   002A5C  0E00               	movlw	0
  1506   002A5E  6E2F               	movwf	(sprintf@f+4)^0,c
  1507   002A60  0E00               	movlw	0
  1508   002A62  6E2E               	movwf	(sprintf@f+3)^0,c
  1509   002A64  0E00               	movlw	0
  1510   002A66  6E36               	movwf	(sprintf@f+11)^0,c
  1511   002A68  0E00               	movlw	0
  1512   002A6A  6E35               	movwf	(sprintf@f+10)^0,c
  1513   002A6C  0E2B               	movlw	low sprintf@f
  1514   002A6E  6E19               	movwf	vfprintf@fp^0,c
  1515   002A70  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  1516   002A74  0E2A               	movlw	low sprintf@ap
  1517   002A76  6E1B               	movwf	vfprintf@ap^0,c
  1518   002A78  ECB8  F013         	call	_vfprintf	;wreg free
  1519   002A7C  C019  F028         	movff	?_vfprintf,sprintf@ret
  1520   002A80  C01A  F029         	movff	?_vfprintf+1,sprintf@ret+1
  1521   002A84  502E               	movf	(sprintf@f+3)^0,w,c
  1522   002A86  241D               	addwf	sprintf@s^0,w,c
  1523   002A88  6ED9               	movwf	fsr2l,c
  1524   002A8A  502F               	movf	(sprintf@f+4)^0,w,c
  1525   002A8C  201E               	addwfc	(sprintf@s+1)^0,w,c
  1526   002A8E  6EDA               	movwf	fsr2h,c
  1527   002A90  6ADF               	clrf	indf2,c
  1528   002A92  C028  F01D         	movff	sprintf@ret,?_sprintf
  1529   002A96  C029  F01E         	movff	sprintf@ret+1,?_sprintf+1
  1530   002A9A  0012               	return		;funcret
  1531   002A9C                     __end_of_sprintf:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _vfprintf *****************
  1535 ;; Defined at:
  1536 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1539 ;;		 -> sprintf@f(12), 
  1540 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1541 ;;		 -> STR_6(11), STR_5(13), STR_3(4), STR_1(5), 
  1542 ;;  ap              1   26[COMRAM] PTR PTR void 
  1543 ;;		 -> sprintf@ap(1), 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  1546 ;;		 -> STR_6(11), STR_5(13), STR_3(4), STR_1(5), 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2   24[COMRAM] int 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;Total ram usage:        4 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 4
  1563 ;; This function calls:
  1564 ;;		_vfpfcnvrt
  1565 ;; This function is called by:
  1566 ;;		_sprintf
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text5
  1571   002770                     __ptext5:
  1572                           	callstack 0
  1573   002770                     _vfprintf:
  1574                           	callstack 24
  1575   002770                     
  1576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1577   002770  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  1578   002774                     
  1579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1580   002774  0E00               	movlw	0
  1581   002776  0100               	movlb	0	; () banked
  1582   002778  6F81               	movwf	(_nout+1)& (0+255),b
  1583   00277A  0E00               	movlw	0
  1584   00277C  6F80               	movwf	_nout& (0+255),b
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1587   00277E  EFCE  F013         	goto	l3190
  1588   002782                     l3188:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1592   002782  C019  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1593   002786  0E1C               	movlw	low vfprintf@cfmt
  1594   002788  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1595   00278A  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1596   00278E  EC8D  F00C         	call	_vfpfcnvrt	;wreg free
  1597   002792  500B               	movf	?_vfpfcnvrt^0,w,c
  1598   002794  0100               	movlb	0	; () banked
  1599   002796  2780               	addwf	_nout& (0+255),f,b
  1600   002798  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1601   00279A  2381               	addwfc	(_nout+1)& (0+255),f,b
  1602   00279C                     l3190:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1606   00279C  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1607   0027A0                     	if	1	;There is more than 1 active tblptr byte
  1608   0027A0  0E0E               	movlw	high __smallconst
  1609   0027A2  6EF7               	movwf	tblptrh,c
  1610   0027A4                     	endif
  1611   0027A4                     	if	0	;tblptru may be non-zero
  1612   0027A4                     	endif
  1613   0027A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1614   0027A4  0E00               	movlw	low (__smallconst shr (0+16))
  1615   0027A6  6EF8               	movwf	tblptru,c
  1616   0027A8                     	endif
  1617   0027A8  0008               	tblrd		*
  1618   0027AA  50F5               	movf	tablat,w,c
  1619   0027AC  0900               	iorlw	0
  1620   0027AE  A4D8               	btfss	status,2,c
  1621   0027B0  EFDC  F013         	goto	u2161
  1622   0027B4  EFDE  F013         	goto	u2160
  1623   0027B8                     u2161:
  1624   0027B8  EFC1  F013         	goto	l3188
  1625   0027BC                     u2160:
  1626   0027BC                     
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1629   0027BC  C080  F019         	movff	_nout,?_vfprintf
  1630   0027C0  C081  F01A         	movff	_nout+1,?_vfprintf+1
  1631   0027C4                     
  1632                           ; BSR set to: 0
  1633   0027C4  0012               	return		;funcret
  1634   0027C6                     __end_of_vfprintf:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _vfpfcnvrt *****************
  1638 ;; Defined at:
  1639 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1642 ;;		 -> sprintf@f(12), 
  1643 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1644 ;;		 -> vfprintf@cfmt(1), 
  1645 ;;  ap              1   12[COMRAM] PTR PTR void 
  1646 ;;		 -> sprintf@ap(1), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  convarg         4   19[COMRAM] struct .
  1649 ;;  cnt             2   16[COMRAM] int 
  1650 ;;  c               1   23[COMRAM] unsigned char 
  1651 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1652 ;;		 -> STR_6(11), STR_5(13), STR_3(4), STR_1(5), 
  1653 ;;  done            1   15[COMRAM] _Bool 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2   10[COMRAM] int 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1663 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1664 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;Total ram usage:       14 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 3
  1670 ;; This function calls:
  1671 ;;		___awdiv
  1672 ;;		___awmod
  1673 ;;		___lwdiv
  1674 ;;		___lwmod
  1675 ;;		_abs
  1676 ;;		_fputc
  1677 ;; This function is called by:
  1678 ;;		_vfprintf
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683   00191A                     __ptext6:
  1684                           	callstack 0
  1685   00191A                     _vfpfcnvrt:
  1686                           	callstack 24
  1687   00191A                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1689   00191A  0E00               	movlw	0
  1690   00191C  6E12               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1691   00191E  0E00               	movlw	0
  1692   001920  6E11               	movwf	vfpfcnvrt@cnt^0,c
  1693   001922                     
  1694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1695   001922  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1696   001924  6ED9               	movwf	fsr2l,c
  1697   001926  6ADA               	clrf	fsr2h,c
  1698   001928  CFDF FFF6          	movff	indf2,tblptrl
  1699   00192C                     	if	1	;There is more than 1 active tblptr byte
  1700   00192C  0E0E               	movlw	high __smallconst
  1701   00192E  6EF7               	movwf	tblptrh,c
  1702   001930                     	endif
  1703   001930                     	if	0	;tblptru may be non-zero
  1704   001930                     	endif
  1705   001930                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1706   001930  0E00               	movlw	low (__smallconst shr (0+16))
  1707   001932  6EF8               	movwf	tblptru,c
  1708   001934                     	endif
  1709   001934  0008               	tblrd		*
  1710   001936  50F5               	movf	tablat,w,c
  1711   001938  0A25               	xorlw	37
  1712   00193A  A4D8               	btfss	status,2,c
  1713   00193C  EFA2  F00C         	goto	u1971
  1714   001940  EFA4  F00C         	goto	u1970
  1715   001944                     u1971:
  1716   001944  EFF9  F00D         	goto	l3078
  1717   001948                     u1970:
  1718   001948                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1720   001948  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1721   00194A  6ED9               	movwf	fsr2l,c
  1722   00194C  6ADA               	clrf	fsr2h,c
  1723   00194E  2ADF               	incf	indf2,f,c
  1724   001950                     
  1725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1726   001950  0E00               	movlw	0
  1727   001952  0100               	movlb	0	; () banked
  1728   001954  6F83               	movwf	(_width+1)& (0+255),b
  1729   001956  0E00               	movlw	0
  1730   001958  6F82               	movwf	_width& (0+255),b
  1731   00195A  C082  F05A         	movff	_width,_flags
  1732   00195E                     
  1733                           ; BSR set to: 0
  1734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1735   00195E  6984               	setf	_prec& (0+255),b
  1736   001960  6985               	setf	(_prec+1)& (0+255),b
  1737   001962                     
  1738                           ; BSR set to: 0
  1739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1740   001962  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1741   001964  6ED9               	movwf	fsr2l,c
  1742   001966  6ADA               	clrf	fsr2h,c
  1743   001968  50DF               	movf	indf2,w,c
  1744   00196A  6E13               	movwf	vfpfcnvrt@cp^0,c
  1745   00196C                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1748   00196C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1749   001970                     	if	1	;There is more than 1 active tblptr byte
  1750   001970  0E0E               	movlw	high __smallconst
  1751   001972  6EF7               	movwf	tblptrh,c
  1752   001974                     	endif
  1753   001974                     	if	0	;tblptru may be non-zero
  1754   001974                     	endif
  1755   001974                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1756   001974  0E00               	movlw	low (__smallconst shr (0+16))
  1757   001976  6EF8               	movwf	tblptru,c
  1758   001978                     	endif
  1759   001978  0008               	tblrd		*
  1760   00197A  50F5               	movf	tablat,w,c
  1761   00197C  0A64               	xorlw	100
  1762   00197E  B4D8               	btfsc	status,2,c
  1763   001980  EFC4  F00C         	goto	u1981
  1764   001984  EFC6  F00C         	goto	u1980
  1765   001988                     u1981:
  1766   001988  EFD6  F00C         	goto	l3014
  1767   00198C                     u1980:
  1768   00198C                     
  1769                           ; BSR set to: 0
  1770   00198C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1771   001990                     	if	1	;There is more than 1 active tblptr byte
  1772   001990  0E0E               	movlw	high __smallconst
  1773   001992  6EF7               	movwf	tblptrh,c
  1774   001994                     	endif
  1775   001994                     	if	0	;tblptru may be non-zero
  1776   001994                     	endif
  1777   001994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1778   001994  0E00               	movlw	low (__smallconst shr (0+16))
  1779   001996  6EF8               	movwf	tblptru,c
  1780   001998                     	endif
  1781   001998  0008               	tblrd		*
  1782   00199A  50F5               	movf	tablat,w,c
  1783   00199C  0A69               	xorlw	105
  1784   00199E  A4D8               	btfss	status,2,c
  1785   0019A0  EFD4  F00C         	goto	u1991
  1786   0019A4  EFD6  F00C         	goto	u1990
  1787   0019A8                     u1991:
  1788   0019A8  EF64  F00D         	goto	l3044
  1789   0019AC                     u1990:
  1790   0019AC                     l3014:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1794   0019AC  500D               	movf	vfpfcnvrt@ap^0,w,c
  1795   0019AE  6ED9               	movwf	fsr2l,c
  1796   0019B0  6ADA               	clrf	fsr2h,c
  1797   0019B2  0E02               	movlw	2
  1798   0019B4  26DF               	addwf	indf2,f,c
  1799   0019B6  5CDF               	subwf	indf2,w,c
  1800   0019B8  6ED9               	movwf	fsr2l,c
  1801   0019BA  6ADA               	clrf	fsr2h,c
  1802   0019BC  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1803   0019C0  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1804   0019C4                     
  1805                           ; BSR set to: 0
  1806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1807   0019C4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1808   0019C6  6ED9               	movwf	fsr2l,c
  1809   0019C8  6ADA               	clrf	fsr2h,c
  1810   0019CA  2813               	incf	vfpfcnvrt@cp^0,w,c
  1811   0019CC  6EDF               	movwf	indf2,c
  1812   0019CE                     
  1813                           ; BSR set to: 0
  1814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1815   0019CE  0E20               	movlw	32
  1816   0019D0  6E18               	movwf	vfpfcnvrt@c^0,c
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1819   0019D2  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1820   0019D4  EFEE  F00C         	goto	u2001
  1821   0019D8  EFF1  F00C         	goto	u2000
  1822   0019DC                     u2001:
  1823   0019DC  0E01               	movlw	1
  1824   0019DE  EFF2  F00C         	goto	u2010
  1825   0019E2                     u2000:
  1826   0019E2  0E00               	movlw	0
  1827   0019E4                     u2010:
  1828   0019E4  6E10               	movwf	vfpfcnvrt@done^0,c
  1829   0019E6                     l3020:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1832   0019E6  0618               	decf	vfpfcnvrt@c^0,f,c
  1833   0019E8  5018               	movf	vfpfcnvrt@c^0,w,c
  1834   0019EA  0F60               	addlw	low _dbuf
  1835   0019EC  6ED9               	movwf	fsr2l,c
  1836   0019EE  6ADA               	clrf	fsr2h,c
  1837   0019F0  C014  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1838   0019F4  C015  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1839   0019F8  0E00               	movlw	0
  1840   0019FA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1841   0019FC  0E0A               	movlw	10
  1842   0019FE  6E03               	movwf	___awmod@divisor^0,c
  1843   001A00  EC90  F011         	call	___awmod	;wreg free
  1844   001A04  C001  F007         	movff	?___awmod,abs@a
  1845   001A08  C002  F008         	movff	?___awmod+1,abs@a+1
  1846   001A0C  EC6F  F015         	call	_abs	;wreg free
  1847   001A10  5007               	movf	?_abs^0,w,c
  1848   001A12  0F30               	addlw	48
  1849   001A14  6EDF               	movwf	indf2,c
  1850   001A16                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1852   001A16  C014  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1853   001A1A  C015  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1854   001A1E  0E00               	movlw	0
  1855   001A20  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1856   001A22  0E0A               	movlw	10
  1857   001A24  6E03               	movwf	___awdiv@divisor^0,c
  1858   001A26  ECD1  F010         	call	___awdiv	;wreg free
  1859   001A2A  C001  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  1860   001A2E  C002  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1861   001A32                     
  1862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1863   001A32  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1864   001A34  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1865   001A36                     
  1866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1867   001A36  5014               	movf	vfpfcnvrt@convarg^0,w,c
  1868   001A38  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1869   001A3A  B4D8               	btfsc	status,2,c
  1870   001A3C  EF22  F00D         	goto	u2021
  1871   001A40  EF24  F00D         	goto	u2020
  1872   001A44                     u2021:
  1873   001A44  EF2C  F00D         	goto	l3030
  1874   001A48                     u2020:
  1875   001A48  5018               	movf	vfpfcnvrt@c^0,w,c
  1876   001A4A  A4D8               	btfss	status,2,c
  1877   001A4C  EF2A  F00D         	goto	u2031
  1878   001A50  EF2C  F00D         	goto	u2030
  1879   001A54                     u2031:
  1880   001A54  EFF3  F00C         	goto	l3020
  1881   001A58                     u2030:
  1882   001A58                     l3030:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1885   001A58  5018               	movf	vfpfcnvrt@c^0,w,c
  1886   001A5A  B4D8               	btfsc	status,2,c
  1887   001A5C  EF32  F00D         	goto	u2041
  1888   001A60  EF34  F00D         	goto	u2040
  1889   001A64                     u2041:
  1890   001A64  EF55  F00D         	goto	l3042
  1891   001A68                     u2040:
  1892   001A68  5010               	movf	vfpfcnvrt@done^0,w,c
  1893   001A6A  B4D8               	btfsc	status,2,c
  1894   001A6C  EF3A  F00D         	goto	u2051
  1895   001A70  EF3C  F00D         	goto	u2050
  1896   001A74                     u2051:
  1897   001A74  EF55  F00D         	goto	l3042
  1898   001A78                     u2050:
  1899   001A78                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1901   001A78  0618               	decf	vfpfcnvrt@c^0,f,c
  1902   001A7A  5018               	movf	vfpfcnvrt@c^0,w,c
  1903   001A7C  0F60               	addlw	low _dbuf
  1904   001A7E  6ED9               	movwf	fsr2l,c
  1905   001A80  6ADA               	clrf	fsr2h,c
  1906   001A82  0E2D               	movlw	45
  1907   001A84  6EDF               	movwf	indf2,c
  1908   001A86                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1910   001A86  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  1911   001A88  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1912   001A8A  EF55  F00D         	goto	l3042
  1913   001A8E                     l3038:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1916   001A8E  5018               	movf	vfpfcnvrt@c^0,w,c
  1917   001A90  0F60               	addlw	low _dbuf
  1918   001A92  6ED9               	movwf	fsr2l,c
  1919   001A94  6ADA               	clrf	fsr2h,c
  1920   001A96  50DF               	movf	indf2,w,c
  1921   001A98  6E0E               	movwf	??_vfpfcnvrt^0,c
  1922   001A9A  500E               	movf	??_vfpfcnvrt^0,w,c
  1923   001A9C  6E01               	movwf	fputc@c^0,c
  1924   001A9E  6A02               	clrf	(fputc@c+1)^0,c
  1925   001AA0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1926   001AA4  EC33  F011         	call	_fputc	;wreg free
  1927   001AA8  2A18               	incf	vfpfcnvrt@c^0,f,c
  1928   001AAA                     l3042:
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1931   001AAA  0E20               	movlw	32
  1932   001AAC  1818               	xorwf	vfpfcnvrt@c^0,w,c
  1933   001AAE  A4D8               	btfss	status,2,c
  1934   001AB0  EF5C  F00D         	goto	u2061
  1935   001AB4  EF5E  F00D         	goto	u2060
  1936   001AB8                     u2061:
  1937   001AB8  EF47  F00D         	goto	l3038
  1938   001ABC                     u2060:
  1939   001ABC                     l1422:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1942   001ABC  C011  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1943   001AC0  C012  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1944   001AC4  EF12  F00E         	goto	l1423
  1945   001AC8                     l3044:
  1946                           
  1947                           ; BSR set to: 0
  1948   001AC8  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1949   001ACC                     	if	1	;There is more than 1 active tblptr byte
  1950   001ACC  0E0E               	movlw	high __smallconst
  1951   001ACE  6EF7               	movwf	tblptrh,c
  1952   001AD0                     	endif
  1953   001AD0                     	if	0	;tblptru may be non-zero
  1954   001AD0                     	endif
  1955   001AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1956   001AD0  0E00               	movlw	low (__smallconst shr (0+16))
  1957   001AD2  6EF8               	movwf	tblptru,c
  1958   001AD4                     	endif
  1959   001AD4  0008               	tblrd		*
  1960   001AD6  50F5               	movf	tablat,w,c
  1961   001AD8  0A75               	xorlw	117
  1962   001ADA  A4D8               	btfss	status,2,c
  1963   001ADC  EF72  F00D         	goto	u2071
  1964   001AE0  EF74  F00D         	goto	u2070
  1965   001AE4                     u2071:
  1966   001AE4  EFEF  F00D         	goto	l3072
  1967   001AE8                     u2070:
  1968   001AE8                     
  1969                           ; BSR set to: 0
  1970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1971   001AE8  500D               	movf	vfpfcnvrt@ap^0,w,c
  1972   001AEA  6ED9               	movwf	fsr2l,c
  1973   001AEC  6ADA               	clrf	fsr2h,c
  1974   001AEE  0E02               	movlw	2
  1975   001AF0  26DF               	addwf	indf2,f,c
  1976   001AF2  5CDF               	subwf	indf2,w,c
  1977   001AF4  6ED9               	movwf	fsr2l,c
  1978   001AF6  6ADA               	clrf	fsr2h,c
  1979   001AF8  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  1980   001AFC  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  1981   001B00                     
  1982                           ; BSR set to: 0
  1983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1984   001B00  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1985   001B02  6ED9               	movwf	fsr2l,c
  1986   001B04  6ADA               	clrf	fsr2h,c
  1987   001B06  2813               	incf	vfpfcnvrt@cp^0,w,c
  1988   001B08  6EDF               	movwf	indf2,c
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1991   001B0A  EFD7  F00D         	goto	l3070
  1992   001B0E                     l3050:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1996   001B0E  0E20               	movlw	32
  1997   001B10  6E18               	movwf	vfpfcnvrt@c^0,c
  1998   001B12                     l3052:
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2001   001B12  0618               	decf	vfpfcnvrt@c^0,f,c
  2002   001B14  5018               	movf	vfpfcnvrt@c^0,w,c
  2003   001B16  0F60               	addlw	low _dbuf
  2004   001B18  6ED9               	movwf	fsr2l,c
  2005   001B1A  6ADA               	clrf	fsr2h,c
  2006   001B1C  C014  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2007   001B20  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2008   001B24  0E00               	movlw	0
  2009   001B26  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2010   001B28  0E0A               	movlw	10
  2011   001B2A  6E03               	movwf	___lwmod@divisor^0,c
  2012   001B2C  EC26  F013         	call	___lwmod	;wreg free
  2013   001B30  5001               	movf	?___lwmod^0,w,c
  2014   001B32  0F30               	addlw	48
  2015   001B34  6EDF               	movwf	indf2,c
  2016   001B36                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2018   001B36  C014  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2019   001B3A  C015  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2020   001B3E  0E00               	movlw	0
  2021   001B40  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2022   001B42  0E0A               	movlw	10
  2023   001B44  6E03               	movwf	___lwdiv@divisor^0,c
  2024   001B46  EC82  F012         	call	___lwdiv	;wreg free
  2025   001B4A  C001  F014         	movff	?___lwdiv,vfpfcnvrt@convarg
  2026   001B4E  C002  F015         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2027   001B52                     
  2028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  2029   001B52  4A11               	infsnz	vfpfcnvrt@cnt^0,f,c
  2030   001B54  2A12               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2031   001B56                     
  2032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2033   001B56  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2034   001B58  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2035   001B5A  B4D8               	btfsc	status,2,c
  2036   001B5C  EFB2  F00D         	goto	u2081
  2037   001B60  EFB4  F00D         	goto	u2080
  2038   001B64                     u2081:
  2039   001B64  EFCC  F00D         	goto	l3066
  2040   001B68                     u2080:
  2041   001B68  5018               	movf	vfpfcnvrt@c^0,w,c
  2042   001B6A  A4D8               	btfss	status,2,c
  2043   001B6C  EFBA  F00D         	goto	u2091
  2044   001B70  EFBC  F00D         	goto	u2090
  2045   001B74                     u2091:
  2046   001B74  EF89  F00D         	goto	l3052
  2047   001B78                     u2090:
  2048   001B78  EFCC  F00D         	goto	l3066
  2049   001B7C                     l3062:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2052   001B7C  5018               	movf	vfpfcnvrt@c^0,w,c
  2053   001B7E  0F60               	addlw	low _dbuf
  2054   001B80  6ED9               	movwf	fsr2l,c
  2055   001B82  6ADA               	clrf	fsr2h,c
  2056   001B84  50DF               	movf	indf2,w,c
  2057   001B86  6E0E               	movwf	??_vfpfcnvrt^0,c
  2058   001B88  500E               	movf	??_vfpfcnvrt^0,w,c
  2059   001B8A  6E01               	movwf	fputc@c^0,c
  2060   001B8C  6A02               	clrf	(fputc@c+1)^0,c
  2061   001B8E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2062   001B92  EC33  F011         	call	_fputc	;wreg free
  2063   001B96  2A18               	incf	vfpfcnvrt@c^0,f,c
  2064   001B98                     l3066:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2067   001B98  0E20               	movlw	32
  2068   001B9A  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2069   001B9C  A4D8               	btfss	status,2,c
  2070   001B9E  EFD3  F00D         	goto	u2101
  2071   001BA2  EFD5  F00D         	goto	u2100
  2072   001BA6                     u2101:
  2073   001BA6  EFBE  F00D         	goto	l3062
  2074   001BAA                     u2100:
  2075   001BAA  EF5E  F00D         	goto	l1422
  2076   001BAE                     l3070:
  2077                           
  2078                           ; BSR set to: 0
  2079   001BAE  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2080   001BB2                     	if	1	;There is more than 1 active tblptr byte
  2081   001BB2  0E0E               	movlw	high __smallconst
  2082   001BB4  6EF7               	movwf	tblptrh,c
  2083   001BB6                     	endif
  2084   001BB6                     	if	0	;tblptru may be non-zero
  2085   001BB6                     	endif
  2086   001BB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2087   001BB6  0E00               	movlw	low (__smallconst shr (0+16))
  2088   001BB8  6EF8               	movwf	tblptru,c
  2089   001BBA                     	endif
  2090   001BBA  0008               	tblrd		*
  2091   001BBC  50F5               	movf	tablat,w,c
  2092   001BBE  6E0E               	movwf	??_vfpfcnvrt^0,c
  2093   001BC0  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2094                           
  2095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 1, Range of values is 0 to 0
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte            4     3 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102   001BC2  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2103   001BC4  0A00               	xorlw	0	; case 0
  2104   001BC6  B4D8               	btfsc	status,2,c
  2105   001BC8  EFE8  F00D         	goto	l4140
  2106   001BCC  EFEF  F00D         	goto	l3072
  2107   001BD0                     l4140:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 1, Range of values is 117 to 117
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte            4     3 (average)
  2115                           ;	Chosen strategy is simple_byte
  2116   001BD0  500E               	movf	??_vfpfcnvrt^0,w,c
  2117   001BD2  0A75               	xorlw	117	; case 117
  2118   001BD4  B4D8               	btfsc	status,2,c
  2119   001BD6  EF87  F00D         	goto	l3050
  2120   001BDA  EFEF  F00D         	goto	l3072
  2121   001BDE                     l3072:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2125   001BDE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2126   001BE0  6ED9               	movwf	fsr2l,c
  2127   001BE2  6ADA               	clrf	fsr2h,c
  2128   001BE4  2ADF               	incf	indf2,f,c
  2129   001BE6                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2132   001BE6  0E00               	movlw	0
  2133   001BE8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2134   001BEA  0E00               	movlw	0
  2135   001BEC  6E0B               	movwf	?_vfpfcnvrt^0,c
  2136   001BEE  EF12  F00E         	goto	l1423
  2137   001BF2                     l3078:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2140   001BF2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2141   001BF4  6ED9               	movwf	fsr2l,c
  2142   001BF6  6ADA               	clrf	fsr2h,c
  2143   001BF8  CFDF FFF6          	movff	indf2,tblptrl
  2144   001BFC                     	if	1	;There is more than 1 active tblptr byte
  2145   001BFC  0E0E               	movlw	high __smallconst
  2146   001BFE  6EF7               	movwf	tblptrh,c
  2147   001C00                     	endif
  2148   001C00                     	if	0	;tblptru may be non-zero
  2149   001C00                     	endif
  2150   001C00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2151   001C00  0E00               	movlw	low (__smallconst shr (0+16))
  2152   001C02  6EF8               	movwf	tblptru,c
  2153   001C04                     	endif
  2154   001C04  0008               	tblrd		*
  2155   001C06  50F5               	movf	tablat,w,c
  2156   001C08  6E01               	movwf	fputc@c^0,c
  2157   001C0A  6A02               	clrf	(fputc@c+1)^0,c
  2158   001C0C  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2159   001C10  EC33  F011         	call	_fputc	;wreg free
  2160   001C14                     
  2161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2162   001C14  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2163   001C16  6ED9               	movwf	fsr2l,c
  2164   001C18  6ADA               	clrf	fsr2h,c
  2165   001C1A  2ADF               	incf	indf2,f,c
  2166   001C1C                     
  2167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2168   001C1C  0E00               	movlw	0
  2169   001C1E  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2170   001C20  0E01               	movlw	1
  2171   001C22  6E0B               	movwf	?_vfpfcnvrt^0,c
  2172   001C24                     l1423:
  2173   001C24  0012               	return		;funcret
  2174   001C26                     __end_of_vfpfcnvrt:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _fputc *****************
  2178 ;; Defined at:
  2179 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  c               2    0[COMRAM] int 
  2182 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2183 ;;		 -> sprintf@f(12), 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2    0[COMRAM] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2195 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;Total ram usage:        8 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 2
  2202 ;; This function calls:
  2203 ;;		_putch
  2204 ;; This function is called by:
  2205 ;;		_vfpfcnvrt
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text7
  2210   002266                     __ptext7:
  2211                           	callstack 0
  2212   002266                     _fputc:
  2213                           	callstack 24
  2214   002266  5003               	movf	fputc@fp^0,w,c
  2215   002268  B4D8               	btfsc	status,2,c
  2216   00226A  EF39  F011         	goto	u1741
  2217   00226E  EF3B  F011         	goto	u1740
  2218   002272                     u1741:
  2219   002272  EF43  F011         	goto	l2894
  2220   002276                     u1740:
  2221   002276  5003               	movf	fputc@fp^0,w,c
  2222   002278  A4D8               	btfss	status,2,c
  2223   00227A  EF41  F011         	goto	u1751
  2224   00227E  EF43  F011         	goto	u1750
  2225   002282                     u1751:
  2226   002282  EF48  F011         	goto	l2896
  2227   002286                     u1750:
  2228   002286                     l2894:
  2229   002286  5001               	movf	fputc@c^0,w,c
  2230   002288  EC7E  F016         	call	_putch
  2231   00228C  EF8F  F011         	goto	l1461
  2232   002290                     l2896:
  2233   002290  5003               	movf	fputc@fp^0,w,c
  2234   002292  6ED9               	movwf	fsr2l,c
  2235   002294  6ADA               	clrf	fsr2h,c
  2236   002296  0E0A               	movlw	10
  2237   002298  26D9               	addwf	fsr2l,f,c
  2238   00229A  50DE               	movf	postinc2,w,c
  2239   00229C  10DE               	iorwf	postinc2,w,c
  2240   00229E  B4D8               	btfsc	status,2,c
  2241   0022A0  EF54  F011         	goto	u1761
  2242   0022A4  EF56  F011         	goto	u1760
  2243   0022A8                     u1761:
  2244   0022A8  EF6F  F011         	goto	l2900
  2245   0022AC                     u1760:
  2246   0022AC  5003               	movf	fputc@fp^0,w,c
  2247   0022AE  6ED9               	movwf	fsr2l,c
  2248   0022B0  6ADA               	clrf	fsr2h,c
  2249   0022B2  0E0A               	movlw	10
  2250   0022B4  26D9               	addwf	fsr2l,f,c
  2251   0022B6  5003               	movf	fputc@fp^0,w,c
  2252   0022B8  6EE1               	movwf	fsr1l,c
  2253   0022BA  6AE2               	clrf	fsr1h,c
  2254   0022BC  0E03               	movlw	3
  2255   0022BE  26E1               	addwf	fsr1l,f,c
  2256   0022C0  50DE               	movf	postinc2,w,c
  2257   0022C2  5CE6               	subwf	postinc1,w,c
  2258   0022C4  50E6               	movf	postinc1,w,c
  2259   0022C6  0A80               	xorlw	128
  2260   0022C8  6E08               	movwf	(??_fputc+4)^0,c
  2261   0022CA  50DE               	movf	postinc2,w,c
  2262   0022CC  0A80               	xorlw	128
  2263   0022CE  5808               	subwfb	(??_fputc+4)^0,w,c
  2264   0022D0  B0D8               	btfsc	status,0,c
  2265   0022D2  EF6D  F011         	goto	u1771
  2266   0022D6  EF6F  F011         	goto	u1770
  2267   0022DA                     u1771:
  2268   0022DA  EF8F  F011         	goto	l1461
  2269   0022DE                     u1770:
  2270   0022DE                     l2900:
  2271   0022DE  5003               	movf	fputc@fp^0,w,c
  2272   0022E0  6ED9               	movwf	fsr2l,c
  2273   0022E2  6ADA               	clrf	fsr2h,c
  2274   0022E4  0E03               	movlw	3
  2275   0022E6  26D9               	addwf	fsr2l,f,c
  2276   0022E8  CFDE F004          	movff	postinc2,??_fputc
  2277   0022EC  CFDD F005          	movff	postdec2,??_fputc+1
  2278   0022F0  5003               	movf	fputc@fp^0,w,c
  2279   0022F2  6ED9               	movwf	fsr2l,c
  2280   0022F4  6ADA               	clrf	fsr2h,c
  2281   0022F6  CFDE F006          	movff	postinc2,??_fputc+2
  2282   0022FA  CFDD F007          	movff	postdec2,??_fputc+3
  2283   0022FE  5004               	movf	??_fputc^0,w,c
  2284   002300  2406               	addwf	(??_fputc+2)^0,w,c
  2285   002302  6ED9               	movwf	fsr2l,c
  2286   002304  5005               	movf	(??_fputc+1)^0,w,c
  2287   002306  2007               	addwfc	(??_fputc+3)^0,w,c
  2288   002308  6EDA               	movwf	fsr2h,c
  2289   00230A  C001  FFDF         	movff	fputc@c,indf2
  2290   00230E  5003               	movf	fputc@fp^0,w,c
  2291   002310  6ED9               	movwf	fsr2l,c
  2292   002312  6ADA               	clrf	fsr2h,c
  2293   002314  0E03               	movlw	3
  2294   002316  26D9               	addwf	fsr2l,f,c
  2295   002318  2ADE               	incf	postinc2,f,c
  2296   00231A  0E00               	movlw	0
  2297   00231C  22DD               	addwfc	postdec2,f,c
  2298   00231E                     l1461:
  2299   00231E  0012               	return		;funcret
  2300   002320                     __end_of_fputc:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _putch *****************
  2304 ;; Defined at:
  2305 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  c               1    wreg     unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  c               1    0[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_fputc
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text8
  2334   002CFC                     __ptext8:
  2335                           	callstack 0
  2336   002CFC                     _putch:
  2337                           	callstack 24
  2338   002CFC  0012               	return		;funcret
  2339   002CFE                     __end_of_putch:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _abs *****************
  2343 ;; Defined at:
  2344 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  a               2    6[COMRAM] int 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2    6[COMRAM] int 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;Total ram usage:        4 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_vfpfcnvrt
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text9
  2373   002ADE                     __ptext9:
  2374                           	callstack 0
  2375   002ADE                     _abs:
  2376                           	callstack 25
  2377   002ADE  BE08               	btfsc	(abs@a+1)^0,7,c
  2378   002AE0  EF74  F015         	goto	u1781
  2379   002AE4  EF76  F015         	goto	u1780
  2380   002AE8                     u1781:
  2381   002AE8  EF7C  F015         	goto	l1446
  2382   002AEC                     u1780:
  2383   002AEC  C007  F007         	movff	abs@a,?_abs
  2384   002AF0  C008  F008         	movff	abs@a+1,?_abs+1
  2385   002AF4  EF88  F015         	goto	l1449
  2386   002AF8                     l1446:
  2387   002AF8  C007  F009         	movff	abs@a,??_abs
  2388   002AFC  C008  F00A         	movff	abs@a+1,??_abs+1
  2389   002B00  1E09               	comf	??_abs^0,f,c
  2390   002B02  1E0A               	comf	(??_abs+1)^0,f,c
  2391   002B04  4A09               	infsnz	??_abs^0,f,c
  2392   002B06  2A0A               	incf	(??_abs+1)^0,f,c
  2393   002B08  C009  F007         	movff	??_abs,?_abs
  2394   002B0C  C00A  F008         	movff	??_abs+1,?_abs+1
  2395   002B10                     l1449:
  2396   002B10  0012               	return		;funcret
  2397   002B12                     __end_of_abs:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function ___lwmod *****************
  2401 ;; Defined at:
  2402 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  dividend        2    0[COMRAM] unsigned int 
  2405 ;;  divisor         2    2[COMRAM] unsigned int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  counter         1    4[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  2    0[COMRAM] unsigned int 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;Total ram usage:        5 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_vfpfcnvrt
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text10
  2432   00264C                     __ptext10:
  2433                           	callstack 0
  2434   00264C                     ___lwmod:
  2435                           	callstack 25
  2436   00264C  5003               	movf	___lwmod@divisor^0,w,c
  2437   00264E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2438   002650  B4D8               	btfsc	status,2,c
  2439   002652  EF2D  F013         	goto	u1711
  2440   002656  EF2F  F013         	goto	u1710
  2441   00265A                     u1711:
  2442   00265A  EF53  F013         	goto	l1204
  2443   00265E                     u1710:
  2444   00265E  0E01               	movlw	1
  2445   002660  6E05               	movwf	___lwmod@counter^0,c
  2446   002662  EF37  F013         	goto	l2880
  2447   002666                     l2878:
  2448   002666  90D8               	bcf	status,0,c
  2449   002668  3603               	rlcf	___lwmod@divisor^0,f,c
  2450   00266A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2451   00266C  2A05               	incf	___lwmod@counter^0,f,c
  2452   00266E                     l2880:
  2453   00266E  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2454   002670  EF3C  F013         	goto	u1721
  2455   002674  EF3E  F013         	goto	u1720
  2456   002678                     u1721:
  2457   002678  EF33  F013         	goto	l2878
  2458   00267C                     u1720:
  2459   00267C                     l2882:
  2460   00267C  5003               	movf	___lwmod@divisor^0,w,c
  2461   00267E  5C01               	subwf	___lwmod@dividend^0,w,c
  2462   002680  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2463   002682  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2464   002684  A0D8               	btfss	status,0,c
  2465   002686  EF47  F013         	goto	u1731
  2466   00268A  EF49  F013         	goto	u1730
  2467   00268E                     u1731:
  2468   00268E  EF4D  F013         	goto	l2886
  2469   002692                     u1730:
  2470   002692  5003               	movf	___lwmod@divisor^0,w,c
  2471   002694  5E01               	subwf	___lwmod@dividend^0,f,c
  2472   002696  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2473   002698  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2474   00269A                     l2886:
  2475   00269A  90D8               	bcf	status,0,c
  2476   00269C  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2477   00269E  3203               	rrcf	___lwmod@divisor^0,f,c
  2478   0026A0  2E05               	decfsz	___lwmod@counter^0,f,c
  2479   0026A2  EF3E  F013         	goto	l2882
  2480   0026A6                     l1204:
  2481   0026A6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2482   0026AA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2483   0026AE  0012               	return		;funcret
  2484   0026B0                     __end_of___lwmod:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function ___lwdiv *****************
  2488 ;; Defined at:
  2489 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  dividend        2    0[COMRAM] unsigned int 
  2492 ;;  divisor         2    2[COMRAM] unsigned int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  quotient        2    4[COMRAM] unsigned int 
  2495 ;;  counter         1    6[COMRAM] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2    0[COMRAM] unsigned int 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_vfpfcnvrt
  2516 ;;		_setMotorPWM
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text11
  2521   002504                     __ptext11:
  2522                           	callstack 0
  2523   002504                     ___lwdiv:
  2524                           	callstack 25
  2525   002504  0E00               	movlw	0
  2526   002506  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2527   002508  0E00               	movlw	0
  2528   00250A  6E05               	movwf	___lwdiv@quotient^0,c
  2529   00250C  5003               	movf	___lwdiv@divisor^0,w,c
  2530   00250E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2531   002510  B4D8               	btfsc	status,2,c
  2532   002512  EF8D  F012         	goto	u1681
  2533   002516  EF8F  F012         	goto	u1680
  2534   00251A                     u1681:
  2535   00251A  EFB7  F012         	goto	l1194
  2536   00251E                     u1680:
  2537   00251E  0E01               	movlw	1
  2538   002520  6E07               	movwf	___lwdiv@counter^0,c
  2539   002522  EF97  F012         	goto	l2860
  2540   002526                     l2858:
  2541   002526  90D8               	bcf	status,0,c
  2542   002528  3603               	rlcf	___lwdiv@divisor^0,f,c
  2543   00252A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2544   00252C  2A07               	incf	___lwdiv@counter^0,f,c
  2545   00252E                     l2860:
  2546   00252E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2547   002530  EF9C  F012         	goto	u1691
  2548   002534  EF9E  F012         	goto	u1690
  2549   002538                     u1691:
  2550   002538  EF93  F012         	goto	l2858
  2551   00253C                     u1690:
  2552   00253C                     l2862:
  2553   00253C  90D8               	bcf	status,0,c
  2554   00253E  3605               	rlcf	___lwdiv@quotient^0,f,c
  2555   002540  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2556   002542  5003               	movf	___lwdiv@divisor^0,w,c
  2557   002544  5C01               	subwf	___lwdiv@dividend^0,w,c
  2558   002546  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2559   002548  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2560   00254A  A0D8               	btfss	status,0,c
  2561   00254C  EFAA  F012         	goto	u1701
  2562   002550  EFAC  F012         	goto	u1700
  2563   002554                     u1701:
  2564   002554  EFB1  F012         	goto	l2870
  2565   002558                     u1700:
  2566   002558  5003               	movf	___lwdiv@divisor^0,w,c
  2567   00255A  5E01               	subwf	___lwdiv@dividend^0,f,c
  2568   00255C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2569   00255E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2570   002560  8005               	bsf	___lwdiv@quotient^0,0,c
  2571   002562                     l2870:
  2572   002562  90D8               	bcf	status,0,c
  2573   002564  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2574   002566  3203               	rrcf	___lwdiv@divisor^0,f,c
  2575   002568  2E07               	decfsz	___lwdiv@counter^0,f,c
  2576   00256A  EF9E  F012         	goto	l2862
  2577   00256E                     l1194:
  2578   00256E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2579   002572  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2580   002576  0012               	return		;funcret
  2581   002578                     __end_of___lwdiv:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function ___awmod *****************
  2585 ;; Defined at:
  2586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dividend        2    0[COMRAM] int 
  2589 ;;  divisor         2    2[COMRAM] int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  sign            1    5[COMRAM] unsigned char 
  2592 ;;  counter         1    4[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2    0[COMRAM] int 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;Total ram usage:        6 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_vfpfcnvrt
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text12
  2617   002320                     __ptext12:
  2618                           	callstack 0
  2619   002320                     ___awmod:
  2620                           	callstack 25
  2621   002320  0E00               	movlw	0
  2622   002322  6E06               	movwf	___awmod@sign^0,c
  2623   002324  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2624   002326  EF99  F011         	goto	u1620
  2625   00232A  EF97  F011         	goto	u1621
  2626   00232E                     u1621:
  2627   00232E  EF9F  F011         	goto	l2824
  2628   002332                     u1620:
  2629   002332  6C01               	negf	___awmod@dividend^0,c
  2630   002334  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2631   002336  B0D8               	btfsc	status,0,c
  2632   002338  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2633   00233A  0E01               	movlw	1
  2634   00233C  6E06               	movwf	___awmod@sign^0,c
  2635   00233E                     l2824:
  2636   00233E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2637   002340  EFA6  F011         	goto	u1630
  2638   002344  EFA4  F011         	goto	u1631
  2639   002348                     u1631:
  2640   002348  EFAA  F011         	goto	l2828
  2641   00234C                     u1630:
  2642   00234C  6C03               	negf	___awmod@divisor^0,c
  2643   00234E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2644   002350  B0D8               	btfsc	status,0,c
  2645   002352  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2646   002354                     l2828:
  2647   002354  5003               	movf	___awmod@divisor^0,w,c
  2648   002356  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2649   002358  B4D8               	btfsc	status,2,c
  2650   00235A  EFB1  F011         	goto	u1641
  2651   00235E  EFB3  F011         	goto	u1640
  2652   002362                     u1641:
  2653   002362  EFD7  F011         	goto	l2844
  2654   002366                     u1640:
  2655   002366  0E01               	movlw	1
  2656   002368  6E05               	movwf	___awmod@counter^0,c
  2657   00236A  EFBB  F011         	goto	l2834
  2658   00236E                     l2832:
  2659   00236E  90D8               	bcf	status,0,c
  2660   002370  3603               	rlcf	___awmod@divisor^0,f,c
  2661   002372  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2662   002374  2A05               	incf	___awmod@counter^0,f,c
  2663   002376                     l2834:
  2664   002376  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2665   002378  EFC0  F011         	goto	u1651
  2666   00237C  EFC2  F011         	goto	u1650
  2667   002380                     u1651:
  2668   002380  EFB7  F011         	goto	l2832
  2669   002384                     u1650:
  2670   002384                     l2836:
  2671   002384  5003               	movf	___awmod@divisor^0,w,c
  2672   002386  5C01               	subwf	___awmod@dividend^0,w,c
  2673   002388  5004               	movf	(___awmod@divisor+1)^0,w,c
  2674   00238A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2675   00238C  A0D8               	btfss	status,0,c
  2676   00238E  EFCB  F011         	goto	u1661
  2677   002392  EFCD  F011         	goto	u1660
  2678   002396                     u1661:
  2679   002396  EFD1  F011         	goto	l2840
  2680   00239A                     u1660:
  2681   00239A  5003               	movf	___awmod@divisor^0,w,c
  2682   00239C  5E01               	subwf	___awmod@dividend^0,f,c
  2683   00239E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2684   0023A0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2685   0023A2                     l2840:
  2686   0023A2  90D8               	bcf	status,0,c
  2687   0023A4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2688   0023A6  3203               	rrcf	___awmod@divisor^0,f,c
  2689   0023A8  2E05               	decfsz	___awmod@counter^0,f,c
  2690   0023AA  EFC2  F011         	goto	l2836
  2691   0023AE                     l2844:
  2692   0023AE  5006               	movf	___awmod@sign^0,w,c
  2693   0023B0  B4D8               	btfsc	status,2,c
  2694   0023B2  EFDD  F011         	goto	u1671
  2695   0023B6  EFDF  F011         	goto	u1670
  2696   0023BA                     u1671:
  2697   0023BA  EFE3  F011         	goto	l2848
  2698   0023BE                     u1670:
  2699   0023BE  6C01               	negf	___awmod@dividend^0,c
  2700   0023C0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2701   0023C2  B0D8               	btfsc	status,0,c
  2702   0023C4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2703   0023C6                     l2848:
  2704   0023C6  C001  F001         	movff	___awmod@dividend,?___awmod
  2705   0023CA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2706   0023CE  0012               	return		;funcret
  2707   0023D0                     __end_of___awmod:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function ___awdiv *****************
  2711 ;; Defined at:
  2712 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  dividend        2    0[COMRAM] int 
  2715 ;;  divisor         2    2[COMRAM] int 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  quotient        2    6[COMRAM] int 
  2718 ;;  sign            1    5[COMRAM] unsigned char 
  2719 ;;  counter         1    4[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2    0[COMRAM] int 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;Total ram usage:        8 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_vfpfcnvrt
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text13
  2744   0021A2                     __ptext13:
  2745                           	callstack 0
  2746   0021A2                     ___awdiv:
  2747                           	callstack 25
  2748   0021A2  0E00               	movlw	0
  2749   0021A4  6E06               	movwf	___awdiv@sign^0,c
  2750   0021A6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2751   0021A8  EFDA  F010         	goto	u1560
  2752   0021AC  EFD8  F010         	goto	u1561
  2753   0021B0                     u1561:
  2754   0021B0  EFE0  F010         	goto	l2780
  2755   0021B4                     u1560:
  2756   0021B4  6C03               	negf	___awdiv@divisor^0,c
  2757   0021B6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2758   0021B8  B0D8               	btfsc	status,0,c
  2759   0021BA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2760   0021BC  0E01               	movlw	1
  2761   0021BE  6E06               	movwf	___awdiv@sign^0,c
  2762   0021C0                     l2780:
  2763   0021C0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2764   0021C2  EFE7  F010         	goto	u1570
  2765   0021C6  EFE5  F010         	goto	u1571
  2766   0021CA                     u1571:
  2767   0021CA  EFED  F010         	goto	l2786
  2768   0021CE                     u1570:
  2769   0021CE  6C01               	negf	___awdiv@dividend^0,c
  2770   0021D0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2771   0021D2  B0D8               	btfsc	status,0,c
  2772   0021D4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2773   0021D6  0E01               	movlw	1
  2774   0021D8  1A06               	xorwf	___awdiv@sign^0,f,c
  2775   0021DA                     l2786:
  2776   0021DA  0E00               	movlw	0
  2777   0021DC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2778   0021DE  0E00               	movlw	0
  2779   0021E0  6E07               	movwf	___awdiv@quotient^0,c
  2780   0021E2  5003               	movf	___awdiv@divisor^0,w,c
  2781   0021E4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2782   0021E6  B4D8               	btfsc	status,2,c
  2783   0021E8  EFF8  F010         	goto	u1581
  2784   0021EC  EFFA  F010         	goto	u1580
  2785   0021F0                     u1581:
  2786   0021F0  EF22  F011         	goto	l2808
  2787   0021F4                     u1580:
  2788   0021F4  0E01               	movlw	1
  2789   0021F6  6E05               	movwf	___awdiv@counter^0,c
  2790   0021F8  EF02  F011         	goto	l2794
  2791   0021FC                     l2792:
  2792   0021FC  90D8               	bcf	status,0,c
  2793   0021FE  3603               	rlcf	___awdiv@divisor^0,f,c
  2794   002200  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2795   002202  2A05               	incf	___awdiv@counter^0,f,c
  2796   002204                     l2794:
  2797   002204  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2798   002206  EF07  F011         	goto	u1591
  2799   00220A  EF09  F011         	goto	u1590
  2800   00220E                     u1591:
  2801   00220E  EFFE  F010         	goto	l2792
  2802   002212                     u1590:
  2803   002212                     l2796:
  2804   002212  90D8               	bcf	status,0,c
  2805   002214  3607               	rlcf	___awdiv@quotient^0,f,c
  2806   002216  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2807   002218  5003               	movf	___awdiv@divisor^0,w,c
  2808   00221A  5C01               	subwf	___awdiv@dividend^0,w,c
  2809   00221C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2810   00221E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2811   002220  A0D8               	btfss	status,0,c
  2812   002222  EF15  F011         	goto	u1601
  2813   002226  EF17  F011         	goto	u1600
  2814   00222A                     u1601:
  2815   00222A  EF1C  F011         	goto	l2804
  2816   00222E                     u1600:
  2817   00222E  5003               	movf	___awdiv@divisor^0,w,c
  2818   002230  5E01               	subwf	___awdiv@dividend^0,f,c
  2819   002232  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2820   002234  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2821   002236  8007               	bsf	___awdiv@quotient^0,0,c
  2822   002238                     l2804:
  2823   002238  90D8               	bcf	status,0,c
  2824   00223A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2825   00223C  3203               	rrcf	___awdiv@divisor^0,f,c
  2826   00223E  2E05               	decfsz	___awdiv@counter^0,f,c
  2827   002240  EF09  F011         	goto	l2796
  2828   002244                     l2808:
  2829   002244  5006               	movf	___awdiv@sign^0,w,c
  2830   002246  B4D8               	btfsc	status,2,c
  2831   002248  EF28  F011         	goto	u1611
  2832   00224C  EF2A  F011         	goto	u1610
  2833   002250                     u1611:
  2834   002250  EF2E  F011         	goto	l2812
  2835   002254                     u1610:
  2836   002254  6C07               	negf	___awdiv@quotient^0,c
  2837   002256  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2838   002258  B0D8               	btfsc	status,0,c
  2839   00225A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2840   00225C                     l2812:
  2841   00225C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2842   002260  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2843   002264  0012               	return		;funcret
  2844   002266                     __end_of___awdiv:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _sendStringSerial4 *****************
  2848 ;; Defined at:
  2849 ;;		line 35 in file "serial.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  string          2    1[COMRAM] PTR unsigned char 
  2852 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  2853 ;;		 -> sendIntSerial4@string(17), 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;Total ram usage:        2 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 2
  2872 ;; This function calls:
  2873 ;;		_sendCharSerial4
  2874 ;; This function is called by:
  2875 ;;		_sendRGBCvalSerial4
  2876 ;;		_sendHSVvalSerial4
  2877 ;;		_sendIntSerial4
  2878 ;;		_sendArrayCharSerial4
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text14
  2883   0026B0                     __ptext14:
  2884                           	callstack 0
  2885   0026B0                     _sendStringSerial4:
  2886                           	callstack 27
  2887   0026B0                     
  2888                           ;serial.c: 37:     while(*string != 0){
  2889   0026B0  EF6F  F013         	goto	l3244
  2890   0026B4                     l3240:
  2891                           
  2892                           ;serial.c: 38:   sendCharSerial4(*string++);
  2893   0026B4  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2894   0026B8  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2895   0026BC  0E00               	movlw	low (__smallconst shr (0+16))
  2896   0026BE  6EF8               	movwf	tblptru,c
  2897   0026C0  0E0D               	movlw	(high __ramtop+-1)
  2898   0026C2  64F7               	cpfsgt	tblptrh,c
  2899   0026C4  D003               	bra	u2177
  2900   0026C6  0008               	tblrd		*
  2901   0026C8  50F5               	movf	tablat,w,c
  2902   0026CA  D005               	bra	u2170
  2903   0026CC                     u2177:
  2904   0026CC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2905   0026D0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2906   0026D4  50EF               	movf	indf0,w,c
  2907   0026D6                     u2170:
  2908   0026D6  EC44  F016         	call	_sendCharSerial4
  2909   0026DA  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2910   0026DC  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2911   0026DE                     l3244:
  2912                           
  2913                           ;serial.c: 37:     while(*string != 0){
  2914   0026DE  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2915   0026E2  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2916   0026E6  0E00               	movlw	low (__smallconst shr (0+16))
  2917   0026E8  6EF8               	movwf	tblptru,c
  2918   0026EA  0E0D               	movlw	(high __ramtop+-1)
  2919   0026EC  64F7               	cpfsgt	tblptrh,c
  2920   0026EE  D003               	bra	u2187
  2921   0026F0  0008               	tblrd		*
  2922   0026F2  50F5               	movf	tablat,w,c
  2923   0026F4  D005               	bra	u2180
  2924   0026F6                     u2187:
  2925   0026F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2926   0026FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2927   0026FE  50EF               	movf	indf0,w,c
  2928   002700                     u2180:
  2929   002700  0900               	iorlw	0
  2930   002702  A4D8               	btfss	status,2,c
  2931   002704  EF86  F013         	goto	u2191
  2932   002708  EF88  F013         	goto	u2190
  2933   00270C                     u2191:
  2934   00270C  EF5A  F013         	goto	l3240
  2935   002710                     u2190:
  2936   002710  0012               	return		;funcret
  2937   002712                     __end_of_sendStringSerial4:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _sendCharSerial4 *****************
  2941 ;; Defined at:
  2942 ;;		line 29 in file "serial.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  charToSend      1    wreg     unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  charToSend      1    0[COMRAM] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;Total ram usage:        1 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_sendStringSerial4
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text15
  2971   002C88                     __ptext15:
  2972                           	callstack 0
  2973   002C88                     _sendCharSerial4:
  2974                           	callstack 27
  2975                           
  2976                           ;incstack = 0
  2977                           ;sendCharSerial4@charToSend stored from wreg
  2978   002C88  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2979   002C8A                     l442:
  2980   002C8A  010E               	movlb	14	; () banked
  2981   002C8C  A537               	btfss	55,2,b	;volatile
  2982   002C8E  EF4B  F016         	goto	u2151
  2983   002C92  EF4D  F016         	goto	u2150
  2984   002C96                     u2151:
  2985   002C96  EF45  F016         	goto	l442
  2986   002C9A                     u2150:
  2987   002C9A                     
  2988                           ; BSR set to: 14
  2989                           ;serial.c: 31:     TX4REG = charToSend;
  2990   002C9A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2991   002C9E                     
  2992                           ; BSR set to: 14
  2993   002C9E  0012               	return		;funcret
  2994   002CA0                     __end_of_sendCharSerial4:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _scaleRGB *****************
  2998 ;; Defined at:
  2999 ;;		line 128 in file "color.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  3002 ;;		 -> main@measured_colour(8), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3014 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;Total ram usage:        3 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 2
  3021 ;; This function calls:
  3022 ;;		___flmul
  3023 ;;		___fltol
  3024 ;;		___xxtofl
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text16
  3031   002004                     __ptext16:
  3032                           	callstack 0
  3033   002004                     _scaleRGB:
  3034                           	callstack 28
  3035   002004                     
  3036                           ;color.c: 128: void scaleRGB(struct RGBC_val *p);color.c: 129: {;color.c: 130:     p->R 
      +                          *= 0.5;
  3037   002004  0E00               	movlw	0
  3038   002006  6E13               	movwf	___flmul@a^0,c
  3039   002008  0E00               	movlw	0
  3040   00200A  6E14               	movwf	(___flmul@a+1)^0,c
  3041   00200C  0E00               	movlw	0
  3042   00200E  6E15               	movwf	(___flmul@a+2)^0,c
  3043   002010  0E3F               	movlw	63
  3044   002012  6E16               	movwf	(___flmul@a+3)^0,c
  3045   002014  5032               	movf	scaleRGB@p^0,w,c
  3046   002016  6ED9               	movwf	fsr2l,c
  3047   002018  6ADA               	clrf	fsr2h,c
  3048   00201A  CFDE F033          	movff	postinc2,??_scaleRGB
  3049   00201E  CFDD F034          	movff	postdec2,??_scaleRGB+1
  3050   002022  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  3051   002026  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  3052   00202A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3053   00202C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3054   00202E  0E00               	movlw	0
  3055   002030  EC13  F00E         	call	___xxtofl
  3056   002034  C001  F00F         	movff	?___xxtofl,___flmul@b
  3057   002038  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3058   00203C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3059   002040  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3060   002044  EC78  F00A         	call	___flmul	;wreg free
  3061   002048  C00F  F028         	movff	?___flmul,___fltol@f1
  3062   00204C  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3063   002050  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3064   002054  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3065   002058  EC7F  F00F         	call	___fltol	;wreg free
  3066   00205C  5032               	movf	scaleRGB@p^0,w,c
  3067   00205E  6ED9               	movwf	fsr2l,c
  3068   002060  6ADA               	clrf	fsr2h,c
  3069   002062  C028  FFDE         	movff	?___fltol,postinc2
  3070   002066  C029  FFDD         	movff	?___fltol+1,postdec2
  3071                           
  3072                           ;color.c: 131:     p->G *= 0.7;
  3073   00206A  0E33               	movlw	51
  3074   00206C  6E13               	movwf	___flmul@a^0,c
  3075   00206E  0E33               	movlw	51
  3076   002070  6E14               	movwf	(___flmul@a+1)^0,c
  3077   002072  0E33               	movlw	51
  3078   002074  6E15               	movwf	(___flmul@a+2)^0,c
  3079   002076  0E3F               	movlw	63
  3080   002078  6E16               	movwf	(___flmul@a+3)^0,c
  3081   00207A  5032               	movf	scaleRGB@p^0,w,c
  3082   00207C  6ED9               	movwf	fsr2l,c
  3083   00207E  6ADA               	clrf	fsr2h,c
  3084   002080  0E02               	movlw	2
  3085   002082  26D9               	addwf	fsr2l,f,c
  3086   002084  CFDE F033          	movff	postinc2,??_scaleRGB
  3087   002088  CFDD F034          	movff	postdec2,??_scaleRGB+1
  3088   00208C  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  3089   002090  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  3090   002094  6A03               	clrf	(___xxtofl@val+2)^0,c
  3091   002096  6A04               	clrf	(___xxtofl@val+3)^0,c
  3092   002098  0E00               	movlw	0
  3093   00209A  EC13  F00E         	call	___xxtofl
  3094   00209E  C001  F00F         	movff	?___xxtofl,___flmul@b
  3095   0020A2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3096   0020A6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3097   0020AA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3098   0020AE  EC78  F00A         	call	___flmul	;wreg free
  3099   0020B2  C00F  F028         	movff	?___flmul,___fltol@f1
  3100   0020B6  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3101   0020BA  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3102   0020BE  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3103   0020C2  EC7F  F00F         	call	___fltol	;wreg free
  3104   0020C6  5032               	movf	scaleRGB@p^0,w,c
  3105   0020C8  6ED9               	movwf	fsr2l,c
  3106   0020CA  6ADA               	clrf	fsr2h,c
  3107   0020CC  0E02               	movlw	2
  3108   0020CE  26D9               	addwf	fsr2l,f,c
  3109   0020D0  C028  FFDE         	movff	?___fltol,postinc2
  3110   0020D4  C029  FFDD         	movff	?___fltol+1,postdec2
  3111   0020D8  0012               	return		;funcret
  3112   0020DA                     __end_of_scaleRGB:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function ___xxtofl *****************
  3116 ;; Defined at:
  3117 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  sign            1    wreg     unsigned char 
  3120 ;;  val             4    0[COMRAM] long 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  sign            1    8[COMRAM] unsigned char 
  3123 ;;  arg             4   10[COMRAM] unsigned long 
  3124 ;;  exp             1    9[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  4    0[COMRAM] unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;Total ram usage:       14 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_scaleRGB
  3145 ;;		_stop
  3146 ;;		_turnLeft
  3147 ;;		_turnRight
  3148 ;;		_fullSpeedAhead
  3149 ;;		_fullSpeedReverse
  3150 ;;		_turnLeft90
  3151 ;;		_turnRight90
  3152 ;;		_turnLeft135
  3153 ;;		_turnRight135
  3154 ;;		_UTurn
  3155 ;;		_headbuttReverse
  3156 ;;		_squareReverse
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text17
  3161   001C26                     __ptext17:
  3162                           	callstack 0
  3163   001C26                     ___xxtofl:
  3164                           	callstack 28
  3165                           
  3166                           ;incstack = 0
  3167                           ;___xxtofl@sign stored from wreg
  3168   001C26  6E09               	movwf	___xxtofl@sign^0,c
  3169   001C28  5009               	movf	___xxtofl@sign^0,w,c
  3170   001C2A  B4D8               	btfsc	status,2,c
  3171   001C2C  EF1A  F00E         	goto	u2511
  3172   001C30  EF1C  F00E         	goto	u2510
  3173   001C34                     u2511:
  3174   001C34  EF3E  F00E         	goto	l1358
  3175   001C38                     u2510:
  3176   001C38  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3177   001C3A  EF23  F00E         	goto	u2520
  3178   001C3E  EF21  F00E         	goto	u2521
  3179   001C42                     u2521:
  3180   001C42  EF3E  F00E         	goto	l1358
  3181   001C46                     u2520:
  3182   001C46  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3183   001C4A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3184   001C4E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3185   001C52  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3186   001C56  1E05               	comf	??___xxtofl^0,f,c
  3187   001C58  1E06               	comf	(??___xxtofl+1)^0,f,c
  3188   001C5A  1E07               	comf	(??___xxtofl+2)^0,f,c
  3189   001C5C  1E08               	comf	(??___xxtofl+3)^0,f,c
  3190   001C5E  2A05               	incf	??___xxtofl^0,f,c
  3191   001C60  0E00               	movlw	0
  3192   001C62  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3193   001C64  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3194   001C66  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3195   001C68  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3196   001C6C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3197   001C70  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3198   001C74  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3199   001C78  EF46  F00E         	goto	l3574
  3200   001C7C                     l1358:
  3201   001C7C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3202   001C80  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3203   001C84  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3204   001C88  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3205   001C8C                     l3574:
  3206   001C8C  5001               	movf	___xxtofl@val^0,w,c
  3207   001C8E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3208   001C90  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3209   001C92  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3210   001C94  A4D8               	btfss	status,2,c
  3211   001C96  EF4F  F00E         	goto	u2531
  3212   001C9A  EF51  F00E         	goto	u2530
  3213   001C9E                     u2531:
  3214   001C9E  EF5B  F00E         	goto	l3580
  3215   001CA2                     u2530:
  3216   001CA2  0E00               	movlw	0
  3217   001CA4  6E01               	movwf	?___xxtofl^0,c
  3218   001CA6  0E00               	movlw	0
  3219   001CA8  6E02               	movwf	(?___xxtofl+1)^0,c
  3220   001CAA  0E00               	movlw	0
  3221   001CAC  6E03               	movwf	(?___xxtofl+2)^0,c
  3222   001CAE  0E00               	movlw	0
  3223   001CB0  6E04               	movwf	(?___xxtofl+3)^0,c
  3224   001CB2  EFEC  F00E         	goto	l1361
  3225   001CB6                     l3580:
  3226   001CB6  0E96               	movlw	150
  3227   001CB8  6E0A               	movwf	___xxtofl@exp^0,c
  3228   001CBA  EF65  F00E         	goto	l3584
  3229   001CBE                     l3582:
  3230   001CBE  2A0A               	incf	___xxtofl@exp^0,f,c
  3231   001CC0  90D8               	bcf	status,0,c
  3232   001CC2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3233   001CC4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3234   001CC6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3235   001CC8  320B               	rrcf	___xxtofl@arg^0,f,c
  3236   001CCA                     l3584:
  3237   001CCA  0E00               	movlw	0
  3238   001CCC  140B               	andwf	___xxtofl@arg^0,w,c
  3239   001CCE  6E05               	movwf	??___xxtofl^0,c
  3240   001CD0  0E00               	movlw	0
  3241   001CD2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3242   001CD4  6E06               	movwf	(??___xxtofl+1)^0,c
  3243   001CD6  0E00               	movlw	0
  3244   001CD8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3245   001CDA  6E07               	movwf	(??___xxtofl+2)^0,c
  3246   001CDC  0EFE               	movlw	254
  3247   001CDE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3248   001CE0  6E08               	movwf	(??___xxtofl+3)^0,c
  3249   001CE2  5005               	movf	??___xxtofl^0,w,c
  3250   001CE4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3251   001CE6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3252   001CE8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3253   001CEA  A4D8               	btfss	status,2,c
  3254   001CEC  EF7A  F00E         	goto	u2541
  3255   001CF0  EF7C  F00E         	goto	u2540
  3256   001CF4                     u2541:
  3257   001CF4  EF5F  F00E         	goto	l3582
  3258   001CF8                     u2540:
  3259   001CF8  EF8A  F00E         	goto	l1365
  3260   001CFC                     l3586:
  3261   001CFC  2A0A               	incf	___xxtofl@exp^0,f,c
  3262   001CFE  0E01               	movlw	1
  3263   001D00  260B               	addwf	___xxtofl@arg^0,f,c
  3264   001D02  0E00               	movlw	0
  3265   001D04  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3266   001D06  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3267   001D08  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3268   001D0A  90D8               	bcf	status,0,c
  3269   001D0C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3270   001D0E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3271   001D10  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3272   001D12  320B               	rrcf	___xxtofl@arg^0,f,c
  3273   001D14                     l1365:
  3274   001D14  0E00               	movlw	0
  3275   001D16  140B               	andwf	___xxtofl@arg^0,w,c
  3276   001D18  6E05               	movwf	??___xxtofl^0,c
  3277   001D1A  0E00               	movlw	0
  3278   001D1C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3279   001D1E  6E06               	movwf	(??___xxtofl+1)^0,c
  3280   001D20  0E00               	movlw	0
  3281   001D22  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3282   001D24  6E07               	movwf	(??___xxtofl+2)^0,c
  3283   001D26  0EFF               	movlw	255
  3284   001D28  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3285   001D2A  6E08               	movwf	(??___xxtofl+3)^0,c
  3286   001D2C  5005               	movf	??___xxtofl^0,w,c
  3287   001D2E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3288   001D30  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3289   001D32  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3290   001D34  A4D8               	btfss	status,2,c
  3291   001D36  EF9F  F00E         	goto	u2551
  3292   001D3A  EFA1  F00E         	goto	u2550
  3293   001D3E                     u2551:
  3294   001D3E  EF7E  F00E         	goto	l3586
  3295   001D42                     u2550:
  3296   001D42  EFA9  F00E         	goto	l3594
  3297   001D46                     l3592:
  3298   001D46  060A               	decf	___xxtofl@exp^0,f,c
  3299   001D48  90D8               	bcf	status,0,c
  3300   001D4A  360B               	rlcf	___xxtofl@arg^0,f,c
  3301   001D4C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3302   001D4E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3303   001D50  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3304   001D52                     l3594:
  3305   001D52  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3306   001D54  EFAE  F00E         	goto	u2561
  3307   001D58  EFB0  F00E         	goto	u2560
  3308   001D5C                     u2561:
  3309   001D5C  EFB8  F00E         	goto	l1372
  3310   001D60                     u2560:
  3311   001D60  0E02               	movlw	2
  3312   001D62  600A               	cpfslt	___xxtofl@exp^0,c
  3313   001D64  EFB6  F00E         	goto	u2571
  3314   001D68  EFB8  F00E         	goto	u2570
  3315   001D6C                     u2571:
  3316   001D6C  EFA3  F00E         	goto	l3592
  3317   001D70                     u2570:
  3318   001D70                     l1372:
  3319   001D70  B00A               	btfsc	___xxtofl@exp^0,0,c
  3320   001D72  EFBD  F00E         	goto	u2581
  3321   001D76  EFBF  F00E         	goto	u2580
  3322   001D7A                     u2581:
  3323   001D7A  EFC0  F00E         	goto	l3600
  3324   001D7E                     u2580:
  3325   001D7E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3326   001D80                     l3600:
  3327   001D80  90D8               	bcf	status,0,c
  3328   001D82  320A               	rrcf	___xxtofl@exp^0,f,c
  3329   001D84  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3330   001D88  6A06               	clrf	(??___xxtofl+1)^0,c
  3331   001D8A  6A07               	clrf	(??___xxtofl+2)^0,c
  3332   001D8C  6A08               	clrf	(??___xxtofl+3)^0,c
  3333   001D8E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3334   001D92  6A07               	clrf	(??___xxtofl+2)^0,c
  3335   001D94  6A06               	clrf	(??___xxtofl+1)^0,c
  3336   001D96  6A05               	clrf	??___xxtofl^0,c
  3337   001D98  5005               	movf	??___xxtofl^0,w,c
  3338   001D9A  120B               	iorwf	___xxtofl@arg^0,f,c
  3339   001D9C  5006               	movf	(??___xxtofl+1)^0,w,c
  3340   001D9E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3341   001DA0  5007               	movf	(??___xxtofl+2)^0,w,c
  3342   001DA2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3343   001DA4  5008               	movf	(??___xxtofl+3)^0,w,c
  3344   001DA6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3345   001DA8  5009               	movf	___xxtofl@sign^0,w,c
  3346   001DAA  B4D8               	btfsc	status,2,c
  3347   001DAC  EFDA  F00E         	goto	u2591
  3348   001DB0  EFDC  F00E         	goto	u2590
  3349   001DB4                     u2591:
  3350   001DB4  EFE4  F00E         	goto	l3610
  3351   001DB8                     u2590:
  3352   001DB8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3353   001DBA  EFE3  F00E         	goto	u2600
  3354   001DBE  EFE1  F00E         	goto	u2601
  3355   001DC2                     u2601:
  3356   001DC2  EFE4  F00E         	goto	l3610
  3357   001DC6                     u2600:
  3358   001DC6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3359   001DC8                     l3610:
  3360   001DC8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3361   001DCC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3362   001DD0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3363   001DD4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3364   001DD8                     l1361:
  3365   001DD8  0012               	return		;funcret
  3366   001DDA                     __end_of___xxtofl:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function ___fltol *****************
  3370 ;; Defined at:
  3371 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  f1              4   39[COMRAM] unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  exp1            1   48[COMRAM] unsigned char 
  3376 ;;  sign1           1   47[COMRAM] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  4   39[COMRAM] long 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;Total ram usage:       10 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 1
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_scaleRGB
  3397 ;;		_stop
  3398 ;;		_turnLeft
  3399 ;;		_turnRight
  3400 ;;		_fullSpeedAhead
  3401 ;;		_fullSpeedReverse
  3402 ;;		_turnLeft90
  3403 ;;		_turnRight90
  3404 ;;		_turnLeft135
  3405 ;;		_turnRight135
  3406 ;;		_UTurn
  3407 ;;		_headbuttReverse
  3408 ;;		_squareReverse
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text18
  3413   001EFE                     __ptext18:
  3414                           	callstack 0
  3415   001EFE                     ___fltol:
  3416                           	callstack 28
  3417   001EFE  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3418   001F00  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3419   001F02  6E31               	movwf	___fltol@exp1^0,c
  3420   001F04  5031               	movf	___fltol@exp1^0,w,c
  3421   001F06  A4D8               	btfss	status,2,c
  3422   001F08  EF88  F00F         	goto	u2441
  3423   001F0C  EF8A  F00F         	goto	u2440
  3424   001F10                     u2441:
  3425   001F10  EF94  F00F         	goto	l3530
  3426   001F14                     u2440:
  3427   001F14                     l3526:
  3428   001F14  0E00               	movlw	0
  3429   001F16  6E28               	movwf	?___fltol^0,c
  3430   001F18  0E00               	movlw	0
  3431   001F1A  6E29               	movwf	(?___fltol+1)^0,c
  3432   001F1C  0E00               	movlw	0
  3433   001F1E  6E2A               	movwf	(?___fltol+2)^0,c
  3434   001F20  0E00               	movlw	0
  3435   001F22  6E2B               	movwf	(?___fltol+3)^0,c
  3436   001F24  EF01  F010         	goto	l1000
  3437   001F28                     l3530:
  3438   001F28  C028  F02C         	movff	___fltol@f1,??___fltol
  3439   001F2C  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3440   001F30  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3441   001F34  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3442   001F38  0E20               	movlw	32
  3443   001F3A  EFA4  F00F         	goto	u2450
  3444   001F3E                     u2455:
  3445   001F3E  90D8               	bcf	status,0,c
  3446   001F40  322F               	rrcf	(??___fltol+3)^0,f,c
  3447   001F42  322E               	rrcf	(??___fltol+2)^0,f,c
  3448   001F44  322D               	rrcf	(??___fltol+1)^0,f,c
  3449   001F46  322C               	rrcf	??___fltol^0,f,c
  3450   001F48                     u2450:
  3451   001F48  2EE8               	decfsz	wreg,f,c
  3452   001F4A  EF9F  F00F         	goto	u2455
  3453   001F4E  502C               	movf	??___fltol^0,w,c
  3454   001F50  6E30               	movwf	___fltol@sign1^0,c
  3455   001F52  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3456   001F54  0EFF               	movlw	255
  3457   001F56  1628               	andwf	___fltol@f1^0,f,c
  3458   001F58  0EFF               	movlw	255
  3459   001F5A  1629               	andwf	(___fltol@f1+1)^0,f,c
  3460   001F5C  0EFF               	movlw	255
  3461   001F5E  162A               	andwf	(___fltol@f1+2)^0,f,c
  3462   001F60  0E00               	movlw	0
  3463   001F62  162B               	andwf	(___fltol@f1+3)^0,f,c
  3464   001F64  0E96               	movlw	150
  3465   001F66  5E31               	subwf	___fltol@exp1^0,f,c
  3466   001F68  BE31               	btfsc	___fltol@exp1^0,7,c
  3467   001F6A  EFBB  F00F         	goto	u2460
  3468   001F6E  EFB9  F00F         	goto	u2461
  3469   001F72                     u2461:
  3470   001F72  EFD1  F00F         	goto	l3550
  3471   001F76                     u2460:
  3472   001F76  5031               	movf	___fltol@exp1^0,w,c
  3473   001F78  0A80               	xorlw	128
  3474   001F7A  0F97               	addlw	151
  3475   001F7C  B0D8               	btfsc	status,0,c
  3476   001F7E  EFC3  F00F         	goto	u2471
  3477   001F82  EFC5  F00F         	goto	u2470
  3478   001F86                     u2471:
  3479   001F86  EFC7  F00F         	goto	l3546
  3480   001F8A                     u2470:
  3481   001F8A  EF8A  F00F         	goto	l3526
  3482   001F8E                     l3546:
  3483   001F8E  90D8               	bcf	status,0,c
  3484   001F90  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3485   001F92  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3486   001F94  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3487   001F96  3228               	rrcf	___fltol@f1^0,f,c
  3488   001F98  3E31               	incfsz	___fltol@exp1^0,f,c
  3489   001F9A  EFC7  F00F         	goto	l3546
  3490   001F9E  EFE9  F00F         	goto	l3560
  3491   001FA2                     l3550:
  3492   001FA2  0E1F               	movlw	31
  3493   001FA4  6431               	cpfsgt	___fltol@exp1^0,c
  3494   001FA6  EFD7  F00F         	goto	u2481
  3495   001FAA  EFD9  F00F         	goto	u2480
  3496   001FAE                     u2481:
  3497   001FAE  EFE1  F00F         	goto	l3558
  3498   001FB2                     u2480:
  3499   001FB2  EF8A  F00F         	goto	l3526
  3500   001FB6                     l3556:
  3501   001FB6  90D8               	bcf	status,0,c
  3502   001FB8  3628               	rlcf	___fltol@f1^0,f,c
  3503   001FBA  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3504   001FBC  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3505   001FBE  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3506   001FC0  0631               	decf	___fltol@exp1^0,f,c
  3507   001FC2                     l3558:
  3508   001FC2  5031               	movf	___fltol@exp1^0,w,c
  3509   001FC4  A4D8               	btfss	status,2,c
  3510   001FC6  EFE7  F00F         	goto	u2491
  3511   001FCA  EFE9  F00F         	goto	u2490
  3512   001FCE                     u2491:
  3513   001FCE  EFDB  F00F         	goto	l3556
  3514   001FD2                     u2490:
  3515   001FD2                     l3560:
  3516   001FD2  5030               	movf	___fltol@sign1^0,w,c
  3517   001FD4  B4D8               	btfsc	status,2,c
  3518   001FD6  EFEF  F00F         	goto	u2501
  3519   001FDA  EFF1  F00F         	goto	u2500
  3520   001FDE                     u2501:
  3521   001FDE  EFF9  F00F         	goto	l3564
  3522   001FE2                     u2500:
  3523   001FE2  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3524   001FE4  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3525   001FE6  1E29               	comf	(___fltol@f1+1)^0,f,c
  3526   001FE8  6C28               	negf	___fltol@f1^0,c
  3527   001FEA  0E00               	movlw	0
  3528   001FEC  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3529   001FEE  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3530   001FF0  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3531   001FF2                     l3564:
  3532   001FF2  C028  F028         	movff	___fltol@f1,?___fltol
  3533   001FF6  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3534   001FFA  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3535   001FFE  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3536   002002                     l1000:
  3537   002002  0012               	return		;funcret
  3538   002004                     __end_of___fltol:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function ___flmul *****************
  3542 ;; Defined at:
  3543 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  b               4   14[COMRAM] long 
  3546 ;;  a               4   18[COMRAM] long 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  prod            4   33[COMRAM] struct .
  3549 ;;  grs             4   27[COMRAM] unsigned long 
  3550 ;;  temp            2   37[COMRAM] struct .
  3551 ;;  bexp            1   32[COMRAM] unsigned char 
  3552 ;;  aexp            1   31[COMRAM] unsigned char 
  3553 ;;  sign            1   26[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  4   14[COMRAM] unsigned char 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, prodl, prodh
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3563 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;Total ram usage:       25 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_scaleRGB
  3574 ;;		_stop
  3575 ;;		_turnLeft
  3576 ;;		_turnRight
  3577 ;;		_fullSpeedAhead
  3578 ;;		_fullSpeedReverse
  3579 ;;		_turnLeft90
  3580 ;;		_turnRight90
  3581 ;;		_turnLeft135
  3582 ;;		_turnRight135
  3583 ;;		_UTurn
  3584 ;;		_headbuttReverse
  3585 ;;		_squareReverse
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text19
  3590   0014F0                     __ptext19:
  3591                           	callstack 0
  3592   0014F0                     ___flmul:
  3593                           	callstack 28
  3594   0014F0  5012               	movf	(___flmul@b+3)^0,w,c
  3595   0014F2  0B80               	andlw	128
  3596   0014F4  6E1B               	movwf	___flmul@sign^0,c
  3597   0014F6  5012               	movf	(___flmul@b+3)^0,w,c
  3598   0014F8  2412               	addwf	(___flmul@b+3)^0,w,c
  3599   0014FA  6E21               	movwf	___flmul@bexp^0,c
  3600   0014FC  AE11               	btfss	(___flmul@b+2)^0,7,c
  3601   0014FE  EF83  F00A         	goto	u2251
  3602   001502  EF85  F00A         	goto	u2250
  3603   001506                     u2251:
  3604   001506  EF86  F00A         	goto	l3400
  3605   00150A                     u2250:
  3606   00150A  8021               	bsf	___flmul@bexp^0,0,c
  3607   00150C                     l3400:
  3608   00150C  5021               	movf	___flmul@bexp^0,w,c
  3609   00150E  B4D8               	btfsc	status,2,c
  3610   001510  EF8C  F00A         	goto	u2261
  3611   001514  EF8E  F00A         	goto	u2260
  3612   001518                     u2261:
  3613   001518  EFA1  F00A         	goto	l3408
  3614   00151C                     u2260:
  3615   00151C  2821               	incf	___flmul@bexp^0,w,c
  3616   00151E  A4D8               	btfss	status,2,c
  3617   001520  EF94  F00A         	goto	u2271
  3618   001524  EF96  F00A         	goto	u2270
  3619   001528                     u2271:
  3620   001528  EF9E  F00A         	goto	l3406
  3621   00152C                     u2270:
  3622   00152C  0E00               	movlw	0
  3623   00152E  6E0F               	movwf	___flmul@b^0,c
  3624   001530  0E00               	movlw	0
  3625   001532  6E10               	movwf	(___flmul@b+1)^0,c
  3626   001534  0E00               	movlw	0
  3627   001536  6E11               	movwf	(___flmul@b+2)^0,c
  3628   001538  0E00               	movlw	0
  3629   00153A  6E12               	movwf	(___flmul@b+3)^0,c
  3630   00153C                     l3406:
  3631   00153C  8E11               	bsf	(___flmul@b+2)^0,7,c
  3632   00153E  EFA9  F00A         	goto	l3410
  3633   001542                     l3408:
  3634   001542  0E00               	movlw	0
  3635   001544  6E0F               	movwf	___flmul@b^0,c
  3636   001546  0E00               	movlw	0
  3637   001548  6E10               	movwf	(___flmul@b+1)^0,c
  3638   00154A  0E00               	movlw	0
  3639   00154C  6E11               	movwf	(___flmul@b+2)^0,c
  3640   00154E  0E00               	movlw	0
  3641   001550  6E12               	movwf	(___flmul@b+3)^0,c
  3642   001552                     l3410:
  3643   001552  5016               	movf	(___flmul@a+3)^0,w,c
  3644   001554  0B80               	andlw	128
  3645   001556  1A1B               	xorwf	___flmul@sign^0,f,c
  3646   001558  5016               	movf	(___flmul@a+3)^0,w,c
  3647   00155A  2416               	addwf	(___flmul@a+3)^0,w,c
  3648   00155C  6E20               	movwf	___flmul@aexp^0,c
  3649   00155E  AE15               	btfss	(___flmul@a+2)^0,7,c
  3650   001560  EFB4  F00A         	goto	u2281
  3651   001564  EFB6  F00A         	goto	u2280
  3652   001568                     u2281:
  3653   001568  EFB7  F00A         	goto	l3418
  3654   00156C                     u2280:
  3655   00156C  8020               	bsf	___flmul@aexp^0,0,c
  3656   00156E                     l3418:
  3657   00156E  5020               	movf	___flmul@aexp^0,w,c
  3658   001570  B4D8               	btfsc	status,2,c
  3659   001572  EFBD  F00A         	goto	u2291
  3660   001576  EFBF  F00A         	goto	u2290
  3661   00157A                     u2291:
  3662   00157A  EFD2  F00A         	goto	l3426
  3663   00157E                     u2290:
  3664   00157E  2820               	incf	___flmul@aexp^0,w,c
  3665   001580  A4D8               	btfss	status,2,c
  3666   001582  EFC5  F00A         	goto	u2301
  3667   001586  EFC7  F00A         	goto	u2300
  3668   00158A                     u2301:
  3669   00158A  EFCF  F00A         	goto	l3424
  3670   00158E                     u2300:
  3671   00158E  0E00               	movlw	0
  3672   001590  6E13               	movwf	___flmul@a^0,c
  3673   001592  0E00               	movlw	0
  3674   001594  6E14               	movwf	(___flmul@a+1)^0,c
  3675   001596  0E00               	movlw	0
  3676   001598  6E15               	movwf	(___flmul@a+2)^0,c
  3677   00159A  0E00               	movlw	0
  3678   00159C  6E16               	movwf	(___flmul@a+3)^0,c
  3679   00159E                     l3424:
  3680   00159E  8E15               	bsf	(___flmul@a+2)^0,7,c
  3681   0015A0  EFDA  F00A         	goto	l1317
  3682   0015A4                     l3426:
  3683   0015A4  0E00               	movlw	0
  3684   0015A6  6E13               	movwf	___flmul@a^0,c
  3685   0015A8  0E00               	movlw	0
  3686   0015AA  6E14               	movwf	(___flmul@a+1)^0,c
  3687   0015AC  0E00               	movlw	0
  3688   0015AE  6E15               	movwf	(___flmul@a+2)^0,c
  3689   0015B0  0E00               	movlw	0
  3690   0015B2  6E16               	movwf	(___flmul@a+3)^0,c
  3691   0015B4                     l1317:
  3692   0015B4  5020               	movf	___flmul@aexp^0,w,c
  3693   0015B6  B4D8               	btfsc	status,2,c
  3694   0015B8  EFE0  F00A         	goto	u2311
  3695   0015BC  EFE2  F00A         	goto	u2310
  3696   0015C0                     u2311:
  3697   0015C0  EFEA  F00A         	goto	l3430
  3698   0015C4                     u2310:
  3699   0015C4  5021               	movf	___flmul@bexp^0,w,c
  3700   0015C6  A4D8               	btfss	status,2,c
  3701   0015C8  EFE8  F00A         	goto	u2321
  3702   0015CC  EFEA  F00A         	goto	u2320
  3703   0015D0                     u2321:
  3704   0015D0  EFF4  F00A         	goto	l3434
  3705   0015D4                     u2320:
  3706   0015D4                     l3430:
  3707   0015D4  0E00               	movlw	0
  3708   0015D6  6E0F               	movwf	?___flmul^0,c
  3709   0015D8  0E00               	movlw	0
  3710   0015DA  6E10               	movwf	(?___flmul+1)^0,c
  3711   0015DC  0E00               	movlw	0
  3712   0015DE  6E11               	movwf	(?___flmul+2)^0,c
  3713   0015E0  0E00               	movlw	0
  3714   0015E2  6E12               	movwf	(?___flmul+3)^0,c
  3715   0015E4  EF8C  F00C         	goto	l1321
  3716   0015E8                     l3434:
  3717   0015E8  5015               	movf	(___flmul@a+2)^0,w,c
  3718   0015EA  020F               	mulwf	___flmul@b^0,c
  3719   0015EC  CFF3 F026          	movff	prodl,___flmul@temp
  3720   0015F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3721   0015F4  5026               	movf	___flmul@temp^0,w,c
  3722   0015F6  6E1C               	movwf	___flmul@grs^0,c
  3723   0015F8  6A1D               	clrf	(___flmul@grs+1)^0,c
  3724   0015FA  6A1E               	clrf	(___flmul@grs+2)^0,c
  3725   0015FC  6A1F               	clrf	(___flmul@grs+3)^0,c
  3726   0015FE  5027               	movf	(___flmul@temp+1)^0,w,c
  3727   001600  6E22               	movwf	___flmul@prod^0,c
  3728   001602  6A23               	clrf	(___flmul@prod+1)^0,c
  3729   001604  6A24               	clrf	(___flmul@prod+2)^0,c
  3730   001606  6A25               	clrf	(___flmul@prod+3)^0,c
  3731   001608  5014               	movf	(___flmul@a+1)^0,w,c
  3732   00160A  0210               	mulwf	(___flmul@b+1)^0,c
  3733   00160C  CFF3 F026          	movff	prodl,___flmul@temp
  3734   001610  CFF4 F027          	movff	prodh,___flmul@temp+1
  3735   001614  5026               	movf	___flmul@temp^0,w,c
  3736   001616  261C               	addwf	___flmul@grs^0,f,c
  3737   001618  0E00               	movlw	0
  3738   00161A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3739   00161C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3740   00161E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3741   001620  5027               	movf	(___flmul@temp+1)^0,w,c
  3742   001622  2622               	addwf	___flmul@prod^0,f,c
  3743   001624  0E00               	movlw	0
  3744   001626  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3745   001628  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3746   00162A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3747   00162C  5013               	movf	___flmul@a^0,w,c
  3748   00162E  0211               	mulwf	(___flmul@b+2)^0,c
  3749   001630  CFF3 F026          	movff	prodl,___flmul@temp
  3750   001634  CFF4 F027          	movff	prodh,___flmul@temp+1
  3751   001638  5026               	movf	___flmul@temp^0,w,c
  3752   00163A  261C               	addwf	___flmul@grs^0,f,c
  3753   00163C  0E00               	movlw	0
  3754   00163E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3755   001640  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3756   001642  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3757   001644  5027               	movf	(___flmul@temp+1)^0,w,c
  3758   001646  2622               	addwf	___flmul@prod^0,f,c
  3759   001648  0E00               	movlw	0
  3760   00164A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3761   00164C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3762   00164E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3763   001650  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3764   001654  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3765   001658  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3766   00165C  6A1C               	clrf	___flmul@grs^0,c
  3767   00165E  5013               	movf	___flmul@a^0,w,c
  3768   001660  0210               	mulwf	(___flmul@b+1)^0,c
  3769   001662  CFF3 F026          	movff	prodl,___flmul@temp
  3770   001666  CFF4 F027          	movff	prodh,___flmul@temp+1
  3771   00166A  5026               	movf	___flmul@temp^0,w,c
  3772   00166C  261C               	addwf	___flmul@grs^0,f,c
  3773   00166E  5027               	movf	(___flmul@temp+1)^0,w,c
  3774   001670  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3775   001672  0E00               	movlw	0
  3776   001674  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3777   001676  0E00               	movlw	0
  3778   001678  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3779   00167A  5014               	movf	(___flmul@a+1)^0,w,c
  3780   00167C  020F               	mulwf	___flmul@b^0,c
  3781   00167E  CFF3 F026          	movff	prodl,___flmul@temp
  3782   001682  CFF4 F027          	movff	prodh,___flmul@temp+1
  3783   001686  5026               	movf	___flmul@temp^0,w,c
  3784   001688  261C               	addwf	___flmul@grs^0,f,c
  3785   00168A  5027               	movf	(___flmul@temp+1)^0,w,c
  3786   00168C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3787   00168E  0E00               	movlw	0
  3788   001690  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3789   001692  0E00               	movlw	0
  3790   001694  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3791   001696  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3792   00169A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3793   00169E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3794   0016A2  6A1C               	clrf	___flmul@grs^0,c
  3795   0016A4  5013               	movf	___flmul@a^0,w,c
  3796   0016A6  020F               	mulwf	___flmul@b^0,c
  3797   0016A8  CFF3 F026          	movff	prodl,___flmul@temp
  3798   0016AC  CFF4 F027          	movff	prodh,___flmul@temp+1
  3799   0016B0  5026               	movf	___flmul@temp^0,w,c
  3800   0016B2  261C               	addwf	___flmul@grs^0,f,c
  3801   0016B4  5027               	movf	(___flmul@temp+1)^0,w,c
  3802   0016B6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3803   0016B8  0E00               	movlw	0
  3804   0016BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3805   0016BC  0E00               	movlw	0
  3806   0016BE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3807   0016C0  5015               	movf	(___flmul@a+2)^0,w,c
  3808   0016C2  0210               	mulwf	(___flmul@b+1)^0,c
  3809   0016C4  CFF3 F026          	movff	prodl,___flmul@temp
  3810   0016C8  CFF4 F027          	movff	prodh,___flmul@temp+1
  3811   0016CC  5026               	movf	___flmul@temp^0,w,c
  3812   0016CE  2622               	addwf	___flmul@prod^0,f,c
  3813   0016D0  5027               	movf	(___flmul@temp+1)^0,w,c
  3814   0016D2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3815   0016D4  0E00               	movlw	0
  3816   0016D6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3817   0016D8  0E00               	movlw	0
  3818   0016DA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3819   0016DC  5014               	movf	(___flmul@a+1)^0,w,c
  3820   0016DE  0211               	mulwf	(___flmul@b+2)^0,c
  3821   0016E0  CFF3 F026          	movff	prodl,___flmul@temp
  3822   0016E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  3823   0016E8  5026               	movf	___flmul@temp^0,w,c
  3824   0016EA  2622               	addwf	___flmul@prod^0,f,c
  3825   0016EC  5027               	movf	(___flmul@temp+1)^0,w,c
  3826   0016EE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3827   0016F0  0E00               	movlw	0
  3828   0016F2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3829   0016F4  0E00               	movlw	0
  3830   0016F6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3831   0016F8  5015               	movf	(___flmul@a+2)^0,w,c
  3832   0016FA  0211               	mulwf	(___flmul@b+2)^0,c
  3833   0016FC  CFF3 F026          	movff	prodl,___flmul@temp
  3834   001700  CFF4 F027          	movff	prodh,___flmul@temp+1
  3835   001704  5026               	movf	___flmul@temp^0,w,c
  3836   001706  6E17               	movwf	??___flmul^0,c
  3837   001708  5027               	movf	(___flmul@temp+1)^0,w,c
  3838   00170A  6E18               	movwf	(??___flmul+1)^0,c
  3839   00170C  6A19               	clrf	(??___flmul+2)^0,c
  3840   00170E  6A1A               	clrf	(??___flmul+3)^0,c
  3841   001710  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3842   001714  C018  F019         	movff	??___flmul+1,??___flmul+2
  3843   001718  C017  F018         	movff	??___flmul,??___flmul+1
  3844   00171C  6A17               	clrf	??___flmul^0,c
  3845   00171E  5017               	movf	??___flmul^0,w,c
  3846   001720  2622               	addwf	___flmul@prod^0,f,c
  3847   001722  5018               	movf	(??___flmul+1)^0,w,c
  3848   001724  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3849   001726  5019               	movf	(??___flmul+2)^0,w,c
  3850   001728  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3851   00172A  501A               	movf	(??___flmul+3)^0,w,c
  3852   00172C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3853   00172E  C01C  F017         	movff	___flmul@grs,??___flmul
  3854   001732  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3855   001736  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3856   00173A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3857   00173E  0E19               	movlw	25
  3858   001740  EFA7  F00B         	goto	u2330
  3859   001744                     u2335:
  3860   001744  90D8               	bcf	status,0,c
  3861   001746  321A               	rrcf	(??___flmul+3)^0,f,c
  3862   001748  3219               	rrcf	(??___flmul+2)^0,f,c
  3863   00174A  3218               	rrcf	(??___flmul+1)^0,f,c
  3864   00174C  3217               	rrcf	??___flmul^0,f,c
  3865   00174E                     u2330:
  3866   00174E  2EE8               	decfsz	wreg,f,c
  3867   001750  EFA2  F00B         	goto	u2335
  3868   001754  5017               	movf	??___flmul^0,w,c
  3869   001756  2622               	addwf	___flmul@prod^0,f,c
  3870   001758  5018               	movf	(??___flmul+1)^0,w,c
  3871   00175A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3872   00175C  5019               	movf	(??___flmul+2)^0,w,c
  3873   00175E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3874   001760  501A               	movf	(??___flmul+3)^0,w,c
  3875   001762  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3876   001764  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3877   001768  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3878   00176C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3879   001770  6A1C               	clrf	___flmul@grs^0,c
  3880   001772  5020               	movf	___flmul@aexp^0,w,c
  3881   001774  C021  F017         	movff	___flmul@bexp,??___flmul
  3882   001778  6A18               	clrf	(??___flmul+1)^0,c
  3883   00177A  2617               	addwf	??___flmul^0,f,c
  3884   00177C  0E00               	movlw	0
  3885   00177E  2218               	addwfc	(??___flmul+1)^0,f,c
  3886   001780  0E82               	movlw	130
  3887   001782  2417               	addwf	??___flmul^0,w,c
  3888   001784  6E26               	movwf	___flmul@temp^0,c
  3889   001786  0EFF               	movlw	255
  3890   001788  2018               	addwfc	(??___flmul+1)^0,w,c
  3891   00178A  6E27               	movwf	(___flmul@temp+1)^0,c
  3892   00178C  EFDD  F00B         	goto	l3482
  3893   001790                     l3476:
  3894   001790  90D8               	bcf	status,0,c
  3895   001792  3622               	rlcf	___flmul@prod^0,f,c
  3896   001794  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3897   001796  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3898   001798  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3899   00179A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3900   00179C  EFD2  F00B         	goto	u2341
  3901   0017A0  EFD4  F00B         	goto	u2340
  3902   0017A4                     u2341:
  3903   0017A4  EFD5  F00B         	goto	l1324
  3904   0017A8                     u2340:
  3905   0017A8  8022               	bsf	___flmul@prod^0,0,c
  3906   0017AA                     l1324:
  3907   0017AA  90D8               	bcf	status,0,c
  3908   0017AC  361C               	rlcf	___flmul@grs^0,f,c
  3909   0017AE  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3910   0017B0  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3911   0017B2  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3912   0017B4  0626               	decf	___flmul@temp^0,f,c
  3913   0017B6  A0D8               	btfss	status,0,c
  3914   0017B8  0627               	decf	(___flmul@temp+1)^0,f,c
  3915   0017BA                     l3482:
  3916   0017BA  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3917   0017BC  EFE2  F00B         	goto	u2351
  3918   0017C0  EFE4  F00B         	goto	u2350
  3919   0017C4                     u2351:
  3920   0017C4  EFC8  F00B         	goto	l3476
  3921   0017C8                     u2350:
  3922   0017C8  0E00               	movlw	0
  3923   0017CA  6E20               	movwf	___flmul@aexp^0,c
  3924   0017CC  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3925   0017CE  EFEB  F00B         	goto	u2361
  3926   0017D2  EFED  F00B         	goto	u2360
  3927   0017D6                     u2361:
  3928   0017D6  EF11  F00C         	goto	l1326
  3929   0017DA                     u2360:
  3930   0017DA  0EFF               	movlw	255
  3931   0017DC  141C               	andwf	___flmul@grs^0,w,c
  3932   0017DE  6E17               	movwf	??___flmul^0,c
  3933   0017E0  0EFF               	movlw	255
  3934   0017E2  141D               	andwf	(___flmul@grs+1)^0,w,c
  3935   0017E4  6E18               	movwf	(??___flmul+1)^0,c
  3936   0017E6  0EFF               	movlw	255
  3937   0017E8  141E               	andwf	(___flmul@grs+2)^0,w,c
  3938   0017EA  6E19               	movwf	(??___flmul+2)^0,c
  3939   0017EC  0E7F               	movlw	127
  3940   0017EE  141F               	andwf	(___flmul@grs+3)^0,w,c
  3941   0017F0  6E1A               	movwf	(??___flmul+3)^0,c
  3942   0017F2  5017               	movf	??___flmul^0,w,c
  3943   0017F4  1018               	iorwf	(??___flmul+1)^0,w,c
  3944   0017F6  1019               	iorwf	(??___flmul+2)^0,w,c
  3945   0017F8  101A               	iorwf	(??___flmul+3)^0,w,c
  3946   0017FA  B4D8               	btfsc	status,2,c
  3947   0017FC  EF02  F00C         	goto	u2371
  3948   001800  EF04  F00C         	goto	u2370
  3949   001804                     u2371:
  3950   001804  EF08  F00C         	goto	l1327
  3951   001808                     u2370:
  3952   001808                     l3490:
  3953   001808  0E01               	movlw	1
  3954   00180A  6E20               	movwf	___flmul@aexp^0,c
  3955   00180C  EF11  F00C         	goto	l1326
  3956   001810                     l1327:
  3957   001810  A022               	btfss	___flmul@prod^0,0,c
  3958   001812  EF0D  F00C         	goto	u2381
  3959   001816  EF0F  F00C         	goto	u2380
  3960   00181A                     u2381:
  3961   00181A  EF11  F00C         	goto	l1326
  3962   00181E                     u2380:
  3963   00181E  EF04  F00C         	goto	l3490
  3964   001822                     l1326:
  3965   001822  5020               	movf	___flmul@aexp^0,w,c
  3966   001824  B4D8               	btfsc	status,2,c
  3967   001826  EF17  F00C         	goto	u2391
  3968   00182A  EF19  F00C         	goto	u2390
  3969   00182E                     u2391:
  3970   00182E  EF3D  F00C         	goto	l3502
  3971   001832                     u2390:
  3972   001832  0E01               	movlw	1
  3973   001834  2622               	addwf	___flmul@prod^0,f,c
  3974   001836  0E00               	movlw	0
  3975   001838  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3976   00183A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3977   00183C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3978   00183E  A025               	btfss	(___flmul@prod+3)^0,0,c
  3979   001840  EF24  F00C         	goto	u2401
  3980   001844  EF26  F00C         	goto	u2400
  3981   001848                     u2401:
  3982   001848  EF3D  F00C         	goto	l3502
  3983   00184C                     u2400:
  3984   00184C  C022  F017         	movff	___flmul@prod,??___flmul
  3985   001850  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3986   001854  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3987   001858  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3988   00185C  341A               	rlcf	(??___flmul+3)^0,w,c
  3989   00185E  321A               	rrcf	(??___flmul+3)^0,f,c
  3990   001860  3219               	rrcf	(??___flmul+2)^0,f,c
  3991   001862  3218               	rrcf	(??___flmul+1)^0,f,c
  3992   001864  3217               	rrcf	??___flmul^0,f,c
  3993   001866  C017  F022         	movff	??___flmul,___flmul@prod
  3994   00186A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3995   00186E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3996   001872  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3997   001876  4A26               	infsnz	___flmul@temp^0,f,c
  3998   001878  2A27               	incf	(___flmul@temp+1)^0,f,c
  3999   00187A                     l3502:
  4000   00187A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4001   00187C  EF48  F00C         	goto	u2411
  4002   001880  5027               	movf	(___flmul@temp+1)^0,w,c
  4003   001882  E108               	bnz	u2410
  4004   001884  2826               	incf	___flmul@temp^0,w,c
  4005   001886  A0D8               	btfss	status,0,c
  4006   001888  EF48  F00C         	goto	u2411
  4007   00188C  EF4A  F00C         	goto	u2410
  4008   001890                     u2411:
  4009   001890  EF54  F00C         	goto	l3506
  4010   001894                     u2410:
  4011   001894  0E00               	movlw	0
  4012   001896  6E22               	movwf	___flmul@prod^0,c
  4013   001898  0E00               	movlw	0
  4014   00189A  6E23               	movwf	(___flmul@prod+1)^0,c
  4015   00189C  0E80               	movlw	128
  4016   00189E  6E24               	movwf	(___flmul@prod+2)^0,c
  4017   0018A0  0E7F               	movlw	127
  4018   0018A2  6E25               	movwf	(___flmul@prod+3)^0,c
  4019   0018A4  EF82  F00C         	goto	l3518
  4020   0018A8                     l3506:
  4021   0018A8  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4022   0018AA  EF61  F00C         	goto	u2420
  4023   0018AE  5027               	movf	(___flmul@temp+1)^0,w,c
  4024   0018B0  E106               	bnz	u2421
  4025   0018B2  0426               	decf	___flmul@temp^0,w,c
  4026   0018B4  B0D8               	btfsc	status,0,c
  4027   0018B6  EF5F  F00C         	goto	u2421
  4028   0018BA  EF61  F00C         	goto	u2420
  4029   0018BE                     u2421:
  4030   0018BE  EF6D  F00C         	goto	l1334
  4031   0018C2                     u2420:
  4032   0018C2  0E00               	movlw	0
  4033   0018C4  6E22               	movwf	___flmul@prod^0,c
  4034   0018C6  0E00               	movlw	0
  4035   0018C8  6E23               	movwf	(___flmul@prod+1)^0,c
  4036   0018CA  0E00               	movlw	0
  4037   0018CC  6E24               	movwf	(___flmul@prod+2)^0,c
  4038   0018CE  0E00               	movlw	0
  4039   0018D0  6E25               	movwf	(___flmul@prod+3)^0,c
  4040   0018D2  0E00               	movlw	0
  4041   0018D4  6E1B               	movwf	___flmul@sign^0,c
  4042   0018D6  EF82  F00C         	goto	l3518
  4043   0018DA                     l1334:
  4044   0018DA  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4045   0018DE  0EFF               	movlw	255
  4046   0018E0  1622               	andwf	___flmul@prod^0,f,c
  4047   0018E2  0EFF               	movlw	255
  4048   0018E4  1623               	andwf	(___flmul@prod+1)^0,f,c
  4049   0018E6  0E7F               	movlw	127
  4050   0018E8  1624               	andwf	(___flmul@prod+2)^0,f,c
  4051   0018EA  0E00               	movlw	0
  4052   0018EC  1625               	andwf	(___flmul@prod+3)^0,f,c
  4053   0018EE  A021               	btfss	___flmul@bexp^0,0,c
  4054   0018F0  EF7C  F00C         	goto	u2431
  4055   0018F4  EF7E  F00C         	goto	u2430
  4056   0018F8                     u2431:
  4057   0018F8  EF7F  F00C         	goto	l3516
  4058   0018FC                     u2430:
  4059   0018FC  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4060   0018FE                     l3516:
  4061   0018FE  90D8               	bcf	status,0,c
  4062   001900  3021               	rrcf	___flmul@bexp^0,w,c
  4063   001902  6E25               	movwf	(___flmul@prod+3)^0,c
  4064   001904                     l3518:
  4065   001904  501B               	movf	___flmul@sign^0,w,c
  4066   001906  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4067   001908  C022  F00F         	movff	___flmul@prod,?___flmul
  4068   00190C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4069   001910  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4070   001914  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4071   001918                     l1321:
  4072   001918  0012               	return		;funcret
  4073   00191A                     __end_of___flmul:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _initUSART4 *****************
  4077 ;; Defined at:
  4078 ;;		line 5 in file "serial.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 1
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text20
  4107   002C6A                     __ptext20:
  4108                           	callstack 0
  4109   002C6A                     _initUSART4:
  4110                           	callstack 29
  4111   002C6A                     
  4112                           ;serial.c: 9:     RC0PPS = 0x12;
  4113   002C6A  0E12               	movlw	18
  4114   002C6C  010E               	movlb	14	; () banked
  4115   002C6E  6F62               	movwf	98,b	;volatile
  4116                           
  4117                           ;serial.c: 10:     RX4PPS = 0x11;
  4118   002C70  0E11               	movlw	17
  4119   002C72  6F15               	movwf	21,b	;volatile
  4120   002C74                     
  4121                           ; BSR set to: 14
  4122                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4123   002C74  97E9               	bcf	233,3,b	;volatile
  4124   002C76                     
  4125                           ; BSR set to: 14
  4126                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4127   002C76  95E8               	bcf	232,2,b	;volatile
  4128                           
  4129                           ;serial.c: 14:     SP4BRGL = 51;
  4130   002C78  0E33               	movlw	51
  4131   002C7A  6FE5               	movwf	229,b	;volatile
  4132                           
  4133                           ;serial.c: 15:     SP4BRGH = 0;
  4134   002C7C  0E00               	movlw	0
  4135   002C7E  6FE6               	movwf	230,b	;volatile
  4136   002C80                     
  4137                           ; BSR set to: 14
  4138                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4139   002C80  89E7               	bsf	231,4,b	;volatile
  4140   002C82                     
  4141                           ; BSR set to: 14
  4142                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4143   002C82  8BE8               	bsf	232,5,b	;volatile
  4144   002C84                     
  4145                           ; BSR set to: 14
  4146                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4147   002C84  8FE7               	bsf	231,7,b	;volatile
  4148   002C86                     
  4149                           ; BSR set to: 14
  4150   002C86  0012               	return		;funcret
  4151   002C88                     __end_of_initUSART4:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _initDCmotorsPWM *****************
  4155 ;; Defined at:
  4156 ;;		line 5 in file "dc_motor.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text21
  4185   002474                     __ptext21:
  4186                           	callstack 0
  4187   002474                     _initDCmotorsPWM:
  4188                           	callstack 29
  4189   002474                     
  4190                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4191   002474  9485               	bcf	133,2,c	;volatile
  4192                           
  4193                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4194   002476  9885               	bcf	133,4,c	;volatile
  4195                           
  4196                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4197   002478  9E83               	bcf	131,7,c	;volatile
  4198                           
  4199                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4200   00247A  9C87               	bcf	135,6,c	;volatile
  4201                           
  4202                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4203   00247C  947D               	bcf	125,2,c	;volatile
  4204                           
  4205                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4206   00247E  987D               	bcf	125,4,c	;volatile
  4207                           
  4208                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4209   002480  9E7B               	bcf	123,7,c	;volatile
  4210                           
  4211                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4212   002482  9C7F               	bcf	127,6,c	;volatile
  4213   002484                     
  4214                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4215   002484  0E05               	movlw	5
  4216   002486  010E               	movlb	14	; () banked
  4217   002488  6F74               	movwf	116,b	;volatile
  4218                           
  4219                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4220   00248A  0E06               	movlw	6
  4221   00248C  6F76               	movwf	118,b	;volatile
  4222                           
  4223                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4224   00248E  0E07               	movlw	7
  4225   002490  6F69               	movwf	105,b	;volatile
  4226                           
  4227                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4228   002492  0E08               	movlw	8
  4229   002494  6F88               	movwf	136,b	;volatile
  4230                           
  4231                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  4232   002496  50BD               	movf	189,w,c	;volatile
  4233   002498  0B8F               	andlw	-113
  4234   00249A  0940               	iorlw	64
  4235   00249C  6EBD               	movwf	189,c	;volatile
  4236                           
  4237                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  4238   00249E  0EE0               	movlw	-32
  4239   0024A0  16BE               	andwf	190,f,c	;volatile
  4240                           
  4241                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  4242   0024A2  50BF               	movf	191,w,c	;volatile
  4243   0024A4  0BF0               	andlw	-16
  4244   0024A6  0901               	iorlw	1
  4245   0024A8  6EBF               	movwf	191,c	;volatile
  4246   0024AA                     
  4247                           ; BSR set to: 14
  4248                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  4249   0024AA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4250   0024AE                     
  4251                           ; BSR set to: 14
  4252                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  4253   0024AE  8EBD               	bsf	189,7,c	;volatile
  4254                           
  4255                           ;dc_motor.c: 35:     CCPR1H=0;
  4256   0024B0  0E00               	movlw	0
  4257   0024B2  6EAA               	movwf	170,c	;volatile
  4258                           
  4259                           ;dc_motor.c: 36:     CCPR2H=0;
  4260   0024B4  0E00               	movlw	0
  4261   0024B6  6EA6               	movwf	166,c	;volatile
  4262                           
  4263                           ;dc_motor.c: 37:     CCPR3H=0;
  4264   0024B8  0E00               	movlw	0
  4265   0024BA  010F               	movlb	15	; () banked
  4266   0024BC  6F25               	movwf	37,b	;volatile
  4267                           
  4268                           ;dc_motor.c: 38:     CCPR4H=0;
  4269   0024BE  0E00               	movlw	0
  4270   0024C0  6F21               	movwf	33,b	;volatile
  4271                           
  4272                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  4273   0024C2  0EFC               	movlw	-4
  4274   0024C4  16AD               	andwf	173,f,c	;volatile
  4275                           
  4276                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  4277   0024C6  0EF3               	movlw	-13
  4278   0024C8  16AD               	andwf	173,f,c	;volatile
  4279                           
  4280                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  4281   0024CA  0ECF               	movlw	-49
  4282   0024CC  16AD               	andwf	173,f,c	;volatile
  4283                           
  4284                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  4285   0024CE  0E3F               	movlw	-193
  4286   0024D0  16AD               	andwf	173,f,c	;volatile
  4287   0024D2                     
  4288                           ; BSR set to: 15
  4289                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  4290   0024D2  88AB               	bsf	171,4,c	;volatile
  4291                           
  4292                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  4293   0024D4  50AB               	movf	171,w,c	;volatile
  4294   0024D6  0BF0               	andlw	-16
  4295   0024D8  090C               	iorlw	12
  4296   0024DA  6EAB               	movwf	171,c	;volatile
  4297   0024DC                     
  4298                           ; BSR set to: 15
  4299                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  4300   0024DC  8EAB               	bsf	171,7,c	;volatile
  4301   0024DE                     
  4302                           ; BSR set to: 15
  4303                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  4304   0024DE  88A7               	bsf	167,4,c	;volatile
  4305                           
  4306                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  4307   0024E0  50A7               	movf	167,w,c	;volatile
  4308   0024E2  0BF0               	andlw	-16
  4309   0024E4  090C               	iorlw	12
  4310   0024E6  6EA7               	movwf	167,c	;volatile
  4311   0024E8                     
  4312                           ; BSR set to: 15
  4313                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  4314   0024E8  8EA7               	bsf	167,7,c	;volatile
  4315   0024EA                     
  4316                           ; BSR set to: 15
  4317                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  4318   0024EA  8926               	bsf	38,4,b	;volatile
  4319                           
  4320                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  4321   0024EC  5126               	movf	38,w,b	;volatile
  4322   0024EE  0BF0               	andlw	-16
  4323   0024F0  090C               	iorlw	12
  4324   0024F2  6F26               	movwf	38,b	;volatile
  4325   0024F4                     
  4326                           ; BSR set to: 15
  4327                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  4328   0024F4  8F26               	bsf	38,7,b	;volatile
  4329   0024F6                     
  4330                           ; BSR set to: 15
  4331                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  4332   0024F6  8922               	bsf	34,4,b	;volatile
  4333                           
  4334                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  4335   0024F8  5122               	movf	34,w,b	;volatile
  4336   0024FA  0BF0               	andlw	-16
  4337   0024FC  090C               	iorlw	12
  4338   0024FE  6F22               	movwf	34,b	;volatile
  4339   002500                     
  4340                           ; BSR set to: 15
  4341                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  4342   002500  8F22               	bsf	34,7,b	;volatile
  4343   002502                     
  4344                           ; BSR set to: 15
  4345   002502  0012               	return		;funcret
  4346   002504                     __end_of_initDCmotorsPWM:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _getRGBCval *****************
  4350 ;; Defined at:
  4351 ;;		line 84 in file "color.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  4354 ;;		 -> main@measured_colour(8), 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;Total ram usage:        1 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 4
  4373 ;; This function calls:
  4374 ;;		_color_read_Blue
  4375 ;;		_color_read_Clear
  4376 ;;		_color_read_Green
  4377 ;;		_color_read_Red
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;;		_wait_for_wall
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text22
  4385   0027C6                     __ptext22:
  4386                           	callstack 0
  4387   0027C6                     _getRGBCval:
  4388                           	callstack 26
  4389   0027C6                     
  4390                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  4391   0027C6  EC62  F014         	call	_color_read_Red	;wreg free
  4392   0027CA  500C               	movf	getRGBCval@p^0,w,c
  4393   0027CC  6ED9               	movwf	fsr2l,c
  4394   0027CE  6ADA               	clrf	fsr2h,c
  4395   0027D0  C005  FFDE         	movff	?_color_read_Red,postinc2
  4396   0027D4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4397                           
  4398                           ;color.c: 87:     p->G = color_read_Green();
  4399   0027D8  EC8A  F014         	call	_color_read_Green	;wreg free
  4400   0027DC  500C               	movf	getRGBCval@p^0,w,c
  4401   0027DE  6ED9               	movwf	fsr2l,c
  4402   0027E0  6ADA               	clrf	fsr2h,c
  4403   0027E2  0E02               	movlw	2
  4404   0027E4  26D9               	addwf	fsr2l,f,c
  4405   0027E6  C005  FFDE         	movff	?_color_read_Green,postinc2
  4406   0027EA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4407                           
  4408                           ;color.c: 88:     p->B = color_read_Blue();
  4409   0027EE  ECDA  F014         	call	_color_read_Blue	;wreg free
  4410   0027F2  500C               	movf	getRGBCval@p^0,w,c
  4411   0027F4  6ED9               	movwf	fsr2l,c
  4412   0027F6  6ADA               	clrf	fsr2h,c
  4413   0027F8  0E04               	movlw	4
  4414   0027FA  26D9               	addwf	fsr2l,f,c
  4415   0027FC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4416   002800  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4417                           
  4418                           ;color.c: 89:     p->C = color_read_Clear();
  4419   002804  ECB2  F014         	call	_color_read_Clear	;wreg free
  4420   002808  500C               	movf	getRGBCval@p^0,w,c
  4421   00280A  6ED9               	movwf	fsr2l,c
  4422   00280C  6ADA               	clrf	fsr2h,c
  4423   00280E  0E06               	movlw	6
  4424   002810  26D9               	addwf	fsr2l,f,c
  4425   002812  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4426   002816  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4427   00281A  0012               	return		;funcret
  4428   00281C                     __end_of_getRGBCval:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function _color_read_Red *****************
  4432 ;; Defined at:
  4433 ;;		line 28 in file "color.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  tmp             2    9[COMRAM] unsigned int 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  2    4[COMRAM] unsigned int 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;Total ram usage:        7 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 3
  4454 ;; This function calls:
  4455 ;;		_I2C_2_Master_Read
  4456 ;;		_I2C_2_Master_RepStart
  4457 ;;		_I2C_2_Master_Start
  4458 ;;		_I2C_2_Master_Stop
  4459 ;;		_I2C_2_Master_Write
  4460 ;; This function is called by:
  4461 ;;		_getRGBCval
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text23
  4466   0028C4                     __ptext23:
  4467                           	callstack 0
  4468   0028C4                     _color_read_Red:
  4469                           	callstack 26
  4470   0028C4                     
  4471                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  4472   0028C4  EC76  F016         	call	_I2C_2_Master_Start	;wreg free
  4473                           
  4474                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  4475   0028C8  0E52               	movlw	82
  4476   0028CA  EC5A  F016         	call	_I2C_2_Master_Write
  4477                           
  4478                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  4479   0028CE  0EB6               	movlw	182
  4480   0028D0  EC5A  F016         	call	_I2C_2_Master_Write
  4481                           
  4482                           ;color.c: 34:  I2C_2_Master_RepStart();
  4483   0028D4  EC6C  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4484                           
  4485                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  4486   0028D8  0E53               	movlw	83
  4487   0028DA  EC5A  F016         	call	_I2C_2_Master_Write
  4488                           
  4489                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  4490   0028DE  0E01               	movlw	1
  4491   0028E0  EC4E  F015         	call	_I2C_2_Master_Read
  4492   0028E4  6E07               	movwf	??_color_read_Red^0,c
  4493   0028E6  5007               	movf	??_color_read_Red^0,w,c
  4494   0028E8  6E0A               	movwf	color_read_Red@tmp^0,c
  4495   0028EA  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4496                           
  4497                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4498   0028EC  0E00               	movlw	0
  4499   0028EE  EC4E  F015         	call	_I2C_2_Master_Read
  4500   0028F2  6E07               	movwf	??_color_read_Red^0,c
  4501   0028F4  5007               	movf	??_color_read_Red^0,w,c
  4502   0028F6  6E09               	movwf	(??_color_read_Red+2)^0,c
  4503   0028F8  6A08               	clrf	(??_color_read_Red+1)^0,c
  4504   0028FA  500A               	movf	color_read_Red@tmp^0,w,c
  4505   0028FC  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4506   0028FE  6E0A               	movwf	color_read_Red@tmp^0,c
  4507   002900  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4508   002902  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4509   002904  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4510                           
  4511                           ;color.c: 38:  I2C_2_Master_Stop();
  4512   002906  EC71  F016         	call	_I2C_2_Master_Stop	;wreg free
  4513   00290A                     
  4514                           ;color.c: 39:  return tmp;
  4515   00290A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4516   00290E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4517   002912  0012               	return		;funcret
  4518   002914                     __end_of_color_read_Red:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _color_read_Green *****************
  4522 ;; Defined at:
  4523 ;;		line 42 in file "color.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  tmp             2    9[COMRAM] unsigned int 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  2    4[COMRAM] unsigned int 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;Total ram usage:        7 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 3
  4544 ;; This function calls:
  4545 ;;		_I2C_2_Master_Read
  4546 ;;		_I2C_2_Master_RepStart
  4547 ;;		_I2C_2_Master_Start
  4548 ;;		_I2C_2_Master_Stop
  4549 ;;		_I2C_2_Master_Write
  4550 ;; This function is called by:
  4551 ;;		_getRGBCval
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text24
  4556   002914                     __ptext24:
  4557                           	callstack 0
  4558   002914                     _color_read_Green:
  4559                           	callstack 26
  4560   002914                     
  4561                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  4562   002914  EC76  F016         	call	_I2C_2_Master_Start	;wreg free
  4563                           
  4564                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  4565   002918  0E52               	movlw	82
  4566   00291A  EC5A  F016         	call	_I2C_2_Master_Write
  4567                           
  4568                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x18);
  4569   00291E  0EB8               	movlw	184
  4570   002920  EC5A  F016         	call	_I2C_2_Master_Write
  4571                           
  4572                           ;color.c: 48:  I2C_2_Master_RepStart();
  4573   002924  EC6C  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4574                           
  4575                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  4576   002928  0E53               	movlw	83
  4577   00292A  EC5A  F016         	call	_I2C_2_Master_Write
  4578                           
  4579                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  4580   00292E  0E01               	movlw	1
  4581   002930  EC4E  F015         	call	_I2C_2_Master_Read
  4582   002934  6E07               	movwf	??_color_read_Green^0,c
  4583   002936  5007               	movf	??_color_read_Green^0,w,c
  4584   002938  6E0A               	movwf	color_read_Green@tmp^0,c
  4585   00293A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4586                           
  4587                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4588   00293C  0E00               	movlw	0
  4589   00293E  EC4E  F015         	call	_I2C_2_Master_Read
  4590   002942  6E07               	movwf	??_color_read_Green^0,c
  4591   002944  5007               	movf	??_color_read_Green^0,w,c
  4592   002946  6E09               	movwf	(??_color_read_Green+2)^0,c
  4593   002948  6A08               	clrf	(??_color_read_Green+1)^0,c
  4594   00294A  500A               	movf	color_read_Green@tmp^0,w,c
  4595   00294C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4596   00294E  6E0A               	movwf	color_read_Green@tmp^0,c
  4597   002950  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4598   002952  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4599   002954  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4600                           
  4601                           ;color.c: 52:  I2C_2_Master_Stop();
  4602   002956  EC71  F016         	call	_I2C_2_Master_Stop	;wreg free
  4603   00295A                     
  4604                           ;color.c: 53:  return tmp;
  4605   00295A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4606   00295E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4607   002962  0012               	return		;funcret
  4608   002964                     __end_of_color_read_Green:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _color_read_Clear *****************
  4612 ;; Defined at:
  4613 ;;		line 70 in file "color.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  tmp             2    9[COMRAM] unsigned int 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  2    4[COMRAM] unsigned int 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;Total ram usage:        7 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 3
  4634 ;; This function calls:
  4635 ;;		_I2C_2_Master_Read
  4636 ;;		_I2C_2_Master_RepStart
  4637 ;;		_I2C_2_Master_Start
  4638 ;;		_I2C_2_Master_Stop
  4639 ;;		_I2C_2_Master_Write
  4640 ;; This function is called by:
  4641 ;;		_getRGBCval
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text25
  4646   002964                     __ptext25:
  4647                           	callstack 0
  4648   002964                     _color_read_Clear:
  4649                           	callstack 26
  4650   002964                     
  4651                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  4652   002964  EC76  F016         	call	_I2C_2_Master_Start	;wreg free
  4653                           
  4654                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  4655   002968  0E52               	movlw	82
  4656   00296A  EC5A  F016         	call	_I2C_2_Master_Write
  4657                           
  4658                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  4659   00296E  0EB4               	movlw	180
  4660   002970  EC5A  F016         	call	_I2C_2_Master_Write
  4661                           
  4662                           ;color.c: 76:  I2C_2_Master_RepStart();
  4663   002974  EC6C  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4664                           
  4665                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  4666   002978  0E53               	movlw	83
  4667   00297A  EC5A  F016         	call	_I2C_2_Master_Write
  4668                           
  4669                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  4670   00297E  0E01               	movlw	1
  4671   002980  EC4E  F015         	call	_I2C_2_Master_Read
  4672   002984  6E07               	movwf	??_color_read_Clear^0,c
  4673   002986  5007               	movf	??_color_read_Clear^0,w,c
  4674   002988  6E0A               	movwf	color_read_Clear@tmp^0,c
  4675   00298A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4676                           
  4677                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4678   00298C  0E00               	movlw	0
  4679   00298E  EC4E  F015         	call	_I2C_2_Master_Read
  4680   002992  6E07               	movwf	??_color_read_Clear^0,c
  4681   002994  5007               	movf	??_color_read_Clear^0,w,c
  4682   002996  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4683   002998  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4684   00299A  500A               	movf	color_read_Clear@tmp^0,w,c
  4685   00299C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4686   00299E  6E0A               	movwf	color_read_Clear@tmp^0,c
  4687   0029A0  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4688   0029A2  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4689   0029A4  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4690                           
  4691                           ;color.c: 80:  I2C_2_Master_Stop();
  4692   0029A6  EC71  F016         	call	_I2C_2_Master_Stop	;wreg free
  4693   0029AA                     
  4694                           ;color.c: 81:  return tmp;
  4695   0029AA  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4696   0029AE  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4697   0029B2  0012               	return		;funcret
  4698   0029B4                     __end_of_color_read_Clear:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _color_read_Blue *****************
  4702 ;; Defined at:
  4703 ;;		line 56 in file "color.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  tmp             2    9[COMRAM] unsigned int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    4[COMRAM] unsigned int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;Total ram usage:        7 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 3
  4724 ;; This function calls:
  4725 ;;		_I2C_2_Master_Read
  4726 ;;		_I2C_2_Master_RepStart
  4727 ;;		_I2C_2_Master_Start
  4728 ;;		_I2C_2_Master_Stop
  4729 ;;		_I2C_2_Master_Write
  4730 ;; This function is called by:
  4731 ;;		_getRGBCval
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text26
  4736   0029B4                     __ptext26:
  4737                           	callstack 0
  4738   0029B4                     _color_read_Blue:
  4739                           	callstack 26
  4740   0029B4                     
  4741                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  4742   0029B4  EC76  F016         	call	_I2C_2_Master_Start	;wreg free
  4743                           
  4744                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  4745   0029B8  0E52               	movlw	82
  4746   0029BA  EC5A  F016         	call	_I2C_2_Master_Write
  4747                           
  4748                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x1A);
  4749   0029BE  0EBA               	movlw	186
  4750   0029C0  EC5A  F016         	call	_I2C_2_Master_Write
  4751                           
  4752                           ;color.c: 62:  I2C_2_Master_RepStart();
  4753   0029C4  EC6C  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4754                           
  4755                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  4756   0029C8  0E53               	movlw	83
  4757   0029CA  EC5A  F016         	call	_I2C_2_Master_Write
  4758                           
  4759                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  4760   0029CE  0E01               	movlw	1
  4761   0029D0  EC4E  F015         	call	_I2C_2_Master_Read
  4762   0029D4  6E07               	movwf	??_color_read_Blue^0,c
  4763   0029D6  5007               	movf	??_color_read_Blue^0,w,c
  4764   0029D8  6E0A               	movwf	color_read_Blue@tmp^0,c
  4765   0029DA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4766                           
  4767                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4768   0029DC  0E00               	movlw	0
  4769   0029DE  EC4E  F015         	call	_I2C_2_Master_Read
  4770   0029E2  6E07               	movwf	??_color_read_Blue^0,c
  4771   0029E4  5007               	movf	??_color_read_Blue^0,w,c
  4772   0029E6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4773   0029E8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4774   0029EA  500A               	movf	color_read_Blue@tmp^0,w,c
  4775   0029EC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4776   0029EE  6E0A               	movwf	color_read_Blue@tmp^0,c
  4777   0029F0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4778   0029F2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4779   0029F4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4780                           
  4781                           ;color.c: 66:  I2C_2_Master_Stop();
  4782   0029F6  EC71  F016         	call	_I2C_2_Master_Stop	;wreg free
  4783   0029FA                     
  4784                           ;color.c: 67:  return tmp;
  4785   0029FA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4786   0029FE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4787   002A02  0012               	return		;funcret
  4788   002A04                     __end_of_color_read_Blue:
  4789                           	callstack 0
  4790                           
  4791 ;; *************** function _I2C_2_Master_RepStart *****************
  4792 ;; Defined at:
  4793 ;;		line 33 in file "i2c.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 2
  4814 ;; This function calls:
  4815 ;;		_I2C_2_Master_Idle
  4816 ;; This function is called by:
  4817 ;;		_color_read_Red
  4818 ;;		_color_read_Green
  4819 ;;		_color_read_Blue
  4820 ;;		_color_read_Clear
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text27
  4825   002CD8                     __ptext27:
  4826                           	callstack 0
  4827   002CD8                     _I2C_2_Master_RepStart:
  4828                           	callstack 26
  4829   002CD8                     
  4830                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4831   002CD8  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  4832   002CDC                     
  4833                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4834   002CDC  010E               	movlb	14	; () banked
  4835   002CDE  83DA               	bsf	218,1,b	;volatile
  4836   002CE0                     
  4837                           ; BSR set to: 14
  4838   002CE0  0012               	return		;funcret
  4839   002CE2                     __end_of_I2C_2_Master_RepStart:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function _I2C_2_Master_Read *****************
  4843 ;; Defined at:
  4844 ;;		line 51 in file "i2c.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  ack             1    wreg     unsigned char 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  ack             1    2[COMRAM] unsigned char 
  4849 ;;  tmp             1    3[COMRAM] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      unsigned char 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:        3 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 2
  4866 ;; This function calls:
  4867 ;;		_I2C_2_Master_Idle
  4868 ;; This function is called by:
  4869 ;;		_color_read_Red
  4870 ;;		_color_read_Green
  4871 ;;		_color_read_Blue
  4872 ;;		_color_read_Clear
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text28
  4877   002A9C                     __ptext28:
  4878                           	callstack 0
  4879   002A9C                     _I2C_2_Master_Read:
  4880                           	callstack 26
  4881                           
  4882                           ; BSR set to: 14
  4883                           ;incstack = 0
  4884                           ;I2C_2_Master_Read@ack stored from wreg
  4885   002A9C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4886   002A9E                     
  4887                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4888   002A9E  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  4889   002AA2                     
  4890                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4891   002AA2  010E               	movlb	14	; () banked
  4892   002AA4  87DA               	bsf	218,3,b	;volatile
  4893                           
  4894                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4895   002AA6  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  4896   002AAA                     
  4897                           ;i2c.c: 57:   tmp = SSP2BUF;
  4898   002AAA  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4899                           
  4900                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4901   002AAE  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  4902   002AB2                     
  4903                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4904   002AB2  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4905   002AB4  B4D8               	btfsc	status,2,c
  4906   002AB6  EF5F  F015         	goto	u2111
  4907   002ABA  EF63  F015         	goto	u2110
  4908   002ABE                     u2111:
  4909   002ABE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4910   002AC0  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4911   002AC2  EF64  F015         	goto	u2128
  4912   002AC6                     u2110:
  4913   002AC6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4914   002AC8                     u2128:
  4915   002AC8  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4916   002ACA  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4917   002ACC  010E               	movlb	14	; () banked
  4918   002ACE  51DA               	movf	218,w,b	;volatile
  4919   002AD0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4920   002AD2  0BDF               	andlw	-33
  4921   002AD4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4922   002AD6  6FDA               	movwf	218,b	;volatile
  4923   002AD8                     
  4924                           ; BSR set to: 14
  4925                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4926   002AD8  89DA               	bsf	218,4,b	;volatile
  4927   002ADA                     
  4928                           ; BSR set to: 14
  4929                           ;i2c.c: 61:   return tmp;
  4930   002ADA  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4931   002ADC                     
  4932                           ; BSR set to: 14
  4933   002ADC  0012               	return		;funcret
  4934   002ADE                     __end_of_I2C_2_Master_Read:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _getHSVval *****************
  4938 ;; Defined at:
  4939 ;;		line 136 in file "color.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  4942 ;;		 -> main@HSV_colour(6), 
  4943 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  4944 ;;		 -> main@measured_colour(8), 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  temp            4   51[COMRAM] unsigned long 
  4947 ;;  temp            4   47[COMRAM] unsigned long 
  4948 ;;  temp            4   43[COMRAM] unsigned long 
  4949 ;;  temp            4   39[COMRAM] unsigned long 
  4950 ;;  temp            4   55[COMRAM] unsigned long 
  4951 ;;  temp            4   35[COMRAM] unsigned long 
  4952 ;;  temp            4   31[COMRAM] unsigned long 
  4953 ;;  C               2   61[COMRAM] unsigned int 
  4954 ;;  M               2   59[COMRAM] unsigned int 
  4955 ;;  Hz              2    0        unsigned int 
  4956 ;;  H               2   29[COMRAM] unsigned int 
  4957 ;;  S               2   27[COMRAM] unsigned int 
  4958 ;;  m               2   25[COMRAM] unsigned int 
  4959 ;;  Sz              2   23[COMRAM] unsigned int 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Totals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;Total ram usage:       50 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 3
  4976 ;; This function calls:
  4977 ;;		___lldiv
  4978 ;;		___lmul
  4979 ;;		_maxRGB
  4980 ;;		_minRGB
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text29
  4987   000E24                     __ptext29:
  4988                           	callstack 0
  4989   000E24                     _getHSVval:
  4990                           	callstack 27
  4991   000E24                     
  4992                           ;color.c: 139:     unsigned int Sz = 100;
  4993   000E24  0E00               	movlw	0
  4994   000E26  6E19               	movwf	(getHSVval@Sz+1)^0,c
  4995   000E28  0E64               	movlw	100
  4996   000E2A  6E18               	movwf	getHSVval@Sz^0,c
  4997                           
  4998                           ;color.c: 140:     unsigned int H = 0;
  4999   000E2C  0E00               	movlw	0
  5000   000E2E  6E1F               	movwf	(getHSVval@H+1)^0,c
  5001   000E30  0E00               	movlw	0
  5002   000E32  6E1E               	movwf	getHSVval@H^0,c
  5003                           
  5004                           ;color.c: 141:     unsigned int S = 0;
  5005   000E34  0E00               	movlw	0
  5006   000E36  6E1D               	movwf	(getHSVval@S+1)^0,c
  5007   000E38  0E00               	movlw	0
  5008   000E3A  6E1C               	movwf	getHSVval@S^0,c
  5009   000E3C                     
  5010                           ;color.c: 143:     unsigned int M = maxRGB(p2);
  5011   000E3C  C00F  F007         	movff	getHSVval@p2,maxRGB@p
  5012   000E40  EC38  F014         	call	_maxRGB	;wreg free
  5013   000E44  C007  F03C         	movff	?_maxRGB,getHSVval@M
  5014   000E48  C008  F03D         	movff	?_maxRGB+1,getHSVval@M+1
  5015   000E4C                     
  5016                           ;color.c: 144:     unsigned int m = minRGB(p2);
  5017   000E4C  C00F  F007         	movff	getHSVval@p2,minRGB@p
  5018   000E50  EC0E  F014         	call	_minRGB	;wreg free
  5019   000E54  C007  F01A         	movff	?_minRGB,getHSVval@m
  5020   000E58  C008  F01B         	movff	?_minRGB+1,getHSVval@m+1
  5021   000E5C                     
  5022                           ;color.c: 145:     unsigned int C = M - m;
  5023   000E5C  501A               	movf	getHSVval@m^0,w,c
  5024   000E5E  5C3C               	subwf	getHSVval@M^0,w,c
  5025   000E60  6E3E               	movwf	getHSVval@C^0,c
  5026   000E62  501B               	movf	(getHSVval@m+1)^0,w,c
  5027   000E64  583D               	subwfb	(getHSVval@M+1)^0,w,c
  5028   000E66  6E3F               	movwf	(getHSVval@C+1)^0,c
  5029   000E68                     
  5030                           ;color.c: 147:     if (C == 0) {
  5031   000E68  503E               	movf	getHSVval@C^0,w,c
  5032   000E6A  103F               	iorwf	(getHSVval@C+1)^0,w,c
  5033   000E6C  A4D8               	btfss	status,2,c
  5034   000E6E  EF3B  F007         	goto	u2761
  5035   000E72  EF3D  F007         	goto	u2760
  5036   000E76                     u2761:
  5037   000E76  EF43  F007         	goto	l3652
  5038   000E7A                     u2760:
  5039   000E7A                     
  5040                           ;color.c: 148:         H = 0;
  5041   000E7A  0E00               	movlw	0
  5042   000E7C  6E1F               	movwf	(getHSVval@H+1)^0,c
  5043   000E7E  0E00               	movlw	0
  5044   000E80  6E1E               	movwf	getHSVval@H^0,c
  5045                           
  5046                           ;color.c: 149:     } else {
  5047   000E82  EF13  F00A         	goto	l3736
  5048   000E86                     l3652:
  5049                           
  5050                           ;color.c: 150:         if (M == p2->R) {
  5051   000E86  500F               	movf	getHSVval@p2^0,w,c
  5052   000E88  6ED9               	movwf	fsr2l,c
  5053   000E8A  6ADA               	clrf	fsr2h,c
  5054   000E8C  503C               	movf	getHSVval@M^0,w,c
  5055   000E8E  18DE               	xorwf	postinc2,w,c
  5056   000E90  E107               	bnz	u2771
  5057   000E92  503D               	movf	(getHSVval@M+1)^0,w,c
  5058   000E94  18DE               	xorwf	postinc2,w,c
  5059   000E96  A4D8               	btfss	status,2,c
  5060   000E98  EF50  F007         	goto	u2771
  5061   000E9C  EF52  F007         	goto	u2770
  5062   000EA0                     u2771:
  5063   000EA0  EF3F  F008         	goto	l3680
  5064   000EA4                     u2770:
  5065   000EA4                     
  5066                           ;color.c: 151:             if (p2->G >= p2->B) {
  5067   000EA4  500F               	movf	getHSVval@p2^0,w,c
  5068   000EA6  6ED9               	movwf	fsr2l,c
  5069   000EA8  6ADA               	clrf	fsr2h,c
  5070   000EAA  0E04               	movlw	4
  5071   000EAC  26D9               	addwf	fsr2l,f,c
  5072   000EAE  500F               	movf	getHSVval@p2^0,w,c
  5073   000EB0  6EE1               	movwf	fsr1l,c
  5074   000EB2  6AE2               	clrf	fsr1h,c
  5075   000EB4  0E02               	movlw	2
  5076   000EB6  26E1               	addwf	fsr1l,f,c
  5077   000EB8  50DE               	movf	postinc2,w,c
  5078   000EBA  5CE6               	subwf	postinc1,w,c
  5079   000EBC  50DE               	movf	postinc2,w,c
  5080   000EBE  58E6               	subwfb	postinc1,w,c
  5081   000EC0  A0D8               	btfss	status,0,c
  5082   000EC2  EF65  F007         	goto	u2781
  5083   000EC6  EF67  F007         	goto	u2780
  5084   000ECA                     u2781:
  5085   000ECA  EFC7  F007         	goto	l3668
  5086   000ECE                     u2780:
  5087   000ECE                     
  5088                           ;color.c: 155:                 temp *= 0;
  5089   000ECE  0E00               	movlw	0
  5090   000ED0  6E24               	movwf	getHSVval@temp^0,c
  5091   000ED2  0E00               	movlw	0
  5092   000ED4  6E25               	movwf	(getHSVval@temp+1)^0,c
  5093   000ED6  0E00               	movlw	0
  5094   000ED8  6E26               	movwf	(getHSVval@temp+2)^0,c
  5095   000EDA  0E00               	movlw	0
  5096   000EDC  6E27               	movwf	(getHSVval@temp+3)^0,c
  5097   000EDE                     
  5098                           ;color.c: 156:                 temp += (unsigned long)(p2->G - p2->B);
  5099   000EDE  500F               	movf	getHSVval@p2^0,w,c
  5100   000EE0  6ED9               	movwf	fsr2l,c
  5101   000EE2  6ADA               	clrf	fsr2h,c
  5102   000EE4  0E04               	movlw	4
  5103   000EE6  26D9               	addwf	fsr2l,f,c
  5104   000EE8  CFDE F010          	movff	postinc2,??_getHSVval
  5105   000EEC  CFDD F011          	movff	postdec2,??_getHSVval+1
  5106   000EF0  500F               	movf	getHSVval@p2^0,w,c
  5107   000EF2  6ED9               	movwf	fsr2l,c
  5108   000EF4  6ADA               	clrf	fsr2h,c
  5109   000EF6  0E02               	movlw	2
  5110   000EF8  26D9               	addwf	fsr2l,f,c
  5111   000EFA  CFDE F012          	movff	postinc2,??_getHSVval+2
  5112   000EFE  CFDD F013          	movff	postdec2,??_getHSVval+3
  5113   000F02  5010               	movf	??_getHSVval^0,w,c
  5114   000F04  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5115   000F06  6E14               	movwf	(??_getHSVval+4)^0,c
  5116   000F08  5011               	movf	(??_getHSVval+1)^0,w,c
  5117   000F0A  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5118   000F0C  6E15               	movwf	(??_getHSVval+5)^0,c
  5119   000F0E  5014               	movf	(??_getHSVval+4)^0,w,c
  5120   000F10  2624               	addwf	getHSVval@temp^0,f,c
  5121   000F12  5015               	movf	(??_getHSVval+5)^0,w,c
  5122   000F14  2225               	addwfc	(getHSVval@temp+1)^0,f,c
  5123   000F16  0E00               	movlw	0
  5124   000F18  2226               	addwfc	(getHSVval@temp+2)^0,f,c
  5125   000F1A  0E00               	movlw	0
  5126   000F1C  2227               	addwfc	(getHSVval@temp+3)^0,f,c
  5127   000F1E                     
  5128                           ;color.c: 157:                 temp *= (unsigned long)Hz;
  5129   000F1E  C024  F001         	movff	getHSVval@temp,___lmul@multiplier
  5130   000F22  C025  F002         	movff	getHSVval@temp+1,___lmul@multiplier+1
  5131   000F26  C026  F003         	movff	getHSVval@temp+2,___lmul@multiplier+2
  5132   000F2A  C027  F004         	movff	getHSVval@temp+3,___lmul@multiplier+3
  5133   000F2E  0E3C               	movlw	60
  5134   000F30  6E05               	movwf	___lmul@multiplicand^0,c
  5135   000F32  0E00               	movlw	0
  5136   000F34  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5137   000F36  0E00               	movlw	0
  5138   000F38  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5139   000F3A  0E00               	movlw	0
  5140   000F3C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5141   000F3E  ECF1  F012         	call	___lmul	;wreg free
  5142   000F42  C001  F024         	movff	?___lmul,getHSVval@temp
  5143   000F46  C002  F025         	movff	?___lmul+1,getHSVval@temp+1
  5144   000F4A  C003  F026         	movff	?___lmul+2,getHSVval@temp+2
  5145   000F4E  C004  F027         	movff	?___lmul+3,getHSVval@temp+3
  5146   000F52                     
  5147                           ;color.c: 158:                 temp /= (unsigned long)C;
  5148   000F52  C024  F001         	movff	getHSVval@temp,___lldiv@dividend
  5149   000F56  C025  F002         	movff	getHSVval@temp+1,___lldiv@dividend+1
  5150   000F5A  C026  F003         	movff	getHSVval@temp+2,___lldiv@dividend+2
  5151   000F5E  C027  F004         	movff	getHSVval@temp+3,___lldiv@dividend+3
  5152   000F62  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5153   000F66  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5154   000F6A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5155   000F6C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5156   000F6E  ECE8  F011         	call	___lldiv	;wreg free
  5157   000F72  C001  F024         	movff	?___lldiv,getHSVval@temp
  5158   000F76  C002  F025         	movff	?___lldiv+1,getHSVval@temp+1
  5159   000F7A  C003  F026         	movff	?___lldiv+2,getHSVval@temp+2
  5160   000F7E  C004  F027         	movff	?___lldiv+3,getHSVval@temp+3
  5161   000F82                     
  5162                           ;color.c: 159:                 H = (unsigned int)temp;
  5163   000F82  C024  F01E         	movff	getHSVval@temp,getHSVval@H
  5164   000F86  C025  F01F         	movff	getHSVval@temp+1,getHSVval@H+1
  5165                           
  5166                           ;color.c: 160:             } else {
  5167   000F8A  EF3F  F008         	goto	l3680
  5168   000F8E                     l3668:
  5169                           
  5170                           ;color.c: 162:                 unsigned long temp;;color.c: 163:                 temp = 
      +                          (unsigned long)C;
  5171   000F8E  C03E  F038         	movff	getHSVval@C,getHSVval@temp_626
  5172   000F92  C03F  F039         	movff	getHSVval@C+1,getHSVval@temp_626+1
  5173   000F96  6A3A               	clrf	(getHSVval@temp_626+2)^0,c
  5174   000F98  6A3B               	clrf	(getHSVval@temp_626+3)^0,c
  5175   000F9A                     
  5176                           ;color.c: 164:                 temp *= 6;
  5177   000F9A  C038  F001         	movff	getHSVval@temp_626,___lmul@multiplier
  5178   000F9E  C039  F002         	movff	getHSVval@temp_626+1,___lmul@multiplier+1
  5179   000FA2  C03A  F003         	movff	getHSVval@temp_626+2,___lmul@multiplier+2
  5180   000FA6  C03B  F004         	movff	getHSVval@temp_626+3,___lmul@multiplier+3
  5181   000FAA  0E06               	movlw	6
  5182   000FAC  6E05               	movwf	___lmul@multiplicand^0,c
  5183   000FAE  0E00               	movlw	0
  5184   000FB0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5185   000FB2  0E00               	movlw	0
  5186   000FB4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5187   000FB6  0E00               	movlw	0
  5188   000FB8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5189   000FBA  ECF1  F012         	call	___lmul	;wreg free
  5190   000FBE  C001  F038         	movff	?___lmul,getHSVval@temp_626
  5191   000FC2  C002  F039         	movff	?___lmul+1,getHSVval@temp_626+1
  5192   000FC6  C003  F03A         	movff	?___lmul+2,getHSVval@temp_626+2
  5193   000FCA  C004  F03B         	movff	?___lmul+3,getHSVval@temp_626+3
  5194   000FCE                     
  5195                           ;color.c: 165:                 temp -= (unsigned long)(p2->B - p2->G);
  5196   000FCE  500F               	movf	getHSVval@p2^0,w,c
  5197   000FD0  6ED9               	movwf	fsr2l,c
  5198   000FD2  6ADA               	clrf	fsr2h,c
  5199   000FD4  0E02               	movlw	2
  5200   000FD6  26D9               	addwf	fsr2l,f,c
  5201   000FD8  CFDE F010          	movff	postinc2,??_getHSVval
  5202   000FDC  CFDD F011          	movff	postdec2,??_getHSVval+1
  5203   000FE0  500F               	movf	getHSVval@p2^0,w,c
  5204   000FE2  6ED9               	movwf	fsr2l,c
  5205   000FE4  6ADA               	clrf	fsr2h,c
  5206   000FE6  0E04               	movlw	4
  5207   000FE8  26D9               	addwf	fsr2l,f,c
  5208   000FEA  CFDE F012          	movff	postinc2,??_getHSVval+2
  5209   000FEE  CFDD F013          	movff	postdec2,??_getHSVval+3
  5210   000FF2  5010               	movf	??_getHSVval^0,w,c
  5211   000FF4  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5212   000FF6  6E14               	movwf	(??_getHSVval+4)^0,c
  5213   000FF8  5011               	movf	(??_getHSVval+1)^0,w,c
  5214   000FFA  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5215   000FFC  6E15               	movwf	(??_getHSVval+5)^0,c
  5216   000FFE  6A16               	clrf	(??_getHSVval+6)^0,c
  5217   001000  6A17               	clrf	(??_getHSVval+7)^0,c
  5218   001002  5014               	movf	(??_getHSVval+4)^0,w,c
  5219   001004  5E38               	subwf	getHSVval@temp_626^0,f,c
  5220   001006  5015               	movf	(??_getHSVval+5)^0,w,c
  5221   001008  5A39               	subwfb	(getHSVval@temp_626+1)^0,f,c
  5222   00100A  5016               	movf	(??_getHSVval+6)^0,w,c
  5223   00100C  5A3A               	subwfb	(getHSVval@temp_626+2)^0,f,c
  5224   00100E  5017               	movf	(??_getHSVval+7)^0,w,c
  5225   001010  5A3B               	subwfb	(getHSVval@temp_626+3)^0,f,c
  5226   001012                     
  5227                           ;color.c: 166:                 temp *= (unsigned long)Hz;
  5228   001012  C038  F001         	movff	getHSVval@temp_626,___lmul@multiplier
  5229   001016  C039  F002         	movff	getHSVval@temp_626+1,___lmul@multiplier+1
  5230   00101A  C03A  F003         	movff	getHSVval@temp_626+2,___lmul@multiplier+2
  5231   00101E  C03B  F004         	movff	getHSVval@temp_626+3,___lmul@multiplier+3
  5232   001022  0E3C               	movlw	60
  5233   001024  6E05               	movwf	___lmul@multiplicand^0,c
  5234   001026  0E00               	movlw	0
  5235   001028  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5236   00102A  0E00               	movlw	0
  5237   00102C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5238   00102E  0E00               	movlw	0
  5239   001030  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5240   001032  ECF1  F012         	call	___lmul	;wreg free
  5241   001036  C001  F038         	movff	?___lmul,getHSVval@temp_626
  5242   00103A  C002  F039         	movff	?___lmul+1,getHSVval@temp_626+1
  5243   00103E  C003  F03A         	movff	?___lmul+2,getHSVval@temp_626+2
  5244   001042  C004  F03B         	movff	?___lmul+3,getHSVval@temp_626+3
  5245   001046                     
  5246                           ;color.c: 167:                 temp /= (unsigned long)C;
  5247   001046  C038  F001         	movff	getHSVval@temp_626,___lldiv@dividend
  5248   00104A  C039  F002         	movff	getHSVval@temp_626+1,___lldiv@dividend+1
  5249   00104E  C03A  F003         	movff	getHSVval@temp_626+2,___lldiv@dividend+2
  5250   001052  C03B  F004         	movff	getHSVval@temp_626+3,___lldiv@dividend+3
  5251   001056  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5252   00105A  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5253   00105E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5254   001060  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5255   001062  ECE8  F011         	call	___lldiv	;wreg free
  5256   001066  C001  F038         	movff	?___lldiv,getHSVval@temp_626
  5257   00106A  C002  F039         	movff	?___lldiv+1,getHSVval@temp_626+1
  5258   00106E  C003  F03A         	movff	?___lldiv+2,getHSVval@temp_626+2
  5259   001072  C004  F03B         	movff	?___lldiv+3,getHSVval@temp_626+3
  5260   001076                     
  5261                           ;color.c: 168:                 H = (unsigned int)temp;
  5262   001076  C038  F01E         	movff	getHSVval@temp_626,getHSVval@H
  5263   00107A  C039  F01F         	movff	getHSVval@temp_626+1,getHSVval@H+1
  5264   00107E                     l3680:
  5265                           
  5266                           ;color.c: 171:         if (M == p2->G) {
  5267   00107E  500F               	movf	getHSVval@p2^0,w,c
  5268   001080  6ED9               	movwf	fsr2l,c
  5269   001082  6ADA               	clrf	fsr2h,c
  5270   001084  0E02               	movlw	2
  5271   001086  26D9               	addwf	fsr2l,f,c
  5272   001088  503C               	movf	getHSVval@M^0,w,c
  5273   00108A  18DE               	xorwf	postinc2,w,c
  5274   00108C  E107               	bnz	u2791
  5275   00108E  503D               	movf	(getHSVval@M+1)^0,w,c
  5276   001090  18DE               	xorwf	postinc2,w,c
  5277   001092  A4D8               	btfss	status,2,c
  5278   001094  EF4E  F008         	goto	u2791
  5279   001098  EF50  F008         	goto	u2790
  5280   00109C                     u2791:
  5281   00109C  EF25  F009         	goto	l3708
  5282   0010A0                     u2790:
  5283   0010A0                     
  5284                           ;color.c: 172:             if (p2->B >= p2->R) {
  5285   0010A0  500F               	movf	getHSVval@p2^0,w,c
  5286   0010A2  6ED9               	movwf	fsr2l,c
  5287   0010A4  6ADA               	clrf	fsr2h,c
  5288   0010A6  500F               	movf	getHSVval@p2^0,w,c
  5289   0010A8  6EE1               	movwf	fsr1l,c
  5290   0010AA  6AE2               	clrf	fsr1h,c
  5291   0010AC  0E04               	movlw	4
  5292   0010AE  26E1               	addwf	fsr1l,f,c
  5293   0010B0  50DE               	movf	postinc2,w,c
  5294   0010B2  5CE6               	subwf	postinc1,w,c
  5295   0010B4  50DE               	movf	postinc2,w,c
  5296   0010B6  58E6               	subwfb	postinc1,w,c
  5297   0010B8  A0D8               	btfss	status,0,c
  5298   0010BA  EF61  F008         	goto	u2801
  5299   0010BE  EF63  F008         	goto	u2800
  5300   0010C2                     u2801:
  5301   0010C2  EFC4  F008         	goto	l3696
  5302   0010C6                     u2800:
  5303   0010C6                     
  5304                           ;color.c: 174:                 unsigned long temp;;color.c: 175:                 temp = 
      +                          (unsigned long)C;
  5305   0010C6  C03E  F028         	movff	getHSVval@C,getHSVval@temp_627
  5306   0010CA  C03F  F029         	movff	getHSVval@C+1,getHSVval@temp_627+1
  5307   0010CE  6A2A               	clrf	(getHSVval@temp_627+2)^0,c
  5308   0010D0  6A2B               	clrf	(getHSVval@temp_627+3)^0,c
  5309   0010D2                     
  5310                           ;color.c: 176:                 temp *= 2;
  5311   0010D2  90D8               	bcf	status,0,c
  5312   0010D4  3628               	rlcf	getHSVval@temp_627^0,f,c
  5313   0010D6  3629               	rlcf	(getHSVval@temp_627+1)^0,f,c
  5314   0010D8  362A               	rlcf	(getHSVval@temp_627+2)^0,f,c
  5315   0010DA  362B               	rlcf	(getHSVval@temp_627+3)^0,f,c
  5316   0010DC                     
  5317                           ;color.c: 177:                 temp += (unsigned long)(p2->B - p2->R);
  5318   0010DC  500F               	movf	getHSVval@p2^0,w,c
  5319   0010DE  6ED9               	movwf	fsr2l,c
  5320   0010E0  6ADA               	clrf	fsr2h,c
  5321   0010E2  CFDE F010          	movff	postinc2,??_getHSVval
  5322   0010E6  CFDD F011          	movff	postdec2,??_getHSVval+1
  5323   0010EA  500F               	movf	getHSVval@p2^0,w,c
  5324   0010EC  6ED9               	movwf	fsr2l,c
  5325   0010EE  6ADA               	clrf	fsr2h,c
  5326   0010F0  0E04               	movlw	4
  5327   0010F2  26D9               	addwf	fsr2l,f,c
  5328   0010F4  CFDE F012          	movff	postinc2,??_getHSVval+2
  5329   0010F8  CFDD F013          	movff	postdec2,??_getHSVval+3
  5330   0010FC  5010               	movf	??_getHSVval^0,w,c
  5331   0010FE  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5332   001100  6E14               	movwf	(??_getHSVval+4)^0,c
  5333   001102  5011               	movf	(??_getHSVval+1)^0,w,c
  5334   001104  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5335   001106  6E15               	movwf	(??_getHSVval+5)^0,c
  5336   001108  5014               	movf	(??_getHSVval+4)^0,w,c
  5337   00110A  2628               	addwf	getHSVval@temp_627^0,f,c
  5338   00110C  5015               	movf	(??_getHSVval+5)^0,w,c
  5339   00110E  2229               	addwfc	(getHSVval@temp_627+1)^0,f,c
  5340   001110  0E00               	movlw	0
  5341   001112  222A               	addwfc	(getHSVval@temp_627+2)^0,f,c
  5342   001114  0E00               	movlw	0
  5343   001116  222B               	addwfc	(getHSVval@temp_627+3)^0,f,c
  5344   001118                     
  5345                           ;color.c: 178:                 temp *= (unsigned long)Hz;
  5346   001118  C028  F001         	movff	getHSVval@temp_627,___lmul@multiplier
  5347   00111C  C029  F002         	movff	getHSVval@temp_627+1,___lmul@multiplier+1
  5348   001120  C02A  F003         	movff	getHSVval@temp_627+2,___lmul@multiplier+2
  5349   001124  C02B  F004         	movff	getHSVval@temp_627+3,___lmul@multiplier+3
  5350   001128  0E3C               	movlw	60
  5351   00112A  6E05               	movwf	___lmul@multiplicand^0,c
  5352   00112C  0E00               	movlw	0
  5353   00112E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5354   001130  0E00               	movlw	0
  5355   001132  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5356   001134  0E00               	movlw	0
  5357   001136  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5358   001138  ECF1  F012         	call	___lmul	;wreg free
  5359   00113C  C001  F028         	movff	?___lmul,getHSVval@temp_627
  5360   001140  C002  F029         	movff	?___lmul+1,getHSVval@temp_627+1
  5361   001144  C003  F02A         	movff	?___lmul+2,getHSVval@temp_627+2
  5362   001148  C004  F02B         	movff	?___lmul+3,getHSVval@temp_627+3
  5363   00114C                     
  5364                           ;color.c: 179:                 temp /= (unsigned long)C;
  5365   00114C  C028  F001         	movff	getHSVval@temp_627,___lldiv@dividend
  5366   001150  C029  F002         	movff	getHSVval@temp_627+1,___lldiv@dividend+1
  5367   001154  C02A  F003         	movff	getHSVval@temp_627+2,___lldiv@dividend+2
  5368   001158  C02B  F004         	movff	getHSVval@temp_627+3,___lldiv@dividend+3
  5369   00115C  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5370   001160  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5371   001164  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5372   001166  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5373   001168  ECE8  F011         	call	___lldiv	;wreg free
  5374   00116C  C001  F028         	movff	?___lldiv,getHSVval@temp_627
  5375   001170  C002  F029         	movff	?___lldiv+1,getHSVval@temp_627+1
  5376   001174  C003  F02A         	movff	?___lldiv+2,getHSVval@temp_627+2
  5377   001178  C004  F02B         	movff	?___lldiv+3,getHSVval@temp_627+3
  5378   00117C                     
  5379                           ;color.c: 180:                 H = (unsigned int)temp;
  5380   00117C  C028  F01E         	movff	getHSVval@temp_627,getHSVval@H
  5381   001180  C029  F01F         	movff	getHSVval@temp_627+1,getHSVval@H+1
  5382                           
  5383                           ;color.c: 181:             } else {
  5384   001184  EF25  F009         	goto	l3708
  5385   001188                     l3696:
  5386                           
  5387                           ;color.c: 183:                 unsigned long temp;;color.c: 184:                 temp = 
      +                          (unsigned long)C;
  5388   001188  C03E  F02C         	movff	getHSVval@C,getHSVval@temp_628
  5389   00118C  C03F  F02D         	movff	getHSVval@C+1,getHSVval@temp_628+1
  5390   001190  6A2E               	clrf	(getHSVval@temp_628+2)^0,c
  5391   001192  6A2F               	clrf	(getHSVval@temp_628+3)^0,c
  5392   001194                     
  5393                           ;color.c: 185:                 temp *= 2;
  5394   001194  90D8               	bcf	status,0,c
  5395   001196  362C               	rlcf	getHSVval@temp_628^0,f,c
  5396   001198  362D               	rlcf	(getHSVval@temp_628+1)^0,f,c
  5397   00119A  362E               	rlcf	(getHSVval@temp_628+2)^0,f,c
  5398   00119C  362F               	rlcf	(getHSVval@temp_628+3)^0,f,c
  5399   00119E                     
  5400                           ;color.c: 186:                 temp -= (unsigned long)(p2->R - p2->B);
  5401   00119E  500F               	movf	getHSVval@p2^0,w,c
  5402   0011A0  6ED9               	movwf	fsr2l,c
  5403   0011A2  6ADA               	clrf	fsr2h,c
  5404   0011A4  0E04               	movlw	4
  5405   0011A6  26D9               	addwf	fsr2l,f,c
  5406   0011A8  CFDE F010          	movff	postinc2,??_getHSVval
  5407   0011AC  CFDD F011          	movff	postdec2,??_getHSVval+1
  5408   0011B0  500F               	movf	getHSVval@p2^0,w,c
  5409   0011B2  6ED9               	movwf	fsr2l,c
  5410   0011B4  6ADA               	clrf	fsr2h,c
  5411   0011B6  CFDE F012          	movff	postinc2,??_getHSVval+2
  5412   0011BA  CFDD F013          	movff	postdec2,??_getHSVval+3
  5413   0011BE  5010               	movf	??_getHSVval^0,w,c
  5414   0011C0  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5415   0011C2  6E14               	movwf	(??_getHSVval+4)^0,c
  5416   0011C4  5011               	movf	(??_getHSVval+1)^0,w,c
  5417   0011C6  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5418   0011C8  6E15               	movwf	(??_getHSVval+5)^0,c
  5419   0011CA  6A16               	clrf	(??_getHSVval+6)^0,c
  5420   0011CC  6A17               	clrf	(??_getHSVval+7)^0,c
  5421   0011CE  5014               	movf	(??_getHSVval+4)^0,w,c
  5422   0011D0  5E2C               	subwf	getHSVval@temp_628^0,f,c
  5423   0011D2  5015               	movf	(??_getHSVval+5)^0,w,c
  5424   0011D4  5A2D               	subwfb	(getHSVval@temp_628+1)^0,f,c
  5425   0011D6  5016               	movf	(??_getHSVval+6)^0,w,c
  5426   0011D8  5A2E               	subwfb	(getHSVval@temp_628+2)^0,f,c
  5427   0011DA  5017               	movf	(??_getHSVval+7)^0,w,c
  5428   0011DC  5A2F               	subwfb	(getHSVval@temp_628+3)^0,f,c
  5429   0011DE                     
  5430                           ;color.c: 187:                 temp *= (unsigned long)Hz;
  5431   0011DE  C02C  F001         	movff	getHSVval@temp_628,___lmul@multiplier
  5432   0011E2  C02D  F002         	movff	getHSVval@temp_628+1,___lmul@multiplier+1
  5433   0011E6  C02E  F003         	movff	getHSVval@temp_628+2,___lmul@multiplier+2
  5434   0011EA  C02F  F004         	movff	getHSVval@temp_628+3,___lmul@multiplier+3
  5435   0011EE  0E3C               	movlw	60
  5436   0011F0  6E05               	movwf	___lmul@multiplicand^0,c
  5437   0011F2  0E00               	movlw	0
  5438   0011F4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5439   0011F6  0E00               	movlw	0
  5440   0011F8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5441   0011FA  0E00               	movlw	0
  5442   0011FC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5443   0011FE  ECF1  F012         	call	___lmul	;wreg free
  5444   001202  C001  F02C         	movff	?___lmul,getHSVval@temp_628
  5445   001206  C002  F02D         	movff	?___lmul+1,getHSVval@temp_628+1
  5446   00120A  C003  F02E         	movff	?___lmul+2,getHSVval@temp_628+2
  5447   00120E  C004  F02F         	movff	?___lmul+3,getHSVval@temp_628+3
  5448   001212                     
  5449                           ;color.c: 188:                 temp /= (unsigned long)C;
  5450   001212  C02C  F001         	movff	getHSVval@temp_628,___lldiv@dividend
  5451   001216  C02D  F002         	movff	getHSVval@temp_628+1,___lldiv@dividend+1
  5452   00121A  C02E  F003         	movff	getHSVval@temp_628+2,___lldiv@dividend+2
  5453   00121E  C02F  F004         	movff	getHSVval@temp_628+3,___lldiv@dividend+3
  5454   001222  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5455   001226  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5456   00122A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5457   00122C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5458   00122E  ECE8  F011         	call	___lldiv	;wreg free
  5459   001232  C001  F02C         	movff	?___lldiv,getHSVval@temp_628
  5460   001236  C002  F02D         	movff	?___lldiv+1,getHSVval@temp_628+1
  5461   00123A  C003  F02E         	movff	?___lldiv+2,getHSVval@temp_628+2
  5462   00123E  C004  F02F         	movff	?___lldiv+3,getHSVval@temp_628+3
  5463   001242                     
  5464                           ;color.c: 189:                 H = (unsigned int)temp;
  5465   001242  C02C  F01E         	movff	getHSVval@temp_628,getHSVval@H
  5466   001246  C02D  F01F         	movff	getHSVval@temp_628+1,getHSVval@H+1
  5467   00124A                     l3708:
  5468                           
  5469                           ;color.c: 192:         if (M == p2->B) {
  5470   00124A  500F               	movf	getHSVval@p2^0,w,c
  5471   00124C  6ED9               	movwf	fsr2l,c
  5472   00124E  6ADA               	clrf	fsr2h,c
  5473   001250  0E04               	movlw	4
  5474   001252  26D9               	addwf	fsr2l,f,c
  5475   001254  503C               	movf	getHSVval@M^0,w,c
  5476   001256  18DE               	xorwf	postinc2,w,c
  5477   001258  E107               	bnz	u2811
  5478   00125A  503D               	movf	(getHSVval@M+1)^0,w,c
  5479   00125C  18DE               	xorwf	postinc2,w,c
  5480   00125E  A4D8               	btfss	status,2,c
  5481   001260  EF34  F009         	goto	u2811
  5482   001264  EF36  F009         	goto	u2810
  5483   001268                     u2811:
  5484   001268  EF13  F00A         	goto	l3736
  5485   00126C                     u2810:
  5486   00126C                     
  5487                           ;color.c: 193:             if (p2->R >= p2->G) {
  5488   00126C  500F               	movf	getHSVval@p2^0,w,c
  5489   00126E  6ED9               	movwf	fsr2l,c
  5490   001270  6ADA               	clrf	fsr2h,c
  5491   001272  0E02               	movlw	2
  5492   001274  26D9               	addwf	fsr2l,f,c
  5493   001276  500F               	movf	getHSVval@p2^0,w,c
  5494   001278  6EE1               	movwf	fsr1l,c
  5495   00127A  6AE2               	clrf	fsr1h,c
  5496   00127C  50DE               	movf	postinc2,w,c
  5497   00127E  5CE6               	subwf	postinc1,w,c
  5498   001280  50DE               	movf	postinc2,w,c
  5499   001282  58E6               	subwfb	postinc1,w,c
  5500   001284  A0D8               	btfss	status,0,c
  5501   001286  EF47  F009         	goto	u2821
  5502   00128A  EF49  F009         	goto	u2820
  5503   00128E                     u2821:
  5504   00128E  EFAE  F009         	goto	l3724
  5505   001292                     u2820:
  5506   001292                     
  5507                           ;color.c: 195:                 unsigned long temp;;color.c: 196:                 temp = 
      +                          (unsigned long)C;
  5508   001292  C03E  F030         	movff	getHSVval@C,getHSVval@temp_629
  5509   001296  C03F  F031         	movff	getHSVval@C+1,getHSVval@temp_629+1
  5510   00129A  6A32               	clrf	(getHSVval@temp_629+2)^0,c
  5511   00129C  6A33               	clrf	(getHSVval@temp_629+3)^0,c
  5512   00129E                     
  5513                           ;color.c: 197:                 temp *= 4;
  5514   00129E  0E02               	movlw	2
  5515   0012A0                     u2835:
  5516   0012A0  90D8               	bcf	status,0,c
  5517   0012A2  3630               	rlcf	getHSVval@temp_629^0,f,c
  5518   0012A4  3631               	rlcf	(getHSVval@temp_629+1)^0,f,c
  5519   0012A6  3632               	rlcf	(getHSVval@temp_629+2)^0,f,c
  5520   0012A8  3633               	rlcf	(getHSVval@temp_629+3)^0,f,c
  5521   0012AA  2EE8               	decfsz	wreg,f,c
  5522   0012AC  EF50  F009         	goto	u2835
  5523   0012B0                     
  5524                           ;color.c: 198:                 temp += (unsigned long)(p2->R - p2->G);
  5525   0012B0  500F               	movf	getHSVval@p2^0,w,c
  5526   0012B2  6ED9               	movwf	fsr2l,c
  5527   0012B4  6ADA               	clrf	fsr2h,c
  5528   0012B6  0E02               	movlw	2
  5529   0012B8  26D9               	addwf	fsr2l,f,c
  5530   0012BA  CFDE F010          	movff	postinc2,??_getHSVval
  5531   0012BE  CFDD F011          	movff	postdec2,??_getHSVval+1
  5532   0012C2  500F               	movf	getHSVval@p2^0,w,c
  5533   0012C4  6ED9               	movwf	fsr2l,c
  5534   0012C6  6ADA               	clrf	fsr2h,c
  5535   0012C8  CFDE F012          	movff	postinc2,??_getHSVval+2
  5536   0012CC  CFDD F013          	movff	postdec2,??_getHSVval+3
  5537   0012D0  5010               	movf	??_getHSVval^0,w,c
  5538   0012D2  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5539   0012D4  6E14               	movwf	(??_getHSVval+4)^0,c
  5540   0012D6  5011               	movf	(??_getHSVval+1)^0,w,c
  5541   0012D8  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5542   0012DA  6E15               	movwf	(??_getHSVval+5)^0,c
  5543   0012DC  5014               	movf	(??_getHSVval+4)^0,w,c
  5544   0012DE  2630               	addwf	getHSVval@temp_629^0,f,c
  5545   0012E0  5015               	movf	(??_getHSVval+5)^0,w,c
  5546   0012E2  2231               	addwfc	(getHSVval@temp_629+1)^0,f,c
  5547   0012E4  0E00               	movlw	0
  5548   0012E6  2232               	addwfc	(getHSVval@temp_629+2)^0,f,c
  5549   0012E8  0E00               	movlw	0
  5550   0012EA  2233               	addwfc	(getHSVval@temp_629+3)^0,f,c
  5551   0012EC                     
  5552                           ;color.c: 199:                 temp *= (unsigned long)Hz;
  5553   0012EC  C030  F001         	movff	getHSVval@temp_629,___lmul@multiplier
  5554   0012F0  C031  F002         	movff	getHSVval@temp_629+1,___lmul@multiplier+1
  5555   0012F4  C032  F003         	movff	getHSVval@temp_629+2,___lmul@multiplier+2
  5556   0012F8  C033  F004         	movff	getHSVval@temp_629+3,___lmul@multiplier+3
  5557   0012FC  0E3C               	movlw	60
  5558   0012FE  6E05               	movwf	___lmul@multiplicand^0,c
  5559   001300  0E00               	movlw	0
  5560   001302  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5561   001304  0E00               	movlw	0
  5562   001306  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5563   001308  0E00               	movlw	0
  5564   00130A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5565   00130C  ECF1  F012         	call	___lmul	;wreg free
  5566   001310  C001  F030         	movff	?___lmul,getHSVval@temp_629
  5567   001314  C002  F031         	movff	?___lmul+1,getHSVval@temp_629+1
  5568   001318  C003  F032         	movff	?___lmul+2,getHSVval@temp_629+2
  5569   00131C  C004  F033         	movff	?___lmul+3,getHSVval@temp_629+3
  5570   001320                     
  5571                           ;color.c: 200:                 temp /= (unsigned long)C;
  5572   001320  C030  F001         	movff	getHSVval@temp_629,___lldiv@dividend
  5573   001324  C031  F002         	movff	getHSVval@temp_629+1,___lldiv@dividend+1
  5574   001328  C032  F003         	movff	getHSVval@temp_629+2,___lldiv@dividend+2
  5575   00132C  C033  F004         	movff	getHSVval@temp_629+3,___lldiv@dividend+3
  5576   001330  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5577   001334  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5578   001338  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5579   00133A  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5580   00133C  ECE8  F011         	call	___lldiv	;wreg free
  5581   001340  C001  F030         	movff	?___lldiv,getHSVval@temp_629
  5582   001344  C002  F031         	movff	?___lldiv+1,getHSVval@temp_629+1
  5583   001348  C003  F032         	movff	?___lldiv+2,getHSVval@temp_629+2
  5584   00134C  C004  F033         	movff	?___lldiv+3,getHSVval@temp_629+3
  5585   001350                     
  5586                           ;color.c: 201:                 H = (unsigned int)temp;
  5587   001350  C030  F01E         	movff	getHSVval@temp_629,getHSVval@H
  5588   001354  C031  F01F         	movff	getHSVval@temp_629+1,getHSVval@H+1
  5589                           
  5590                           ;color.c: 202:             } else {
  5591   001358  EF13  F00A         	goto	l3736
  5592   00135C                     l3724:
  5593                           
  5594                           ;color.c: 204:                 unsigned long temp;;color.c: 205:                 temp = 
      +                          (unsigned long)C;
  5595   00135C  C03E  F034         	movff	getHSVval@C,getHSVval@temp_630
  5596   001360  C03F  F035         	movff	getHSVval@C+1,getHSVval@temp_630+1
  5597   001364  6A36               	clrf	(getHSVval@temp_630+2)^0,c
  5598   001366  6A37               	clrf	(getHSVval@temp_630+3)^0,c
  5599   001368                     
  5600                           ;color.c: 206:                 temp *= 4;
  5601   001368  0E02               	movlw	2
  5602   00136A                     u2845:
  5603   00136A  90D8               	bcf	status,0,c
  5604   00136C  3634               	rlcf	getHSVval@temp_630^0,f,c
  5605   00136E  3635               	rlcf	(getHSVval@temp_630+1)^0,f,c
  5606   001370  3636               	rlcf	(getHSVval@temp_630+2)^0,f,c
  5607   001372  3637               	rlcf	(getHSVval@temp_630+3)^0,f,c
  5608   001374  2EE8               	decfsz	wreg,f,c
  5609   001376  EFB5  F009         	goto	u2845
  5610   00137A                     
  5611                           ;color.c: 207:                 temp -= (unsigned long)(p2->G - p2->R);
  5612   00137A  500F               	movf	getHSVval@p2^0,w,c
  5613   00137C  6ED9               	movwf	fsr2l,c
  5614   00137E  6ADA               	clrf	fsr2h,c
  5615   001380  CFDE F010          	movff	postinc2,??_getHSVval
  5616   001384  CFDD F011          	movff	postdec2,??_getHSVval+1
  5617   001388  500F               	movf	getHSVval@p2^0,w,c
  5618   00138A  6ED9               	movwf	fsr2l,c
  5619   00138C  6ADA               	clrf	fsr2h,c
  5620   00138E  0E02               	movlw	2
  5621   001390  26D9               	addwf	fsr2l,f,c
  5622   001392  CFDE F012          	movff	postinc2,??_getHSVval+2
  5623   001396  CFDD F013          	movff	postdec2,??_getHSVval+3
  5624   00139A  5010               	movf	??_getHSVval^0,w,c
  5625   00139C  5C12               	subwf	(??_getHSVval+2)^0,w,c
  5626   00139E  6E14               	movwf	(??_getHSVval+4)^0,c
  5627   0013A0  5011               	movf	(??_getHSVval+1)^0,w,c
  5628   0013A2  5813               	subwfb	(??_getHSVval+3)^0,w,c
  5629   0013A4  6E15               	movwf	(??_getHSVval+5)^0,c
  5630   0013A6  6A16               	clrf	(??_getHSVval+6)^0,c
  5631   0013A8  6A17               	clrf	(??_getHSVval+7)^0,c
  5632   0013AA  5014               	movf	(??_getHSVval+4)^0,w,c
  5633   0013AC  5E34               	subwf	getHSVval@temp_630^0,f,c
  5634   0013AE  5015               	movf	(??_getHSVval+5)^0,w,c
  5635   0013B0  5A35               	subwfb	(getHSVval@temp_630+1)^0,f,c
  5636   0013B2  5016               	movf	(??_getHSVval+6)^0,w,c
  5637   0013B4  5A36               	subwfb	(getHSVval@temp_630+2)^0,f,c
  5638   0013B6  5017               	movf	(??_getHSVval+7)^0,w,c
  5639   0013B8  5A37               	subwfb	(getHSVval@temp_630+3)^0,f,c
  5640   0013BA                     
  5641                           ;color.c: 208:                 temp *= (unsigned long)Hz;
  5642   0013BA  C034  F001         	movff	getHSVval@temp_630,___lmul@multiplier
  5643   0013BE  C035  F002         	movff	getHSVval@temp_630+1,___lmul@multiplier+1
  5644   0013C2  C036  F003         	movff	getHSVval@temp_630+2,___lmul@multiplier+2
  5645   0013C6  C037  F004         	movff	getHSVval@temp_630+3,___lmul@multiplier+3
  5646   0013CA  0E3C               	movlw	60
  5647   0013CC  6E05               	movwf	___lmul@multiplicand^0,c
  5648   0013CE  0E00               	movlw	0
  5649   0013D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5650   0013D2  0E00               	movlw	0
  5651   0013D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5652   0013D6  0E00               	movlw	0
  5653   0013D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5654   0013DA  ECF1  F012         	call	___lmul	;wreg free
  5655   0013DE  C001  F034         	movff	?___lmul,getHSVval@temp_630
  5656   0013E2  C002  F035         	movff	?___lmul+1,getHSVval@temp_630+1
  5657   0013E6  C003  F036         	movff	?___lmul+2,getHSVval@temp_630+2
  5658   0013EA  C004  F037         	movff	?___lmul+3,getHSVval@temp_630+3
  5659   0013EE                     
  5660                           ;color.c: 209:                 temp /= (unsigned long)C;
  5661   0013EE  C034  F001         	movff	getHSVval@temp_630,___lldiv@dividend
  5662   0013F2  C035  F002         	movff	getHSVval@temp_630+1,___lldiv@dividend+1
  5663   0013F6  C036  F003         	movff	getHSVval@temp_630+2,___lldiv@dividend+2
  5664   0013FA  C037  F004         	movff	getHSVval@temp_630+3,___lldiv@dividend+3
  5665   0013FE  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  5666   001402  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  5667   001406  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5668   001408  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5669   00140A  ECE8  F011         	call	___lldiv	;wreg free
  5670   00140E  C001  F034         	movff	?___lldiv,getHSVval@temp_630
  5671   001412  C002  F035         	movff	?___lldiv+1,getHSVval@temp_630+1
  5672   001416  C003  F036         	movff	?___lldiv+2,getHSVval@temp_630+2
  5673   00141A  C004  F037         	movff	?___lldiv+3,getHSVval@temp_630+3
  5674   00141E                     
  5675                           ;color.c: 210:                 H = (unsigned int)temp;
  5676   00141E  C034  F01E         	movff	getHSVval@temp_630,getHSVval@H
  5677   001422  C035  F01F         	movff	getHSVval@temp_630+1,getHSVval@H+1
  5678   001426                     l3736:
  5679                           
  5680                           ;color.c: 215:     if (M == 0) {
  5681   001426  503C               	movf	getHSVval@M^0,w,c
  5682   001428  103D               	iorwf	(getHSVval@M+1)^0,w,c
  5683   00142A  A4D8               	btfss	status,2,c
  5684   00142C  EF1A  F00A         	goto	u2851
  5685   001430  EF1C  F00A         	goto	u2850
  5686   001434                     u2851:
  5687   001434  EF22  F00A         	goto	l3740
  5688   001438                     u2850:
  5689   001438                     
  5690                           ;color.c: 216:         S = 0;
  5691   001438  0E00               	movlw	0
  5692   00143A  6E1D               	movwf	(getHSVval@S+1)^0,c
  5693   00143C  0E00               	movlw	0
  5694   00143E  6E1C               	movwf	getHSVval@S^0,c
  5695                           
  5696                           ;color.c: 217:     } else {
  5697   001440  EF5E  F00A         	goto	l3748
  5698   001444                     l3740:
  5699                           
  5700                           ;color.c: 219:         unsigned long temp;;color.c: 220:         temp = (unsigned long)C
      +                          ;
  5701   001444  C03E  F020         	movff	getHSVval@C,getHSVval@temp_631
  5702   001448  C03F  F021         	movff	getHSVval@C+1,getHSVval@temp_631+1
  5703   00144C  6A22               	clrf	(getHSVval@temp_631+2)^0,c
  5704   00144E  6A23               	clrf	(getHSVval@temp_631+3)^0,c
  5705   001450                     
  5706                           ;color.c: 221:         temp *= (unsigned long)Sz;
  5707   001450  C020  F001         	movff	getHSVval@temp_631,___lmul@multiplier
  5708   001454  C021  F002         	movff	getHSVval@temp_631+1,___lmul@multiplier+1
  5709   001458  C022  F003         	movff	getHSVval@temp_631+2,___lmul@multiplier+2
  5710   00145C  C023  F004         	movff	getHSVval@temp_631+3,___lmul@multiplier+3
  5711   001460  0E64               	movlw	100
  5712   001462  6E05               	movwf	___lmul@multiplicand^0,c
  5713   001464  0E00               	movlw	0
  5714   001466  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5715   001468  0E00               	movlw	0
  5716   00146A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5717   00146C  0E00               	movlw	0
  5718   00146E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5719   001470  ECF1  F012         	call	___lmul	;wreg free
  5720   001474  C001  F020         	movff	?___lmul,getHSVval@temp_631
  5721   001478  C002  F021         	movff	?___lmul+1,getHSVval@temp_631+1
  5722   00147C  C003  F022         	movff	?___lmul+2,getHSVval@temp_631+2
  5723   001480  C004  F023         	movff	?___lmul+3,getHSVval@temp_631+3
  5724   001484                     
  5725                           ;color.c: 222:         temp /= (unsigned long)M;
  5726   001484  C020  F001         	movff	getHSVval@temp_631,___lldiv@dividend
  5727   001488  C021  F002         	movff	getHSVval@temp_631+1,___lldiv@dividend+1
  5728   00148C  C022  F003         	movff	getHSVval@temp_631+2,___lldiv@dividend+2
  5729   001490  C023  F004         	movff	getHSVval@temp_631+3,___lldiv@dividend+3
  5730   001494  C03C  F005         	movff	getHSVval@M,___lldiv@divisor
  5731   001498  C03D  F006         	movff	getHSVval@M+1,___lldiv@divisor+1
  5732   00149C  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5733   00149E  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5734   0014A0  ECE8  F011         	call	___lldiv	;wreg free
  5735   0014A4  C001  F020         	movff	?___lldiv,getHSVval@temp_631
  5736   0014A8  C002  F021         	movff	?___lldiv+1,getHSVval@temp_631+1
  5737   0014AC  C003  F022         	movff	?___lldiv+2,getHSVval@temp_631+2
  5738   0014B0  C004  F023         	movff	?___lldiv+3,getHSVval@temp_631+3
  5739   0014B4                     
  5740                           ;color.c: 223:         S = (unsigned int)temp;
  5741   0014B4  C020  F01C         	movff	getHSVval@temp_631,getHSVval@S
  5742   0014B8  C021  F01D         	movff	getHSVval@temp_631+1,getHSVval@S+1
  5743   0014BC                     l3748:
  5744                           
  5745                           ;color.c: 226:     p1->H = H;
  5746   0014BC  500E               	movf	getHSVval@p1^0,w,c
  5747   0014BE  6ED9               	movwf	fsr2l,c
  5748   0014C0  6ADA               	clrf	fsr2h,c
  5749   0014C2  C01E  FFDE         	movff	getHSVval@H,postinc2
  5750   0014C6  C01F  FFDD         	movff	getHSVval@H+1,postdec2
  5751   0014CA                     
  5752                           ;color.c: 227:     p1->S = S;
  5753   0014CA  500E               	movf	getHSVval@p1^0,w,c
  5754   0014CC  6ED9               	movwf	fsr2l,c
  5755   0014CE  6ADA               	clrf	fsr2h,c
  5756   0014D0  0E02               	movlw	2
  5757   0014D2  26D9               	addwf	fsr2l,f,c
  5758   0014D4  C01C  FFDE         	movff	getHSVval@S,postinc2
  5759   0014D8  C01D  FFDD         	movff	getHSVval@S+1,postdec2
  5760   0014DC                     
  5761                           ;color.c: 228:     p1->V = M;
  5762   0014DC  500E               	movf	getHSVval@p1^0,w,c
  5763   0014DE  6ED9               	movwf	fsr2l,c
  5764   0014E0  6ADA               	clrf	fsr2h,c
  5765   0014E2  0E04               	movlw	4
  5766   0014E4  26D9               	addwf	fsr2l,f,c
  5767   0014E6  C03C  FFDE         	movff	getHSVval@M,postinc2
  5768   0014EA  C03D  FFDD         	movff	getHSVval@M+1,postdec2
  5769   0014EE  0012               	return		;funcret
  5770   0014F0                     __end_of_getHSVval:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _minRGB *****************
  5774 ;; Defined at:
  5775 ;;		line 123 in file "color.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  p               1    6[COMRAM] PTR struct RGBC_val
  5778 ;;		 -> main@measured_colour(8), 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  2    6[COMRAM] unsigned int 
  5783 ;; Registers used:
  5784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;Total ram usage:        4 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; Hardware stack levels required when called: 2
  5797 ;; This function calls:
  5798 ;;		_min
  5799 ;; This function is called by:
  5800 ;;		_getHSVval
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text30
  5805   00281C                     __ptext30:
  5806                           	callstack 0
  5807   00281C                     _minRGB:
  5808                           	callstack 27
  5809   00281C                     
  5810                           ;color.c: 123: unsigned int minRGB(struct RGBC_val *p);color.c: 124: {;color.c: 125:    
      +                           return(min(min(p->R,p->G),p->B));
  5811   00281C  5007               	movf	minRGB@p^0,w,c
  5812   00281E  6ED9               	movwf	fsr2l,c
  5813   002820  6ADA               	clrf	fsr2h,c
  5814   002822  CFDE F001          	movff	postinc2,min@a
  5815   002826  CFDD F002          	movff	postdec2,min@a+1
  5816   00282A  5007               	movf	minRGB@p^0,w,c
  5817   00282C  6ED9               	movwf	fsr2l,c
  5818   00282E  6ADA               	clrf	fsr2h,c
  5819   002830  0E02               	movlw	2
  5820   002832  26D9               	addwf	fsr2l,f,c
  5821   002834  CFDE F003          	movff	postinc2,min@b
  5822   002838  CFDD F004          	movff	postdec2,min@b+1
  5823   00283C  ECA3  F015         	call	_min	;wreg free
  5824   002840  C001  F009         	movff	?_min,_minRGB$3165
  5825   002844  C002  F00A         	movff	?_min+1,_minRGB$3165+1
  5826                           
  5827                           ;color.c: 123: unsigned int minRGB(struct RGBC_val *p);color.c: 124: {;color.c: 125:    
      +                           return(min(min(p->R,p->G),p->B));
  5828   002848  C009  F001         	movff	_minRGB$3165,min@a
  5829   00284C  C00A  F002         	movff	_minRGB$3165+1,min@a+1
  5830   002850  5007               	movf	minRGB@p^0,w,c
  5831   002852  6ED9               	movwf	fsr2l,c
  5832   002854  6ADA               	clrf	fsr2h,c
  5833   002856  0E04               	movlw	4
  5834   002858  26D9               	addwf	fsr2l,f,c
  5835   00285A  CFDE F003          	movff	postinc2,min@b
  5836   00285E  CFDD F004          	movff	postdec2,min@b+1
  5837   002862  ECA3  F015         	call	_min	;wreg free
  5838   002866  C001  F007         	movff	?_min,?_minRGB
  5839   00286A  C002  F008         	movff	?_min+1,?_minRGB+1
  5840   00286E  0012               	return		;funcret
  5841   002870                     __end_of_minRGB:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _min *****************
  5845 ;; Defined at:
  5846 ;;		line 111 in file "color.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  a               2    0[COMRAM] unsigned int 
  5849 ;;  b               2    2[COMRAM] unsigned int 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  min_val         2    4[COMRAM] unsigned int 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  2    0[COMRAM] unsigned int 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;Total ram usage:        6 bytes
  5866 ;; Hardware stack levels used: 1
  5867 ;; Hardware stack levels required when called: 1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_minRGB
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text31
  5876   002B46                     __ptext31:
  5877                           	callstack 0
  5878   002B46                     _min:
  5879                           	callstack 27
  5880   002B46                     
  5881                           ;color.c: 111: unsigned int min(unsigned int a, unsigned int b);color.c: 112: {;color.c:
      +                           113:     unsigned int min_val = b;
  5882   002B46  C003  F005         	movff	min@b,min@min_val
  5883   002B4A  C004  F006         	movff	min@b+1,min@min_val+1
  5884   002B4E                     
  5885                           ;color.c: 114:     if (a < b) {min_val = a;}
  5886   002B4E  5003               	movf	min@b^0,w,c
  5887   002B50  5C01               	subwf	min@a^0,w,c
  5888   002B52  5004               	movf	(min@b+1)^0,w,c
  5889   002B54  5802               	subwfb	(min@a+1)^0,w,c
  5890   002B56  B0D8               	btfsc	status,0,c
  5891   002B58  EFB0  F015         	goto	u2141
  5892   002B5C  EFB2  F015         	goto	u2140
  5893   002B60                     u2141:
  5894   002B60  EFB6  F015         	goto	l97
  5895   002B64                     u2140:
  5896   002B64  C001  F005         	movff	min@a,min@min_val
  5897   002B68  C002  F006         	movff	min@a+1,min@min_val+1
  5898   002B6C                     l97:
  5899                           
  5900                           ;color.c: 115:     return min_val;
  5901   002B6C  C005  F001         	movff	min@min_val,?_min
  5902   002B70  C006  F002         	movff	min@min_val+1,?_min+1
  5903   002B74  0012               	return		;funcret
  5904   002B76                     __end_of_min:
  5905                           	callstack 0
  5906                           
  5907 ;; *************** function _maxRGB *****************
  5908 ;; Defined at:
  5909 ;;		line 118 in file "color.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  p               1    6[COMRAM] PTR struct RGBC_val
  5912 ;;		 -> main@measured_colour(8), 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2    6[COMRAM] unsigned int 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5928 ;;Total ram usage:        4 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; Hardware stack levels required when called: 2
  5931 ;; This function calls:
  5932 ;;		_max
  5933 ;; This function is called by:
  5934 ;;		_getHSVval
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text32
  5939   002870                     __ptext32:
  5940                           	callstack 0
  5941   002870                     _maxRGB:
  5942                           	callstack 27
  5943   002870                     
  5944                           ;color.c: 118: unsigned int maxRGB(struct RGBC_val *p);color.c: 119: {;color.c: 120:    
      +                           return(max(max(p->R,p->G),p->B));
  5945   002870  5007               	movf	maxRGB@p^0,w,c
  5946   002872  6ED9               	movwf	fsr2l,c
  5947   002874  6ADA               	clrf	fsr2h,c
  5948   002876  CFDE F001          	movff	postinc2,max@a
  5949   00287A  CFDD F002          	movff	postdec2,max@a+1
  5950   00287E  5007               	movf	maxRGB@p^0,w,c
  5951   002880  6ED9               	movwf	fsr2l,c
  5952   002882  6ADA               	clrf	fsr2h,c
  5953   002884  0E02               	movlw	2
  5954   002886  26D9               	addwf	fsr2l,f,c
  5955   002888  CFDE F003          	movff	postinc2,max@b
  5956   00288C  CFDD F004          	movff	postdec2,max@b+1
  5957   002890  ECBB  F015         	call	_max	;wreg free
  5958   002894  C001  F009         	movff	?_max,_maxRGB$3164
  5959   002898  C002  F00A         	movff	?_max+1,_maxRGB$3164+1
  5960                           
  5961                           ;color.c: 118: unsigned int maxRGB(struct RGBC_val *p);color.c: 119: {;color.c: 120:    
      +                           return(max(max(p->R,p->G),p->B));
  5962   00289C  C009  F001         	movff	_maxRGB$3164,max@a
  5963   0028A0  C00A  F002         	movff	_maxRGB$3164+1,max@a+1
  5964   0028A4  5007               	movf	maxRGB@p^0,w,c
  5965   0028A6  6ED9               	movwf	fsr2l,c
  5966   0028A8  6ADA               	clrf	fsr2h,c
  5967   0028AA  0E04               	movlw	4
  5968   0028AC  26D9               	addwf	fsr2l,f,c
  5969   0028AE  CFDE F003          	movff	postinc2,max@b
  5970   0028B2  CFDD F004          	movff	postdec2,max@b+1
  5971   0028B6  ECBB  F015         	call	_max	;wreg free
  5972   0028BA  C001  F007         	movff	?_max,?_maxRGB
  5973   0028BE  C002  F008         	movff	?_max+1,?_maxRGB+1
  5974   0028C2  0012               	return		;funcret
  5975   0028C4                     __end_of_maxRGB:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _max *****************
  5979 ;; Defined at:
  5980 ;;		line 104 in file "color.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  a               2    0[COMRAM] unsigned int 
  5983 ;;  b               2    2[COMRAM] unsigned int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  max_val         2    4[COMRAM] unsigned int 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  2    0[COMRAM] unsigned int 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;Total ram usage:        6 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 1
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_maxRGB
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text33
  6010   002B76                     __ptext33:
  6011                           	callstack 0
  6012   002B76                     _max:
  6013                           	callstack 27
  6014   002B76                     
  6015                           ;color.c: 104: unsigned int max(unsigned int a, unsigned int b);color.c: 105: {;color.c:
      +                           106:     unsigned int max_val = b;
  6016   002B76  C003  F005         	movff	max@b,max@max_val
  6017   002B7A  C004  F006         	movff	max@b+1,max@max_val+1
  6018   002B7E                     
  6019                           ;color.c: 107:     if (a > b) {max_val = a;}
  6020   002B7E  5001               	movf	max@a^0,w,c
  6021   002B80  5C03               	subwf	max@b^0,w,c
  6022   002B82  5002               	movf	(max@a+1)^0,w,c
  6023   002B84  5804               	subwfb	(max@b+1)^0,w,c
  6024   002B86  B0D8               	btfsc	status,0,c
  6025   002B88  EFC8  F015         	goto	u2131
  6026   002B8C  EFCA  F015         	goto	u2130
  6027   002B90                     u2131:
  6028   002B90  EFCE  F015         	goto	l93
  6029   002B94                     u2130:
  6030   002B94  C001  F005         	movff	max@a,max@max_val
  6031   002B98  C002  F006         	movff	max@a+1,max@max_val+1
  6032   002B9C                     l93:
  6033                           
  6034                           ;color.c: 108:     return max_val;
  6035   002B9C  C005  F001         	movff	max@max_val,?_max
  6036   002BA0  C006  F002         	movff	max@max_val+1,?_max+1
  6037   002BA4  0012               	return		;funcret
  6038   002BA6                     __end_of_max:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function ___lmul *****************
  6042 ;; Defined at:
  6043 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  multiplier      4    0[COMRAM] unsigned long 
  6046 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  product         4    8[COMRAM] unsigned long 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  4    0[COMRAM] unsigned long 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6058 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;Total ram usage:       12 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_getHSVval
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text34
  6073   0025E2                     __ptext34:
  6074                           	callstack 0
  6075   0025E2                     ___lmul:
  6076                           	callstack 28
  6077   0025E2  0E00               	movlw	0
  6078   0025E4  6E09               	movwf	___lmul@product^0,c
  6079   0025E6  0E00               	movlw	0
  6080   0025E8  6E0A               	movwf	(___lmul@product+1)^0,c
  6081   0025EA  0E00               	movlw	0
  6082   0025EC  6E0B               	movwf	(___lmul@product+2)^0,c
  6083   0025EE  0E00               	movlw	0
  6084   0025F0  6E0C               	movwf	(___lmul@product+3)^0,c
  6085   0025F2                     l3364:
  6086   0025F2  A001               	btfss	___lmul@multiplier^0,0,c
  6087   0025F4  EFFE  F012         	goto	u2201
  6088   0025F8  EF00  F013         	goto	u2200
  6089   0025FC                     u2201:
  6090   0025FC  EF08  F013         	goto	l3368
  6091   002600                     u2200:
  6092   002600  5005               	movf	___lmul@multiplicand^0,w,c
  6093   002602  2609               	addwf	___lmul@product^0,f,c
  6094   002604  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6095   002606  220A               	addwfc	(___lmul@product+1)^0,f,c
  6096   002608  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6097   00260A  220B               	addwfc	(___lmul@product+2)^0,f,c
  6098   00260C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6099   00260E  220C               	addwfc	(___lmul@product+3)^0,f,c
  6100   002610                     l3368:
  6101   002610  90D8               	bcf	status,0,c
  6102   002612  3605               	rlcf	___lmul@multiplicand^0,f,c
  6103   002614  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6104   002616  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6105   002618  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6106   00261A  90D8               	bcf	status,0,c
  6107   00261C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6108   00261E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6109   002620  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6110   002622  3201               	rrcf	___lmul@multiplier^0,f,c
  6111   002624  5001               	movf	___lmul@multiplier^0,w,c
  6112   002626  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6113   002628  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6114   00262A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6115   00262C  A4D8               	btfss	status,2,c
  6116   00262E  EF1B  F013         	goto	u2211
  6117   002632  EF1D  F013         	goto	u2210
  6118   002636                     u2211:
  6119   002636  EFF9  F012         	goto	l3364
  6120   00263A                     u2210:
  6121   00263A  C009  F001         	movff	___lmul@product,?___lmul
  6122   00263E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6123   002642  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6124   002646  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6125   00264A  0012               	return		;funcret
  6126   00264C                     __end_of___lmul:
  6127                           	callstack 0
  6128                           
  6129 ;; *************** function ___lldiv *****************
  6130 ;; Defined at:
  6131 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  dividend        4    0[COMRAM] unsigned long 
  6134 ;;  divisor         4    4[COMRAM] unsigned long 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  quotient        4    8[COMRAM] unsigned long 
  6137 ;;  counter         1   12[COMRAM] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  4    0[COMRAM] unsigned long 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6147 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;Total ram usage:       13 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; Hardware stack levels required when called: 1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_getHSVval
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text35
  6162   0023D0                     __ptext35:
  6163                           	callstack 0
  6164   0023D0                     ___lldiv:
  6165                           	callstack 28
  6166   0023D0  0E00               	movlw	0
  6167   0023D2  6E09               	movwf	___lldiv@quotient^0,c
  6168   0023D4  0E00               	movlw	0
  6169   0023D6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6170   0023D8  0E00               	movlw	0
  6171   0023DA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6172   0023DC  0E00               	movlw	0
  6173   0023DE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6174   0023E0  5005               	movf	___lldiv@divisor^0,w,c
  6175   0023E2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6176   0023E4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6177   0023E6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6178   0023E8  B4D8               	btfsc	status,2,c
  6179   0023EA  EFF9  F011         	goto	u2221
  6180   0023EE  EFFB  F011         	goto	u2220
  6181   0023F2                     u2221:
  6182   0023F2  EF31  F012         	goto	l730
  6183   0023F6                     u2220:
  6184   0023F6  0E01               	movlw	1
  6185   0023F8  6E0D               	movwf	___lldiv@counter^0,c
  6186   0023FA  EF05  F012         	goto	l3380
  6187   0023FE                     l3378:
  6188   0023FE  90D8               	bcf	status,0,c
  6189   002400  3605               	rlcf	___lldiv@divisor^0,f,c
  6190   002402  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6191   002404  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6192   002406  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6193   002408  2A0D               	incf	___lldiv@counter^0,f,c
  6194   00240A                     l3380:
  6195   00240A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6196   00240C  EF0A  F012         	goto	u2231
  6197   002410  EF0C  F012         	goto	u2230
  6198   002414                     u2231:
  6199   002414  EFFF  F011         	goto	l3378
  6200   002418                     u2230:
  6201   002418                     l3382:
  6202   002418  90D8               	bcf	status,0,c
  6203   00241A  3609               	rlcf	___lldiv@quotient^0,f,c
  6204   00241C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6205   00241E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6206   002420  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6207   002422  5005               	movf	___lldiv@divisor^0,w,c
  6208   002424  5C01               	subwf	___lldiv@dividend^0,w,c
  6209   002426  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6210   002428  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6211   00242A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6212   00242C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6213   00242E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6214   002430  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6215   002432  A0D8               	btfss	status,0,c
  6216   002434  EF1E  F012         	goto	u2241
  6217   002438  EF20  F012         	goto	u2240
  6218   00243C                     u2241:
  6219   00243C  EF29  F012         	goto	l3390
  6220   002440                     u2240:
  6221   002440  5005               	movf	___lldiv@divisor^0,w,c
  6222   002442  5E01               	subwf	___lldiv@dividend^0,f,c
  6223   002444  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6224   002446  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6225   002448  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6226   00244A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6227   00244C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6228   00244E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6229   002450  8009               	bsf	___lldiv@quotient^0,0,c
  6230   002452                     l3390:
  6231   002452  90D8               	bcf	status,0,c
  6232   002454  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6233   002456  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6234   002458  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6235   00245A  3205               	rrcf	___lldiv@divisor^0,f,c
  6236   00245C  2E0D               	decfsz	___lldiv@counter^0,f,c
  6237   00245E  EF0C  F012         	goto	l3382
  6238   002462                     l730:
  6239   002462  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6240   002466  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6241   00246A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6242   00246E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6243   002472  0012               	return		;funcret
  6244   002474                     __end_of___lldiv:
  6245                           	callstack 0
  6246                           
  6247 ;; *************** function _color_click_init *****************
  6248 ;; Defined at:
  6249 ;;		line 4 in file "color.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;Total ram usage:        1 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; Hardware stack levels required when called: 4
  6270 ;; This function calls:
  6271 ;;		_I2C_2_Master_Init
  6272 ;;		_color_writetoaddr
  6273 ;; This function is called by:
  6274 ;;		_main
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text36
  6279   002B12                     __ptext36:
  6280                           	callstack 0
  6281   002B12                     _color_click_init:
  6282                           	callstack 26
  6283   002B12                     
  6284                           ;color.c: 7:     I2C_2_Master_Init();
  6285   002B12  ECEA  F015         	call	_I2C_2_Master_Init	;wreg free
  6286   002B16                     
  6287                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  6288   002B16  0E01               	movlw	1
  6289   002B18  6E03               	movwf	color_writetoaddr@value^0,c
  6290   002B1A  0E00               	movlw	0
  6291   002B1C  EC25  F016         	call	_color_writetoaddr
  6292   002B20                     
  6293                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6294   002B20  0E3F               	movlw	63
  6295   002B22  6E05               	movwf	??_color_click_init^0,c
  6296   002B24  0E55               	movlw	85
  6297   002B26                     u3017:
  6298   002B26  2EE8               	decfsz	wreg,f,c
  6299   002B28  D7FE               	bra	u3017
  6300   002B2A  2E05               	decfsz	??_color_click_init^0,f,c
  6301   002B2C  D7FC               	bra	u3017
  6302   002B2E  0000               	nop	
  6303   002B30                     
  6304                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  6305   002B30  0E03               	movlw	3
  6306   002B32  6E03               	movwf	color_writetoaddr@value^0,c
  6307   002B34  0E00               	movlw	0
  6308   002B36  EC25  F016         	call	_color_writetoaddr
  6309   002B3A                     
  6310                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6311   002B3A  0ED5               	movlw	213
  6312   002B3C  6E03               	movwf	color_writetoaddr@value^0,c
  6313   002B3E  0E01               	movlw	1
  6314   002B40  EC25  F016         	call	_color_writetoaddr
  6315   002B44  0012               	return		;funcret
  6316   002B46                     __end_of_color_click_init:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _color_writetoaddr *****************
  6320 ;; Defined at:
  6321 ;;		line 20 in file "color.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  address         1    wreg     unsigned char 
  6324 ;;  value           1    2[COMRAM] unsigned char 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  address         1    3[COMRAM] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;Total ram usage:        2 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 3
  6343 ;; This function calls:
  6344 ;;		_I2C_2_Master_Start
  6345 ;;		_I2C_2_Master_Stop
  6346 ;;		_I2C_2_Master_Write
  6347 ;; This function is called by:
  6348 ;;		_color_click_init
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text37
  6353   002C4A                     __ptext37:
  6354                           	callstack 0
  6355   002C4A                     _color_writetoaddr:
  6356                           	callstack 26
  6357                           
  6358                           ;incstack = 0
  6359                           ;color_writetoaddr@address stored from wreg
  6360   002C4A  6E04               	movwf	color_writetoaddr@address^0,c
  6361   002C4C                     
  6362                           ;color.c: 21:     I2C_2_Master_Start();
  6363   002C4C  EC76  F016         	call	_I2C_2_Master_Start	;wreg free
  6364                           
  6365                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  6366   002C50  0E52               	movlw	82
  6367   002C52  EC5A  F016         	call	_I2C_2_Master_Write
  6368                           
  6369                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  6370   002C56  5004               	movf	color_writetoaddr@address^0,w,c
  6371   002C58  0980               	iorlw	128
  6372   002C5A  EC5A  F016         	call	_I2C_2_Master_Write
  6373                           
  6374                           ;color.c: 24:     I2C_2_Master_Write(value);
  6375   002C5E  5003               	movf	color_writetoaddr@value^0,w,c
  6376   002C60  EC5A  F016         	call	_I2C_2_Master_Write
  6377                           
  6378                           ;color.c: 25:     I2C_2_Master_Stop();
  6379   002C64  EC71  F016         	call	_I2C_2_Master_Stop	;wreg free
  6380   002C68  0012               	return		;funcret
  6381   002C6A                     __end_of_color_writetoaddr:
  6382                           	callstack 0
  6383                           
  6384 ;; *************** function _I2C_2_Master_Write *****************
  6385 ;; Defined at:
  6386 ;;		line 45 in file "i2c.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  data_byte       1    wreg     unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  data_byte       1    1[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;Total ram usage:        1 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 2
  6407 ;; This function calls:
  6408 ;;		_I2C_2_Master_Idle
  6409 ;; This function is called by:
  6410 ;;		_color_writetoaddr
  6411 ;;		_color_read_Red
  6412 ;;		_color_read_Green
  6413 ;;		_color_read_Blue
  6414 ;;		_color_read_Clear
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text38
  6419   002CB4                     __ptext38:
  6420                           	callstack 0
  6421   002CB4                     _I2C_2_Master_Write:
  6422                           	callstack 26
  6423                           
  6424                           ;incstack = 0
  6425                           ;I2C_2_Master_Write@data_byte stored from wreg
  6426   002CB4  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6427   002CB6                     
  6428                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6429   002CB6  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  6430   002CBA                     
  6431                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6432   002CBA  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6433   002CBE  0012               	return		;funcret
  6434   002CC0                     __end_of_I2C_2_Master_Write:
  6435                           	callstack 0
  6436                           
  6437 ;; *************** function _I2C_2_Master_Stop *****************
  6438 ;; Defined at:
  6439 ;;		line 39 in file "i2c.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;Total ram usage:        0 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 2
  6460 ;; This function calls:
  6461 ;;		_I2C_2_Master_Idle
  6462 ;; This function is called by:
  6463 ;;		_color_writetoaddr
  6464 ;;		_color_read_Red
  6465 ;;		_color_read_Green
  6466 ;;		_color_read_Blue
  6467 ;;		_color_read_Clear
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text39
  6472   002CE2                     __ptext39:
  6473                           	callstack 0
  6474   002CE2                     _I2C_2_Master_Stop:
  6475                           	callstack 26
  6476   002CE2                     
  6477                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6478   002CE2  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  6479   002CE6                     
  6480                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6481   002CE6  010E               	movlb	14	; () banked
  6482   002CE8  85DA               	bsf	218,2,b	;volatile
  6483   002CEA                     
  6484                           ; BSR set to: 14
  6485   002CEA  0012               	return		;funcret
  6486   002CEC                     __end_of_I2C_2_Master_Stop:
  6487                           	callstack 0
  6488                           
  6489 ;; *************** function _I2C_2_Master_Start *****************
  6490 ;; Defined at:
  6491 ;;		line 27 in file "i2c.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 2
  6512 ;; This function calls:
  6513 ;;		_I2C_2_Master_Idle
  6514 ;; This function is called by:
  6515 ;;		_color_writetoaddr
  6516 ;;		_color_read_Red
  6517 ;;		_color_read_Green
  6518 ;;		_color_read_Blue
  6519 ;;		_color_read_Clear
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text40
  6524   002CEC                     __ptext40:
  6525                           	callstack 0
  6526   002CEC                     _I2C_2_Master_Start:
  6527                           	callstack 26
  6528   002CEC                     
  6529                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6530   002CEC  ECFF  F015         	call	_I2C_2_Master_Idle	;wreg free
  6531   002CF0                     
  6532                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6533   002CF0  010E               	movlb	14	; () banked
  6534   002CF2  81DA               	bsf	218,0,b	;volatile
  6535   002CF4                     
  6536                           ; BSR set to: 14
  6537   002CF4  0012               	return		;funcret
  6538   002CF6                     __end_of_I2C_2_Master_Start:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _I2C_2_Master_Idle *****************
  6542 ;; Defined at:
  6543 ;;		line 22 in file "i2c.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;		None
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      void 
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;Total ram usage:        1 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_I2C_2_Master_Start
  6568 ;;		_I2C_2_Master_RepStart
  6569 ;;		_I2C_2_Master_Stop
  6570 ;;		_I2C_2_Master_Write
  6571 ;;		_I2C_2_Master_Read
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text41
  6576   002BFE                     __ptext41:
  6577                           	callstack 0
  6578   002BFE                     _I2C_2_Master_Idle:
  6579                           	callstack 26
  6580   002BFE                     l294:
  6581   002BFE  010E               	movlb	14	; () banked
  6582   002C00  B5D8               	btfsc	216,2,b	;volatile
  6583   002C02  EF05  F016         	goto	u1951
  6584   002C06  EF07  F016         	goto	u1950
  6585   002C0A                     u1951:
  6586   002C0A  EFFF  F015         	goto	l294
  6587   002C0E                     u1950:
  6588   002C0E                     
  6589                           ; BSR set to: 14
  6590   002C0E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6591   002C12  0E1F               	movlw	31
  6592   002C14  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6593   002C16  A4D8               	btfss	status,2,c
  6594   002C18  EF10  F016         	goto	u1961
  6595   002C1C  EF12  F016         	goto	u1960
  6596   002C20                     u1961:
  6597   002C20  EFFF  F015         	goto	l294
  6598   002C24                     u1960:
  6599   002C24                     
  6600                           ; BSR set to: 14
  6601   002C24  0012               	return		;funcret
  6602   002C26                     __end_of_I2C_2_Master_Idle:
  6603                           	callstack 0
  6604                           
  6605 ;; *************** function _I2C_2_Master_Init *****************
  6606 ;; Defined at:
  6607 ;;		line 4 in file "i2c.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;		None
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 1
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_color_click_init
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text42
  6636   002BD4                     __ptext42:
  6637                           	callstack 0
  6638   002BD4                     _I2C_2_Master_Init:
  6639                           	callstack 28
  6640   002BD4                     
  6641                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6642   002BD4  010E               	movlb	14	; () banked
  6643   002BD6  51D9               	movf	217,w,b	;volatile
  6644   002BD8  0BF0               	andlw	-16
  6645   002BDA  0908               	iorlw	8
  6646   002BDC  6FD9               	movwf	217,b	;volatile
  6647   002BDE                     
  6648                           ; BSR set to: 14
  6649                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6650   002BDE  8BD9               	bsf	217,5,b	;volatile
  6651                           
  6652                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6653   002BE0  0E9F               	movlw	159
  6654   002BE2  6FD6               	movwf	214,b	;volatile
  6655   002BE4                     
  6656                           ; BSR set to: 14
  6657                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6658   002BE4  8A84               	bsf	132,5,c	;volatile
  6659   002BE6                     
  6660                           ; BSR set to: 14
  6661                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6662   002BE6  8C84               	bsf	132,6,c	;volatile
  6663   002BE8                     
  6664                           ; BSR set to: 14
  6665                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6666   002BE8  9BA7               	bcf	167,5,b	;volatile
  6667   002BEA                     
  6668                           ; BSR set to: 14
  6669                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6670   002BEA  9DA7               	bcf	167,6,b	;volatile
  6671                           
  6672                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6673   002BEC  0E1D               	movlw	29
  6674   002BEE  6F1D               	movwf	29,b	;volatile
  6675                           
  6676                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6677   002BF0  0E1E               	movlw	30
  6678   002BF2  6F1C               	movwf	28,b	;volatile
  6679                           
  6680                           ;i2c.c: 18:   RD5PPS=0x1C;
  6681   002BF4  0E1C               	movlw	28
  6682   002BF6  6F6F               	movwf	111,b	;volatile
  6683                           
  6684                           ;i2c.c: 19:   RD6PPS=0x1B;
  6685   002BF8  0E1B               	movlw	27
  6686   002BFA  6F70               	movwf	112,b	;volatile
  6687   002BFC                     
  6688                           ; BSR set to: 14
  6689   002BFC  0012               	return		;funcret
  6690   002BFE                     __end_of_I2C_2_Master_Init:
  6691                           	callstack 0
  6692                           
  6693 ;; *************** function _buggy_lights_init *****************
  6694 ;; Defined at:
  6695 ;;		line 4 in file "buggy_lights.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		None
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 1
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_main
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text43
  6724   002BA6                     __ptext43:
  6725                           	callstack 0
  6726   002BA6                     _buggy_lights_init:
  6727                           	callstack 29
  6728   002BA6                     
  6729                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  6730   002BA6  9884               	bcf	132,4,c	;volatile
  6731                           
  6732                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  6733   002BA8  9288               	bcf	136,1,c	;volatile
  6734                           
  6735                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  6736   002BAA  9684               	bcf	132,3,c	;volatile
  6737                           
  6738                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  6739   002BAC  9086               	bcf	134,0,c	;volatile
  6740                           
  6741                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  6742   002BAE  9088               	bcf	136,0,c	;volatile
  6743                           
  6744                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  6745   002BB0  987C               	bcf	124,4,c	;volatile
  6746                           
  6747                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  6748   002BB2  9280               	bcf	128,1,c	;volatile
  6749                           
  6750                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  6751   002BB4  967C               	bcf	124,3,c	;volatile
  6752                           
  6753                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  6754   002BB6  907E               	bcf	126,0,c	;volatile
  6755                           
  6756                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  6757   002BB8  9080               	bcf	128,0,c	;volatile
  6758                           
  6759                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  6760   002BBA  9287               	bcf	135,1,c	;volatile
  6761                           
  6762                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  6763   002BBC  9881               	bcf	129,4,c	;volatile
  6764                           
  6765                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  6766   002BBE  9E86               	bcf	134,7,c	;volatile
  6767                           
  6768                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  6769   002BC0  927F               	bcf	127,1,c	;volatile
  6770                           
  6771                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  6772   002BC2  9879               	bcf	121,4,c	;volatile
  6773                           
  6774                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  6775   002BC4  9E7E               	bcf	126,7,c	;volatile
  6776                           
  6777                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  6778   002BC6  9087               	bcf	135,0,c	;volatile
  6779                           
  6780                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  6781   002BC8  9E85               	bcf	133,7,c	;volatile
  6782                           
  6783                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  6784   002BCA  9681               	bcf	129,3,c	;volatile
  6785                           
  6786                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  6787   002BCC  907F               	bcf	127,0,c	;volatile
  6788                           
  6789                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  6790   002BCE  9E7D               	bcf	125,7,c	;volatile
  6791                           
  6792                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  6793   002BD0  9679               	bcf	121,3,c	;volatile
  6794   002BD2  0012               	return		;funcret
  6795   002BD4                     __end_of_buggy_lights_init:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _Timer0_init *****************
  6799 ;; Defined at:
  6800 ;;		line 7 in file "timers.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, status,2, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used: 1
  6820 ;; Hardware stack levels required when called: 3
  6821 ;; This function calls:
  6822 ;;		_reset_timer
  6823 ;; This function is called by:
  6824 ;;		_main
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text44
  6829   002C26                     __ptext44:
  6830                           	callstack 0
  6831   002C26                     _Timer0_init:
  6832                           	callstack 27
  6833   002C26                     
  6834                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  6835   002C26  50D6               	movf	214,w,c	;volatile
  6836   002C28  0B1F               	andlw	-225
  6837   002C2A  0940               	iorlw	64
  6838   002C2C  6ED6               	movwf	214,c	;volatile
  6839   002C2E                     
  6840                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  6841   002C2E  88D6               	bsf	214,4,c	;volatile
  6842   002C30                     
  6843                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  6844   002C30  88D5               	bsf	213,4,c	;volatile
  6845                           
  6846                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  6847   002C32  50D6               	movf	214,w,c	;volatile
  6848   002C34  0BF0               	andlw	-16
  6849   002C36  090E               	iorlw	14
  6850   002C38  6ED6               	movwf	214,c	;volatile
  6851   002C3A                     
  6852                           ;timers.c: 18:     reset_timer();
  6853   002C3A  EC60  F016         	call	_reset_timer	;wreg free
  6854   002C3E                     
  6855                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  6856   002C3E  8ED5               	bsf	213,7,c	;volatile
  6857   002C40                     
  6858                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  6859   002C40  010E               	movlb	14	; () banked
  6860   002C42  8B29               	bsf	41,5,b	;volatile
  6861   002C44                     
  6862                           ; BSR set to: 14
  6863                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  6864   002C44  8CF2               	bsf	242,6,c	;volatile
  6865   002C46                     
  6866                           ; BSR set to: 14
  6867                           ;timers.c: 23:     INTCONbits.GIE = 1;
  6868   002C46  8EF2               	bsf	242,7,c	;volatile
  6869   002C48                     
  6870                           ; BSR set to: 14
  6871   002C48  0012               	return		;funcret
  6872   002C4A                     __end_of_Timer0_init:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function _reset_timer *****************
  6876 ;; Defined at:
  6877 ;;		line 44 in file "timers.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; Hardware stack levels required when called: 2
  6898 ;; This function calls:
  6899 ;;		_write_timer
  6900 ;; This function is called by:
  6901 ;;		_Timer0_init
  6902 ;;		_forward_navigation
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text45
  6907   002CC0                     __ptext45:
  6908                           	callstack 0
  6909   002CC0                     _reset_timer:
  6910                           	callstack 27
  6911   002CC0                     
  6912                           ;timers.c: 46:     write_timer(0, 0);
  6913   002CC0  0E00               	movlw	0
  6914   002CC2  6E01               	movwf	write_timer@tL^0,c
  6915   002CC4  0E00               	movlw	0
  6916   002CC6  EC66  F016         	call	_write_timer
  6917   002CCA  0012               	return		;funcret
  6918   002CCC                     __end_of_reset_timer:
  6919                           	callstack 0
  6920                           
  6921 ;; *************** function _write_timer *****************
  6922 ;; Defined at:
  6923 ;;		line 35 in file "timers.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  tH              1    wreg     unsigned char 
  6926 ;;  tL              1    0[COMRAM] unsigned char 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  tH              1    1[COMRAM] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6938 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;Total ram usage:        2 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 1
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_reset_timer
  6949 ;;		_return_to_sender
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text46
  6954   002CCC                     __ptext46:
  6955                           	callstack 0
  6956   002CCC                     _write_timer:
  6957                           	callstack 27
  6958                           
  6959                           ;incstack = 0
  6960                           ;write_timer@tH stored from wreg
  6961   002CCC  6E02               	movwf	write_timer@tH^0,c
  6962   002CCE                     
  6963                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  6964   002CCE  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  6965   002CD2                     
  6966                           ;timers.c: 41:     TMR0L = tL;
  6967   002CD2  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  6968   002CD6  0012               	return		;funcret
  6969   002CD8                     __end_of_write_timer:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _ISR *****************
  6973 ;; Defined at:
  6974 ;;		line 116 in file "timers.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used: 1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		Interrupt level 2
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	intcode
  7002   000008                     __pintcode:
  7003                           	callstack 0
  7004   000008                     _ISR:
  7005                           	callstack 24
  7006                           
  7007                           ;incstack = 0
  7008   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7009   00000A                     
  7010                           ;timers.c: 119:     if (PIR0bits.TMR0IF) {
  7011   00000A  010E               	movlb	14	; () banked
  7012   00000C  AB33               	btfss	51,5,b	;volatile
  7013   00000E  EF0B  F000         	goto	i2u152_41
  7014   000012  EF0D  F000         	goto	i2u152_40
  7015   000016                     i2u152_41:
  7016   000016  EF18  F000         	goto	i2l673
  7017   00001A                     i2u152_40:
  7018   00001A                     
  7019                           ; BSR set to: 14
  7020                           ;timers.c: 120:         if (returning) {
  7021   00001A  505D               	movf	_returning^0,w,c
  7022   00001C  B4D8               	btfsc	status,2,c
  7023   00001E  EF13  F000         	goto	i2u153_41
  7024   000022  EF15  F000         	goto	i2u153_40
  7025   000026                     i2u153_41:
  7026   000026  EF17  F000         	goto	i2l672
  7027   00002A                     i2u153_40:
  7028   00002A                     
  7029                           ; BSR set to: 14
  7030                           ;timers.c: 121:             return_flag = 1;
  7031   00002A  0E01               	movlw	1
  7032   00002C  6E5C               	movwf	_return_flag^0,c
  7033   00002E                     i2l672:
  7034                           
  7035                           ; BSR set to: 14
  7036                           ;timers.c: 126:         PIR0bits.TMR0IF = 0;
  7037   00002E  9B33               	bcf	51,5,b	;volatile
  7038   000030                     i2l673:
  7039                           
  7040                           ; BSR set to: 14
  7041   000030  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7042   000032  0011               	retfie		f
  7043   000034                     __end_of_ISR:
  7044                           	callstack 0
  7045                           
  7046                           	psect	rparam
  7047   000000                     
  7048                           	psect	temp
  7049   00005E                     btemp:
  7050                           	callstack 0
  7051   00005E                     	ds	1
  7052   000000                     int$flags	set	btemp
  7053   000000                     wtemp8	set	btemp+1
  7054   000000                     ttemp5	set	btemp+1
  7055   000000                     ttemp6	set	btemp+4
  7056   000000                     ttemp7	set	btemp+8
  7057                           
  7058                           	psect	idloc
  7059                           
  7060                           ;Config register IDLOC0 @ 0x200000
  7061                           ;	unspecified, using default values
  7062   200000                     	org	2097152
  7063   200000  FFFF               	dw	65535
  7064                           
  7065                           ;Config register IDLOC1 @ 0x200002
  7066                           ;	unspecified, using default values
  7067   200002                     	org	2097154
  7068   200002  FFFF               	dw	65535
  7069                           
  7070                           ;Config register IDLOC2 @ 0x200004
  7071                           ;	unspecified, using default values
  7072   200004                     	org	2097156
  7073   200004  FFFF               	dw	65535
  7074                           
  7075                           ;Config register IDLOC3 @ 0x200006
  7076                           ;	unspecified, using default values
  7077   200006                     	org	2097158
  7078   200006  FFFF               	dw	65535
  7079                           
  7080                           ;Config register IDLOC4 @ 0x200008
  7081                           ;	unspecified, using default values
  7082   200008                     	org	2097160
  7083   200008  FFFF               	dw	65535
  7084                           
  7085                           ;Config register IDLOC5 @ 0x20000A
  7086                           ;	unspecified, using default values
  7087   20000A                     	org	2097162
  7088   20000A  FFFF               	dw	65535
  7089                           
  7090                           ;Config register IDLOC6 @ 0x20000C
  7091                           ;	unspecified, using default values
  7092   20000C                     	org	2097164
  7093   20000C  FFFF               	dw	65535
  7094                           
  7095                           ;Config register IDLOC7 @ 0x20000E
  7096                           ;	unspecified, using default values
  7097   20000E                     	org	2097166
  7098   20000E  FFFF               	dw	65535
  7099                           
  7100                           	psect	config
  7101                           
  7102                           ;Config register CONFIG1L @ 0x300000
  7103                           ;	External Oscillator mode Selection bits
  7104                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7105                           ;	Power-up default value for COSC bits
  7106                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7107   300000                     	org	3145728
  7108   300000  AA                 	db	170
  7109                           
  7110                           ;Config register CONFIG1H @ 0x300001
  7111                           ;	unspecified, using default values
  7112                           ;	Clock Out Enable bit
  7113                           ;	CLKOUTEN = 0x1, unprogrammed default
  7114                           ;	Clock Switch Enable bit
  7115                           ;	CSWEN = 0x1, unprogrammed default
  7116                           ;	Fail-Safe Clock Monitor Enable bit
  7117                           ;	FCMEN = 0x1, unprogrammed default
  7118   300001                     	org	3145729
  7119   300001  FF                 	db	255
  7120                           
  7121                           ;Config register CONFIG2L @ 0x300002
  7122                           ;	unspecified, using default values
  7123                           ;	Master Clear Enable bit
  7124                           ;	MCLRE = 0x1, unprogrammed default
  7125                           ;	Power-up Timer Enable bit
  7126                           ;	PWRTE = 0x1, unprogrammed default
  7127                           ;	Low-power BOR enable bit
  7128                           ;	LPBOREN = 0x1, unprogrammed default
  7129                           ;	Brown-out Reset Enable bits
  7130                           ;	BOREN = 0x3, unprogrammed default
  7131   300002                     	org	3145730
  7132   300002  FF                 	db	255
  7133                           
  7134                           ;Config register CONFIG2H @ 0x300003
  7135                           ;	unspecified, using default values
  7136                           ;	Brown Out Reset Voltage selection bits
  7137                           ;	BORV = 0x3, unprogrammed default
  7138                           ;	ZCD Disable bit
  7139                           ;	ZCD = 0x1, unprogrammed default
  7140                           ;	PPSLOCK bit One-Way Set Enable bit
  7141                           ;	PPS1WAY = 0x1, unprogrammed default
  7142                           ;	Stack Full/Underflow Reset Enable bit
  7143                           ;	STVREN = 0x1, unprogrammed default
  7144                           ;	Debugger Enable bit
  7145                           ;	DEBUG = 0x1, unprogrammed default
  7146                           ;	Extended Instruction Set Enable bit
  7147                           ;	XINST = 0x1, unprogrammed default
  7148   300003                     	org	3145731
  7149   300003  FF                 	db	255
  7150                           
  7151                           ;Config register CONFIG3L @ 0x300004
  7152                           ;	WDT Period Select bits
  7153                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7154                           ;	WDT operating mode
  7155                           ;	WDTE = OFF, WDT Disabled
  7156   300004                     	org	3145732
  7157   300004  9F                 	db	159
  7158                           
  7159                           ;Config register CONFIG3H @ 0x300005
  7160                           ;	unspecified, using default values
  7161                           ;	WDT Window Select bits
  7162                           ;	WDTCWS = 0x7, unprogrammed default
  7163                           ;	WDT input clock selector
  7164                           ;	WDTCCS = 0x7, unprogrammed default
  7165   300005                     	org	3145733
  7166   300005  FF                 	db	255
  7167                           
  7168                           ;Config register CONFIG4L @ 0x300006
  7169                           ;	unspecified, using default values
  7170                           ;	Write Protection Block 0
  7171                           ;	WRT0 = 0x1, unprogrammed default
  7172                           ;	Write Protection Block 1
  7173                           ;	WRT1 = 0x1, unprogrammed default
  7174                           ;	Write Protection Block 2
  7175                           ;	WRT2 = 0x1, unprogrammed default
  7176                           ;	Write Protection Block 3
  7177                           ;	WRT3 = 0x1, unprogrammed default
  7178                           ;	Write Protection Block 3
  7179                           ;	WRT4 = 0x1, unprogrammed default
  7180                           ;	Write Protection Block 3
  7181                           ;	WRT5 = 0x1, unprogrammed default
  7182                           ;	Write Protection Block 3
  7183                           ;	WRT6 = 0x1, unprogrammed default
  7184                           ;	Write Protection Block 3
  7185                           ;	WRT7 = 0x1, unprogrammed default
  7186   300006                     	org	3145734
  7187   300006  FF                 	db	255
  7188                           
  7189                           ;Config register CONFIG4H @ 0x300007
  7190                           ;	unspecified, using default values
  7191                           ;	Configuration Register Write Protection bit
  7192                           ;	WRTC = 0x1, unprogrammed default
  7193                           ;	Boot Block Write Protection bit
  7194                           ;	WRTB = 0x1, unprogrammed default
  7195                           ;	Data EEPROM Write Protection bit
  7196                           ;	WRTD = 0x1, unprogrammed default
  7197                           ;	Scanner Enable bit
  7198                           ;	SCANE = 0x1, unprogrammed default
  7199                           ;	Low Voltage Programming Enable bit
  7200                           ;	LVP = 0x1, unprogrammed default
  7201   300007                     	org	3145735
  7202   300007  FF                 	db	255
  7203                           
  7204                           ;Config register CONFIG5L @ 0x300008
  7205                           ;	unspecified, using default values
  7206                           ;	UserNVM Program Memory Code Protection bit
  7207                           ;	CP = 0x1, unprogrammed default
  7208                           ;	DataNVM Memory Code Protection bit
  7209                           ;	CPD = 0x1, unprogrammed default
  7210   300008                     	org	3145736
  7211   300008  FF                 	db	255
  7212                           
  7213                           ;Config register CONFIG5H @ 0x300009
  7214                           ;	unspecified, using default values
  7215   300009                     	org	3145737
  7216   300009  FF                 	db	255
  7217                           
  7218                           ;Config register CONFIG6L @ 0x30000A
  7219                           ;	unspecified, using default values
  7220                           ;	Table Read Protection Block 0
  7221                           ;	EBTR0 = 0x1, unprogrammed default
  7222                           ;	Table Read Protection Block 1
  7223                           ;	EBTR1 = 0x1, unprogrammed default
  7224                           ;	Table Read Protection Block 2
  7225                           ;	EBTR2 = 0x1, unprogrammed default
  7226                           ;	Table Read Protection Block 3
  7227                           ;	EBTR3 = 0x1, unprogrammed default
  7228                           ;	Table Read Protection Block 4
  7229                           ;	EBTR4 = 0x1, unprogrammed default
  7230                           ;	Table Read Protection Block 5
  7231                           ;	EBTR5 = 0x1, unprogrammed default
  7232                           ;	Table Read Protection Block 6
  7233                           ;	EBTR6 = 0x1, unprogrammed default
  7234                           ;	Table Read Protection Block 7
  7235                           ;	EBTR7 = 0x1, unprogrammed default
  7236   30000A                     	org	3145738
  7237   30000A  FF                 	db	255
  7238                           
  7239                           ;Config register CONFIG6H @ 0x30000B
  7240                           ;	unspecified, using default values
  7241                           ;	Boot Block Table Read Protection bit
  7242                           ;	EBTRB = 0x1, unprogrammed default
  7243   30000B                     	org	3145739
  7244   30000B  FF                 	db	255
  7245                           tosu	equ	0xFFF
  7246                           tosh	equ	0xFFE
  7247                           tosl	equ	0xFFD
  7248                           stkptr	equ	0xFFC
  7249                           pclatu	equ	0xFFB
  7250                           pclath	equ	0xFFA
  7251                           pcl	equ	0xFF9
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           prodh	equ	0xFF4
  7257                           prodl	equ	0xFF3
  7258                           indf0	equ	0xFEF
  7259                           postinc0	equ	0xFEE
  7260                           postdec0	equ	0xFED
  7261                           preinc0	equ	0xFEC
  7262                           plusw0	equ	0xFEB
  7263                           fsr0h	equ	0xFEA
  7264                           fsr0l	equ	0xFE9
  7265                           wreg	equ	0xFE8
  7266                           indf1	equ	0xFE7
  7267                           postinc1	equ	0xFE6
  7268                           postdec1	equ	0xFE5
  7269                           preinc1	equ	0xFE4
  7270                           plusw1	equ	0xFE3
  7271                           fsr1h	equ	0xFE2
  7272                           fsr1l	equ	0xFE1
  7273                           bsr	equ	0xFE0
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           preinc2	equ	0xFDC
  7278                           plusw2	equ	0xFDB
  7279                           fsr2h	equ	0xFDA
  7280                           fsr2l	equ	0xFD9
  7281                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        26
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      93
    BANK0           160     32      90
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getHSVval@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    getHSVval@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    maxRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    minRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1149DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1149DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2726$buffer	PTR unsigned char  size(2) Largest target is 0

    S2726$source	PTR const unsigned char  size(2) Largest target is 0

    scaleRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[13]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[13]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[13]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[13]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _scaleRGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _getHSVval->___lldiv
    _minRGB->_min
    _maxRGB->_max
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   25285
                                             81 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                          _getHSVval
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                           _scaleRGB
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  27    26      1    5843
                                             54 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendHSVvalSerial4                                   22    21      1    5821
                                             54 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    5182
                                             28 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4357
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    11      3    4005
                                             10 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scaleRGB                                             3     2      1    5963
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _getHSVval                                           52    50      2    5761
                                             13 COMRAM    50    48      2
                            ___lldiv
                             ___lmul
                             _maxRGB
                             _minRGB
 ---------------------------------------------------------------------------------
 (2) _minRGB                                               4     2      2     581
                                              6 COMRAM     4     2      2
                                _min
 ---------------------------------------------------------------------------------
 (3) _min                                                  6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _maxRGB                                               4     2      2     581
                                              6 COMRAM     4     2      2
                                _max
 ---------------------------------------------------------------------------------
 (3) _max                                                  6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1226
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getHSVval
     ___lldiv
     ___lmul
     _maxRGB
       _max
     _minRGB
       _min
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _scaleRGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sendHSVvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      5A       5       56.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      60        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 08 11:12:37 2024

                 _turn180Delay 00AE                 _color_read_Red 28C4                _color_read_Blue 29B4  
              _trail_timer_low 0114                             l42 21A0                             l27 2BD2  
                           l71 2912                             l80 29B2                             l65 2B44  
                           l74 2962                             l83 281A                             l68 2C68  
                           l93 2B9C                             l77 2A02                             l94 2BA4  
                           l97 2B6C                             l98 2B74                   ___awdiv@sign 0006  
             _trail_timer_high 0128               _color_read_Clear 2964               _color_read_Green 2914  
                          l101 28C2                            l104 286E                            l123 14EE  
                          l107 20D8                            l300 2CF4                            l303 2CE0  
                          l312 2ADC                            l306 2CEA                            l309 2CBE  
                          l433 2C86                            l442 2C8A                            l291 2BFC  
                          l451 2710                            l196 2502                            l445 2C9E  
                          l294 2BFE                            l462 276E                            l297 2C24  
                          l465 2A4E                            l730 2462                            l714 263A  
                          l643 2CD6                            l715 264A                            l637 2C48  
                          l646 2CCA                            l737 2472                            l934 2264  
                          l947 23CE                            _ISR 0008         ??_toggle_tricolour_LED 0001  
                          _abs 2ADE                            _max 2B76                            _min 2B46  
                 ___awmod@sign 0006                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                    _squareDelay 00AA                           ?_ISR 0001  
                 ___fltol@exp1 0031                           l1000 2002                           l1201 2576  
                         l1211 26AE                           ?_abs 0007                           l1204 26A6  
                         l3000 1922                           l1321 1918                           l3010 196C  
                         l3002 1948                           l3100 2CE2                           l1324 17AA  
                         l3020 19E6                           l3012 198C                           l3004 1950  
                         l1317 15B4                           l3102 2CE6                           l3110 2AA2  
                         l1334 18DA                           l1326 1822                           l1422 1ABC  
                         l3030 1A58                           l3022 1A16                           l3014 19AC  
                         l3006 195E                           l1327 1810                           l1423 1C24  
                         l3200 2BE8                           l3112 2AAA                           l3104 2CD8  
                         l3040 1AA8                           l3032 1A68                           l3024 1A32  
                         l3016 19C4                           l3008 1962                           l1361 1DD8  
                         l1441 27BC                           l3202 2BEA                           l3122 2B76  
                         l3130 2B4E                           l3114 2AB2                           l3106 2CDC  
                         l1194 256E                           l3050 1B0E                           l3034 1A78  
                         l3042 1AAA                           l3026 1A36                           l3018 19CE  
                         l1442 27C4                           l3204 2C4C                           l3124 2B7E  
                         l3132 2B64                           l3116 2AD8                           l3108 2A9E  
                         l3220 29FA                           l3212 2914                           l1372 1D70  
                         l3060 1B68                           l3052 1B12                           l3036 1A86  
                         l3028 1A48                           l3044 1AC8                           l1365 1D14  
                         l1461 231E                           l1381 2A9A                           l3126 2B94  
                         l3230 2870                           l3118 2ADA                           l3214 295A  
                         l3206 28C4                           l1358 1C7C                           l1446 2AF8  
                         l3062 1B7C                           l3054 1B36                           l3070 1BAE  
                         l3046 1AE8                           l3038 1A8E                           l3128 2B46  
                         l3224 2964                           l3208 290A                           l3400 150C  
                         l3240 26B4                           l1472 2CFC                           l3080 1C14  
                         l3064 1B96                           l3056 1B52                           l3048 1B00  
                         l3072 1BDE                           l1449 2B10                           l3234 281C  
                         l3218 29B4                           l3226 29AA                           l3410 1552  
                         l3402 151C                           l3242 26DA                           l3082 1C1C  
                         l3074 1BE6                           l3066 1B98                           l3058 1B56  
                         l3250 2A64                           l3180 2CCE                           l3092 2CEC  
                         l3500 1876                           l3420 157E                           l3412 1558  
                         l3404 152C                           l3244 26DE                           l4140 1BD0  
                         l3252 2A6C                           l3182 2CD2                           l3094 2CF0  
                         l3510 18DE                           l3502 187A                           l3430 15D4  
                         l3422 158E                           l3414 155E                           l3406 153C  
                         l3238 26B0                           l3078 1BF2                           l3190 279C  
                         l3254 2A84                           l3246 2A50                           l3360 2CC0  
                         l3192 2BD4                           l3096 2CB6                           l3520 1908  
                         l3512 18EE                           l3504 1894                           l3440 1614  
                         l3424 159E                           l3416 156C                           l3408 1542  
                         l3600 1D80                           l3176 2C8A                           l2800 222E  
                         l3184 2770                           l3256 2A92                           l3248 2A5C  
                         l3194 2BDE                           l3098 2CBA                           l3370 261A  
                         l3362 25E2                           l3514 18FC                           l3506 18A8  
                         l3450 165E                           l3442 1620                           l3434 15E8  
                         l3426 15A4                           l3418 156E                           l3530 1F28  
                         l3610 1DC8                           l3602 1D84                           l3178 2C9A  
                         l2810 2254                           l2802 2236                           l3186 2774  
                         l3196 2BE4                           l3620 2B16                           l3380 240A  
                         l3372 23D0                           l3364 25F2                           l3700 119E  
                         l3516 18FE                           l3508 18C2                           l3460 16B0  
                         l3452 166A                           l3444 1638                           l3436 15F4  
                         l3428 15C4                           l3540 1F76                           l3532 1F52  
                         l3524 1EFE                           l3604 1DA8                           l2812 225C  
                         l2804 2238                           l2820 2332                           l2900 22DE  
                         l3188 2782                           l3614 2BA6                           l3198 2BE6  
                         l3622 2B20                           l3390 2452                           l3382 2418  
                         l3374 23E0                           l3366 2600                           l3710 126C  
                         l3702 11DE                           l3518 1904                           l3470 172E  
                         l3462 16C0                           l3454 167A                           l3446 1644  
                         l3438 15FE                           l3550 1FA2                           l3534 1F54  
                         l3526 1F14                           l3606 1DB8                           l2806 223E  
                         l2830 2366                           l2822 233A                           l3624 2B30  
                         l3392 245C                           l3384 2422                           l3376 23F6  
                         l3368 2610                           l3720 1320                           l3712 1292  
                         l3704 1212                           l3640 0E24                           l3800 2C6A  
                         l3480 17A8                           l3472 1764                           l3464 16DC  
                         l3456 1686                           l3448 1650                           l3560 1FD2  
                         l3536 1F64                           l3608 1DC6                           l2808 2244  
                         l2840 23A2                           l2832 236E                           l2824 233E  
                         l2816 2320                           l2904 2ADE                           l3616 20DA  
                         l3626 2B3A                           l3618 2B12                           l3386 2440  
                         l3378 23FE                           l3730 13BA                           l3722 1350  
                         l3714 129E                           l3706 1242                           l3650 0E7A  
                         l3642 0E3C                           l3810 2C84                           l3802 2C74  
                         l3490 1808                           l3482 17BA                           l3474 1772  
                         l3466 16E8                           l3458 1696                           l3394 14F0  
                         l3562 1FE2                           l3546 1F8E                           l3538 1F68  
                         l3570 1C38                           l2842 23A8                           l2834 2376  
                         l2826 234C                           l2818 2324                           l2906 2AEC  
                         l3820 2C3E                           l3812 2C26                           l3388 2450  
                         l3740 1444                           l3732 13EE                           l3716 12B0  
                         l3724 135C                           l3708 124A                           l3660 0EDE  
                         l3652 0E86                           l3644 0E4C                           l3628 27C6  
                         l3804 2C76                           l3484 17C8                           l3476 1790  
                         l3468 1704                           l3396 14FC                           l3564 1FF2  
                         l3556 1FB6                           l3548 1F98                           l3580 1CB6  
                         l3572 1C46                           l2780 21C0                           l2772 21A2  
                         l2836 2384                           l2844 23AE                           l2828 2354  
                         l2860 252E                           l2852 2504                           l3822 2C40  
                         l3814 2C2E                           l3750 14CA                           l3742 1450  
                         l3734 141E                           l3726 1368                           l3718 12EC  
                         l3670 0F9A                           l3662 0F1E                           l3654 0EA4  
                         l3646 0E5C                           l3806 2C80                           l3494 1832  
                         l3486 17CC                           l3478 179A                           l3398 150A  
                         l3558 1FC2                           l3590 1D0A                           l3582 1CBE  
                         l3574 1C8C                           l3638 2004                           l2790 21F4  
                         l2782 21CE                           l2774 21A6                           l2846 23BE  
                         l2838 239A                           l2870 2562                           l2862 253C  
                         l2854 250C                           l3830 2764                           l3910 1E44  
                         l3902 1DDA                           l3824 2C44                           l3816 2C30  
                         l3752 14DC                           l3744 1484                           l3728 137A  
                         l3672 0FCE                           l3664 0F52                           l3656 0ECE  
                         l3680 107E                           l3736 1426                           l3648 0E68  
                         l3760 24AE                           l3808 2C82                           l3496 183E  
                         l3488 17DA                           l3592 1D46                           l3584 1CCA  
                         l3576 1CA2                           l3568 1C28                           l2792 21FC  
                         l2784 21D6                           l2776 21B4                           l2848 23C6  
                         l2872 2568                           l2864 2542                           l2856 251E  
                         l2880 266E                           l3832 2A04                           l3920 1E70  
                         l3912 1E4C                           l3904 1E20                           l3826 2C46  
                         l3818 2C3A                           l3746 14B4                           l3738 1438  
                         l3690 1118                           l3682 10A0                           l3674 1012  
                         l3666 0F82                           l3658 0ECE                           l3770 24EA  
                         l3762 24D2                           l3754 2474                           l3498 184C  
                         l3594 1D52                           l3586 1CFC                           l2794 2204  
                         l2786 21DA                           l2778 21BC                           l2866 2558  
                         l2858 2526                           l2882 267C                           l2874 264C  
                         l2890 2266                           l3834 2A44                           l3930 1E7E  
                         l3922 1E74                           l3914 1E54                           l3906 1E28  
                         l3748 14BC                           l3692 114C                           l3684 10C6  
                         l3676 1046                           l3668 0F8E                           l3772 24F4  
                         l3764 24DC                           l3756 2484                           l3596 1D60  
                         l3588 1CFE                           l2796 2212                           l2788 21E2  
                         l2868 2560                           l2884 2692                           l2876 265E  
                         l2892 2276                           l3828 2712                           l3940 1EAE  
                         l3932 1E80                           l3924 1E78                           l3916 1E5C  
                         l3908 1E30                           l3694 117C                           l3686 10D2  
                         l3678 1076                           l3774 24F6                           l3766 24DE  
                         l3758 24AA                           l3598 1D7E                           l2798 2218  
                         l2886 269A                           l2878 2666                           l2894 2286  
                         l3950 1ED6                           l3942 1EB2                           l3934 1E82  
                         l3926 1E7A                           l3918 1E6C                           ?_max 0001  
                         l3688 10DC                           l3696 1188                           l3776 2500  
                         l3768 24E8                           l2888 26A0                           l2896 2290  
                         l3952 1EDE                           l3944 1EBA                           l3936 1E84  
                         l3928 1E7C                           l2994 2BFE                           l3698 1194  
                         l2898 22AC                           l3946 1EC2                           l3938 1E88  
                         l2996 2C0E                           l3948 1ECE                           ?_min 0001  
                         l2998 191A                           STR_1 0E19                           STR_2 0E1E  
                         STR_5 0E01                           STR_6 0E0E                           u2000 19E2  
                         u2001 19DC                           u2010 19E4                           u2100 1BAA  
                         u2020 1A48                           u2101 1BA6                           u2021 1A44  
                         u2110 2AC6                           u2030 1A58                           u2111 2ABE  
                         u2031 1A54                           u2200 2600                           u2040 1A68  
                         u2201 25FC                           u2041 1A64                           u2210 263A  
                         u2130 2B94                           u2050 1A78                           u2211 2636  
                         u2131 2B90                           u2051 1A74                           u2220 23F6  
                         u2140 2B64                           u2300 158E                           u2060 1ABC  
                         u2221 23F2                           u2141 2B60                           u2301 158A  
                         u2061 1AB8                           u2230 2418                           u2310 15C4  
                         u2150 2C9A                           u2070 1AE8                           u2231 2414  
                         u2311 15C0                           u2151 2C96                           u2071 1AE4  
                         u3007 1EE8                           u2240 2440                           u2128 2AC8  
                         u2400 184C                           u2320 15D4                           u1600 222E  
                         u2080 1B68                           u2160 27BC                   _BAUD4CONbits 0EE9  
                         u3017 2B26                           u2241 243C                           u2401 1848  
                         u2321 15D0                           u1601 222A                           u2081 1B64  
                         u2161 27B8                           u2410 1894                           u2330 174E  
                         u2250 150A                           u2170 26D6                           u1610 2254  
                         u2090 1B78                           u2411 1890                           u2251 1506  
                         u1611 2250                           u2091 1B74                           u2420 18C2  
                         u2340 17A8                           u2260 151C                           u2500 1FE2  
                         u2180 2700                           u1620 2332                           u1700 2558  
                         u2421 18BE                           u2341 17A4                           u2261 1518  
                         u2501 1FDE                           u1621 232E                           u1701 2554  
                         u2430 18FC                           u2350 17C8                           u2270 152C  
                         u2510 1C38                           u2190 2710                           u1630 234C  
                         u1710 265E                           u2431 18F8                           u2351 17C4  
                         u2335 1744                           u2271 1528                           u2511 1C34  
                         u2191 270C                           u1631 2348                           u1711 265A  
                         u2360 17DA                           u2280 156C                           u2440 1F14  
                         u2600 1DC6                           u2520 1C46                           u1560 21B4  
                         u1640 2366                           u1720 267C                           u2361 17D6  
                         u2281 1568                           u2441 1F10                           u2601 1DC2  
                         u2521 1C42                           u2177 26CC                           u1561 21B0  
                         u1641 2362                           u1721 2678                           u2370 1808  
                         u2290 157E                           u2450 1F48                           u2530 1CA2  
                         u1570 21CE                           u1650 2384                           u1730 2692  
                         u2610 20EC                           _T2PR 0FBC                           u2371 1804  
                         u2291 157A                           u2531 1C9E                           u2187 26F6  
                         u1571 21CA                           u1651 2380                           u1731 268E  
                         u2611 20E4                           u2380 181E                           u2460 1F76  
                         u2540 1CF8                           u1580 21F4                           u1660 239A  
                         u1740 2276                           u2381 181A                           u2461 1F72  
                         u2541 1CF4                           u1581 21F0                           u1661 2396  
                         u1741 2272                           u2390 1832                           u2470 1F8A  
                         u2550 1D42                           u1590 2212                           u1670 23BE  
                         u1750 2286                           u2710 218E                           u2630 210C  
                         u2391 182E                           u2471 1F86                           u2455 1F3E  
                         u2551 1D3E                           u1591 220E                           u1671 23BA  
                         u1751 2282                           u2711 2186                           u2631 2104  
                         u2800 10C6                           u2480 1FB2                           u2560 1D60  
                         u1680 251E                           u1760 22AC                           u2801 10C2  
                         u2481 1FAE                           u2561 1D5C                           u1681 251A  
                         u1761 22A8                           u2810 126C                           u2490 1FD2  
                         u2570 1D70                           u1690 253C                           u1770 22DE  
                         u2650 212C                           u2811 1268                           u2491 1FCE  
                         u2571 1D6C                           u1691 2538                           u1771 22DA  
                         u2651 2124                           u2820 1292                           u2580 1D7E  
                         u1780 2AEC                           u2708 216E                           u2628 20EE  
                         u2821 128E                           u2581 1D7A                           u1781 2AE8  
                         u1950 2C0E                           u2590 1DB8                           u2670 214E  
                         u2910 1E9C                           u1951 2C0A                           u2591 1DB4  
                         u2671 2146                           u2911 1E94                           u1960 2C24  
                         u2760 0E7A                           u2728 2190                           u2648 210E  
                         u1961 2C20                           u2761 0E76                           u2850 1438  
                         u2770 0EA4                           u1970 1948                           u2690 216C  
                         u2851 1434                           u2835 12A0                           u2771 0EA0  
                         u1971 1944                           u2691 2164                           u2780 0ECE  
                         u1980 198C                           u2668 212E                           u2845 136A  
                         u2781 0ECA                           u1981 1988                           u2790 10A0  
                         u1990 19AC                           u2791 109C                           u1991 19A8  
                         u2688 2150                           u2928 1E9E                           abs@a 0007  
                         _dbuf 0060                           _main 1DDA                           _prec 0084  
                         _nout 0080                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         max@a 0001                           max@b 0003                           btemp 005E  
                         min@a 0001                           min@b 0003             _sendRGBCvalSerial4 2712  
                         prodh 0FF4                           prodl 0FF3                           start 0034  
       __end_of_color_read_Red 2914                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 0037                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                          ??_max 0005                          ??_min 0005  
                ___fltol@sign1 0030                          ?_main 0001             _timer_high_pointer 0054  
              __end_of___awdiv 2266                __end_of___awmod 23D0                __end_of___flmul 191A  
              __end_of___fltol 2004                __end_of___lldiv 2474                ___awdiv@divisor 0003  
              __end_of___lwdiv 2578                __end_of___lwmod 26B0                          i2l672 002E  
                        i2l673 0030                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0011  
                 vfpfcnvrt@fmt 000C                          _TMR0H 0FD4                          _TMR0L 0FD3  
          ___lmul@multiplicand 0005        __end_of_sendCharSerial4 2CA0     __end_of_I2C_2_Master_Start 2CF6  
                  _write_timer 2CCC     __end_of_I2C_2_Master_Write 2CC0                    _turningGear 0056  
                        _flags 005A           ??_sendRGBCvalSerial4 0038                          _fputc 2266  
                        _width 0082                          _putch 2CFC              _turnRight135Delay 00B0  
                        tablat 0FF5                _turnLeft90Delay 00B6                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 2A9C        __end_of_color_read_Blue 2A04  
        _I2C_2_Master_RepStart 2CD8                ?_color_read_Red 0005                __initialization 2578  
                 __end_of_main 1EFE                         ??_main 0052                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2730 001A  
                       i2l2732 002A                         i2l2728 000A                         _RG6PPS 0E88  
                vfpfcnvrt@done 0010       __end_of_color_click_init 2B46                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 1DDA               _turnLeft135Delay 00B2  
                ??_Timer0_init 0003                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001C                         ___lmul 25E2                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___flmul 0017                      ??___fltol 002C  
                    ??___lldiv 0009                      ??___lwdiv 0005                      ??___lwmod 0005  
                       _maxRGB 2870                         _minRGB 281C               __end_of_scaleRGB 20DA  
                       clear_0 25BE                         clear_1 25CA               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       fputc@c 0001                   __pdataCOMRAM 0054              _timer_low_pointer 00A8  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 27C6              ??_initDCmotorsPWM 0003                      ??_sprintf 0028  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
            _buggy_lights_init 2BA6                     __accesstop 0060        __end_of__initialization 25D8  
     __end_of_color_read_Clear 29B4       __end_of_color_read_Green 2964         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001                     ___fltol@f1 0028  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 2CA0  
            getHSVval@temp_630 0034              getHSVval@temp_631 0020              getHSVval@temp_626 0038  
            getHSVval@temp_627 0028              getHSVval@temp_628 002C              getHSVval@temp_629 0030  
          ??_buggy_lights_init 0001                  __end_of_fputc 2320                  __end_of_putch 2CFE  
          __end_of_Timer0_init 2C4A                        ??_fputc 0004      __end_of_buggy_lights_init 2BD4  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 27C6              _color_writetoaddr 2C4A                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003                        ?___lmul 0001                        ?_maxRGB 0007  
                      ?_minRGB 0007                 ___lmul@product 0009            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                 ?_write_timer 0001                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
            __end_of_getHSVval 14F0         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                    ?_scaleRGB 0032      __end_of_color_writetoaddr 2C6A             _I2C_2_Master_Start 2CEC  
                   _initUSART4 2C6A             _I2C_2_Master_Write 2CB4                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 2C26  
      sendStringSerial4@string 0002                        ___awdiv 21A2                        ___awmod 2320  
                      ___flmul 14F0                        ___fltol 1EFE                        ___lldiv 23D0  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 2504            ?_I2C_2_Master_Write 0001  
                      ___lwmod 264C                      ?_vfprintf 0019                   __psmallconst 0E00  
                      __pcinit 2578                        __ramtop 0E00                        __ptext0 1DDA  
                      __ptext1 20DA                        __ptext2 2712                        __ptext3 2A04  
                      __ptext4 2A50                        __ptext5 2770                        __ptext6 191A  
                      __ptext7 2266                        __ptext8 2CFC                        __ptext9 2ADE  
                    _T2CONbits 0FBD                     ??___xxtofl 0005               ___awmod@dividend 0001  
                   getHSVval@C 003E                     getHSVval@H 001E                     getHSVval@M 003C  
                    _T2HLTbits 0FBE                     getHSVval@S 001C                     getHSVval@m 001A  
                      maxRGB@p 0007                        _sprintf 2A50                        minRGB@p 0007  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 25D8  
            _sendHSVvalSerial4 2A04                    ?_getRGBCval 000C                        fputc@fp 0003  
                   ??_scaleRGB 0033              ?_color_click_init 0001                  getHSVval@temp 0024  
           ?_sendHSVvalSerial4 0037                ___lldiv@divisor 0005             ??_color_click_init 0005  
              ___lldiv@counter 000D              __end_of_vfpfcnvrt 1C26            ??_sendHSVvalSerial4 0038  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0014  
                   ??_vfprintf 001C                _initDCmotorsPWM 2474                  ___xxtofl@sign 0009  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88      __end_of_sendHSVvalSerial4 2A50       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 008C                     main@motorR 0095  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                     max@max_val 0005  
               __end_of___lmul 264C                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0013  
                  vfpfcnvrt@fp 000B                  __pidataCOMRAM 2CF6                 __end_of_maxRGB 28C4  
               __end_of_minRGB 2870      sendRGBCvalSerial4@col_val 0037       sendHSVvalSerial4@col_val 0037  
                   min@min_val 0005            color_read_Clear@tmp 000A            start_initialization 2578  
                  __end_of_ISR 0034                    __end_of_abs 2B12                    __end_of_max 2BA6  
                  __end_of_min 2B76               _turnRight90Delay 00B4      sendRGBCvalSerial4@tempStr 0038  
     sendHSVvalSerial4@tempStr 0038            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 2504  
                  vfprintf@fmt 001A                       ??___lmul 0009                       ??_maxRGB 0009  
                     ??_minRGB 0009                    __pdataBANK0 00A6                      ___flmul@a 0013  
                    ___flmul@b 000F                    __pbssCOMRAM 005A                  __pcstackBANK0 0086  
               _wall_threshold 00B8   __end_of_toggle_tricolour_LED 21A2                      _getHSVval 0E24  
             ___lwdiv@dividend 0001                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___flmul 000F  
                     ?___fltol 0028                       ?___lldiv 0001                       ?___lwdiv 0001  
                     ?___lwmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 2BFE              _I2C_2_Master_Init 2BD4  
            _I2C_2_Master_Read 2A9C              _I2C_2_Master_Stop 2CE2                    _maxRGB$3164 0009  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 0005                  _headbuttDelay 00AC  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001D                      _rampDelay 0059  
                 ??_getRGBCval 000D              _sendStringSerial4 26B0            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                    _minRGB$3165 0009                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                     ?_getHSVval 000E                  ??_reset_timer 0003  
                     i2u152_40 001A                       i2u152_41 0016                       i2u153_40 002A  
                     i2u153_41 0026                       _PIR0bits 0E33                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 005D  
                    _vfpfcnvrt 191A      __end_of_I2C_2_Master_Idle 2C26      __end_of_I2C_2_Master_Init 2BFE  
    __end_of_I2C_2_Master_Read 2ADE      __end_of_I2C_2_Master_Stop 2CEC    I2C_2_Master_Write@data_byte 0002  
           __end_of_getRGBCval 281C     __end_of_sendRGBCvalSerial4 2770              ??_color_read_Blue 0007  
                   vfpfcnvrt@c 0018              ___lmul@multiplier 0001                      copy_data0 258C  
                    copy_data1 25AC      __end_of_sendStringSerial4 2712  __end_of_I2C_2_Master_RepStart 2CE2  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 001B                       __Lrparam 0000                     vfprintf@fp 0019  
                    scaleRGB@p 0032                     ?_vfpfcnvrt 000B            __end_of_reset_timer 2CCC  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001F  
                   sprintf@ret 0028                       ___xxtofl 1C26                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6           _toggle_tricolour_LED 20DA                ___lwdiv@divisor 0003  
           __end_of_initUSART4 2C88                ___lwdiv@counter 0007                       __ptext10 264C  
                     __ptext11 2504                       __ptext20 2C6A                       __ptext12 2320  
                     __ptext21 2474                       __ptext13 21A2                       __ptext30 281C  
                     __ptext22 27C6                       __ptext14 26B0                       __ptext31 2B46  
                     __ptext23 28C4                       __ptext15 2C88                       __ptext40 2CEC  
                     __ptext32 2870                       __ptext24 2914                       __ptext16 2004  
                     __ptext41 2BFE                       __ptext33 2B76                       __ptext25 2964  
                     __ptext17 1C26                       __ptext42 2BD4                       __ptext34 25E2  
                     __ptext26 29B4                       __ptext18 1EFE                       __ptext43 2BA6  
                     __ptext35 23D0                       __ptext27 2CD8                       __ptext19 14F0  
                     __ptext44 2C26                       __ptext36 2B12                       __ptext28 2A9C  
                     __ptext45 2CC0                       __ptext37 2C4A                       __ptext29 0E24  
                     __ptext46 2CCC                       __ptext38 2CB4                       __ptext39 2CE2  
                  getRGBCval@p 000C            main@measured_colour 009E                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                       _scaleRGB 2004                    ??_getHSVval 0010  
                  getHSVval@p1 000E                    getHSVval@p2 000F                    getHSVval@Sz 0018  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 2770                     _INTCONbits 0FF2          ?_toggle_tricolour_LED 0001  
                ??_write_timer 0002                       intlevel2 0000                      sprintf@ap 002A  
                 _topGearRight 0057              _manoeuvre_pointer 00A6               ___lwmod@dividend 0001  
             ___lldiv@dividend 0001                 main@HSV_colour 0086                    _reset_timer 2CC0  
                  ??_vfpfcnvrt 000E               _color_click_init 2B12                    _topGearLeft 0058  
                     sprintf@f 002B                       sprintf@s 001D                     _SSP2DATPPS 0E1D  
             ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C                ___lwmod@divisor 0003  
              ___lwmod@counter 0005                _trail_manoeuvre 0100                    _return_flag 005C  
              _manoeuvre_count 005B                     _TX4STAbits 0EE8                _sendCharSerial4 2C88  
          __end_of_write_timer 2CD8  
