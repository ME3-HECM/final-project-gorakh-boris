

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 18:31:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 21/07/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F67K40 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   001496                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _manoeuvre_pointer
    79   001496  00                 	db	low _trail_manoeuvre
    80   001497  01                 	db	high _trail_manoeuvre
    81                           
    82                           ;initializer for _timer_low_pointer
    83   001498  14                 	db	low _trail_timer_low
    84   001499  01                 	db	high _trail_timer_low
    85                           
    86                           ;initializer for _timer_high_pointer
    87   00149A  28                 	db	low _trail_timer_high
    88   00149B  01                 	db	high _trail_timer_high
    89                           
    90                           ;initializer for _squareDelay
    91   00149C  012C               	dw	300
    92                           
    93                           ;initializer for _headbuttDelay
    94   00149E  0046               	dw	70
    95                           
    96                           ;initializer for _turn180Delay
    97   0014A0  01FE               	dw	510
    98                           
    99                           ;initializer for _turnRight135Delay
   100   0014A2  012C               	dw	300
   101                           
   102                           ;initializer for _turnLeft135Delay
   103   0014A4  012C               	dw	300
   104                           
   105                           ;initializer for _turnRight90Delay
   106   0014A6  008E               	dw	142
   107                           
   108                           ;initializer for _turnLeft90Delay
   109   0014A8  008E               	dw	142
   110                           
   111                           ;initializer for _wall_threshold_blue
   112   0014AA  001E               	dw	30
   113                           
   114                           ;initializer for _turningGear
   115   0014AC  32                 	db	50
   116                           
   117                           ;initializer for _topGearRight
   118   0014AD  14                 	db	20
   119                           
   120                           ;initializer for _topGearLeft
   121   0014AE  14                 	db	20
   122                           
   123                           ;initializer for _rampDelay
   124   0014AF  08                 	db	8
   125                           
   126                           ;initializer for _sample_count
   127   0014B0  14                 	db	20
   128   000000                     _TMR0H	set	4052
   129   000000                     _TX4REG	set	3812
   130   000000                     _RC4STAbits	set	3815
   131   000000                     _SP4BRGH	set	3814
   132   000000                     _LATEbits	set	3965
   133   000000                     _TRISEbits	set	3973
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISGbits	set	3975
   136   000000                     _LATFbits	set	3966
   137   000000                     _LATHbits	set	3968
   138   000000                     _TRISFbits	set	3974
   139   000000                     _TRISHbits	set	3976
   140   000000                     _SSP2CON2bits	set	3802
   141   000000                     _RX4PPS	set	3605
   142   000000                     _SSP2CLKPPS	set	3612
   143   000000                     _SSP2DATPPS	set	3613
   144   000000                     _RC7PPS	set	3689
   145   000000                     _RE2PPS	set	3700
   146   000000                     _LATAbits	set	3961
   147   000000                     _LATDbits	set	3964
   148   000000                     _TRISDbits	set	3972
   149   000000                     _PORTFbits	set	3982
   150   000000                     _T2PR	set	4028
   151   000000                     _T2CONbits	set	4029
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _TRISCbits	set	3971
   155   000000                     _TRISAbits	set	3969
   156   000000                     _LATCbits	set	3963
   157   000000                     _RE4PPS	set	3702
   158   000000                     _RG6PPS	set	3720
   159   000000                     _RD5PPS	set	3695
   160   000000                     _ANSELDbits	set	3751
   161   000000                     _SSP2ADD	set	3798
   162   000000                     _SSP2CON1bits	set	3801
   163   000000                     _CCPR4H	set	3873
   164   000000                     _CCPR3H	set	3877
   165   000000                     _TMR0L	set	4051
   166   000000                     _T0CON0bits	set	4053
   167   000000                     _T0CON1bits	set	4054
   168   000000                     _T2CLKCONbits	set	4031
   169   000000                     _T2HLTbits	set	4030
   170   000000                     _CCP1CONbits	set	4011
   171   000000                     _CCPTMRS0bits	set	4013
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _CCP3CONbits	set	3878
   174   000000                     _CCP4CONbits	set	3874
   175   000000                     _RC4REG	set	3811
   176   000000                     _SP4BRGL	set	3813
   177   000000                     _TX4STAbits	set	3816
   178   000000                     _BAUD4CONbits	set	3817
   179   000000                     _SSP2CON2	set	3802
   180   000000                     _SSP2STAT	set	3800
   181   000000                     _ANSELFbits	set	3764
   182   000000                     _SSP2BUF	set	3797
   183   000000                     _PIE0bits	set	3625
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RD6PPS	set	3696
   187   000000                     _INTCONbits	set	4082
   188   000000                     _PIR0bits	set	3635
   189                           
   190                           	psect	smallconst
   191   000E00                     __psmallconst:
   192                           	callstack 0
   193   000E00  00                 	db	0
   194   000E01                     STR_5:
   195                           
   196                           ; BSR set to: 14
   197   000E01  25                 	db	37
   198   000E02  75                 	db	117	;'u'
   199   000E03  20                 	db	32
   200   000E04  25                 	db	37
   201   000E05  75                 	db	117	;'u'
   202   000E06  20                 	db	32
   203   000E07  25                 	db	37
   204   000E08  75                 	db	117	;'u'
   205   000E09  20                 	db	32
   206   000E0A  25                 	db	37
   207   000E0B  75                 	db	117	;'u'
   208   000E0C  20                 	db	32
   209   000E0D  0D                 	db	13
   210   000E0E  00                 	db	0
   211   000E0F                     STR_1:
   212                           
   213                           ; BSR set to: 14
   214   000E0F  25                 	db	37
   215   000E10  64                 	db	100	;'d'
   216   000E11  20                 	db	32
   217   000E12  0D                 	db	13
   218   000E13  00                 	db	0
   219   000E14                     STR_2:
   220                           
   221                           ; BSR set to: 14
   222   000E14  25                 	db	37
   223   000E15  64                 	db	100	;'d'
   224   000E16  20                 	db	32
   225   000E17  00                 	db	0
   226   000E18  00                 	db	0	; dummy byte at the end
   227   000000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231   001318                     __pcinit:
   232                           	callstack 0
   233   001318                     start_initialization:
   234                           	callstack 0
   235   001318                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to COMRAM (27 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240   001318  0E96               	movlw	low __pidataCOMRAM
   241   00131A  6EF6               	movwf	tblptrl,c
   242   00131C  0E14               	movlw	high __pidataCOMRAM
   243   00131E  6EF7               	movwf	tblptrh,c
   244   001320  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245   001322  6EF8               	movwf	tblptru,c
   246   001324  EE00  F03C         	lfsr	0,__pdataCOMRAM
   247   001328  EE10 F01B          	lfsr	1,27
   248   00132C                     copy_data0:
   249   00132C  0009               	tblrd		*+
   250   00132E  CFF5 FFEE          	movff	tablat,postinc0
   251   001332  50E5               	movf	postdec1,w,c
   252   001334  50E1               	movf	fsr1l,w,c
   253   001336  E1FA               	bnz	copy_data0
   254                           
   255                           ; Clear objects allocated to BANK1 (60 bytes)
   256   001338  EE01  F000         	lfsr	0,__pbssBANK1
   257   00133C  0E3C               	movlw	60
   258   00133E                     clear_0:
   259   00133E  6AEE               	clrf	postinc0,c
   260   001340  06E8               	decf	wreg,f,c
   261   001342  E1FD               	bnz	clear_0
   262                           
   263                           ; Clear objects allocated to COMRAM (4 bytes)
   264   001344  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   265   001346  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   266   001348  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   267   00134A  6A57               	clrf	__pbssCOMRAM& (0+255),c
   268   00134C                     end_of_initialization:
   269                           	callstack 0
   270   00134C                     __end_of__initialization:
   271                           	callstack 0
   272   00134C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273   00134E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274   001350  0100               	movlb	0
   275   001352  EF0D  F007         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	bssCOMRAM
   278   000057                     __pbssCOMRAM:
   279                           	callstack 0
   280   000057                     _manoeuvre_count:
   281                           	callstack 0
   282   000057                     	ds	1
   283   000058                     _lost_flag:
   284                           	callstack 0
   285   000058                     	ds	1
   286   000059                     _return_flag:
   287                           	callstack 0
   288   000059                     	ds	1
   289   00005A                     _returning:
   290                           	callstack 0
   291   00005A                     	ds	1
   292                           
   293                           	psect	dataCOMRAM
   294   00003C                     __pdataCOMRAM:
   295                           	callstack 0
   296   00003C                     _manoeuvre_pointer:
   297                           	callstack 0
   298   00003C                     	ds	2
   299   00003E                     _timer_low_pointer:
   300                           	callstack 0
   301   00003E                     	ds	2
   302   000040                     _timer_high_pointer:
   303                           	callstack 0
   304   000040                     	ds	2
   305   000042                     _squareDelay:
   306                           	callstack 0
   307   000042                     	ds	2
   308   000044                     _headbuttDelay:
   309                           	callstack 0
   310   000044                     	ds	2
   311   000046                     _turn180Delay:
   312                           	callstack 0
   313   000046                     	ds	2
   314   000048                     _turnRight135Delay:
   315                           	callstack 0
   316   000048                     	ds	2
   317   00004A                     _turnLeft135Delay:
   318                           	callstack 0
   319   00004A                     	ds	2
   320   00004C                     _turnRight90Delay:
   321                           	callstack 0
   322   00004C                     	ds	2
   323   00004E                     _turnLeft90Delay:
   324                           	callstack 0
   325   00004E                     	ds	2
   326   000050                     _wall_threshold_blue:
   327                           	callstack 0
   328   000050                     	ds	2
   329   000052                     _turningGear:
   330                           	callstack 0
   331   000052                     	ds	1
   332   000053                     _topGearRight:
   333                           	callstack 0
   334   000053                     	ds	1
   335   000054                     _topGearLeft:
   336                           	callstack 0
   337   000054                     	ds	1
   338   000055                     _rampDelay:
   339                           	callstack 0
   340   000055                     	ds	1
   341   000056                     _sample_count:
   342                           	callstack 0
   343   000056                     	ds	1
   344                           
   345                           	psect	bssBANK1
   346   000100                     __pbssBANK1:
   347                           	callstack 0
   348   000100                     _trail_manoeuvre:
   349                           	callstack 0
   350   000100                     	ds	20
   351   000114                     _trail_timer_low:
   352                           	callstack 0
   353   000114                     	ds	20
   354   000128                     _trail_timer_high:
   355                           	callstack 0
   356   000128                     	ds	20
   357                           
   358                           	psect	cstackCOMRAM
   359   000001                     __pcstackCOMRAM:
   360                           	callstack 0
   361   000001                     ??_I2C_2_Master_Idle:
   362   000001                     ?___wmul:
   363                           	callstack 0
   364   000001                     write_timer@tL:
   365                           	callstack 0
   366   000001                     initDCmotorsPWM@PWMperiod:
   367                           	callstack 0
   368   000001                     ___wmul@multiplier:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x0
   372   000001                     	ds	1
   373   000002                     I2C_2_Master_Write@data_byte:
   374                           	callstack 0
   375   000002                     write_timer@tH:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x1
   379   000002                     	ds	1
   380   000003                     color_writetoaddr@value:
   381                           	callstack 0
   382   000003                     ___wmul@multiplicand:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x2
   386   000003                     	ds	1
   387   000004                     color_writetoaddr@address:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x3
   391   000004                     	ds	1
   392   000005                     ??_color_click_init:
   393   000005                     ___wmul@product:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x4
   397   000005                     	ds	2
   398   000007                     ?___lwdiv:
   399                           	callstack 0
   400   000007                     ___lwdiv@dividend:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x6
   404   000007                     	ds	2
   405   000009                     ___lwdiv@divisor:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x8
   409   000009                     	ds	2
   410   00000B                     ___lwdiv@quotient:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xA
   414   00000B                     	ds	2
   415   00000D                     ___lwdiv@counter:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xC
   419   00000D                     	ds	1
   420   00000E                     setMotorPWM@m:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xD
   424   00000E                     	ds	1
   425   00000F                     ??_setMotorPWM:
   426                           
   427                           ; 1 bytes @ 0xE
   428   00000F                     	ds	2
   429   000011                     setMotorPWM@posDuty:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x10
   433   000011                     	ds	1
   434   000012                     setMotorPWM@negDuty:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x11
   438   000012                     	ds	1
   439   000013                     stop@mL:
   440                           	callstack 0
   441   000013                     fullSpeedAhead@mL:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x12
   445   000013                     	ds	1
   446   000014                     stop@mR:
   447                           	callstack 0
   448   000014                     fullSpeedAhead@mR:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x13
   452   000014                     	ds	1
   453   000015                     ??_stop:
   454   000015                     ??_fullSpeedAhead:
   455                           
   456                           ; 1 bytes @ 0x14
   457   000015                     	ds	1
   458   000016                     fullSpeedAhead@leftGear:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x15
   462   000016                     	ds	1
   463   000017                     fullSpeedAhead@rightGear:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x16
   467   000017                     	ds	1
   468   000018                     ??_main:
   469                           
   470                           ; 1 bytes @ 0x17
   471   000018                     	ds	2
   472   00001A                     main@i:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x19
   476   00001A                     	ds	2
   477   00001C                     main@HSV_colour:
   478                           	callstack 0
   479                           
   480                           ; 6 bytes @ 0x1B
   481   00001C                     	ds	6
   482   000022                     main@RGBC_colour:
   483                           	callstack 0
   484                           
   485                           ; 8 bytes @ 0x21
   486   000022                     	ds	8
   487   00002A                     main@motorL:
   488                           	callstack 0
   489                           
   490                           ; 9 bytes @ 0x29
   491   00002A                     	ds	9
   492   000033                     main@motorR:
   493                           	callstack 0
   494                           
   495                           ; 9 bytes @ 0x32
   496   000033                     	ds	9
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 29 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  motorR          9   50[COMRAM] struct DC_motor
   508 ;;  motorL          9   41[COMRAM] struct DC_motor
   509 ;;  RGBC_colour     8   33[COMRAM] struct RGBC_val
   510 ;;  HSV_colour      6   27[COMRAM] struct HSV_val
   511 ;;  PWMcycle        2    0        unsigned int 
   512 ;;  i               2   25[COMRAM] int 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   523 ;;      Locals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   525 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   526 ;;Total ram usage:       36 bytes
   527 ;; Hardware stack levels required when called: 5
   528 ;; This function calls:
   529 ;;		_Timer0_init
   530 ;;		_buggy_lights_init
   531 ;;		_color_click_init
   532 ;;		_fullSpeedAhead
   533 ;;		_initDCmotorsPWM
   534 ;;		_initUSART4
   535 ;;		_stop
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text0
   542   000E1A                     __ptext0:
   543                           	callstack 0
   544   000E1A                     _main:
   545                           	callstack 26
   546   000E1A                     
   547                           ;main.c: 30:     struct RGBC_val RGBC_colour;;main.c: 31:         RGBC_colour.R = 0;
   548   000E1A  0E00               	movlw	0
   549   000E1C  6E23               	movwf	(main@RGBC_colour+1)^0,c
   550   000E1E  0E00               	movlw	0
   551   000E20  6E22               	movwf	main@RGBC_colour^0,c
   552                           
   553                           ;main.c: 32:         RGBC_colour.G = 0;
   554   000E22  0E00               	movlw	0
   555   000E24  6E25               	movwf	(main@RGBC_colour+3)^0,c
   556   000E26  0E00               	movlw	0
   557   000E28  6E24               	movwf	(main@RGBC_colour+2)^0,c
   558                           
   559                           ;main.c: 33:         RGBC_colour.B = 0;
   560   000E2A  0E00               	movlw	0
   561   000E2C  6E27               	movwf	(main@RGBC_colour+5)^0,c
   562   000E2E  0E00               	movlw	0
   563   000E30  6E26               	movwf	(main@RGBC_colour+4)^0,c
   564                           
   565                           ;main.c: 34:         RGBC_colour.C = 0;
   566   000E32  0E00               	movlw	0
   567   000E34  6E29               	movwf	(main@RGBC_colour+7)^0,c
   568   000E36  0E00               	movlw	0
   569   000E38  6E28               	movwf	(main@RGBC_colour+6)^0,c
   570                           
   571                           ;main.c: 36:     struct HSV_val HSV_colour;;main.c: 37:         HSV_colour.H = 0;
   572   000E3A  0E00               	movlw	0
   573   000E3C  6E1D               	movwf	(main@HSV_colour+1)^0,c
   574   000E3E  0E00               	movlw	0
   575   000E40  6E1C               	movwf	main@HSV_colour^0,c
   576                           
   577                           ;main.c: 38:         HSV_colour.S = 0;
   578   000E42  0E00               	movlw	0
   579   000E44  6E1F               	movwf	(main@HSV_colour+3)^0,c
   580   000E46  0E00               	movlw	0
   581   000E48  6E1E               	movwf	(main@HSV_colour+2)^0,c
   582                           
   583                           ;main.c: 39:         HSV_colour.V = 0;
   584   000E4A  0E00               	movlw	0
   585   000E4C  6E21               	movwf	(main@HSV_colour+5)^0,c
   586   000E4E  0E00               	movlw	0
   587   000E50  6E20               	movwf	(main@HSV_colour+4)^0,c
   588                           
   589                           ;main.c: 42:     struct DC_motor motorL, motorR;;main.c: 43:         motorL.power = 0;
   590   000E52  0E00               	movlw	0
   591   000E54  6E2A               	movwf	main@motorL^0,c
   592                           
   593                           ;main.c: 44:         motorL.direction = 1;
   594   000E56  0E01               	movlw	1
   595   000E58  6E2B               	movwf	(main@motorL+1)^0,c
   596                           
   597                           ;main.c: 45:         motorL.brakemode = 1;
   598   000E5A  0E01               	movlw	1
   599   000E5C  6E2C               	movwf	(main@motorL+2)^0,c
   600   000E5E                     
   601                           ;main.c: 46:         motorL.PWMperiod = PWMcycle;
   602   000E5E  0E00               	movlw	0
   603   000E60  6E2E               	movwf	(main@motorL+4)^0,c
   604   000E62  0E63               	movlw	99
   605   000E64  6E2D               	movwf	(main@motorL+3)^0,c
   606   000E66                     
   607                           ;main.c: 47:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   608   000E66  0EAA               	movlw	170
   609   000E68  6E2F               	movwf	(main@motorL+5)^0,c
   610   000E6A  0E0F               	movlw	15
   611   000E6C  6E30               	movwf	(main@motorL+6)^0,c
   612   000E6E                     
   613                           ;main.c: 48:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   614   000E6E  0EA6               	movlw	166
   615   000E70  6E31               	movwf	(main@motorL+7)^0,c
   616   000E72  0E0F               	movlw	15
   617   000E74  6E32               	movwf	(main@motorL+8)^0,c
   618                           
   619                           ;main.c: 49:         motorR.power = 0;
   620   000E76  0E00               	movlw	0
   621   000E78  6E33               	movwf	main@motorR^0,c
   622                           
   623                           ;main.c: 50:         motorR.direction = 1;
   624   000E7A  0E01               	movlw	1
   625   000E7C  6E34               	movwf	(main@motorR+1)^0,c
   626                           
   627                           ;main.c: 51:         motorR.brakemode = 1;
   628   000E7E  0E01               	movlw	1
   629   000E80  6E35               	movwf	(main@motorR+2)^0,c
   630   000E82                     
   631                           ;main.c: 52:         motorR.PWMperiod = PWMcycle;
   632   000E82  0E00               	movlw	0
   633   000E84  6E37               	movwf	(main@motorR+4)^0,c
   634   000E86  0E63               	movlw	99
   635   000E88  6E36               	movwf	(main@motorR+3)^0,c
   636   000E8A                     
   637                           ;main.c: 53:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   638   000E8A  0E25               	movlw	37
   639   000E8C  6E38               	movwf	(main@motorR+5)^0,c
   640   000E8E  0E0F               	movlw	15
   641   000E90  6E39               	movwf	(main@motorR+6)^0,c
   642   000E92                     
   643                           ;main.c: 54:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   644   000E92  0E21               	movlw	33
   645   000E94  6E3A               	movwf	(main@motorR+7)^0,c
   646   000E96  0E0F               	movlw	15
   647   000E98  6E3B               	movwf	(main@motorR+8)^0,c
   648   000E9A                     
   649                           ;main.c: 57:     initDCmotorsPWM(PWMcycle);
   650   000E9A  0E00               	movlw	0
   651   000E9C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   652   000E9E  0E63               	movlw	99
   653   000EA0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   654   000EA2  ECC3  F008         	call	_initDCmotorsPWM	;wreg free
   655                           
   656                           ;main.c: 58:     buggy_lights_init();
   657   000EA6  ECC5  F009         	call	_buggy_lights_init	;wreg free
   658   000EAA                     
   659                           ;main.c: 59:     color_click_init();
   660   000EAA  ECAB  F009         	call	_color_click_init	;wreg free
   661   000EAE                     
   662                           ;main.c: 60:     initUSART4();
   663   000EAE  EC3C  F00A         	call	_initUSART4	;wreg free
   664   000EB2                     
   665                           ;main.c: 61:     Timer0_init();
   666   000EB2  EC05  F00A         	call	_Timer0_init	;wreg free
   667   000EB6                     
   668                           ;main.c: 65:         TRISDbits.TRISD7 = 0;
   669   000EB6  9E84               	bcf	132,7,c	;volatile
   670   000EB8                     
   671                           ;main.c: 66:         TRISHbits.TRISH3 = 0;
   672   000EB8  9688               	bcf	136,3,c	;volatile
   673   000EBA                     
   674                           ;main.c: 68:         LATDbits.LATD7 = 0;
   675   000EBA  9E7C               	bcf	124,7,c	;volatile
   676   000EBC                     
   677                           ;main.c: 69:         LATHbits.LATH3 = 0;
   678   000EBC  9680               	bcf	128,3,c	;volatile
   679   000EBE                     
   680                           ;main.c: 73:         TRISFbits.TRISF2 = 1;
   681   000EBE  8486               	bsf	134,2,c	;volatile
   682   000EC0                     
   683                           ;main.c: 74:         TRISFbits.TRISF3 = 1;
   684   000EC0  8686               	bsf	134,3,c	;volatile
   685   000EC2                     
   686                           ;main.c: 76:         ANSELFbits.ANSELF2 = 0;
   687   000EC2  010E               	movlb	14	; () banked
   688   000EC4  95B4               	bcf	180,2,b	;volatile
   689   000EC6                     
   690                           ; BSR set to: 14
   691                           ;main.c: 77:         ANSELFbits.ANSELF3 = 0;
   692   000EC6  97B4               	bcf	180,3,b	;volatile
   693   000EC8                     l415:
   694   000EC8  B68E               	btfsc	142,3,c	;volatile
   695   000ECA  EF69  F007         	goto	u2571
   696   000ECE  EF6B  F007         	goto	u2570
   697   000ED2                     u2571:
   698   000ED2  EF64  F007         	goto	l415
   699   000ED6                     u2570:
   700   000ED6                     
   701                           ;main.c: 82:     LATDbits.LATD7 = !LATDbits.LATD7;
   702   000ED6  AE7C               	btfss	124,7,c	;volatile
   703   000ED8  EF70  F007         	goto	u2581
   704   000EDC  EF74  F007         	goto	u2580
   705   000EE0                     u2581:
   706   000EE0  6A18               	clrf	??_main^0,c
   707   000EE2  2A18               	incf	??_main^0,f,c
   708   000EE4  EF75  F007         	goto	u2598
   709   000EE8                     u2580:
   710   000EE8  6A18               	clrf	??_main^0,c
   711   000EEA                     u2598:
   712   000EEA  3218               	rrcf	??_main^0,f,c
   713   000EEC  3218               	rrcf	??_main^0,f,c
   714   000EEE  507C               	movf	124,w,c	;volatile
   715   000EF0  1818               	xorwf	??_main^0,w,c
   716   000EF2  0B7F               	andlw	-129
   717   000EF4  1818               	xorwf	??_main^0,w,c
   718   000EF6  6E7C               	movwf	124,c	;volatile
   719                           
   720                           ;main.c: 83:     LATHbits.LATH3 = !LATHbits.LATH3;
   721   000EF8  A680               	btfss	128,3,c	;volatile
   722   000EFA  EF81  F007         	goto	u2601
   723   000EFE  EF85  F007         	goto	u2600
   724   000F02                     u2601:
   725   000F02  6A18               	clrf	??_main^0,c
   726   000F04  2A18               	incf	??_main^0,f,c
   727   000F06  EF86  F007         	goto	u2618
   728   000F0A                     u2600:
   729   000F0A  6A18               	clrf	??_main^0,c
   730   000F0C                     u2618:
   731   000F0C  4618               	rlncf	??_main^0,f,c
   732   000F0E  4618               	rlncf	??_main^0,f,c
   733   000F10  4618               	rlncf	??_main^0,f,c
   734   000F12  5080               	movf	128,w,c	;volatile
   735   000F14  1818               	xorwf	??_main^0,w,c
   736   000F16  0BF7               	andlw	-9
   737   000F18  1818               	xorwf	??_main^0,w,c
   738   000F1A  6E80               	movwf	128,c	;volatile
   739   000F1C                     
   740                           ;main.c: 107:     int i;;main.c: 117:     for (i=0; i < 4; i++) {
   741   000F1C  0E00               	movlw	0
   742   000F1E  6E1B               	movwf	(main@i+1)^0,c
   743   000F20  0E00               	movlw	0
   744   000F22  6E1A               	movwf	main@i^0,c
   745   000F24                     l3473:
   746                           
   747                           ;main.c: 118:         fullSpeedAhead(&motorL, &motorR);
   748   000F24  0E2A               	movlw	low main@motorL
   749   000F26  6E13               	movwf	fullSpeedAhead@mL^0,c
   750   000F28  0E33               	movlw	low main@motorR
   751   000F2A  6E14               	movwf	fullSpeedAhead@mR^0,c
   752   000F2C  EC66  F008         	call	_fullSpeedAhead	;wreg free
   753   000F30                     
   754                           ;main.c: 119:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   755   000F30  0E52               	movlw	82
   756   000F32  6E19               	movwf	(??_main+1)^0,c
   757   000F34  0E2B               	movlw	43
   758   000F36  6E18               	movwf	??_main^0,c
   759   000F38  0E00               	movlw	0
   760   000F3A                     u3147:
   761   000F3A  2EE8               	decfsz	wreg,f,c
   762   000F3C  D7FE               	bra	u3147
   763   000F3E  2E18               	decfsz	??_main^0,f,c
   764   000F40  D7FC               	bra	u3147
   765   000F42  2E19               	decfsz	(??_main+1)^0,f,c
   766   000F44  D7FA               	bra	u3147
   767   000F46  D000               	nop2	
   768   000F48                     
   769                           ;main.c: 124:     }
   770   000F48  4A1A               	infsnz	main@i^0,f,c
   771   000F4A  2A1B               	incf	(main@i+1)^0,f,c
   772   000F4C  BE1B               	btfsc	(main@i+1)^0,7,c
   773   000F4E  EFB2  F007         	goto	u2621
   774   000F52  501B               	movf	(main@i+1)^0,w,c
   775   000F54  E109               	bnz	u2620
   776   000F56  0E04               	movlw	4
   777   000F58  5C1A               	subwf	main@i^0,w,c
   778   000F5A  A0D8               	btfss	status,0,c
   779   000F5C  EFB2  F007         	goto	u2621
   780   000F60  EFB4  F007         	goto	u2620
   781   000F64                     u2621:
   782   000F64  EF92  F007         	goto	l3473
   783   000F68                     u2620:
   784   000F68                     
   785                           ;main.c: 125:     stop(&motorL, &motorR);
   786   000F68  0E2A               	movlw	low main@motorL
   787   000F6A  6E13               	movwf	stop@mL^0,c
   788   000F6C  0E33               	movlw	low main@motorR
   789   000F6E  6E14               	movwf	stop@mR^0,c
   790   000F70  EC0B  F009         	call	_stop	;wreg free
   791   000F74  EF1E  F000         	goto	start
   792   000F78                     __end_of_main:
   793                           	callstack 0
   794                           
   795 ;; *************** function _stop *****************
   796 ;; Defined at:
   797 ;;		line 93 in file "dc_motor.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   800 ;;		 -> main@motorL(9), 
   801 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   802 ;;		 -> main@motorR(9), 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   818 ;;Total ram usage:        3 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 3
   821 ;; This function calls:
   822 ;;		_setMotorPWM
   823 ;; This function is called by:
   824 ;;		_main
   825 ;;		_turnLeft90
   826 ;;		_turnRight90
   827 ;;		_turnLeft135
   828 ;;		_turnRight135
   829 ;;		_UTurn
   830 ;;		_headbuttReverse
   831 ;;		_squareReverse
   832 ;;		_forward_navigation
   833 ;;		_return_to_sender
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838   001216                     __ptext1:
   839                           	callstack 0
   840   001216                     _stop:
   841                           	callstack 27
   842   001216                     
   843                           ;dc_motor.c: 93: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 94: {;dc_motor.c: 95:
      +                               while ((mL->power>0) || (mR->power>0)){
   844   001216  EF3B  F009         	goto	l3297
   845   00121A                     l3283:
   846                           
   847                           ;dc_motor.c: 96:         if (mL->power>0) {mL->power--;}
   848   00121A  5013               	movf	stop@mL^0,w,c
   849   00121C  6ED9               	movwf	fsr2l,c
   850   00121E  6ADA               	clrf	fsr2h,c
   851   001220  50DF               	movf	indf2,w,c
   852   001222  B4D8               	btfsc	status,2,c
   853   001224  EF16  F009         	goto	u2461
   854   001228  EF18  F009         	goto	u2460
   855   00122C                     u2461:
   856   00122C  EF1C  F009         	goto	l3287
   857   001230                     u2460:
   858   001230  5013               	movf	stop@mL^0,w,c
   859   001232  6ED9               	movwf	fsr2l,c
   860   001234  6ADA               	clrf	fsr2h,c
   861   001236  06DF               	decf	indf2,f,c
   862   001238                     l3287:
   863                           
   864                           ;dc_motor.c: 97:         if (mR->power>0) {mR->power--;}
   865   001238  5014               	movf	stop@mR^0,w,c
   866   00123A  6ED9               	movwf	fsr2l,c
   867   00123C  6ADA               	clrf	fsr2h,c
   868   00123E  50DF               	movf	indf2,w,c
   869   001240  B4D8               	btfsc	status,2,c
   870   001242  EF25  F009         	goto	u2471
   871   001246  EF27  F009         	goto	u2470
   872   00124A                     u2471:
   873   00124A  EF2B  F009         	goto	l3291
   874   00124E                     u2470:
   875   00124E  5014               	movf	stop@mR^0,w,c
   876   001250  6ED9               	movwf	fsr2l,c
   877   001252  6ADA               	clrf	fsr2h,c
   878   001254  06DF               	decf	indf2,f,c
   879   001256                     l3291:
   880                           
   881                           ;dc_motor.c: 98:         setMotorPWM(mL);
   882   001256  C013  F00E         	movff	stop@mL,setMotorPWM@m
   883   00125A  ECBC  F007         	call	_setMotorPWM	;wreg free
   884   00125E                     
   885                           ;dc_motor.c: 99:         setMotorPWM(mR);
   886   00125E  C014  F00E         	movff	stop@mR,setMotorPWM@m
   887   001262  ECBC  F007         	call	_setMotorPWM	;wreg free
   888   001266                     
   889                           ;dc_motor.c: 100:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
   890   001266  0EA7               	movlw	167
   891   001268  6E15               	movwf	??_stop^0,c
   892   00126A  0E3A               	movlw	58
   893   00126C                     u3157:
   894   00126C  2EE8               	decfsz	wreg,f,c
   895   00126E  D7FE               	bra	u3157
   896   001270  2E15               	decfsz	??_stop^0,f,c
   897   001272  D7FC               	bra	u3157
   898   001274  D000               	nop2	
   899   001276                     l3297:
   900                           
   901                           ;dc_motor.c: 95:     while ((mL->power>0) || (mR->power>0)){
   902   001276  5013               	movf	stop@mL^0,w,c
   903   001278  6ED9               	movwf	fsr2l,c
   904   00127A  6ADA               	clrf	fsr2h,c
   905   00127C  50DF               	movf	indf2,w,c
   906   00127E  A4D8               	btfss	status,2,c
   907   001280  EF44  F009         	goto	u2481
   908   001284  EF46  F009         	goto	u2480
   909   001288                     u2481:
   910   001288  EF0D  F009         	goto	l3283
   911   00128C                     u2480:
   912   00128C  5014               	movf	stop@mR^0,w,c
   913   00128E  6ED9               	movwf	fsr2l,c
   914   001290  6ADA               	clrf	fsr2h,c
   915   001292  50DF               	movf	indf2,w,c
   916   001294  A4D8               	btfss	status,2,c
   917   001296  EF4F  F009         	goto	u2491
   918   00129A  EF51  F009         	goto	u2490
   919   00129E                     u2491:
   920   00129E  EF0D  F009         	goto	l3283
   921   0012A2                     u2490:
   922   0012A2  0012               	return		;funcret
   923   0012A4                     __end_of_stop:
   924                           	callstack 0
   925                           
   926 ;; *************** function _initUSART4 *****************
   927 ;; Defined at:
   928 ;;		line 8 in file "serial.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text2
   957   001478                     __ptext2:
   958                           	callstack 0
   959   001478                     _initUSART4:
   960                           	callstack 29
   961   001478                     
   962                           ;serial.c: 9:     RC0PPS = 0x12;
   963   001478  0E12               	movlw	18
   964   00147A  010E               	movlb	14	; () banked
   965   00147C  6F62               	movwf	98,b	;volatile
   966                           
   967                           ;serial.c: 10:     RX4PPS = 0x11;
   968   00147E  0E11               	movlw	17
   969   001480  6F15               	movwf	21,b	;volatile
   970   001482                     
   971                           ; BSR set to: 14
   972                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
   973   001482  97E9               	bcf	233,3,b	;volatile
   974   001484                     
   975                           ; BSR set to: 14
   976                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
   977   001484  95E8               	bcf	232,2,b	;volatile
   978                           
   979                           ;serial.c: 14:     SP4BRGL = 51;
   980   001486  0E33               	movlw	51
   981   001488  6FE5               	movwf	229,b	;volatile
   982                           
   983                           ;serial.c: 15:     SP4BRGH = 0;
   984   00148A  0E00               	movlw	0
   985   00148C  6FE6               	movwf	230,b	;volatile
   986   00148E                     
   987                           ; BSR set to: 14
   988                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   989   00148E  89E7               	bsf	231,4,b	;volatile
   990   001490                     
   991                           ; BSR set to: 14
   992                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   993   001490  8BE8               	bsf	232,5,b	;volatile
   994   001492                     
   995                           ; BSR set to: 14
   996                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   997   001492  8FE7               	bsf	231,7,b	;volatile
   998   001494                     
   999                           ; BSR set to: 14
  1000   001494  0012               	return		;funcret
  1001   001496                     __end_of_initUSART4:
  1002                           	callstack 0
  1003                           
  1004 ;; *************** function _initDCmotorsPWM *****************
  1005 ;; Defined at:
  1006 ;;		line 7 in file "dc_motor.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1024 ;;Total ram usage:        2 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text3
  1035   001186                     __ptext3:
  1036                           	callstack 0
  1037   001186                     _initDCmotorsPWM:
  1038                           	callstack 29
  1039   001186                     
  1040                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  1041   001186  9485               	bcf	133,2,c	;volatile
  1042                           
  1043                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1044   001188  9885               	bcf	133,4,c	;volatile
  1045                           
  1046                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  1047   00118A  9E83               	bcf	131,7,c	;volatile
  1048                           
  1049                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  1050   00118C  9C87               	bcf	135,6,c	;volatile
  1051                           
  1052                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  1053   00118E  947D               	bcf	125,2,c	;volatile
  1054                           
  1055                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  1056   001190  987D               	bcf	125,4,c	;volatile
  1057                           
  1058                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  1059   001192  9E7B               	bcf	123,7,c	;volatile
  1060                           
  1061                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  1062   001194  9C7F               	bcf	127,6,c	;volatile
  1063   001196                     
  1064                           ;dc_motor.c: 19:     RE2PPS=0x05;
  1065   001196  0E05               	movlw	5
  1066   001198  010E               	movlb	14	; () banked
  1067   00119A  6F74               	movwf	116,b	;volatile
  1068                           
  1069                           ;dc_motor.c: 20:     RE4PPS=0x06;
  1070   00119C  0E06               	movlw	6
  1071   00119E  6F76               	movwf	118,b	;volatile
  1072                           
  1073                           ;dc_motor.c: 21:     RC7PPS=0x07;
  1074   0011A0  0E07               	movlw	7
  1075   0011A2  6F69               	movwf	105,b	;volatile
  1076                           
  1077                           ;dc_motor.c: 22:     RG6PPS=0x08;
  1078   0011A4  0E08               	movlw	8
  1079   0011A6  6F88               	movwf	136,b	;volatile
  1080                           
  1081                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  1082   0011A8  50BD               	movf	189,w,c	;volatile
  1083   0011AA  0B8F               	andlw	-113
  1084   0011AC  0940               	iorlw	64
  1085   0011AE  6EBD               	movwf	189,c	;volatile
  1086                           
  1087                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  1088   0011B0  0EE0               	movlw	-32
  1089   0011B2  16BE               	andwf	190,f,c	;volatile
  1090                           
  1091                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  1092   0011B4  50BF               	movf	191,w,c	;volatile
  1093   0011B6  0BF0               	andlw	-16
  1094   0011B8  0901               	iorlw	1
  1095   0011BA  6EBF               	movwf	191,c	;volatile
  1096   0011BC                     
  1097                           ; BSR set to: 14
  1098                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  1099   0011BC  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1100   0011C0                     
  1101                           ; BSR set to: 14
  1102                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  1103   0011C0  8EBD               	bsf	189,7,c	;volatile
  1104                           
  1105                           ;dc_motor.c: 36:         CCPR1H=0;
  1106   0011C2  0E00               	movlw	0
  1107   0011C4  6EAA               	movwf	170,c	;volatile
  1108                           
  1109                           ;dc_motor.c: 37:         CCPR2H=0;
  1110   0011C6  0E00               	movlw	0
  1111   0011C8  6EA6               	movwf	166,c	;volatile
  1112                           
  1113                           ;dc_motor.c: 38:         CCPR3H=0;
  1114   0011CA  0E00               	movlw	0
  1115   0011CC  010F               	movlb	15	; () banked
  1116   0011CE  6F25               	movwf	37,b	;volatile
  1117                           
  1118                           ;dc_motor.c: 39:         CCPR4H=0;
  1119   0011D0  0E00               	movlw	0
  1120   0011D2  6F21               	movwf	33,b	;volatile
  1121                           
  1122                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  1123   0011D4  0EFC               	movlw	-4
  1124   0011D6  16AD               	andwf	173,f,c	;volatile
  1125                           
  1126                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  1127   0011D8  0EF3               	movlw	-13
  1128   0011DA  16AD               	andwf	173,f,c	;volatile
  1129                           
  1130                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  1131   0011DC  0ECF               	movlw	-49
  1132   0011DE  16AD               	andwf	173,f,c	;volatile
  1133                           
  1134                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  1135   0011E0  0E3F               	movlw	-193
  1136   0011E2  16AD               	andwf	173,f,c	;volatile
  1137   0011E4                     
  1138                           ; BSR set to: 15
  1139                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  1140   0011E4  88AB               	bsf	171,4,c	;volatile
  1141                           
  1142                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  1143   0011E6  50AB               	movf	171,w,c	;volatile
  1144   0011E8  0BF0               	andlw	-16
  1145   0011EA  090C               	iorlw	12
  1146   0011EC  6EAB               	movwf	171,c	;volatile
  1147   0011EE                     
  1148                           ; BSR set to: 15
  1149                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  1150   0011EE  8EAB               	bsf	171,7,c	;volatile
  1151   0011F0                     
  1152                           ; BSR set to: 15
  1153                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  1154   0011F0  88A7               	bsf	167,4,c	;volatile
  1155                           
  1156                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  1157   0011F2  50A7               	movf	167,w,c	;volatile
  1158   0011F4  0BF0               	andlw	-16
  1159   0011F6  090C               	iorlw	12
  1160   0011F8  6EA7               	movwf	167,c	;volatile
  1161   0011FA                     
  1162                           ; BSR set to: 15
  1163                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  1164   0011FA  8EA7               	bsf	167,7,c	;volatile
  1165   0011FC                     
  1166                           ; BSR set to: 15
  1167                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  1168   0011FC  8926               	bsf	38,4,b	;volatile
  1169                           
  1170                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  1171   0011FE  5126               	movf	38,w,b	;volatile
  1172   001200  0BF0               	andlw	-16
  1173   001202  090C               	iorlw	12
  1174   001204  6F26               	movwf	38,b	;volatile
  1175   001206                     
  1176                           ; BSR set to: 15
  1177                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  1178   001206  8F26               	bsf	38,7,b	;volatile
  1179   001208                     
  1180                           ; BSR set to: 15
  1181                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  1182   001208  8922               	bsf	34,4,b	;volatile
  1183                           
  1184                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  1185   00120A  5122               	movf	34,w,b	;volatile
  1186   00120C  0BF0               	andlw	-16
  1187   00120E  090C               	iorlw	12
  1188   001210  6F22               	movwf	34,b	;volatile
  1189   001212                     
  1190                           ; BSR set to: 15
  1191                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  1192   001212  8F22               	bsf	34,7,b	;volatile
  1193   001214                     
  1194                           ; BSR set to: 15
  1195   001214  0012               	return		;funcret
  1196   001216                     __end_of_initDCmotorsPWM:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _fullSpeedAhead *****************
  1200 ;; Defined at:
  1201 ;;		line 143 in file "dc_motor.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1204 ;;		 -> main@motorL(9), 
  1205 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1206 ;;		 -> main@motorR(9), 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  rightGear       1   22[COMRAM] unsigned char 
  1209 ;;  leftGear        1   21[COMRAM] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1222 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1223 ;;Total ram usage:        5 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 3
  1226 ;; This function calls:
  1227 ;;		_setMotorPWM
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;;		_return_to_sender
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text4
  1235   0010CC                     __ptext4:
  1236                           	callstack 0
  1237   0010CC                     _fullSpeedAhead:
  1238                           	callstack 27
  1239   0010CC  0E14               	movlw	20
  1240   0010CE  6E16               	movwf	fullSpeedAhead@leftGear^0,c
  1241   0010D0  0E14               	movlw	20
  1242   0010D2  6E17               	movwf	fullSpeedAhead@rightGear^0,c
  1243   0010D4                     
  1244                           ;dc_motor.c: 147:     (mL->direction) = 1;
  1245   0010D4  5013               	movf	fullSpeedAhead@mL^0,w,c
  1246   0010D6  6ED9               	movwf	fsr2l,c
  1247   0010D8  6ADA               	clrf	fsr2h,c
  1248   0010DA  0E01               	movlw	1
  1249   0010DC  26D9               	addwf	fsr2l,f,c
  1250   0010DE  0E01               	movlw	1
  1251   0010E0  6EDF               	movwf	indf2,c
  1252   0010E2                     
  1253                           ;dc_motor.c: 148:     (mR->direction) = 1;
  1254   0010E2  5014               	movf	fullSpeedAhead@mR^0,w,c
  1255   0010E4  6ED9               	movwf	fsr2l,c
  1256   0010E6  6ADA               	clrf	fsr2h,c
  1257   0010E8  0E01               	movlw	1
  1258   0010EA  26D9               	addwf	fsr2l,f,c
  1259   0010EC  0E01               	movlw	1
  1260   0010EE  6EDF               	movwf	indf2,c
  1261                           
  1262                           ;dc_motor.c: 149:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  1263   0010F0  EFAA  F008         	goto	l3319
  1264   0010F4                     l3307:
  1265                           
  1266                           ;dc_motor.c: 150:         if (mL->power<leftGear) {mL->power++;}
  1267   0010F4  5013               	movf	fullSpeedAhead@mL^0,w,c
  1268   0010F6  6ED9               	movwf	fsr2l,c
  1269   0010F8  6ADA               	clrf	fsr2h,c
  1270   0010FA  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  1271   0010FC  5CDE               	subwf	postinc2,w,c
  1272   0010FE  B0D8               	btfsc	status,0,c
  1273   001100  EF84  F008         	goto	u2501
  1274   001104  EF86  F008         	goto	u2500
  1275   001108                     u2501:
  1276   001108  EF8A  F008         	goto	l246
  1277   00110C                     u2500:
  1278   00110C  5013               	movf	fullSpeedAhead@mL^0,w,c
  1279   00110E  6ED9               	movwf	fsr2l,c
  1280   001110  6ADA               	clrf	fsr2h,c
  1281   001112  2ADF               	incf	indf2,f,c
  1282   001114                     l246:
  1283                           
  1284                           ;dc_motor.c: 151:         if (mR->power<rightGear) {mR->power++;}
  1285   001114  5014               	movf	fullSpeedAhead@mR^0,w,c
  1286   001116  6ED9               	movwf	fsr2l,c
  1287   001118  6ADA               	clrf	fsr2h,c
  1288   00111A  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  1289   00111C  5CDE               	subwf	postinc2,w,c
  1290   00111E  B0D8               	btfsc	status,0,c
  1291   001120  EF94  F008         	goto	u2511
  1292   001124  EF96  F008         	goto	u2510
  1293   001128                     u2511:
  1294   001128  EF9A  F008         	goto	l3313
  1295   00112C                     u2510:
  1296   00112C  5014               	movf	fullSpeedAhead@mR^0,w,c
  1297   00112E  6ED9               	movwf	fsr2l,c
  1298   001130  6ADA               	clrf	fsr2h,c
  1299   001132  2ADF               	incf	indf2,f,c
  1300   001134                     l3313:
  1301                           
  1302                           ;dc_motor.c: 152:         setMotorPWM(mL);
  1303   001134  C013  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1304   001138  ECBC  F007         	call	_setMotorPWM	;wreg free
  1305   00113C                     
  1306                           ;dc_motor.c: 153:         setMotorPWM(mR);
  1307   00113C  C014  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1308   001140  ECBC  F007         	call	_setMotorPWM	;wreg free
  1309   001144                     
  1310                           ;dc_motor.c: 154:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  1311   001144  0EA7               	movlw	167
  1312   001146  6E15               	movwf	??_fullSpeedAhead^0,c
  1313   001148  0E3A               	movlw	58
  1314   00114A                     u3167:
  1315   00114A  2EE8               	decfsz	wreg,f,c
  1316   00114C  D7FE               	bra	u3167
  1317   00114E  2E15               	decfsz	??_fullSpeedAhead^0,f,c
  1318   001150  D7FC               	bra	u3167
  1319   001152  D000               	nop2	
  1320   001154                     l3319:
  1321                           
  1322                           ;dc_motor.c: 149:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  1323   001154  5013               	movf	fullSpeedAhead@mL^0,w,c
  1324   001156  6ED9               	movwf	fsr2l,c
  1325   001158  6ADA               	clrf	fsr2h,c
  1326   00115A  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  1327   00115C  5CDE               	subwf	postinc2,w,c
  1328   00115E  A0D8               	btfss	status,0,c
  1329   001160  EFB4  F008         	goto	u2521
  1330   001164  EFB6  F008         	goto	u2520
  1331   001168                     u2521:
  1332   001168  EF7A  F008         	goto	l3307
  1333   00116C                     u2520:
  1334   00116C  5014               	movf	fullSpeedAhead@mR^0,w,c
  1335   00116E  6ED9               	movwf	fsr2l,c
  1336   001170  6ADA               	clrf	fsr2h,c
  1337   001172  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  1338   001174  5CDE               	subwf	postinc2,w,c
  1339   001176  A0D8               	btfss	status,0,c
  1340   001178  EFC0  F008         	goto	u2531
  1341   00117C  EFC2  F008         	goto	u2530
  1342   001180                     u2531:
  1343   001180  EF7A  F008         	goto	l3307
  1344   001184                     u2530:
  1345   001184  0012               	return		;funcret
  1346   001186                     __end_of_fullSpeedAhead:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _setMotorPWM *****************
  1350 ;; Defined at:
  1351 ;;		line 68 in file "dc_motor.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  m               1   13[COMRAM] PTR struct DC_motor
  1354 ;;		 -> main@motorR(9), main@motorL(9), 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  negDuty         1   17[COMRAM] unsigned char 
  1357 ;;  posDuty         1   16[COMRAM] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1370 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1371 ;;Total ram usage:        5 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 2
  1374 ;; This function calls:
  1375 ;;		___lwdiv
  1376 ;;		___wmul
  1377 ;; This function is called by:
  1378 ;;		_stop
  1379 ;;		_fullSpeedAhead
  1380 ;;		_turnLeft
  1381 ;;		_turnRight
  1382 ;;		_fullSpeedReverse
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text5
  1387   000F78                     __ptext5:
  1388                           	callstack 0
  1389   000F78                     _setMotorPWM:
  1390                           	callstack 27
  1391   000F78                     
  1392                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  1393   000F78  500E               	movf	setMotorPWM@m^0,w,c
  1394   000F7A  6ED9               	movwf	fsr2l,c
  1395   000F7C  6ADA               	clrf	fsr2h,c
  1396   000F7E  0E02               	movlw	2
  1397   000F80  26D9               	addwf	fsr2l,f,c
  1398   000F82  50DF               	movf	indf2,w,c
  1399   000F84  B4D8               	btfsc	status,2,c
  1400   000F86  EFC7  F007         	goto	u1821
  1401   000F8A  EFC9  F007         	goto	u1820
  1402   000F8E                     u1821:
  1403   000F8E  EFF9  F007         	goto	l2881
  1404   000F92                     u1820:
  1405   000F92                     
  1406                           ;dc_motor.c: 73:         posDuty=(unsigned char)(m->PWMperiod - ((unsigned int)(m->power
      +                          )*(m->PWMperiod))/100);
  1407   000F92  500E               	movf	setMotorPWM@m^0,w,c
  1408   000F94  6ED9               	movwf	fsr2l,c
  1409   000F96  6ADA               	clrf	fsr2h,c
  1410   000F98  50DF               	movf	indf2,w,c
  1411   000F9A  6E0F               	movwf	??_setMotorPWM^0,c
  1412   000F9C  500F               	movf	??_setMotorPWM^0,w,c
  1413   000F9E  6E01               	movwf	___wmul@multiplier^0,c
  1414   000FA0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1415   000FA2  500E               	movf	setMotorPWM@m^0,w,c
  1416   000FA4  6ED9               	movwf	fsr2l,c
  1417   000FA6  6ADA               	clrf	fsr2h,c
  1418   000FA8  0E03               	movlw	3
  1419   000FAA  26D9               	addwf	fsr2l,f,c
  1420   000FAC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1421   000FB0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1422   000FB4  EC19  F00A         	call	___wmul	;wreg free
  1423   000FB8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1424   000FBC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1425   000FC0  0E00               	movlw	0
  1426   000FC2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1427   000FC4  0E64               	movlw	100
  1428   000FC6  6E09               	movwf	___lwdiv@divisor^0,c
  1429   000FC8  EC52  F009         	call	___lwdiv	;wreg free
  1430   000FCC  500E               	movf	setMotorPWM@m^0,w,c
  1431   000FCE  6ED9               	movwf	fsr2l,c
  1432   000FD0  6ADA               	clrf	fsr2h,c
  1433   000FD2  0E03               	movlw	3
  1434   000FD4  26D9               	addwf	fsr2l,f,c
  1435   000FD6  50DF               	movf	indf2,w,c
  1436   000FD8  6E10               	movwf	(??_setMotorPWM+1)^0,c
  1437   000FDA  5007               	movf	?___lwdiv^0,w,c
  1438   000FDC  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  1439   000FDE  6E11               	movwf	setMotorPWM@posDuty^0,c
  1440   000FE0                     
  1441                           ;dc_motor.c: 74:         negDuty=(unsigned char)(m->PWMperiod);
  1442   000FE0  500E               	movf	setMotorPWM@m^0,w,c
  1443   000FE2  6ED9               	movwf	fsr2l,c
  1444   000FE4  6ADA               	clrf	fsr2h,c
  1445   000FE6  0E03               	movlw	3
  1446   000FE8  26D9               	addwf	fsr2l,f,c
  1447   000FEA  50DF               	movf	indf2,w,c
  1448   000FEC  6E12               	movwf	setMotorPWM@negDuty^0,c
  1449                           
  1450                           ;dc_motor.c: 75:     }
  1451   000FEE  EF1A  F008         	goto	l2885
  1452   000FF2                     l2881:
  1453                           
  1454                           ;dc_motor.c: 77:         posDuty=0;
  1455   000FF2  0E00               	movlw	0
  1456   000FF4  6E11               	movwf	setMotorPWM@posDuty^0,c
  1457   000FF6                     
  1458                           ;dc_motor.c: 78:   negDuty=(unsigned char)(((unsigned int)(m->power)*(m->PWMperiod))/100
      +                          );
  1459   000FF6  500E               	movf	setMotorPWM@m^0,w,c
  1460   000FF8  6ED9               	movwf	fsr2l,c
  1461   000FFA  6ADA               	clrf	fsr2h,c
  1462   000FFC  50DF               	movf	indf2,w,c
  1463   000FFE  6E0F               	movwf	??_setMotorPWM^0,c
  1464   001000  500F               	movf	??_setMotorPWM^0,w,c
  1465   001002  6E01               	movwf	___wmul@multiplier^0,c
  1466   001004  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1467   001006  500E               	movf	setMotorPWM@m^0,w,c
  1468   001008  6ED9               	movwf	fsr2l,c
  1469   00100A  6ADA               	clrf	fsr2h,c
  1470   00100C  0E03               	movlw	3
  1471   00100E  26D9               	addwf	fsr2l,f,c
  1472   001010  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1473   001014  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1474   001018  EC19  F00A         	call	___wmul	;wreg free
  1475   00101C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1476   001020  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1477   001024  0E00               	movlw	0
  1478   001026  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1479   001028  0E64               	movlw	100
  1480   00102A  6E09               	movwf	___lwdiv@divisor^0,c
  1481   00102C  EC52  F009         	call	___lwdiv	;wreg free
  1482   001030  5007               	movf	?___lwdiv^0,w,c
  1483   001032  6E12               	movwf	setMotorPWM@negDuty^0,c
  1484   001034                     l2885:
  1485                           
  1486                           ;dc_motor.c: 81:     if (m->direction) {
  1487   001034  500E               	movf	setMotorPWM@m^0,w,c
  1488   001036  6ED9               	movwf	fsr2l,c
  1489   001038  6ADA               	clrf	fsr2h,c
  1490   00103A  0E01               	movlw	1
  1491   00103C  26D9               	addwf	fsr2l,f,c
  1492   00103E  50DF               	movf	indf2,w,c
  1493   001040  B4D8               	btfsc	status,2,c
  1494   001042  EF25  F008         	goto	u1831
  1495   001046  EF27  F008         	goto	u1830
  1496   00104A                     u1831:
  1497   00104A  EF47  F008         	goto	l2889
  1498   00104E                     u1830:
  1499   00104E                     
  1500                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  1501   00104E  500E               	movf	setMotorPWM@m^0,w,c
  1502   001050  6ED9               	movwf	fsr2l,c
  1503   001052  6ADA               	clrf	fsr2h,c
  1504   001054  0E05               	movlw	5
  1505   001056  26D9               	addwf	fsr2l,f,c
  1506   001058  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1507   00105C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1508   001060  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1509   001064  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1510   001068  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  1511                           
  1512                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  1513   00106C  500E               	movf	setMotorPWM@m^0,w,c
  1514   00106E  6ED9               	movwf	fsr2l,c
  1515   001070  6ADA               	clrf	fsr2h,c
  1516   001072  0E07               	movlw	7
  1517   001074  26D9               	addwf	fsr2l,f,c
  1518   001076  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1519   00107A  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1520   00107E  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1521   001082  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1522   001086  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  1523                           
  1524                           ;dc_motor.c: 84:     } else {
  1525   00108A  EF65  F008         	goto	l217
  1526   00108E                     l2889:
  1527                           
  1528                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  1529   00108E  500E               	movf	setMotorPWM@m^0,w,c
  1530   001090  6ED9               	movwf	fsr2l,c
  1531   001092  6ADA               	clrf	fsr2h,c
  1532   001094  0E05               	movlw	5
  1533   001096  26D9               	addwf	fsr2l,f,c
  1534   001098  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1535   00109C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1536   0010A0  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1537   0010A4  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1538   0010A8  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  1539                           
  1540                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  1541   0010AC  500E               	movf	setMotorPWM@m^0,w,c
  1542   0010AE  6ED9               	movwf	fsr2l,c
  1543   0010B0  6ADA               	clrf	fsr2h,c
  1544   0010B2  0E07               	movlw	7
  1545   0010B4  26D9               	addwf	fsr2l,f,c
  1546   0010B6  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1547   0010BA  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1548   0010BE  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1549   0010C2  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1550   0010C6  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  1551   0010CA                     l217:
  1552   0010CA  0012               	return		;funcret
  1553   0010CC                     __end_of_setMotorPWM:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function ___wmul *****************
  1557 ;; Defined at:
  1558 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  multiplier      2    0[COMRAM] unsigned int 
  1561 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  product         2    4[COMRAM] unsigned int 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2    0[COMRAM] unsigned int 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, prodl, prodh
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;Total ram usage:        6 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_setMotorPWM
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text6
  1588   001432                     __ptext6:
  1589                           	callstack 0
  1590   001432                     ___wmul:
  1591                           	callstack 27
  1592   001432  5001               	movf	___wmul@multiplier^0,w,c
  1593   001434  0203               	mulwf	___wmul@multiplicand^0,c
  1594   001436  CFF3 F005          	movff	prodl,___wmul@product
  1595   00143A  CFF4 F006          	movff	prodh,___wmul@product+1
  1596   00143E  5001               	movf	___wmul@multiplier^0,w,c
  1597   001440  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1598   001442  50F3               	movf	243,w,c
  1599   001444  2606               	addwf	(___wmul@product+1)^0,f,c
  1600   001446  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1601   001448  0203               	mulwf	___wmul@multiplicand^0,c
  1602   00144A  50F3               	movf	243,w,c
  1603   00144C  2606               	addwf	(___wmul@product+1)^0,f,c
  1604   00144E  C005  F001         	movff	___wmul@product,?___wmul
  1605   001452  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1606   001456  0012               	return		;funcret
  1607   001458                     __end_of___wmul:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function ___lwdiv *****************
  1611 ;; Defined at:
  1612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  dividend        2    6[COMRAM] unsigned int 
  1615 ;;  divisor         2    8[COMRAM] unsigned int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  quotient        2   10[COMRAM] unsigned int 
  1618 ;;  counter         1   12[COMRAM] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    6[COMRAM] unsigned int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;Total ram usage:        7 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_setMotorPWM
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text7
  1643   0012A4                     __ptext7:
  1644                           	callstack 0
  1645   0012A4                     ___lwdiv:
  1646                           	callstack 27
  1647   0012A4  0E00               	movlw	0
  1648   0012A6  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  1649   0012A8  0E00               	movlw	0
  1650   0012AA  6E0B               	movwf	___lwdiv@quotient^0,c
  1651   0012AC  5009               	movf	___lwdiv@divisor^0,w,c
  1652   0012AE  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1653   0012B0  B4D8               	btfsc	status,2,c
  1654   0012B2  EF5D  F009         	goto	u1751
  1655   0012B6  EF5F  F009         	goto	u1750
  1656   0012BA                     u1751:
  1657   0012BA  EF87  F009         	goto	l1246
  1658   0012BE                     u1750:
  1659   0012BE  0E01               	movlw	1
  1660   0012C0  6E0D               	movwf	___lwdiv@counter^0,c
  1661   0012C2  EF67  F009         	goto	l2833
  1662   0012C6                     l2831:
  1663   0012C6  90D8               	bcf	status,0,c
  1664   0012C8  3609               	rlcf	___lwdiv@divisor^0,f,c
  1665   0012CA  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1666   0012CC  2A0D               	incf	___lwdiv@counter^0,f,c
  1667   0012CE                     l2833:
  1668   0012CE  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  1669   0012D0  EF6C  F009         	goto	u1761
  1670   0012D4  EF6E  F009         	goto	u1760
  1671   0012D8                     u1761:
  1672   0012D8  EF63  F009         	goto	l2831
  1673   0012DC                     u1760:
  1674   0012DC                     l2835:
  1675   0012DC  90D8               	bcf	status,0,c
  1676   0012DE  360B               	rlcf	___lwdiv@quotient^0,f,c
  1677   0012E0  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1678   0012E2  5009               	movf	___lwdiv@divisor^0,w,c
  1679   0012E4  5C07               	subwf	___lwdiv@dividend^0,w,c
  1680   0012E6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1681   0012E8  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1682   0012EA  A0D8               	btfss	status,0,c
  1683   0012EC  EF7A  F009         	goto	u1771
  1684   0012F0  EF7C  F009         	goto	u1770
  1685   0012F4                     u1771:
  1686   0012F4  EF81  F009         	goto	l2843
  1687   0012F8                     u1770:
  1688   0012F8  5009               	movf	___lwdiv@divisor^0,w,c
  1689   0012FA  5E07               	subwf	___lwdiv@dividend^0,f,c
  1690   0012FC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1691   0012FE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1692   001300  800B               	bsf	___lwdiv@quotient^0,0,c
  1693   001302                     l2843:
  1694   001302  90D8               	bcf	status,0,c
  1695   001304  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1696   001306  3209               	rrcf	___lwdiv@divisor^0,f,c
  1697   001308  2E0D               	decfsz	___lwdiv@counter^0,f,c
  1698   00130A  EF6E  F009         	goto	l2835
  1699   00130E                     l1246:
  1700   00130E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  1701   001312  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1702   001316  0012               	return		;funcret
  1703   001318                     __end_of___lwdiv:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _color_click_init *****************
  1707 ;; Defined at:
  1708 ;;		line 7 in file "color.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1726 ;;Total ram usage:        1 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 4
  1729 ;; This function calls:
  1730 ;;		_I2C_2_Master_Init
  1731 ;;		_color_writetoaddr
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text8
  1738   001356                     __ptext8:
  1739                           	callstack 0
  1740   001356                     _color_click_init:
  1741                           	callstack 26
  1742   001356                     
  1743                           ;color.c: 10:     I2C_2_Master_Init();
  1744   001356  ECDC  F009         	call	_I2C_2_Master_Init	;wreg free
  1745   00135A                     
  1746                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  1747   00135A  0E01               	movlw	1
  1748   00135C  6E03               	movwf	color_writetoaddr@value^0,c
  1749   00135E  0E00               	movlw	0
  1750   001360  EC2C  F00A         	call	_color_writetoaddr
  1751   001364                     
  1752                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1753   001364  0E3F               	movlw	63
  1754   001366  6E05               	movwf	??_color_click_init^0,c
  1755   001368  0E55               	movlw	85
  1756   00136A                     u3177:
  1757   00136A  2EE8               	decfsz	wreg,f,c
  1758   00136C  D7FE               	bra	u3177
  1759   00136E  2E05               	decfsz	??_color_click_init^0,f,c
  1760   001370  D7FC               	bra	u3177
  1761   001372  0000               	nop	
  1762   001374                     
  1763                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1764   001374  0E03               	movlw	3
  1765   001376  6E03               	movwf	color_writetoaddr@value^0,c
  1766   001378  0E00               	movlw	0
  1767   00137A  EC2C  F00A         	call	_color_writetoaddr
  1768   00137E                     
  1769                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1770   00137E  0ED5               	movlw	213
  1771   001380  6E03               	movwf	color_writetoaddr@value^0,c
  1772   001382  0E01               	movlw	1
  1773   001384  EC2C  F00A         	call	_color_writetoaddr
  1774   001388  0012               	return		;funcret
  1775   00138A                     __end_of_color_click_init:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _color_writetoaddr *****************
  1779 ;; Defined at:
  1780 ;;		line 28 in file "color.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  address         1    wreg     unsigned char 
  1783 ;;  value           1    2[COMRAM] unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  address         1    3[COMRAM] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1795 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;Total ram usage:        2 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 3
  1802 ;; This function calls:
  1803 ;;		_I2C_2_Master_Start
  1804 ;;		_I2C_2_Master_Stop
  1805 ;;		_I2C_2_Master_Write
  1806 ;; This function is called by:
  1807 ;;		_color_click_init
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text9
  1812   001458                     __ptext9:
  1813                           	callstack 0
  1814   001458                     _color_writetoaddr:
  1815                           	callstack 26
  1816                           
  1817                           ;incstack = 0
  1818                           ;color_writetoaddr@address stored from wreg
  1819   001458  6E04               	movwf	color_writetoaddr@address^0,c
  1820   00145A                     
  1821                           ;color.c: 29:     I2C_2_Master_Start();
  1822   00145A  EC70  F00A         	call	_I2C_2_Master_Start	;wreg free
  1823                           
  1824                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  1825   00145E  0E52               	movlw	82
  1826   001460  EC59  F00A         	call	_I2C_2_Master_Write
  1827                           
  1828                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  1829   001464  5004               	movf	color_writetoaddr@address^0,w,c
  1830   001466  0980               	iorlw	128
  1831   001468  EC59  F00A         	call	_I2C_2_Master_Write
  1832                           
  1833                           ;color.c: 32:     I2C_2_Master_Write(value);
  1834   00146C  5003               	movf	color_writetoaddr@value^0,w,c
  1835   00146E  EC59  F00A         	call	_I2C_2_Master_Write
  1836                           
  1837                           ;color.c: 33:     I2C_2_Master_Stop();
  1838   001472  EC6B  F00A         	call	_I2C_2_Master_Stop	;wreg free
  1839   001476  0012               	return		;funcret
  1840   001478                     __end_of_color_writetoaddr:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _I2C_2_Master_Write *****************
  1844 ;; Defined at:
  1845 ;;		line 45 in file "i2c.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  data_byte       1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  data_byte       1    1[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;Total ram usage:        1 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 2
  1866 ;; This function calls:
  1867 ;;		_I2C_2_Master_Idle
  1868 ;; This function is called by:
  1869 ;;		_color_writetoaddr
  1870 ;;		_color_read_Red
  1871 ;;		_color_read_Green
  1872 ;;		_color_read_Blue
  1873 ;;		_color_read_Clear
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text10
  1878   0014B2                     __ptext10:
  1879                           	callstack 0
  1880   0014B2                     _I2C_2_Master_Write:
  1881                           	callstack 26
  1882                           
  1883                           ;incstack = 0
  1884                           ;I2C_2_Master_Write@data_byte stored from wreg
  1885   0014B2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1886   0014B4                     
  1887                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1888   0014B4  ECF1  F009         	call	_I2C_2_Master_Idle	;wreg free
  1889   0014B8                     
  1890                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1891   0014B8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1892   0014BC  0012               	return		;funcret
  1893   0014BE                     __end_of_I2C_2_Master_Write:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _I2C_2_Master_Stop *****************
  1897 ;; Defined at:
  1898 ;;		line 39 in file "i2c.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 2
  1919 ;; This function calls:
  1920 ;;		_I2C_2_Master_Idle
  1921 ;; This function is called by:
  1922 ;;		_color_writetoaddr
  1923 ;;		_color_read_Red
  1924 ;;		_color_read_Green
  1925 ;;		_color_read_Blue
  1926 ;;		_color_read_Clear
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text11
  1931   0014D6                     __ptext11:
  1932                           	callstack 0
  1933   0014D6                     _I2C_2_Master_Stop:
  1934                           	callstack 26
  1935   0014D6                     
  1936                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1937   0014D6  ECF1  F009         	call	_I2C_2_Master_Idle	;wreg free
  1938   0014DA                     
  1939                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1940   0014DA  010E               	movlb	14	; () banked
  1941   0014DC  85DA               	bsf	218,2,b	;volatile
  1942   0014DE                     
  1943                           ; BSR set to: 14
  1944   0014DE  0012               	return		;funcret
  1945   0014E0                     __end_of_I2C_2_Master_Stop:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _I2C_2_Master_Start *****************
  1949 ;; Defined at:
  1950 ;;		line 27 in file "i2c.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 2
  1971 ;; This function calls:
  1972 ;;		_I2C_2_Master_Idle
  1973 ;; This function is called by:
  1974 ;;		_color_writetoaddr
  1975 ;;		_color_read_Red
  1976 ;;		_color_read_Green
  1977 ;;		_color_read_Blue
  1978 ;;		_color_read_Clear
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text12
  1983   0014E0                     __ptext12:
  1984                           	callstack 0
  1985   0014E0                     _I2C_2_Master_Start:
  1986                           	callstack 26
  1987   0014E0                     
  1988                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1989   0014E0  ECF1  F009         	call	_I2C_2_Master_Idle	;wreg free
  1990   0014E4                     
  1991                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1992   0014E4  010E               	movlb	14	; () banked
  1993   0014E6  81DA               	bsf	218,0,b	;volatile
  1994   0014E8                     
  1995                           ; BSR set to: 14
  1996   0014E8  0012               	return		;funcret
  1997   0014EA                     __end_of_I2C_2_Master_Start:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _I2C_2_Master_Idle *****************
  2001 ;; Defined at:
  2002 ;;		line 22 in file "i2c.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;Total ram usage:        1 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_I2C_2_Master_Start
  2027 ;;		_I2C_2_Master_Stop
  2028 ;;		_I2C_2_Master_Write
  2029 ;;		_I2C_2_Master_RepStart
  2030 ;;		_I2C_2_Master_Read
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text13
  2035   0013E2                     __ptext13:
  2036                           	callstack 0
  2037   0013E2                     _I2C_2_Master_Idle:
  2038                           	callstack 26
  2039   0013E2                     l308:
  2040   0013E2  010E               	movlb	14	; () banked
  2041   0013E4  B5D8               	btfsc	216,2,b	;volatile
  2042   0013E6  EFF7  F009         	goto	u1721
  2043   0013EA  EFF9  F009         	goto	u1720
  2044   0013EE                     u1721:
  2045   0013EE  EFF1  F009         	goto	l308
  2046   0013F2                     u1720:
  2047   0013F2                     
  2048                           ; BSR set to: 14
  2049   0013F2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2050   0013F6  0E1F               	movlw	31
  2051   0013F8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2052   0013FA  A4D8               	btfss	status,2,c
  2053   0013FC  EF02  F00A         	goto	u1731
  2054   001400  EF04  F00A         	goto	u1730
  2055   001404                     u1731:
  2056   001404  EFF1  F009         	goto	l308
  2057   001408                     u1730:
  2058   001408                     
  2059                           ; BSR set to: 14
  2060   001408  0012               	return		;funcret
  2061   00140A                     __end_of_I2C_2_Master_Idle:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _I2C_2_Master_Init *****************
  2065 ;; Defined at:
  2066 ;;		line 4 in file "i2c.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_color_click_init
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text14
  2095   0013B8                     __ptext14:
  2096                           	callstack 0
  2097   0013B8                     _I2C_2_Master_Init:
  2098                           	callstack 28
  2099   0013B8                     
  2100                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2101   0013B8  010E               	movlb	14	; () banked
  2102   0013BA  51D9               	movf	217,w,b	;volatile
  2103   0013BC  0BF0               	andlw	-16
  2104   0013BE  0908               	iorlw	8
  2105   0013C0  6FD9               	movwf	217,b	;volatile
  2106   0013C2                     
  2107                           ; BSR set to: 14
  2108                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2109   0013C2  8BD9               	bsf	217,5,b	;volatile
  2110                           
  2111                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2112   0013C4  0E9F               	movlw	159
  2113   0013C6  6FD6               	movwf	214,b	;volatile
  2114   0013C8                     
  2115                           ; BSR set to: 14
  2116                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2117   0013C8  8A84               	bsf	132,5,c	;volatile
  2118   0013CA                     
  2119                           ; BSR set to: 14
  2120                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2121   0013CA  8C84               	bsf	132,6,c	;volatile
  2122   0013CC                     
  2123                           ; BSR set to: 14
  2124                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2125   0013CC  9BA7               	bcf	167,5,b	;volatile
  2126   0013CE                     
  2127                           ; BSR set to: 14
  2128                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2129   0013CE  9DA7               	bcf	167,6,b	;volatile
  2130                           
  2131                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2132   0013D0  0E1D               	movlw	29
  2133   0013D2  6F1D               	movwf	29,b	;volatile
  2134                           
  2135                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2136   0013D4  0E1E               	movlw	30
  2137   0013D6  6F1C               	movwf	28,b	;volatile
  2138                           
  2139                           ;i2c.c: 18:   RD5PPS=0x1C;
  2140   0013D8  0E1C               	movlw	28
  2141   0013DA  6F6F               	movwf	111,b	;volatile
  2142                           
  2143                           ;i2c.c: 19:   RD6PPS=0x1B;
  2144   0013DC  0E1B               	movlw	27
  2145   0013DE  6F70               	movwf	112,b	;volatile
  2146   0013E0                     
  2147                           ; BSR set to: 14
  2148   0013E0  0012               	return		;funcret
  2149   0013E2                     __end_of_I2C_2_Master_Init:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _buggy_lights_init *****************
  2153 ;; Defined at:
  2154 ;;		line 7 in file "buggy_lights.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		None
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text15
  2183   00138A                     __ptext15:
  2184                           	callstack 0
  2185   00138A                     _buggy_lights_init:
  2186                           	callstack 29
  2187   00138A                     
  2188                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  2189   00138A  9884               	bcf	132,4,c	;volatile
  2190                           
  2191                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  2192   00138C  9288               	bcf	136,1,c	;volatile
  2193                           
  2194                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  2195   00138E  9684               	bcf	132,3,c	;volatile
  2196                           
  2197                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  2198   001390  9086               	bcf	134,0,c	;volatile
  2199                           
  2200                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  2201   001392  9088               	bcf	136,0,c	;volatile
  2202                           
  2203                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  2204   001394  987C               	bcf	124,4,c	;volatile
  2205                           
  2206                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  2207   001396  9280               	bcf	128,1,c	;volatile
  2208                           
  2209                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  2210   001398  967C               	bcf	124,3,c	;volatile
  2211                           
  2212                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  2213   00139A  907E               	bcf	126,0,c	;volatile
  2214                           
  2215                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  2216   00139C  9080               	bcf	128,0,c	;volatile
  2217                           
  2218                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  2219   00139E  9287               	bcf	135,1,c	;volatile
  2220                           
  2221                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  2222   0013A0  9881               	bcf	129,4,c	;volatile
  2223                           
  2224                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  2225   0013A2  9E86               	bcf	134,7,c	;volatile
  2226                           
  2227                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  2228   0013A4  927F               	bcf	127,1,c	;volatile
  2229                           
  2230                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  2231   0013A6  9879               	bcf	121,4,c	;volatile
  2232                           
  2233                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  2234   0013A8  9E7E               	bcf	126,7,c	;volatile
  2235                           
  2236                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  2237   0013AA  9087               	bcf	135,0,c	;volatile
  2238                           
  2239                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  2240   0013AC  9E85               	bcf	133,7,c	;volatile
  2241                           
  2242                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  2243   0013AE  9681               	bcf	129,3,c	;volatile
  2244                           
  2245                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  2246   0013B0  907F               	bcf	127,0,c	;volatile
  2247                           
  2248                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  2249   0013B2  9E7D               	bcf	125,7,c	;volatile
  2250                           
  2251                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  2252   0013B4  9679               	bcf	121,3,c	;volatile
  2253   0013B6  0012               	return		;funcret
  2254   0013B8                     __end_of_buggy_lights_init:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _Timer0_init *****************
  2258 ;; Defined at:
  2259 ;;		line 7 in file "timers.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 3
  2280 ;; This function calls:
  2281 ;;		_reset_timer
  2282 ;;		_start_timer
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text16
  2289   00140A                     __ptext16:
  2290                           	callstack 0
  2291   00140A                     _Timer0_init:
  2292                           	callstack 27
  2293   00140A                     
  2294                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2295   00140A  50D6               	movf	214,w,c	;volatile
  2296   00140C  0B1F               	andlw	-225
  2297   00140E  0940               	iorlw	64
  2298   001410  6ED6               	movwf	214,c	;volatile
  2299   001412                     
  2300                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2301   001412  88D6               	bsf	214,4,c	;volatile
  2302   001414                     
  2303                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  2304   001414  88D5               	bsf	213,4,c	;volatile
  2305                           
  2306                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  2307   001416  50D6               	movf	214,w,c	;volatile
  2308   001418  0BF0               	andlw	-16
  2309   00141A  090E               	iorlw	14
  2310   00141C  6ED6               	movwf	214,c	;volatile
  2311   00141E                     
  2312                           ;timers.c: 18:     reset_timer();
  2313   00141E  EC5F  F00A         	call	_reset_timer	;wreg free
  2314   001422                     
  2315                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  2316   001422  8ED5               	bsf	213,7,c	;volatile
  2317                           
  2318                           ;timers.c: 21:     start_timer();
  2319   001424  EC75  F00A         	call	_start_timer	;wreg free
  2320   001428                     
  2321                           ;timers.c: 22:     PIE0bits.TMR0IE = 1;
  2322   001428  010E               	movlb	14	; () banked
  2323   00142A  8B29               	bsf	41,5,b	;volatile
  2324   00142C                     
  2325                           ; BSR set to: 14
  2326                           ;timers.c: 23:     INTCONbits.PEIE = 1;
  2327   00142C  8CF2               	bsf	242,6,c	;volatile
  2328   00142E                     
  2329                           ; BSR set to: 14
  2330                           ;timers.c: 24:     INTCONbits.GIE = 1;
  2331   00142E  8EF2               	bsf	242,7,c	;volatile
  2332   001430                     
  2333                           ; BSR set to: 14
  2334   001430  0012               	return		;funcret
  2335   001432                     __end_of_Timer0_init:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _start_timer *****************
  2339 ;; Defined at:
  2340 ;;		line 30 in file "timers.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		None
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_Timer0_init
  2365 ;;		_forward_navigation
  2366 ;;		_return_to_sender
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text17
  2371   0014EA                     __ptext17:
  2372                           	callstack 0
  2373   0014EA                     _start_timer:
  2374                           	callstack 28
  2375   0014EA                     
  2376                           ;timers.c: 32:     T0CON0bits.T0EN=1;
  2377   0014EA  8ED5               	bsf	213,7,c	;volatile
  2378   0014EC  0012               	return		;funcret
  2379   0014EE                     __end_of_start_timer:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _reset_timer *****************
  2383 ;; Defined at:
  2384 ;;		line 70 in file "timers.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 2
  2405 ;; This function calls:
  2406 ;;		_write_timer
  2407 ;; This function is called by:
  2408 ;;		_Timer0_init
  2409 ;;		_forward_navigation
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text18
  2414   0014BE                     __ptext18:
  2415                           	callstack 0
  2416   0014BE                     _reset_timer:
  2417                           	callstack 27
  2418   0014BE                     
  2419                           ;timers.c: 72:     write_timer(0, 0);
  2420   0014BE  0E00               	movlw	0
  2421   0014C0  6E01               	movwf	write_timer@tL^0,c
  2422   0014C2  0E00               	movlw	0
  2423   0014C4  EC65  F00A         	call	_write_timer
  2424   0014C8  0012               	return		;funcret
  2425   0014CA                     __end_of_reset_timer:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _write_timer *****************
  2429 ;; Defined at:
  2430 ;;		line 58 in file "timers.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  tH              1    wreg     unsigned char 
  2433 ;;  tL              1    0[COMRAM] unsigned char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  tH              1    1[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2445 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_reset_timer
  2456 ;;		_return_to_sender
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text19
  2461   0014CA                     __ptext19:
  2462                           	callstack 0
  2463   0014CA                     _write_timer:
  2464                           	callstack 27
  2465                           
  2466                           ;incstack = 0
  2467                           ;write_timer@tH stored from wreg
  2468   0014CA  6E02               	movwf	write_timer@tH^0,c
  2469   0014CC                     
  2470                           ;timers.c: 58: void write_timer(unsigned char tH, unsigned char tL);timers.c: 59: {;time
      +                          rs.c: 63:     TMR0H = tH;
  2471   0014CC  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  2472   0014D0                     
  2473                           ;timers.c: 64:     TMR0L = tL;
  2474   0014D0  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  2475   0014D4  0012               	return		;funcret
  2476   0014D6                     __end_of_write_timer:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _ISR *****************
  2480 ;; Defined at:
  2481 ;;		line 210 in file "timers.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		Interrupt level 2
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	intcode
  2509   000008                     __pintcode:
  2510                           	callstack 0
  2511   000008                     _ISR:
  2512                           	callstack 26
  2513                           
  2514                           ;incstack = 0
  2515   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2516   00000A                     
  2517                           ;timers.c: 212:     if (PIR0bits.TMR0IF) {
  2518   00000A  010E               	movlb	14	; () banked
  2519   00000C  AB33               	btfss	51,5,b	;volatile
  2520   00000E  EF0B  F000         	goto	i2u120_41
  2521   000012  EF0D  F000         	goto	i2u120_40
  2522   000016                     i2u120_41:
  2523   000016  EF1C  F000         	goto	i2l725
  2524   00001A                     i2u120_40:
  2525   00001A                     
  2526                           ; BSR set to: 14
  2527                           ;timers.c: 213:         if (returning) {
  2528   00001A  505A               	movf	_returning^0,w,c
  2529   00001C  B4D8               	btfsc	status,2,c
  2530   00001E  EF13  F000         	goto	i2u121_41
  2531   000022  EF15  F000         	goto	i2u121_40
  2532   000026                     i2u121_41:
  2533   000026  EF19  F000         	goto	i2l2419
  2534   00002A                     i2u121_40:
  2535   00002A                     
  2536                           ; BSR set to: 14
  2537                           ;timers.c: 214:             return_flag = 1;
  2538   00002A  0E01               	movlw	1
  2539   00002C  6E59               	movwf	_return_flag^0,c
  2540                           
  2541                           ;timers.c: 215:         } else {
  2542   00002E  EF1B  F000         	goto	i2l2421
  2543   000032                     i2l2419:
  2544                           
  2545                           ; BSR set to: 14
  2546                           ;timers.c: 216:             lost_flag = 1;
  2547   000032  0E01               	movlw	1
  2548   000034  6E58               	movwf	_lost_flag^0,c
  2549   000036                     i2l2421:
  2550                           
  2551                           ; BSR set to: 14
  2552                           ;timers.c: 218:         PIR0bits.TMR0IF = 0;
  2553   000036  9B33               	bcf	51,5,b	;volatile
  2554   000038                     i2l725:
  2555                           
  2556                           ; BSR set to: 14
  2557   000038  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2558   00003A  0011               	retfie		f
  2559   00003C                     __end_of_ISR:
  2560                           	callstack 0
  2561                           
  2562                           	psect	rparam
  2563   000000                     
  2564                           	psect	temp
  2565   00005B                     btemp:
  2566                           	callstack 0
  2567   00005B                     	ds	1
  2568   000000                     int$flags	set	btemp
  2569   000000                     wtemp8	set	btemp+1
  2570   000000                     ttemp5	set	btemp+1
  2571   000000                     ttemp6	set	btemp+4
  2572   000000                     ttemp7	set	btemp+8
  2573                           
  2574                           	psect	idloc
  2575                           
  2576                           ;Config register IDLOC0 @ 0x200000
  2577                           ;	unspecified, using default values
  2578   200000                     	org	2097152
  2579   200000  FFFF               	dw	65535
  2580                           
  2581                           ;Config register IDLOC1 @ 0x200002
  2582                           ;	unspecified, using default values
  2583   200002                     	org	2097154
  2584   200002  FFFF               	dw	65535
  2585                           
  2586                           ;Config register IDLOC2 @ 0x200004
  2587                           ;	unspecified, using default values
  2588   200004                     	org	2097156
  2589   200004  FFFF               	dw	65535
  2590                           
  2591                           ;Config register IDLOC3 @ 0x200006
  2592                           ;	unspecified, using default values
  2593   200006                     	org	2097158
  2594   200006  FFFF               	dw	65535
  2595                           
  2596                           ;Config register IDLOC4 @ 0x200008
  2597                           ;	unspecified, using default values
  2598   200008                     	org	2097160
  2599   200008  FFFF               	dw	65535
  2600                           
  2601                           ;Config register IDLOC5 @ 0x20000A
  2602                           ;	unspecified, using default values
  2603   20000A                     	org	2097162
  2604   20000A  FFFF               	dw	65535
  2605                           
  2606                           ;Config register IDLOC6 @ 0x20000C
  2607                           ;	unspecified, using default values
  2608   20000C                     	org	2097164
  2609   20000C  FFFF               	dw	65535
  2610                           
  2611                           ;Config register IDLOC7 @ 0x20000E
  2612                           ;	unspecified, using default values
  2613   20000E                     	org	2097166
  2614   20000E  FFFF               	dw	65535
  2615                           
  2616                           	psect	config
  2617                           
  2618                           ;Config register CONFIG1L @ 0x300000
  2619                           ;	External Oscillator mode Selection bits
  2620                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2621                           ;	Power-up default value for COSC bits
  2622                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2623   300000                     	org	3145728
  2624   300000  AA                 	db	170
  2625                           
  2626                           ;Config register CONFIG1H @ 0x300001
  2627                           ;	unspecified, using default values
  2628                           ;	Clock Out Enable bit
  2629                           ;	CLKOUTEN = 0x1, unprogrammed default
  2630                           ;	Clock Switch Enable bit
  2631                           ;	CSWEN = 0x1, unprogrammed default
  2632                           ;	Fail-Safe Clock Monitor Enable bit
  2633                           ;	FCMEN = 0x1, unprogrammed default
  2634   300001                     	org	3145729
  2635   300001  FF                 	db	255
  2636                           
  2637                           ;Config register CONFIG2L @ 0x300002
  2638                           ;	unspecified, using default values
  2639                           ;	Master Clear Enable bit
  2640                           ;	MCLRE = 0x1, unprogrammed default
  2641                           ;	Power-up Timer Enable bit
  2642                           ;	PWRTE = 0x1, unprogrammed default
  2643                           ;	Low-power BOR enable bit
  2644                           ;	LPBOREN = 0x1, unprogrammed default
  2645                           ;	Brown-out Reset Enable bits
  2646                           ;	BOREN = 0x3, unprogrammed default
  2647   300002                     	org	3145730
  2648   300002  FF                 	db	255
  2649                           
  2650                           ;Config register CONFIG2H @ 0x300003
  2651                           ;	unspecified, using default values
  2652                           ;	Brown Out Reset Voltage selection bits
  2653                           ;	BORV = 0x3, unprogrammed default
  2654                           ;	ZCD Disable bit
  2655                           ;	ZCD = 0x1, unprogrammed default
  2656                           ;	PPSLOCK bit One-Way Set Enable bit
  2657                           ;	PPS1WAY = 0x1, unprogrammed default
  2658                           ;	Stack Full/Underflow Reset Enable bit
  2659                           ;	STVREN = 0x1, unprogrammed default
  2660                           ;	Debugger Enable bit
  2661                           ;	DEBUG = 0x1, unprogrammed default
  2662                           ;	Extended Instruction Set Enable bit
  2663                           ;	XINST = 0x1, unprogrammed default
  2664   300003                     	org	3145731
  2665   300003  FF                 	db	255
  2666                           
  2667                           ;Config register CONFIG3L @ 0x300004
  2668                           ;	WDT Period Select bits
  2669                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2670                           ;	WDT operating mode
  2671                           ;	WDTE = OFF, WDT Disabled
  2672   300004                     	org	3145732
  2673   300004  9F                 	db	159
  2674                           
  2675                           ;Config register CONFIG3H @ 0x300005
  2676                           ;	unspecified, using default values
  2677                           ;	WDT Window Select bits
  2678                           ;	WDTCWS = 0x7, unprogrammed default
  2679                           ;	WDT input clock selector
  2680                           ;	WDTCCS = 0x7, unprogrammed default
  2681   300005                     	org	3145733
  2682   300005  FF                 	db	255
  2683                           
  2684                           ;Config register CONFIG4L @ 0x300006
  2685                           ;	unspecified, using default values
  2686                           ;	Write Protection Block 0
  2687                           ;	WRT0 = 0x1, unprogrammed default
  2688                           ;	Write Protection Block 1
  2689                           ;	WRT1 = 0x1, unprogrammed default
  2690                           ;	Write Protection Block 2
  2691                           ;	WRT2 = 0x1, unprogrammed default
  2692                           ;	Write Protection Block 3
  2693                           ;	WRT3 = 0x1, unprogrammed default
  2694                           ;	Write Protection Block 3
  2695                           ;	WRT4 = 0x1, unprogrammed default
  2696                           ;	Write Protection Block 3
  2697                           ;	WRT5 = 0x1, unprogrammed default
  2698                           ;	Write Protection Block 3
  2699                           ;	WRT6 = 0x1, unprogrammed default
  2700                           ;	Write Protection Block 3
  2701                           ;	WRT7 = 0x1, unprogrammed default
  2702   300006                     	org	3145734
  2703   300006  FF                 	db	255
  2704                           
  2705                           ;Config register CONFIG4H @ 0x300007
  2706                           ;	unspecified, using default values
  2707                           ;	Configuration Register Write Protection bit
  2708                           ;	WRTC = 0x1, unprogrammed default
  2709                           ;	Boot Block Write Protection bit
  2710                           ;	WRTB = 0x1, unprogrammed default
  2711                           ;	Data EEPROM Write Protection bit
  2712                           ;	WRTD = 0x1, unprogrammed default
  2713                           ;	Scanner Enable bit
  2714                           ;	SCANE = 0x1, unprogrammed default
  2715                           ;	Low Voltage Programming Enable bit
  2716                           ;	LVP = 0x1, unprogrammed default
  2717   300007                     	org	3145735
  2718   300007  FF                 	db	255
  2719                           
  2720                           ;Config register CONFIG5L @ 0x300008
  2721                           ;	unspecified, using default values
  2722                           ;	UserNVM Program Memory Code Protection bit
  2723                           ;	CP = 0x1, unprogrammed default
  2724                           ;	DataNVM Memory Code Protection bit
  2725                           ;	CPD = 0x1, unprogrammed default
  2726   300008                     	org	3145736
  2727   300008  FF                 	db	255
  2728                           
  2729                           ;Config register CONFIG5H @ 0x300009
  2730                           ;	unspecified, using default values
  2731   300009                     	org	3145737
  2732   300009  FF                 	db	255
  2733                           
  2734                           ;Config register CONFIG6L @ 0x30000A
  2735                           ;	unspecified, using default values
  2736                           ;	Table Read Protection Block 0
  2737                           ;	EBTR0 = 0x1, unprogrammed default
  2738                           ;	Table Read Protection Block 1
  2739                           ;	EBTR1 = 0x1, unprogrammed default
  2740                           ;	Table Read Protection Block 2
  2741                           ;	EBTR2 = 0x1, unprogrammed default
  2742                           ;	Table Read Protection Block 3
  2743                           ;	EBTR3 = 0x1, unprogrammed default
  2744                           ;	Table Read Protection Block 4
  2745                           ;	EBTR4 = 0x1, unprogrammed default
  2746                           ;	Table Read Protection Block 5
  2747                           ;	EBTR5 = 0x1, unprogrammed default
  2748                           ;	Table Read Protection Block 6
  2749                           ;	EBTR6 = 0x1, unprogrammed default
  2750                           ;	Table Read Protection Block 7
  2751                           ;	EBTR7 = 0x1, unprogrammed default
  2752   30000A                     	org	3145738
  2753   30000A  FF                 	db	255
  2754                           
  2755                           ;Config register CONFIG6H @ 0x30000B
  2756                           ;	unspecified, using default values
  2757                           ;	Boot Block Table Read Protection bit
  2758                           ;	EBTRB = 0x1, unprogrammed default
  2759   30000B                     	org	3145739
  2760   30000B  FF                 	db	255
  2761                           tosu	equ	0xFFF
  2762                           tosh	equ	0xFFE
  2763                           tosl	equ	0xFFD
  2764                           stkptr	equ	0xFFC
  2765                           pclatu	equ	0xFFB
  2766                           pclath	equ	0xFFA
  2767                           pcl	equ	0xFF9
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           prodh	equ	0xFF4
  2773                           prodl	equ	0xFF3
  2774                           indf0	equ	0xFEF
  2775                           postinc0	equ	0xFEE
  2776                           postdec0	equ	0xFED
  2777                           preinc0	equ	0xFEC
  2778                           plusw0	equ	0xFEB
  2779                           fsr0h	equ	0xFEA
  2780                           fsr0l	equ	0xFE9
  2781                           wreg	equ	0xFE8
  2782                           indf1	equ	0xFE7
  2783                           postinc1	equ	0xFE6
  2784                           postdec1	equ	0xFE5
  2785                           preinc1	equ	0xFE4
  2786                           plusw1	equ	0xFE3
  2787                           fsr1h	equ	0xFE2
  2788                           fsr1l	equ	0xFE1
  2789                           bsr	equ	0xFE0
  2790                           indf2	equ	0xFDF
  2791                           postinc2	equ	0xFDE
  2792                           postdec2	equ	0xFDD
  2793                           preinc2	equ	0xFDC
  2794                           plusw2	equ	0xFDB
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      90
    BANK0           160      0       0
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2779$buffer	PTR unsigned char  size(2) Largest target is 0

    S2779$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), main@motorR(COMRAM[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_fullSpeedAhead
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    7165
                                             23 COMRAM    36    36      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 3     1      2    3525
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     3      2    2443
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          5     4      1    1829
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
     _start_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _stop
     _setMotorPWM

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      5A       1       95.7%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllllh      9      0       0      57        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      61        0.0%
DATA                 0      0      96       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 18:31:42 2024

               _turn180Delay 0046              _trail_timer_low 0114                           l27 13B6  
                         l65 1388                           l68 1476          ___wmul@multiplicand 0003  
           _trail_timer_high 0128                          l210 1214                          l311 1408  
                        l320 14DE                          l305 13E0                          l217 10CA  
                        l225 12A2                          l314 14E8                          l323 14BC  
                        l308 13E2                          l420 0F74                          l246 1114  
                        l415 0EC8                          l249 1184                          l449 1494  
                        l680 14EC                          l755 1456                          l692 14C8  
                        l677 1430                          l689 14D4                          _ISR 0008  
                _start_timer 14EA                          wreg 0FE8                  _squareDelay 0042  
                       ?_ISR 0001                         l3001 14EA                         l3011 1374  
                       l3013 137E                         l3005 1356                         l1253 1316  
                       l1246 130E                         l3007 135A                         l2151 1478  
                       l3009 1364                         l2161 1492                         l2153 1482  
                       l2155 1484                         l3301 10CC                         l2157 148E  
                       l3311 112C                         l3303 10D4                         l2159 1490  
                       l3321 116C                         l3313 1134                         l3305 10E2  
                       l3331 1422                         l3323 140A                         l3315 113C  
                       l3307 10F4                         l3333 1428                         l3325 1412  
                       l1661 13B8                         l3317 1144                         l3309 110C  
                       l3261 11BC                         l3335 142C                         l3327 1414  
                       l1671 13CE                         l1663 13C2                         l3319 1154  
                       l3271 11FA                         l3263 11C0                         l3431 0E66  
                       l3337 142E                         l3329 141E                         l1665 13C8  
                       l3273 11FC                         l3265 11E4                         l3257 1186  
                       l3281 1216                         l3441 0E9A                         l3433 0E6E  
                       l1667 13CA                         l2731 13F2                         l3275 1206  
                       l3267 11EE                         l3259 1196                         l3291 1256  
                       l3283 121A                         l3451 0EB8                         l3443 0EAA  
                       l3435 0E82                         l3427 0E1A                         l1829 138A  
                       l1669 13CC                         l2733 14E0                         l2741 14D6  
                       l2821 144E                         l3277 1208                         l3269 11F0  
                       l3293 125E                         l3285 1230                         l3461 0EC2  
                       l3453 0EBA                         l3445 0EAE                         l3437 0E8A  
                       l3429 0E5E                         l2815 14CC                         l2735 14E4  
                       l2743 14DA                         l2831 12C6                         l3279 1212  
                       l3295 1266                         l3287 1238                         l3463 0EC6  
                       l3455 0EBC                         l3447 0EB2                         l3439 0E92  
                       l2817 14D0                         l2729 13E2                         l2737 14B4  
                       l2841 1300                         l2833 12CE                         l2825 12A4  
                       l3289 124E                         l3297 1276                         l3481 0F68  
                       l3473 0F24                         l3465 0ED6                         l3457 0EBE  
                       l3449 0EB6                         l2739 14B8                         l2843 1302  
                       l2835 12DC                         l2827 12AC                         l2819 1432  
                       l3299 128C                         l3475 0F30                         l3467 0F1C  
                       l3459 0EC0                         l2845 1308                         l2837 12E2  
                       l2829 12BE                         l3477 0F48                         l2847 145A  
                       l2839 12F8                         l3479 0F4C                         l2881 0FF2  
                       l2883 0FF6                         l2875 0F78                         l2885 1034  
                       l2877 0F92                         l2887 104E                         l2879 0FE0  
                       l2889 108E                         l2999 14BE                         STR_1 0E0F  
                       STR_2 0E14                         STR_5 0E01                 _BAUD4CONbits 0EE9  
                       u2500 110C                         u2501 1108                         u2510 112C  
                       u2511 1128                         u1720 13F2                         u2520 116C  
                       u2600 0F0A                         u1721 13EE                         u2521 1168  
                       u2601 0F02                         u1730 1408                         u2530 1184  
                       _T2PR 0FBC                         u1731 1404                         u2531 1180  
                       u3147 0F3A                         u1820 0F92                         u2460 1230  
                       u2620 0F68                         u1821 0F8E                         u3157 126C  
                       u2461 122C                         u2621 0F64                         u1750 12BE  
                       u1830 104E                         u2470 124E                         u1751 12BA  
                       u1831 104A                         u3167 114A                         u2471 124A  
                       u1760 12DC                         u2480 128C                         u3177 136A  
                       u1761 12D8                         u2481 1288                         u1770 12F8  
                       u2490 12A2                         u2618 0F0C                         u2570 0ED6  
                       u1771 12F4                         u2491 129E                         u2571 0ED2  
                       u2580 0EE8                         u2581 0EE0                         u2598 0EEA  
                       _main 0E1A                         fsr2h 0FDA                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         btemp 005B  
                       _stop 1216                         prodh 0FF4                         prodl 0FF3  
                       start 003C                 ___param_bank 0000                        ??_ISR 0001  
              write_timer@tH 0002                write_timer@tL 0001                        ?_main 0001  
         _timer_high_pointer 0040                        ?_stop 0013              __end_of___lwdiv 1318  
                      i2l725 0038                        _TMR0H 0FD4                        _TMR0L 0FD3  
 __end_of_I2C_2_Master_Start 14EA                  _write_timer 14CA   __end_of_I2C_2_Master_Write 14BE  
                _turningGear 0052                        main@i 001A            _turnRight135Delay 0048  
                      tablat 0FF5              _turnLeft90Delay 004E                        ttemp5 005C  
                      ttemp6 005F                        ttemp7 0063                        status 0FD8  
                      wtemp8 005C              __initialization 1318                 __end_of_main 0F78  
               __end_of_stop 12A4                       ??_main 0018                       ??_stop 0015  
              __activetblptr 0003                 ?_setMotorPWM 000E                       _CCPR1H 0FAA  
                     _CCPR2H 0FA6                       _CCPR3H 0F25                       _CCPR4H 0F21  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2421 0036                       i2l2413 000A  
                     i2l2415 001A                       i2l2417 002A                       i2l2419 0032  
                     _RG6PPS 0E88     __end_of_color_click_init 138A                       _RX4PPS 0E15  
                     _TX4REG 0EE4             _turnLeft135Delay 004A                ??_Timer0_init 0003  
               ?_reset_timer 0001                 _CCPTMRS0bits 0FAD                       ___wmul 1432  
                  ??___lwdiv 000B                       clear_0 133E                       isa$std 0001  
               __pdataCOMRAM 003C            _timer_low_pointer 003E                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
                     stop@mL 0013                       stop@mR 0014            ??_initDCmotorsPWM 0003  
          _buggy_lights_init 138A                   __accesstop 0060      __end_of__initialization 134C  
         ?_buggy_lights_init 0001                ___rparam_used 0001               __pcstackCOMRAM 0001  
        ??_buggy_lights_init 0001          __end_of_Timer0_init 1432                 ?_start_timer 0001  
  __end_of_buggy_lights_init 13B8                   __pbssBANK1 0100            _color_writetoaddr 1458  
               _T2CLKCONbits 0FBF           ?_color_writetoaddr 0003                      ?___wmul 0001  
        ??_color_writetoaddr 0004                      _SP4BRGH 0EE6                      _SP4BRGL 0EE5  
               ?_write_timer 0001                      _SSP2ADD 0ED6                      _SSP2BUF 0ED5  
     color_writetoaddr@value 0003    __end_of_color_writetoaddr 1478           _I2C_2_Master_Start 14E0  
                 _initUSART4 1478           _I2C_2_Master_Write 14B2                      __Hparam 0000  
                    __Lparam 0000                  _Timer0_init 140A          ?_I2C_2_Master_Start 0001  
                    ___lwdiv 12A4          ?_I2C_2_Master_Write 0001                 __psmallconst 0E00  
                    __pcinit 1318                      __ramtop 0E00                      __ptext0 0E1A  
                    __ptext1 1216                      __ptext2 1478                      __ptext3 1186  
                    __ptext4 10CC                      __ptext5 0F78                      __ptext6 1432  
                    __ptext7 12A4                      __ptext8 1356                      __ptext9 1458  
                  _T2CONbits 0FBD                    _T2HLTbits 0FBE       fullSpeedAhead@leftGear 0016  
       ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002         end_of_initialization 134C  
          ?_color_click_init 0001           ??_color_click_init 0005                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc2 0FDE  
            _initDCmotorsPWM 1186                    _PORTFbits 0F8E           setMotorPWM@negDuty 0012  
                  _TRISAbits 0F81           setMotorPWM@posDuty 0011                    _TRISCbits 0F83  
                  _TRISDbits 0F84                    _TRISEbits 0F85                    _TRISFbits 0F86  
                  _TRISGbits 0F87                    _TRISHbits 0F88             fullSpeedAhead@mL 0013  
           fullSpeedAhead@mR 0014     color_writetoaddr@address 0004                  _CCP1CONbits 0FAB  
                _CCP2CONbits 0FA7                  _CCP3CONbits 0F26                  ?_initUSART4 0001  
                _CCP4CONbits 0F22                   main@motorL 002A                   main@motorR 0033  
             _fullSpeedAhead 10CC               __end_of___wmul 1458                __pidataCOMRAM 1496  
        start_initialization 1318                  __end_of_ISR 003C             _turnRight90Delay 004C  
    __end_of_initDCmotorsPWM 1216       __end_of_fullSpeedAhead 1186                     ??___wmul 0005  
                __pbssCOMRAM 0057          _wall_threshold_blue 0050             ___lwdiv@dividend 0007  
               ?_Timer0_init 0001              ?_fullSpeedAhead 0013                    __pintcode 0008  
                   ?___lwdiv 0007                  __smallconst 0E00            _I2C_2_Master_Idle 13E2  
          _I2C_2_Master_Init 13B8            _I2C_2_Master_Stop 14D6           ?_I2C_2_Master_Idle 0001  
         ?_I2C_2_Master_Init 0001                ??_setMotorPWM 000F           ?_I2C_2_Master_Stop 0001  
           ___lwdiv@quotient 000B                _headbuttDelay 0044     initDCmotorsPWM@PWMperiod 0001  
                  _rampDelay 0055          ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001  
             ___wmul@product 0005                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0002  
                   _LATCbits 0F7B                     _LATDbits 0F7C                     _LATEbits 0F7D  
                   _LATFbits 0F7E                     _LATGbits 0F7F                     _LATHbits 0F80  
                   _PIE0bits 0E29                     i2u120_40 001A                     i2u120_41 0016  
                   i2u121_40 002A                     i2u121_41 0026                ??_reset_timer 0003  
                  _lost_flag 0058                     _PIR0bits 0E33                     _PIR4bits 0E37  
           ?_initDCmotorsPWM 0001                     _SSP2CON2 0EDA                     _SSP2STAT 0ED8  
                  _returning 005A    __end_of_I2C_2_Master_Idle 140A    __end_of_I2C_2_Master_Init 13E2  
          ___wmul@multiplier 0001    __end_of_I2C_2_Master_Stop 14E0                 setMotorPWM@m 000E  
I2C_2_Master_Write@data_byte 0002              main@RGBC_colour 0022                    copy_data0 132C  
        __end_of_setMotorPWM 10CC                 ??_initUSART4 0001                     __Hrparam 0000  
                   __Lrparam 0000                 _sample_count 0056          __end_of_reset_timer 14CA  
                 _ANSELDbits 0EA7                   _ANSELFbits 0EB4                ??_start_timer 0001  
                 _T0CON0bits 0FD5                   _T0CON1bits 0FD6              ___lwdiv@divisor 0009  
         __end_of_initUSART4 1496              ___lwdiv@counter 000D                     __ptext10 14B2  
                   __ptext11 14D6                     __ptext12 14E0                     __ptext13 13E2  
                   __ptext14 13B8                     __ptext15 138A                     __ptext16 140A  
                   __ptext17 14EA                     __ptext18 14BE                     __ptext19 14CA  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                     int$flags 005B                   _INTCONbits 0FF2  
              ??_write_timer 0002                  _setMotorPWM 0F78          __end_of_start_timer 14EE  
                   intlevel2 0000      fullSpeedAhead@rightGear 0017                 _topGearRight 0053  
          _manoeuvre_pointer 003C             ??_fullSpeedAhead 0015               main@HSV_colour 001C  
                _reset_timer 14BE             _color_click_init 1356                  _topGearLeft 0054  
                 _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C              _trail_manoeuvre 0100  
                _return_flag 0059              _manoeuvre_count 0057                   _TX4STAbits 0EE8  
        __end_of_write_timer 14D6  
