

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 15:08:02 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 18/08/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F67K40 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   001094                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _squareDelay
    71   001094  012C               	dw	300
    72                           
    73                           ;initializer for _headbuttDelay
    74   001096  0046               	dw	70
    75                           
    76                           ;initializer for _turn180Delay
    77   001098  01FE               	dw	510
    78                           
    79                           ;initializer for _turnRight135Delay
    80   00109A  012C               	dw	300
    81                           
    82                           ;initializer for _turnLeft135Delay
    83   00109C  012C               	dw	300
    84                           
    85                           ;initializer for _turnRight90Delay
    86   00109E  00AF               	dw	175
    87                           
    88                           ;initializer for _turnLeft90Delay
    89   0010A0  00AF               	dw	175
    90                           
    91                           ;initializer for _turningGear
    92   0010A2  2A                 	db	42
    93                           
    94                           ;initializer for _topGearRight
    95   0010A3  20                 	db	32
    96                           
    97                           ;initializer for _topGearLeft
    98   0010A4  1E                 	db	30
    99                           
   100                           ;initializer for _rampDelay
   101   0010A5  08                 	db	8
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _LATEbits	set	3965
   106   000000                     _TRISEbits	set	3973
   107   000000                     _LATGbits	set	3967
   108   000000                     _TRISGbits	set	3975
   109   000000                     _LATFbits	set	3966
   110   000000                     _LATHbits	set	3968
   111   000000                     _TRISFbits	set	3974
   112   000000                     _TRISHbits	set	3976
   113   000000                     _SSP2CON2bits	set	3802
   114   000000                     _RX4PPS	set	3605
   115   000000                     _SSP2CLKPPS	set	3612
   116   000000                     _SSP2DATPPS	set	3613
   117   000000                     _RC7PPS	set	3689
   118   000000                     _RE2PPS	set	3700
   119   000000                     _LATAbits	set	3961
   120   000000                     _LATDbits	set	3964
   121   000000                     _TRISDbits	set	3972
   122   000000                     _T2PR	set	4028
   123   000000                     _T2CONbits	set	4029
   124   000000                     _CCPR2H	set	4006
   125   000000                     _CCPR1H	set	4010
   126   000000                     _TRISCbits	set	3971
   127   000000                     _TRISAbits	set	3969
   128   000000                     _LATCbits	set	3963
   129   000000                     _RE4PPS	set	3702
   130   000000                     _RG6PPS	set	3720
   131   000000                     _RD5PPS	set	3695
   132   000000                     _ANSELDbits	set	3751
   133   000000                     _SSP2ADD	set	3798
   134   000000                     _SSP2CON1bits	set	3801
   135   000000                     _CCPR4H	set	3873
   136   000000                     _CCPR3H	set	3877
   137   000000                     _TMR0L	set	4051
   138   000000                     _TMR0H	set	4052
   139   000000                     _T0CON0bits	set	4053
   140   000000                     _T0CON1bits	set	4054
   141   000000                     _T2CLKCONbits	set	4031
   142   000000                     _T2HLTbits	set	4030
   143   000000                     _CCP1CONbits	set	4011
   144   000000                     _CCPTMRS0bits	set	4013
   145   000000                     _CCP2CONbits	set	4007
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _CCP4CONbits	set	3874
   148   000000                     _RC4REG	set	3811
   149   000000                     _SP4BRGL	set	3813
   150   000000                     _TX4STAbits	set	3816
   151   000000                     _BAUD4CONbits	set	3817
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _SSP2STAT	set	3800
   154   000000                     _SSP2BUF	set	3797
   155   000000                     _PIE0bits	set	3625
   156   000000                     _PIE4bits	set	3629
   157   000000                     _PIR4bits	set	3639
   158   000000                     _RC0PPS	set	3682
   159   000000                     _RD6PPS	set	3696
   160   000000                     _PIR0bits	set	3635
   161   000000                     _INTCONbits	set	4082
   162                           
   163                           	psect	smallconst
   164   000E00                     __psmallconst:
   165                           	callstack 0
   166   000E00  00                 	db	0
   167   000E01                     
   168                           ; BSR set to: 14
   169   000E01  25                 	db	37
   170   000E02  64                 	db	100	;'d'
   171   000E03  20                 	db	32
   172   000E04  0D                 	db	13
   173   000E05  00                 	db	0
   174   000E06  00                 	db	0	; dummy byte at the end
   175   000000                     
   176                           ; #config settings
   177                           
   178                           	psect	cinit
   179   000F66                     __pcinit:
   180                           	callstack 0
   181   000F66                     start_initialization:
   182                           	callstack 0
   183   000F66                     __initialization:
   184                           	callstack 0
   185                           
   186                           ; Initialize objects allocated to COMRAM (18 bytes)
   187                           ; load TBLPTR registers with __pidataCOMRAM
   188   000F66  0E94               	movlw	low __pidataCOMRAM
   189   000F68  6EF6               	movwf	tblptrl,c
   190   000F6A  0E10               	movlw	high __pidataCOMRAM
   191   000F6C  6EF7               	movwf	tblptrh,c
   192   000F6E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   193   000F70  6EF8               	movwf	tblptru,c
   194   000F72  EE00  F034         	lfsr	0,__pdataCOMRAM
   195   000F76  EE10 F012          	lfsr	1,18
   196   000F7A                     copy_data0:
   197   000F7A  0009               	tblrd		*+
   198   000F7C  CFF5 FFEE          	movff	tablat,postinc0
   199   000F80  50E5               	movf	postdec1,w,c
   200   000F82  50E1               	movf	fsr1l,w,c
   201   000F84  E1FA               	bnz	copy_data0
   202                           
   203                           ; Clear objects allocated to BANK0 (60 bytes)
   204   000F86  EE00  F060         	lfsr	0,__pbssBANK0
   205   000F8A  0E3C               	movlw	60
   206   000F8C                     clear_0:
   207   000F8C  6AEE               	clrf	postinc0,c
   208   000F8E  06E8               	decf	wreg,f,c
   209   000F90  E1FD               	bnz	clear_0
   210                           
   211                           ; Clear objects allocated to COMRAM (26 bytes)
   212   000F92  EE00  F001         	lfsr	0,__pbssCOMRAM
   213   000F96  0E1A               	movlw	26
   214   000F98                     clear_1:
   215   000F98  6AEE               	clrf	postinc0,c
   216   000F9A  06E8               	decf	wreg,f,c
   217   000F9C  E1FD               	bnz	clear_1
   218   000F9E                     end_of_initialization:
   219                           	callstack 0
   220   000F9E                     __end_of__initialization:
   221                           	callstack 0
   222   000F9E  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   223   000FA0  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   224   000FA2  0100               	movlb	0
   225   000FA4  EF4C  F007         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	bssCOMRAM
   228   000001                     __pbssCOMRAM:
   229                           	callstack 0
   230   000001                     _EUSART4RXbuf:
   231                           	callstack 0
   232   000001                     	ds	20
   233   000015                     _timer_count:
   234                           	callstack 0
   235   000015                     	ds	2
   236   000017                     _TxBufReadCnt:
   237                           	callstack 0
   238   000017                     	ds	1
   239   000018                     _TxBufWriteCnt:
   240                           	callstack 0
   241   000018                     	ds	1
   242   000019                     _RxBufReadCnt:
   243                           	callstack 0
   244   000019                     	ds	1
   245   00001A                     _RxBufWriteCnt:
   246                           	callstack 0
   247   00001A                     	ds	1
   248                           
   249                           	psect	dataCOMRAM
   250   000034                     __pdataCOMRAM:
   251                           	callstack 0
   252   000034                     _squareDelay:
   253                           	callstack 0
   254   000034                     	ds	2
   255   000036                     _headbuttDelay:
   256                           	callstack 0
   257   000036                     	ds	2
   258   000038                     _turn180Delay:
   259                           	callstack 0
   260   000038                     	ds	2
   261   00003A                     _turnRight135Delay:
   262                           	callstack 0
   263   00003A                     	ds	2
   264   00003C                     _turnLeft135Delay:
   265                           	callstack 0
   266   00003C                     	ds	2
   267   00003E                     _turnRight90Delay:
   268                           	callstack 0
   269   00003E                     	ds	2
   270   000040                     _turnLeft90Delay:
   271                           	callstack 0
   272   000040                     	ds	2
   273   000042                     _turningGear:
   274                           	callstack 0
   275   000042                     	ds	1
   276   000043                     _topGearRight:
   277                           	callstack 0
   278   000043                     	ds	1
   279   000044                     _topGearLeft:
   280                           	callstack 0
   281   000044                     	ds	1
   282   000045                     _rampDelay:
   283                           	callstack 0
   284   000045                     	ds	1
   285                           
   286                           	psect	bssBANK0
   287   000060                     __pbssBANK0:
   288                           	callstack 0
   289   000060                     _EUSART4TXbuf:
   290                           	callstack 0
   291   000060                     	ds	60
   292                           
   293                           	psect	cstackCOMRAM
   294   00001B                     __pcstackCOMRAM:
   295                           	callstack 0
   296   00001B                     ??_I2C_2_Master_Idle:
   297   00001B                     initDCmotorsPWM@PWMperiod:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301   00001B                     	ds	1
   302   00001C                     I2C_2_Master_Write@data_byte:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x1
   306   00001C                     	ds	1
   307   00001D                     color_writetoaddr@value:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x2
   311   00001D                     	ds	1
   312   00001E                     color_writetoaddr@address:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x3
   316   00001E                     	ds	1
   317   00001F                     ??_color_click_init:
   318                           
   319                           ; 1 bytes @ 0x4
   320   00001F                     	ds	1
   321   000020                     ??_main:
   322                           
   323                           ; 1 bytes @ 0x5
   324   000020                     	ds	2
   325   000022                     main@motorL:
   326                           	callstack 0
   327                           
   328                           ; 9 bytes @ 0x7
   329   000022                     	ds	9
   330   00002B                     main@motorR:
   331                           	callstack 0
   332                           
   333                           ; 9 bytes @ 0x10
   334   00002B                     	ds	9
   335                           
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 26 in file "main.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  motorR          9   16[COMRAM] struct DC_motor
   346 ;;  motorL          9    7[COMRAM] struct DC_motor
   347 ;;  PWMcycle        2    0        unsigned int 
   348 ;;  backtrack       1    0        unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   359 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   361 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   362 ;;Total ram usage:       20 bytes
   363 ;; Hardware stack levels required when called: 5
   364 ;; This function calls:
   365 ;;		_Timer0_init
   366 ;;		_buggy_lights_init
   367 ;;		_color_click_init
   368 ;;		_initDCmotorsPWM
   369 ;;		_initUSART4
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text0
   376   000E98                     __ptext0:
   377                           	callstack 0
   378   000E98                     _main:
   379                           	callstack 26
   380   000E98                     
   381                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   382   000E98  0E52               	movlw	82
   383   000E9A  6E21               	movwf	(??_main+1)^0,c
   384   000E9C  0E2B               	movlw	43
   385   000E9E  6E20               	movwf	??_main^0,c
   386   000EA0  0E00               	movlw	0
   387   000EA2                     u507:
   388   000EA2  2EE8               	decfsz	wreg,f,c
   389   000EA4  D7FE               	bra	u507
   390   000EA6  2E20               	decfsz	??_main^0,f,c
   391   000EA8  D7FC               	bra	u507
   392   000EAA  2E21               	decfsz	(??_main+1)^0,f,c
   393   000EAC  D7FA               	bra	u507
   394   000EAE  D000               	nop2	
   395   000EB0                     
   396                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   397   000EB0  0E00               	movlw	0
   398   000EB2  6E1C               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   399   000EB4  0E63               	movlw	99
   400   000EB6  6E1B               	movwf	initDCmotorsPWM@PWMperiod^0,c
   401   000EB8  EC04  F007         	call	_initDCmotorsPWM	;wreg free
   402   000EBC                     
   403                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   404   000EBC  0E00               	movlw	0
   405   000EBE  6E22               	movwf	main@motorL^0,c
   406   000EC0                     
   407                           ;main.c: 35:     motorL.direction = 1;
   408   000EC0  0E01               	movlw	1
   409   000EC2  6E23               	movwf	(main@motorL+1)^0,c
   410   000EC4                     
   411                           ;main.c: 36:     motorL.brakemode = 1;
   412   000EC4  0E01               	movlw	1
   413   000EC6  6E24               	movwf	(main@motorL+2)^0,c
   414   000EC8                     
   415                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   416   000EC8  0E00               	movlw	0
   417   000ECA  6E26               	movwf	(main@motorL+4)^0,c
   418   000ECC  0E63               	movlw	99
   419   000ECE  6E25               	movwf	(main@motorL+3)^0,c
   420   000ED0                     
   421                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   422   000ED0  0EAA               	movlw	170
   423   000ED2  6E27               	movwf	(main@motorL+5)^0,c
   424   000ED4  0E0F               	movlw	15
   425   000ED6  6E28               	movwf	(main@motorL+6)^0,c
   426   000ED8                     
   427                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   428   000ED8  0EA6               	movlw	166
   429   000EDA  6E29               	movwf	(main@motorL+7)^0,c
   430   000EDC  0E0F               	movlw	15
   431   000EDE  6E2A               	movwf	(main@motorL+8)^0,c
   432   000EE0                     
   433                           ;main.c: 41:     motorR.power = 0;
   434   000EE0  0E00               	movlw	0
   435   000EE2  6E2B               	movwf	main@motorR^0,c
   436   000EE4                     
   437                           ;main.c: 42:     motorR.direction = 1;
   438   000EE4  0E01               	movlw	1
   439   000EE6  6E2C               	movwf	(main@motorR+1)^0,c
   440   000EE8                     
   441                           ;main.c: 43:     motorR.brakemode = 1;
   442   000EE8  0E01               	movlw	1
   443   000EEA  6E2D               	movwf	(main@motorR+2)^0,c
   444   000EEC                     
   445                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   446   000EEC  0E00               	movlw	0
   447   000EEE  6E2F               	movwf	(main@motorR+4)^0,c
   448   000EF0  0E63               	movlw	99
   449   000EF2  6E2E               	movwf	(main@motorR+3)^0,c
   450   000EF4                     
   451                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   452   000EF4  0E25               	movlw	37
   453   000EF6  6E30               	movwf	(main@motorR+5)^0,c
   454   000EF8  0E0F               	movlw	15
   455   000EFA  6E31               	movwf	(main@motorR+6)^0,c
   456   000EFC                     
   457                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   458   000EFC  0E21               	movlw	33
   459   000EFE  6E32               	movwf	(main@motorR+7)^0,c
   460   000F00  0E0F               	movlw	15
   461   000F02  6E33               	movwf	(main@motorR+8)^0,c
   462   000F04                     
   463                           ;main.c: 48:     buggy_lights_init();
   464   000F04  EC8C  F007         	call	_buggy_lights_init	;wreg free
   465   000F08                     
   466                           ;main.c: 49:     color_click_init();
   467   000F08  ECD4  F007         	call	_color_click_init	;wreg free
   468   000F0C                     
   469                           ;main.c: 50:     initUSART4();
   470   000F0C  EC3B  F008         	call	_initUSART4	;wreg free
   471   000F10                     
   472                           ;main.c: 51:     Timer0_init();
   473   000F10  EC17  F008         	call	_Timer0_init	;wreg free
   474   000F14  EF16  F000         	goto	start
   475   000F18                     __end_of_main:
   476                           	callstack 0
   477                           
   478 ;; *************** function _initUSART4 *****************
   479 ;; Defined at:
   480 ;;		line 5 in file "serial.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text1
   509   001076                     __ptext1:
   510                           	callstack 0
   511   001076                     _initUSART4:
   512                           	callstack 29
   513   001076                     
   514                           ;serial.c: 9:     RC0PPS = 0x12;
   515   001076  0E12               	movlw	18
   516   001078  010E               	movlb	14	; () banked
   517   00107A  6F62               	movwf	98,b	;volatile
   518                           
   519                           ;serial.c: 10:     RX4PPS = 0x11;
   520   00107C  0E11               	movlw	17
   521   00107E  6F15               	movwf	21,b	;volatile
   522   001080                     
   523                           ; BSR set to: 14
   524                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
   525   001080  97E9               	bcf	233,3,b	;volatile
   526   001082                     
   527                           ; BSR set to: 14
   528                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
   529   001082  95E8               	bcf	232,2,b	;volatile
   530                           
   531                           ;serial.c: 15:     SP4BRGL = 51;
   532   001084  0E33               	movlw	51
   533   001086  6FE5               	movwf	229,b	;volatile
   534                           
   535                           ;serial.c: 16:     SP4BRGH = 0;
   536   001088  0E00               	movlw	0
   537   00108A  6FE6               	movwf	230,b	;volatile
   538   00108C                     
   539                           ; BSR set to: 14
   540                           ;serial.c: 18:     RC4STAbits.CREN = 1;
   541   00108C  89E7               	bsf	231,4,b	;volatile
   542   00108E                     
   543                           ; BSR set to: 14
   544                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
   545   00108E  8BE8               	bsf	232,5,b	;volatile
   546   001090                     
   547                           ; BSR set to: 14
   548                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
   549   001090  8FE7               	bsf	231,7,b	;volatile
   550   001092                     
   551                           ; BSR set to: 14
   552   001092  0012               	return		;funcret
   553   001094                     __end_of_initUSART4:
   554                           	callstack 0
   555                           
   556 ;; *************** function _initDCmotorsPWM *****************
   557 ;; Defined at:
   558 ;;		line 5 in file "dc_motor.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text2
   587   000E08                     __ptext2:
   588                           	callstack 0
   589   000E08                     _initDCmotorsPWM:
   590                           	callstack 29
   591   000E08                     
   592                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
   593   000E08  9485               	bcf	133,2,c	;volatile
   594                           
   595                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
   596   000E0A  9885               	bcf	133,4,c	;volatile
   597                           
   598                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
   599   000E0C  9E83               	bcf	131,7,c	;volatile
   600                           
   601                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
   602   000E0E  9C87               	bcf	135,6,c	;volatile
   603                           
   604                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
   605   000E10  947D               	bcf	125,2,c	;volatile
   606                           
   607                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
   608   000E12  987D               	bcf	125,4,c	;volatile
   609                           
   610                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
   611   000E14  9E7B               	bcf	123,7,c	;volatile
   612                           
   613                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
   614   000E16  9C7F               	bcf	127,6,c	;volatile
   615   000E18                     
   616                           ;dc_motor.c: 18:     RE2PPS=0x05;
   617   000E18  0E05               	movlw	5
   618   000E1A  010E               	movlb	14	; () banked
   619   000E1C  6F74               	movwf	116,b	;volatile
   620                           
   621                           ;dc_motor.c: 19:     RE4PPS=0x06;
   622   000E1E  0E06               	movlw	6
   623   000E20  6F76               	movwf	118,b	;volatile
   624                           
   625                           ;dc_motor.c: 20:     RC7PPS=0x07;
   626   000E22  0E07               	movlw	7
   627   000E24  6F69               	movwf	105,b	;volatile
   628                           
   629                           ;dc_motor.c: 21:     RG6PPS=0x08;
   630   000E26  0E08               	movlw	8
   631   000E28  6F88               	movwf	136,b	;volatile
   632                           
   633                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
   634   000E2A  50BD               	movf	189,w,c	;volatile
   635   000E2C  0B8F               	andlw	-113
   636   000E2E  0940               	iorlw	64
   637   000E30  6EBD               	movwf	189,c	;volatile
   638                           
   639                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
   640   000E32  0EE0               	movlw	-32
   641   000E34  16BE               	andwf	190,f,c	;volatile
   642                           
   643                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
   644   000E36  50BF               	movf	191,w,c	;volatile
   645   000E38  0BF0               	andlw	-16
   646   000E3A  0901               	iorlw	1
   647   000E3C  6EBF               	movwf	191,c	;volatile
   648   000E3E                     
   649                           ; BSR set to: 14
   650                           ;dc_motor.c: 30:     T2PR=PWMperiod;
   651   000E3E  C01B  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
   652   000E42                     
   653                           ; BSR set to: 14
   654                           ;dc_motor.c: 31:     T2CONbits.ON=1;
   655   000E42  8EBD               	bsf	189,7,c	;volatile
   656                           
   657                           ;dc_motor.c: 35:     CCPR1H=0;
   658   000E44  0E00               	movlw	0
   659   000E46  6EAA               	movwf	170,c	;volatile
   660                           
   661                           ;dc_motor.c: 36:     CCPR2H=0;
   662   000E48  0E00               	movlw	0
   663   000E4A  6EA6               	movwf	166,c	;volatile
   664                           
   665                           ;dc_motor.c: 37:     CCPR3H=0;
   666   000E4C  0E00               	movlw	0
   667   000E4E  010F               	movlb	15	; () banked
   668   000E50  6F25               	movwf	37,b	;volatile
   669                           
   670                           ;dc_motor.c: 38:     CCPR4H=0;
   671   000E52  0E00               	movlw	0
   672   000E54  6F21               	movwf	33,b	;volatile
   673                           
   674                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
   675   000E56  0EFC               	movlw	-4
   676   000E58  16AD               	andwf	173,f,c	;volatile
   677                           
   678                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
   679   000E5A  0EF3               	movlw	-13
   680   000E5C  16AD               	andwf	173,f,c	;volatile
   681                           
   682                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
   683   000E5E  0ECF               	movlw	-49
   684   000E60  16AD               	andwf	173,f,c	;volatile
   685                           
   686                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
   687   000E62  0E3F               	movlw	-193
   688   000E64  16AD               	andwf	173,f,c	;volatile
   689   000E66                     
   690                           ; BSR set to: 15
   691                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
   692   000E66  88AB               	bsf	171,4,c	;volatile
   693                           
   694                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
   695   000E68  50AB               	movf	171,w,c	;volatile
   696   000E6A  0BF0               	andlw	-16
   697   000E6C  090C               	iorlw	12
   698   000E6E  6EAB               	movwf	171,c	;volatile
   699   000E70                     
   700                           ; BSR set to: 15
   701                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
   702   000E70  8EAB               	bsf	171,7,c	;volatile
   703   000E72                     
   704                           ; BSR set to: 15
   705                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
   706   000E72  88A7               	bsf	167,4,c	;volatile
   707                           
   708                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
   709   000E74  50A7               	movf	167,w,c	;volatile
   710   000E76  0BF0               	andlw	-16
   711   000E78  090C               	iorlw	12
   712   000E7A  6EA7               	movwf	167,c	;volatile
   713   000E7C                     
   714                           ; BSR set to: 15
   715                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
   716   000E7C  8EA7               	bsf	167,7,c	;volatile
   717   000E7E                     
   718                           ; BSR set to: 15
   719                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
   720   000E7E  8926               	bsf	38,4,b	;volatile
   721                           
   722                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
   723   000E80  5126               	movf	38,w,b	;volatile
   724   000E82  0BF0               	andlw	-16
   725   000E84  090C               	iorlw	12
   726   000E86  6F26               	movwf	38,b	;volatile
   727   000E88                     
   728                           ; BSR set to: 15
   729                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
   730   000E88  8F26               	bsf	38,7,b	;volatile
   731   000E8A                     
   732                           ; BSR set to: 15
   733                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
   734   000E8A  8922               	bsf	34,4,b	;volatile
   735                           
   736                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
   737   000E8C  5122               	movf	34,w,b	;volatile
   738   000E8E  0BF0               	andlw	-16
   739   000E90  090C               	iorlw	12
   740   000E92  6F22               	movwf	34,b	;volatile
   741   000E94                     
   742                           ; BSR set to: 15
   743                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
   744   000E94  8F22               	bsf	34,7,b	;volatile
   745   000E96                     
   746                           ; BSR set to: 15
   747   000E96  0012               	return		;funcret
   748   000E98                     __end_of_initDCmotorsPWM:
   749                           	callstack 0
   750                           
   751 ;; *************** function _color_click_init *****************
   752 ;; Defined at:
   753 ;;		line 5 in file "color.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   771 ;;Total ram usage:        1 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 4
   774 ;; This function calls:
   775 ;;		_I2C_2_Master_Init
   776 ;;		_color_writetoaddr
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text3
   783   000FA8                     __ptext3:
   784                           	callstack 0
   785   000FA8                     _color_click_init:
   786                           	callstack 26
   787   000FA8                     
   788                           ;color.c: 8:     I2C_2_Master_Init();
   789   000FA8  ECEE  F007         	call	_I2C_2_Master_Init	;wreg free
   790   000FAC                     
   791                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
   792   000FAC  0E01               	movlw	1
   793   000FAE  6E1D               	movwf	color_writetoaddr@value^0,c
   794   000FB0  0E00               	movlw	0
   795   000FB2  EC2B  F008         	call	_color_writetoaddr
   796   000FB6                     
   797                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
   798   000FB6  0E3F               	movlw	63
   799   000FB8  6E1F               	movwf	??_color_click_init^0,c
   800   000FBA  0E55               	movlw	85
   801   000FBC                     u517:
   802   000FBC  2EE8               	decfsz	wreg,f,c
   803   000FBE  D7FE               	bra	u517
   804   000FC0  2E1F               	decfsz	??_color_click_init^0,f,c
   805   000FC2  D7FC               	bra	u517
   806   000FC4  0000               	nop	
   807   000FC6                     
   808                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
   809   000FC6  0E03               	movlw	3
   810   000FC8  6E1D               	movwf	color_writetoaddr@value^0,c
   811   000FCA  0E00               	movlw	0
   812   000FCC  EC2B  F008         	call	_color_writetoaddr
   813   000FD0                     
   814                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
   815   000FD0  0ED5               	movlw	213
   816   000FD2  6E1D               	movwf	color_writetoaddr@value^0,c
   817   000FD4  0E01               	movlw	1
   818   000FD6  EC2B  F008         	call	_color_writetoaddr
   819   000FDA  0012               	return		;funcret
   820   000FDC                     __end_of_color_click_init:
   821                           	callstack 0
   822                           
   823 ;; *************** function _color_writetoaddr *****************
   824 ;; Defined at:
   825 ;;		line 21 in file "color.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  address         1    wreg     unsigned char 
   828 ;;  value           1    2[COMRAM] unsigned char 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  address         1    3[COMRAM] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   840 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 3
   847 ;; This function calls:
   848 ;;		_I2C_2_Master_Start
   849 ;;		_I2C_2_Master_Stop
   850 ;;		_I2C_2_Master_Write
   851 ;; This function is called by:
   852 ;;		_color_click_init
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text4
   857   001056                     __ptext4:
   858                           	callstack 0
   859   001056                     _color_writetoaddr:
   860                           	callstack 26
   861                           
   862                           ;incstack = 0
   863                           ;color_writetoaddr@address stored from wreg
   864   001056  6E1E               	movwf	color_writetoaddr@address^0,c
   865   001058                     
   866                           ;color.c: 22:     I2C_2_Master_Start();
   867   001058  EC5E  F008         	call	_I2C_2_Master_Start	;wreg free
   868                           
   869                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
   870   00105C  0E52               	movlw	82
   871   00105E  EC53  F008         	call	_I2C_2_Master_Write
   872                           
   873                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
   874   001062  501E               	movf	color_writetoaddr@address^0,w,c
   875   001064  0980               	iorlw	128
   876   001066  EC53  F008         	call	_I2C_2_Master_Write
   877                           
   878                           ;color.c: 25:     I2C_2_Master_Write(value);
   879   00106A  501D               	movf	color_writetoaddr@value^0,w,c
   880   00106C  EC53  F008         	call	_I2C_2_Master_Write
   881                           
   882                           ;color.c: 26:     I2C_2_Master_Stop();
   883   001070  EC59  F008         	call	_I2C_2_Master_Stop	;wreg free
   884   001074  0012               	return		;funcret
   885   001076                     __end_of_color_writetoaddr:
   886                           	callstack 0
   887                           
   888 ;; *************** function _I2C_2_Master_Write *****************
   889 ;; Defined at:
   890 ;;		line 45 in file "i2c.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  data_byte       1    wreg     unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  data_byte       1    1[COMRAM] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;Total ram usage:        1 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 2
   911 ;; This function calls:
   912 ;;		_I2C_2_Master_Idle
   913 ;; This function is called by:
   914 ;;		_color_writetoaddr
   915 ;;		_color_read_Red
   916 ;;		_color_read_Blue
   917 ;;		_color_read_Green
   918 ;;		_color_read_Clear
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text5
   923   0010A6                     __ptext5:
   924                           	callstack 0
   925   0010A6                     _I2C_2_Master_Write:
   926                           	callstack 26
   927                           
   928                           ;incstack = 0
   929                           ;I2C_2_Master_Write@data_byte stored from wreg
   930   0010A6  6E1C               	movwf	I2C_2_Master_Write@data_byte^0,c
   931   0010A8                     
   932                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
   933   0010A8  EC03  F008         	call	_I2C_2_Master_Idle	;wreg free
   934   0010AC                     
   935                           ;i2c.c: 48:   SSP2BUF = data_byte;
   936   0010AC  C01C  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
   937   0010B0  0012               	return		;funcret
   938   0010B2                     __end_of_I2C_2_Master_Write:
   939                           	callstack 0
   940                           
   941 ;; *************** function _I2C_2_Master_Stop *****************
   942 ;; Defined at:
   943 ;;		line 39 in file "i2c.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 2
   964 ;; This function calls:
   965 ;;		_I2C_2_Master_Idle
   966 ;; This function is called by:
   967 ;;		_color_writetoaddr
   968 ;;		_color_read_Red
   969 ;;		_color_read_Blue
   970 ;;		_color_read_Green
   971 ;;		_color_read_Clear
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text6
   976   0010B2                     __ptext6:
   977                           	callstack 0
   978   0010B2                     _I2C_2_Master_Stop:
   979                           	callstack 26
   980   0010B2                     
   981                           ;i2c.c: 41:   I2C_2_Master_Idle();
   982   0010B2  EC03  F008         	call	_I2C_2_Master_Idle	;wreg free
   983   0010B6                     
   984                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
   985   0010B6  010E               	movlb	14	; () banked
   986   0010B8  85DA               	bsf	218,2,b	;volatile
   987   0010BA                     
   988                           ; BSR set to: 14
   989   0010BA  0012               	return		;funcret
   990   0010BC                     __end_of_I2C_2_Master_Stop:
   991                           	callstack 0
   992                           
   993 ;; *************** function _I2C_2_Master_Start *****************
   994 ;; Defined at:
   995 ;;		line 27 in file "i2c.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 2
  1016 ;; This function calls:
  1017 ;;		_I2C_2_Master_Idle
  1018 ;; This function is called by:
  1019 ;;		_color_writetoaddr
  1020 ;;		_color_read_Red
  1021 ;;		_color_read_Blue
  1022 ;;		_color_read_Green
  1023 ;;		_color_read_Clear
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text7
  1028   0010BC                     __ptext7:
  1029                           	callstack 0
  1030   0010BC                     _I2C_2_Master_Start:
  1031                           	callstack 26
  1032   0010BC                     
  1033                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1034   0010BC  EC03  F008         	call	_I2C_2_Master_Idle	;wreg free
  1035   0010C0                     
  1036                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1037   0010C0  010E               	movlb	14	; () banked
  1038   0010C2  81DA               	bsf	218,0,b	;volatile
  1039   0010C4                     
  1040                           ; BSR set to: 14
  1041   0010C4  0012               	return		;funcret
  1042   0010C6                     __end_of_I2C_2_Master_Start:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _I2C_2_Master_Idle *****************
  1046 ;; Defined at:
  1047 ;;		line 22 in file "i2c.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;Total ram usage:        1 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_I2C_2_Master_Start
  1072 ;;		_I2C_2_Master_Stop
  1073 ;;		_I2C_2_Master_Write
  1074 ;;		_I2C_2_Master_RepStart
  1075 ;;		_I2C_2_Master_Read
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text8
  1080   001006                     __ptext8:
  1081                           	callstack 0
  1082   001006                     _I2C_2_Master_Idle:
  1083                           	callstack 26
  1084   001006                     l244:
  1085   001006  010E               	movlb	14	; () banked
  1086   001008  B5D8               	btfsc	216,2,b	;volatile
  1087   00100A  EF09  F008         	goto	u11
  1088   00100E  EF0B  F008         	goto	u10
  1089   001012                     u11:
  1090   001012  EF03  F008         	goto	l244
  1091   001016                     u10:
  1092   001016                     
  1093                           ; BSR set to: 14
  1094   001016  CEDA F01B          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1095   00101A  0E1F               	movlw	31
  1096   00101C  161B               	andwf	??_I2C_2_Master_Idle^0,f,c
  1097   00101E  A4D8               	btfss	status,2,c
  1098   001020  EF14  F008         	goto	u21
  1099   001024  EF16  F008         	goto	u20
  1100   001028                     u21:
  1101   001028  EF03  F008         	goto	l244
  1102   00102C                     u20:
  1103   00102C                     
  1104                           ; BSR set to: 14
  1105   00102C  0012               	return		;funcret
  1106   00102E                     __end_of_I2C_2_Master_Idle:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _I2C_2_Master_Init *****************
  1110 ;; Defined at:
  1111 ;;		line 4 in file "i2c.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_color_click_init
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text9
  1140   000FDC                     __ptext9:
  1141                           	callstack 0
  1142   000FDC                     _I2C_2_Master_Init:
  1143                           	callstack 28
  1144   000FDC                     
  1145                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1146   000FDC  010E               	movlb	14	; () banked
  1147   000FDE  51D9               	movf	217,w,b	;volatile
  1148   000FE0  0BF0               	andlw	-16
  1149   000FE2  0908               	iorlw	8
  1150   000FE4  6FD9               	movwf	217,b	;volatile
  1151   000FE6                     
  1152                           ; BSR set to: 14
  1153                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1154   000FE6  8BD9               	bsf	217,5,b	;volatile
  1155                           
  1156                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1157   000FE8  0E9F               	movlw	159
  1158   000FEA  6FD6               	movwf	214,b	;volatile
  1159   000FEC                     
  1160                           ; BSR set to: 14
  1161                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1162   000FEC  8A84               	bsf	132,5,c	;volatile
  1163   000FEE                     
  1164                           ; BSR set to: 14
  1165                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1166   000FEE  8C84               	bsf	132,6,c	;volatile
  1167   000FF0                     
  1168                           ; BSR set to: 14
  1169                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1170   000FF0  9BA7               	bcf	167,5,b	;volatile
  1171   000FF2                     
  1172                           ; BSR set to: 14
  1173                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1174   000FF2  9DA7               	bcf	167,6,b	;volatile
  1175                           
  1176                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1177   000FF4  0E1D               	movlw	29
  1178   000FF6  6F1D               	movwf	29,b	;volatile
  1179                           
  1180                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1181   000FF8  0E1E               	movlw	30
  1182   000FFA  6F1C               	movwf	28,b	;volatile
  1183                           
  1184                           ;i2c.c: 18:   RD5PPS=0x1C;
  1185   000FFC  0E1C               	movlw	28
  1186   000FFE  6F6F               	movwf	111,b	;volatile
  1187                           
  1188                           ;i2c.c: 19:   RD6PPS=0x1B;
  1189   001000  0E1B               	movlw	27
  1190   001002  6F70               	movwf	112,b	;volatile
  1191   001004                     
  1192                           ; BSR set to: 14
  1193   001004  0012               	return		;funcret
  1194   001006                     __end_of_I2C_2_Master_Init:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _buggy_lights_init *****************
  1198 ;; Defined at:
  1199 ;;		line 4 in file "buggy_lights.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		None
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text10
  1228   000F18                     __ptext10:
  1229                           	callstack 0
  1230   000F18                     _buggy_lights_init:
  1231                           	callstack 29
  1232   000F18                     
  1233                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  1234   000F18  9884               	bcf	132,4,c	;volatile
  1235                           
  1236                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  1237   000F1A  9288               	bcf	136,1,c	;volatile
  1238                           
  1239                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  1240   000F1C  9684               	bcf	132,3,c	;volatile
  1241                           
  1242                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  1243   000F1E  9086               	bcf	134,0,c	;volatile
  1244                           
  1245                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  1246   000F20  9088               	bcf	136,0,c	;volatile
  1247                           
  1248                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 0;
  1249   000F22  987C               	bcf	124,4,c	;volatile
  1250                           
  1251                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 0;
  1252   000F24  9280               	bcf	128,1,c	;volatile
  1253                           
  1254                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 0;
  1255   000F26  967C               	bcf	124,3,c	;volatile
  1256                           
  1257                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 0;
  1258   000F28  907E               	bcf	126,0,c	;volatile
  1259                           
  1260                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 0;
  1261   000F2A  9080               	bcf	128,0,c	;volatile
  1262                           
  1263                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  1264   000F2C  9E84               	bcf	132,7,c	;volatile
  1265                           
  1266                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  1267   000F2E  9688               	bcf	136,3,c	;volatile
  1268                           
  1269                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 0;
  1270   000F30  9E7C               	bcf	124,7,c	;volatile
  1271                           
  1272                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 0;
  1273   000F32  9680               	bcf	128,3,c	;volatile
  1274                           
  1275                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  1276   000F34  9081               	bcf	129,0,c	;volatile
  1277                           
  1278                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  1279   000F36  9483               	bcf	131,2,c	;volatile
  1280                           
  1281                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  1282   000F38  9084               	bcf	132,0,c	;volatile
  1283                           
  1284                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  1285   000F3A  8079               	bsf	121,0,c	;volatile
  1286                           
  1287                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  1288   000F3C  847B               	bsf	123,2,c	;volatile
  1289                           
  1290                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  1291   000F3E  807C               	bsf	124,0,c	;volatile
  1292                           
  1293                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  1294   000F40  9281               	bcf	129,1,c	;volatile
  1295                           
  1296                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  1297   000F42  9C83               	bcf	131,6,c	;volatile
  1298                           
  1299                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  1300   000F44  9488               	bcf	136,2,c	;volatile
  1301                           
  1302                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  1303   000F46  8279               	bsf	121,1,c	;volatile
  1304                           
  1305                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  1306   000F48  8C7B               	bsf	123,6,c	;volatile
  1307                           
  1308                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  1309   000F4A  8480               	bsf	128,2,c	;volatile
  1310                           
  1311                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  1312   000F4C  9287               	bcf	135,1,c	;volatile
  1313                           
  1314                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  1315   000F4E  9881               	bcf	129,4,c	;volatile
  1316                           
  1317                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  1318   000F50  9E86               	bcf	134,7,c	;volatile
  1319                           
  1320                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  1321   000F52  827F               	bsf	127,1,c	;volatile
  1322                           
  1323                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  1324   000F54  8879               	bsf	121,4,c	;volatile
  1325                           
  1326                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  1327   000F56  8E7E               	bsf	126,7,c	;volatile
  1328                           
  1329                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  1330   000F58  9087               	bcf	135,0,c	;volatile
  1331                           
  1332                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  1333   000F5A  9E85               	bcf	133,7,c	;volatile
  1334                           
  1335                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  1336   000F5C  9681               	bcf	129,3,c	;volatile
  1337                           
  1338                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  1339   000F5E  807F               	bsf	127,0,c	;volatile
  1340                           
  1341                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  1342   000F60  8E7D               	bsf	125,7,c	;volatile
  1343                           
  1344                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  1345   000F62  8679               	bsf	121,3,c	;volatile
  1346   000F64  0012               	return		;funcret
  1347   000F66                     __end_of_buggy_lights_init:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _Timer0_init *****************
  1351 ;; Defined at:
  1352 ;;		line 7 in file "timers.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text11
  1381   00102E                     __ptext11:
  1382                           	callstack 0
  1383   00102E                     _Timer0_init:
  1384                           	callstack 29
  1385   00102E                     
  1386                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1387   00102E  50D6               	movf	214,w,c	;volatile
  1388   001030  0B1F               	andlw	-225
  1389   001032  0940               	iorlw	64
  1390   001034  6ED6               	movwf	214,c	;volatile
  1391   001036                     
  1392                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1393   001036  88D6               	bsf	214,4,c	;volatile
  1394   001038                     
  1395                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  1396   001038  88D5               	bsf	213,4,c	;volatile
  1397                           
  1398                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  1399   00103A  50D6               	movf	214,w,c	;volatile
  1400   00103C  0BF0               	andlw	-16
  1401   00103E  0908               	iorlw	8
  1402   001040  6ED6               	movwf	214,c	;volatile
  1403                           
  1404                           ;timers.c: 14:     TMR0H=0b00001011;
  1405   001042  0E0B               	movlw	11
  1406   001044  6ED4               	movwf	212,c	;volatile
  1407                           
  1408                           ;timers.c: 15:     TMR0L=0b11011100;
  1409   001046  0EDC               	movlw	220
  1410   001048  6ED3               	movwf	211,c	;volatile
  1411   00104A                     
  1412                           ;timers.c: 39:     T0CON0bits.T0EN=1;
  1413   00104A  8ED5               	bsf	213,7,c	;volatile
  1414   00104C                     
  1415                           ;timers.c: 40:     PIE0bits.TMR0IE = 1;
  1416   00104C  010E               	movlb	14	; () banked
  1417   00104E  8B29               	bsf	41,5,b	;volatile
  1418   001050                     
  1419                           ; BSR set to: 14
  1420                           ;timers.c: 41:     INTCONbits.PEIE = 1;
  1421   001050  8CF2               	bsf	242,6,c	;volatile
  1422   001052                     
  1423                           ; BSR set to: 14
  1424                           ;timers.c: 42:     INTCONbits.GIE = 1;
  1425   001052  8EF2               	bsf	242,7,c	;volatile
  1426   001054                     
  1427                           ; BSR set to: 14
  1428   001054  0012               	return		;funcret
  1429   001056                     __end_of_Timer0_init:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _ISR *****************
  1433 ;; Defined at:
  1434 ;;		line 45 in file "timers.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		Interrupt level 2
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	intcode
  1462   000008                     __pintcode:
  1463                           	callstack 0
  1464   000008                     _ISR:
  1465                           	callstack 26
  1466                           
  1467                           ; BSR set to: 14
  1468                           ;incstack = 0
  1469   000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1470   00000A                     
  1471                           ;timers.c: 48:     if (PIR0bits.TMR0IF) {
  1472   00000A  010E               	movlb	14	; () banked
  1473   00000C  AB33               	btfss	51,5,b	;volatile
  1474   00000E  EF0B  F000         	goto	i2u46_41
  1475   000012  EF0D  F000         	goto	i2u46_40
  1476   000016                     i2u46_41:
  1477   000016  EF14  F000         	goto	i2l528
  1478   00001A                     i2u46_40:
  1479   00001A                     
  1480                           ; BSR set to: 14
  1481                           ;timers.c: 67:         timer_count++;
  1482   00001A  4A15               	infsnz	_timer_count^0,f,c
  1483   00001C  2A16               	incf	(_timer_count+1)^0,f,c
  1484   00001E                     
  1485                           ; BSR set to: 14
  1486                           ;timers.c: 68:         TMR0H=0b00001011;
  1487   00001E  0E0B               	movlw	11
  1488   000020  6ED4               	movwf	212,c	;volatile
  1489   000022                     
  1490                           ; BSR set to: 14
  1491                           ;timers.c: 69:         TMR0L=0b11011100;
  1492   000022  0EDC               	movlw	220
  1493   000024  6ED3               	movwf	211,c	;volatile
  1494   000026                     
  1495                           ; BSR set to: 14
  1496                           ;timers.c: 70:         PIR0bits.TMR0IF = 0;
  1497   000026  9B33               	bcf	51,5,b	;volatile
  1498   000028                     i2l528:
  1499                           
  1500                           ; BSR set to: 14
  1501   000028  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1502   00002A  0011               	retfie		f
  1503   00002C                     __end_of_ISR:
  1504                           	callstack 0
  1505                           
  1506                           	psect	rparam
  1507   000000                     
  1508                           	psect	temp
  1509   000046                     btemp:
  1510                           	callstack 0
  1511   000046                     	ds	1
  1512   000000                     int$flags	set	btemp
  1513   000000                     wtemp8	set	btemp+1
  1514   000000                     ttemp5	set	btemp+1
  1515   000000                     ttemp6	set	btemp+4
  1516   000000                     ttemp7	set	btemp+8
  1517                           
  1518                           	psect	idloc
  1519                           
  1520                           ;Config register IDLOC0 @ 0x200000
  1521                           ;	unspecified, using default values
  1522   200000                     	org	2097152
  1523   200000  FFFF               	dw	65535
  1524                           
  1525                           ;Config register IDLOC1 @ 0x200002
  1526                           ;	unspecified, using default values
  1527   200002                     	org	2097154
  1528   200002  FFFF               	dw	65535
  1529                           
  1530                           ;Config register IDLOC2 @ 0x200004
  1531                           ;	unspecified, using default values
  1532   200004                     	org	2097156
  1533   200004  FFFF               	dw	65535
  1534                           
  1535                           ;Config register IDLOC3 @ 0x200006
  1536                           ;	unspecified, using default values
  1537   200006                     	org	2097158
  1538   200006  FFFF               	dw	65535
  1539                           
  1540                           ;Config register IDLOC4 @ 0x200008
  1541                           ;	unspecified, using default values
  1542   200008                     	org	2097160
  1543   200008  FFFF               	dw	65535
  1544                           
  1545                           ;Config register IDLOC5 @ 0x20000A
  1546                           ;	unspecified, using default values
  1547   20000A                     	org	2097162
  1548   20000A  FFFF               	dw	65535
  1549                           
  1550                           ;Config register IDLOC6 @ 0x20000C
  1551                           ;	unspecified, using default values
  1552   20000C                     	org	2097164
  1553   20000C  FFFF               	dw	65535
  1554                           
  1555                           ;Config register IDLOC7 @ 0x20000E
  1556                           ;	unspecified, using default values
  1557   20000E                     	org	2097166
  1558   20000E  FFFF               	dw	65535
  1559                           
  1560                           	psect	config
  1561                           
  1562                           ;Config register CONFIG1L @ 0x300000
  1563                           ;	External Oscillator mode Selection bits
  1564                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1565                           ;	Power-up default value for COSC bits
  1566                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1567   300000                     	org	3145728
  1568   300000  AA                 	db	170
  1569                           
  1570                           ;Config register CONFIG1H @ 0x300001
  1571                           ;	unspecified, using default values
  1572                           ;	Clock Out Enable bit
  1573                           ;	CLKOUTEN = 0x1, unprogrammed default
  1574                           ;	Clock Switch Enable bit
  1575                           ;	CSWEN = 0x1, unprogrammed default
  1576                           ;	Fail-Safe Clock Monitor Enable bit
  1577                           ;	FCMEN = 0x1, unprogrammed default
  1578   300001                     	org	3145729
  1579   300001  FF                 	db	255
  1580                           
  1581                           ;Config register CONFIG2L @ 0x300002
  1582                           ;	unspecified, using default values
  1583                           ;	Master Clear Enable bit
  1584                           ;	MCLRE = 0x1, unprogrammed default
  1585                           ;	Power-up Timer Enable bit
  1586                           ;	PWRTE = 0x1, unprogrammed default
  1587                           ;	Low-power BOR enable bit
  1588                           ;	LPBOREN = 0x1, unprogrammed default
  1589                           ;	Brown-out Reset Enable bits
  1590                           ;	BOREN = 0x3, unprogrammed default
  1591   300002                     	org	3145730
  1592   300002  FF                 	db	255
  1593                           
  1594                           ;Config register CONFIG2H @ 0x300003
  1595                           ;	unspecified, using default values
  1596                           ;	Brown Out Reset Voltage selection bits
  1597                           ;	BORV = 0x3, unprogrammed default
  1598                           ;	ZCD Disable bit
  1599                           ;	ZCD = 0x1, unprogrammed default
  1600                           ;	PPSLOCK bit One-Way Set Enable bit
  1601                           ;	PPS1WAY = 0x1, unprogrammed default
  1602                           ;	Stack Full/Underflow Reset Enable bit
  1603                           ;	STVREN = 0x1, unprogrammed default
  1604                           ;	Debugger Enable bit
  1605                           ;	DEBUG = 0x1, unprogrammed default
  1606                           ;	Extended Instruction Set Enable bit
  1607                           ;	XINST = 0x1, unprogrammed default
  1608   300003                     	org	3145731
  1609   300003  FF                 	db	255
  1610                           
  1611                           ;Config register CONFIG3L @ 0x300004
  1612                           ;	WDT Period Select bits
  1613                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1614                           ;	WDT operating mode
  1615                           ;	WDTE = OFF, WDT Disabled
  1616   300004                     	org	3145732
  1617   300004  9F                 	db	159
  1618                           
  1619                           ;Config register CONFIG3H @ 0x300005
  1620                           ;	unspecified, using default values
  1621                           ;	WDT Window Select bits
  1622                           ;	WDTCWS = 0x7, unprogrammed default
  1623                           ;	WDT input clock selector
  1624                           ;	WDTCCS = 0x7, unprogrammed default
  1625   300005                     	org	3145733
  1626   300005  FF                 	db	255
  1627                           
  1628                           ;Config register CONFIG4L @ 0x300006
  1629                           ;	unspecified, using default values
  1630                           ;	Write Protection Block 0
  1631                           ;	WRT0 = 0x1, unprogrammed default
  1632                           ;	Write Protection Block 1
  1633                           ;	WRT1 = 0x1, unprogrammed default
  1634                           ;	Write Protection Block 2
  1635                           ;	WRT2 = 0x1, unprogrammed default
  1636                           ;	Write Protection Block 3
  1637                           ;	WRT3 = 0x1, unprogrammed default
  1638                           ;	Write Protection Block 3
  1639                           ;	WRT4 = 0x1, unprogrammed default
  1640                           ;	Write Protection Block 3
  1641                           ;	WRT5 = 0x1, unprogrammed default
  1642                           ;	Write Protection Block 3
  1643                           ;	WRT6 = 0x1, unprogrammed default
  1644                           ;	Write Protection Block 3
  1645                           ;	WRT7 = 0x1, unprogrammed default
  1646   300006                     	org	3145734
  1647   300006  FF                 	db	255
  1648                           
  1649                           ;Config register CONFIG4H @ 0x300007
  1650                           ;	unspecified, using default values
  1651                           ;	Configuration Register Write Protection bit
  1652                           ;	WRTC = 0x1, unprogrammed default
  1653                           ;	Boot Block Write Protection bit
  1654                           ;	WRTB = 0x1, unprogrammed default
  1655                           ;	Data EEPROM Write Protection bit
  1656                           ;	WRTD = 0x1, unprogrammed default
  1657                           ;	Scanner Enable bit
  1658                           ;	SCANE = 0x1, unprogrammed default
  1659                           ;	Low Voltage Programming Enable bit
  1660                           ;	LVP = 0x1, unprogrammed default
  1661   300007                     	org	3145735
  1662   300007  FF                 	db	255
  1663                           
  1664                           ;Config register CONFIG5L @ 0x300008
  1665                           ;	unspecified, using default values
  1666                           ;	UserNVM Program Memory Code Protection bit
  1667                           ;	CP = 0x1, unprogrammed default
  1668                           ;	DataNVM Memory Code Protection bit
  1669                           ;	CPD = 0x1, unprogrammed default
  1670   300008                     	org	3145736
  1671   300008  FF                 	db	255
  1672                           
  1673                           ;Config register CONFIG5H @ 0x300009
  1674                           ;	unspecified, using default values
  1675   300009                     	org	3145737
  1676   300009  FF                 	db	255
  1677                           
  1678                           ;Config register CONFIG6L @ 0x30000A
  1679                           ;	unspecified, using default values
  1680                           ;	Table Read Protection Block 0
  1681                           ;	EBTR0 = 0x1, unprogrammed default
  1682                           ;	Table Read Protection Block 1
  1683                           ;	EBTR1 = 0x1, unprogrammed default
  1684                           ;	Table Read Protection Block 2
  1685                           ;	EBTR2 = 0x1, unprogrammed default
  1686                           ;	Table Read Protection Block 3
  1687                           ;	EBTR3 = 0x1, unprogrammed default
  1688                           ;	Table Read Protection Block 4
  1689                           ;	EBTR4 = 0x1, unprogrammed default
  1690                           ;	Table Read Protection Block 5
  1691                           ;	EBTR5 = 0x1, unprogrammed default
  1692                           ;	Table Read Protection Block 6
  1693                           ;	EBTR6 = 0x1, unprogrammed default
  1694                           ;	Table Read Protection Block 7
  1695                           ;	EBTR7 = 0x1, unprogrammed default
  1696   30000A                     	org	3145738
  1697   30000A  FF                 	db	255
  1698                           
  1699                           ;Config register CONFIG6H @ 0x30000B
  1700                           ;	unspecified, using default values
  1701                           ;	Boot Block Table Read Protection bit
  1702                           ;	EBTRB = 0x1, unprogrammed default
  1703   30000B                     	org	3145739
  1704   30000B  FF                 	db	255
  1705                           tosu	equ	0xFFF
  1706                           tosh	equ	0xFFE
  1707                           tosl	equ	0xFFD
  1708                           stkptr	equ	0xFFC
  1709                           pclatu	equ	0xFFB
  1710                           pclath	equ	0xFFA
  1711                           pcl	equ	0xFF9
  1712                           tblptru	equ	0xFF8
  1713                           tblptrh	equ	0xFF7
  1714                           tblptrl	equ	0xFF6
  1715                           tablat	equ	0xFF5
  1716                           prodh	equ	0xFF4
  1717                           prodl	equ	0xFF3
  1718                           indf0	equ	0xFEF
  1719                           postinc0	equ	0xFEE
  1720                           postdec0	equ	0xFED
  1721                           preinc0	equ	0xFEC
  1722                           plusw0	equ	0xFEB
  1723                           fsr0h	equ	0xFEA
  1724                           fsr0l	equ	0xFE9
  1725                           wreg	equ	0xFE8
  1726                           indf1	equ	0xFE7
  1727                           postinc1	equ	0xFE6
  1728                           postdec1	equ	0xFE5
  1729                           preinc1	equ	0xFE4
  1730                           plusw1	equ	0xFE3
  1731                           fsr1h	equ	0xFE2
  1732                           fsr1l	equ	0xFE1
  1733                           bsr	equ	0xFE0
  1734                           indf2	equ	0xFDF
  1735                           postinc2	equ	0xFDE
  1736                           postdec2	equ	0xFDD
  1737                           preinc2	equ	0xFDC
  1738                           plusw2	equ	0xFDB
  1739                           fsr2h	equ	0xFDA
  1740                           fsr2l	equ	0xFD9
  1741                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        18
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      69
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1109DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2416$buffer	PTR unsigned char  size(2) Largest target is 0

    S2416$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_color_click_init
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0     695
                                              5 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      45       1       73.4%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllhhh     2D      0       0      46        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      48        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      55        0.0%
BITBIGSFRllllhl      5      0       0      51        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      50        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      60        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 15:08:02 2024

               _turn180Delay 0038                           l33 0F64                           l55 0FDA  
                         l58 1074                           u10 1016                           u11 1012  
                         u20 102C                           u21 1028                          l241 1004  
                        l250 10C4                          l146 0E96                          l323 0F14  
                        l244 1006                          l247 102C                          l256 10BA  
                        l522 1054                          l362 1092                          l259 10B0  
                        u507 0EA2                          _ISR 0008                          u517 0FBC  
                        wreg 0FE8                  _squareDelay 0034                         ?_ISR 001B  
                       l1211 1006                         l1213 1016                         l1221 10AC  
                       l1215 10BC                         l1223 10B2                         l1217 10C0  
                       l1225 10B6                         l1251 0FF0                         l1243 0FDC  
                       l1219 10A8                         l1253 0FF2                         l1245 0FE6  
                       l1247 0FEC                         l1249 0FEE                         l1347 0F18  
                       l1801 0E88                         l1481 108E                         l1473 1076  
                       l1491 104A                         l1803 0E8A                         l1483 1090  
                       l1475 1080                         l1493 104C                         l1485 102E  
                       l1805 0E94                         l1477 1082                         l1821 0EBC  
                       l1495 1050                         l1487 1036                         l1479 108C  
                       l1831 0ED8                         l1823 0EC0                         l1815 0E98  
                       l1497 1052                         l1489 1038                         l1841 0EF4  
                       l1833 0EE0                         l1825 0EC4                         l1817 0EB0  
                       l1771 1058                         l1851 0F10                         l1843 0EFC  
                       l1835 0EE4                         l1827 0EC8                         l1819 0EB0  
                       l1781 0FD0                         l1773 0FA8                         l1853 0F14  
                       l1845 0F04                         l1837 0EE8                         l1829 0ED0  
                       l1775 0FAC                         l1791 0E66                         l1783 0E08  
                       l1847 0F08                         l1839 0EEC                         l1777 0FB6  
                       l1793 0E70                         l1785 0E18                         l1849 0F0C  
                       l1779 0FC6                         l1795 0E72                         l1787 0E3E  
                       l1797 0E7C                         l1789 0E42                         l1799 0E7E  
                       STR_1 0E01                 _BAUD4CONbits 0EE9                         _T2PR 0FBC  
                       _main 0E98                         fsr1l 0FE1                         btemp 0046  
                       start 002C                 ___param_bank 0000                        ??_ISR 001B  
                      ?_main 001B                        i2l528 0028                        _TMR0H 0FD4  
                      _TMR0L 0FD3   __end_of_I2C_2_Master_Start 10C6   __end_of_I2C_2_Master_Write 10B2  
                _turningGear 0042            _turnRight135Delay 003A                        tablat 0FF5  
            _turnLeft90Delay 0040                        ttemp5 0047                        ttemp6 004A  
                      ttemp7 004E                        status 0FD8                        wtemp8 0047  
            __initialization 0F66                 __end_of_main 0F18                       ??_main 0020  
              __activetblptr 0003                       _CCPR1H 0FAA                       _CCPR2H 0FA6  
                     _CCPR3H 0F25                       _CCPR4H 0F21                       _RC0PPS 0E62  
                     _RC4REG 0EE3                       _RE2PPS 0E74                       _RD5PPS 0E6F  
                     _RC7PPS 0E69                       _RD6PPS 0E70                       _RE4PPS 0E76  
                     i2l1761 000A                       i2l1763 001A                       i2l1765 001E  
                     i2l1767 0022                       i2l1769 0026                       _RG6PPS 0E88  
   __end_of_color_click_init 0FDC                       _RX4PPS 0E15                       _TX4REG 0EE4  
           _turnLeft135Delay 003C                ??_Timer0_init 001B                 _CCPTMRS0bits 0FAD  
                     clear_0 0F8C                       clear_1 0F98                       isa$std 0001  
               __pdataCOMRAM 0034                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8            ??_initDCmotorsPWM 001D  
          _buggy_lights_init 0F18                   __accesstop 0060      __end_of__initialization 0F9E  
         ?_buggy_lights_init 001B                ___rparam_used 0001               __pcstackCOMRAM 001B  
        ??_buggy_lights_init 001B          __end_of_Timer0_init 1056    __end_of_buggy_lights_init 0F66  
                 __pbssBANK0 0060            _color_writetoaddr 1056                 _T2CLKCONbits 0FBF  
         ?_color_writetoaddr 001D          ??_color_writetoaddr 001E                      _SP4BRGH 0EE6  
                    _SP4BRGL 0EE5                      i2u46_40 001A                      i2u46_41 0016  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 001D  
  __end_of_color_writetoaddr 1076           _I2C_2_Master_Start 10BC                   _initUSART4 1076  
         _I2C_2_Master_Write 10A6                      __Hparam 0000                      __Lparam 0000  
                _Timer0_init 102E          ?_I2C_2_Master_Start 001B          ?_I2C_2_Master_Write 001B  
               __psmallconst 0E00                      __pcinit 0F66                      __ramtop 0E00  
                    __ptext0 0E98                      __ptext1 1076                      __ptext2 0E08  
                    __ptext3 0FA8                      __ptext4 1056                      __ptext5 10A6  
                    __ptext6 10B2                      __ptext7 10BC                      __ptext8 1006  
                    __ptext9 0FDC                    _T2CONbits 0FBD                    _T2HLTbits 0FBE  
              _RxBufWriteCnt 001A         ??_I2C_2_Master_Start 001C         ??_I2C_2_Master_Write 001C  
       end_of_initialization 0F9E            ?_color_click_init 001B           ??_color_click_init 001F  
                    postdec1 0FE5                      postinc0 0FEE              _initDCmotorsPWM 0E08  
                  _TRISAbits 0F81                    _TRISCbits 0F83                    _TRISDbits 0F84  
                  _TRISEbits 0F85                    _TRISFbits 0F86                    _TRISGbits 0F87  
                  _TRISHbits 0F88     color_writetoaddr@address 001E                  _CCP1CONbits 0FAB  
               _EUSART4RXbuf 0001                 _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7  
                _CCP3CONbits 0F26                  ?_initUSART4 001B                  _CCP4CONbits 0F22  
                 main@motorL 0022                   main@motorR 002B                __pidataCOMRAM 1094  
        start_initialization 0F66                  __end_of_ISR 002C                _TxBufWriteCnt 0018  
           _turnRight90Delay 003E      __end_of_initDCmotorsPWM 0E98                  __pbssCOMRAM 0001  
               ?_Timer0_init 001B                    __pintcode 0008                  __smallconst 0E00  
          _I2C_2_Master_Idle 1006            _I2C_2_Master_Init 0FDC            _I2C_2_Master_Stop 10B2  
               _RxBufReadCnt 0019           ?_I2C_2_Master_Idle 001B           ?_I2C_2_Master_Init 001B  
         ?_I2C_2_Master_Stop 001B                _headbuttDelay 0036     initDCmotorsPWM@PWMperiod 001B  
                  _rampDelay 0045          ??_I2C_2_Master_Idle 001B          ??_I2C_2_Master_Init 001B  
                   _LATAbits 0F79          ??_I2C_2_Master_Stop 001C                     _LATCbits 0F7B  
                   _LATDbits 0F7C                     _LATEbits 0F7D                     _LATFbits 0F7E  
                   _LATGbits 0F7F                     _LATHbits 0F80                     _PIE0bits 0E29  
                   _PIE4bits 0E2D                     _PIR0bits 0E33                     _PIR4bits 0E37  
           ?_initDCmotorsPWM 001B                     _SSP2CON2 0EDA                     _SSP2STAT 0ED8  
  __end_of_I2C_2_Master_Idle 102E    __end_of_I2C_2_Master_Init 1006    __end_of_I2C_2_Master_Stop 10BC  
I2C_2_Master_Write@data_byte 001C                 _TxBufReadCnt 0017                    copy_data0 0F7A  
               ??_initUSART4 001B                     __Hrparam 0000                     __Lrparam 0000  
                 _ANSELDbits 0EA7                   _T0CON0bits 0FD5                   _T0CON1bits 0FD6  
         __end_of_initUSART4 1094                     __ptext10 0F18                     __ptext11 102E  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                     int$flags 0046                   _INTCONbits 0FF2  
                   intlevel2 0000                 _topGearRight 0043             _color_click_init 0FA8  
                _topGearLeft 0044                   _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C  
                _timer_count 0015                   _TX4STAbits 0EE8  
