

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 06 13:13:14 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 18/08/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   001A54                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _manoeuvre_pointer
   103   001A54  A4                 	db	low _trail_manoeuvre
   104   001A55  01                 	db	high _trail_manoeuvre
   105                           
   106                           ;initializer for _timer_low_pointer
   107   001A56  B8                 	db	low _trail_timer_low
   108   001A57  01                 	db	high _trail_timer_low
   109                           
   110                           ;initializer for _timer_high_pointer
   111   001A58  CC                 	db	low _trail_timer_high
   112   001A59  01                 	db	high _trail_timer_high
   113                           
   114                           ;initializer for _turningGear
   115   001A5A  2A                 	db	42
   116                           
   117                           ;initializer for _topGearRight
   118   001A5B  14                 	db	20
   119                           
   120                           ;initializer for _topGearLeft
   121   001A5C  14                 	db	20
   122                           
   123                           ;initializer for _rampDelay
   124   001A5D  08                 	db	8
   125                           
   126                           	psect	idataBANK0
   127   001A22                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _squareDelay
   131   001A22  012C               	dw	300
   132                           
   133                           ;initializer for _headbuttDelay
   134   001A24  0046               	dw	70
   135                           
   136                           ;initializer for _turn180Delay
   137   001A26  01FE               	dw	510
   138                           
   139                           ;initializer for _turnRight135Delay
   140   001A28  012C               	dw	300
   141                           
   142                           ;initializer for _turnLeft135Delay
   143   001A2A  012C               	dw	300
   144                           
   145                           ;initializer for _turnRight90Delay
   146   001A2C  00AF               	dw	175
   147                           
   148                           ;initializer for _turnLeft90Delay
   149   001A2E  00AF               	dw	175
   150   000000                     _TMR0H	set	4052
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _LATEbits	set	3965
   155   000000                     _TRISEbits	set	3973
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISGbits	set	3975
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATHbits	set	3968
   160   000000                     _TRISFbits	set	3974
   161   000000                     _TRISHbits	set	3976
   162   000000                     _SSP2CON2bits	set	3802
   163   000000                     _RX4PPS	set	3605
   164   000000                     _SSP2CLKPPS	set	3612
   165   000000                     _SSP2DATPPS	set	3613
   166   000000                     _RC7PPS	set	3689
   167   000000                     _RE2PPS	set	3700
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATDbits	set	3964
   170   000000                     _TRISDbits	set	3972
   171   000000                     _T2PR	set	4028
   172   000000                     _T2CONbits	set	4029
   173   000000                     _CCPR2H	set	4006
   174   000000                     _CCPR1H	set	4010
   175   000000                     _TRISCbits	set	3971
   176   000000                     _TRISAbits	set	3969
   177   000000                     _LATCbits	set	3963
   178   000000                     _RE4PPS	set	3702
   179   000000                     _RG6PPS	set	3720
   180   000000                     _RD5PPS	set	3695
   181   000000                     _ANSELDbits	set	3751
   182   000000                     _SSP2ADD	set	3798
   183   000000                     _SSP2CON1bits	set	3801
   184   000000                     _CCPR4H	set	3873
   185   000000                     _CCPR3H	set	3877
   186   000000                     _TMR0L	set	4051
   187   000000                     _T0CON0bits	set	4053
   188   000000                     _T0CON1bits	set	4054
   189   000000                     _T2CLKCONbits	set	4031
   190   000000                     _T2HLTbits	set	4030
   191   000000                     _CCP1CONbits	set	4011
   192   000000                     _CCPTMRS0bits	set	4013
   193   000000                     _CCP2CONbits	set	4007
   194   000000                     _CCP3CONbits	set	3878
   195   000000                     _CCP4CONbits	set	3874
   196   000000                     _RC4REG	set	3811
   197   000000                     _SP4BRGL	set	3813
   198   000000                     _TX4STAbits	set	3816
   199   000000                     _BAUD4CONbits	set	3817
   200   000000                     _SSP2CON2	set	3802
   201   000000                     _SSP2STAT	set	3800
   202   000000                     _ANSELFbits	set	3764
   203   000000                     _SSP2BUF	set	3797
   204   000000                     _PIE0bits	set	3625
   205   000000                     _PIE4bits	set	3629
   206   000000                     _PIR4bits	set	3639
   207   000000                     _RC0PPS	set	3682
   208   000000                     _RD6PPS	set	3696
   209   000000                     _PIR0bits	set	3635
   210   000000                     _INTCONbits	set	4082
   211                           
   212                           	psect	smallconst
   213   000E00                     __psmallconst:
   214                           	callstack 0
   215   000E00  00                 	db	0
   216   000E01                     STR_5:
   217                           
   218                           ; BSR set to: 14
   219   000E01  25                 	db	37
   220   000E02  64                 	db	100	;'d'
   221   000E03  20                 	db	32
   222   000E04  25                 	db	37
   223   000E05  64                 	db	100	;'d'
   224   000E06  20                 	db	32
   225   000E07  25                 	db	37
   226   000E08  64                 	db	100	;'d'
   227   000E09  20                 	db	32
   228   000E0A  25                 	db	37
   229   000E0B  64                 	db	100	;'d'
   230   000E0C  20                 	db	32
   231   000E0D  0D                 	db	13
   232   000E0E  00                 	db	0
   233   000E0F                     STR_2:
   234                           
   235                           ; BSR set to: 14
   236   000E0F  25                 	db	37
   237   000E10  64                 	db	100	;'d'
   238   000E11  20                 	db	32
   239   000E12  00                 	db	0
   240   000E13  00                 	db	0	; dummy byte at the end
   241   000000                     
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245   0013A6                     __pcinit:
   246                           	callstack 0
   247   0013A6                     start_initialization:
   248                           	callstack 0
   249   0013A6                     __initialization:
   250                           	callstack 0
   251                           
   252                           ; Initialize objects allocated to BANK0 (14 bytes)
   253                           ; load TBLPTR registers with __pidataBANK0
   254   0013A6  0E22               	movlw	low __pidataBANK0
   255   0013A8  6EF6               	movwf	tblptrl,c
   256   0013AA  0E1A               	movlw	high __pidataBANK0
   257   0013AC  6EF7               	movwf	tblptrh,c
   258   0013AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   259   0013B0  6EF8               	movwf	tblptru,c
   260   0013B2  EE00  F0DD         	lfsr	0,__pdataBANK0
   261   0013B6  EE10 F00E          	lfsr	1,14
   262   0013BA                     copy_data0:
   263   0013BA  0009               	tblrd		*+
   264   0013BC  CFF5 FFEE          	movff	tablat,postinc0
   265   0013C0  50E5               	movf	postdec1,w,c
   266   0013C2  50E1               	movf	fsr1l,w,c
   267   0013C4  E1FA               	bnz	copy_data0
   268                           
   269                           ; Initialize objects allocated to COMRAM (10 bytes)
   270                           ; load TBLPTR registers with __pidataCOMRAM
   271   0013C6  0E54               	movlw	low __pidataCOMRAM
   272   0013C8  6EF6               	movwf	tblptrl,c
   273   0013CA  0E1A               	movlw	high __pidataCOMRAM
   274   0013CC  6EF7               	movwf	tblptrh,c
   275   0013CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   276   0013D0  6EF8               	movwf	tblptru,c
   277   0013D2  EE00  F055         	lfsr	0,__pdataCOMRAM
   278   0013D6  EE10 F00A          	lfsr	1,10
   279   0013DA                     copy_data1:
   280   0013DA  0009               	tblrd		*+
   281   0013DC  CFF5 FFEE          	movff	tablat,postinc0
   282   0013E0  50E5               	movf	postdec1,w,c
   283   0013E2  50E1               	movf	fsr1l,w,c
   284   0013E4  E1FA               	bnz	copy_data1
   285                           
   286                           ; Clear objects allocated to BANK2 (60 bytes)
   287   0013E6  EE02  F000         	lfsr	0,__pbssBANK2
   288   0013EA  0E3C               	movlw	60
   289   0013EC                     clear_0:
   290   0013EC  6AEE               	clrf	postinc0,c
   291   0013EE  06E8               	decf	wreg,f,c
   292   0013F0  E1FD               	bnz	clear_0
   293                           
   294                           ; Clear objects allocated to BANK1 (60 bytes)
   295   0013F2  EE01  F0A4         	lfsr	0,__pbssBANK1
   296   0013F6  0E3C               	movlw	60
   297   0013F8                     clear_1:
   298   0013F8  6AEE               	clrf	postinc0,c
   299   0013FA  06E8               	decf	wreg,f,c
   300   0013FC  E1FD               	bnz	clear_1
   301                           
   302                           ; Clear objects allocated to BANK0 (56 bytes)
   303   0013FE  EE00  F0A5         	lfsr	0,__pbssBANK0
   304   001402  0E38               	movlw	56
   305   001404                     clear_2:
   306   001404  6AEE               	clrf	postinc0,c
   307   001406  06E8               	decf	wreg,f,c
   308   001408  E1FD               	bnz	clear_2
   309                           
   310                           ; Clear objects allocated to COMRAM (10 bytes)
   311   00140A  EE00  F04B         	lfsr	0,__pbssCOMRAM
   312   00140E  0E0A               	movlw	10
   313   001410                     clear_3:
   314   001410  6AEE               	clrf	postinc0,c
   315   001412  06E8               	decf	wreg,f,c
   316   001414  E1FD               	bnz	clear_3
   317   001416                     end_of_initialization:
   318                           	callstack 0
   319   001416                     __end_of__initialization:
   320                           	callstack 0
   321   001416  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322   001418  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323   00141A  0100               	movlb	0
   324   00141C  EF05  F008         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327   00004B                     __pbssCOMRAM:
   328                           	callstack 0
   329   00004B                     _nout:
   330                           	callstack 0
   331   00004B                     	ds	2
   332   00004D                     _flags:
   333                           	callstack 0
   334   00004D                     	ds	1
   335   00004E                     _manoeuvre_count:
   336                           	callstack 0
   337   00004E                     	ds	1
   338   00004F                     _return_flag:
   339                           	callstack 0
   340   00004F                     	ds	1
   341   000050                     _returning:
   342                           	callstack 0
   343   000050                     	ds	1
   344   000051                     _TxBufReadCnt:
   345                           	callstack 0
   346   000051                     	ds	1
   347   000052                     _TxBufWriteCnt:
   348                           	callstack 0
   349   000052                     	ds	1
   350   000053                     _RxBufReadCnt:
   351                           	callstack 0
   352   000053                     	ds	1
   353   000054                     _RxBufWriteCnt:
   354                           	callstack 0
   355   000054                     	ds	1
   356                           
   357                           	psect	dataCOMRAM
   358   000055                     __pdataCOMRAM:
   359                           	callstack 0
   360   000055                     _manoeuvre_pointer:
   361                           	callstack 0
   362   000055                     	ds	2
   363   000057                     _timer_low_pointer:
   364                           	callstack 0
   365   000057                     	ds	2
   366   000059                     _timer_high_pointer:
   367                           	callstack 0
   368   000059                     	ds	2
   369   00005B                     _turningGear:
   370                           	callstack 0
   371   00005B                     	ds	1
   372   00005C                     _topGearRight:
   373                           	callstack 0
   374   00005C                     	ds	1
   375   00005D                     _topGearLeft:
   376                           	callstack 0
   377   00005D                     	ds	1
   378   00005E                     _rampDelay:
   379                           	callstack 0
   380   00005E                     	ds	1
   381                           
   382                           	psect	bssBANK0
   383   0000A5                     __pbssBANK0:
   384                           	callstack 0
   385   0000A5                     _dbuf:
   386                           	callstack 0
   387   0000A5                     	ds	32
   388   0000C5                     _EUSART4RXbuf:
   389                           	callstack 0
   390   0000C5                     	ds	20
   391   0000D9                     _width:
   392                           	callstack 0
   393   0000D9                     	ds	2
   394   0000DB                     _prec:
   395                           	callstack 0
   396   0000DB                     	ds	2
   397                           
   398                           	psect	dataBANK0
   399   0000DD                     __pdataBANK0:
   400                           	callstack 0
   401   0000DD                     _squareDelay:
   402                           	callstack 0
   403   0000DD                     	ds	2
   404   0000DF                     _headbuttDelay:
   405                           	callstack 0
   406   0000DF                     	ds	2
   407   0000E1                     _turn180Delay:
   408                           	callstack 0
   409   0000E1                     	ds	2
   410   0000E3                     _turnRight135Delay:
   411                           	callstack 0
   412   0000E3                     	ds	2
   413   0000E5                     _turnLeft135Delay:
   414                           	callstack 0
   415   0000E5                     	ds	2
   416   0000E7                     _turnRight90Delay:
   417                           	callstack 0
   418   0000E7                     	ds	2
   419   0000E9                     _turnLeft90Delay:
   420                           	callstack 0
   421   0000E9                     	ds	2
   422                           
   423                           	psect	bssBANK1
   424   0001A4                     __pbssBANK1:
   425                           	callstack 0
   426   0001A4                     _trail_manoeuvre:
   427                           	callstack 0
   428   0001A4                     	ds	20
   429   0001B8                     _trail_timer_low:
   430                           	callstack 0
   431   0001B8                     	ds	20
   432   0001CC                     _trail_timer_high:
   433                           	callstack 0
   434   0001CC                     	ds	20
   435                           
   436                           	psect	bssBANK2
   437   000200                     __pbssBANK2:
   438                           	callstack 0
   439   000200                     _EUSART4TXbuf:
   440                           	callstack 0
   441   000200                     	ds	60
   442                           
   443                           	psect	cstackBANK1
   444   000100                     __pcstackBANK1:
   445                           	callstack 0
   446   000100                     sendArrayCharSerial4@tempStr:
   447                           	callstack 0
   448                           
   449                           ; 161 bytes @ 0x0
   450   000100                     	ds	161
   451   0001A1                     sendArrayCharSerial4@index:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xA1
   455   0001A1                     	ds	1
   456   0001A2                     sendArrayCharSerial4@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xA2
   460   0001A2                     	ds	2
   461                           
   462                           	psect	cstackBANK0
   463   000060                     __pcstackBANK0:
   464                           	callstack 0
   465   000060                     sendRGBCvalSerial4@tempStr:
   466                           	callstack 0
   467                           
   468                           ; 41 bytes @ 0x0
   469   000060                     	ds	41
   470   000089                     main@timerH:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x29
   474   000089                     	ds	1
   475   00008A                     main@timerL:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x2A
   479   00008A                     	ds	1
   480   00008B                     main@measured_colour:
   481                           	callstack 0
   482                           
   483                           ; 8 bytes @ 0x2B
   484   00008B                     	ds	8
   485   000093                     main@motorL:
   486                           	callstack 0
   487                           
   488                           ; 9 bytes @ 0x33
   489   000093                     	ds	9
   490   00009C                     main@motorR:
   491                           	callstack 0
   492                           
   493                           ; 9 bytes @ 0x3C
   494   00009C                     	ds	9
   495                           
   496                           	psect	cstackCOMRAM
   497   000001                     __pcstackCOMRAM:
   498                           	callstack 0
   499   000001                     ??_I2C_2_Master_Idle:
   500   000001                     ?___awdiv:
   501                           	callstack 0
   502   000001                     ?___awmod:
   503                           	callstack 0
   504   000001                     sendCharSerial4@charToSend:
   505                           	callstack 0
   506   000001                     read_timer@tH:
   507                           	callstack 0
   508   000001                     write_timer@tL:
   509                           	callstack 0
   510   000001                     write_trail@tL:
   511                           	callstack 0
   512   000001                     initDCmotorsPWM@PWMperiod:
   513                           	callstack 0
   514   000001                     ___awdiv@dividend:
   515                           	callstack 0
   516   000001                     ___awmod@dividend:
   517                           	callstack 0
   518   000001                     fputc@c:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x0
   522   000001                     	ds	1
   523   000002                     ??_I2C_2_Master_Read:
   524   000002                     I2C_2_Master_Write@data_byte:
   525                           	callstack 0
   526   000002                     read_timer@tL:
   527                           	callstack 0
   528   000002                     write_timer@tH:
   529                           	callstack 0
   530   000002                     write_trail@man:
   531                           	callstack 0
   532   000002                     sendStringSerial4@string:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x1
   536   000002                     	ds	1
   537   000003                     color_writetoaddr@value:
   538                           	callstack 0
   539   000003                     I2C_2_Master_Read@ack:
   540                           	callstack 0
   541   000003                     write_trail@tH:
   542                           	callstack 0
   543   000003                     fputc@fp:
   544                           	callstack 0
   545   000003                     ___awdiv@divisor:
   546                           	callstack 0
   547   000003                     ___awmod@divisor:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x2
   551   000003                     	ds	1
   552   000004                     ??_fputc:
   553   000004                     color_writetoaddr@address:
   554                           	callstack 0
   555   000004                     I2C_2_Master_Read@tmp:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x3
   559   000004                     	ds	1
   560   000005                     ??_color_click_init:
   561   000005                     ?_color_read_Red:
   562                           	callstack 0
   563   000005                     ?_color_read_Blue:
   564                           	callstack 0
   565   000005                     ?_color_read_Green:
   566                           	callstack 0
   567   000005                     ?_color_read_Clear:
   568                           	callstack 0
   569   000005                     ___awdiv@counter:
   570                           	callstack 0
   571   000005                     ___awmod@counter:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x4
   575   000005                     	ds	1
   576   000006                     ___awdiv@sign:
   577                           	callstack 0
   578   000006                     ___awmod@sign:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x5
   582   000006                     	ds	1
   583   000007                     ??_color_read_Red:
   584   000007                     ??_color_read_Blue:
   585   000007                     ??_color_read_Green:
   586   000007                     ??_color_read_Clear:
   587   000007                     ?_abs:
   588                           	callstack 0
   589   000007                     ___awdiv@quotient:
   590                           	callstack 0
   591   000007                     abs@a:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x6
   595   000007                     	ds	2
   596   000009                     ??_abs:
   597                           
   598                           ; 1 bytes @ 0x8
   599   000009                     	ds	1
   600   00000A                     color_read_Red@tmp:
   601                           	callstack 0
   602   00000A                     color_read_Blue@tmp:
   603                           	callstack 0
   604   00000A                     color_read_Green@tmp:
   605                           	callstack 0
   606   00000A                     color_read_Clear@tmp:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x9
   610   00000A                     	ds	1
   611   00000B                     ?_vfpfcnvrt:
   612                           	callstack 0
   613   00000B                     vfpfcnvrt@fp:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0xA
   617   00000B                     	ds	1
   618   00000C                     getRGBCval@p:
   619                           	callstack 0
   620   00000C                     vfpfcnvrt@fmt:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0xB
   624   00000C                     	ds	1
   625   00000D                     wait_for_wall@p:
   626                           	callstack 0
   627   00000D                     vfpfcnvrt@ap:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xC
   631   00000D                     	ds	1
   632   00000E                     ??_wait_for_wall:
   633   00000E                     ??_vfpfcnvrt:
   634                           
   635                           ; 1 bytes @ 0xD
   636   00000E                     	ds	1
   637   00000F                     vfpfcnvrt@done:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0xE
   641   00000F                     	ds	1
   642   000010                     vfpfcnvrt@cnt:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xF
   646   000010                     	ds	2
   647   000012                     vfpfcnvrt@cp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x11
   651   000012                     	ds	1
   652   000013                     vfpfcnvrt@convarg:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x12
   656   000013                     	ds	4
   657   000017                     vfpfcnvrt@c:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x16
   661   000017                     	ds	1
   662   000018                     ?_vfprintf:
   663                           	callstack 0
   664   000018                     vfprintf@fp:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x17
   668   000018                     	ds	1
   669   000019                     vfprintf@fmt:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x18
   673   000019                     	ds	1
   674   00001A                     vfprintf@ap:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x19
   678   00001A                     	ds	1
   679   00001B                     vfprintf@cfmt:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x1A
   683   00001B                     	ds	1
   684   00001C                     ?_sprintf:
   685                           	callstack 0
   686   00001C                     sprintf@s:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x1B
   690   00001C                     	ds	2
   691   00001E                     sprintf@fmt:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x1D
   695   00001E                     	ds	9
   696   000027                     sprintf@ret:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x26
   700   000027                     	ds	2
   701   000029                     sprintf@ap:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x28
   705   000029                     	ds	1
   706   00002A                     sprintf@f:
   707                           	callstack 0
   708                           
   709                           ; 12 bytes @ 0x29
   710   00002A                     	ds	12
   711   000036                     sendRGBCvalSerial4@col_val:
   712                           	callstack 0
   713   000036                     sendIntSerial4@integer:
   714                           	callstack 0
   715   000036                     sendArrayCharSerial4@arr:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x35
   719   000036                     	ds	1
   720   000037                     
   721                           ; 1 bytes @ 0x36
   722   000037                     	ds	1
   723   000038                     ??_sendArrayCharSerial4:
   724   000038                     sendIntSerial4@string:
   725                           	callstack 0
   726                           
   727                           ; 17 bytes @ 0x37
   728   000038                     	ds	17
   729   000049                     ??_main:
   730                           
   731                           ; 1 bytes @ 0x48
   732   000049                     	ds	2
   733                           
   734 ;;
   735 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   736 ;;
   737 ;; *************** function _main *****************
   738 ;; Defined at:
   739 ;;		line 27 in file "main.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  motorR          9   60[BANK0 ] struct DC_motor
   744 ;;  motorL          9   51[BANK0 ] struct DC_motor
   745 ;;  measured_col    8   43[BANK0 ] struct RGBC_val
   746 ;;  PWMcycle        2    0        unsigned int 
   747 ;;  timerL          1   42[BANK0 ] unsigned char 
   748 ;;  timerH          1   41[BANK0 ] unsigned char 
   749 ;;  mann            1    0        unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   762 ;;      Totals:         2      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   763 ;;Total ram usage:       30 bytes
   764 ;; Hardware stack levels required when called: 8
   765 ;; This function calls:
   766 ;;		_Timer0_init
   767 ;;		_buggy_lights_init
   768 ;;		_color_click_init
   769 ;;		_getRGBCval
   770 ;;		_initDCmotorsPWM
   771 ;;		_initUSART4
   772 ;;		_read_timer
   773 ;;		_reset_timer
   774 ;;		_sendRGBCvalSerial4
   775 ;;		_test_serial
   776 ;;		_wait_for_wall
   777 ;;		_write_trail
   778 ;; This function is called by:
   779 ;;		Startup code after reset
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text0
   784   00100A                     __ptext0:
   785                           	callstack 0
   786   00100A                     _main:
   787                           	callstack 23
   788   00100A                     
   789                           ;main.c: 31:     struct DC_motor motorL, motorR;;main.c: 33:     motorL.power = 0;
   790   00100A  0E00               	movlw	0
   791   00100C  0100               	movlb	0	; () banked
   792   00100E  6F93               	movwf	main@motorL& (0+255),b
   793                           
   794                           ;main.c: 34:     motorL.direction = 1;
   795   001010  0E01               	movlw	1
   796   001012  6F94               	movwf	(main@motorL+1)& (0+255),b
   797                           
   798                           ;main.c: 35:     motorL.brakemode = 1;
   799   001014  0E01               	movlw	1
   800   001016  6F95               	movwf	(main@motorL+2)& (0+255),b
   801   001018                     
   802                           ; BSR set to: 0
   803                           ;main.c: 36:     motorL.PWMperiod = PWMcycle;
   804   001018  0E00               	movlw	0
   805   00101A  6F97               	movwf	(main@motorL+4)& (0+255),b
   806   00101C  0E63               	movlw	99
   807   00101E  6F96               	movwf	(main@motorL+3)& (0+255),b
   808   001020                     
   809                           ; BSR set to: 0
   810                           ;main.c: 37:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   811   001020  0EAA               	movlw	170
   812   001022  6F98               	movwf	(main@motorL+5)& (0+255),b
   813   001024  0E0F               	movlw	15
   814   001026  6F99               	movwf	(main@motorL+6)& (0+255),b
   815   001028                     
   816                           ; BSR set to: 0
   817                           ;main.c: 38:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   818   001028  0EA6               	movlw	166
   819   00102A  6F9A               	movwf	(main@motorL+7)& (0+255),b
   820   00102C  0E0F               	movlw	15
   821   00102E  6F9B               	movwf	(main@motorL+8)& (0+255),b
   822                           
   823                           ;main.c: 40:     motorR.power = 0;
   824   001030  0E00               	movlw	0
   825   001032  6F9C               	movwf	main@motorR& (0+255),b
   826                           
   827                           ;main.c: 41:     motorR.direction = 1;
   828   001034  0E01               	movlw	1
   829   001036  6F9D               	movwf	(main@motorR+1)& (0+255),b
   830                           
   831                           ;main.c: 42:     motorR.brakemode = 1;
   832   001038  0E01               	movlw	1
   833   00103A  6F9E               	movwf	(main@motorR+2)& (0+255),b
   834   00103C                     
   835                           ; BSR set to: 0
   836                           ;main.c: 43:     motorR.PWMperiod = PWMcycle;
   837   00103C  0E00               	movlw	0
   838   00103E  6FA0               	movwf	(main@motorR+4)& (0+255),b
   839   001040  0E63               	movlw	99
   840   001042  6F9F               	movwf	(main@motorR+3)& (0+255),b
   841   001044                     
   842                           ; BSR set to: 0
   843                           ;main.c: 44:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   844   001044  0E25               	movlw	37
   845   001046  6FA1               	movwf	(main@motorR+5)& (0+255),b
   846   001048  0E0F               	movlw	15
   847   00104A  6FA2               	movwf	(main@motorR+6)& (0+255),b
   848   00104C                     
   849                           ; BSR set to: 0
   850                           ;main.c: 45:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   851   00104C  0E21               	movlw	33
   852   00104E  6FA3               	movwf	(main@motorR+7)& (0+255),b
   853   001050  0E0F               	movlw	15
   854   001052  6FA4               	movwf	(main@motorR+8)& (0+255),b
   855   001054                     
   856                           ; BSR set to: 0
   857                           ;main.c: 47:     initDCmotorsPWM(PWMcycle);
   858   001054  0E00               	movlw	0
   859   001056  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   860   001058  0E63               	movlw	99
   861   00105A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   862   00105C  EC8B  F009         	call	_initDCmotorsPWM	;wreg free
   863                           
   864                           ;main.c: 48:     buggy_lights_init();
   865   001060  EC78  F00C         	call	_buggy_lights_init	;wreg free
   866   001064                     
   867                           ;main.c: 49:     color_click_init();
   868   001064  EC5E  F00C         	call	_color_click_init	;wreg free
   869   001068                     
   870                           ;main.c: 50:     initUSART4();
   871   001068  ECEB  F00C         	call	_initUSART4	;wreg free
   872   00106C                     
   873                           ;main.c: 51:     Timer0_init();
   874   00106C  ECB8  F00C         	call	_Timer0_init	;wreg free
   875   001070                     
   876                           ;main.c: 55:         TRISDbits.TRISD7 = 0;
   877   001070  9E84               	bcf	132,7,c	;volatile
   878   001072                     
   879                           ;main.c: 56:         TRISHbits.TRISH3 = 0;
   880   001072  9688               	bcf	136,3,c	;volatile
   881   001074                     
   882                           ;main.c: 58:         LATDbits.LATD7 = 0;
   883   001074  9E7C               	bcf	124,7,c	;volatile
   884   001076                     
   885                           ;main.c: 59:         LATHbits.LATH3 = 0;
   886   001076  9680               	bcf	128,3,c	;volatile
   887   001078                     
   888                           ;main.c: 63:         TRISFbits.TRISF2 = 1;
   889   001078  8486               	bsf	134,2,c	;volatile
   890   00107A                     
   891                           ;main.c: 64:         TRISFbits.TRISF3 = 1;
   892   00107A  8686               	bsf	134,3,c	;volatile
   893   00107C                     
   894                           ;main.c: 66:         ANSELFbits.ANSELF2 = 0;
   895   00107C  010E               	movlb	14	; () banked
   896   00107E  95B4               	bcf	180,2,b	;volatile
   897   001080                     
   898                           ; BSR set to: 14
   899                           ;main.c: 67:         ANSELFbits.ANSELF3 = 0;
   900   001080  97B4               	bcf	180,3,b	;volatile
   901   001082                     
   902                           ; BSR set to: 14
   903                           ;main.c: 73:     unsigned char timerH = 0;
   904   001082  0E00               	movlw	0
   905   001084  0100               	movlb	0	; () banked
   906   001086  6F89               	movwf	main@timerH& (0+255),b
   907   001088                     
   908                           ; BSR set to: 0
   909                           ;main.c: 74:     unsigned char timerL = 0;
   910   001088  0E00               	movlw	0
   911   00108A  6F8A               	movwf	main@timerL& (0+255),b
   912   00108C                     
   913                           ; BSR set to: 0
   914                           ;main.c: 76:     reset_timer();
   915   00108C  EC1E  F00D         	call	_reset_timer	;wreg free
   916   001090                     
   917                           ;main.c: 78:     wait_for_wall(&measured_colour);
   918   001090  0E8B               	movlw	low main@measured_colour
   919   001092  6E0D               	movwf	wait_for_wall@p^0,c
   920   001094  EC9F  F00B         	call	_wait_for_wall	;wreg free
   921   001098                     
   922                           ;main.c: 79:     read_timer(&timerH, &timerL);
   923   001098  0E89               	movlw	low main@timerH
   924   00109A  6E01               	movwf	read_timer@tH^0,c
   925   00109C  0E8A               	movlw	low main@timerL
   926   00109E  6E02               	movwf	read_timer@tL^0,c
   927   0010A0  EC06  F00D         	call	_read_timer	;wreg free
   928   0010A4                     
   929                           ;main.c: 84:     write_trail(timerH, timerL, mann);
   930   0010A4  C08A  F001         	movff	main@timerL,write_trail@tL
   931   0010A8  0E00               	movlw	0
   932   0010AA  6E02               	movwf	write_trail@man^0,c
   933   0010AC  0100               	movlb	0	; () banked
   934   0010AE  5189               	movf	main@timerH& (0+255),w,b
   935   0010B0  EC29  F00C         	call	_write_trail
   936   0010B4                     l3793:
   937                           
   938                           ;main.c: 87:         test_serial();
   939   0010B4  EC0C  F00C         	call	_test_serial	;wreg free
   940   0010B8                     
   941                           ;main.c: 88:         getRGBCval(&measured_colour);
   942   0010B8  0E8B               	movlw	low main@measured_colour
   943   0010BA  6E0C               	movwf	getRGBCval@p^0,c
   944   0010BC  ECAB  F00A         	call	_getRGBCval	;wreg free
   945   0010C0                     
   946                           ;main.c: 89:         sendRGBCvalSerial4(&measured_colour);
   947   0010C0  0E8B               	movlw	low main@measured_colour
   948   0010C2  6E36               	movwf	sendRGBCvalSerial4@col_val^0,c
   949   0010C4  EC7C  F00A         	call	_sendRGBCvalSerial4	;wreg free
   950   0010C8                     
   951                           ;main.c: 90:         _delay((unsigned long)((200)*(64000000/4000.0)));
   952   0010C8  0E11               	movlw	17
   953   0010CA  6E4A               	movwf	(??_main+1)^0,c
   954   0010CC  0E3C               	movlw	60
   955   0010CE  6E49               	movwf	??_main^0,c
   956   0010D0  0ECB               	movlw	203
   957   0010D2                     u2717:
   958   0010D2  2EE8               	decfsz	wreg,f,c
   959   0010D4  D7FE               	bra	u2717
   960   0010D6  2E49               	decfsz	??_main^0,f,c
   961   0010D8  D7FC               	bra	u2717
   962   0010DA  2E4A               	decfsz	(??_main+1)^0,f,c
   963   0010DC  D7FA               	bra	u2717
   964   0010DE  0000               	nop	
   965   0010E0  EF5A  F008         	goto	l3793
   966   0010E4  EF1A  F000         	goto	start
   967   0010E8                     __end_of_main:
   968                           	callstack 0
   969                           
   970 ;; *************** function _write_trail *****************
   971 ;; Defined at:
   972 ;;		line 62 in file "timers.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  tH              1    wreg     unsigned char 
   975 ;;  tL              1    0[COMRAM] unsigned char 
   976 ;;  man             1    1[COMRAM] unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  tH              1    2[COMRAM] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   992 ;;Total ram usage:        3 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 1
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text1
  1003   001852                     __ptext1:
  1004                           	callstack 0
  1005   001852                     _write_trail:
  1006                           	callstack 29
  1007                           
  1008                           ;incstack = 0
  1009                           ;write_trail@tH stored from wreg
  1010   001852  6E03               	movwf	write_trail@tH^0,c
  1011   001854                     
  1012                           ;timers.c: 62: void write_trail(unsigned char tH, unsigned char tL, unsigned char man);t
      +                          imers.c: 63: {;timers.c: 64:     *timer_high_pointer = tH;
  1013   001854  C059  FFD9         	movff	_timer_high_pointer,fsr2l
  1014   001858  C05A  FFDA         	movff	_timer_high_pointer+1,fsr2h
  1015   00185C  C003  FFDF         	movff	write_trail@tH,indf2
  1016   001860                     
  1017                           ;timers.c: 65:     *timer_low_pointer = tL;
  1018   001860  C057  FFD9         	movff	_timer_low_pointer,fsr2l
  1019   001864  C058  FFDA         	movff	_timer_low_pointer+1,fsr2h
  1020   001868  C001  FFDF         	movff	write_trail@tL,indf2
  1021   00186C                     
  1022                           ;timers.c: 66:     *manoeuvre_pointer = man;
  1023   00186C  C055  FFD9         	movff	_manoeuvre_pointer,fsr2l
  1024   001870  C056  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  1025   001874  C002  FFDF         	movff	write_trail@man,indf2
  1026   001878                     
  1027                           ;timers.c: 68:     timer_high_pointer ++;
  1028   001878  4A59               	infsnz	_timer_high_pointer^0,f,c
  1029   00187A  2A5A               	incf	(_timer_high_pointer+1)^0,f,c
  1030   00187C                     
  1031                           ;timers.c: 69:     timer_low_pointer ++;
  1032   00187C  4A57               	infsnz	_timer_low_pointer^0,f,c
  1033   00187E  2A58               	incf	(_timer_low_pointer+1)^0,f,c
  1034   001880                     
  1035                           ;timers.c: 70:     manoeuvre_pointer ++;
  1036   001880  4A55               	infsnz	_manoeuvre_pointer^0,f,c
  1037   001882  2A56               	incf	(_manoeuvre_pointer+1)^0,f,c
  1038   001884                     
  1039                           ;timers.c: 72:     manoeuvre_count ++;
  1040   001884  2A4E               	incf	_manoeuvre_count^0,f,c
  1041   001886  0012               	return		;funcret
  1042   001888                     __end_of_write_trail:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _wait_for_wall *****************
  1046 ;; Defined at:
  1047 ;;		line 93 in file "color.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  p               1   12[COMRAM] PTR struct RGBC_val
  1050 ;;		 -> main@measured_colour(8), 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1062 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;Total ram usage:        3 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 5
  1069 ;; This function calls:
  1070 ;;		_getRGBCval
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text2
  1077   00173E                     __ptext2:
  1078                           	callstack 0
  1079   00173E                     _wait_for_wall:
  1080                           	callstack 25
  1081   00173E                     l84:
  1082   00173E                     
  1083                           ;color.c: 96:         getRGBCval(p);
  1084   00173E  C00D  F00C         	movff	wait_for_wall@p,getRGBCval@p
  1085   001742  ECAB  F00A         	call	_getRGBCval	;wreg free
  1086   001746                     
  1087                           ;color.c: 97:         if (p->C < 300) {break;}
  1088   001746  500D               	movf	wait_for_wall@p^0,w,c
  1089   001748  6ED9               	movwf	fsr2l,c
  1090   00174A  6ADA               	clrf	fsr2h,c
  1091   00174C  0E06               	movlw	6
  1092   00174E  26D9               	addwf	fsr2l,f,c
  1093   001750  0E2C               	movlw	44
  1094   001752  5CDE               	subwf	postinc2,w,c
  1095   001754  0E01               	movlw	1
  1096   001756  58DE               	subwfb	postinc2,w,c
  1097   001758  B0D8               	btfsc	status,0,c
  1098   00175A  EFB1  F00B         	goto	u1521
  1099   00175E  EFB3  F00B         	goto	u1520
  1100   001762                     u1521:
  1101   001762  EF9F  F00B         	goto	l84
  1102   001766                     u1520:
  1103   001766                     
  1104                           ;color.c: 99:     LATDbits.LATD7 = !LATDbits.LATD7;
  1105   001766  AE7C               	btfss	124,7,c	;volatile
  1106   001768  EFB8  F00B         	goto	u1531
  1107   00176C  EFBC  F00B         	goto	u1530
  1108   001770                     u1531:
  1109   001770  6A0E               	clrf	??_wait_for_wall^0,c
  1110   001772  2A0E               	incf	??_wait_for_wall^0,f,c
  1111   001774  EFBD  F00B         	goto	u1548
  1112   001778                     u1530:
  1113   001778  6A0E               	clrf	??_wait_for_wall^0,c
  1114   00177A                     u1548:
  1115   00177A  320E               	rrcf	??_wait_for_wall^0,f,c
  1116   00177C  320E               	rrcf	??_wait_for_wall^0,f,c
  1117   00177E  507C               	movf	124,w,c	;volatile
  1118   001780  180E               	xorwf	??_wait_for_wall^0,w,c
  1119   001782  0B7F               	andlw	-129
  1120   001784  180E               	xorwf	??_wait_for_wall^0,w,c
  1121   001786  6E7C               	movwf	124,c	;volatile
  1122   001788  0012               	return		;funcret
  1123   00178A                     __end_of_wait_for_wall:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _getRGBCval *****************
  1127 ;; Defined at:
  1128 ;;		line 84 in file "color.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  1131 ;;		 -> main@measured_colour(8), 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1143 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 4
  1150 ;; This function calls:
  1151 ;;		_color_read_Blue
  1152 ;;		_color_read_Clear
  1153 ;;		_color_read_Green
  1154 ;;		_color_read_Red
  1155 ;; This function is called by:
  1156 ;;		_wait_for_wall
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text3
  1162   001556                     __ptext3:
  1163                           	callstack 0
  1164   001556                     _getRGBCval:
  1165                           	callstack 25
  1166   001556                     
  1167                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  1168   001556  ECFF  F00A         	call	_color_read_Red	;wreg free
  1169   00155A  500C               	movf	getRGBCval@p^0,w,c
  1170   00155C  6ED9               	movwf	fsr2l,c
  1171   00155E  6ADA               	clrf	fsr2h,c
  1172   001560  C005  FFDE         	movff	?_color_read_Red,postinc2
  1173   001564  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1174                           
  1175                           ;color.c: 87:     p->B = color_read_Blue();
  1176   001568  EC77  F00B         	call	_color_read_Blue	;wreg free
  1177   00156C  500C               	movf	getRGBCval@p^0,w,c
  1178   00156E  6ED9               	movwf	fsr2l,c
  1179   001570  6ADA               	clrf	fsr2h,c
  1180   001572  0E04               	movlw	4
  1181   001574  26D9               	addwf	fsr2l,f,c
  1182   001576  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1183   00157A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1184                           
  1185                           ;color.c: 88:     p->G = color_read_Green();
  1186   00157E  EC27  F00B         	call	_color_read_Green	;wreg free
  1187   001582  500C               	movf	getRGBCval@p^0,w,c
  1188   001584  6ED9               	movwf	fsr2l,c
  1189   001586  6ADA               	clrf	fsr2h,c
  1190   001588  0E02               	movlw	2
  1191   00158A  26D9               	addwf	fsr2l,f,c
  1192   00158C  C005  FFDE         	movff	?_color_read_Green,postinc2
  1193   001590  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1194                           
  1195                           ;color.c: 89:     p->C = color_read_Clear();
  1196   001594  EC4F  F00B         	call	_color_read_Clear	;wreg free
  1197   001598  500C               	movf	getRGBCval@p^0,w,c
  1198   00159A  6ED9               	movwf	fsr2l,c
  1199   00159C  6ADA               	clrf	fsr2h,c
  1200   00159E  0E06               	movlw	6
  1201   0015A0  26D9               	addwf	fsr2l,f,c
  1202   0015A2  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1203   0015A6  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1204   0015AA  0012               	return		;funcret
  1205   0015AC                     __end_of_getRGBCval:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _color_read_Red *****************
  1209 ;; Defined at:
  1210 ;;		line 28 in file "color.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  tmp             2    9[COMRAM] unsigned int 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  2    4[COMRAM] unsigned int 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1226 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;Total ram usage:        7 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 3
  1231 ;; This function calls:
  1232 ;;		_I2C_2_Master_Read
  1233 ;;		_I2C_2_Master_RepStart
  1234 ;;		_I2C_2_Master_Start
  1235 ;;		_I2C_2_Master_Stop
  1236 ;;		_I2C_2_Master_Write
  1237 ;; This function is called by:
  1238 ;;		_getRGBCval
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text4
  1243   0015FE                     __ptext4:
  1244                           	callstack 0
  1245   0015FE                     _color_read_Red:
  1246                           	callstack 25
  1247   0015FE                     
  1248                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  1249   0015FE  EC39  F00D         	call	_I2C_2_Master_Start	;wreg free
  1250                           
  1251                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  1252   001602  0E52               	movlw	82
  1253   001604  EC18  F00D         	call	_I2C_2_Master_Write
  1254                           
  1255                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  1256   001608  0EB6               	movlw	182
  1257   00160A  EC18  F00D         	call	_I2C_2_Master_Write
  1258                           
  1259                           ;color.c: 34:  I2C_2_Master_RepStart();
  1260   00160E  EC2F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1261                           
  1262                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  1263   001612  0E53               	movlw	83
  1264   001614  EC18  F00D         	call	_I2C_2_Master_Write
  1265                           
  1266                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  1267   001618  0E01               	movlw	1
  1268   00161A  ECEB  F00B         	call	_I2C_2_Master_Read
  1269   00161E  6E07               	movwf	??_color_read_Red^0,c
  1270   001620  5007               	movf	??_color_read_Red^0,w,c
  1271   001622  6E0A               	movwf	color_read_Red@tmp^0,c
  1272   001624  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1273                           
  1274                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1275   001626  0E00               	movlw	0
  1276   001628  ECEB  F00B         	call	_I2C_2_Master_Read
  1277   00162C  6E07               	movwf	??_color_read_Red^0,c
  1278   00162E  5007               	movf	??_color_read_Red^0,w,c
  1279   001630  6E09               	movwf	(??_color_read_Red+2)^0,c
  1280   001632  6A08               	clrf	(??_color_read_Red+1)^0,c
  1281   001634  500A               	movf	color_read_Red@tmp^0,w,c
  1282   001636  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1283   001638  6E0A               	movwf	color_read_Red@tmp^0,c
  1284   00163A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1285   00163C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1286   00163E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1287                           
  1288                           ;color.c: 38:  I2C_2_Master_Stop();
  1289   001640  EC34  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1290   001644                     
  1291                           ;color.c: 39:  return tmp;
  1292   001644  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1293   001648  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1294   00164C  0012               	return		;funcret
  1295   00164E                     __end_of_color_read_Red:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _color_read_Green *****************
  1299 ;; Defined at:
  1300 ;;		line 56 in file "color.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  tmp             2    9[COMRAM] unsigned int 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2    4[COMRAM] unsigned int 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;Total ram usage:        7 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 3
  1321 ;; This function calls:
  1322 ;;		_I2C_2_Master_Read
  1323 ;;		_I2C_2_Master_RepStart
  1324 ;;		_I2C_2_Master_Start
  1325 ;;		_I2C_2_Master_Stop
  1326 ;;		_I2C_2_Master_Write
  1327 ;; This function is called by:
  1328 ;;		_getRGBCval
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text5
  1333   00164E                     __ptext5:
  1334                           	callstack 0
  1335   00164E                     _color_read_Green:
  1336                           	callstack 25
  1337   00164E                     
  1338                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  1339   00164E  EC39  F00D         	call	_I2C_2_Master_Start	;wreg free
  1340                           
  1341                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  1342   001652  0E52               	movlw	82
  1343   001654  EC18  F00D         	call	_I2C_2_Master_Write
  1344                           
  1345                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  1346   001658  0EB8               	movlw	184
  1347   00165A  EC18  F00D         	call	_I2C_2_Master_Write
  1348                           
  1349                           ;color.c: 62:  I2C_2_Master_RepStart();
  1350   00165E  EC2F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1351                           
  1352                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  1353   001662  0E53               	movlw	83
  1354   001664  EC18  F00D         	call	_I2C_2_Master_Write
  1355                           
  1356                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  1357   001668  0E01               	movlw	1
  1358   00166A  ECEB  F00B         	call	_I2C_2_Master_Read
  1359   00166E  6E07               	movwf	??_color_read_Green^0,c
  1360   001670  5007               	movf	??_color_read_Green^0,w,c
  1361   001672  6E0A               	movwf	color_read_Green@tmp^0,c
  1362   001674  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1363                           
  1364                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1365   001676  0E00               	movlw	0
  1366   001678  ECEB  F00B         	call	_I2C_2_Master_Read
  1367   00167C  6E07               	movwf	??_color_read_Green^0,c
  1368   00167E  5007               	movf	??_color_read_Green^0,w,c
  1369   001680  6E09               	movwf	(??_color_read_Green+2)^0,c
  1370   001682  6A08               	clrf	(??_color_read_Green+1)^0,c
  1371   001684  500A               	movf	color_read_Green@tmp^0,w,c
  1372   001686  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1373   001688  6E0A               	movwf	color_read_Green@tmp^0,c
  1374   00168A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1375   00168C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1376   00168E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1377                           
  1378                           ;color.c: 66:  I2C_2_Master_Stop();
  1379   001690  EC34  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1380   001694                     
  1381                           ;color.c: 67:  return tmp;
  1382   001694  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1383   001698  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1384   00169C  0012               	return		;funcret
  1385   00169E                     __end_of_color_read_Green:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _color_read_Clear *****************
  1389 ;; Defined at:
  1390 ;;		line 70 in file "color.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  tmp             2    9[COMRAM] unsigned int 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2    4[COMRAM] unsigned int 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;Total ram usage:        7 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 3
  1411 ;; This function calls:
  1412 ;;		_I2C_2_Master_Read
  1413 ;;		_I2C_2_Master_RepStart
  1414 ;;		_I2C_2_Master_Start
  1415 ;;		_I2C_2_Master_Stop
  1416 ;;		_I2C_2_Master_Write
  1417 ;; This function is called by:
  1418 ;;		_getRGBCval
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text6
  1423   00169E                     __ptext6:
  1424                           	callstack 0
  1425   00169E                     _color_read_Clear:
  1426                           	callstack 25
  1427   00169E                     
  1428                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  1429   00169E  EC39  F00D         	call	_I2C_2_Master_Start	;wreg free
  1430                           
  1431                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  1432   0016A2  0E52               	movlw	82
  1433   0016A4  EC18  F00D         	call	_I2C_2_Master_Write
  1434                           
  1435                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  1436   0016A8  0EB4               	movlw	180
  1437   0016AA  EC18  F00D         	call	_I2C_2_Master_Write
  1438                           
  1439                           ;color.c: 76:  I2C_2_Master_RepStart();
  1440   0016AE  EC2F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1441                           
  1442                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  1443   0016B2  0E53               	movlw	83
  1444   0016B4  EC18  F00D         	call	_I2C_2_Master_Write
  1445                           
  1446                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  1447   0016B8  0E01               	movlw	1
  1448   0016BA  ECEB  F00B         	call	_I2C_2_Master_Read
  1449   0016BE  6E07               	movwf	??_color_read_Clear^0,c
  1450   0016C0  5007               	movf	??_color_read_Clear^0,w,c
  1451   0016C2  6E0A               	movwf	color_read_Clear@tmp^0,c
  1452   0016C4  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1453                           
  1454                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1455   0016C6  0E00               	movlw	0
  1456   0016C8  ECEB  F00B         	call	_I2C_2_Master_Read
  1457   0016CC  6E07               	movwf	??_color_read_Clear^0,c
  1458   0016CE  5007               	movf	??_color_read_Clear^0,w,c
  1459   0016D0  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1460   0016D2  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1461   0016D4  500A               	movf	color_read_Clear@tmp^0,w,c
  1462   0016D6  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1463   0016D8  6E0A               	movwf	color_read_Clear@tmp^0,c
  1464   0016DA  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1465   0016DC  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1466   0016DE  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1467                           
  1468                           ;color.c: 80:  I2C_2_Master_Stop();
  1469   0016E0  EC34  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1470   0016E4                     
  1471                           ;color.c: 81:  return tmp;
  1472   0016E4  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1473   0016E8  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1474   0016EC  0012               	return		;funcret
  1475   0016EE                     __end_of_color_read_Clear:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _color_read_Blue *****************
  1479 ;; Defined at:
  1480 ;;		line 42 in file "color.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  tmp             2    9[COMRAM] unsigned int 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2    4[COMRAM] unsigned int 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;Total ram usage:        7 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 3
  1501 ;; This function calls:
  1502 ;;		_I2C_2_Master_Read
  1503 ;;		_I2C_2_Master_RepStart
  1504 ;;		_I2C_2_Master_Start
  1505 ;;		_I2C_2_Master_Stop
  1506 ;;		_I2C_2_Master_Write
  1507 ;; This function is called by:
  1508 ;;		_getRGBCval
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text7
  1513   0016EE                     __ptext7:
  1514                           	callstack 0
  1515   0016EE                     _color_read_Blue:
  1516                           	callstack 25
  1517   0016EE                     
  1518                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  1519   0016EE  EC39  F00D         	call	_I2C_2_Master_Start	;wreg free
  1520                           
  1521                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  1522   0016F2  0E52               	movlw	82
  1523   0016F4  EC18  F00D         	call	_I2C_2_Master_Write
  1524                           
  1525                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  1526   0016F8  0EBA               	movlw	186
  1527   0016FA  EC18  F00D         	call	_I2C_2_Master_Write
  1528                           
  1529                           ;color.c: 48:  I2C_2_Master_RepStart();
  1530   0016FE  EC2F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1531                           
  1532                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  1533   001702  0E53               	movlw	83
  1534   001704  EC18  F00D         	call	_I2C_2_Master_Write
  1535                           
  1536                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  1537   001708  0E01               	movlw	1
  1538   00170A  ECEB  F00B         	call	_I2C_2_Master_Read
  1539   00170E  6E07               	movwf	??_color_read_Blue^0,c
  1540   001710  5007               	movf	??_color_read_Blue^0,w,c
  1541   001712  6E0A               	movwf	color_read_Blue@tmp^0,c
  1542   001714  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1543                           
  1544                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1545   001716  0E00               	movlw	0
  1546   001718  ECEB  F00B         	call	_I2C_2_Master_Read
  1547   00171C  6E07               	movwf	??_color_read_Blue^0,c
  1548   00171E  5007               	movf	??_color_read_Blue^0,w,c
  1549   001720  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1550   001722  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1551   001724  500A               	movf	color_read_Blue@tmp^0,w,c
  1552   001726  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1553   001728  6E0A               	movwf	color_read_Blue@tmp^0,c
  1554   00172A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1555   00172C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1556   00172E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1557                           
  1558                           ;color.c: 52:  I2C_2_Master_Stop();
  1559   001730  EC34  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1560   001734                     
  1561                           ;color.c: 53:  return tmp;
  1562   001734  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1563   001738  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1564   00173C  0012               	return		;funcret
  1565   00173E                     __end_of_color_read_Blue:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _I2C_2_Master_RepStart *****************
  1569 ;; Defined at:
  1570 ;;		line 33 in file "i2c.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 2
  1591 ;; This function calls:
  1592 ;;		_I2C_2_Master_Idle
  1593 ;; This function is called by:
  1594 ;;		_color_read_Red
  1595 ;;		_color_read_Blue
  1596 ;;		_color_read_Green
  1597 ;;		_color_read_Clear
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text8
  1602   001A5E                     __ptext8:
  1603                           	callstack 0
  1604   001A5E                     _I2C_2_Master_RepStart:
  1605                           	callstack 25
  1606   001A5E                     
  1607                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1608   001A5E  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1609   001A62                     
  1610                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1611   001A62  010E               	movlb	14	; () banked
  1612   001A64  83DA               	bsf	218,1,b	;volatile
  1613   001A66                     
  1614                           ; BSR set to: 14
  1615   001A66  0012               	return		;funcret
  1616   001A68                     __end_of_I2C_2_Master_RepStart:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _I2C_2_Master_Read *****************
  1620 ;; Defined at:
  1621 ;;		line 51 in file "i2c.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  ack             1    wreg     unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  ack             1    2[COMRAM] unsigned char 
  1626 ;;  tmp             1    3[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      unsigned char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;Total ram usage:        3 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		_I2C_2_Master_Idle
  1645 ;; This function is called by:
  1646 ;;		_color_read_Red
  1647 ;;		_color_read_Blue
  1648 ;;		_color_read_Green
  1649 ;;		_color_read_Clear
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text9
  1654   0017D6                     __ptext9:
  1655                           	callstack 0
  1656   0017D6                     _I2C_2_Master_Read:
  1657                           	callstack 25
  1658                           
  1659                           ; BSR set to: 14
  1660                           ;incstack = 0
  1661                           ;I2C_2_Master_Read@ack stored from wreg
  1662   0017D6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1663   0017D8                     
  1664                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1665   0017D8  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1666   0017DC                     
  1667                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1668   0017DC  010E               	movlb	14	; () banked
  1669   0017DE  87DA               	bsf	218,3,b	;volatile
  1670                           
  1671                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1672   0017E0  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1673   0017E4                     
  1674                           ;i2c.c: 57:   tmp = SSP2BUF;
  1675   0017E4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1676                           
  1677                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1678   0017E8  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1679   0017EC                     
  1680                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1681   0017EC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1682   0017EE  B4D8               	btfsc	status,2,c
  1683   0017F0  EFFC  F00B         	goto	u1281
  1684   0017F4  EF00  F00C         	goto	u1280
  1685   0017F8                     u1281:
  1686   0017F8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1687   0017FA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1688   0017FC  EF01  F00C         	goto	u1298
  1689   001800                     u1280:
  1690   001800  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1691   001802                     u1298:
  1692   001802  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1693   001804  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1694   001806  010E               	movlb	14	; () banked
  1695   001808  51DA               	movf	218,w,b	;volatile
  1696   00180A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1697   00180C  0BDF               	andlw	-33
  1698   00180E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1699   001810  6FDA               	movwf	218,b	;volatile
  1700   001812                     
  1701                           ; BSR set to: 14
  1702                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1703   001812  89DA               	bsf	218,4,b	;volatile
  1704   001814                     
  1705                           ; BSR set to: 14
  1706                           ;i2c.c: 61:   return tmp;
  1707   001814  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1708   001816                     
  1709                           ; BSR set to: 14
  1710   001816  0012               	return		;funcret
  1711   001818                     __end_of_I2C_2_Master_Read:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _test_serial *****************
  1715 ;; Defined at:
  1716 ;;		line 25 in file "calibration.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 7
  1737 ;; This function calls:
  1738 ;;		_sendArrayCharSerial4
  1739 ;;		_sendIntSerial4
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text10
  1746   001818                     __ptext10:
  1747                           	callstack 0
  1748   001818                     _test_serial:
  1749                           	callstack 23
  1750   001818                     
  1751                           ;calibration.c: 27:     sendIntSerial4((int)TMR0L);
  1752   001818  CFD3 F036          	movff	4051,sendIntSerial4@integer	;volatile
  1753   00181C  6A37               	clrf	(sendIntSerial4@integer+1)^0,c
  1754   00181E  ECCA  F00C         	call	_sendIntSerial4	;wreg free
  1755                           
  1756                           ;calibration.c: 28:     sendIntSerial4((int)TMR0H);
  1757   001822  CFD4 F036          	movff	4052,sendIntSerial4@integer	;volatile
  1758   001826  6A37               	clrf	(sendIntSerial4@integer+1)^0,c
  1759   001828  ECCA  F00C         	call	_sendIntSerial4	;wreg free
  1760                           
  1761                           ;calibration.c: 29:     sendArrayCharSerial4(trail_timer_high);
  1762   00182C  0ECC               	movlw	low _trail_timer_high
  1763   00182E  6E36               	movwf	sendArrayCharSerial4@arr^0,c
  1764   001830  0E01               	movlw	high _trail_timer_high
  1765   001832  6E37               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1766   001834  EC10  F00A         	call	_sendArrayCharSerial4	;wreg free
  1767                           
  1768                           ;calibration.c: 30:     sendArrayCharSerial4(trail_timer_low);
  1769   001838  0EB8               	movlw	low _trail_timer_low
  1770   00183A  6E36               	movwf	sendArrayCharSerial4@arr^0,c
  1771   00183C  0E01               	movlw	high _trail_timer_low
  1772   00183E  6E37               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1773   001840  EC10  F00A         	call	_sendArrayCharSerial4	;wreg free
  1774                           
  1775                           ;calibration.c: 31:     sendArrayCharSerial4(trail_manoeuvre);
  1776   001844  0EA4               	movlw	low _trail_manoeuvre
  1777   001846  6E36               	movwf	sendArrayCharSerial4@arr^0,c
  1778   001848  0E01               	movlw	high _trail_manoeuvre
  1779   00184A  6E37               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1780   00184C  EC10  F00A         	call	_sendArrayCharSerial4	;wreg free
  1781   001850  0012               	return		;funcret
  1782   001852                     __end_of_test_serial:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _sendIntSerial4 *****************
  1786 ;; Defined at:
  1787 ;;		line 43 in file "serial.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  integer         2   53[COMRAM] int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  string         17   55[COMRAM] unsigned char [17]
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;Total ram usage:       19 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 6
  1808 ;; This function calls:
  1809 ;;		_sendStringSerial4
  1810 ;;		_sprintf
  1811 ;; This function is called by:
  1812 ;;		_test_serial
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text11
  1817   001994                     __ptext11:
  1818                           	callstack 0
  1819   001994                     _sendIntSerial4:
  1820                           	callstack 23
  1821   001994                     
  1822                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
  1823   001994  0E38               	movlw	low sendIntSerial4@string
  1824   001996  6E1C               	movwf	sprintf@s^0,c
  1825   001998  6A1D               	clrf	(sprintf@s+1)^0,c
  1826   00199A  0E0A               	movlw	low (STR_5+9)
  1827   00199C  6E1E               	movwf	sprintf@fmt^0,c
  1828   00199E  C036  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
  1829   0019A2  C037  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
  1830   0019A6  ECC5  F00B         	call	_sprintf	;wreg free
  1831   0019AA                     
  1832                           ;serial.c: 46:     sendStringSerial4(string);
  1833   0019AA  0E38               	movlw	low sendIntSerial4@string
  1834   0019AC  6E02               	movwf	sendStringSerial4@string^0,c
  1835   0019AE  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1836   0019B0  EC4B  F00A         	call	_sendStringSerial4	;wreg free
  1837   0019B4  0012               	return		;funcret
  1838   0019B6                     __end_of_sendIntSerial4:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _sendArrayCharSerial4 *****************
  1842 ;; Defined at:
  1843 ;;		line 50 in file "serial.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  arr             2   53[COMRAM] PTR unsigned char 
  1846 ;;		 -> trail_manoeuvre(20), trail_timer_low(20), trail_timer_high(20), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  i               2  162[BANK1 ] unsigned int 
  1849 ;;  tempStr       161    0[BANK1 ] unsigned char [161]
  1850 ;;  index           1  161[BANK1 ] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Locals:         0       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Totals:         3       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;Total ram usage:      167 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 6
  1867 ;; This function calls:
  1868 ;;		_sendStringSerial4
  1869 ;;		_sprintf
  1870 ;; This function is called by:
  1871 ;;		_test_serial
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text12
  1876   001420                     __ptext12:
  1877                           	callstack 0
  1878   001420                     _sendArrayCharSerial4:
  1879                           	callstack 23
  1880   001420                     
  1881                           ;serial.c: 51:     unsigned char index = 0;
  1882   001420  0E00               	movlw	0
  1883   001422  0101               	movlb	1	; () banked
  1884   001424  6FA1               	movwf	sendArrayCharSerial4@index& (0+255),b
  1885                           
  1886                           ;serial.c: 53:     char tempStr[20 * 8 + 1];;serial.c: 54:     for (unsigned int i = 0; 
      +                          i < 20; i++) {
  1887   001426  0E00               	movlw	0
  1888   001428  6FA3               	movwf	(sendArrayCharSerial4@i+1)& (0+255),b
  1889   00142A  0E00               	movlw	0
  1890   00142C  6FA2               	movwf	sendArrayCharSerial4@i& (0+255),b
  1891   00142E                     l3583:
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;serial.c: 55:         index += sprintf(&tempStr[index], "%d ", arr[i]);
  1895   00142E  0E00               	movlw	low sendArrayCharSerial4@tempStr
  1896   001430  25A1               	addwf	sendArrayCharSerial4@index& (0+255),w,b
  1897   001432  6E1C               	movwf	sprintf@s^0,c
  1898   001434  6A1D               	clrf	(sprintf@s+1)^0,c
  1899   001436  0E01               	movlw	high sendArrayCharSerial4@tempStr
  1900   001438  221D               	addwfc	(sprintf@s+1)^0,f,c
  1901   00143A  0E0F               	movlw	low STR_2
  1902   00143C  6E1E               	movwf	sprintf@fmt^0,c
  1903   00143E  51A2               	movf	sendArrayCharSerial4@i& (0+255),w,b
  1904   001440  2436               	addwf	sendArrayCharSerial4@arr^0,w,c
  1905   001442  6ED9               	movwf	fsr2l,c
  1906   001444  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  1907   001446  2037               	addwfc	(sendArrayCharSerial4@arr+1)^0,w,c
  1908   001448  6EDA               	movwf	fsr2h,c
  1909   00144A  50DF               	movf	indf2,w,c
  1910   00144C  6E38               	movwf	??_sendArrayCharSerial4^0,c
  1911   00144E  5038               	movf	??_sendArrayCharSerial4^0,w,c
  1912   001450  6E1F               	movwf	(?_sprintf+3)^0,c
  1913   001452  6A20               	clrf	(?_sprintf+4)^0,c
  1914   001454  ECC5  F00B         	call	_sprintf	;wreg free
  1915   001458  501C               	movf	?_sprintf^0,w,c
  1916   00145A  0101               	movlb	1	; () banked
  1917   00145C  27A1               	addwf	sendArrayCharSerial4@index& (0+255),f,b
  1918   00145E                     
  1919                           ; BSR set to: 1
  1920                           ;serial.c: 56:     }
  1921   00145E  4BA2               	infsnz	sendArrayCharSerial4@i& (0+255),f,b
  1922   001460  2BA3               	incf	(sendArrayCharSerial4@i+1)& (0+255),f,b
  1923   001462                     
  1924                           ; BSR set to: 1
  1925   001462  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  1926   001464  E109               	bnz	u2240
  1927   001466  0E14               	movlw	20
  1928   001468  5DA2               	subwf	sendArrayCharSerial4@i& (0+255),w,b
  1929   00146A  A0D8               	btfss	status,0,c
  1930   00146C  EF3A  F00A         	goto	u2241
  1931   001470  EF3C  F00A         	goto	u2240
  1932   001474                     u2241:
  1933   001474  EF17  F00A         	goto	l3583
  1934   001478                     u2240:
  1935   001478                     
  1936                           ; BSR set to: 1
  1937                           ;serial.c: 57:     sendStringSerial4(tempStr);
  1938   001478  0E00               	movlw	low sendArrayCharSerial4@tempStr
  1939   00147A  6E02               	movwf	sendStringSerial4@string^0,c
  1940   00147C  0E01               	movlw	high sendArrayCharSerial4@tempStr
  1941   00147E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1942   001480  EC4B  F00A         	call	_sendStringSerial4	;wreg free
  1943                           
  1944                           ;serial.c: 58:     sendStringSerial4(" \r");
  1945   001484  0E0C               	movlw	low (STR_5+11)
  1946   001486  6E02               	movwf	sendStringSerial4@string^0,c
  1947   001488  5002               	movf	sendStringSerial4@string^0,w,c
  1948   00148A  A4D8               	btfss	status,2,c
  1949   00148C  0E0E               	movlw	high __smallconst
  1950   00148E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1951   001490  EC4B  F00A         	call	_sendStringSerial4	;wreg free
  1952   001494  0012               	return		;funcret
  1953   001496                     __end_of_sendArrayCharSerial4:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _sendRGBCvalSerial4 *****************
  1957 ;; Defined at:
  1958 ;;		line 62 in file "serial.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  col_val         1   53[COMRAM] PTR struct RGBC_val
  1961 ;;		 -> main@measured_colour(8), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  tempStr        41    0[BANK0 ] unsigned char [41]
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1973 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1974 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Totals:         1      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;Total ram usage:       42 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 6
  1980 ;; This function calls:
  1981 ;;		_sendStringSerial4
  1982 ;;		_sprintf
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text13
  1989   0014F8                     __ptext13:
  1990                           	callstack 0
  1991   0014F8                     _sendRGBCvalSerial4:
  1992                           	callstack 24
  1993   0014F8                     
  1994                           ;serial.c: 63:     char tempStr[41];;serial.c: 64:     sprintf(tempStr, "%d %d %d %d \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1995   0014F8  0E60               	movlw	low sendRGBCvalSerial4@tempStr
  1996   0014FA  6E1C               	movwf	sprintf@s^0,c
  1997   0014FC  6A1D               	clrf	(sprintf@s+1)^0,c
  1998   0014FE  0E01               	movlw	low STR_5
  1999   001500  6E1E               	movwf	sprintf@fmt^0,c
  2000   001502  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2001   001504  6ED9               	movwf	fsr2l,c
  2002   001506  6ADA               	clrf	fsr2h,c
  2003   001508  CFDE F01F          	movff	postinc2,?_sprintf+3
  2004   00150C  CFDD F020          	movff	postdec2,?_sprintf+4
  2005   001510  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2006   001512  6ED9               	movwf	fsr2l,c
  2007   001514  6ADA               	clrf	fsr2h,c
  2008   001516  0E02               	movlw	2
  2009   001518  26D9               	addwf	fsr2l,f,c
  2010   00151A  CFDE F021          	movff	postinc2,?_sprintf+5
  2011   00151E  CFDD F022          	movff	postdec2,?_sprintf+6
  2012   001522  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2013   001524  6ED9               	movwf	fsr2l,c
  2014   001526  6ADA               	clrf	fsr2h,c
  2015   001528  0E04               	movlw	4
  2016   00152A  26D9               	addwf	fsr2l,f,c
  2017   00152C  CFDE F023          	movff	postinc2,?_sprintf+7
  2018   001530  CFDD F024          	movff	postdec2,?_sprintf+8
  2019   001534  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2020   001536  6ED9               	movwf	fsr2l,c
  2021   001538  6ADA               	clrf	fsr2h,c
  2022   00153A  0E06               	movlw	6
  2023   00153C  26D9               	addwf	fsr2l,f,c
  2024   00153E  CFDE F025          	movff	postinc2,?_sprintf+9
  2025   001542  CFDD F026          	movff	postdec2,?_sprintf+10
  2026   001546  ECC5  F00B         	call	_sprintf	;wreg free
  2027   00154A                     
  2028                           ;serial.c: 65:     sendStringSerial4(tempStr);
  2029   00154A  0E60               	movlw	low sendRGBCvalSerial4@tempStr
  2030   00154C  6E02               	movwf	sendStringSerial4@string^0,c
  2031   00154E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  2032   001550  EC4B  F00A         	call	_sendStringSerial4	;wreg free
  2033   001554  0012               	return		;funcret
  2034   001556                     __end_of_sendRGBCvalSerial4:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _sprintf *****************
  2038 ;; Defined at:
  2039 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  s               2   27[COMRAM] PTR unsigned char 
  2042 ;;		 -> sendRGBCvalSerial4@tempStr(41), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2043 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
  2044 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  f              12   41[COMRAM] struct _IO_FILE
  2047 ;;  ret             2   38[COMRAM] int 
  2048 ;;  ap              1   40[COMRAM] PTR void [1]
  2049 ;;		 -> ?_sprintf(2), 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2   27[COMRAM] int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2059 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;Total ram usage:       26 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 5
  2066 ;; This function calls:
  2067 ;;		_vfprintf
  2068 ;; This function is called by:
  2069 ;;		_sendIntSerial4
  2070 ;;		_sendArrayCharSerial4
  2071 ;;		_sendRGBCvalSerial4
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text14
  2076   00178A                     __ptext14:
  2077                           	callstack 0
  2078   00178A                     _sprintf:
  2079                           	callstack 23
  2080   00178A  0E1F               	movlw	low (?_sprintf+3)
  2081   00178C  6E29               	movwf	sprintf@ap^0,c
  2082   00178E  C01C  F02A         	movff	sprintf@s,sprintf@f
  2083   001792  C01D  F02B         	movff	sprintf@s+1,sprintf@f+1
  2084   001796  0E00               	movlw	0
  2085   001798  6E2E               	movwf	(sprintf@f+4)^0,c
  2086   00179A  0E00               	movlw	0
  2087   00179C  6E2D               	movwf	(sprintf@f+3)^0,c
  2088   00179E  0E00               	movlw	0
  2089   0017A0  6E35               	movwf	(sprintf@f+11)^0,c
  2090   0017A2  0E00               	movlw	0
  2091   0017A4  6E34               	movwf	(sprintf@f+10)^0,c
  2092   0017A6  0E2A               	movlw	low sprintf@f
  2093   0017A8  6E18               	movwf	vfprintf@fp^0,c
  2094   0017AA  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  2095   0017AE  0E29               	movlw	low sprintf@ap
  2096   0017B0  6E1A               	movwf	vfprintf@ap^0,c
  2097   0017B2  ECD6  F00A         	call	_vfprintf	;wreg free
  2098   0017B6  C018  F027         	movff	?_vfprintf,sprintf@ret
  2099   0017BA  C019  F028         	movff	?_vfprintf+1,sprintf@ret+1
  2100   0017BE  502D               	movf	(sprintf@f+3)^0,w,c
  2101   0017C0  241C               	addwf	sprintf@s^0,w,c
  2102   0017C2  6ED9               	movwf	fsr2l,c
  2103   0017C4  502E               	movf	(sprintf@f+4)^0,w,c
  2104   0017C6  201D               	addwfc	(sprintf@s+1)^0,w,c
  2105   0017C8  6EDA               	movwf	fsr2h,c
  2106   0017CA  6ADF               	clrf	indf2,c
  2107   0017CC  C027  F01C         	movff	sprintf@ret,?_sprintf
  2108   0017D0  C028  F01D         	movff	sprintf@ret+1,?_sprintf+1
  2109   0017D4  0012               	return		;funcret
  2110   0017D6                     __end_of_sprintf:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _vfprintf *****************
  2114 ;; Defined at:
  2115 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  2118 ;;		 -> sprintf@f(12), 
  2119 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  2120 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2121 ;;  ap              1   25[COMRAM] PTR PTR void 
  2122 ;;		 -> sprintf@ap(1), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  2125 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  2   23[COMRAM] int 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2135 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;Total ram usage:        4 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 4
  2142 ;; This function calls:
  2143 ;;		_vfpfcnvrt
  2144 ;; This function is called by:
  2145 ;;		_sprintf
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text15
  2150   0015AC                     __ptext15:
  2151                           	callstack 0
  2152   0015AC                     _vfprintf:
  2153                           	callstack 23
  2154   0015AC                     
  2155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2156   0015AC  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  2157   0015B0                     
  2158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2159   0015B0  0E00               	movlw	0
  2160   0015B2  6E4C               	movwf	(_nout+1)^0,c
  2161   0015B4  0E00               	movlw	0
  2162   0015B6  6E4B               	movwf	_nout^0,c
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2165   0015B8  EFEA  F00A         	goto	l2675
  2166   0015BC                     l2673:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2169   0015BC  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2170   0015C0  0E1B               	movlw	low vfprintf@cfmt
  2171   0015C2  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2172   0015C4  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2173   0015C8  EC0A  F007         	call	_vfpfcnvrt	;wreg free
  2174   0015CC  500B               	movf	?_vfpfcnvrt^0,w,c
  2175   0015CE  264B               	addwf	_nout^0,f,c
  2176   0015D0  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  2177   0015D2  224C               	addwfc	(_nout+1)^0,f,c
  2178   0015D4                     l2675:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2181   0015D4  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2182   0015D8                     	if	1	;There is more than 1 active tblptr byte
  2183   0015D8  0E0E               	movlw	high __smallconst
  2184   0015DA  6EF7               	movwf	tblptrh,c
  2185   0015DC                     	endif
  2186   0015DC                     	if	0	;tblptru may be non-zero
  2187   0015DC                     	endif
  2188   0015DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2189   0015DC  0E00               	movlw	low (__smallconst shr (0+16))
  2190   0015DE  6EF8               	movwf	tblptru,c
  2191   0015E0                     	endif
  2192   0015E0  0008               	tblrd		*
  2193   0015E2  50F5               	movf	tablat,w,c
  2194   0015E4  0900               	iorlw	0
  2195   0015E6  A4D8               	btfss	status,2,c
  2196   0015E8  EFF8  F00A         	goto	u1471
  2197   0015EC  EFFA  F00A         	goto	u1470
  2198   0015F0                     u1471:
  2199   0015F0  EFDE  F00A         	goto	l2673
  2200   0015F4                     u1470:
  2201   0015F4                     
  2202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2203   0015F4  C04B  F018         	movff	_nout,?_vfprintf
  2204   0015F8  C04C  F019         	movff	_nout+1,?_vfprintf+1
  2205   0015FC  0012               	return		;funcret
  2206   0015FE                     __end_of_vfprintf:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _vfpfcnvrt *****************
  2210 ;; Defined at:
  2211 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2214 ;;		 -> sprintf@f(12), 
  2215 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2216 ;;		 -> vfprintf@cfmt(1), 
  2217 ;;  ap              1   12[COMRAM] PTR PTR void 
  2218 ;;		 -> sprintf@ap(1), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  convarg         4   18[COMRAM] struct .
  2221 ;;  cnt             2   15[COMRAM] int 
  2222 ;;  c               1   22[COMRAM] unsigned char 
  2223 ;;  cp              1   17[COMRAM] PTR unsigned char 
  2224 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2225 ;;  done            1   14[COMRAM] _Bool 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2   10[COMRAM] int 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2235 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;Total ram usage:       13 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 3
  2242 ;; This function calls:
  2243 ;;		___awdiv
  2244 ;;		___awmod
  2245 ;;		_abs
  2246 ;;		_fputc
  2247 ;; This function is called by:
  2248 ;;		_vfprintf
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text16
  2253   000E14                     __ptext16:
  2254                           	callstack 0
  2255   000E14                     _vfpfcnvrt:
  2256                           	callstack 23
  2257   000E14                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  2259   000E14  0E00               	movlw	0
  2260   000E16  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  2261   000E18  0E00               	movlw	0
  2262   000E1A  6E10               	movwf	vfpfcnvrt@cnt^0,c
  2263   000E1C                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  2265   000E1C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2266   000E1E  6ED9               	movwf	fsr2l,c
  2267   000E20  6ADA               	clrf	fsr2h,c
  2268   000E22  CFDF FFF6          	movff	indf2,tblptrl
  2269   000E26                     	if	1	;There is more than 1 active tblptr byte
  2270   000E26  0E0E               	movlw	high __smallconst
  2271   000E28  6EF7               	movwf	tblptrh,c
  2272   000E2A                     	endif
  2273   000E2A                     	if	0	;tblptru may be non-zero
  2274   000E2A                     	endif
  2275   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2276   000E2A  0E00               	movlw	low (__smallconst shr (0+16))
  2277   000E2C  6EF8               	movwf	tblptru,c
  2278   000E2E                     	endif
  2279   000E2E  0008               	tblrd		*
  2280   000E30  50F5               	movf	tablat,w,c
  2281   000E32  0A25               	xorlw	37
  2282   000E34  A4D8               	btfss	status,2,c
  2283   000E36  EF1F  F007         	goto	u1181
  2284   000E3A  EF21  F007         	goto	u1180
  2285   000E3E                     u1181:
  2286   000E3E  EFEB  F007         	goto	l2541
  2287   000E42                     u1180:
  2288   000E42                     
  2289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2290   000E42  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2291   000E44  6ED9               	movwf	fsr2l,c
  2292   000E46  6ADA               	clrf	fsr2h,c
  2293   000E48  2ADF               	incf	indf2,f,c
  2294   000E4A                     
  2295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2296   000E4A  0E00               	movlw	0
  2297   000E4C  0100               	movlb	0	; () banked
  2298   000E4E  6FDA               	movwf	(_width+1)& (0+255),b
  2299   000E50  0E00               	movlw	0
  2300   000E52  6FD9               	movwf	_width& (0+255),b
  2301   000E54  C0D9  F04D         	movff	_width,_flags
  2302   000E58                     
  2303                           ; BSR set to: 0
  2304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2305   000E58  69DB               	setf	_prec& (0+255),b
  2306   000E5A  69DC               	setf	(_prec+1)& (0+255),b
  2307   000E5C                     
  2308                           ; BSR set to: 0
  2309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2310   000E5C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2311   000E5E  6ED9               	movwf	fsr2l,c
  2312   000E60  6ADA               	clrf	fsr2h,c
  2313   000E62  50DF               	movf	indf2,w,c
  2314   000E64  6E12               	movwf	vfpfcnvrt@cp^0,c
  2315   000E66                     
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2318   000E66  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2319   000E6A                     	if	1	;There is more than 1 active tblptr byte
  2320   000E6A  0E0E               	movlw	high __smallconst
  2321   000E6C  6EF7               	movwf	tblptrh,c
  2322   000E6E                     	endif
  2323   000E6E                     	if	0	;tblptru may be non-zero
  2324   000E6E                     	endif
  2325   000E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2326   000E6E  0E00               	movlw	low (__smallconst shr (0+16))
  2327   000E70  6EF8               	movwf	tblptru,c
  2328   000E72                     	endif
  2329   000E72  0008               	tblrd		*
  2330   000E74  50F5               	movf	tablat,w,c
  2331   000E76  0A64               	xorlw	100
  2332   000E78  B4D8               	btfsc	status,2,c
  2333   000E7A  EF41  F007         	goto	u1191
  2334   000E7E  EF43  F007         	goto	u1190
  2335   000E82                     u1191:
  2336   000E82  EF53  F007         	goto	l2505
  2337   000E86                     u1190:
  2338   000E86                     
  2339                           ; BSR set to: 0
  2340   000E86  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2341   000E8A                     	if	1	;There is more than 1 active tblptr byte
  2342   000E8A  0E0E               	movlw	high __smallconst
  2343   000E8C  6EF7               	movwf	tblptrh,c
  2344   000E8E                     	endif
  2345   000E8E                     	if	0	;tblptru may be non-zero
  2346   000E8E                     	endif
  2347   000E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2348   000E8E  0E00               	movlw	low (__smallconst shr (0+16))
  2349   000E90  6EF8               	movwf	tblptru,c
  2350   000E92                     	endif
  2351   000E92  0008               	tblrd		*
  2352   000E94  50F5               	movf	tablat,w,c
  2353   000E96  0A69               	xorlw	105
  2354   000E98  A4D8               	btfss	status,2,c
  2355   000E9A  EF51  F007         	goto	u1201
  2356   000E9E  EF53  F007         	goto	u1200
  2357   000EA2                     u1201:
  2358   000EA2  EFE1  F007         	goto	l2535
  2359   000EA6                     u1200:
  2360   000EA6                     l2505:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2364   000EA6  500D               	movf	vfpfcnvrt@ap^0,w,c
  2365   000EA8  6ED9               	movwf	fsr2l,c
  2366   000EAA  6ADA               	clrf	fsr2h,c
  2367   000EAC  0E02               	movlw	2
  2368   000EAE  26DF               	addwf	indf2,f,c
  2369   000EB0  5CDF               	subwf	indf2,w,c
  2370   000EB2  6ED9               	movwf	fsr2l,c
  2371   000EB4  6ADA               	clrf	fsr2h,c
  2372   000EB6  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2373   000EBA  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2374   000EBE                     
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2377   000EBE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2378   000EC0  6ED9               	movwf	fsr2l,c
  2379   000EC2  6ADA               	clrf	fsr2h,c
  2380   000EC4  2812               	incf	vfpfcnvrt@cp^0,w,c
  2381   000EC6  6EDF               	movwf	indf2,c
  2382   000EC8                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2385   000EC8  0E20               	movlw	32
  2386   000ECA  6E17               	movwf	vfpfcnvrt@c^0,c
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2389   000ECC  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2390   000ECE  EF6B  F007         	goto	u1211
  2391   000ED2  EF6E  F007         	goto	u1210
  2392   000ED6                     u1211:
  2393   000ED6  0E01               	movlw	1
  2394   000ED8  EF6F  F007         	goto	u1220
  2395   000EDC                     u1210:
  2396   000EDC  0E00               	movlw	0
  2397   000EDE                     u1220:
  2398   000EDE  6E0F               	movwf	vfpfcnvrt@done^0,c
  2399   000EE0                     l2511:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2402   000EE0  0617               	decf	vfpfcnvrt@c^0,f,c
  2403   000EE2  5017               	movf	vfpfcnvrt@c^0,w,c
  2404   000EE4  0FA5               	addlw	low _dbuf
  2405   000EE6  6ED9               	movwf	fsr2l,c
  2406   000EE8  6ADA               	clrf	fsr2h,c
  2407   000EEA  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2408   000EEE  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2409   000EF2  0E00               	movlw	0
  2410   000EF4  6E04               	movwf	(___awmod@divisor+1)^0,c
  2411   000EF6  0E0A               	movlw	10
  2412   000EF8  6E03               	movwf	___awmod@divisor^0,c
  2413   000EFA  EC33  F009         	call	___awmod	;wreg free
  2414   000EFE  C001  F007         	movff	?___awmod,abs@a
  2415   000F02  C002  F008         	movff	?___awmod+1,abs@a+1
  2416   000F06  EC44  F00C         	call	_abs	;wreg free
  2417   000F0A  5007               	movf	?_abs^0,w,c
  2418   000F0C  0F30               	addlw	48
  2419   000F0E  6EDF               	movwf	indf2,c
  2420   000F10                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2422   000F10  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2423   000F14  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2424   000F18  0E00               	movlw	0
  2425   000F1A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2426   000F1C  0E0A               	movlw	10
  2427   000F1E  6E03               	movwf	___awdiv@divisor^0,c
  2428   000F20  EC74  F008         	call	___awdiv	;wreg free
  2429   000F24  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  2430   000F28  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2431   000F2C                     
  2432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  2433   000F2C  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  2434   000F2E  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2435   000F30                     
  2436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2437   000F30  5013               	movf	vfpfcnvrt@convarg^0,w,c
  2438   000F32  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2439   000F34  B4D8               	btfsc	status,2,c
  2440   000F36  EF9F  F007         	goto	u1231
  2441   000F3A  EFA1  F007         	goto	u1230
  2442   000F3E                     u1231:
  2443   000F3E  EFA9  F007         	goto	l2521
  2444   000F42                     u1230:
  2445   000F42  5017               	movf	vfpfcnvrt@c^0,w,c
  2446   000F44  A4D8               	btfss	status,2,c
  2447   000F46  EFA7  F007         	goto	u1241
  2448   000F4A  EFA9  F007         	goto	u1240
  2449   000F4E                     u1241:
  2450   000F4E  EF70  F007         	goto	l2511
  2451   000F52                     u1240:
  2452   000F52                     l2521:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2455   000F52  5017               	movf	vfpfcnvrt@c^0,w,c
  2456   000F54  B4D8               	btfsc	status,2,c
  2457   000F56  EFAF  F007         	goto	u1251
  2458   000F5A  EFB1  F007         	goto	u1250
  2459   000F5E                     u1251:
  2460   000F5E  EFD2  F007         	goto	l2533
  2461   000F62                     u1250:
  2462   000F62  500F               	movf	vfpfcnvrt@done^0,w,c
  2463   000F64  B4D8               	btfsc	status,2,c
  2464   000F66  EFB7  F007         	goto	u1261
  2465   000F6A  EFB9  F007         	goto	u1260
  2466   000F6E                     u1261:
  2467   000F6E  EFD2  F007         	goto	l2533
  2468   000F72                     u1260:
  2469   000F72                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2471   000F72  0617               	decf	vfpfcnvrt@c^0,f,c
  2472   000F74  5017               	movf	vfpfcnvrt@c^0,w,c
  2473   000F76  0FA5               	addlw	low _dbuf
  2474   000F78  6ED9               	movwf	fsr2l,c
  2475   000F7A  6ADA               	clrf	fsr2h,c
  2476   000F7C  0E2D               	movlw	45
  2477   000F7E  6EDF               	movwf	indf2,c
  2478   000F80                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  2480   000F80  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  2481   000F82  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2482   000F84  EFD2  F007         	goto	l2533
  2483   000F88                     l2529:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2486   000F88  5017               	movf	vfpfcnvrt@c^0,w,c
  2487   000F8A  0FA5               	addlw	low _dbuf
  2488   000F8C  6ED9               	movwf	fsr2l,c
  2489   000F8E  6ADA               	clrf	fsr2h,c
  2490   000F90  50DF               	movf	indf2,w,c
  2491   000F92  6E0E               	movwf	??_vfpfcnvrt^0,c
  2492   000F94  500E               	movf	??_vfpfcnvrt^0,w,c
  2493   000F96  6E01               	movwf	fputc@c^0,c
  2494   000F98  6A02               	clrf	(fputc@c+1)^0,c
  2495   000F9A  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2496   000F9E  ECD6  F008         	call	_fputc	;wreg free
  2497   000FA2  2A17               	incf	vfpfcnvrt@c^0,f,c
  2498   000FA4                     l2533:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2501   000FA4  0E20               	movlw	32
  2502   000FA6  1817               	xorwf	vfpfcnvrt@c^0,w,c
  2503   000FA8  A4D8               	btfss	status,2,c
  2504   000FAA  EFD9  F007         	goto	u1271
  2505   000FAE  EFDB  F007         	goto	u1270
  2506   000FB2                     u1271:
  2507   000FB2  EFC4  F007         	goto	l2529
  2508   000FB6                     u1270:
  2509   000FB6                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  2511   000FB6  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  2512   000FBA  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  2513   000FBE  EF04  F008         	goto	l1485
  2514   000FC2                     l2535:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2518   000FC2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2519   000FC4  6ED9               	movwf	fsr2l,c
  2520   000FC6  6ADA               	clrf	fsr2h,c
  2521   000FC8  2ADF               	incf	indf2,f,c
  2522   000FCA                     
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2525   000FCA  0E00               	movlw	0
  2526   000FCC  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2527   000FCE  0E00               	movlw	0
  2528   000FD0  6E0B               	movwf	?_vfpfcnvrt^0,c
  2529   000FD2  EF04  F008         	goto	l1485
  2530   000FD6                     l2541:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2533   000FD6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2534   000FD8  6ED9               	movwf	fsr2l,c
  2535   000FDA  6ADA               	clrf	fsr2h,c
  2536   000FDC  CFDF FFF6          	movff	indf2,tblptrl
  2537   000FE0                     	if	1	;There is more than 1 active tblptr byte
  2538   000FE0  0E0E               	movlw	high __smallconst
  2539   000FE2  6EF7               	movwf	tblptrh,c
  2540   000FE4                     	endif
  2541   000FE4                     	if	0	;tblptru may be non-zero
  2542   000FE4                     	endif
  2543   000FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2544   000FE4  0E00               	movlw	low (__smallconst shr (0+16))
  2545   000FE6  6EF8               	movwf	tblptru,c
  2546   000FE8                     	endif
  2547   000FE8  0008               	tblrd		*
  2548   000FEA  50F5               	movf	tablat,w,c
  2549   000FEC  6E01               	movwf	fputc@c^0,c
  2550   000FEE  6A02               	clrf	(fputc@c+1)^0,c
  2551   000FF0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2552   000FF4  ECD6  F008         	call	_fputc	;wreg free
  2553   000FF8                     
  2554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2555   000FF8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2556   000FFA  6ED9               	movwf	fsr2l,c
  2557   000FFC  6ADA               	clrf	fsr2h,c
  2558   000FFE  2ADF               	incf	indf2,f,c
  2559   001000                     
  2560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2561   001000  0E00               	movlw	0
  2562   001002  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2563   001004  0E01               	movlw	1
  2564   001006  6E0B               	movwf	?_vfpfcnvrt^0,c
  2565   001008                     l1485:
  2566   001008  0012               	return		;funcret
  2567   00100A                     __end_of_vfpfcnvrt:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _fputc *****************
  2571 ;; Defined at:
  2572 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  c               2    0[COMRAM] int 
  2575 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2576 ;;		 -> sprintf@f(12), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  2    0[COMRAM] int 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2588 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;Total ram usage:        8 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 2
  2595 ;; This function calls:
  2596 ;;		_putch
  2597 ;; This function is called by:
  2598 ;;		_vfpfcnvrt
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text17
  2603   0011AC                     __ptext17:
  2604                           	callstack 0
  2605   0011AC                     _fputc:
  2606                           	callstack 23
  2607   0011AC  5003               	movf	fputc@fp^0,w,c
  2608   0011AE  B4D8               	btfsc	status,2,c
  2609   0011B0  EFDC  F008         	goto	u1091
  2610   0011B4  EFDE  F008         	goto	u1090
  2611   0011B8                     u1091:
  2612   0011B8  EFE6  F008         	goto	l2455
  2613   0011BC                     u1090:
  2614   0011BC  5003               	movf	fputc@fp^0,w,c
  2615   0011BE  A4D8               	btfss	status,2,c
  2616   0011C0  EFE4  F008         	goto	u1101
  2617   0011C4  EFE6  F008         	goto	u1100
  2618   0011C8                     u1101:
  2619   0011C8  EFEB  F008         	goto	l2457
  2620   0011CC                     u1100:
  2621   0011CC                     l2455:
  2622   0011CC  5001               	movf	fputc@c^0,w,c
  2623   0011CE  EC3E  F00D         	call	_putch
  2624   0011D2  EF32  F009         	goto	l1510
  2625   0011D6                     l2457:
  2626   0011D6  5003               	movf	fputc@fp^0,w,c
  2627   0011D8  6ED9               	movwf	fsr2l,c
  2628   0011DA  6ADA               	clrf	fsr2h,c
  2629   0011DC  0E0A               	movlw	10
  2630   0011DE  26D9               	addwf	fsr2l,f,c
  2631   0011E0  50DE               	movf	postinc2,w,c
  2632   0011E2  10DE               	iorwf	postinc2,w,c
  2633   0011E4  B4D8               	btfsc	status,2,c
  2634   0011E6  EFF7  F008         	goto	u1111
  2635   0011EA  EFF9  F008         	goto	u1110
  2636   0011EE                     u1111:
  2637   0011EE  EF12  F009         	goto	l2461
  2638   0011F2                     u1110:
  2639   0011F2  5003               	movf	fputc@fp^0,w,c
  2640   0011F4  6ED9               	movwf	fsr2l,c
  2641   0011F6  6ADA               	clrf	fsr2h,c
  2642   0011F8  0E0A               	movlw	10
  2643   0011FA  26D9               	addwf	fsr2l,f,c
  2644   0011FC  5003               	movf	fputc@fp^0,w,c
  2645   0011FE  6EE1               	movwf	fsr1l,c
  2646   001200  6AE2               	clrf	fsr1h,c
  2647   001202  0E03               	movlw	3
  2648   001204  26E1               	addwf	fsr1l,f,c
  2649   001206  50DE               	movf	postinc2,w,c
  2650   001208  5CE6               	subwf	postinc1,w,c
  2651   00120A  50E6               	movf	postinc1,w,c
  2652   00120C  0A80               	xorlw	128
  2653   00120E  6E08               	movwf	(??_fputc+4)^0,c
  2654   001210  50DE               	movf	postinc2,w,c
  2655   001212  0A80               	xorlw	128
  2656   001214  5808               	subwfb	(??_fputc+4)^0,w,c
  2657   001216  B0D8               	btfsc	status,0,c
  2658   001218  EF10  F009         	goto	u1121
  2659   00121C  EF12  F009         	goto	u1120
  2660   001220                     u1121:
  2661   001220  EF32  F009         	goto	l1510
  2662   001224                     u1120:
  2663   001224                     l2461:
  2664   001224  5003               	movf	fputc@fp^0,w,c
  2665   001226  6ED9               	movwf	fsr2l,c
  2666   001228  6ADA               	clrf	fsr2h,c
  2667   00122A  0E03               	movlw	3
  2668   00122C  26D9               	addwf	fsr2l,f,c
  2669   00122E  CFDE F004          	movff	postinc2,??_fputc
  2670   001232  CFDD F005          	movff	postdec2,??_fputc+1
  2671   001236  5003               	movf	fputc@fp^0,w,c
  2672   001238  6ED9               	movwf	fsr2l,c
  2673   00123A  6ADA               	clrf	fsr2h,c
  2674   00123C  CFDE F006          	movff	postinc2,??_fputc+2
  2675   001240  CFDD F007          	movff	postdec2,??_fputc+3
  2676   001244  5004               	movf	??_fputc^0,w,c
  2677   001246  2406               	addwf	(??_fputc+2)^0,w,c
  2678   001248  6ED9               	movwf	fsr2l,c
  2679   00124A  5005               	movf	(??_fputc+1)^0,w,c
  2680   00124C  2007               	addwfc	(??_fputc+3)^0,w,c
  2681   00124E  6EDA               	movwf	fsr2h,c
  2682   001250  C001  FFDF         	movff	fputc@c,indf2
  2683   001254  5003               	movf	fputc@fp^0,w,c
  2684   001256  6ED9               	movwf	fsr2l,c
  2685   001258  6ADA               	clrf	fsr2h,c
  2686   00125A  0E03               	movlw	3
  2687   00125C  26D9               	addwf	fsr2l,f,c
  2688   00125E  2ADE               	incf	postinc2,f,c
  2689   001260  0E00               	movlw	0
  2690   001262  22DD               	addwfc	postdec2,f,c
  2691   001264                     l1510:
  2692   001264  0012               	return		;funcret
  2693   001266                     __end_of_fputc:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _putch *****************
  2697 ;; Defined at:
  2698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  c               1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  c               1    0[COMRAM] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_fputc
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text18
  2727   001A7C                     __ptext18:
  2728                           	callstack 0
  2729   001A7C                     _putch:
  2730                           	callstack 23
  2731   001A7C  0012               	return		;funcret
  2732   001A7E                     __end_of_putch:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _abs *****************
  2736 ;; Defined at:
  2737 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  a               2    6[COMRAM] int 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  2    6[COMRAM] int 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;Total ram usage:        4 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_vfpfcnvrt
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text19
  2766   001888                     __ptext19:
  2767                           	callstack 0
  2768   001888                     _abs:
  2769                           	callstack 24
  2770   001888  BE08               	btfsc	(abs@a+1)^0,7,c
  2771   00188A  EF49  F00C         	goto	u1131
  2772   00188E  EF4B  F00C         	goto	u1130
  2773   001892                     u1131:
  2774   001892  EF51  F00C         	goto	l1495
  2775   001896                     u1130:
  2776   001896  C007  F007         	movff	abs@a,?_abs
  2777   00189A  C008  F008         	movff	abs@a+1,?_abs+1
  2778   00189E  EF5D  F00C         	goto	l1498
  2779   0018A2                     l1495:
  2780   0018A2  C007  F009         	movff	abs@a,??_abs
  2781   0018A6  C008  F00A         	movff	abs@a+1,??_abs+1
  2782   0018AA  1E09               	comf	??_abs^0,f,c
  2783   0018AC  1E0A               	comf	(??_abs+1)^0,f,c
  2784   0018AE  4A09               	infsnz	??_abs^0,f,c
  2785   0018B0  2A0A               	incf	(??_abs+1)^0,f,c
  2786   0018B2  C009  F007         	movff	??_abs,?_abs
  2787   0018B6  C00A  F008         	movff	??_abs+1,?_abs+1
  2788   0018BA                     l1498:
  2789   0018BA  0012               	return		;funcret
  2790   0018BC                     __end_of_abs:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function ___awmod *****************
  2794 ;; Defined at:
  2795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  dividend        2    0[COMRAM] int 
  2798 ;;  divisor         2    2[COMRAM] int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  sign            1    5[COMRAM] unsigned char 
  2801 ;;  counter         1    4[COMRAM] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  2    0[COMRAM] int 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;Total ram usage:        6 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_vfpfcnvrt
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text20
  2826   001266                     __ptext20:
  2827                           	callstack 0
  2828   001266                     ___awmod:
  2829                           	callstack 24
  2830   001266  0E00               	movlw	0
  2831   001268  6E06               	movwf	___awmod@sign^0,c
  2832   00126A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2833   00126C  EF3C  F009         	goto	u1030
  2834   001270  EF3A  F009         	goto	u1031
  2835   001274                     u1031:
  2836   001274  EF42  F009         	goto	l2423
  2837   001278                     u1030:
  2838   001278  6C01               	negf	___awmod@dividend^0,c
  2839   00127A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2840   00127C  B0D8               	btfsc	status,0,c
  2841   00127E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2842   001280  0E01               	movlw	1
  2843   001282  6E06               	movwf	___awmod@sign^0,c
  2844   001284                     l2423:
  2845   001284  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2846   001286  EF49  F009         	goto	u1040
  2847   00128A  EF47  F009         	goto	u1041
  2848   00128E                     u1041:
  2849   00128E  EF4D  F009         	goto	l2427
  2850   001292                     u1040:
  2851   001292  6C03               	negf	___awmod@divisor^0,c
  2852   001294  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2853   001296  B0D8               	btfsc	status,0,c
  2854   001298  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2855   00129A                     l2427:
  2856   00129A  5003               	movf	___awmod@divisor^0,w,c
  2857   00129C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2858   00129E  B4D8               	btfsc	status,2,c
  2859   0012A0  EF54  F009         	goto	u1051
  2860   0012A4  EF56  F009         	goto	u1050
  2861   0012A8                     u1051:
  2862   0012A8  EF7A  F009         	goto	l2443
  2863   0012AC                     u1050:
  2864   0012AC  0E01               	movlw	1
  2865   0012AE  6E05               	movwf	___awmod@counter^0,c
  2866   0012B0  EF5E  F009         	goto	l2433
  2867   0012B4                     l2431:
  2868   0012B4  90D8               	bcf	status,0,c
  2869   0012B6  3603               	rlcf	___awmod@divisor^0,f,c
  2870   0012B8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2871   0012BA  2A05               	incf	___awmod@counter^0,f,c
  2872   0012BC                     l2433:
  2873   0012BC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2874   0012BE  EF63  F009         	goto	u1061
  2875   0012C2  EF65  F009         	goto	u1060
  2876   0012C6                     u1061:
  2877   0012C6  EF5A  F009         	goto	l2431
  2878   0012CA                     u1060:
  2879   0012CA                     l2435:
  2880   0012CA  5003               	movf	___awmod@divisor^0,w,c
  2881   0012CC  5C01               	subwf	___awmod@dividend^0,w,c
  2882   0012CE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2883   0012D0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2884   0012D2  A0D8               	btfss	status,0,c
  2885   0012D4  EF6E  F009         	goto	u1071
  2886   0012D8  EF70  F009         	goto	u1070
  2887   0012DC                     u1071:
  2888   0012DC  EF74  F009         	goto	l2439
  2889   0012E0                     u1070:
  2890   0012E0  5003               	movf	___awmod@divisor^0,w,c
  2891   0012E2  5E01               	subwf	___awmod@dividend^0,f,c
  2892   0012E4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2893   0012E6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2894   0012E8                     l2439:
  2895   0012E8  90D8               	bcf	status,0,c
  2896   0012EA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2897   0012EC  3203               	rrcf	___awmod@divisor^0,f,c
  2898   0012EE  2E05               	decfsz	___awmod@counter^0,f,c
  2899   0012F0  EF65  F009         	goto	l2435
  2900   0012F4                     l2443:
  2901   0012F4  5006               	movf	___awmod@sign^0,w,c
  2902   0012F6  B4D8               	btfsc	status,2,c
  2903   0012F8  EF80  F009         	goto	u1081
  2904   0012FC  EF82  F009         	goto	u1080
  2905   001300                     u1081:
  2906   001300  EF86  F009         	goto	l2447
  2907   001304                     u1080:
  2908   001304  6C01               	negf	___awmod@dividend^0,c
  2909   001306  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2910   001308  B0D8               	btfsc	status,0,c
  2911   00130A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2912   00130C                     l2447:
  2913   00130C  C001  F001         	movff	___awmod@dividend,?___awmod
  2914   001310  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2915   001314  0012               	return		;funcret
  2916   001316                     __end_of___awmod:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function ___awdiv *****************
  2920 ;; Defined at:
  2921 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  dividend        2    0[COMRAM] int 
  2924 ;;  divisor         2    2[COMRAM] int 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  quotient        2    6[COMRAM] int 
  2927 ;;  sign            1    5[COMRAM] unsigned char 
  2928 ;;  counter         1    4[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  2    0[COMRAM] int 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;Total ram usage:        8 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_vfpfcnvrt
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text21
  2953   0010E8                     __ptext21:
  2954                           	callstack 0
  2955   0010E8                     ___awdiv:
  2956                           	callstack 24
  2957   0010E8  0E00               	movlw	0
  2958   0010EA  6E06               	movwf	___awdiv@sign^0,c
  2959   0010EC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2960   0010EE  EF7D  F008         	goto	u970
  2961   0010F2  EF7B  F008         	goto	u971
  2962   0010F6                     u971:
  2963   0010F6  EF83  F008         	goto	l2379
  2964   0010FA                     u970:
  2965   0010FA  6C03               	negf	___awdiv@divisor^0,c
  2966   0010FC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2967   0010FE  B0D8               	btfsc	status,0,c
  2968   001100  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2969   001102  0E01               	movlw	1
  2970   001104  6E06               	movwf	___awdiv@sign^0,c
  2971   001106                     l2379:
  2972   001106  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2973   001108  EF8A  F008         	goto	u980
  2974   00110C  EF88  F008         	goto	u981
  2975   001110                     u981:
  2976   001110  EF90  F008         	goto	l2385
  2977   001114                     u980:
  2978   001114  6C01               	negf	___awdiv@dividend^0,c
  2979   001116  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2980   001118  B0D8               	btfsc	status,0,c
  2981   00111A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2982   00111C  0E01               	movlw	1
  2983   00111E  1A06               	xorwf	___awdiv@sign^0,f,c
  2984   001120                     l2385:
  2985   001120  0E00               	movlw	0
  2986   001122  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2987   001124  0E00               	movlw	0
  2988   001126  6E07               	movwf	___awdiv@quotient^0,c
  2989   001128  5003               	movf	___awdiv@divisor^0,w,c
  2990   00112A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2991   00112C  B4D8               	btfsc	status,2,c
  2992   00112E  EF9B  F008         	goto	u991
  2993   001132  EF9D  F008         	goto	u990
  2994   001136                     u991:
  2995   001136  EFC5  F008         	goto	l2407
  2996   00113A                     u990:
  2997   00113A  0E01               	movlw	1
  2998   00113C  6E05               	movwf	___awdiv@counter^0,c
  2999   00113E  EFA5  F008         	goto	l2393
  3000   001142                     l2391:
  3001   001142  90D8               	bcf	status,0,c
  3002   001144  3603               	rlcf	___awdiv@divisor^0,f,c
  3003   001146  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3004   001148  2A05               	incf	___awdiv@counter^0,f,c
  3005   00114A                     l2393:
  3006   00114A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3007   00114C  EFAA  F008         	goto	u1001
  3008   001150  EFAC  F008         	goto	u1000
  3009   001154                     u1001:
  3010   001154  EFA1  F008         	goto	l2391
  3011   001158                     u1000:
  3012   001158                     l2395:
  3013   001158  90D8               	bcf	status,0,c
  3014   00115A  3607               	rlcf	___awdiv@quotient^0,f,c
  3015   00115C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3016   00115E  5003               	movf	___awdiv@divisor^0,w,c
  3017   001160  5C01               	subwf	___awdiv@dividend^0,w,c
  3018   001162  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3019   001164  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3020   001166  A0D8               	btfss	status,0,c
  3021   001168  EFB8  F008         	goto	u1011
  3022   00116C  EFBA  F008         	goto	u1010
  3023   001170                     u1011:
  3024   001170  EFBF  F008         	goto	l2403
  3025   001174                     u1010:
  3026   001174  5003               	movf	___awdiv@divisor^0,w,c
  3027   001176  5E01               	subwf	___awdiv@dividend^0,f,c
  3028   001178  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3029   00117A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3030   00117C  8007               	bsf	___awdiv@quotient^0,0,c
  3031   00117E                     l2403:
  3032   00117E  90D8               	bcf	status,0,c
  3033   001180  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3034   001182  3203               	rrcf	___awdiv@divisor^0,f,c
  3035   001184  2E05               	decfsz	___awdiv@counter^0,f,c
  3036   001186  EFAC  F008         	goto	l2395
  3037   00118A                     l2407:
  3038   00118A  5006               	movf	___awdiv@sign^0,w,c
  3039   00118C  B4D8               	btfsc	status,2,c
  3040   00118E  EFCB  F008         	goto	u1021
  3041   001192  EFCD  F008         	goto	u1020
  3042   001196                     u1021:
  3043   001196  EFD1  F008         	goto	l2411
  3044   00119A                     u1020:
  3045   00119A  6C07               	negf	___awdiv@quotient^0,c
  3046   00119C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3047   00119E  B0D8               	btfsc	status,0,c
  3048   0011A0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3049   0011A2                     l2411:
  3050   0011A2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3051   0011A6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3052   0011AA  0012               	return		;funcret
  3053   0011AC                     __end_of___awdiv:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _sendStringSerial4 *****************
  3057 ;; Defined at:
  3058 ;;		line 35 in file "serial.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  string          2    1[COMRAM] PTR unsigned char 
  3061 ;;		 -> sendRGBCvalSerial4@tempStr(41), STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;Total ram usage:        2 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 2
  3080 ;; This function calls:
  3081 ;;		_sendCharSerial4
  3082 ;; This function is called by:
  3083 ;;		_sendIntSerial4
  3084 ;;		_sendArrayCharSerial4
  3085 ;;		_sendRGBCvalSerial4
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text22
  3090   001496                     __ptext22:
  3091                           	callstack 0
  3092   001496                     _sendStringSerial4:
  3093                           	callstack 26
  3094   001496                     
  3095                           ;serial.c: 37:     while(*string != 0){
  3096   001496  EF62  F00A         	goto	l2749
  3097   00149A                     l2745:
  3098                           
  3099                           ;serial.c: 38:   sendCharSerial4(*string++);
  3100   00149A  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  3101   00149E  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  3102   0014A2  0E00               	movlw	low (__smallconst shr (0+16))
  3103   0014A4  6EF8               	movwf	tblptru,c
  3104   0014A6  0E0D               	movlw	(high __ramtop+-1)
  3105   0014A8  64F7               	cpfsgt	tblptrh,c
  3106   0014AA  D003               	bra	u1487
  3107   0014AC  0008               	tblrd		*
  3108   0014AE  50F5               	movf	tablat,w,c
  3109   0014B0  D005               	bra	u1480
  3110   0014B2                     u1487:
  3111   0014B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3112   0014B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3113   0014BA  50EF               	movf	indf0,w,c
  3114   0014BC                     u1480:
  3115   0014BC  ECFA  F00C         	call	_sendCharSerial4
  3116   0014C0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3117   0014C2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3118   0014C4                     l2749:
  3119                           
  3120                           ;serial.c: 37:     while(*string != 0){
  3121   0014C4  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  3122   0014C8  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  3123   0014CC  0E00               	movlw	low (__smallconst shr (0+16))
  3124   0014CE  6EF8               	movwf	tblptru,c
  3125   0014D0  0E0D               	movlw	(high __ramtop+-1)
  3126   0014D2  64F7               	cpfsgt	tblptrh,c
  3127   0014D4  D003               	bra	u1497
  3128   0014D6  0008               	tblrd		*
  3129   0014D8  50F5               	movf	tablat,w,c
  3130   0014DA  D005               	bra	u1490
  3131   0014DC                     u1497:
  3132   0014DC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3133   0014E0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3134   0014E4  50EF               	movf	indf0,w,c
  3135   0014E6                     u1490:
  3136   0014E6  0900               	iorlw	0
  3137   0014E8  A4D8               	btfss	status,2,c
  3138   0014EA  EF79  F00A         	goto	u1501
  3139   0014EE  EF7B  F00A         	goto	u1500
  3140   0014F2                     u1501:
  3141   0014F2  EF4D  F00A         	goto	l2745
  3142   0014F6                     u1500:
  3143   0014F6  0012               	return		;funcret
  3144   0014F8                     __end_of_sendStringSerial4:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function _sendCharSerial4 *****************
  3148 ;; Defined at:
  3149 ;;		line 29 in file "serial.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  charToSend      1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  charToSend      1    0[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_sendStringSerial4
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text23
  3178   0019F4                     __ptext23:
  3179                           	callstack 0
  3180   0019F4                     _sendCharSerial4:
  3181                           	callstack 26
  3182                           
  3183                           ;incstack = 0
  3184                           ;sendCharSerial4@charToSend stored from wreg
  3185   0019F4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3186   0019F6                     l431:
  3187   0019F6  010E               	movlb	14	; () banked
  3188   0019F8  A537               	btfss	55,2,b	;volatile
  3189   0019FA  EF01  F00D         	goto	u1461
  3190   0019FE  EF03  F00D         	goto	u1460
  3191   001A02                     u1461:
  3192   001A02  EFFB  F00C         	goto	l431
  3193   001A06                     u1460:
  3194   001A06                     
  3195                           ; BSR set to: 14
  3196                           ;serial.c: 31:     TX4REG = charToSend;
  3197   001A06  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3198   001A0A                     
  3199                           ; BSR set to: 14
  3200   001A0A  0012               	return		;funcret
  3201   001A0C                     __end_of_sendCharSerial4:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _read_timer *****************
  3205 ;; Defined at:
  3206 ;;		line 26 in file "timers.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  tH              1    0[COMRAM] PTR unsigned char 
  3209 ;;		 -> main@timerH(1), 
  3210 ;;  tL              1    1[COMRAM] PTR unsigned char 
  3211 ;;		 -> main@timerL(1), 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr2l, fsr2h, status,2
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;Total ram usage:        2 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text24
  3238   001A0C                     __ptext24:
  3239                           	callstack 0
  3240   001A0C                     _read_timer:
  3241                           	callstack 29
  3242   001A0C                     
  3243                           ;timers.c: 26: void read_timer(unsigned char *tH, unsigned char *tL);timers.c: 27: {;tim
      +                          ers.c: 31:     *tL = TMR0L;
  3244   001A0C  5002               	movf	read_timer@tL^0,w,c
  3245   001A0E  6ED9               	movwf	fsr2l,c
  3246   001A10  6ADA               	clrf	fsr2h,c
  3247   001A12  CFD3 FFDF          	movff	4051,indf2	;volatile
  3248                           
  3249                           ;timers.c: 32:     *tH = TMR0H;
  3250   001A16  5001               	movf	read_timer@tH^0,w,c
  3251   001A18  6ED9               	movwf	fsr2l,c
  3252   001A1A  6ADA               	clrf	fsr2h,c
  3253   001A1C  CFD4 FFDF          	movff	4052,indf2	;volatile
  3254   001A20  0012               	return		;funcret
  3255   001A22                     __end_of_read_timer:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _initUSART4 *****************
  3259 ;; Defined at:
  3260 ;;		line 5 in file "serial.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text25
  3289   0019D6                     __ptext25:
  3290                           	callstack 0
  3291   0019D6                     _initUSART4:
  3292                           	callstack 29
  3293   0019D6                     
  3294                           ;serial.c: 9:     RC0PPS = 0x12;
  3295   0019D6  0E12               	movlw	18
  3296   0019D8  010E               	movlb	14	; () banked
  3297   0019DA  6F62               	movwf	98,b	;volatile
  3298                           
  3299                           ;serial.c: 10:     RX4PPS = 0x11;
  3300   0019DC  0E11               	movlw	17
  3301   0019DE  6F15               	movwf	21,b	;volatile
  3302   0019E0                     
  3303                           ; BSR set to: 14
  3304                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3305   0019E0  97E9               	bcf	233,3,b	;volatile
  3306   0019E2                     
  3307                           ; BSR set to: 14
  3308                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3309   0019E2  95E8               	bcf	232,2,b	;volatile
  3310                           
  3311                           ;serial.c: 14:     SP4BRGL = 51;
  3312   0019E4  0E33               	movlw	51
  3313   0019E6  6FE5               	movwf	229,b	;volatile
  3314                           
  3315                           ;serial.c: 15:     SP4BRGH = 0;
  3316   0019E8  0E00               	movlw	0
  3317   0019EA  6FE6               	movwf	230,b	;volatile
  3318   0019EC                     
  3319                           ; BSR set to: 14
  3320                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3321   0019EC  89E7               	bsf	231,4,b	;volatile
  3322   0019EE                     
  3323                           ; BSR set to: 14
  3324                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3325   0019EE  8BE8               	bsf	232,5,b	;volatile
  3326   0019F0                     
  3327                           ; BSR set to: 14
  3328                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3329   0019F0  8FE7               	bsf	231,7,b	;volatile
  3330   0019F2                     
  3331                           ; BSR set to: 14
  3332   0019F2  0012               	return		;funcret
  3333   0019F4                     __end_of_initUSART4:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _initDCmotorsPWM *****************
  3337 ;; Defined at:
  3338 ;;		line 5 in file "dc_motor.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;Total ram usage:        2 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text26
  3367   001316                     __ptext26:
  3368                           	callstack 0
  3369   001316                     _initDCmotorsPWM:
  3370                           	callstack 29
  3371   001316                     
  3372                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  3373   001316  9485               	bcf	133,2,c	;volatile
  3374                           
  3375                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  3376   001318  9885               	bcf	133,4,c	;volatile
  3377                           
  3378                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  3379   00131A  9E83               	bcf	131,7,c	;volatile
  3380                           
  3381                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  3382   00131C  9C87               	bcf	135,6,c	;volatile
  3383                           
  3384                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  3385   00131E  947D               	bcf	125,2,c	;volatile
  3386                           
  3387                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  3388   001320  987D               	bcf	125,4,c	;volatile
  3389                           
  3390                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  3391   001322  9E7B               	bcf	123,7,c	;volatile
  3392                           
  3393                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  3394   001324  9C7F               	bcf	127,6,c	;volatile
  3395   001326                     
  3396                           ;dc_motor.c: 18:     RE2PPS=0x05;
  3397   001326  0E05               	movlw	5
  3398   001328  010E               	movlb	14	; () banked
  3399   00132A  6F74               	movwf	116,b	;volatile
  3400                           
  3401                           ;dc_motor.c: 19:     RE4PPS=0x06;
  3402   00132C  0E06               	movlw	6
  3403   00132E  6F76               	movwf	118,b	;volatile
  3404                           
  3405                           ;dc_motor.c: 20:     RC7PPS=0x07;
  3406   001330  0E07               	movlw	7
  3407   001332  6F69               	movwf	105,b	;volatile
  3408                           
  3409                           ;dc_motor.c: 21:     RG6PPS=0x08;
  3410   001334  0E08               	movlw	8
  3411   001336  6F88               	movwf	136,b	;volatile
  3412                           
  3413                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  3414   001338  50BD               	movf	189,w,c	;volatile
  3415   00133A  0B8F               	andlw	-113
  3416   00133C  0940               	iorlw	64
  3417   00133E  6EBD               	movwf	189,c	;volatile
  3418                           
  3419                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  3420   001340  0EE0               	movlw	-32
  3421   001342  16BE               	andwf	190,f,c	;volatile
  3422                           
  3423                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  3424   001344  50BF               	movf	191,w,c	;volatile
  3425   001346  0BF0               	andlw	-16
  3426   001348  0901               	iorlw	1
  3427   00134A  6EBF               	movwf	191,c	;volatile
  3428   00134C                     
  3429                           ; BSR set to: 14
  3430                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  3431   00134C  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3432   001350                     
  3433                           ; BSR set to: 14
  3434                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  3435   001350  8EBD               	bsf	189,7,c	;volatile
  3436                           
  3437                           ;dc_motor.c: 35:     CCPR1H=0;
  3438   001352  0E00               	movlw	0
  3439   001354  6EAA               	movwf	170,c	;volatile
  3440                           
  3441                           ;dc_motor.c: 36:     CCPR2H=0;
  3442   001356  0E00               	movlw	0
  3443   001358  6EA6               	movwf	166,c	;volatile
  3444                           
  3445                           ;dc_motor.c: 37:     CCPR3H=0;
  3446   00135A  0E00               	movlw	0
  3447   00135C  010F               	movlb	15	; () banked
  3448   00135E  6F25               	movwf	37,b	;volatile
  3449                           
  3450                           ;dc_motor.c: 38:     CCPR4H=0;
  3451   001360  0E00               	movlw	0
  3452   001362  6F21               	movwf	33,b	;volatile
  3453                           
  3454                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  3455   001364  0EFC               	movlw	-4
  3456   001366  16AD               	andwf	173,f,c	;volatile
  3457                           
  3458                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  3459   001368  0EF3               	movlw	-13
  3460   00136A  16AD               	andwf	173,f,c	;volatile
  3461                           
  3462                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  3463   00136C  0ECF               	movlw	-49
  3464   00136E  16AD               	andwf	173,f,c	;volatile
  3465                           
  3466                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  3467   001370  0E3F               	movlw	-193
  3468   001372  16AD               	andwf	173,f,c	;volatile
  3469   001374                     
  3470                           ; BSR set to: 15
  3471                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  3472   001374  88AB               	bsf	171,4,c	;volatile
  3473                           
  3474                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  3475   001376  50AB               	movf	171,w,c	;volatile
  3476   001378  0BF0               	andlw	-16
  3477   00137A  090C               	iorlw	12
  3478   00137C  6EAB               	movwf	171,c	;volatile
  3479   00137E                     
  3480                           ; BSR set to: 15
  3481                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  3482   00137E  8EAB               	bsf	171,7,c	;volatile
  3483   001380                     
  3484                           ; BSR set to: 15
  3485                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  3486   001380  88A7               	bsf	167,4,c	;volatile
  3487                           
  3488                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  3489   001382  50A7               	movf	167,w,c	;volatile
  3490   001384  0BF0               	andlw	-16
  3491   001386  090C               	iorlw	12
  3492   001388  6EA7               	movwf	167,c	;volatile
  3493   00138A                     
  3494                           ; BSR set to: 15
  3495                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  3496   00138A  8EA7               	bsf	167,7,c	;volatile
  3497   00138C                     
  3498                           ; BSR set to: 15
  3499                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  3500   00138C  8926               	bsf	38,4,b	;volatile
  3501                           
  3502                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  3503   00138E  5126               	movf	38,w,b	;volatile
  3504   001390  0BF0               	andlw	-16
  3505   001392  090C               	iorlw	12
  3506   001394  6F26               	movwf	38,b	;volatile
  3507   001396                     
  3508                           ; BSR set to: 15
  3509                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  3510   001396  8F26               	bsf	38,7,b	;volatile
  3511   001398                     
  3512                           ; BSR set to: 15
  3513                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  3514   001398  8922               	bsf	34,4,b	;volatile
  3515                           
  3516                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  3517   00139A  5122               	movf	34,w,b	;volatile
  3518   00139C  0BF0               	andlw	-16
  3519   00139E  090C               	iorlw	12
  3520   0013A0  6F22               	movwf	34,b	;volatile
  3521   0013A2                     
  3522                           ; BSR set to: 15
  3523                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  3524   0013A2  8F22               	bsf	34,7,b	;volatile
  3525   0013A4                     
  3526                           ; BSR set to: 15
  3527   0013A4  0012               	return		;funcret
  3528   0013A6                     __end_of_initDCmotorsPWM:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _color_click_init *****************
  3532 ;; Defined at:
  3533 ;;		line 4 in file "color.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;Total ram usage:        1 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; Hardware stack levels required when called: 4
  3554 ;; This function calls:
  3555 ;;		_I2C_2_Master_Init
  3556 ;;		_color_writetoaddr
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text27
  3563   0018BC                     __ptext27:
  3564                           	callstack 0
  3565   0018BC                     _color_click_init:
  3566                           	callstack 26
  3567   0018BC                     
  3568                           ;color.c: 7:     I2C_2_Master_Init();
  3569   0018BC  EC8F  F00C         	call	_I2C_2_Master_Init	;wreg free
  3570   0018C0                     
  3571                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3572   0018C0  0E01               	movlw	1
  3573   0018C2  6E03               	movwf	color_writetoaddr@value^0,c
  3574   0018C4  0E00               	movlw	0
  3575   0018C6  ECDB  F00C         	call	_color_writetoaddr
  3576   0018CA                     
  3577                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3578   0018CA  0E3F               	movlw	63
  3579   0018CC  6E05               	movwf	??_color_click_init^0,c
  3580   0018CE  0E55               	movlw	85
  3581   0018D0                     u2727:
  3582   0018D0  2EE8               	decfsz	wreg,f,c
  3583   0018D2  D7FE               	bra	u2727
  3584   0018D4  2E05               	decfsz	??_color_click_init^0,f,c
  3585   0018D6  D7FC               	bra	u2727
  3586   0018D8  0000               	nop	
  3587   0018DA                     
  3588                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  3589   0018DA  0E03               	movlw	3
  3590   0018DC  6E03               	movwf	color_writetoaddr@value^0,c
  3591   0018DE  0E00               	movlw	0
  3592   0018E0  ECDB  F00C         	call	_color_writetoaddr
  3593   0018E4                     
  3594                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  3595   0018E4  0ED5               	movlw	213
  3596   0018E6  6E03               	movwf	color_writetoaddr@value^0,c
  3597   0018E8  0E01               	movlw	1
  3598   0018EA  ECDB  F00C         	call	_color_writetoaddr
  3599   0018EE  0012               	return		;funcret
  3600   0018F0                     __end_of_color_click_init:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _color_writetoaddr *****************
  3604 ;; Defined at:
  3605 ;;		line 20 in file "color.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  address         1    wreg     unsigned char 
  3608 ;;  value           1    2[COMRAM] unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  address         1    3[COMRAM] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3620 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 3
  3627 ;; This function calls:
  3628 ;;		_I2C_2_Master_Start
  3629 ;;		_I2C_2_Master_Stop
  3630 ;;		_I2C_2_Master_Write
  3631 ;; This function is called by:
  3632 ;;		_color_click_init
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text28
  3637   0019B6                     __ptext28:
  3638                           	callstack 0
  3639   0019B6                     _color_writetoaddr:
  3640                           	callstack 26
  3641                           
  3642                           ;incstack = 0
  3643                           ;color_writetoaddr@address stored from wreg
  3644   0019B6  6E04               	movwf	color_writetoaddr@address^0,c
  3645   0019B8                     
  3646                           ;color.c: 21:     I2C_2_Master_Start();
  3647   0019B8  EC39  F00D         	call	_I2C_2_Master_Start	;wreg free
  3648                           
  3649                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3650   0019BC  0E52               	movlw	82
  3651   0019BE  EC18  F00D         	call	_I2C_2_Master_Write
  3652                           
  3653                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3654   0019C2  5004               	movf	color_writetoaddr@address^0,w,c
  3655   0019C4  0980               	iorlw	128
  3656   0019C6  EC18  F00D         	call	_I2C_2_Master_Write
  3657                           
  3658                           ;color.c: 24:     I2C_2_Master_Write(value);
  3659   0019CA  5003               	movf	color_writetoaddr@value^0,w,c
  3660   0019CC  EC18  F00D         	call	_I2C_2_Master_Write
  3661                           
  3662                           ;color.c: 25:     I2C_2_Master_Stop();
  3663   0019D0  EC34  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3664   0019D4  0012               	return		;funcret
  3665   0019D6                     __end_of_color_writetoaddr:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _I2C_2_Master_Write *****************
  3669 ;; Defined at:
  3670 ;;		line 45 in file "i2c.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  data_byte       1    wreg     unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  data_byte       1    1[COMRAM] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;Total ram usage:        1 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 2
  3691 ;; This function calls:
  3692 ;;		_I2C_2_Master_Idle
  3693 ;; This function is called by:
  3694 ;;		_color_writetoaddr
  3695 ;;		_color_read_Red
  3696 ;;		_color_read_Blue
  3697 ;;		_color_read_Green
  3698 ;;		_color_read_Clear
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text29
  3703   001A30                     __ptext29:
  3704                           	callstack 0
  3705   001A30                     _I2C_2_Master_Write:
  3706                           	callstack 25
  3707                           
  3708                           ;incstack = 0
  3709                           ;I2C_2_Master_Write@data_byte stored from wreg
  3710   001A30  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3711   001A32                     
  3712                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3713   001A32  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3714   001A36                     
  3715                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3716   001A36  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3717   001A3A  0012               	return		;funcret
  3718   001A3C                     __end_of_I2C_2_Master_Write:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _I2C_2_Master_Stop *****************
  3722 ;; Defined at:
  3723 ;;		line 39 in file "i2c.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 2
  3744 ;; This function calls:
  3745 ;;		_I2C_2_Master_Idle
  3746 ;; This function is called by:
  3747 ;;		_color_writetoaddr
  3748 ;;		_color_read_Red
  3749 ;;		_color_read_Blue
  3750 ;;		_color_read_Green
  3751 ;;		_color_read_Clear
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text30
  3756   001A68                     __ptext30:
  3757                           	callstack 0
  3758   001A68                     _I2C_2_Master_Stop:
  3759                           	callstack 25
  3760   001A68                     
  3761                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3762   001A68  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3763   001A6C                     
  3764                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3765   001A6C  010E               	movlb	14	; () banked
  3766   001A6E  85DA               	bsf	218,2,b	;volatile
  3767   001A70                     
  3768                           ; BSR set to: 14
  3769   001A70  0012               	return		;funcret
  3770   001A72                     __end_of_I2C_2_Master_Stop:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _I2C_2_Master_Start *****************
  3774 ;; Defined at:
  3775 ;;		line 27 in file "i2c.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 2
  3796 ;; This function calls:
  3797 ;;		_I2C_2_Master_Idle
  3798 ;; This function is called by:
  3799 ;;		_color_writetoaddr
  3800 ;;		_color_read_Red
  3801 ;;		_color_read_Blue
  3802 ;;		_color_read_Green
  3803 ;;		_color_read_Clear
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text31
  3808   001A72                     __ptext31:
  3809                           	callstack 0
  3810   001A72                     _I2C_2_Master_Start:
  3811                           	callstack 25
  3812   001A72                     
  3813                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3814   001A72  ECA4  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3815   001A76                     
  3816                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3817   001A76  010E               	movlb	14	; () banked
  3818   001A78  81DA               	bsf	218,0,b	;volatile
  3819   001A7A                     
  3820                           ; BSR set to: 14
  3821   001A7A  0012               	return		;funcret
  3822   001A7C                     __end_of_I2C_2_Master_Start:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _I2C_2_Master_Idle *****************
  3826 ;; Defined at:
  3827 ;;		line 22 in file "i2c.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;Total ram usage:        1 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_I2C_2_Master_Start
  3852 ;;		_I2C_2_Master_RepStart
  3853 ;;		_I2C_2_Master_Stop
  3854 ;;		_I2C_2_Master_Write
  3855 ;;		_I2C_2_Master_Read
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text32
  3860   001948                     __ptext32:
  3861                           	callstack 0
  3862   001948                     _I2C_2_Master_Idle:
  3863                           	callstack 25
  3864   001948                     l259:
  3865   001948  010E               	movlb	14	; () banked
  3866   00194A  B5D8               	btfsc	216,2,b	;volatile
  3867   00194C  EFAA  F00C         	goto	u1161
  3868   001950  EFAC  F00C         	goto	u1160
  3869   001954                     u1161:
  3870   001954  EFA4  F00C         	goto	l259
  3871   001958                     u1160:
  3872   001958                     
  3873                           ; BSR set to: 14
  3874   001958  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3875   00195C  0E1F               	movlw	31
  3876   00195E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3877   001960  A4D8               	btfss	status,2,c
  3878   001962  EFB5  F00C         	goto	u1171
  3879   001966  EFB7  F00C         	goto	u1170
  3880   00196A                     u1171:
  3881   00196A  EFA4  F00C         	goto	l259
  3882   00196E                     u1170:
  3883   00196E                     
  3884                           ; BSR set to: 14
  3885   00196E  0012               	return		;funcret
  3886   001970                     __end_of_I2C_2_Master_Idle:
  3887                           	callstack 0
  3888                           
  3889 ;; *************** function _I2C_2_Master_Init *****************
  3890 ;; Defined at:
  3891 ;;		line 4 in file "i2c.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;Total ram usage:        0 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_color_click_init
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text33
  3920   00191E                     __ptext33:
  3921                           	callstack 0
  3922   00191E                     _I2C_2_Master_Init:
  3923                           	callstack 28
  3924   00191E                     
  3925                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3926   00191E  010E               	movlb	14	; () banked
  3927   001920  51D9               	movf	217,w,b	;volatile
  3928   001922  0BF0               	andlw	-16
  3929   001924  0908               	iorlw	8
  3930   001926  6FD9               	movwf	217,b	;volatile
  3931   001928                     
  3932                           ; BSR set to: 14
  3933                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3934   001928  8BD9               	bsf	217,5,b	;volatile
  3935                           
  3936                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3937   00192A  0E9F               	movlw	159
  3938   00192C  6FD6               	movwf	214,b	;volatile
  3939   00192E                     
  3940                           ; BSR set to: 14
  3941                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3942   00192E  8A84               	bsf	132,5,c	;volatile
  3943   001930                     
  3944                           ; BSR set to: 14
  3945                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3946   001930  8C84               	bsf	132,6,c	;volatile
  3947   001932                     
  3948                           ; BSR set to: 14
  3949                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3950   001932  9BA7               	bcf	167,5,b	;volatile
  3951   001934                     
  3952                           ; BSR set to: 14
  3953                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3954   001934  9DA7               	bcf	167,6,b	;volatile
  3955                           
  3956                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3957   001936  0E1D               	movlw	29
  3958   001938  6F1D               	movwf	29,b	;volatile
  3959                           
  3960                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3961   00193A  0E1E               	movlw	30
  3962   00193C  6F1C               	movwf	28,b	;volatile
  3963                           
  3964                           ;i2c.c: 18:   RD5PPS=0x1C;
  3965   00193E  0E1C               	movlw	28
  3966   001940  6F6F               	movwf	111,b	;volatile
  3967                           
  3968                           ;i2c.c: 19:   RD6PPS=0x1B;
  3969   001942  0E1B               	movlw	27
  3970   001944  6F70               	movwf	112,b	;volatile
  3971   001946                     
  3972                           ; BSR set to: 14
  3973   001946  0012               	return		;funcret
  3974   001948                     __end_of_I2C_2_Master_Init:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _buggy_lights_init *****************
  3978 ;; Defined at:
  3979 ;;		line 4 in file "buggy_lights.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		None
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 1
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_main
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text34
  4008   0018F0                     __ptext34:
  4009                           	callstack 0
  4010   0018F0                     _buggy_lights_init:
  4011                           	callstack 29
  4012   0018F0                     
  4013                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  4014   0018F0  9884               	bcf	132,4,c	;volatile
  4015                           
  4016                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  4017   0018F2  9288               	bcf	136,1,c	;volatile
  4018                           
  4019                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  4020   0018F4  9684               	bcf	132,3,c	;volatile
  4021                           
  4022                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  4023   0018F6  9086               	bcf	134,0,c	;volatile
  4024                           
  4025                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  4026   0018F8  9088               	bcf	136,0,c	;volatile
  4027                           
  4028                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  4029   0018FA  987C               	bcf	124,4,c	;volatile
  4030                           
  4031                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  4032   0018FC  9280               	bcf	128,1,c	;volatile
  4033                           
  4034                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  4035   0018FE  967C               	bcf	124,3,c	;volatile
  4036                           
  4037                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  4038   001900  907E               	bcf	126,0,c	;volatile
  4039                           
  4040                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  4041   001902  9080               	bcf	128,0,c	;volatile
  4042                           
  4043                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  4044   001904  9287               	bcf	135,1,c	;volatile
  4045                           
  4046                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  4047   001906  9881               	bcf	129,4,c	;volatile
  4048                           
  4049                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  4050   001908  9E86               	bcf	134,7,c	;volatile
  4051                           
  4052                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  4053   00190A  927F               	bcf	127,1,c	;volatile
  4054                           
  4055                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  4056   00190C  9879               	bcf	121,4,c	;volatile
  4057                           
  4058                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  4059   00190E  9E7E               	bcf	126,7,c	;volatile
  4060                           
  4061                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  4062   001910  9087               	bcf	135,0,c	;volatile
  4063                           
  4064                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  4065   001912  9E85               	bcf	133,7,c	;volatile
  4066                           
  4067                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  4068   001914  9681               	bcf	129,3,c	;volatile
  4069                           
  4070                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  4071   001916  907F               	bcf	127,0,c	;volatile
  4072                           
  4073                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  4074   001918  9E7D               	bcf	125,7,c	;volatile
  4075                           
  4076                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  4077   00191A  9679               	bcf	121,3,c	;volatile
  4078   00191C  0012               	return		;funcret
  4079   00191E                     __end_of_buggy_lights_init:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _Timer0_init *****************
  4083 ;; Defined at:
  4084 ;;		line 7 in file "timers.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 3
  4105 ;; This function calls:
  4106 ;;		_reset_timer
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text35
  4113   001970                     __ptext35:
  4114                           	callstack 0
  4115   001970                     _Timer0_init:
  4116                           	callstack 27
  4117   001970                     
  4118                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4119   001970  50D6               	movf	214,w,c	;volatile
  4120   001972  0B1F               	andlw	-225
  4121   001974  0940               	iorlw	64
  4122   001976  6ED6               	movwf	214,c	;volatile
  4123   001978                     
  4124                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4125   001978  88D6               	bsf	214,4,c	;volatile
  4126   00197A                     
  4127                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  4128   00197A  88D5               	bsf	213,4,c	;volatile
  4129                           
  4130                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  4131   00197C  50D6               	movf	214,w,c	;volatile
  4132   00197E  0BF0               	andlw	-16
  4133   001980  090E               	iorlw	14
  4134   001982  6ED6               	movwf	214,c	;volatile
  4135   001984                     
  4136                           ;timers.c: 18:     reset_timer();
  4137   001984  EC1E  F00D         	call	_reset_timer	;wreg free
  4138   001988                     
  4139                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  4140   001988  8ED5               	bsf	213,7,c	;volatile
  4141   00198A                     
  4142                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  4143   00198A  010E               	movlb	14	; () banked
  4144   00198C  8B29               	bsf	41,5,b	;volatile
  4145   00198E                     
  4146                           ; BSR set to: 14
  4147                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  4148   00198E  8CF2               	bsf	242,6,c	;volatile
  4149   001990                     
  4150                           ; BSR set to: 14
  4151                           ;timers.c: 23:     INTCONbits.GIE = 1;
  4152   001990  8EF2               	bsf	242,7,c	;volatile
  4153   001992                     
  4154                           ; BSR set to: 14
  4155   001992  0012               	return		;funcret
  4156   001994                     __end_of_Timer0_init:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _reset_timer *****************
  4160 ;; Defined at:
  4161 ;;		line 44 in file "timers.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 2
  4182 ;; This function calls:
  4183 ;;		_write_timer
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;;		_Timer0_init
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text36
  4191   001A3C                     __ptext36:
  4192                           	callstack 0
  4193   001A3C                     _reset_timer:
  4194                           	callstack 28
  4195   001A3C                     
  4196                           ;timers.c: 46:     write_timer(0, 0);
  4197   001A3C  0E00               	movlw	0
  4198   001A3E  6E01               	movwf	write_timer@tL^0,c
  4199   001A40  0E00               	movlw	0
  4200   001A42  EC24  F00D         	call	_write_timer
  4201   001A46  0012               	return		;funcret
  4202   001A48                     __end_of_reset_timer:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _write_timer *****************
  4206 ;; Defined at:
  4207 ;;		line 35 in file "timers.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  tH              1    wreg     unsigned char 
  4210 ;;  tL              1    0[COMRAM] unsigned char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  tH              1    1[COMRAM] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4222 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 1
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_reset_timer
  4233 ;;		_return_to_sender
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text37
  4238   001A48                     __ptext37:
  4239                           	callstack 0
  4240   001A48                     _write_timer:
  4241                           	callstack 28
  4242                           
  4243                           ;incstack = 0
  4244                           ;write_timer@tH stored from wreg
  4245   001A48  6E02               	movwf	write_timer@tH^0,c
  4246   001A4A                     
  4247                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  4248   001A4A  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  4249   001A4E                     
  4250                           ;timers.c: 41:     TMR0L = tL;
  4251   001A4E  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  4252   001A52  0012               	return		;funcret
  4253   001A54                     __end_of_write_timer:
  4254                           	callstack 0
  4255                           
  4256 ;; *************** function _ISR *****************
  4257 ;; Defined at:
  4258 ;;		line 97 in file "timers.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		Interrupt level 2
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	intcode
  4286   000008                     __pintcode:
  4287                           	callstack 0
  4288   000008                     _ISR:
  4289                           	callstack 23
  4290                           
  4291                           ;incstack = 0
  4292   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4293   00000A                     
  4294                           ;timers.c: 100:     if (PIR0bits.TMR0IF) {
  4295   00000A  010E               	movlb	14	; () banked
  4296   00000C  AB33               	btfss	51,5,b	;volatile
  4297   00000E  EF0B  F000         	goto	i2u95_41
  4298   000012  EF0D  F000         	goto	i2u95_40
  4299   000016                     i2u95_41:
  4300   000016  EF18  F000         	goto	i2l694
  4301   00001A                     i2u95_40:
  4302   00001A                     
  4303                           ; BSR set to: 14
  4304                           ;timers.c: 101:         if (returning) {
  4305   00001A  5050               	movf	_returning^0,w,c
  4306   00001C  B4D8               	btfsc	status,2,c
  4307   00001E  EF13  F000         	goto	i2u96_41
  4308   000022  EF15  F000         	goto	i2u96_40
  4309   000026                     i2u96_41:
  4310   000026  EF17  F000         	goto	i2l693
  4311   00002A                     i2u96_40:
  4312   00002A                     
  4313                           ; BSR set to: 14
  4314                           ;timers.c: 102:             return_flag = 1;
  4315   00002A  0E01               	movlw	1
  4316   00002C  6E4F               	movwf	_return_flag^0,c
  4317   00002E                     i2l693:
  4318                           
  4319                           ; BSR set to: 14
  4320                           ;timers.c: 107:         PIR0bits.TMR0IF = 0;
  4321   00002E  9B33               	bcf	51,5,b	;volatile
  4322   000030                     i2l694:
  4323                           
  4324                           ; BSR set to: 14
  4325   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4326   000032  0011               	retfie		f
  4327   000034                     __end_of_ISR:
  4328                           	callstack 0
  4329                           
  4330                           	psect	rparam
  4331   000000                     
  4332                           	psect	temp
  4333   00005F                     btemp:
  4334                           	callstack 0
  4335   00005F                     	ds	1
  4336   000000                     int$flags	set	btemp
  4337   000000                     wtemp8	set	btemp+1
  4338   000000                     ttemp5	set	btemp+1
  4339   000000                     ttemp6	set	btemp+4
  4340   000000                     ttemp7	set	btemp+8
  4341                           
  4342                           	psect	idloc
  4343                           
  4344                           ;Config register IDLOC0 @ 0x200000
  4345                           ;	unspecified, using default values
  4346   200000                     	org	2097152
  4347   200000  FFFF               	dw	65535
  4348                           
  4349                           ;Config register IDLOC1 @ 0x200002
  4350                           ;	unspecified, using default values
  4351   200002                     	org	2097154
  4352   200002  FFFF               	dw	65535
  4353                           
  4354                           ;Config register IDLOC2 @ 0x200004
  4355                           ;	unspecified, using default values
  4356   200004                     	org	2097156
  4357   200004  FFFF               	dw	65535
  4358                           
  4359                           ;Config register IDLOC3 @ 0x200006
  4360                           ;	unspecified, using default values
  4361   200006                     	org	2097158
  4362   200006  FFFF               	dw	65535
  4363                           
  4364                           ;Config register IDLOC4 @ 0x200008
  4365                           ;	unspecified, using default values
  4366   200008                     	org	2097160
  4367   200008  FFFF               	dw	65535
  4368                           
  4369                           ;Config register IDLOC5 @ 0x20000A
  4370                           ;	unspecified, using default values
  4371   20000A                     	org	2097162
  4372   20000A  FFFF               	dw	65535
  4373                           
  4374                           ;Config register IDLOC6 @ 0x20000C
  4375                           ;	unspecified, using default values
  4376   20000C                     	org	2097164
  4377   20000C  FFFF               	dw	65535
  4378                           
  4379                           ;Config register IDLOC7 @ 0x20000E
  4380                           ;	unspecified, using default values
  4381   20000E                     	org	2097166
  4382   20000E  FFFF               	dw	65535
  4383                           
  4384                           	psect	config
  4385                           
  4386                           ;Config register CONFIG1L @ 0x300000
  4387                           ;	External Oscillator mode Selection bits
  4388                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4389                           ;	Power-up default value for COSC bits
  4390                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4391   300000                     	org	3145728
  4392   300000  AA                 	db	170
  4393                           
  4394                           ;Config register CONFIG1H @ 0x300001
  4395                           ;	unspecified, using default values
  4396                           ;	Clock Out Enable bit
  4397                           ;	CLKOUTEN = 0x1, unprogrammed default
  4398                           ;	Clock Switch Enable bit
  4399                           ;	CSWEN = 0x1, unprogrammed default
  4400                           ;	Fail-Safe Clock Monitor Enable bit
  4401                           ;	FCMEN = 0x1, unprogrammed default
  4402   300001                     	org	3145729
  4403   300001  FF                 	db	255
  4404                           
  4405                           ;Config register CONFIG2L @ 0x300002
  4406                           ;	unspecified, using default values
  4407                           ;	Master Clear Enable bit
  4408                           ;	MCLRE = 0x1, unprogrammed default
  4409                           ;	Power-up Timer Enable bit
  4410                           ;	PWRTE = 0x1, unprogrammed default
  4411                           ;	Low-power BOR enable bit
  4412                           ;	LPBOREN = 0x1, unprogrammed default
  4413                           ;	Brown-out Reset Enable bits
  4414                           ;	BOREN = 0x3, unprogrammed default
  4415   300002                     	org	3145730
  4416   300002  FF                 	db	255
  4417                           
  4418                           ;Config register CONFIG2H @ 0x300003
  4419                           ;	unspecified, using default values
  4420                           ;	Brown Out Reset Voltage selection bits
  4421                           ;	BORV = 0x3, unprogrammed default
  4422                           ;	ZCD Disable bit
  4423                           ;	ZCD = 0x1, unprogrammed default
  4424                           ;	PPSLOCK bit One-Way Set Enable bit
  4425                           ;	PPS1WAY = 0x1, unprogrammed default
  4426                           ;	Stack Full/Underflow Reset Enable bit
  4427                           ;	STVREN = 0x1, unprogrammed default
  4428                           ;	Debugger Enable bit
  4429                           ;	DEBUG = 0x1, unprogrammed default
  4430                           ;	Extended Instruction Set Enable bit
  4431                           ;	XINST = 0x1, unprogrammed default
  4432   300003                     	org	3145731
  4433   300003  FF                 	db	255
  4434                           
  4435                           ;Config register CONFIG3L @ 0x300004
  4436                           ;	WDT Period Select bits
  4437                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4438                           ;	WDT operating mode
  4439                           ;	WDTE = OFF, WDT Disabled
  4440   300004                     	org	3145732
  4441   300004  9F                 	db	159
  4442                           
  4443                           ;Config register CONFIG3H @ 0x300005
  4444                           ;	unspecified, using default values
  4445                           ;	WDT Window Select bits
  4446                           ;	WDTCWS = 0x7, unprogrammed default
  4447                           ;	WDT input clock selector
  4448                           ;	WDTCCS = 0x7, unprogrammed default
  4449   300005                     	org	3145733
  4450   300005  FF                 	db	255
  4451                           
  4452                           ;Config register CONFIG4L @ 0x300006
  4453                           ;	unspecified, using default values
  4454                           ;	Write Protection Block 0
  4455                           ;	WRT0 = 0x1, unprogrammed default
  4456                           ;	Write Protection Block 1
  4457                           ;	WRT1 = 0x1, unprogrammed default
  4458                           ;	Write Protection Block 2
  4459                           ;	WRT2 = 0x1, unprogrammed default
  4460                           ;	Write Protection Block 3
  4461                           ;	WRT3 = 0x1, unprogrammed default
  4462                           ;	Write Protection Block 3
  4463                           ;	WRT4 = 0x1, unprogrammed default
  4464                           ;	Write Protection Block 3
  4465                           ;	WRT5 = 0x1, unprogrammed default
  4466                           ;	Write Protection Block 3
  4467                           ;	WRT6 = 0x1, unprogrammed default
  4468                           ;	Write Protection Block 3
  4469                           ;	WRT7 = 0x1, unprogrammed default
  4470   300006                     	org	3145734
  4471   300006  FF                 	db	255
  4472                           
  4473                           ;Config register CONFIG4H @ 0x300007
  4474                           ;	unspecified, using default values
  4475                           ;	Configuration Register Write Protection bit
  4476                           ;	WRTC = 0x1, unprogrammed default
  4477                           ;	Boot Block Write Protection bit
  4478                           ;	WRTB = 0x1, unprogrammed default
  4479                           ;	Data EEPROM Write Protection bit
  4480                           ;	WRTD = 0x1, unprogrammed default
  4481                           ;	Scanner Enable bit
  4482                           ;	SCANE = 0x1, unprogrammed default
  4483                           ;	Low Voltage Programming Enable bit
  4484                           ;	LVP = 0x1, unprogrammed default
  4485   300007                     	org	3145735
  4486   300007  FF                 	db	255
  4487                           
  4488                           ;Config register CONFIG5L @ 0x300008
  4489                           ;	unspecified, using default values
  4490                           ;	UserNVM Program Memory Code Protection bit
  4491                           ;	CP = 0x1, unprogrammed default
  4492                           ;	DataNVM Memory Code Protection bit
  4493                           ;	CPD = 0x1, unprogrammed default
  4494   300008                     	org	3145736
  4495   300008  FF                 	db	255
  4496                           
  4497                           ;Config register CONFIG5H @ 0x300009
  4498                           ;	unspecified, using default values
  4499   300009                     	org	3145737
  4500   300009  FF                 	db	255
  4501                           
  4502                           ;Config register CONFIG6L @ 0x30000A
  4503                           ;	unspecified, using default values
  4504                           ;	Table Read Protection Block 0
  4505                           ;	EBTR0 = 0x1, unprogrammed default
  4506                           ;	Table Read Protection Block 1
  4507                           ;	EBTR1 = 0x1, unprogrammed default
  4508                           ;	Table Read Protection Block 2
  4509                           ;	EBTR2 = 0x1, unprogrammed default
  4510                           ;	Table Read Protection Block 3
  4511                           ;	EBTR3 = 0x1, unprogrammed default
  4512                           ;	Table Read Protection Block 4
  4513                           ;	EBTR4 = 0x1, unprogrammed default
  4514                           ;	Table Read Protection Block 5
  4515                           ;	EBTR5 = 0x1, unprogrammed default
  4516                           ;	Table Read Protection Block 6
  4517                           ;	EBTR6 = 0x1, unprogrammed default
  4518                           ;	Table Read Protection Block 7
  4519                           ;	EBTR7 = 0x1, unprogrammed default
  4520   30000A                     	org	3145738
  4521   30000A  FF                 	db	255
  4522                           
  4523                           ;Config register CONFIG6H @ 0x30000B
  4524                           ;	unspecified, using default values
  4525                           ;	Boot Block Table Read Protection bit
  4526                           ;	EBTRB = 0x1, unprogrammed default
  4527   30000B                     	org	3145739
  4528   30000B  FF                 	db	255
  4529                           tosu	equ	0xFFF
  4530                           tosh	equ	0xFFE
  4531                           tosl	equ	0xFFD
  4532                           stkptr	equ	0xFFC
  4533                           pclatu	equ	0xFFB
  4534                           pclath	equ	0xFFA
  4535                           pcl	equ	0xFF9
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           prodh	equ	0xFF4
  4541                           prodl	equ	0xFF3
  4542                           indf0	equ	0xFEF
  4543                           postinc0	equ	0xFEE
  4544                           postdec0	equ	0xFED
  4545                           preinc0	equ	0xFEC
  4546                           plusw0	equ	0xFEB
  4547                           fsr0h	equ	0xFEA
  4548                           fsr0l	equ	0xFE9
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           postinc1	equ	0xFE6
  4552                           postdec1	equ	0xFE5
  4553                           preinc1	equ	0xFE4
  4554                           plusw1	equ	0xFE3
  4555                           fsr1h	equ	0xFE2
  4556                           fsr1l	equ	0xFE1
  4557                           bsr	equ	0xFE0
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           preinc2	equ	0xFDC
  4562                           plusw2	equ	0xFDB
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        24
    BSS         186
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      94
    BANK0           160     69     139
    BANK1           256    164     224
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    read_timer@tH	PTR unsigned char  size(1) Largest target is 1
		 -> main@timerH(BANK0[1]), 

    read_timer@tL	PTR unsigned char  size(1) Largest target is 1
		 -> main@timerL(BANK0[1]), 

    S1090DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1090DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2715$buffer	PTR unsigned char  size(2) Largest target is 0

    S2715$source	PTR const unsigned char  size(2) Largest target is 0

    sendArrayCharSerial4@arr	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), trail_timer_high(BANK1[20]), trail_timer_low(BANK1[20]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    wait_for_wall@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 


Critical Paths under _main in COMRAM

    _wait_for_wall->_getRGBCval
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _test_serial->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sendArrayCharSerial4->_sprintf
    _sendRGBCvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sendRGBCvalSerial4

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _test_serial->_sendArrayCharSerial4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   16446
                                             72 COMRAM     2     2      0
                                             41 BANK0     28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                         _read_timer
                        _reset_timer
                 _sendRGBCvalSerial4
                        _test_serial
                      _wait_for_wall
                        _write_trail
 ---------------------------------------------------------------------------------
 (1) _write_trail                                          3     1      2     218
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _wait_for_wall                                        3     2      1     812
                                             12 COMRAM     3     2      1
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (2) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _test_serial                                          0     0      0    8747
               _sendArrayCharSerial4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (2) _sendIntSerial4                                      19    17      2    4227
                                             53 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendArrayCharSerial4                               167   165      2    4520
                                             53 COMRAM     3     1      2
                                              0 BANK1    164   164      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  42    41      1    4217
                                             53 COMRAM     1     0      1
                                              0 BANK0     41    41      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             26    15     11    3632
                                             27 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_timer                                           2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (1) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (2) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _read_timer
   _reset_timer
   _sendRGBCvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _test_serial
     _sendArrayCharSerial4
       _sendStringSerial4
       _sprintf
     _sendIntSerial4
       _sendStringSerial4
       _sprintf
   _wait_for_wall
     _getRGBCval
   _write_trail

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      E0       7       87.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     205      61        0.0%
DATA                 0      0     205       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 06 13:13:14 2024

                 _turn180Delay 00E1                ??_wait_for_wall 000E                 _color_read_Red 15FE  
              _color_read_Blue 16EE                _trail_timer_low 01B8         ??_sendArrayCharSerial4 0038  
                           l27 191C                             l63 18EE                             l72 173C  
                           l81 15AA                             l66 19D4                             l75 169C  
                           l84 173E                             l69 164C                             l78 16EC  
                           l88 1788                   ___awdiv@sign 0006               _trail_timer_high 01CC  
             _color_read_Clear 169E               _color_read_Green 164E                            l161 13A4  
                          l262 196E                            l422 19F2                            l271 1A70  
                          l431 19F6                            l256 1946                            l440 14F6  
                          l265 1A7A                            l274 1A3A                            l434 1A0A  
                          l259 1948                            l451 1554                            l443 19B4  
                          l268 1A66                            l277 1816                            l448 1494  
                          l661 1992                            l670 1A46                            l664 1A20  
                          l762 1850                            l667 1A52                            l676 1886  
                          l996 11AA                            _ISR 0008                            u970 10FA  
                          u971 10F6                            u980 1114                            u981 1110  
                          u990 113A                            u991 1136                            _abs 1888  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00DD  
                         ?_ISR 0001                           l1009 1314                           ?_abs 0007  
                         l3001 1854                           l3011 1880                           l3003 1860  
                         l3013 1884                           l3005 186C                           l1510 1264  
                         l3007 1878                           l2401 117C                           l1521 1A7C  
                         l3017 14F8                           l3009 187C                           l2411 11A2  
                         l2403 117E                           l1443 17D4                           l3019 154A  
                         l2405 1184                           l2421 1280                           l2501 0E66  
                         l2407 118A                           l2431 12B4                           l2423 1284  
                         l2415 1266                           l2511 0EE0                           l2503 0E86  
                         l2409 119A                           l2441 12EE                           l2433 12BC  
                         l2425 1292                           l2417 126A                           l2521 0F52  
                         l2513 0F10                           l2505 0EA6                           l1490 15F4  
                         l2371 10E8                           l2435 12CA                           l2443 12F4  
                         l2427 129A                           l2419 1278                           l2451 11AC  
                         l2531 0FA2                           l2523 0F62                           l2515 0F2C  
                         l2507 0EBE                           l1491 15FC                           l1484 0FB6  
                         l2381 1114                           l2373 10EC                           l2445 1304  
                         l2437 12E0                           l2429 12AC                           l2461 1224  
                         l2453 11BC                           l1485 1008                           l2525 0F72  
                         l2533 0FA4                           l2517 0F30                           l2509 0EC8  
                         l2541 0FD6                           l2551 1A76                           l2391 1142  
                         l2383 111C                           l2375 10FA                           l2447 130C  
                         l2439 12E8                           l1495 18A2                           l2455 11CC  
                         l2543 0FF8                           l2527 0F80                           l2519 0F42  
                         l2535 0FC2                           l2553 1A32                           l2393 114A  
                         l2385 1120                           l2377 1102                           l2465 1888  
                         l2457 11D6                           l2545 1000                           l2537 0FCA  
                         l2529 0F88                           l2561 1A5E                           l1498 18BA  
                         l2555 1A36                           l2395 1158                           l2387 1128  
                         l2379 1106                           l2467 1896                           l2459 11F2  
                         l2491 0E1C                           l2571 17EC                           l2563 1A62  
                         l2485 1948                           l2549 1A72                           l2557 1A68  
                         l2397 115E                           l2389 113A                           l2493 0E42  
                         l2573 1812                           l2565 17D8                           l2487 1958  
                         l2559 1A6C                           l2911 18CA                           l2743 1496  
                         l2399 1174                           l2495 0E4A                           l2671 15B0  
                         l2751 178A                           l2575 1814                           l2567 17DC  
                         l2905 18F0                           l2913 18DA                           l2665 19F6  
                         l2745 149A                           l2497 0E58                           l2489 0E14  
                         l2673 15BC                           l2761 17CC                           l2753 1796  
                         l3713 1818                           l2569 17E4                           l2771 1928  
                         l2915 18E4                           l2907 18BC                           l2931 1350  
                         l2667 1A06                           l2747 14C0                           l2499 0E5C  
                         l2675 15D4                           l2755 179E                           l2683 16EE  
                         l2691 1694                           l2923 1766                           l2765 1A4A  
                         l2773 192E                           l2781 19B8                           l2909 18C0  
                         l2941 138C                           l2933 1374                           l2925 1316  
                         l2749 14C4                           l2669 15AC                           l2757 17A6  
                         l2685 1734                           l2677 15FE                           l2917 173E  
                         l3741 100A                           l2767 1A4E                           l2775 1930  
                         l2943 1396                           l2935 137E                           l2927 1326  
                         l2759 17BE                           l3583 142E                           l2695 169E  
                         l2679 1644                           l2783 1556                           l2919 1746  
                         l3751 1044                           l3743 1018                           l2785 1A3C  
                         l2777 1932                           l2769 191E                           l2945 1398  
                         l2937 1380                           l2929 134C                           l3585 145E  
                         l3577 1420                           l2697 16E4                           l2689 164E  
                         l3761 106C                           l3753 104C                           l3745 1020  
                         l2779 1934                           l2947 13A2                           l2939 138A  
                         l2971 19D6                           l3587 1462                           l2787 1994  
                         l3771 1078                           l3763 1070                           l3755 1054  
                         l3747 1028                           l2981 19F0                           l2973 19E0  
                         l3589 1478                           l2789 19AA                           l3781 1088  
                         l3773 107A                           l3765 1072                           l3757 1064  
                         l3749 103C                           l2991 1988                           l2983 1970  
                         l2975 19E2                           l3791 10A4                           l3783 108C  
                         l3775 107C                           l3767 1074                           l3759 1068  
                         l2993 198A                           l2985 1978                           l2977 19EC  
                         l3793 10B4                           l3785 108C                           l3777 1080  
                         l3769 1076                           l2995 198E                           l2987 197A  
                         l2979 19EE                           l3795 10B8                           l3787 1090  
                         l3779 1082                           l2997 1990                           l2989 1984  
                         l3797 10C0                           l3789 1098                           l2999 1A0C  
                         l3799 10C8                           STR_1 0E0A                           STR_2 0E0F  
                         STR_3 0E0F                           STR_4 0E0C                           STR_5 0E01  
                         u1000 1158                           u1001 1154                           u1010 1174  
                         u1011 1170                           u1020 119A                           u1100 11CC  
                         u1021 1196                           u1101 11C8                           u1030 1278  
                         u1110 11F2                           u1031 1274                           u1111 11EE  
                         u1040 1292                           u1120 1224                           u1200 0EA6  
                         u1041 128E                           u1121 1220                           u1201 0EA2  
                         u1050 12AC                           u1130 1896                           u1210 0EDC  
                         u1051 12A8                           u1131 1892                           u1211 0ED6  
                         u1060 12CA                           u1220 0EDE                           u1061 12C6  
                         u1070 12E0                           u1230 0F42                           u1071 12DC  
                         u1231 0F3E                           u1160 1958                           u1080 1304  
                         u1240 0F52                           u1161 1954                           u1081 1300  
                         u1241 0F4E                           u1170 196E                           u1090 11BC  
                         u1250 0F62                           u1171 196A                           u1091 11B8  
                         u1251 0F5E                           u1500 14F6                           u1260 0F72  
                         u1180 0E42                           u1501 14F2                           u1261 0F6E  
                         u1181 0E3E                           u1270 0FB6                           u1190 0E86  
                         u1271 0FB2                           u1191 0E82                           u2240 1478  
                         u1280 1800                           u1520 1766                   _BAUD4CONbits 0EE9  
                         u2241 1474                           u1281 17F8                           u1521 1762  
                         u1530 1778                           u1531 1770                           u1460 1A06  
                         u1461 1A02                           u1470 15F4                           u1471 15F0  
                         u1480 14BC                           u1490 14E6                           u1298 1802  
                         _T2PR 0FBC                           u1548 177A                           u1487 14B2  
                         u1497 14DC                           u2717 10D2                           u2727 18D0  
                         abs@a 0007                           _dbuf 00A5                           _main 100A  
                         _prec 00DB                           _nout 004B                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005F             _sendRGBCvalSerial4 14F8  
                         start 0034         __end_of_color_read_Red 164E                   ___param_bank 0000  
                        ??_ISR 0001            ?_sendRGBCvalSerial4 0036                          ??_abs 0009  
                write_timer@tH 0002                  write_timer@tL 0001                  write_trail@tH 0003  
                write_trail@tL 0001                 _sendIntSerial4 1994                          ?_main 0001  
           _timer_high_pointer 0059                __end_of___awdiv 11AC                __end_of___awmod 1316  
              ___awdiv@divisor 0003                          i2l693 002E                          i2l694 0030  
              ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 1A0C  
   __end_of_I2C_2_Master_Start 1A7C                    _write_timer 1A48     __end_of_I2C_2_Master_Write 1A3C  
                  _write_trail 1852                    _turningGear 005B                          _flags 004D  
         ??_sendRGBCvalSerial4 0037                          _fputc 11AC                          _width 00D9  
                        _putch 1A7C              _turnRight135Delay 00E3                          tablat 0FF5  
              _turnLeft90Delay 00E9                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 0FD8                          wtemp8 0060  
              __end_of_sprintf 17D6        __end_of_color_read_Blue 173E          _I2C_2_Master_RepStart 1A5E  
              ?_color_read_Red 0005                __initialization 13A6                   __end_of_main 10E8  
       __end_of_sendIntSerial4 19B6                         ??_main 0049                  __activetblptr 0003  
               write_trail@man 0002                         ?_fputc 0001                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l2363 000A                         i2l2365 001A                         i2l2367 002A  
                       _RG6PPS 0E88                  vfpfcnvrt@done 000F       __end_of_color_click_init 18F0  
                       _RX4PPS 0E15                         _TX4REG 0EE4               _turnLeft135Delay 00E5  
                ??_Timer0_init 0003                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
    sendArrayCharSerial4@index 01A1                   vfprintf@cfmt 001B                      ??___awdiv 0005  
                    ??___awmod 0005                ?_sendIntSerial4 0036                         clear_0 13EC  
                       clear_1 13F8                         clear_2 1404                         clear_3 1410  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                         fputc@c 0001                   __pdataCOMRAM 0055  
            _timer_low_pointer 0057                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 15FE              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0027                   ?_test_serial 0001              _buggy_lights_init 18F0  
                   __accesstop 0060        __end_of__initialization 1416       __end_of_color_read_Clear 16EE  
     __end_of_color_read_Green 169E         ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001  
                ___rparam_used 0001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 1A22            ??_buggy_lights_init 0001                  __end_of_fputc 1266  
                __end_of_putch 1A7E            __end_of_Timer0_init 1994                        ??_fputc 0004  
    __end_of_buggy_lights_init 191E                        ??_putch 0001                     __pbssBANK0 00A5  
                   __pbssBANK1 01A4                     __pbssBANK2 0200                     _getRGBCval 1556  
            _color_writetoaddr 19B6                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003  
        __end_of_wait_for_wall 178A            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                   ?_write_timer 0001                   ?_write_trail 0001  
                      i2u95_40 001A                        i2u95_41 0016                        i2u96_40 002A  
                      i2u96_41 0026                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 19D6  
           _I2C_2_Master_Start 1A72                     _initUSART4 19D6             _I2C_2_Master_Write 1A30  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 1970        sendStringSerial4@string 0002                        ___awdiv 10E8  
                      ___awmod 1266            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0018                   __psmallconst 0E00          sendArrayCharSerial4@i 01A2  
                      __pcinit 13A6                        __ramtop 0E00                        __ptext0 100A  
                      __ptext1 1852                        __ptext2 173E                        __ptext3 1556  
                      __ptext4 15FE                        __ptext5 164E                        __ptext6 169E  
                      __ptext7 16EE                        __ptext8 1A5E                        __ptext9 17D6  
                   _read_timer 1A0C                      _T2CONbits 0FBD               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 0054                        _sprintf 178A  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1416  
                  ?_getRGBCval 000C                        fputc@fp 0003              ?_color_click_init 0001  
           ??_color_click_init 0005               ??_sendIntSerial4 0038              __end_of_vfpfcnvrt 100A  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0013  
                   ??_vfprintf 001B                _initDCmotorsPWM 1316           sendIntSerial4@string 0038  
                 read_timer@tH 0001                   read_timer@tL 0002                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 00C5                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
                   main@motorL 0093                     main@motorR 009C                     main@timerH 0089  
                   main@timerL 008A             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0012                    vfpfcnvrt@fp 000B  
                __pidataCOMRAM 1A54                    ?_read_timer 0001      sendRGBCvalSerial4@col_val 0036  
          color_read_Clear@tmp 000A            start_initialization 13A6                    __end_of_ISR 0034  
                  __end_of_abs 18BC                  _TxBufWriteCnt 0052               _turnRight90Delay 00E7  
    sendRGBCvalSerial4@tempStr 0060            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 13A6  
                  vfprintf@fmt 0019                    __pdataBANK0 00DD                    __pbssCOMRAM 004B  
                __pcstackBANK0 0060                  __pcstackBANK1 0100   __end_of_sendArrayCharSerial4 1496  
      sendArrayCharSerial4@arr 0036                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___awdiv 0001                       ?___awmod 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 1948  
            _I2C_2_Master_Init 191E              _I2C_2_Master_Read 17D6              _I2C_2_Master_Stop 1A68  
                 _RxBufReadCnt 0053             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                  _headbuttDelay 00DF  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C                      _rampDelay 005E  
                 ??_getRGBCval 000D              _sendStringSerial4 1496            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                       _PIE0bits 0E29             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                  ??_reset_timer 0003                       _PIR0bits 0E33  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0004                       _SSP2STAT 0ED8  
                    _returning 0050                      _vfpfcnvrt 0E14      __end_of_I2C_2_Master_Idle 1970  
    __end_of_I2C_2_Master_Init 1948      __end_of_I2C_2_Master_Read 1818      __end_of_I2C_2_Master_Stop 1A72  
  I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 15AC     __end_of_sendRGBCvalSerial4 1556  
            ??_color_read_Blue 0007                   _TxBufReadCnt 0051                     vfpfcnvrt@c 0017  
                    copy_data0 13BA                      copy_data1 13DA      __end_of_sendStringSerial4 14F8  
                ??_test_serial 0049  __end_of_I2C_2_Master_RepStart 1A68             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001A  
                     __Lrparam 0000                     vfprintf@fp 0018                 wait_for_wall@p 000D  
                   ?_vfpfcnvrt 000B            __end_of_reset_timer 1A48                  _wait_for_wall 173E  
         _sendArrayCharSerial4 1420                   ??_read_timer 0003                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                     sprintf@fmt 001E                     sprintf@ret 0027  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6             __end_of_initUSART4 19F4  
                     __ptext10 1818                       __ptext11 1994                       __ptext20 1266  
                     __ptext12 1420                       __ptext21 10E8                       __ptext13 14F8  
                     __ptext30 1A68                       __ptext22 1496                       __ptext14 178A  
                     __ptext31 1A72                       __ptext23 19F4                       __ptext15 15AC  
                     __ptext32 1948                       __ptext24 1A0C                       __ptext16 0E14  
                     __ptext33 191E                       __ptext25 19D6                       __ptext17 11AC  
                     __ptext34 18F0                       __ptext26 1316                       __ptext18 1A7C  
                     __ptext35 1970                       __ptext27 18BC                       __ptext19 1888  
                     __ptext36 1A3C                       __ptext28 19B6                       __ptext37 1A48  
                     __ptext29 1A30                    getRGBCval@p 000C            main@measured_colour 008B  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA             __end_of_read_timer 1A22  
          __end_of_test_serial 1852                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     int$flags 005F                       _vfprintf 15AC                 ?_wait_for_wall 000D  
        ?_sendArrayCharSerial4 0036                     _INTCONbits 0FF2                  ??_write_timer 0002  
                ??_write_trail 0003                       intlevel2 0000                      sprintf@ap 0029  
                 _topGearRight 005C              _manoeuvre_pointer 0055                    _reset_timer 1A3C  
                  ??_vfpfcnvrt 000E               _color_click_init 18BC          sendIntSerial4@integer 0036  
                  _topGearLeft 005D                       sprintf@f 002A                       sprintf@s 001C  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                _trail_manoeuvre 01A4  
                  _return_flag 004F                _manoeuvre_count 004E                     _TX4STAbits 0EE8  
              _sendCharSerial4 19F4            __end_of_write_timer 1A54                    _test_serial 1818  
          __end_of_write_trail 1888    sendArrayCharSerial4@tempStr 0100  
