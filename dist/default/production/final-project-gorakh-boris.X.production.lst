

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 06 12:49:40 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 18/08/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataCOMRAM
    93   001902                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for _timer_high_pointer
    97   001902  64                 	db	low _trail_timer_high
    98   001903  01                 	db	high _trail_timer_high
    99                           
   100                           ;initializer for _topGearLeft
   101   001904  14                 	db	20
   102                           
   103                           ;initializer for _rampDelay
   104   001905  08                 	db	8
   105                           
   106                           	psect	idataBANK0
   107   001898                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _manoeuvre_pointer
   111   001898  3C                 	db	low _trail_manoeuvre
   112   001899  01                 	db	high _trail_manoeuvre
   113                           
   114                           ;initializer for _timer_low_pointer
   115   00189A  50                 	db	low _trail_timer_low
   116   00189B  01                 	db	high _trail_timer_low
   117                           
   118                           ;initializer for _squareDelay
   119   00189C  012C               	dw	300
   120                           
   121                           ;initializer for _headbuttDelay
   122   00189E  0046               	dw	70
   123                           
   124                           ;initializer for _turn180Delay
   125   0018A0  01FE               	dw	510
   126                           
   127                           ;initializer for _turnRight135Delay
   128   0018A2  012C               	dw	300
   129                           
   130                           ;initializer for _turnLeft135Delay
   131   0018A4  012C               	dw	300
   132                           
   133                           ;initializer for _turnRight90Delay
   134   0018A6  00AF               	dw	175
   135                           
   136                           ;initializer for _turnLeft90Delay
   137   0018A8  00AF               	dw	175
   138                           
   139                           ;initializer for _turningGear
   140   0018AA  2A                 	db	42
   141                           
   142                           ;initializer for _topGearRight
   143   0018AB  14                 	db	20
   144                           
   145                           	psect	idataBANK1
   146   0018AC                     __pidataBANK1:
   147                           	callstack 0
   148                           
   149                           ;initializer for _trail_timer_high
   150   0018AC  03                 	db	3
   151   0018AD  06                 	db	6
   152   0018AE  03                 	db	3
   153   0018AF  06                 	db	6
   154   0018B0  03                 	db	3
   155   0018B1  06                 	db	6
   156   0018B2  03                 	db	3
   157   0018B3  06                 	db	6
   158   0018B4  03                 	db	3
   159   0018B5  06                 	db	6
   160   0018B6  03                 	db	3
   161   0018B7  06                 	db	6
   162   0018B8  03                 	db	3
   163   0018B9  06                 	db	6
   164   0018BA  03                 	db	3
   165   0018BB  06                 	db	6
   166   0018BC  03                 	db	3
   167   0018BD  06                 	db	6
   168   0018BE  03                 	db	3
   169   0018BF  06                 	db	6
   170   000000                     _TMR0H	set	4052
   171   000000                     _TX4REG	set	3812
   172   000000                     _RC4STAbits	set	3815
   173   000000                     _SP4BRGH	set	3814
   174   000000                     _LATEbits	set	3965
   175   000000                     _TRISEbits	set	3973
   176   000000                     _LATGbits	set	3967
   177   000000                     _TRISGbits	set	3975
   178   000000                     _LATFbits	set	3966
   179   000000                     _LATHbits	set	3968
   180   000000                     _TRISFbits	set	3974
   181   000000                     _TRISHbits	set	3976
   182   000000                     _SSP2CON2bits	set	3802
   183   000000                     _RX4PPS	set	3605
   184   000000                     _SSP2CLKPPS	set	3612
   185   000000                     _SSP2DATPPS	set	3613
   186   000000                     _RC7PPS	set	3689
   187   000000                     _RE2PPS	set	3700
   188   000000                     _LATAbits	set	3961
   189   000000                     _LATDbits	set	3964
   190   000000                     _TRISDbits	set	3972
   191   000000                     _T2PR	set	4028
   192   000000                     _T2CONbits	set	4029
   193   000000                     _CCPR2H	set	4006
   194   000000                     _CCPR1H	set	4010
   195   000000                     _TRISCbits	set	3971
   196   000000                     _TRISAbits	set	3969
   197   000000                     _LATCbits	set	3963
   198   000000                     _RE4PPS	set	3702
   199   000000                     _RG6PPS	set	3720
   200   000000                     _RD5PPS	set	3695
   201   000000                     _ANSELDbits	set	3751
   202   000000                     _SSP2ADD	set	3798
   203   000000                     _SSP2CON1bits	set	3801
   204   000000                     _CCPR4H	set	3873
   205   000000                     _CCPR3H	set	3877
   206   000000                     _TMR0L	set	4051
   207   000000                     _T0CON0bits	set	4053
   208   000000                     _T0CON1bits	set	4054
   209   000000                     _T2CLKCONbits	set	4031
   210   000000                     _T2HLTbits	set	4030
   211   000000                     _CCP1CONbits	set	4011
   212   000000                     _CCPTMRS0bits	set	4013
   213   000000                     _CCP2CONbits	set	4007
   214   000000                     _CCP3CONbits	set	3878
   215   000000                     _CCP4CONbits	set	3874
   216   000000                     _RC4REG	set	3811
   217   000000                     _SP4BRGL	set	3813
   218   000000                     _TX4STAbits	set	3816
   219   000000                     _BAUD4CONbits	set	3817
   220   000000                     _SSP2CON2	set	3802
   221   000000                     _SSP2STAT	set	3800
   222   000000                     _ANSELFbits	set	3764
   223   000000                     _SSP2BUF	set	3797
   224   000000                     _PIE0bits	set	3625
   225   000000                     _PIE4bits	set	3629
   226   000000                     _PIR4bits	set	3639
   227   000000                     _RC0PPS	set	3682
   228   000000                     _RD6PPS	set	3696
   229   000000                     _PIR0bits	set	3635
   230   000000                     _INTCONbits	set	4082
   231                           
   232                           	psect	smallconst
   233   000E00                     __psmallconst:
   234                           	callstack 0
   235   000E00  00                 	db	0
   236   000E01                     STR_5:
   237                           
   238                           ; BSR set to: 14
   239   000E01  25                 	db	37
   240   000E02  64                 	db	100	;'d'
   241   000E03  20                 	db	32
   242   000E04  25                 	db	37
   243   000E05  64                 	db	100	;'d'
   244   000E06  20                 	db	32
   245   000E07  25                 	db	37
   246   000E08  64                 	db	100	;'d'
   247   000E09  20                 	db	32
   248   000E0A  25                 	db	37
   249   000E0B  64                 	db	100	;'d'
   250   000E0C  20                 	db	32
   251   000E0D  0D                 	db	13
   252   000E0E  00                 	db	0
   253   000E0F                     STR_2:
   254                           
   255                           ; BSR set to: 14
   256   000E0F  25                 	db	37
   257   000E10  64                 	db	100	;'d'
   258   000E11  20                 	db	32
   259   000E12  00                 	db	0
   260   000E13  00                 	db	0	; dummy byte at the end
   261   000000                     
   262                           ; #config settings
   263                           
   264                           	psect	cinit
   265   00136E                     __pcinit:
   266                           	callstack 0
   267   00136E                     start_initialization:
   268                           	callstack 0
   269   00136E                     __initialization:
   270                           	callstack 0
   271                           
   272                           ; Initialize objects allocated to BANK1 (20 bytes)
   273                           ; load TBLPTR registers with __pidataBANK1
   274   00136E  0EAC               	movlw	low __pidataBANK1
   275   001370  6EF6               	movwf	tblptrl,c
   276   001372  0E18               	movlw	high __pidataBANK1
   277   001374  6EF7               	movwf	tblptrh,c
   278   001376  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   279   001378  6EF8               	movwf	tblptru,c
   280   00137A  EE01  F064         	lfsr	0,__pdataBANK1
   281   00137E  EE10 F014          	lfsr	1,20
   282   001382                     copy_data0:
   283   001382  0009               	tblrd		*+
   284   001384  CFF5 FFEE          	movff	tablat,postinc0
   285   001388  50E5               	movf	postdec1,w,c
   286   00138A  50E1               	movf	fsr1l,w,c
   287   00138C  E1FA               	bnz	copy_data0
   288                           
   289                           ; Initialize objects allocated to BANK0 (20 bytes)
   290                           ; load TBLPTR registers with __pidataBANK0
   291   00138E  0E98               	movlw	low __pidataBANK0
   292   001390  6EF6               	movwf	tblptrl,c
   293   001392  0E18               	movlw	high __pidataBANK0
   294   001394  6EF7               	movwf	tblptrh,c
   295   001396  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   296   001398  6EF8               	movwf	tblptru,c
   297   00139A  EE00  F0C4         	lfsr	0,__pdataBANK0
   298   00139E  EE10 F014          	lfsr	1,20
   299   0013A2                     copy_data1:
   300   0013A2  0009               	tblrd		*+
   301   0013A4  CFF5 FFEE          	movff	tablat,postinc0
   302   0013A8  50E5               	movf	postdec1,w,c
   303   0013AA  50E1               	movf	fsr1l,w,c
   304   0013AC  E1FA               	bnz	copy_data1
   305                           
   306                           ; Initialize objects allocated to COMRAM (4 bytes)
   307                           ; load TBLPTR registers with __pidataCOMRAM
   308   0013AE  0E02               	movlw	low __pidataCOMRAM
   309   0013B0  6EF6               	movwf	tblptrl,c
   310   0013B2  0E19               	movlw	high __pidataCOMRAM
   311   0013B4  6EF7               	movwf	tblptrh,c
   312   0013B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   313   0013B8  6EF8               	movwf	tblptru,c
   314   0013BA  EE00  F05A         	lfsr	0,__pdataCOMRAM
   315   0013BE  EE10 F004          	lfsr	1,4
   316   0013C2                     copy_data2:
   317   0013C2  0009               	tblrd		*+
   318   0013C4  CFF5 FFEE          	movff	tablat,postinc0
   319   0013C8  50E5               	movf	postdec1,w,c
   320   0013CA  50E1               	movf	fsr1l,w,c
   321   0013CC  E1FA               	bnz	copy_data2
   322                           
   323                           ; Clear objects allocated to BANK1 (100 bytes)
   324   0013CE  EE01  F000         	lfsr	0,__pbssBANK1
   325   0013D2  0E64               	movlw	100
   326   0013D4                     clear_0:
   327   0013D4  6AEE               	clrf	postinc0,c
   328   0013D6  06E8               	decf	wreg,f,c
   329   0013D8  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to BANK0 (59 bytes)
   332   0013DA  EE00  F060         	lfsr	0,__pbssBANK0
   333   0013DE  0E3B               	movlw	59
   334   0013E0                     clear_1:
   335   0013E0  6AEE               	clrf	postinc0,c
   336   0013E2  06E8               	decf	wreg,f,c
   337   0013E4  E1FD               	bnz	clear_1
   338                           
   339                           ; Clear objects allocated to COMRAM (7 bytes)
   340   0013E6  EE00  F053         	lfsr	0,__pbssCOMRAM
   341   0013EA  0E07               	movlw	7
   342   0013EC                     clear_2:
   343   0013EC  6AEE               	clrf	postinc0,c
   344   0013EE  06E8               	decf	wreg,f,c
   345   0013F0  E1FD               	bnz	clear_2
   346   0013F2                     end_of_initialization:
   347                           	callstack 0
   348   0013F2                     __end_of__initialization:
   349                           	callstack 0
   350   0013F2  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   351   0013F4  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   352   0013F6  0100               	movlb	0
   353   0013F8  EF1C  F009         	goto	_main	;jump to C main() function
   354                           
   355                           	psect	bssCOMRAM
   356   000053                     __pbssCOMRAM:
   357                           	callstack 0
   358   000053                     _manoeuvre_count:
   359                           	callstack 0
   360   000053                     	ds	1
   361   000054                     _return_flag:
   362                           	callstack 0
   363   000054                     	ds	1
   364   000055                     _returning:
   365                           	callstack 0
   366   000055                     	ds	1
   367   000056                     _TxBufReadCnt:
   368                           	callstack 0
   369   000056                     	ds	1
   370   000057                     _TxBufWriteCnt:
   371                           	callstack 0
   372   000057                     	ds	1
   373   000058                     _RxBufReadCnt:
   374                           	callstack 0
   375   000058                     	ds	1
   376   000059                     _RxBufWriteCnt:
   377                           	callstack 0
   378   000059                     	ds	1
   379                           
   380                           	psect	dataCOMRAM
   381   00005A                     __pdataCOMRAM:
   382                           	callstack 0
   383   00005A                     _timer_high_pointer:
   384                           	callstack 0
   385   00005A                     	ds	2
   386   00005C                     _topGearLeft:
   387                           	callstack 0
   388   00005C                     	ds	1
   389   00005D                     _rampDelay:
   390                           	callstack 0
   391   00005D                     	ds	1
   392                           
   393                           	psect	bssBANK0
   394   000060                     __pbssBANK0:
   395                           	callstack 0
   396   000060                     _dbuf:
   397                           	callstack 0
   398   000060                     	ds	32
   399   000080                     _EUSART4RXbuf:
   400                           	callstack 0
   401   000080                     	ds	20
   402   000094                     _nout:
   403                           	callstack 0
   404   000094                     	ds	2
   405   000096                     _width:
   406                           	callstack 0
   407   000096                     	ds	2
   408   000098                     _prec:
   409                           	callstack 0
   410   000098                     	ds	2
   411   00009A                     _flags:
   412                           	callstack 0
   413   00009A                     	ds	1
   414                           
   415                           	psect	dataBANK0
   416   0000C4                     __pdataBANK0:
   417                           	callstack 0
   418   0000C4                     _manoeuvre_pointer:
   419                           	callstack 0
   420   0000C4                     	ds	2
   421   0000C6                     _timer_low_pointer:
   422                           	callstack 0
   423   0000C6                     	ds	2
   424   0000C8                     _squareDelay:
   425                           	callstack 0
   426   0000C8                     	ds	2
   427   0000CA                     _headbuttDelay:
   428                           	callstack 0
   429   0000CA                     	ds	2
   430   0000CC                     _turn180Delay:
   431                           	callstack 0
   432   0000CC                     	ds	2
   433   0000CE                     _turnRight135Delay:
   434                           	callstack 0
   435   0000CE                     	ds	2
   436   0000D0                     _turnLeft135Delay:
   437                           	callstack 0
   438   0000D0                     	ds	2
   439   0000D2                     _turnRight90Delay:
   440                           	callstack 0
   441   0000D2                     	ds	2
   442   0000D4                     _turnLeft90Delay:
   443                           	callstack 0
   444   0000D4                     	ds	2
   445   0000D6                     _turningGear:
   446                           	callstack 0
   447   0000D6                     	ds	1
   448   0000D7                     _topGearRight:
   449                           	callstack 0
   450   0000D7                     	ds	1
   451                           
   452                           	psect	bssBANK1
   453   000100                     __pbssBANK1:
   454                           	callstack 0
   455   000100                     _EUSART4TXbuf:
   456                           	callstack 0
   457   000100                     	ds	60
   458   00013C                     _trail_manoeuvre:
   459                           	callstack 0
   460   00013C                     	ds	20
   461   000150                     _trail_timer_low:
   462                           	callstack 0
   463   000150                     	ds	20
   464                           
   465                           	psect	dataBANK1
   466   000164                     __pdataBANK1:
   467                           	callstack 0
   468   000164                     _trail_timer_high:
   469                           	callstack 0
   470   000164                     	ds	20
   471                           
   472                           	psect	cstackBANK0
   473   00009B                     __pcstackBANK0:
   474                           	callstack 0
   475   00009B                     sendRGBCvalSerial4@tempStr:
   476                           	callstack 0
   477                           
   478                           ; 41 bytes @ 0x0
   479   00009B                     	ds	41
   480                           
   481                           	psect	cstackCOMRAM
   482   000001                     __pcstackCOMRAM:
   483                           	callstack 0
   484   000001                     ??_I2C_2_Master_Idle:
   485   000001                     ?___awdiv:
   486                           	callstack 0
   487   000001                     ?___awmod:
   488                           	callstack 0
   489   000001                     sendCharSerial4@charToSend:
   490                           	callstack 0
   491   000001                     write_timer@tL:
   492                           	callstack 0
   493   000001                     initDCmotorsPWM@PWMperiod:
   494                           	callstack 0
   495   000001                     ___awdiv@dividend:
   496                           	callstack 0
   497   000001                     ___awmod@dividend:
   498                           	callstack 0
   499   000001                     fputc@c:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x0
   503   000001                     	ds	1
   504   000002                     ??_I2C_2_Master_Read:
   505   000002                     I2C_2_Master_Write@data_byte:
   506                           	callstack 0
   507   000002                     write_timer@tH:
   508                           	callstack 0
   509   000002                     sendStringSerial4@string:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x1
   513   000002                     	ds	1
   514   000003                     color_writetoaddr@value:
   515                           	callstack 0
   516   000003                     I2C_2_Master_Read@ack:
   517                           	callstack 0
   518   000003                     fputc@fp:
   519                           	callstack 0
   520   000003                     ___awdiv@divisor:
   521                           	callstack 0
   522   000003                     ___awmod@divisor:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x2
   526   000003                     	ds	1
   527   000004                     ??_fputc:
   528   000004                     color_writetoaddr@address:
   529                           	callstack 0
   530   000004                     I2C_2_Master_Read@tmp:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x3
   534   000004                     	ds	1
   535   000005                     ??_color_click_init:
   536   000005                     ?_color_read_Red:
   537                           	callstack 0
   538   000005                     ?_color_read_Blue:
   539                           	callstack 0
   540   000005                     ?_color_read_Green:
   541                           	callstack 0
   542   000005                     ?_color_read_Clear:
   543                           	callstack 0
   544   000005                     ___awdiv@counter:
   545                           	callstack 0
   546   000005                     ___awmod@counter:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x4
   550   000005                     	ds	1
   551   000006                     ___awdiv@sign:
   552                           	callstack 0
   553   000006                     ___awmod@sign:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x5
   557   000006                     	ds	1
   558   000007                     ??_color_read_Red:
   559   000007                     ??_color_read_Blue:
   560   000007                     ??_color_read_Green:
   561   000007                     ??_color_read_Clear:
   562   000007                     ?_abs:
   563                           	callstack 0
   564   000007                     ___awdiv@quotient:
   565                           	callstack 0
   566   000007                     abs@a:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570   000007                     	ds	2
   571   000009                     ??_abs:
   572                           
   573                           ; 1 bytes @ 0x8
   574   000009                     	ds	1
   575   00000A                     color_read_Red@tmp:
   576                           	callstack 0
   577   00000A                     color_read_Blue@tmp:
   578                           	callstack 0
   579   00000A                     color_read_Green@tmp:
   580                           	callstack 0
   581   00000A                     color_read_Clear@tmp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x9
   585   00000A                     	ds	1
   586   00000B                     ?_vfpfcnvrt:
   587                           	callstack 0
   588   00000B                     vfpfcnvrt@fp:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xA
   592   00000B                     	ds	1
   593   00000C                     getRGBCval@p:
   594                           	callstack 0
   595   00000C                     vfpfcnvrt@fmt:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0xB
   599   00000C                     	ds	1
   600   00000D                     vfpfcnvrt@ap:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0xC
   604   00000D                     	ds	1
   605   00000E                     ??_vfpfcnvrt:
   606                           
   607                           ; 1 bytes @ 0xD
   608   00000E                     	ds	1
   609   00000F                     vfpfcnvrt@done:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xE
   613   00000F                     	ds	1
   614   000010                     vfpfcnvrt@cnt:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xF
   618   000010                     	ds	2
   619   000012                     vfpfcnvrt@cp:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x11
   623   000012                     	ds	1
   624   000013                     vfpfcnvrt@convarg:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x12
   628   000013                     	ds	4
   629   000017                     vfpfcnvrt@c:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x16
   633   000017                     	ds	1
   634   000018                     ?_vfprintf:
   635                           	callstack 0
   636   000018                     vfprintf@fp:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x17
   640   000018                     	ds	1
   641   000019                     vfprintf@fmt:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x18
   645   000019                     	ds	1
   646   00001A                     vfprintf@ap:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x19
   650   00001A                     	ds	1
   651   00001B                     vfprintf@cfmt:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x1A
   655   00001B                     	ds	1
   656   00001C                     ?_sprintf:
   657                           	callstack 0
   658   00001C                     sprintf@s:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1B
   662   00001C                     	ds	2
   663   00001E                     sprintf@fmt:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x1D
   667   00001E                     	ds	9
   668   000027                     sprintf@ret:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x26
   672   000027                     	ds	2
   673   000029                     sprintf@ap:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x28
   677   000029                     	ds	1
   678   00002A                     sprintf@f:
   679                           	callstack 0
   680                           
   681                           ; 12 bytes @ 0x29
   682   00002A                     	ds	12
   683   000036                     sendRGBCvalSerial4@col_val:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x35
   687   000036                     	ds	1
   688   000037                     ??_main:
   689                           
   690                           ; 1 bytes @ 0x36
   691   000037                     	ds	2
   692   000039                     main@measured_colour:
   693                           	callstack 0
   694                           
   695                           ; 8 bytes @ 0x38
   696   000039                     	ds	8
   697   000041                     main@motorL:
   698                           	callstack 0
   699                           
   700                           ; 9 bytes @ 0x40
   701   000041                     	ds	9
   702   00004A                     main@motorR:
   703                           	callstack 0
   704                           
   705                           ; 9 bytes @ 0x49
   706   00004A                     	ds	9
   707                           
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 27 in file "main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  motorR          9   73[COMRAM] struct DC_motor
   718 ;;  motorL          9   64[COMRAM] struct DC_motor
   719 ;;  measured_col    8   56[COMRAM] struct RGBC_val
   720 ;;  PWMcycle        2    0        unsigned int 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   731 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;Total ram usage:       28 bytes
   735 ;; Hardware stack levels required when called: 7
   736 ;; This function calls:
   737 ;;		_Timer0_init
   738 ;;		_buggy_lights_init
   739 ;;		_color_click_init
   740 ;;		_getRGBCval
   741 ;;		_initDCmotorsPWM
   742 ;;		_initUSART4
   743 ;;		_sendRGBCvalSerial4
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text0
   750   001238                     __ptext0:
   751                           	callstack 0
   752   001238                     _main:
   753                           	callstack 24
   754   001238                     
   755                           ;main.c: 31:     struct DC_motor motorL, motorR;;main.c: 33:     motorL.power = 0;
   756   001238  0E00               	movlw	0
   757   00123A  6E41               	movwf	main@motorL^0,c
   758                           
   759                           ;main.c: 34:     motorL.direction = 1;
   760   00123C  0E01               	movlw	1
   761   00123E  6E42               	movwf	(main@motorL+1)^0,c
   762                           
   763                           ;main.c: 35:     motorL.brakemode = 1;
   764   001240  0E01               	movlw	1
   765   001242  6E43               	movwf	(main@motorL+2)^0,c
   766   001244                     
   767                           ;main.c: 36:     motorL.PWMperiod = PWMcycle;
   768   001244  0E00               	movlw	0
   769   001246  6E45               	movwf	(main@motorL+4)^0,c
   770   001248  0E63               	movlw	99
   771   00124A  6E44               	movwf	(main@motorL+3)^0,c
   772   00124C                     
   773                           ;main.c: 37:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   774   00124C  0EAA               	movlw	170
   775   00124E  6E46               	movwf	(main@motorL+5)^0,c
   776   001250  0E0F               	movlw	15
   777   001252  6E47               	movwf	(main@motorL+6)^0,c
   778   001254                     
   779                           ;main.c: 38:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   780   001254  0EA6               	movlw	166
   781   001256  6E48               	movwf	(main@motorL+7)^0,c
   782   001258  0E0F               	movlw	15
   783   00125A  6E49               	movwf	(main@motorL+8)^0,c
   784                           
   785                           ;main.c: 40:     motorR.power = 0;
   786   00125C  0E00               	movlw	0
   787   00125E  6E4A               	movwf	main@motorR^0,c
   788                           
   789                           ;main.c: 41:     motorR.direction = 1;
   790   001260  0E01               	movlw	1
   791   001262  6E4B               	movwf	(main@motorR+1)^0,c
   792                           
   793                           ;main.c: 42:     motorR.brakemode = 1;
   794   001264  0E01               	movlw	1
   795   001266  6E4C               	movwf	(main@motorR+2)^0,c
   796   001268                     
   797                           ;main.c: 43:     motorR.PWMperiod = PWMcycle;
   798   001268  0E00               	movlw	0
   799   00126A  6E4E               	movwf	(main@motorR+4)^0,c
   800   00126C  0E63               	movlw	99
   801   00126E  6E4D               	movwf	(main@motorR+3)^0,c
   802   001270                     
   803                           ;main.c: 44:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   804   001270  0E25               	movlw	37
   805   001272  6E4F               	movwf	(main@motorR+5)^0,c
   806   001274  0E0F               	movlw	15
   807   001276  6E50               	movwf	(main@motorR+6)^0,c
   808   001278                     
   809                           ;main.c: 45:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   810   001278  0E21               	movlw	33
   811   00127A  6E51               	movwf	(main@motorR+7)^0,c
   812   00127C  0E0F               	movlw	15
   813   00127E  6E52               	movwf	(main@motorR+8)^0,c
   814   001280                     
   815                           ;main.c: 47:     initDCmotorsPWM(PWMcycle);
   816   001280  0E00               	movlw	0
   817   001282  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   818   001284  0E63               	movlw	99
   819   001286  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   820   001288  EC6F  F009         	call	_initDCmotorsPWM	;wreg free
   821                           
   822                           ;main.c: 48:     buggy_lights_init();
   823   00128C  ECCF  F00B         	call	_buggy_lights_init	;wreg free
   824   001290                     
   825                           ;main.c: 49:     color_click_init();
   826   001290  ECB5  F00B         	call	_color_click_init	;wreg free
   827   001294                     
   828                           ;main.c: 50:     initUSART4();
   829   001294  EC31  F00C         	call	_initUSART4	;wreg free
   830   001298                     
   831                           ;main.c: 51:     Timer0_init();
   832   001298  EC0F  F00C         	call	_Timer0_init	;wreg free
   833   00129C                     
   834                           ;main.c: 55:         TRISDbits.TRISD7 = 0;
   835   00129C  9E84               	bcf	132,7,c	;volatile
   836   00129E                     
   837                           ;main.c: 56:         TRISHbits.TRISH3 = 0;
   838   00129E  9688               	bcf	136,3,c	;volatile
   839   0012A0                     
   840                           ;main.c: 58:         LATDbits.LATD7 = 1;
   841   0012A0  8E7C               	bsf	124,7,c	;volatile
   842   0012A2                     
   843                           ;main.c: 59:         LATHbits.LATH3 = 1;
   844   0012A2  8680               	bsf	128,3,c	;volatile
   845   0012A4                     
   846                           ;main.c: 63:         TRISFbits.TRISF2 = 1;
   847   0012A4  8486               	bsf	134,2,c	;volatile
   848   0012A6                     
   849                           ;main.c: 64:         TRISFbits.TRISF3 = 1;
   850   0012A6  8686               	bsf	134,3,c	;volatile
   851   0012A8                     
   852                           ;main.c: 66:         ANSELFbits.ANSELF2 = 0;
   853   0012A8  010E               	movlb	14	; () banked
   854   0012AA  95B4               	bcf	180,2,b	;volatile
   855   0012AC                     
   856                           ; BSR set to: 14
   857                           ;main.c: 67:         ANSELFbits.ANSELF3 = 0;
   858   0012AC  97B4               	bcf	180,3,b	;volatile
   859   0012AE                     l3036:
   860                           
   861                           ;main.c: 75:         getRGBCval(&measured_colour);
   862   0012AE  0E39               	movlw	low main@measured_colour
   863   0012B0  6E0C               	movwf	getRGBCval@p^0,c
   864   0012B2  EC89  F00A         	call	_getRGBCval	;wreg free
   865   0012B6                     
   866                           ;main.c: 76:         sendRGBCvalSerial4(&measured_colour);
   867   0012B6  0E39               	movlw	low main@measured_colour
   868   0012B8  6E36               	movwf	sendRGBCvalSerial4@col_val^0,c
   869   0012BA  EC2F  F00A         	call	_sendRGBCvalSerial4	;wreg free
   870   0012BE                     
   871                           ;main.c: 77:         _delay((unsigned long)((200)*(64000000/4000.0)));
   872   0012BE  0E11               	movlw	17
   873   0012C0  6E38               	movwf	(??_main+1)^0,c
   874   0012C2  0E3C               	movlw	60
   875   0012C4  6E37               	movwf	??_main^0,c
   876   0012C6  0ECB               	movlw	203
   877   0012C8                     u2047:
   878   0012C8  2EE8               	decfsz	wreg,f,c
   879   0012CA  D7FE               	bra	u2047
   880   0012CC  2E37               	decfsz	??_main^0,f,c
   881   0012CE  D7FC               	bra	u2047
   882   0012D0  2E38               	decfsz	(??_main+1)^0,f,c
   883   0012D2  D7FA               	bra	u2047
   884   0012D4  0000               	nop	
   885   0012D6  EF57  F009         	goto	l3036
   886   0012DA  EF1A  F000         	goto	start
   887   0012DE                     __end_of_main:
   888                           	callstack 0
   889                           
   890 ;; *************** function _sendRGBCvalSerial4 *****************
   891 ;; Defined at:
   892 ;;		line 62 in file "serial.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  col_val         1   53[COMRAM] PTR struct RGBC_val
   895 ;;		 -> main@measured_colour(8), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  tempStr        41    0[BANK0 ] unsigned char [41]
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   907 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Totals:         1      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;Total ram usage:       42 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 6
   914 ;; This function calls:
   915 ;;		_sendStringSerial4
   916 ;;		_sprintf
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text1
   923   00145E                     __ptext1:
   924                           	callstack 0
   925   00145E                     _sendRGBCvalSerial4:
   926                           	callstack 24
   927   00145E                     
   928                           ;serial.c: 63:     char tempStr[41];;serial.c: 64:     sprintf(tempStr, "%d %d %d %d \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
   929   00145E  0E9B               	movlw	low sendRGBCvalSerial4@tempStr
   930   001460  6E1C               	movwf	sprintf@s^0,c
   931   001462  6A1D               	clrf	(sprintf@s+1)^0,c
   932   001464  0E01               	movlw	low STR_5
   933   001466  6E1E               	movwf	sprintf@fmt^0,c
   934   001468  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   935   00146A  6ED9               	movwf	fsr2l,c
   936   00146C  6ADA               	clrf	fsr2h,c
   937   00146E  CFDE F01F          	movff	postinc2,?_sprintf+3
   938   001472  CFDD F020          	movff	postdec2,?_sprintf+4
   939   001476  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   940   001478  6ED9               	movwf	fsr2l,c
   941   00147A  6ADA               	clrf	fsr2h,c
   942   00147C  0E02               	movlw	2
   943   00147E  26D9               	addwf	fsr2l,f,c
   944   001480  CFDE F021          	movff	postinc2,?_sprintf+5
   945   001484  CFDD F022          	movff	postdec2,?_sprintf+6
   946   001488  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   947   00148A  6ED9               	movwf	fsr2l,c
   948   00148C  6ADA               	clrf	fsr2h,c
   949   00148E  0E04               	movlw	4
   950   001490  26D9               	addwf	fsr2l,f,c
   951   001492  CFDE F023          	movff	postinc2,?_sprintf+7
   952   001496  CFDD F024          	movff	postdec2,?_sprintf+8
   953   00149A  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   954   00149C  6ED9               	movwf	fsr2l,c
   955   00149E  6ADA               	clrf	fsr2h,c
   956   0014A0  0E06               	movlw	6
   957   0014A2  26D9               	addwf	fsr2l,f,c
   958   0014A4  CFDE F025          	movff	postinc2,?_sprintf+9
   959   0014A8  CFDD F026          	movff	postdec2,?_sprintf+10
   960   0014AC  EC54  F00B         	call	_sprintf	;wreg free
   961   0014B0                     
   962                           ;serial.c: 65:     sendStringSerial4(tempStr);
   963   0014B0  0E9B               	movlw	low sendRGBCvalSerial4@tempStr
   964   0014B2  6E02               	movwf	sendStringSerial4@string^0,c
   965   0014B4  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   966   0014B6  ECFE  F009         	call	_sendStringSerial4	;wreg free
   967   0014BA  0012               	return		;funcret
   968   0014BC                     __end_of_sendRGBCvalSerial4:
   969                           	callstack 0
   970                           
   971 ;; *************** function _sprintf *****************
   972 ;; Defined at:
   973 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  s               2   27[COMRAM] PTR unsigned char 
   976 ;;		 -> sendRGBCvalSerial4@tempStr(41), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   977 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   978 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  f              12   41[COMRAM] struct _IO_FILE
   981 ;;  ret             2   38[COMRAM] int 
   982 ;;  ap              1   40[COMRAM] PTR void [1]
   983 ;;		 -> ?_sprintf(2), 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2   27[COMRAM] int 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   993 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;Total ram usage:       26 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 5
  1000 ;; This function calls:
  1001 ;;		_vfprintf
  1002 ;; This function is called by:
  1003 ;;		_sendRGBCvalSerial4
  1004 ;;		_sendIntSerial4
  1005 ;;		_sendArrayCharSerial4
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text2
  1010   0016A8                     __ptext2:
  1011                           	callstack 0
  1012   0016A8                     _sprintf:
  1013                           	callstack 24
  1014   0016A8  0E1F               	movlw	low (?_sprintf+3)
  1015   0016AA  6E29               	movwf	sprintf@ap^0,c
  1016   0016AC  C01C  F02A         	movff	sprintf@s,sprintf@f
  1017   0016B0  C01D  F02B         	movff	sprintf@s+1,sprintf@f+1
  1018   0016B4  0E00               	movlw	0
  1019   0016B6  6E2E               	movwf	(sprintf@f+4)^0,c
  1020   0016B8  0E00               	movlw	0
  1021   0016BA  6E2D               	movwf	(sprintf@f+3)^0,c
  1022   0016BC  0E00               	movlw	0
  1023   0016BE  6E35               	movwf	(sprintf@f+11)^0,c
  1024   0016C0  0E00               	movlw	0
  1025   0016C2  6E34               	movwf	(sprintf@f+10)^0,c
  1026   0016C4  0E2A               	movlw	low sprintf@f
  1027   0016C6  6E18               	movwf	vfprintf@fp^0,c
  1028   0016C8  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  1029   0016CC  0E29               	movlw	low sprintf@ap
  1030   0016CE  6E1A               	movwf	vfprintf@ap^0,c
  1031   0016D0  EC5E  F00A         	call	_vfprintf	;wreg free
  1032   0016D4  C018  F027         	movff	?_vfprintf,sprintf@ret
  1033   0016D8  C019  F028         	movff	?_vfprintf+1,sprintf@ret+1
  1034   0016DC  502D               	movf	(sprintf@f+3)^0,w,c
  1035   0016DE  241C               	addwf	sprintf@s^0,w,c
  1036   0016E0  6ED9               	movwf	fsr2l,c
  1037   0016E2  502E               	movf	(sprintf@f+4)^0,w,c
  1038   0016E4  201D               	addwfc	(sprintf@s+1)^0,w,c
  1039   0016E6  6EDA               	movwf	fsr2h,c
  1040   0016E8  6ADF               	clrf	indf2,c
  1041   0016EA  C027  F01C         	movff	sprintf@ret,?_sprintf
  1042   0016EE  C028  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1043   0016F2  0012               	return		;funcret
  1044   0016F4                     __end_of_sprintf:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _vfprintf *****************
  1048 ;; Defined at:
  1049 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1052 ;;		 -> sprintf@f(12), 
  1053 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1054 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1055 ;;  ap              1   25[COMRAM] PTR PTR void 
  1056 ;;		 -> sprintf@ap(1), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1059 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  2   23[COMRAM] int 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 4
  1076 ;; This function calls:
  1077 ;;		_vfpfcnvrt
  1078 ;; This function is called by:
  1079 ;;		_sprintf
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text3
  1084   0014BC                     __ptext3:
  1085                           	callstack 0
  1086   0014BC                     _vfprintf:
  1087                           	callstack 24
  1088   0014BC                     
  1089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1090   0014BC  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1091   0014C0                     
  1092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1093   0014C0  0E00               	movlw	0
  1094   0014C2  0100               	movlb	0	; () banked
  1095   0014C4  6F95               	movwf	(_nout+1)& (0+255),b
  1096   0014C6  0E00               	movlw	0
  1097   0014C8  6F94               	movwf	_nout& (0+255),b
  1098                           
  1099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1100   0014CA  EF74  F00A         	goto	l2680
  1101   0014CE                     l2678:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1105   0014CE  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1106   0014D2  0E1B               	movlw	low vfprintf@cfmt
  1107   0014D4  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1108   0014D6  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1109   0014DA  EC0A  F007         	call	_vfpfcnvrt	;wreg free
  1110   0014DE  500B               	movf	?_vfpfcnvrt^0,w,c
  1111   0014E0  0100               	movlb	0	; () banked
  1112   0014E2  2794               	addwf	_nout& (0+255),f,b
  1113   0014E4  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1114   0014E6  2395               	addwfc	(_nout+1)& (0+255),f,b
  1115   0014E8                     l2680:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1119   0014E8  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1120   0014EC                     	if	1	;There is more than 1 active tblptr byte
  1121   0014EC  0E0E               	movlw	high __smallconst
  1122   0014EE  6EF7               	movwf	tblptrh,c
  1123   0014F0                     	endif
  1124   0014F0                     	if	0	;tblptru may be non-zero
  1125   0014F0                     	endif
  1126   0014F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1127   0014F0  0E00               	movlw	low (__smallconst shr (0+16))
  1128   0014F2  6EF8               	movwf	tblptru,c
  1129   0014F4                     	endif
  1130   0014F4  0008               	tblrd		*
  1131   0014F6  50F5               	movf	tablat,w,c
  1132   0014F8  0900               	iorlw	0
  1133   0014FA  A4D8               	btfss	status,2,c
  1134   0014FC  EF82  F00A         	goto	u1441
  1135   001500  EF84  F00A         	goto	u1440
  1136   001504                     u1441:
  1137   001504  EF67  F00A         	goto	l2678
  1138   001508                     u1440:
  1139   001508                     
  1140                           ; BSR set to: 0
  1141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1142   001508  C094  F018         	movff	_nout,?_vfprintf
  1143   00150C  C095  F019         	movff	_nout+1,?_vfprintf+1
  1144   001510                     
  1145                           ; BSR set to: 0
  1146   001510  0012               	return		;funcret
  1147   001512                     __end_of_vfprintf:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _vfpfcnvrt *****************
  1151 ;; Defined at:
  1152 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1155 ;;		 -> sprintf@f(12), 
  1156 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1157 ;;		 -> vfprintf@cfmt(1), 
  1158 ;;  ap              1   12[COMRAM] PTR PTR void 
  1159 ;;		 -> sprintf@ap(1), 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  convarg         4   18[COMRAM] struct .
  1162 ;;  cnt             2   15[COMRAM] int 
  1163 ;;  c               1   22[COMRAM] unsigned char 
  1164 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1165 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1166 ;;  done            1   14[COMRAM] _Bool 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2   10[COMRAM] int 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1176 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;Total ram usage:       13 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 3
  1183 ;; This function calls:
  1184 ;;		___awdiv
  1185 ;;		___awmod
  1186 ;;		_abs
  1187 ;;		_fputc
  1188 ;; This function is called by:
  1189 ;;		_vfprintf
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text4
  1194   000E14                     __ptext4:
  1195                           	callstack 0
  1196   000E14                     _vfpfcnvrt:
  1197                           	callstack 24
  1198   000E14                     
  1199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1200   000E14  0E00               	movlw	0
  1201   000E16  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1202   000E18  0E00               	movlw	0
  1203   000E1A  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1204   000E1C                     
  1205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1206   000E1C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1207   000E1E  6ED9               	movwf	fsr2l,c
  1208   000E20  6ADA               	clrf	fsr2h,c
  1209   000E22  CFDF FFF6          	movff	indf2,tblptrl
  1210   000E26                     	if	1	;There is more than 1 active tblptr byte
  1211   000E26  0E0E               	movlw	high __smallconst
  1212   000E28  6EF7               	movwf	tblptrh,c
  1213   000E2A                     	endif
  1214   000E2A                     	if	0	;tblptru may be non-zero
  1215   000E2A                     	endif
  1216   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1217   000E2A  0E00               	movlw	low (__smallconst shr (0+16))
  1218   000E2C  6EF8               	movwf	tblptru,c
  1219   000E2E                     	endif
  1220   000E2E  0008               	tblrd		*
  1221   000E30  50F5               	movf	tablat,w,c
  1222   000E32  0A25               	xorlw	37
  1223   000E34  A4D8               	btfss	status,2,c
  1224   000E36  EF1F  F007         	goto	u1311
  1225   000E3A  EF21  F007         	goto	u1310
  1226   000E3E                     u1311:
  1227   000E3E  EFEB  F007         	goto	l2586
  1228   000E42                     u1310:
  1229   000E42                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1231   000E42  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1232   000E44  6ED9               	movwf	fsr2l,c
  1233   000E46  6ADA               	clrf	fsr2h,c
  1234   000E48  2ADF               	incf	indf2,f,c
  1235   000E4A                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1237   000E4A  0E00               	movlw	0
  1238   000E4C  0100               	movlb	0	; () banked
  1239   000E4E  6F97               	movwf	(_width+1)& (0+255),b
  1240   000E50  0E00               	movlw	0
  1241   000E52  6F96               	movwf	_width& (0+255),b
  1242   000E54  C096  F09A         	movff	_width,_flags
  1243   000E58                     
  1244                           ; BSR set to: 0
  1245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1246   000E58  6998               	setf	_prec& (0+255),b
  1247   000E5A  6999               	setf	(_prec+1)& (0+255),b
  1248   000E5C                     
  1249                           ; BSR set to: 0
  1250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1251   000E5C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1252   000E5E  6ED9               	movwf	fsr2l,c
  1253   000E60  6ADA               	clrf	fsr2h,c
  1254   000E62  50DF               	movf	indf2,w,c
  1255   000E64  6E12               	movwf	vfpfcnvrt@cp^0,c
  1256   000E66                     
  1257                           ; BSR set to: 0
  1258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1259   000E66  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1260   000E6A                     	if	1	;There is more than 1 active tblptr byte
  1261   000E6A  0E0E               	movlw	high __smallconst
  1262   000E6C  6EF7               	movwf	tblptrh,c
  1263   000E6E                     	endif
  1264   000E6E                     	if	0	;tblptru may be non-zero
  1265   000E6E                     	endif
  1266   000E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1267   000E6E  0E00               	movlw	low (__smallconst shr (0+16))
  1268   000E70  6EF8               	movwf	tblptru,c
  1269   000E72                     	endif
  1270   000E72  0008               	tblrd		*
  1271   000E74  50F5               	movf	tablat,w,c
  1272   000E76  0A64               	xorlw	100
  1273   000E78  B4D8               	btfsc	status,2,c
  1274   000E7A  EF41  F007         	goto	u1321
  1275   000E7E  EF43  F007         	goto	u1320
  1276   000E82                     u1321:
  1277   000E82  EF53  F007         	goto	l2550
  1278   000E86                     u1320:
  1279   000E86                     
  1280                           ; BSR set to: 0
  1281   000E86  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1282   000E8A                     	if	1	;There is more than 1 active tblptr byte
  1283   000E8A  0E0E               	movlw	high __smallconst
  1284   000E8C  6EF7               	movwf	tblptrh,c
  1285   000E8E                     	endif
  1286   000E8E                     	if	0	;tblptru may be non-zero
  1287   000E8E                     	endif
  1288   000E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1289   000E8E  0E00               	movlw	low (__smallconst shr (0+16))
  1290   000E90  6EF8               	movwf	tblptru,c
  1291   000E92                     	endif
  1292   000E92  0008               	tblrd		*
  1293   000E94  50F5               	movf	tablat,w,c
  1294   000E96  0A69               	xorlw	105
  1295   000E98  A4D8               	btfss	status,2,c
  1296   000E9A  EF51  F007         	goto	u1331
  1297   000E9E  EF53  F007         	goto	u1330
  1298   000EA2                     u1331:
  1299   000EA2  EFE1  F007         	goto	l2580
  1300   000EA6                     u1330:
  1301   000EA6                     l2550:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1305   000EA6  500D               	movf	vfpfcnvrt@ap^0,w,c
  1306   000EA8  6ED9               	movwf	fsr2l,c
  1307   000EAA  6ADA               	clrf	fsr2h,c
  1308   000EAC  0E02               	movlw	2
  1309   000EAE  26DF               	addwf	indf2,f,c
  1310   000EB0  5CDF               	subwf	indf2,w,c
  1311   000EB2  6ED9               	movwf	fsr2l,c
  1312   000EB4  6ADA               	clrf	fsr2h,c
  1313   000EB6  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1314   000EBA  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1315   000EBE                     
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1318   000EBE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1319   000EC0  6ED9               	movwf	fsr2l,c
  1320   000EC2  6ADA               	clrf	fsr2h,c
  1321   000EC4  2812               	incf	vfpfcnvrt@cp^0,w,c
  1322   000EC6  6EDF               	movwf	indf2,c
  1323   000EC8                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1326   000EC8  0E20               	movlw	32
  1327   000ECA  6E17               	movwf	vfpfcnvrt@c^0,c
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1330   000ECC  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1331   000ECE  EF6B  F007         	goto	u1341
  1332   000ED2  EF6E  F007         	goto	u1340
  1333   000ED6                     u1341:
  1334   000ED6  0E01               	movlw	1
  1335   000ED8  EF6F  F007         	goto	u1350
  1336   000EDC                     u1340:
  1337   000EDC  0E00               	movlw	0
  1338   000EDE                     u1350:
  1339   000EDE  6E0F               	movwf	vfpfcnvrt@done^0,c
  1340   000EE0                     l2556:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1343   000EE0  0617               	decf	vfpfcnvrt@c^0,f,c
  1344   000EE2  5017               	movf	vfpfcnvrt@c^0,w,c
  1345   000EE4  0F60               	addlw	low _dbuf
  1346   000EE6  6ED9               	movwf	fsr2l,c
  1347   000EE8  6ADA               	clrf	fsr2h,c
  1348   000EEA  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1349   000EEE  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1350   000EF2  0E00               	movlw	0
  1351   000EF4  6E04               	movwf	(___awmod@divisor+1)^0,c
  1352   000EF6  0E0A               	movlw	10
  1353   000EF8  6E03               	movwf	___awmod@divisor^0,c
  1354   000EFA  ECC4  F008         	call	___awmod	;wreg free
  1355   000EFE  C001  F007         	movff	?___awmod,abs@a
  1356   000F02  C002  F008         	movff	?___awmod+1,abs@a+1
  1357   000F06  EC9B  F00B         	call	_abs	;wreg free
  1358   000F0A  5007               	movf	?_abs^0,w,c
  1359   000F0C  0F30               	addlw	48
  1360   000F0E  6EDF               	movwf	indf2,c
  1361   000F10                     
  1362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1363   000F10  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1364   000F14  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1365   000F18  0E00               	movlw	0
  1366   000F1A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1367   000F1C  0E0A               	movlw	10
  1368   000F1E  6E03               	movwf	___awdiv@divisor^0,c
  1369   000F20  EC05  F008         	call	___awdiv	;wreg free
  1370   000F24  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1371   000F28  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1372   000F2C                     
  1373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1374   000F2C  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1375   000F2E  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1376   000F30                     
  1377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1378   000F30  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1379   000F32  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1380   000F34  B4D8               	btfsc	status,2,c
  1381   000F36  EF9F  F007         	goto	u1361
  1382   000F3A  EFA1  F007         	goto	u1360
  1383   000F3E                     u1361:
  1384   000F3E  EFA9  F007         	goto	l2566
  1385   000F42                     u1360:
  1386   000F42  5017               	movf	vfpfcnvrt@c^0,w,c
  1387   000F44  A4D8               	btfss	status,2,c
  1388   000F46  EFA7  F007         	goto	u1371
  1389   000F4A  EFA9  F007         	goto	u1370
  1390   000F4E                     u1371:
  1391   000F4E  EF70  F007         	goto	l2556
  1392   000F52                     u1370:
  1393   000F52                     l2566:
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1396   000F52  5017               	movf	vfpfcnvrt@c^0,w,c
  1397   000F54  B4D8               	btfsc	status,2,c
  1398   000F56  EFAF  F007         	goto	u1381
  1399   000F5A  EFB1  F007         	goto	u1380
  1400   000F5E                     u1381:
  1401   000F5E  EFD2  F007         	goto	l2578
  1402   000F62                     u1380:
  1403   000F62  500F               	movf	vfpfcnvrt@done^0,w,c
  1404   000F64  B4D8               	btfsc	status,2,c
  1405   000F66  EFB7  F007         	goto	u1391
  1406   000F6A  EFB9  F007         	goto	u1390
  1407   000F6E                     u1391:
  1408   000F6E  EFD2  F007         	goto	l2578
  1409   000F72                     u1390:
  1410   000F72                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1412   000F72  0617               	decf	vfpfcnvrt@c^0,f,c
  1413   000F74  5017               	movf	vfpfcnvrt@c^0,w,c
  1414   000F76  0F60               	addlw	low _dbuf
  1415   000F78  6ED9               	movwf	fsr2l,c
  1416   000F7A  6ADA               	clrf	fsr2h,c
  1417   000F7C  0E2D               	movlw	45
  1418   000F7E  6EDF               	movwf	indf2,c
  1419   000F80                     
  1420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1421   000F80  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1422   000F82  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1423   000F84  EFD2  F007         	goto	l2578
  1424   000F88                     l2574:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1427   000F88  5017               	movf	vfpfcnvrt@c^0,w,c
  1428   000F8A  0F60               	addlw	low _dbuf
  1429   000F8C  6ED9               	movwf	fsr2l,c
  1430   000F8E  6ADA               	clrf	fsr2h,c
  1431   000F90  50DF               	movf	indf2,w,c
  1432   000F92  6E0E               	movwf	??_vfpfcnvrt^0,c
  1433   000F94  500E               	movf	??_vfpfcnvrt^0,w,c
  1434   000F96  6E01               	movwf	fputc@c^0,c
  1435   000F98  6A02               	clrf	(fputc@c+1)^0,c
  1436   000F9A  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1437   000F9E  EC67  F008         	call	_fputc	;wreg free
  1438   000FA2  2A17               	incf	vfpfcnvrt@c^0,f,c
  1439   000FA4                     l2578:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1442   000FA4  0E20               	movlw	32
  1443   000FA6  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1444   000FA8  A4D8               	btfss	status,2,c
  1445   000FAA  EFD9  F007         	goto	u1401
  1446   000FAE  EFDB  F007         	goto	u1400
  1447   000FB2                     u1401:
  1448   000FB2  EFC4  F007         	goto	l2574
  1449   000FB6                     u1400:
  1450   000FB6                     
  1451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1452   000FB6  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1453   000FBA  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1454   000FBE  EF04  F008         	goto	l1466
  1455   000FC2                     l2580:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1459   000FC2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1460   000FC4  6ED9               	movwf	fsr2l,c
  1461   000FC6  6ADA               	clrf	fsr2h,c
  1462   000FC8  2ADF               	incf	indf2,f,c
  1463   000FCA                     
  1464                           ; BSR set to: 0
  1465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1466   000FCA  0E00               	movlw	0
  1467   000FCC  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1468   000FCE  0E00               	movlw	0
  1469   000FD0  6E0B               	movwf	?_vfpfcnvrt^0,c
  1470   000FD2  EF04  F008         	goto	l1466
  1471   000FD6                     l2586:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1474   000FD6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1475   000FD8  6ED9               	movwf	fsr2l,c
  1476   000FDA  6ADA               	clrf	fsr2h,c
  1477   000FDC  CFDF FFF6          	movff	indf2,tblptrl
  1478   000FE0                     	if	1	;There is more than 1 active tblptr byte
  1479   000FE0  0E0E               	movlw	high __smallconst
  1480   000FE2  6EF7               	movwf	tblptrh,c
  1481   000FE4                     	endif
  1482   000FE4                     	if	0	;tblptru may be non-zero
  1483   000FE4                     	endif
  1484   000FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1485   000FE4  0E00               	movlw	low (__smallconst shr (0+16))
  1486   000FE6  6EF8               	movwf	tblptru,c
  1487   000FE8                     	endif
  1488   000FE8  0008               	tblrd		*
  1489   000FEA  50F5               	movf	tablat,w,c
  1490   000FEC  6E01               	movwf	fputc@c^0,c
  1491   000FEE  6A02               	clrf	(fputc@c+1)^0,c
  1492   000FF0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1493   000FF4  EC67  F008         	call	_fputc	;wreg free
  1494   000FF8                     
  1495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1496   000FF8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1497   000FFA  6ED9               	movwf	fsr2l,c
  1498   000FFC  6ADA               	clrf	fsr2h,c
  1499   000FFE  2ADF               	incf	indf2,f,c
  1500   001000                     
  1501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1502   001000  0E00               	movlw	0
  1503   001002  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1504   001004  0E01               	movlw	1
  1505   001006  6E0B               	movwf	?_vfpfcnvrt^0,c
  1506   001008                     l1466:
  1507   001008  0012               	return		;funcret
  1508   00100A                     __end_of_vfpfcnvrt:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _fputc *****************
  1512 ;; Defined at:
  1513 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  c               2    0[COMRAM] int 
  1516 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1517 ;;		 -> sprintf@f(12), 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2    0[COMRAM] int 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;Total ram usage:        8 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 2
  1536 ;; This function calls:
  1537 ;;		_putch
  1538 ;; This function is called by:
  1539 ;;		_vfpfcnvrt
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text5
  1544   0010CE                     __ptext5:
  1545                           	callstack 0
  1546   0010CE                     _fputc:
  1547                           	callstack 24
  1548   0010CE  5003               	movf	fputc@fp^0,w,c
  1549   0010D0  B4D8               	btfsc	status,2,c
  1550   0010D2  EF6D  F008         	goto	u1081
  1551   0010D6  EF6F  F008         	goto	u1080
  1552   0010DA                     u1081:
  1553   0010DA  EF77  F008         	goto	l2430
  1554   0010DE                     u1080:
  1555   0010DE  5003               	movf	fputc@fp^0,w,c
  1556   0010E0  A4D8               	btfss	status,2,c
  1557   0010E2  EF75  F008         	goto	u1091
  1558   0010E6  EF77  F008         	goto	u1090
  1559   0010EA                     u1091:
  1560   0010EA  EF7C  F008         	goto	l2432
  1561   0010EE                     u1090:
  1562   0010EE                     l2430:
  1563   0010EE  5001               	movf	fputc@c^0,w,c
  1564   0010F0  EC83  F00C         	call	_putch
  1565   0010F4  EFC3  F008         	goto	l1491
  1566   0010F8                     l2432:
  1567   0010F8  5003               	movf	fputc@fp^0,w,c
  1568   0010FA  6ED9               	movwf	fsr2l,c
  1569   0010FC  6ADA               	clrf	fsr2h,c
  1570   0010FE  0E0A               	movlw	10
  1571   001100  26D9               	addwf	fsr2l,f,c
  1572   001102  50DE               	movf	postinc2,w,c
  1573   001104  10DE               	iorwf	postinc2,w,c
  1574   001106  B4D8               	btfsc	status,2,c
  1575   001108  EF88  F008         	goto	u1101
  1576   00110C  EF8A  F008         	goto	u1100
  1577   001110                     u1101:
  1578   001110  EFA3  F008         	goto	l2436
  1579   001114                     u1100:
  1580   001114  5003               	movf	fputc@fp^0,w,c
  1581   001116  6ED9               	movwf	fsr2l,c
  1582   001118  6ADA               	clrf	fsr2h,c
  1583   00111A  0E0A               	movlw	10
  1584   00111C  26D9               	addwf	fsr2l,f,c
  1585   00111E  5003               	movf	fputc@fp^0,w,c
  1586   001120  6EE1               	movwf	fsr1l,c
  1587   001122  6AE2               	clrf	fsr1h,c
  1588   001124  0E03               	movlw	3
  1589   001126  26E1               	addwf	fsr1l,f,c
  1590   001128  50DE               	movf	postinc2,w,c
  1591   00112A  5CE6               	subwf	postinc1,w,c
  1592   00112C  50E6               	movf	postinc1,w,c
  1593   00112E  0A80               	xorlw	128
  1594   001130  6E08               	movwf	(??_fputc+4)^0,c
  1595   001132  50DE               	movf	postinc2,w,c
  1596   001134  0A80               	xorlw	128
  1597   001136  5808               	subwfb	(??_fputc+4)^0,w,c
  1598   001138  B0D8               	btfsc	status,0,c
  1599   00113A  EFA1  F008         	goto	u1111
  1600   00113E  EFA3  F008         	goto	u1110
  1601   001142                     u1111:
  1602   001142  EFC3  F008         	goto	l1491
  1603   001146                     u1110:
  1604   001146                     l2436:
  1605   001146  5003               	movf	fputc@fp^0,w,c
  1606   001148  6ED9               	movwf	fsr2l,c
  1607   00114A  6ADA               	clrf	fsr2h,c
  1608   00114C  0E03               	movlw	3
  1609   00114E  26D9               	addwf	fsr2l,f,c
  1610   001150  CFDE F004          	movff	postinc2,??_fputc
  1611   001154  CFDD F005          	movff	postdec2,??_fputc+1
  1612   001158  5003               	movf	fputc@fp^0,w,c
  1613   00115A  6ED9               	movwf	fsr2l,c
  1614   00115C  6ADA               	clrf	fsr2h,c
  1615   00115E  CFDE F006          	movff	postinc2,??_fputc+2
  1616   001162  CFDD F007          	movff	postdec2,??_fputc+3
  1617   001166  5004               	movf	??_fputc^0,w,c
  1618   001168  2406               	addwf	(??_fputc+2)^0,w,c
  1619   00116A  6ED9               	movwf	fsr2l,c
  1620   00116C  5005               	movf	(??_fputc+1)^0,w,c
  1621   00116E  2007               	addwfc	(??_fputc+3)^0,w,c
  1622   001170  6EDA               	movwf	fsr2h,c
  1623   001172  C001  FFDF         	movff	fputc@c,indf2
  1624   001176  5003               	movf	fputc@fp^0,w,c
  1625   001178  6ED9               	movwf	fsr2l,c
  1626   00117A  6ADA               	clrf	fsr2h,c
  1627   00117C  0E03               	movlw	3
  1628   00117E  26D9               	addwf	fsr2l,f,c
  1629   001180  2ADE               	incf	postinc2,f,c
  1630   001182  0E00               	movlw	0
  1631   001184  22DD               	addwfc	postdec2,f,c
  1632   001186                     l1491:
  1633   001186  0012               	return		;funcret
  1634   001188                     __end_of_fputc:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _putch *****************
  1638 ;; Defined at:
  1639 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  c               1    wreg     unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  c               1    0[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_fputc
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text6
  1668   001906                     __ptext6:
  1669                           	callstack 0
  1670   001906                     _putch:
  1671                           	callstack 24
  1672   001906  0012               	return		;funcret
  1673   001908                     __end_of_putch:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _abs *****************
  1677 ;; Defined at:
  1678 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  a               2    6[COMRAM] int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    6[COMRAM] int 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;Total ram usage:        4 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_vfpfcnvrt
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text7
  1707   001736                     __ptext7:
  1708                           	callstack 0
  1709   001736                     _abs:
  1710                           	callstack 25
  1711   001736  BE08               	btfsc	(abs@a+1)^0,7,c
  1712   001738  EFA0  F00B         	goto	u1121
  1713   00173C  EFA2  F00B         	goto	u1120
  1714   001740                     u1121:
  1715   001740  EFA8  F00B         	goto	l1476
  1716   001744                     u1120:
  1717   001744  C007  F007         	movff	abs@a,?_abs
  1718   001748  C008  F008         	movff	abs@a+1,?_abs+1
  1719   00174C  EFB4  F00B         	goto	l1479
  1720   001750                     l1476:
  1721   001750  C007  F009         	movff	abs@a,??_abs
  1722   001754  C008  F00A         	movff	abs@a+1,??_abs+1
  1723   001758  1E09               	comf	??_abs^0,f,c
  1724   00175A  1E0A               	comf	(??_abs+1)^0,f,c
  1725   00175C  4A09               	infsnz	??_abs^0,f,c
  1726   00175E  2A0A               	incf	(??_abs+1)^0,f,c
  1727   001760  C009  F007         	movff	??_abs,?_abs
  1728   001764  C00A  F008         	movff	??_abs+1,?_abs+1
  1729   001768                     l1479:
  1730   001768  0012               	return		;funcret
  1731   00176A                     __end_of_abs:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function ___awmod *****************
  1735 ;; Defined at:
  1736 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  dividend        2    0[COMRAM] int 
  1739 ;;  divisor         2    2[COMRAM] int 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  sign            1    5[COMRAM] unsigned char 
  1742 ;;  counter         1    4[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    0[COMRAM] int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;Total ram usage:        6 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_vfpfcnvrt
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text8
  1767   001188                     __ptext8:
  1768                           	callstack 0
  1769   001188                     ___awmod:
  1770                           	callstack 25
  1771   001188  0E00               	movlw	0
  1772   00118A  6E06               	movwf	___awmod@sign^0,c
  1773   00118C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1774   00118E  EFCD  F008         	goto	u1020
  1775   001192  EFCB  F008         	goto	u1021
  1776   001196                     u1021:
  1777   001196  EFD3  F008         	goto	l2398
  1778   00119A                     u1020:
  1779   00119A  6C01               	negf	___awmod@dividend^0,c
  1780   00119C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1781   00119E  B0D8               	btfsc	status,0,c
  1782   0011A0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1783   0011A2  0E01               	movlw	1
  1784   0011A4  6E06               	movwf	___awmod@sign^0,c
  1785   0011A6                     l2398:
  1786   0011A6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1787   0011A8  EFDA  F008         	goto	u1030
  1788   0011AC  EFD8  F008         	goto	u1031
  1789   0011B0                     u1031:
  1790   0011B0  EFDE  F008         	goto	l2402
  1791   0011B4                     u1030:
  1792   0011B4  6C03               	negf	___awmod@divisor^0,c
  1793   0011B6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1794   0011B8  B0D8               	btfsc	status,0,c
  1795   0011BA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1796   0011BC                     l2402:
  1797   0011BC  5003               	movf	___awmod@divisor^0,w,c
  1798   0011BE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1799   0011C0  B4D8               	btfsc	status,2,c
  1800   0011C2  EFE5  F008         	goto	u1041
  1801   0011C6  EFE7  F008         	goto	u1040
  1802   0011CA                     u1041:
  1803   0011CA  EF0B  F009         	goto	l2418
  1804   0011CE                     u1040:
  1805   0011CE  0E01               	movlw	1
  1806   0011D0  6E05               	movwf	___awmod@counter^0,c
  1807   0011D2  EFEF  F008         	goto	l2408
  1808   0011D6                     l2406:
  1809   0011D6  90D8               	bcf	status,0,c
  1810   0011D8  3603               	rlcf	___awmod@divisor^0,f,c
  1811   0011DA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1812   0011DC  2A05               	incf	___awmod@counter^0,f,c
  1813   0011DE                     l2408:
  1814   0011DE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1815   0011E0  EFF4  F008         	goto	u1051
  1816   0011E4  EFF6  F008         	goto	u1050
  1817   0011E8                     u1051:
  1818   0011E8  EFEB  F008         	goto	l2406
  1819   0011EC                     u1050:
  1820   0011EC                     l2410:
  1821   0011EC  5003               	movf	___awmod@divisor^0,w,c
  1822   0011EE  5C01               	subwf	___awmod@dividend^0,w,c
  1823   0011F0  5004               	movf	(___awmod@divisor+1)^0,w,c
  1824   0011F2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1825   0011F4  A0D8               	btfss	status,0,c
  1826   0011F6  EFFF  F008         	goto	u1061
  1827   0011FA  EF01  F009         	goto	u1060
  1828   0011FE                     u1061:
  1829   0011FE  EF05  F009         	goto	l2414
  1830   001202                     u1060:
  1831   001202  5003               	movf	___awmod@divisor^0,w,c
  1832   001204  5E01               	subwf	___awmod@dividend^0,f,c
  1833   001206  5004               	movf	(___awmod@divisor+1)^0,w,c
  1834   001208  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1835   00120A                     l2414:
  1836   00120A  90D8               	bcf	status,0,c
  1837   00120C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1838   00120E  3203               	rrcf	___awmod@divisor^0,f,c
  1839   001210  2E05               	decfsz	___awmod@counter^0,f,c
  1840   001212  EFF6  F008         	goto	l2410
  1841   001216                     l2418:
  1842   001216  5006               	movf	___awmod@sign^0,w,c
  1843   001218  B4D8               	btfsc	status,2,c
  1844   00121A  EF11  F009         	goto	u1071
  1845   00121E  EF13  F009         	goto	u1070
  1846   001222                     u1071:
  1847   001222  EF17  F009         	goto	l2422
  1848   001226                     u1070:
  1849   001226  6C01               	negf	___awmod@dividend^0,c
  1850   001228  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1851   00122A  B0D8               	btfsc	status,0,c
  1852   00122C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1853   00122E                     l2422:
  1854   00122E  C001  F001         	movff	___awmod@dividend,?___awmod
  1855   001232  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1856   001236  0012               	return		;funcret
  1857   001238                     __end_of___awmod:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function ___awdiv *****************
  1861 ;; Defined at:
  1862 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  dividend        2    0[COMRAM] int 
  1865 ;;  divisor         2    2[COMRAM] int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  quotient        2    6[COMRAM] int 
  1868 ;;  sign            1    5[COMRAM] unsigned char 
  1869 ;;  counter         1    4[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2    0[COMRAM] int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;Total ram usage:        8 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_vfpfcnvrt
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text9
  1894   00100A                     __ptext9:
  1895                           	callstack 0
  1896   00100A                     ___awdiv:
  1897                           	callstack 25
  1898   00100A  0E00               	movlw	0
  1899   00100C  6E06               	movwf	___awdiv@sign^0,c
  1900   00100E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1901   001010  EF0E  F008         	goto	u960
  1902   001014  EF0C  F008         	goto	u961
  1903   001018                     u961:
  1904   001018  EF14  F008         	goto	l2354
  1905   00101C                     u960:
  1906   00101C  6C03               	negf	___awdiv@divisor^0,c
  1907   00101E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1908   001020  B0D8               	btfsc	status,0,c
  1909   001022  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1910   001024  0E01               	movlw	1
  1911   001026  6E06               	movwf	___awdiv@sign^0,c
  1912   001028                     l2354:
  1913   001028  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1914   00102A  EF1B  F008         	goto	u970
  1915   00102E  EF19  F008         	goto	u971
  1916   001032                     u971:
  1917   001032  EF21  F008         	goto	l2360
  1918   001036                     u970:
  1919   001036  6C01               	negf	___awdiv@dividend^0,c
  1920   001038  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1921   00103A  B0D8               	btfsc	status,0,c
  1922   00103C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1923   00103E  0E01               	movlw	1
  1924   001040  1A06               	xorwf	___awdiv@sign^0,f,c
  1925   001042                     l2360:
  1926   001042  0E00               	movlw	0
  1927   001044  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1928   001046  0E00               	movlw	0
  1929   001048  6E07               	movwf	___awdiv@quotient^0,c
  1930   00104A  5003               	movf	___awdiv@divisor^0,w,c
  1931   00104C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1932   00104E  B4D8               	btfsc	status,2,c
  1933   001050  EF2C  F008         	goto	u981
  1934   001054  EF2E  F008         	goto	u980
  1935   001058                     u981:
  1936   001058  EF56  F008         	goto	l2382
  1937   00105C                     u980:
  1938   00105C  0E01               	movlw	1
  1939   00105E  6E05               	movwf	___awdiv@counter^0,c
  1940   001060  EF36  F008         	goto	l2368
  1941   001064                     l2366:
  1942   001064  90D8               	bcf	status,0,c
  1943   001066  3603               	rlcf	___awdiv@divisor^0,f,c
  1944   001068  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1945   00106A  2A05               	incf	___awdiv@counter^0,f,c
  1946   00106C                     l2368:
  1947   00106C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1948   00106E  EF3B  F008         	goto	u991
  1949   001072  EF3D  F008         	goto	u990
  1950   001076                     u991:
  1951   001076  EF32  F008         	goto	l2366
  1952   00107A                     u990:
  1953   00107A                     l2370:
  1954   00107A  90D8               	bcf	status,0,c
  1955   00107C  3607               	rlcf	___awdiv@quotient^0,f,c
  1956   00107E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1957   001080  5003               	movf	___awdiv@divisor^0,w,c
  1958   001082  5C01               	subwf	___awdiv@dividend^0,w,c
  1959   001084  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1960   001086  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1961   001088  A0D8               	btfss	status,0,c
  1962   00108A  EF49  F008         	goto	u1001
  1963   00108E  EF4B  F008         	goto	u1000
  1964   001092                     u1001:
  1965   001092  EF50  F008         	goto	l2378
  1966   001096                     u1000:
  1967   001096  5003               	movf	___awdiv@divisor^0,w,c
  1968   001098  5E01               	subwf	___awdiv@dividend^0,f,c
  1969   00109A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1970   00109C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1971   00109E  8007               	bsf	___awdiv@quotient^0,0,c
  1972   0010A0                     l2378:
  1973   0010A0  90D8               	bcf	status,0,c
  1974   0010A2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1975   0010A4  3203               	rrcf	___awdiv@divisor^0,f,c
  1976   0010A6  2E05               	decfsz	___awdiv@counter^0,f,c
  1977   0010A8  EF3D  F008         	goto	l2370
  1978   0010AC                     l2382:
  1979   0010AC  5006               	movf	___awdiv@sign^0,w,c
  1980   0010AE  B4D8               	btfsc	status,2,c
  1981   0010B0  EF5C  F008         	goto	u1011
  1982   0010B4  EF5E  F008         	goto	u1010
  1983   0010B8                     u1011:
  1984   0010B8  EF62  F008         	goto	l2386
  1985   0010BC                     u1010:
  1986   0010BC  6C07               	negf	___awdiv@quotient^0,c
  1987   0010BE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1988   0010C0  B0D8               	btfsc	status,0,c
  1989   0010C2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1990   0010C4                     l2386:
  1991   0010C4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1992   0010C8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1993   0010CC  0012               	return		;funcret
  1994   0010CE                     __end_of___awdiv:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _sendStringSerial4 *****************
  1998 ;; Defined at:
  1999 ;;		line 35 in file "serial.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  string          2    1[COMRAM] PTR unsigned char 
  2002 ;;		 -> sendRGBCvalSerial4@tempStr(41), STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;Total ram usage:        2 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 2
  2021 ;; This function calls:
  2022 ;;		_sendCharSerial4
  2023 ;; This function is called by:
  2024 ;;		_sendRGBCvalSerial4
  2025 ;;		_sendIntSerial4
  2026 ;;		_sendArrayCharSerial4
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text10
  2031   0013FC                     __ptext10:
  2032                           	callstack 0
  2033   0013FC                     _sendStringSerial4:
  2034                           	callstack 27
  2035   0013FC                     
  2036                           ;serial.c: 37:     while(*string != 0){
  2037   0013FC  EF15  F00A         	goto	l2726
  2038   001400                     l2722:
  2039                           
  2040                           ;serial.c: 38:   sendCharSerial4(*string++);
  2041   001400  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2042   001404  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2043   001408  0E00               	movlw	low (__smallconst shr (0+16))
  2044   00140A  6EF8               	movwf	tblptru,c
  2045   00140C  0E0D               	movlw	(high __ramtop+-1)
  2046   00140E  64F7               	cpfsgt	tblptrh,c
  2047   001410  D003               	bra	u1457
  2048   001412  0008               	tblrd		*
  2049   001414  50F5               	movf	tablat,w,c
  2050   001416  D005               	bra	u1450
  2051   001418                     u1457:
  2052   001418  CFF6 FFE9          	movff	tblptrl,fsr0l
  2053   00141C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2054   001420  50EF               	movf	indf0,w,c
  2055   001422                     u1450:
  2056   001422  EC40  F00C         	call	_sendCharSerial4
  2057   001426  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2058   001428  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2059   00142A                     l2726:
  2060                           
  2061                           ;serial.c: 37:     while(*string != 0){
  2062   00142A  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2063   00142E  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2064   001432  0E00               	movlw	low (__smallconst shr (0+16))
  2065   001434  6EF8               	movwf	tblptru,c
  2066   001436  0E0D               	movlw	(high __ramtop+-1)
  2067   001438  64F7               	cpfsgt	tblptrh,c
  2068   00143A  D003               	bra	u1467
  2069   00143C  0008               	tblrd		*
  2070   00143E  50F5               	movf	tablat,w,c
  2071   001440  D005               	bra	u1460
  2072   001442                     u1467:
  2073   001442  CFF6 FFE9          	movff	tblptrl,fsr0l
  2074   001446  CFF7 FFEA          	movff	tblptrh,fsr0h
  2075   00144A  50EF               	movf	indf0,w,c
  2076   00144C                     u1460:
  2077   00144C  0900               	iorlw	0
  2078   00144E  A4D8               	btfss	status,2,c
  2079   001450  EF2C  F00A         	goto	u1471
  2080   001454  EF2E  F00A         	goto	u1470
  2081   001458                     u1471:
  2082   001458  EF00  F00A         	goto	l2722
  2083   00145C                     u1470:
  2084   00145C  0012               	return		;funcret
  2085   00145E                     __end_of_sendStringSerial4:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _sendCharSerial4 *****************
  2089 ;; Defined at:
  2090 ;;		line 29 in file "serial.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  charToSend      1    wreg     unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  charToSend      1    0[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;Total ram usage:        1 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_sendStringSerial4
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text11
  2119   001880                     __ptext11:
  2120                           	callstack 0
  2121   001880                     _sendCharSerial4:
  2122                           	callstack 27
  2123                           
  2124                           ;incstack = 0
  2125                           ;sendCharSerial4@charToSend stored from wreg
  2126   001880  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2127   001882                     l412:
  2128   001882  010E               	movlb	14	; () banked
  2129   001884  A537               	btfss	55,2,b	;volatile
  2130   001886  EF47  F00C         	goto	u1431
  2131   00188A  EF49  F00C         	goto	u1430
  2132   00188E                     u1431:
  2133   00188E  EF41  F00C         	goto	l412
  2134   001892                     u1430:
  2135   001892                     
  2136                           ; BSR set to: 14
  2137                           ;serial.c: 31:     TX4REG = charToSend;
  2138   001892  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2139   001896                     
  2140                           ; BSR set to: 14
  2141   001896  0012               	return		;funcret
  2142   001898                     __end_of_sendCharSerial4:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _initUSART4 *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "serial.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; Hardware stack levels required when called: 1
  2168 ;; This function calls:
  2169 ;;		Nothing
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text12
  2176   001862                     __ptext12:
  2177                           	callstack 0
  2178   001862                     _initUSART4:
  2179                           	callstack 29
  2180   001862                     
  2181                           ;serial.c: 9:     RC0PPS = 0x12;
  2182   001862  0E12               	movlw	18
  2183   001864  010E               	movlb	14	; () banked
  2184   001866  6F62               	movwf	98,b	;volatile
  2185                           
  2186                           ;serial.c: 10:     RX4PPS = 0x11;
  2187   001868  0E11               	movlw	17
  2188   00186A  6F15               	movwf	21,b	;volatile
  2189   00186C                     
  2190                           ; BSR set to: 14
  2191                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2192   00186C  97E9               	bcf	233,3,b	;volatile
  2193   00186E                     
  2194                           ; BSR set to: 14
  2195                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2196   00186E  95E8               	bcf	232,2,b	;volatile
  2197                           
  2198                           ;serial.c: 14:     SP4BRGL = 51;
  2199   001870  0E33               	movlw	51
  2200   001872  6FE5               	movwf	229,b	;volatile
  2201                           
  2202                           ;serial.c: 15:     SP4BRGH = 0;
  2203   001874  0E00               	movlw	0
  2204   001876  6FE6               	movwf	230,b	;volatile
  2205   001878                     
  2206                           ; BSR set to: 14
  2207                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2208   001878  89E7               	bsf	231,4,b	;volatile
  2209   00187A                     
  2210                           ; BSR set to: 14
  2211                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2212   00187A  8BE8               	bsf	232,5,b	;volatile
  2213   00187C                     
  2214                           ; BSR set to: 14
  2215                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2216   00187C  8FE7               	bsf	231,7,b	;volatile
  2217   00187E                     
  2218                           ; BSR set to: 14
  2219   00187E  0012               	return		;funcret
  2220   001880                     __end_of_initUSART4:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _initDCmotorsPWM *****************
  2224 ;; Defined at:
  2225 ;;		line 5 in file "dc_motor.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;Total ram usage:        2 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; Hardware stack levels required when called: 1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text13
  2254   0012DE                     __ptext13:
  2255                           	callstack 0
  2256   0012DE                     _initDCmotorsPWM:
  2257                           	callstack 29
  2258   0012DE                     
  2259                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2260   0012DE  9485               	bcf	133,2,c	;volatile
  2261                           
  2262                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2263   0012E0  9885               	bcf	133,4,c	;volatile
  2264                           
  2265                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2266   0012E2  9E83               	bcf	131,7,c	;volatile
  2267                           
  2268                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2269   0012E4  9C87               	bcf	135,6,c	;volatile
  2270                           
  2271                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2272   0012E6  947D               	bcf	125,2,c	;volatile
  2273                           
  2274                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2275   0012E8  987D               	bcf	125,4,c	;volatile
  2276                           
  2277                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2278   0012EA  9E7B               	bcf	123,7,c	;volatile
  2279                           
  2280                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2281   0012EC  9C7F               	bcf	127,6,c	;volatile
  2282   0012EE                     
  2283                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2284   0012EE  0E05               	movlw	5
  2285   0012F0  010E               	movlb	14	; () banked
  2286   0012F2  6F74               	movwf	116,b	;volatile
  2287                           
  2288                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2289   0012F4  0E06               	movlw	6
  2290   0012F6  6F76               	movwf	118,b	;volatile
  2291                           
  2292                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2293   0012F8  0E07               	movlw	7
  2294   0012FA  6F69               	movwf	105,b	;volatile
  2295                           
  2296                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2297   0012FC  0E08               	movlw	8
  2298   0012FE  6F88               	movwf	136,b	;volatile
  2299                           
  2300                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2301   001300  50BD               	movf	189,w,c	;volatile
  2302   001302  0B8F               	andlw	-113
  2303   001304  0940               	iorlw	64
  2304   001306  6EBD               	movwf	189,c	;volatile
  2305                           
  2306                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2307   001308  0EE0               	movlw	-32
  2308   00130A  16BE               	andwf	190,f,c	;volatile
  2309                           
  2310                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2311   00130C  50BF               	movf	191,w,c	;volatile
  2312   00130E  0BF0               	andlw	-16
  2313   001310  0901               	iorlw	1
  2314   001312  6EBF               	movwf	191,c	;volatile
  2315   001314                     
  2316                           ; BSR set to: 14
  2317                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2318   001314  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2319   001318                     
  2320                           ; BSR set to: 14
  2321                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2322   001318  8EBD               	bsf	189,7,c	;volatile
  2323                           
  2324                           ;dc_motor.c: 35:     CCPR1H=0;
  2325   00131A  0E00               	movlw	0
  2326   00131C  6EAA               	movwf	170,c	;volatile
  2327                           
  2328                           ;dc_motor.c: 36:     CCPR2H=0;
  2329   00131E  0E00               	movlw	0
  2330   001320  6EA6               	movwf	166,c	;volatile
  2331                           
  2332                           ;dc_motor.c: 37:     CCPR3H=0;
  2333   001322  0E00               	movlw	0
  2334   001324  010F               	movlb	15	; () banked
  2335   001326  6F25               	movwf	37,b	;volatile
  2336                           
  2337                           ;dc_motor.c: 38:     CCPR4H=0;
  2338   001328  0E00               	movlw	0
  2339   00132A  6F21               	movwf	33,b	;volatile
  2340                           
  2341                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2342   00132C  0EFC               	movlw	-4
  2343   00132E  16AD               	andwf	173,f,c	;volatile
  2344                           
  2345                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2346   001330  0EF3               	movlw	-13
  2347   001332  16AD               	andwf	173,f,c	;volatile
  2348                           
  2349                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2350   001334  0ECF               	movlw	-49
  2351   001336  16AD               	andwf	173,f,c	;volatile
  2352                           
  2353                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2354   001338  0E3F               	movlw	-193
  2355   00133A  16AD               	andwf	173,f,c	;volatile
  2356   00133C                     
  2357                           ; BSR set to: 15
  2358                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2359   00133C  88AB               	bsf	171,4,c	;volatile
  2360                           
  2361                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2362   00133E  50AB               	movf	171,w,c	;volatile
  2363   001340  0BF0               	andlw	-16
  2364   001342  090C               	iorlw	12
  2365   001344  6EAB               	movwf	171,c	;volatile
  2366   001346                     
  2367                           ; BSR set to: 15
  2368                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2369   001346  8EAB               	bsf	171,7,c	;volatile
  2370   001348                     
  2371                           ; BSR set to: 15
  2372                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2373   001348  88A7               	bsf	167,4,c	;volatile
  2374                           
  2375                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2376   00134A  50A7               	movf	167,w,c	;volatile
  2377   00134C  0BF0               	andlw	-16
  2378   00134E  090C               	iorlw	12
  2379   001350  6EA7               	movwf	167,c	;volatile
  2380   001352                     
  2381                           ; BSR set to: 15
  2382                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2383   001352  8EA7               	bsf	167,7,c	;volatile
  2384   001354                     
  2385                           ; BSR set to: 15
  2386                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2387   001354  8926               	bsf	38,4,b	;volatile
  2388                           
  2389                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2390   001356  5126               	movf	38,w,b	;volatile
  2391   001358  0BF0               	andlw	-16
  2392   00135A  090C               	iorlw	12
  2393   00135C  6F26               	movwf	38,b	;volatile
  2394   00135E                     
  2395                           ; BSR set to: 15
  2396                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2397   00135E  8F26               	bsf	38,7,b	;volatile
  2398   001360                     
  2399                           ; BSR set to: 15
  2400                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2401   001360  8922               	bsf	34,4,b	;volatile
  2402                           
  2403                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2404   001362  5122               	movf	34,w,b	;volatile
  2405   001364  0BF0               	andlw	-16
  2406   001366  090C               	iorlw	12
  2407   001368  6F22               	movwf	34,b	;volatile
  2408   00136A                     
  2409                           ; BSR set to: 15
  2410                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2411   00136A  8F22               	bsf	34,7,b	;volatile
  2412   00136C                     
  2413                           ; BSR set to: 15
  2414   00136C  0012               	return		;funcret
  2415   00136E                     __end_of_initDCmotorsPWM:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _getRGBCval *****************
  2419 ;; Defined at:
  2420 ;;		line 84 in file "color.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2423 ;;		 -> main@measured_colour(8), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2435 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;Total ram usage:        1 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 4
  2442 ;; This function calls:
  2443 ;;		_color_read_Blue
  2444 ;;		_color_read_Clear
  2445 ;;		_color_read_Green
  2446 ;;		_color_read_Red
  2447 ;; This function is called by:
  2448 ;;		_main
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text14
  2453   001512                     __ptext14:
  2454                           	callstack 0
  2455   001512                     _getRGBCval:
  2456                           	callstack 26
  2457   001512                     
  2458                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2459   001512  ECB4  F00A         	call	_color_read_Red	;wreg free
  2460   001516  500C               	movf	getRGBCval@p^0,w,c
  2461   001518  6ED9               	movwf	fsr2l,c
  2462   00151A  6ADA               	clrf	fsr2h,c
  2463   00151C  C005  FFDE         	movff	?_color_read_Red,postinc2
  2464   001520  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2465                           
  2466                           ;color.c: 87:     p->B = color_read_Blue();
  2467   001524  EC2C  F00B         	call	_color_read_Blue	;wreg free
  2468   001528  500C               	movf	getRGBCval@p^0,w,c
  2469   00152A  6ED9               	movwf	fsr2l,c
  2470   00152C  6ADA               	clrf	fsr2h,c
  2471   00152E  0E04               	movlw	4
  2472   001530  26D9               	addwf	fsr2l,f,c
  2473   001532  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2474   001536  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2475                           
  2476                           ;color.c: 88:     p->G = color_read_Green();
  2477   00153A  ECDC  F00A         	call	_color_read_Green	;wreg free
  2478   00153E  500C               	movf	getRGBCval@p^0,w,c
  2479   001540  6ED9               	movwf	fsr2l,c
  2480   001542  6ADA               	clrf	fsr2h,c
  2481   001544  0E02               	movlw	2
  2482   001546  26D9               	addwf	fsr2l,f,c
  2483   001548  C005  FFDE         	movff	?_color_read_Green,postinc2
  2484   00154C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2485                           
  2486                           ;color.c: 89:     p->C = color_read_Clear();
  2487   001550  EC04  F00B         	call	_color_read_Clear	;wreg free
  2488   001554  500C               	movf	getRGBCval@p^0,w,c
  2489   001556  6ED9               	movwf	fsr2l,c
  2490   001558  6ADA               	clrf	fsr2h,c
  2491   00155A  0E06               	movlw	6
  2492   00155C  26D9               	addwf	fsr2l,f,c
  2493   00155E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2494   001562  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2495   001566  0012               	return		;funcret
  2496   001568                     __end_of_getRGBCval:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _color_read_Red *****************
  2500 ;; Defined at:
  2501 ;;		line 28 in file "color.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  tmp             2    9[COMRAM] unsigned int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2    4[COMRAM] unsigned int 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;Total ram usage:        7 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 3
  2522 ;; This function calls:
  2523 ;;		_I2C_2_Master_Read
  2524 ;;		_I2C_2_Master_RepStart
  2525 ;;		_I2C_2_Master_Start
  2526 ;;		_I2C_2_Master_Stop
  2527 ;;		_I2C_2_Master_Write
  2528 ;; This function is called by:
  2529 ;;		_getRGBCval
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text15
  2534   001568                     __ptext15:
  2535                           	callstack 0
  2536   001568                     _color_read_Red:
  2537                           	callstack 26
  2538   001568                     
  2539                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2540   001568  EC7C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2541                           
  2542                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2543   00156C  0E52               	movlw	82
  2544   00156E  EC60  F00C         	call	_I2C_2_Master_Write
  2545                           
  2546                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2547   001572  0EB6               	movlw	182
  2548   001574  EC60  F00C         	call	_I2C_2_Master_Write
  2549                           
  2550                           ;color.c: 34:  I2C_2_Master_RepStart();
  2551   001578  EC72  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2552                           
  2553                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2554   00157C  0E53               	movlw	83
  2555   00157E  EC60  F00C         	call	_I2C_2_Master_Write
  2556                           
  2557                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2558   001582  0E01               	movlw	1
  2559   001584  EC7A  F00B         	call	_I2C_2_Master_Read
  2560   001588  6E07               	movwf	??_color_read_Red^0,c
  2561   00158A  5007               	movf	??_color_read_Red^0,w,c
  2562   00158C  6E0A               	movwf	color_read_Red@tmp^0,c
  2563   00158E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2564                           
  2565                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2566   001590  0E00               	movlw	0
  2567   001592  EC7A  F00B         	call	_I2C_2_Master_Read
  2568   001596  6E07               	movwf	??_color_read_Red^0,c
  2569   001598  5007               	movf	??_color_read_Red^0,w,c
  2570   00159A  6E09               	movwf	(??_color_read_Red+2)^0,c
  2571   00159C  6A08               	clrf	(??_color_read_Red+1)^0,c
  2572   00159E  500A               	movf	color_read_Red@tmp^0,w,c
  2573   0015A0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2574   0015A2  6E0A               	movwf	color_read_Red@tmp^0,c
  2575   0015A4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2576   0015A6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2577   0015A8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2578                           
  2579                           ;color.c: 38:  I2C_2_Master_Stop();
  2580   0015AA  EC77  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2581   0015AE                     
  2582                           ;color.c: 39:  return tmp;
  2583   0015AE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2584   0015B2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2585   0015B6  0012               	return		;funcret
  2586   0015B8                     __end_of_color_read_Red:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _color_read_Green *****************
  2590 ;; Defined at:
  2591 ;;		line 56 in file "color.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  tmp             2    9[COMRAM] unsigned int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2    4[COMRAM] unsigned int 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        7 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 3
  2612 ;; This function calls:
  2613 ;;		_I2C_2_Master_Read
  2614 ;;		_I2C_2_Master_RepStart
  2615 ;;		_I2C_2_Master_Start
  2616 ;;		_I2C_2_Master_Stop
  2617 ;;		_I2C_2_Master_Write
  2618 ;; This function is called by:
  2619 ;;		_getRGBCval
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text16
  2624   0015B8                     __ptext16:
  2625                           	callstack 0
  2626   0015B8                     _color_read_Green:
  2627                           	callstack 26
  2628   0015B8                     
  2629                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2630   0015B8  EC7C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2631                           
  2632                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2633   0015BC  0E52               	movlw	82
  2634   0015BE  EC60  F00C         	call	_I2C_2_Master_Write
  2635                           
  2636                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2637   0015C2  0EB8               	movlw	184
  2638   0015C4  EC60  F00C         	call	_I2C_2_Master_Write
  2639                           
  2640                           ;color.c: 62:  I2C_2_Master_RepStart();
  2641   0015C8  EC72  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2642                           
  2643                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2644   0015CC  0E53               	movlw	83
  2645   0015CE  EC60  F00C         	call	_I2C_2_Master_Write
  2646                           
  2647                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2648   0015D2  0E01               	movlw	1
  2649   0015D4  EC7A  F00B         	call	_I2C_2_Master_Read
  2650   0015D8  6E07               	movwf	??_color_read_Green^0,c
  2651   0015DA  5007               	movf	??_color_read_Green^0,w,c
  2652   0015DC  6E0A               	movwf	color_read_Green@tmp^0,c
  2653   0015DE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2654                           
  2655                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2656   0015E0  0E00               	movlw	0
  2657   0015E2  EC7A  F00B         	call	_I2C_2_Master_Read
  2658   0015E6  6E07               	movwf	??_color_read_Green^0,c
  2659   0015E8  5007               	movf	??_color_read_Green^0,w,c
  2660   0015EA  6E09               	movwf	(??_color_read_Green+2)^0,c
  2661   0015EC  6A08               	clrf	(??_color_read_Green+1)^0,c
  2662   0015EE  500A               	movf	color_read_Green@tmp^0,w,c
  2663   0015F0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2664   0015F2  6E0A               	movwf	color_read_Green@tmp^0,c
  2665   0015F4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2666   0015F6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2667   0015F8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2668                           
  2669                           ;color.c: 66:  I2C_2_Master_Stop();
  2670   0015FA  EC77  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2671   0015FE                     
  2672                           ;color.c: 67:  return tmp;
  2673   0015FE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2674   001602  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2675   001606  0012               	return		;funcret
  2676   001608                     __end_of_color_read_Green:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _color_read_Clear *****************
  2680 ;; Defined at:
  2681 ;;		line 70 in file "color.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  tmp             2    9[COMRAM] unsigned int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    4[COMRAM] unsigned int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2699 ;;Total ram usage:        7 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 3
  2702 ;; This function calls:
  2703 ;;		_I2C_2_Master_Read
  2704 ;;		_I2C_2_Master_RepStart
  2705 ;;		_I2C_2_Master_Start
  2706 ;;		_I2C_2_Master_Stop
  2707 ;;		_I2C_2_Master_Write
  2708 ;; This function is called by:
  2709 ;;		_getRGBCval
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text17
  2714   001608                     __ptext17:
  2715                           	callstack 0
  2716   001608                     _color_read_Clear:
  2717                           	callstack 26
  2718   001608                     
  2719                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2720   001608  EC7C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2721                           
  2722                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2723   00160C  0E52               	movlw	82
  2724   00160E  EC60  F00C         	call	_I2C_2_Master_Write
  2725                           
  2726                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2727   001612  0EB4               	movlw	180
  2728   001614  EC60  F00C         	call	_I2C_2_Master_Write
  2729                           
  2730                           ;color.c: 76:  I2C_2_Master_RepStart();
  2731   001618  EC72  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2732                           
  2733                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2734   00161C  0E53               	movlw	83
  2735   00161E  EC60  F00C         	call	_I2C_2_Master_Write
  2736                           
  2737                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2738   001622  0E01               	movlw	1
  2739   001624  EC7A  F00B         	call	_I2C_2_Master_Read
  2740   001628  6E07               	movwf	??_color_read_Clear^0,c
  2741   00162A  5007               	movf	??_color_read_Clear^0,w,c
  2742   00162C  6E0A               	movwf	color_read_Clear@tmp^0,c
  2743   00162E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2744                           
  2745                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2746   001630  0E00               	movlw	0
  2747   001632  EC7A  F00B         	call	_I2C_2_Master_Read
  2748   001636  6E07               	movwf	??_color_read_Clear^0,c
  2749   001638  5007               	movf	??_color_read_Clear^0,w,c
  2750   00163A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2751   00163C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2752   00163E  500A               	movf	color_read_Clear@tmp^0,w,c
  2753   001640  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2754   001642  6E0A               	movwf	color_read_Clear@tmp^0,c
  2755   001644  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2756   001646  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2757   001648  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2758                           
  2759                           ;color.c: 80:  I2C_2_Master_Stop();
  2760   00164A  EC77  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2761   00164E                     
  2762                           ;color.c: 81:  return tmp;
  2763   00164E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2764   001652  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2765   001656  0012               	return		;funcret
  2766   001658                     __end_of_color_read_Clear:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _color_read_Blue *****************
  2770 ;; Defined at:
  2771 ;;		line 42 in file "color.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  tmp             2    9[COMRAM] unsigned int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  2    4[COMRAM] unsigned int 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;Total ram usage:        7 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 3
  2792 ;; This function calls:
  2793 ;;		_I2C_2_Master_Read
  2794 ;;		_I2C_2_Master_RepStart
  2795 ;;		_I2C_2_Master_Start
  2796 ;;		_I2C_2_Master_Stop
  2797 ;;		_I2C_2_Master_Write
  2798 ;; This function is called by:
  2799 ;;		_getRGBCval
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text18
  2804   001658                     __ptext18:
  2805                           	callstack 0
  2806   001658                     _color_read_Blue:
  2807                           	callstack 26
  2808   001658                     
  2809                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2810   001658  EC7C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2811                           
  2812                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2813   00165C  0E52               	movlw	82
  2814   00165E  EC60  F00C         	call	_I2C_2_Master_Write
  2815                           
  2816                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2817   001662  0EBA               	movlw	186
  2818   001664  EC60  F00C         	call	_I2C_2_Master_Write
  2819                           
  2820                           ;color.c: 48:  I2C_2_Master_RepStart();
  2821   001668  EC72  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2822                           
  2823                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2824   00166C  0E53               	movlw	83
  2825   00166E  EC60  F00C         	call	_I2C_2_Master_Write
  2826                           
  2827                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2828   001672  0E01               	movlw	1
  2829   001674  EC7A  F00B         	call	_I2C_2_Master_Read
  2830   001678  6E07               	movwf	??_color_read_Blue^0,c
  2831   00167A  5007               	movf	??_color_read_Blue^0,w,c
  2832   00167C  6E0A               	movwf	color_read_Blue@tmp^0,c
  2833   00167E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2834                           
  2835                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2836   001680  0E00               	movlw	0
  2837   001682  EC7A  F00B         	call	_I2C_2_Master_Read
  2838   001686  6E07               	movwf	??_color_read_Blue^0,c
  2839   001688  5007               	movf	??_color_read_Blue^0,w,c
  2840   00168A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2841   00168C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2842   00168E  500A               	movf	color_read_Blue@tmp^0,w,c
  2843   001690  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2844   001692  6E0A               	movwf	color_read_Blue@tmp^0,c
  2845   001694  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2846   001696  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2847   001698  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2848                           
  2849                           ;color.c: 52:  I2C_2_Master_Stop();
  2850   00169A  EC77  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2851   00169E                     
  2852                           ;color.c: 53:  return tmp;
  2853   00169E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2854   0016A2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2855   0016A6  0012               	return		;funcret
  2856   0016A8                     __end_of_color_read_Blue:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _I2C_2_Master_RepStart *****************
  2860 ;; Defined at:
  2861 ;;		line 33 in file "i2c.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		_I2C_2_Master_Idle
  2884 ;; This function is called by:
  2885 ;;		_color_read_Red
  2886 ;;		_color_read_Blue
  2887 ;;		_color_read_Green
  2888 ;;		_color_read_Clear
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text19
  2893   0018E4                     __ptext19:
  2894                           	callstack 0
  2895   0018E4                     _I2C_2_Master_RepStart:
  2896                           	callstack 26
  2897   0018E4                     
  2898                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2899   0018E4  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2900   0018E8                     
  2901                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2902   0018E8  010E               	movlb	14	; () banked
  2903   0018EA  83DA               	bsf	218,1,b	;volatile
  2904   0018EC                     
  2905                           ; BSR set to: 14
  2906   0018EC  0012               	return		;funcret
  2907   0018EE                     __end_of_I2C_2_Master_RepStart:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _I2C_2_Master_Read *****************
  2911 ;; Defined at:
  2912 ;;		line 51 in file "i2c.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  ack             1    wreg     unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  ack             1    2[COMRAM] unsigned char 
  2917 ;;  tmp             1    3[COMRAM] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      unsigned char 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;Total ram usage:        3 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 2
  2934 ;; This function calls:
  2935 ;;		_I2C_2_Master_Idle
  2936 ;; This function is called by:
  2937 ;;		_color_read_Red
  2938 ;;		_color_read_Blue
  2939 ;;		_color_read_Green
  2940 ;;		_color_read_Clear
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text20
  2945   0016F4                     __ptext20:
  2946                           	callstack 0
  2947   0016F4                     _I2C_2_Master_Read:
  2948                           	callstack 26
  2949                           
  2950                           ; BSR set to: 14
  2951                           ;incstack = 0
  2952                           ;I2C_2_Master_Read@ack stored from wreg
  2953   0016F4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2954   0016F6                     
  2955                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2956   0016F6  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2957   0016FA                     
  2958                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2959   0016FA  010E               	movlb	14	; () banked
  2960   0016FC  87DA               	bsf	218,3,b	;volatile
  2961                           
  2962                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2963   0016FE  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2964   001702                     
  2965                           ;i2c.c: 57:   tmp = SSP2BUF;
  2966   001702  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2967                           
  2968                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2969   001706  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2970   00170A                     
  2971                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2972   00170A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2973   00170C  B4D8               	btfsc	status,2,c
  2974   00170E  EF8B  F00B         	goto	u1411
  2975   001712  EF8F  F00B         	goto	u1410
  2976   001716                     u1411:
  2977   001716  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2978   001718  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2979   00171A  EF90  F00B         	goto	u1428
  2980   00171E                     u1410:
  2981   00171E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2982   001720                     u1428:
  2983   001720  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2984   001722  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2985   001724  010E               	movlb	14	; () banked
  2986   001726  51DA               	movf	218,w,b	;volatile
  2987   001728  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2988   00172A  0BDF               	andlw	-33
  2989   00172C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2990   00172E  6FDA               	movwf	218,b	;volatile
  2991   001730                     
  2992                           ; BSR set to: 14
  2993                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2994   001730  89DA               	bsf	218,4,b	;volatile
  2995   001732                     
  2996                           ; BSR set to: 14
  2997                           ;i2c.c: 61:   return tmp;
  2998   001732  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2999   001734                     
  3000                           ; BSR set to: 14
  3001   001734  0012               	return		;funcret
  3002   001736                     __end_of_I2C_2_Master_Read:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _color_click_init *****************
  3006 ;; Defined at:
  3007 ;;		line 4 in file "color.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;Total ram usage:        1 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 4
  3028 ;; This function calls:
  3029 ;;		_I2C_2_Master_Init
  3030 ;;		_color_writetoaddr
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text21
  3037   00176A                     __ptext21:
  3038                           	callstack 0
  3039   00176A                     _color_click_init:
  3040                           	callstack 26
  3041   00176A                     
  3042                           ;color.c: 7:     I2C_2_Master_Init();
  3043   00176A  ECE6  F00B         	call	_I2C_2_Master_Init	;wreg free
  3044   00176E                     
  3045                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3046   00176E  0E01               	movlw	1
  3047   001770  6E03               	movwf	color_writetoaddr@value^0,c
  3048   001772  0E00               	movlw	0
  3049   001774  EC21  F00C         	call	_color_writetoaddr
  3050   001778                     
  3051                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3052   001778  0E3F               	movlw	63
  3053   00177A  6E05               	movwf	??_color_click_init^0,c
  3054   00177C  0E55               	movlw	85
  3055   00177E                     u2057:
  3056   00177E  2EE8               	decfsz	wreg,f,c
  3057   001780  D7FE               	bra	u2057
  3058   001782  2E05               	decfsz	??_color_click_init^0,f,c
  3059   001784  D7FC               	bra	u2057
  3060   001786  0000               	nop	
  3061   001788                     
  3062                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  3063   001788  0E03               	movlw	3
  3064   00178A  6E03               	movwf	color_writetoaddr@value^0,c
  3065   00178C  0E00               	movlw	0
  3066   00178E  EC21  F00C         	call	_color_writetoaddr
  3067   001792                     
  3068                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  3069   001792  0ED5               	movlw	213
  3070   001794  6E03               	movwf	color_writetoaddr@value^0,c
  3071   001796  0E01               	movlw	1
  3072   001798  EC21  F00C         	call	_color_writetoaddr
  3073   00179C  0012               	return		;funcret
  3074   00179E                     __end_of_color_click_init:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _color_writetoaddr *****************
  3078 ;; Defined at:
  3079 ;;		line 20 in file "color.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  address         1    wreg     unsigned char 
  3082 ;;  value           1    2[COMRAM] unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  address         1    3[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;Total ram usage:        2 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 3
  3101 ;; This function calls:
  3102 ;;		_I2C_2_Master_Start
  3103 ;;		_I2C_2_Master_Stop
  3104 ;;		_I2C_2_Master_Write
  3105 ;; This function is called by:
  3106 ;;		_color_click_init
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text22
  3111   001842                     __ptext22:
  3112                           	callstack 0
  3113   001842                     _color_writetoaddr:
  3114                           	callstack 26
  3115                           
  3116                           ;incstack = 0
  3117                           ;color_writetoaddr@address stored from wreg
  3118   001842  6E04               	movwf	color_writetoaddr@address^0,c
  3119   001844                     
  3120                           ;color.c: 21:     I2C_2_Master_Start();
  3121   001844  EC7C  F00C         	call	_I2C_2_Master_Start	;wreg free
  3122                           
  3123                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3124   001848  0E52               	movlw	82
  3125   00184A  EC60  F00C         	call	_I2C_2_Master_Write
  3126                           
  3127                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3128   00184E  5004               	movf	color_writetoaddr@address^0,w,c
  3129   001850  0980               	iorlw	128
  3130   001852  EC60  F00C         	call	_I2C_2_Master_Write
  3131                           
  3132                           ;color.c: 24:     I2C_2_Master_Write(value);
  3133   001856  5003               	movf	color_writetoaddr@value^0,w,c
  3134   001858  EC60  F00C         	call	_I2C_2_Master_Write
  3135                           
  3136                           ;color.c: 25:     I2C_2_Master_Stop();
  3137   00185C  EC77  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3138   001860  0012               	return		;funcret
  3139   001862                     __end_of_color_writetoaddr:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _I2C_2_Master_Write *****************
  3143 ;; Defined at:
  3144 ;;		line 45 in file "i2c.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  data_byte       1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  data_byte       1    1[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;Total ram usage:        1 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 2
  3165 ;; This function calls:
  3166 ;;		_I2C_2_Master_Idle
  3167 ;; This function is called by:
  3168 ;;		_color_writetoaddr
  3169 ;;		_color_read_Red
  3170 ;;		_color_read_Blue
  3171 ;;		_color_read_Green
  3172 ;;		_color_read_Clear
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text23
  3177   0018C0                     __ptext23:
  3178                           	callstack 0
  3179   0018C0                     _I2C_2_Master_Write:
  3180                           	callstack 26
  3181                           
  3182                           ;incstack = 0
  3183                           ;I2C_2_Master_Write@data_byte stored from wreg
  3184   0018C0  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3185   0018C2                     
  3186                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3187   0018C2  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3188   0018C6                     
  3189                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3190   0018C6  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3191   0018CA  0012               	return		;funcret
  3192   0018CC                     __end_of_I2C_2_Master_Write:
  3193                           	callstack 0
  3194                           
  3195 ;; *************** function _I2C_2_Master_Stop *****************
  3196 ;; Defined at:
  3197 ;;		line 39 in file "i2c.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 2
  3218 ;; This function calls:
  3219 ;;		_I2C_2_Master_Idle
  3220 ;; This function is called by:
  3221 ;;		_color_writetoaddr
  3222 ;;		_color_read_Red
  3223 ;;		_color_read_Blue
  3224 ;;		_color_read_Green
  3225 ;;		_color_read_Clear
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text24
  3230   0018EE                     __ptext24:
  3231                           	callstack 0
  3232   0018EE                     _I2C_2_Master_Stop:
  3233                           	callstack 26
  3234   0018EE                     
  3235                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3236   0018EE  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3237   0018F2                     
  3238                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3239   0018F2  010E               	movlb	14	; () banked
  3240   0018F4  85DA               	bsf	218,2,b	;volatile
  3241   0018F6                     
  3242                           ; BSR set to: 14
  3243   0018F6  0012               	return		;funcret
  3244   0018F8                     __end_of_I2C_2_Master_Stop:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function _I2C_2_Master_Start *****************
  3248 ;; Defined at:
  3249 ;;		line 27 in file "i2c.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 2
  3270 ;; This function calls:
  3271 ;;		_I2C_2_Master_Idle
  3272 ;; This function is called by:
  3273 ;;		_color_writetoaddr
  3274 ;;		_color_read_Red
  3275 ;;		_color_read_Blue
  3276 ;;		_color_read_Green
  3277 ;;		_color_read_Clear
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text25
  3282   0018F8                     __ptext25:
  3283                           	callstack 0
  3284   0018F8                     _I2C_2_Master_Start:
  3285                           	callstack 26
  3286   0018F8                     
  3287                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3288   0018F8  ECFB  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3289   0018FC                     
  3290                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3291   0018FC  010E               	movlb	14	; () banked
  3292   0018FE  81DA               	bsf	218,0,b	;volatile
  3293   001900                     
  3294                           ; BSR set to: 14
  3295   001900  0012               	return		;funcret
  3296   001902                     __end_of_I2C_2_Master_Start:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _I2C_2_Master_Idle *****************
  3300 ;; Defined at:
  3301 ;;		line 22 in file "i2c.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;Total ram usage:        1 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_I2C_2_Master_Start
  3326 ;;		_I2C_2_Master_RepStart
  3327 ;;		_I2C_2_Master_Stop
  3328 ;;		_I2C_2_Master_Write
  3329 ;;		_I2C_2_Master_Read
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text26
  3334   0017F6                     __ptext26:
  3335                           	callstack 0
  3336   0017F6                     _I2C_2_Master_Idle:
  3337                           	callstack 26
  3338   0017F6                     l250:
  3339   0017F6  010E               	movlb	14	; () banked
  3340   0017F8  B5D8               	btfsc	216,2,b	;volatile
  3341   0017FA  EF01  F00C         	goto	u1291
  3342   0017FE  EF03  F00C         	goto	u1290
  3343   001802                     u1291:
  3344   001802  EFFB  F00B         	goto	l250
  3345   001806                     u1290:
  3346   001806                     
  3347                           ; BSR set to: 14
  3348   001806  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3349   00180A  0E1F               	movlw	31
  3350   00180C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3351   00180E  A4D8               	btfss	status,2,c
  3352   001810  EF0C  F00C         	goto	u1301
  3353   001814  EF0E  F00C         	goto	u1300
  3354   001818                     u1301:
  3355   001818  EFFB  F00B         	goto	l250
  3356   00181C                     u1300:
  3357   00181C                     
  3358                           ; BSR set to: 14
  3359   00181C  0012               	return		;funcret
  3360   00181E                     __end_of_I2C_2_Master_Idle:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _I2C_2_Master_Init *****************
  3364 ;; Defined at:
  3365 ;;		line 4 in file "i2c.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_color_click_init
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text27
  3394   0017CC                     __ptext27:
  3395                           	callstack 0
  3396   0017CC                     _I2C_2_Master_Init:
  3397                           	callstack 28
  3398   0017CC                     
  3399                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3400   0017CC  010E               	movlb	14	; () banked
  3401   0017CE  51D9               	movf	217,w,b	;volatile
  3402   0017D0  0BF0               	andlw	-16
  3403   0017D2  0908               	iorlw	8
  3404   0017D4  6FD9               	movwf	217,b	;volatile
  3405   0017D6                     
  3406                           ; BSR set to: 14
  3407                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3408   0017D6  8BD9               	bsf	217,5,b	;volatile
  3409                           
  3410                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3411   0017D8  0E9F               	movlw	159
  3412   0017DA  6FD6               	movwf	214,b	;volatile
  3413   0017DC                     
  3414                           ; BSR set to: 14
  3415                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3416   0017DC  8A84               	bsf	132,5,c	;volatile
  3417   0017DE                     
  3418                           ; BSR set to: 14
  3419                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3420   0017DE  8C84               	bsf	132,6,c	;volatile
  3421   0017E0                     
  3422                           ; BSR set to: 14
  3423                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3424   0017E0  9BA7               	bcf	167,5,b	;volatile
  3425   0017E2                     
  3426                           ; BSR set to: 14
  3427                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3428   0017E2  9DA7               	bcf	167,6,b	;volatile
  3429                           
  3430                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3431   0017E4  0E1D               	movlw	29
  3432   0017E6  6F1D               	movwf	29,b	;volatile
  3433                           
  3434                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3435   0017E8  0E1E               	movlw	30
  3436   0017EA  6F1C               	movwf	28,b	;volatile
  3437                           
  3438                           ;i2c.c: 18:   RD5PPS=0x1C;
  3439   0017EC  0E1C               	movlw	28
  3440   0017EE  6F6F               	movwf	111,b	;volatile
  3441                           
  3442                           ;i2c.c: 19:   RD6PPS=0x1B;
  3443   0017F0  0E1B               	movlw	27
  3444   0017F2  6F70               	movwf	112,b	;volatile
  3445   0017F4                     
  3446                           ; BSR set to: 14
  3447   0017F4  0012               	return		;funcret
  3448   0017F6                     __end_of_I2C_2_Master_Init:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _buggy_lights_init *****************
  3452 ;; Defined at:
  3453 ;;		line 4 in file "buggy_lights.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		None
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text28
  3482   00179E                     __ptext28:
  3483                           	callstack 0
  3484   00179E                     _buggy_lights_init:
  3485                           	callstack 29
  3486   00179E                     
  3487                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3488   00179E  9884               	bcf	132,4,c	;volatile
  3489                           
  3490                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3491   0017A0  9288               	bcf	136,1,c	;volatile
  3492                           
  3493                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3494   0017A2  9684               	bcf	132,3,c	;volatile
  3495                           
  3496                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3497   0017A4  9086               	bcf	134,0,c	;volatile
  3498                           
  3499                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3500   0017A6  9088               	bcf	136,0,c	;volatile
  3501                           
  3502                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  3503   0017A8  987C               	bcf	124,4,c	;volatile
  3504                           
  3505                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  3506   0017AA  9280               	bcf	128,1,c	;volatile
  3507                           
  3508                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  3509   0017AC  967C               	bcf	124,3,c	;volatile
  3510                           
  3511                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  3512   0017AE  907E               	bcf	126,0,c	;volatile
  3513                           
  3514                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  3515   0017B0  9080               	bcf	128,0,c	;volatile
  3516                           
  3517                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  3518   0017B2  9287               	bcf	135,1,c	;volatile
  3519                           
  3520                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  3521   0017B4  9881               	bcf	129,4,c	;volatile
  3522                           
  3523                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  3524   0017B6  9E86               	bcf	134,7,c	;volatile
  3525                           
  3526                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  3527   0017B8  927F               	bcf	127,1,c	;volatile
  3528                           
  3529                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  3530   0017BA  9879               	bcf	121,4,c	;volatile
  3531                           
  3532                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  3533   0017BC  9E7E               	bcf	126,7,c	;volatile
  3534                           
  3535                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  3536   0017BE  9087               	bcf	135,0,c	;volatile
  3537                           
  3538                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  3539   0017C0  9E85               	bcf	133,7,c	;volatile
  3540                           
  3541                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  3542   0017C2  9681               	bcf	129,3,c	;volatile
  3543                           
  3544                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  3545   0017C4  907F               	bcf	127,0,c	;volatile
  3546                           
  3547                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  3548   0017C6  9E7D               	bcf	125,7,c	;volatile
  3549                           
  3550                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  3551   0017C8  9679               	bcf	121,3,c	;volatile
  3552   0017CA  0012               	return		;funcret
  3553   0017CC                     __end_of_buggy_lights_init:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _Timer0_init *****************
  3557 ;; Defined at:
  3558 ;;		line 7 in file "timers.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 3
  3579 ;; This function calls:
  3580 ;;		_reset_timer
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text29
  3587   00181E                     __ptext29:
  3588                           	callstack 0
  3589   00181E                     _Timer0_init:
  3590                           	callstack 27
  3591   00181E                     
  3592                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3593   00181E  50D6               	movf	214,w,c	;volatile
  3594   001820  0B1F               	andlw	-225
  3595   001822  0940               	iorlw	64
  3596   001824  6ED6               	movwf	214,c	;volatile
  3597   001826                     
  3598                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3599   001826  88D6               	bsf	214,4,c	;volatile
  3600   001828                     
  3601                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3602   001828  88D5               	bsf	213,4,c	;volatile
  3603                           
  3604                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3605   00182A  50D6               	movf	214,w,c	;volatile
  3606   00182C  0BF0               	andlw	-16
  3607   00182E  090E               	iorlw	14
  3608   001830  6ED6               	movwf	214,c	;volatile
  3609   001832                     
  3610                           ;timers.c: 18:     reset_timer();
  3611   001832  EC66  F00C         	call	_reset_timer	;wreg free
  3612   001836                     
  3613                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  3614   001836  8ED5               	bsf	213,7,c	;volatile
  3615   001838                     
  3616                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  3617   001838  010E               	movlb	14	; () banked
  3618   00183A  8B29               	bsf	41,5,b	;volatile
  3619   00183C                     
  3620                           ; BSR set to: 14
  3621                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  3622   00183C  8CF2               	bsf	242,6,c	;volatile
  3623   00183E                     
  3624                           ; BSR set to: 14
  3625                           ;timers.c: 23:     INTCONbits.GIE = 1;
  3626   00183E  8EF2               	bsf	242,7,c	;volatile
  3627   001840                     
  3628                           ; BSR set to: 14
  3629   001840  0012               	return		;funcret
  3630   001842                     __end_of_Timer0_init:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _reset_timer *****************
  3634 ;; Defined at:
  3635 ;;		line 44 in file "timers.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 2
  3656 ;; This function calls:
  3657 ;;		_write_timer
  3658 ;; This function is called by:
  3659 ;;		_Timer0_init
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text30
  3664   0018CC                     __ptext30:
  3665                           	callstack 0
  3666   0018CC                     _reset_timer:
  3667                           	callstack 27
  3668   0018CC                     
  3669                           ;timers.c: 46:     write_timer(0, 0);
  3670   0018CC  0E00               	movlw	0
  3671   0018CE  6E01               	movwf	write_timer@tL^0,c
  3672   0018D0  0E00               	movlw	0
  3673   0018D2  EC6C  F00C         	call	_write_timer
  3674   0018D6  0012               	return		;funcret
  3675   0018D8                     __end_of_reset_timer:
  3676                           	callstack 0
  3677                           
  3678 ;; *************** function _write_timer *****************
  3679 ;; Defined at:
  3680 ;;		line 35 in file "timers.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  tH              1    wreg     unsigned char 
  3683 ;;  tL              1    0[COMRAM] unsigned char 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  tH              1    1[COMRAM] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3695 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;Total ram usage:        2 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_reset_timer
  3706 ;;		_return_to_sender
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text31
  3711   0018D8                     __ptext31:
  3712                           	callstack 0
  3713   0018D8                     _write_timer:
  3714                           	callstack 27
  3715                           
  3716                           ;incstack = 0
  3717                           ;write_timer@tH stored from wreg
  3718   0018D8  6E02               	movwf	write_timer@tH^0,c
  3719   0018DA                     
  3720                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  3721   0018DA  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  3722   0018DE                     
  3723                           ;timers.c: 41:     TMR0L = tL;
  3724   0018DE  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  3725   0018E2  0012               	return		;funcret
  3726   0018E4                     __end_of_write_timer:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _ISR *****************
  3730 ;; Defined at:
  3731 ;;		line 97 in file "timers.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		Interrupt level 2
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	intcode
  3759   000008                     __pintcode:
  3760                           	callstack 0
  3761   000008                     _ISR:
  3762                           	callstack 24
  3763                           
  3764                           ;incstack = 0
  3765   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3766   00000A                     
  3767                           ;timers.c: 100:     if (PIR0bits.TMR0IF) {
  3768   00000A  010E               	movlb	14	; () banked
  3769   00000C  AB33               	btfss	51,5,b	;volatile
  3770   00000E  EF0B  F000         	goto	i2u92_41
  3771   000012  EF0D  F000         	goto	i2u92_40
  3772   000016                     i2u92_41:
  3773   000016  EF18  F000         	goto	i2l675
  3774   00001A                     i2u92_40:
  3775   00001A                     
  3776                           ; BSR set to: 14
  3777                           ;timers.c: 101:         if (returning) {
  3778   00001A  5055               	movf	_returning^0,w,c
  3779   00001C  B4D8               	btfsc	status,2,c
  3780   00001E  EF13  F000         	goto	i2u93_41
  3781   000022  EF15  F000         	goto	i2u93_40
  3782   000026                     i2u93_41:
  3783   000026  EF17  F000         	goto	i2l674
  3784   00002A                     i2u93_40:
  3785   00002A                     
  3786                           ; BSR set to: 14
  3787                           ;timers.c: 102:             return_flag = 1;
  3788   00002A  0E01               	movlw	1
  3789   00002C  6E54               	movwf	_return_flag^0,c
  3790   00002E                     i2l674:
  3791                           
  3792                           ; BSR set to: 14
  3793                           ;timers.c: 107:         PIR0bits.TMR0IF = 0;
  3794   00002E  9B33               	bcf	51,5,b	;volatile
  3795   000030                     i2l675:
  3796                           
  3797                           ; BSR set to: 14
  3798   000030  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3799   000032  0011               	retfie		f
  3800   000034                     __end_of_ISR:
  3801                           	callstack 0
  3802                           
  3803                           	psect	rparam
  3804   000000                     
  3805                           	psect	temp
  3806   00005E                     btemp:
  3807                           	callstack 0
  3808   00005E                     	ds	1
  3809   000000                     int$flags	set	btemp
  3810   000000                     wtemp8	set	btemp+1
  3811   000000                     ttemp5	set	btemp+1
  3812   000000                     ttemp6	set	btemp+4
  3813   000000                     ttemp7	set	btemp+8
  3814                           
  3815                           	psect	idloc
  3816                           
  3817                           ;Config register IDLOC0 @ 0x200000
  3818                           ;	unspecified, using default values
  3819   200000                     	org	2097152
  3820   200000  FFFF               	dw	65535
  3821                           
  3822                           ;Config register IDLOC1 @ 0x200002
  3823                           ;	unspecified, using default values
  3824   200002                     	org	2097154
  3825   200002  FFFF               	dw	65535
  3826                           
  3827                           ;Config register IDLOC2 @ 0x200004
  3828                           ;	unspecified, using default values
  3829   200004                     	org	2097156
  3830   200004  FFFF               	dw	65535
  3831                           
  3832                           ;Config register IDLOC3 @ 0x200006
  3833                           ;	unspecified, using default values
  3834   200006                     	org	2097158
  3835   200006  FFFF               	dw	65535
  3836                           
  3837                           ;Config register IDLOC4 @ 0x200008
  3838                           ;	unspecified, using default values
  3839   200008                     	org	2097160
  3840   200008  FFFF               	dw	65535
  3841                           
  3842                           ;Config register IDLOC5 @ 0x20000A
  3843                           ;	unspecified, using default values
  3844   20000A                     	org	2097162
  3845   20000A  FFFF               	dw	65535
  3846                           
  3847                           ;Config register IDLOC6 @ 0x20000C
  3848                           ;	unspecified, using default values
  3849   20000C                     	org	2097164
  3850   20000C  FFFF               	dw	65535
  3851                           
  3852                           ;Config register IDLOC7 @ 0x20000E
  3853                           ;	unspecified, using default values
  3854   20000E                     	org	2097166
  3855   20000E  FFFF               	dw	65535
  3856                           
  3857                           	psect	config
  3858                           
  3859                           ;Config register CONFIG1L @ 0x300000
  3860                           ;	External Oscillator mode Selection bits
  3861                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3862                           ;	Power-up default value for COSC bits
  3863                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3864   300000                     	org	3145728
  3865   300000  AA                 	db	170
  3866                           
  3867                           ;Config register CONFIG1H @ 0x300001
  3868                           ;	unspecified, using default values
  3869                           ;	Clock Out Enable bit
  3870                           ;	CLKOUTEN = 0x1, unprogrammed default
  3871                           ;	Clock Switch Enable bit
  3872                           ;	CSWEN = 0x1, unprogrammed default
  3873                           ;	Fail-Safe Clock Monitor Enable bit
  3874                           ;	FCMEN = 0x1, unprogrammed default
  3875   300001                     	org	3145729
  3876   300001  FF                 	db	255
  3877                           
  3878                           ;Config register CONFIG2L @ 0x300002
  3879                           ;	unspecified, using default values
  3880                           ;	Master Clear Enable bit
  3881                           ;	MCLRE = 0x1, unprogrammed default
  3882                           ;	Power-up Timer Enable bit
  3883                           ;	PWRTE = 0x1, unprogrammed default
  3884                           ;	Low-power BOR enable bit
  3885                           ;	LPBOREN = 0x1, unprogrammed default
  3886                           ;	Brown-out Reset Enable bits
  3887                           ;	BOREN = 0x3, unprogrammed default
  3888   300002                     	org	3145730
  3889   300002  FF                 	db	255
  3890                           
  3891                           ;Config register CONFIG2H @ 0x300003
  3892                           ;	unspecified, using default values
  3893                           ;	Brown Out Reset Voltage selection bits
  3894                           ;	BORV = 0x3, unprogrammed default
  3895                           ;	ZCD Disable bit
  3896                           ;	ZCD = 0x1, unprogrammed default
  3897                           ;	PPSLOCK bit One-Way Set Enable bit
  3898                           ;	PPS1WAY = 0x1, unprogrammed default
  3899                           ;	Stack Full/Underflow Reset Enable bit
  3900                           ;	STVREN = 0x1, unprogrammed default
  3901                           ;	Debugger Enable bit
  3902                           ;	DEBUG = 0x1, unprogrammed default
  3903                           ;	Extended Instruction Set Enable bit
  3904                           ;	XINST = 0x1, unprogrammed default
  3905   300003                     	org	3145731
  3906   300003  FF                 	db	255
  3907                           
  3908                           ;Config register CONFIG3L @ 0x300004
  3909                           ;	WDT Period Select bits
  3910                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3911                           ;	WDT operating mode
  3912                           ;	WDTE = OFF, WDT Disabled
  3913   300004                     	org	3145732
  3914   300004  9F                 	db	159
  3915                           
  3916                           ;Config register CONFIG3H @ 0x300005
  3917                           ;	unspecified, using default values
  3918                           ;	WDT Window Select bits
  3919                           ;	WDTCWS = 0x7, unprogrammed default
  3920                           ;	WDT input clock selector
  3921                           ;	WDTCCS = 0x7, unprogrammed default
  3922   300005                     	org	3145733
  3923   300005  FF                 	db	255
  3924                           
  3925                           ;Config register CONFIG4L @ 0x300006
  3926                           ;	unspecified, using default values
  3927                           ;	Write Protection Block 0
  3928                           ;	WRT0 = 0x1, unprogrammed default
  3929                           ;	Write Protection Block 1
  3930                           ;	WRT1 = 0x1, unprogrammed default
  3931                           ;	Write Protection Block 2
  3932                           ;	WRT2 = 0x1, unprogrammed default
  3933                           ;	Write Protection Block 3
  3934                           ;	WRT3 = 0x1, unprogrammed default
  3935                           ;	Write Protection Block 3
  3936                           ;	WRT4 = 0x1, unprogrammed default
  3937                           ;	Write Protection Block 3
  3938                           ;	WRT5 = 0x1, unprogrammed default
  3939                           ;	Write Protection Block 3
  3940                           ;	WRT6 = 0x1, unprogrammed default
  3941                           ;	Write Protection Block 3
  3942                           ;	WRT7 = 0x1, unprogrammed default
  3943   300006                     	org	3145734
  3944   300006  FF                 	db	255
  3945                           
  3946                           ;Config register CONFIG4H @ 0x300007
  3947                           ;	unspecified, using default values
  3948                           ;	Configuration Register Write Protection bit
  3949                           ;	WRTC = 0x1, unprogrammed default
  3950                           ;	Boot Block Write Protection bit
  3951                           ;	WRTB = 0x1, unprogrammed default
  3952                           ;	Data EEPROM Write Protection bit
  3953                           ;	WRTD = 0x1, unprogrammed default
  3954                           ;	Scanner Enable bit
  3955                           ;	SCANE = 0x1, unprogrammed default
  3956                           ;	Low Voltage Programming Enable bit
  3957                           ;	LVP = 0x1, unprogrammed default
  3958   300007                     	org	3145735
  3959   300007  FF                 	db	255
  3960                           
  3961                           ;Config register CONFIG5L @ 0x300008
  3962                           ;	unspecified, using default values
  3963                           ;	UserNVM Program Memory Code Protection bit
  3964                           ;	CP = 0x1, unprogrammed default
  3965                           ;	DataNVM Memory Code Protection bit
  3966                           ;	CPD = 0x1, unprogrammed default
  3967   300008                     	org	3145736
  3968   300008  FF                 	db	255
  3969                           
  3970                           ;Config register CONFIG5H @ 0x300009
  3971                           ;	unspecified, using default values
  3972   300009                     	org	3145737
  3973   300009  FF                 	db	255
  3974                           
  3975                           ;Config register CONFIG6L @ 0x30000A
  3976                           ;	unspecified, using default values
  3977                           ;	Table Read Protection Block 0
  3978                           ;	EBTR0 = 0x1, unprogrammed default
  3979                           ;	Table Read Protection Block 1
  3980                           ;	EBTR1 = 0x1, unprogrammed default
  3981                           ;	Table Read Protection Block 2
  3982                           ;	EBTR2 = 0x1, unprogrammed default
  3983                           ;	Table Read Protection Block 3
  3984                           ;	EBTR3 = 0x1, unprogrammed default
  3985                           ;	Table Read Protection Block 4
  3986                           ;	EBTR4 = 0x1, unprogrammed default
  3987                           ;	Table Read Protection Block 5
  3988                           ;	EBTR5 = 0x1, unprogrammed default
  3989                           ;	Table Read Protection Block 6
  3990                           ;	EBTR6 = 0x1, unprogrammed default
  3991                           ;	Table Read Protection Block 7
  3992                           ;	EBTR7 = 0x1, unprogrammed default
  3993   30000A                     	org	3145738
  3994   30000A  FF                 	db	255
  3995                           
  3996                           ;Config register CONFIG6H @ 0x30000B
  3997                           ;	unspecified, using default values
  3998                           ;	Boot Block Table Read Protection bit
  3999                           ;	EBTRB = 0x1, unprogrammed default
  4000   30000B                     	org	3145739
  4001   30000B  FF                 	db	255
  4002                           tosu	equ	0xFFF
  4003                           tosh	equ	0xFFE
  4004                           tosl	equ	0xFFD
  4005                           stkptr	equ	0xFFC
  4006                           pclatu	equ	0xFFB
  4007                           pclath	equ	0xFFA
  4008                           pcl	equ	0xFF9
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodh	equ	0xFF4
  4014                           prodl	equ	0xFF3
  4015                           indf0	equ	0xFEF
  4016                           postinc0	equ	0xFEE
  4017                           postdec0	equ	0xFED
  4018                           preinc0	equ	0xFEC
  4019                           plusw0	equ	0xFEB
  4020                           fsr0h	equ	0xFEA
  4021                           fsr0l	equ	0xFE9
  4022                           wreg	equ	0xFE8
  4023                           indf1	equ	0xFE7
  4024                           postinc1	equ	0xFE6
  4025                           postdec1	equ	0xFE5
  4026                           preinc1	equ	0xFE4
  4027                           plusw1	equ	0xFE3
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           bsr	equ	0xFE0
  4031                           indf2	equ	0xFDF
  4032                           postinc2	equ	0xFDE
  4033                           postdec2	equ	0xFDD
  4034                           preinc2	equ	0xFDC
  4035                           plusw2	equ	0xFDB
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        44
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      93
    BANK0           160     41     120
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2662$buffer	PTR unsigned char  size(2) Largest target is 0

    S2662$source	PTR const unsigned char  size(2) Largest target is 0

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sendRGBCvalSerial4

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5786
                                             54 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                 _sendRGBCvalSerial4
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  42    41      1    4217
                                             53 COMRAM     1     0      1
                                              0 BANK0     41    41      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    3632
                                             27 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     616
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendRGBCvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      78       5       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5D       1       98.9%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14D      61        0.0%
DATA                 0      0     14D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 06 12:49:40 2024

                 _turn180Delay 00CC                 _color_read_Red 1568                _color_read_Blue 1658  
              _trail_timer_low 0150                             l27 17CA                             l61 179C  
                           l70 16A6                             l64 1860                             l73 1606  
                           l67 15B6                             l76 1656                             l79 1566  
                 ___awdiv@sign 0006               _trail_timer_high 0164               _color_read_Clear 1608  
             _color_read_Green 15B8                            l152 136C                            l250 17F6  
                          l403 187E                            l412 1882                            l253 181C  
                          l421 145C                            l262 18F6                            l247 17F4  
                          l415 1896                            l256 1900                            l432 14BA  
                          l265 18CA                            l259 18EC                            l268 1734  
                          l642 1840                            l651 18D6                            l648 18E2  
                          l990 1236                            l977 10CC                            _ISR 0008  
                          u960 101C                            u961 1018                            u970 1036  
                          u971 1032                            u980 105C                            u981 1058  
                          u990 107A                            u991 1076                            _abs 1736  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00C8  
                         ?_ISR 0001                           ?_abs 0007                           l3000 1244  
                         l3010 1278                           l3002 124C                           l3020 129C  
                         l3012 1280                           l3004 1254                           l1502 1906  
                         l3030 12A6                           l3022 129E                           l3014 1290  
                         l3006 1268                           l2400 11B4                           l1424 16F2  
                         l3040 12BE                           l3032 12A8                           l3024 12A0  
                         l3016 1294                           l3008 1270                           l2410 11EC  
                         l2402 11BC                           l3034 12AC                           l3026 12A2  
                         l3018 1298                           l2420 1226                           l2412 1202  
                         l2404 11CE                           l3036 12AE                           l3028 12A4  
                         l2350 101C                           l2422 122E                           l2414 120A  
                         l2406 11D6                           l2430 10EE                           l3038 12B6  
                         l1471 1508                           l2600 18C6                           l2360 1042  
                         l2352 1024                           l2416 1210                           l2408 11DE  
                         l2440 1736                           l2432 10F8                           l1472 1510  
                         l1465 0FB6                           l2530 17F6                           l2602 18EE  
                         l2610 16F6                           l2370 107A                           l2362 104A  
                         l2354 1028                           l2346 100A                           l2418 1216  
                         l2442 1744                           l2434 1114                           l2426 10CE  
                         l1466 1008                           l1491 1186                           l2532 1806  
                         l2604 18F2                           l2620 1732                           l2612 16FA  
                         l2380 10A6                           l2372 1080                           l2364 105C  
                         l2356 1036                           l2348 100E                           l1476 1750  
                         l2436 1146                           l2428 10DE                           l2540 0E4A  
                         l2614 1702                           l2606 18E4                           l2702 1658  
                         l2710 15FE                           l2374 1096                           l2366 1064  
                         l2382 10AC                           l2358 103E                           l2390 1188  
                         l2550 0EA6                           l2542 0E58                           l2534 0E14  
                         l1479 1768                           l2616 170A                           l2608 18E8  
                         l2704 169E                           l2720 13FC                           l2384 10BC  
                         l2376 109E                           l2368 106C                           l2392 118C  
                         l2560 0F2C                           l2552 0EBE                           l2544 0E5C  
                         l2536 0E1C                           l2618 1730                           l2714 1608  
                         l2722 1400                           l2386 10C4                           l2378 10A0  
                         l2394 119A                           l2570 0F72                           l2562 0F30  
                         l2554 0EC8                           l2546 0E66                           l2538 0E42  
                         l2730 16B4                           l2716 164E                           l2708 15B8  
                         l2724 1426                           l2396 11A2                           l2572 0F80  
                         l2564 0F42                           l2556 0EE0                           l2580 0FC2  
                         l2548 0E86                           l2732 16BC                           l2670 18DA  
                         l2910 1878                           l2726 142A                           l2398 11A6  
                         l2590 1000                           l2582 0FCA                           l2574 0F88  
                         l2566 0F52                           l2558 0F10                           l2734 16C4  
                         l2672 18DE                           l2920 1828                           l2912 187A  
                         l2904 1862                           l2576 0FA2                           l2568 0F62  
                         l2680 14E8                           l2736 16DC                           l2728 16A8  
                         l2842 18CC                           l2930 183E                           l2922 1832  
                         l2690 17E0                           l2682 17CC                           l2594 18F8  
                         l2850 1778                           l2914 187C                           l2906 186C  
                         l2666 1882                           l2578 0FA4                           l2586 0FD6  
                         l2674 14BC                           l2738 16EA                           l2924 1836  
                         l2916 181E                           l2844 179E                           l2692 17E2  
                         l2684 17D6                           l2596 18FC                           l2852 1788  
                         l2860 12EE                           l2908 186E                           l2668 1892  
                         l2588 0FF8                           l2676 14C0                           l2932 145E  
                         l2926 1838                           l2918 1826                           l2686 17DC  
                         l2598 18C2                           l2694 1844                           l2854 1792  
                         l2846 176A                           l2870 1348                           l2862 1314  
                         l2678 14CE                           l2934 14B0                           l2928 183C  
                         l2688 17DE                           l2848 176E                           l2696 1568  
                         l2856 1512                           l2880 136A                           l2872 1352  
                         l2864 1318                           l2698 15AE                           l2874 1354  
                         l2866 133C                           l2858 12DE                           l2876 135E  
                         l2868 1346                           l2878 1360                           l2998 1238  
                         STR_2 0E0F                           STR_5 0E01                           u1000 1096  
                         u1001 1092                           u1010 10BC                           u1011 10B8  
                         u1020 119A                           u1100 1114                           u1021 1196  
                         u1101 1110                           u1030 11B4                           u1110 1146  
                         u1031 11B0                           u1111 1142                           u1040 11CE  
                         u1120 1744                           u1041 11CA                           u1121 1740  
                         u1050 11EC                           u1051 11E8                           u1300 181C  
                         u1060 1202                           u1301 1818                           u1061 11FE  
                         u1070 1226                           u1310 0E42                           u1071 1222  
                         u1311 0E3E                           u1080 10DE                           u1400 0FB6  
                         u1320 0E86                           u1081 10DA                           u1401 0FB2  
                         u1321 0E82                           u1410 171E                           u1090 10EE  
                         u1330 0EA6                           u1411 1716                           u1091 10EA  
                         u1331 0EA2                           u1340 0EDC                           u1341 0ED6  
                         u1430 1892                           u1350 0EDE                           u1431 188E  
                         u2047 12C8                           u1360 0F42                           u1440 1508  
                 _BAUD4CONbits 0EE9                           u2057 177E                           u1361 0F3E  
                         u1441 1504                           u1290 1806                           u1450 1422  
                         u1370 0F52                           u1291 1802                           u1371 0F4E  
                         u1428 1720                           u1460 144C                           u1380 0F62  
                         u1381 0F5E                           u1470 145C                           u1390 0F72  
                         u1471 1458                           u1391 0F6E                           u1457 1418  
                         _T2PR 0FBC                           u1467 1442                           abs@a 0007  
                         _dbuf 0060                           _main 1238                           _prec 0098  
                         _nout 0094                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005E             _sendRGBCvalSerial4 145E                           start 0034  
       __end_of_color_read_Red 15B8                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 0036                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                          ?_main 0001             _timer_high_pointer 005A  
              __end_of___awdiv 10CE                __end_of___awmod 1238                ___awdiv@divisor 0003  
                        i2l674 002E                          i2l675 0030                ___awdiv@counter 0005  
                 vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C                          _TMR0H 0FD4  
                        _TMR0L 0FD3        __end_of_sendCharSerial4 1898     __end_of_I2C_2_Master_Start 1902  
                  _write_timer 18D8     __end_of_I2C_2_Master_Write 18CC                    _turningGear 00D6  
                        _flags 009A           ??_sendRGBCvalSerial4 0037                          _fputc 10CE  
                        _width 0096                          _putch 1906              _turnRight135Delay 00CE  
                        tablat 0FF5                _turnLeft90Delay 00D4                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 16F4        __end_of_color_read_Blue 16A8  
        _I2C_2_Master_RepStart 18E4                ?_color_read_Red 0005                __initialization 136E  
                 __end_of_main 12DE                         ??_main 0037                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2320 000A  
                       i2l2322 001A                         i2l2324 002A                         _RG6PPS 0E88  
                vfpfcnvrt@done 000F       __end_of_color_click_init 179E                         _RX4PPS 0E15  
                       _TX4REG 0EE4               _turnLeft135Delay 00D0                  ??_Timer0_init 0003  
                 ?_reset_timer 0001                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001B  
                    ??___awdiv 0005                      ??___awmod 0005                         clear_0 13D4  
                       clear_1 13E0                         clear_2 13EC               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       fputc@c 0001                   __pdataCOMRAM 005A              _timer_low_pointer 00C6  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1512              ??_initDCmotorsPWM 0003                      ??_sprintf 0027  
            _buggy_lights_init 179E                     __accesstop 0060        __end_of__initialization 13F2  
     __end_of_color_read_Clear 1658       __end_of_color_read_Green 1608         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 1898                   __pidataBANK1 18AC  
          ??_buggy_lights_init 0001                  __end_of_fputc 1188                  __end_of_putch 1908  
          __end_of_Timer0_init 1842                        ??_fputc 0004      __end_of_buggy_lights_init 17CC  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
                   _getRGBCval 1512              _color_writetoaddr 1842                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                   ?_write_timer 0001                        i2u92_40 001A  
                      i2u92_41 0016                        i2u93_40 002A                        i2u93_41 0026  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1862             _I2C_2_Master_Start 18F8  
                   _initUSART4 1862             _I2C_2_Master_Write 18C0                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 181E  
      sendStringSerial4@string 0002                        ___awdiv 100A                        ___awmod 1188  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0018  
                 __psmallconst 0E00                        __pcinit 136E                        __ramtop 0E00  
                      __ptext0 1238                        __ptext1 145E                        __ptext2 16A8  
                      __ptext3 14BC                        __ptext4 0E14                        __ptext5 10CE  
                      __ptext6 1906                        __ptext7 1736                        __ptext8 1188  
                      __ptext9 100A                      _T2CONbits 0FBD               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 0059                        _sprintf 16A8  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 13F2  
                  ?_getRGBCval 000C                        fputc@fp 0003              ?_color_click_init 0001  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 100A                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0013                     ??_vfprintf 001B  
              _initDCmotorsPWM 12DE                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 0FAB              ?_color_read_Clear 0005  
                 _EUSART4RXbuf 0080                   _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001                     main@motorL 0041  
                   main@motorR 004A             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0012                    vfpfcnvrt@fp 000B  
                __pidataCOMRAM 1902      sendRGBCvalSerial4@col_val 0036            color_read_Clear@tmp 000A  
          start_initialization 136E                    __end_of_ISR 0034                    __end_of_abs 176A  
                _TxBufWriteCnt 0057               _turnRight90Delay 00D2      sendRGBCvalSerial4@tempStr 009B  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 136E                    vfprintf@fmt 0019  
                  __pdataBANK0 00C4                    __pdataBANK1 0164                    __pbssCOMRAM 0053  
                __pcstackBANK0 009B                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___awdiv 0001                       ?___awmod 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 17F6  
            _I2C_2_Master_Init 17CC              _I2C_2_Master_Read 16F4              _I2C_2_Master_Stop 18EE  
                 _RxBufReadCnt 0058             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                  _headbuttDelay 00CA  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C                      _rampDelay 005D  
                 ??_getRGBCval 000D              _sendStringSerial4 13FC            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80                       _PIE0bits 0E29             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                  ??_reset_timer 0003                       _PIR0bits 0E33  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0004                       _SSP2STAT 0ED8  
                    _returning 0055                      _vfpfcnvrt 0E14      __end_of_I2C_2_Master_Idle 181E  
    __end_of_I2C_2_Master_Init 17F6      __end_of_I2C_2_Master_Read 1736      __end_of_I2C_2_Master_Stop 18F8  
  I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 1568     __end_of_sendRGBCvalSerial4 14BC  
            ??_color_read_Blue 0007                   _TxBufReadCnt 0056                     vfpfcnvrt@c 0017  
                    copy_data0 1382                      copy_data1 13A2                      copy_data2 13C2  
    __end_of_sendStringSerial4 145E  __end_of_I2C_2_Master_RepStart 18EE             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001A  
                     __Lrparam 0000                     vfprintf@fp 0018                     ?_vfpfcnvrt 000B  
          __end_of_reset_timer 18D8                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001E                     sprintf@ret 0027                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6             __end_of_initUSART4 1880                       __ptext10 13FC  
                     __ptext11 1880                       __ptext20 16F4                       __ptext12 1862  
                     __ptext21 176A                       __ptext13 12DE                       __ptext30 18CC  
                     __ptext22 1842                       __ptext14 1512                       __ptext31 18D8  
                     __ptext23 18C0                       __ptext15 1568                       __ptext24 18EE  
                     __ptext16 15B8                       __ptext25 18F8                       __ptext17 1608  
                     __ptext26 17F6                       __ptext18 1658                       __ptext27 17CC  
                     __ptext19 18E4                       __ptext28 179E                       __ptext29 181E  
                  getRGBCval@p 000C            main@measured_colour 0039                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     int$flags 005E                       _vfprintf 14BC                     _INTCONbits 0FF2  
                ??_write_timer 0002                       intlevel2 0000                      sprintf@ap 0029  
                 _topGearRight 00D7              _manoeuvre_pointer 00C4                    _reset_timer 18CC  
                  ??_vfpfcnvrt 000E               _color_click_init 176A                    _topGearLeft 005C  
                     sprintf@f 002A                       sprintf@s 001C                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                _trail_manoeuvre 013C                    _return_flag 0054  
              _manoeuvre_count 0053                     _TX4STAbits 0EE8                _sendCharSerial4 1880  
          __end_of_write_timer 18E4  
