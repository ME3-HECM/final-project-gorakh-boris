

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 15:25:23 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 18/08/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F67K40 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   00153C                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _squareDelay
    80   00153C  012C               	dw	300
    81                           
    82                           ;initializer for _headbuttDelay
    83   00153E  0046               	dw	70
    84                           
    85                           ;initializer for _turn180Delay
    86   001540  01FE               	dw	510
    87                           
    88                           ;initializer for _turnRight135Delay
    89   001542  012C               	dw	300
    90                           
    91                           ;initializer for _turnLeft135Delay
    92   001544  012C               	dw	300
    93                           
    94                           ;initializer for _turnRight90Delay
    95   001546  00AF               	dw	175
    96                           
    97                           ;initializer for _turnLeft90Delay
    98   001548  00AF               	dw	175
    99                           
   100                           ;initializer for _manoeuvre_count
   101   00154A  14                 	db	20
   102                           
   103                           ;initializer for _manoeuvre_pointer
   104   00154B  D8                 	db	low (_trail_manoeuvre+20)
   105                           
   106                           ;initializer for _timer_low_pointer
   107   00154C  C4                 	db	low (_trail_timer_low+20)
   108                           
   109                           ;initializer for _timer_high_pointer
   110   00154D  EC                 	db	low (_trail_timer_high+20)
   111                           
   112                           ;initializer for _backtrack
   113   00154E  01                 	db	1
   114                           
   115                           ;initializer for _turningGear
   116   00154F  2A                 	db	42
   117                           
   118                           ;initializer for _topGearRight
   119   001550  14                 	db	20
   120                           
   121                           ;initializer for _topGearLeft
   122   001551  14                 	db	20
   123                           
   124                           ;initializer for _rampDelay
   125   001552  08                 	db	8
   126                           
   127                           	psect	idataBANK0
   128   001460                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _trail_manoeuvre
   132   001460  01                 	db	1
   133   001461  02                 	db	2
   134   001462  03                 	db	3
   135   001463  04                 	db	4
   136   001464  05                 	db	5
   137   001465  06                 	db	6
   138   001466  07                 	db	7
   139   001467  08                 	db	8
   140   001468  09                 	db	9
   141   001469  00                 	db	0
   142   00146A  01                 	db	1
   143   00146B  02                 	db	2
   144   00146C  03                 	db	3
   145   00146D  04                 	db	4
   146   00146E  05                 	db	5
   147   00146F  06                 	db	6
   148   001470  07                 	db	7
   149   001471  08                 	db	8
   150   001472  09                 	db	9
   151   001473  00                 	db	0
   152                           
   153                           ;initializer for _trail_timer_high
   154   001474  03                 	db	3
   155   001475  06                 	db	6
   156   001476  03                 	db	3
   157   001477  06                 	db	6
   158   001478  03                 	db	3
   159   001479  06                 	db	6
   160   00147A  03                 	db	3
   161   00147B  06                 	db	6
   162   00147C  03                 	db	3
   163   00147D  06                 	db	6
   164   00147E  03                 	db	3
   165   00147F  06                 	db	6
   166   001480  03                 	db	3
   167   001481  06                 	db	6
   168   001482  03                 	db	3
   169   001483  06                 	db	6
   170   001484  03                 	db	3
   171   001485  06                 	db	6
   172   001486  03                 	db	3
   173   001487  06                 	db	6
   174   000000                     _TX4REG	set	3812
   175   000000                     _RC4STAbits	set	3815
   176   000000                     _SP4BRGH	set	3814
   177   000000                     _LATEbits	set	3965
   178   000000                     _TRISEbits	set	3973
   179   000000                     _LATGbits	set	3967
   180   000000                     _TRISGbits	set	3975
   181   000000                     _LATFbits	set	3966
   182   000000                     _LATHbits	set	3968
   183   000000                     _TRISFbits	set	3974
   184   000000                     _TRISHbits	set	3976
   185   000000                     _SSP2CON2bits	set	3802
   186   000000                     _RX4PPS	set	3605
   187   000000                     _SSP2CLKPPS	set	3612
   188   000000                     _SSP2DATPPS	set	3613
   189   000000                     _RC7PPS	set	3689
   190   000000                     _RE2PPS	set	3700
   191   000000                     _LATAbits	set	3961
   192   000000                     _LATDbits	set	3964
   193   000000                     _TRISDbits	set	3972
   194   000000                     _PORTFbits	set	3982
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _CCPR2H	set	4006
   198   000000                     _CCPR1H	set	4010
   199   000000                     _TRISCbits	set	3971
   200   000000                     _TRISAbits	set	3969
   201   000000                     _LATCbits	set	3963
   202   000000                     _RE4PPS	set	3702
   203   000000                     _RG6PPS	set	3720
   204   000000                     _RD5PPS	set	3695
   205   000000                     _ANSELDbits	set	3751
   206   000000                     _SSP2ADD	set	3798
   207   000000                     _SSP2CON1bits	set	3801
   208   000000                     _CCPR4H	set	3873
   209   000000                     _CCPR3H	set	3877
   210   000000                     _TMR0L	set	4051
   211   000000                     _TMR0H	set	4052
   212   000000                     _T0CON0bits	set	4053
   213   000000                     _T0CON1bits	set	4054
   214   000000                     _T2CLKCONbits	set	4031
   215   000000                     _T2HLTbits	set	4030
   216   000000                     _CCP1CONbits	set	4011
   217   000000                     _CCPTMRS0bits	set	4013
   218   000000                     _CCP2CONbits	set	4007
   219   000000                     _CCP3CONbits	set	3878
   220   000000                     _CCP4CONbits	set	3874
   221   000000                     _RC4REG	set	3811
   222   000000                     _SP4BRGL	set	3813
   223   000000                     _TX4STAbits	set	3816
   224   000000                     _BAUD4CONbits	set	3817
   225   000000                     _SSP2CON2	set	3802
   226   000000                     _SSP2STAT	set	3800
   227   000000                     _ANSELFbits	set	3764
   228   000000                     _SSP2BUF	set	3797
   229   000000                     _PIE0bits	set	3625
   230   000000                     _PIE4bits	set	3629
   231   000000                     _PIR4bits	set	3639
   232   000000                     _RC0PPS	set	3682
   233   000000                     _RD6PPS	set	3696
   234   000000                     _PIR0bits	set	3635
   235   000000                     _INTCONbits	set	4082
   236                           
   237                           	psect	smallconst
   238   000E00                     __psmallconst:
   239                           	callstack 0
   240   000E00  00                 	db	0
   241   000E01                     STR_1:
   242                           
   243                           ; BSR set to: 14
   244   000E01  25                 	db	37
   245   000E02  64                 	db	100	;'d'
   246   000E03  20                 	db	32
   247   000E04  0D                 	db	13
   248   000E05  00                 	db	0
   249   000E06                     STR_2:
   250                           
   251                           ; BSR set to: 14
   252   000E06  25                 	db	37
   253   000E07  64                 	db	100	;'d'
   254   000E08  00                 	db	0
   255   000E09  00                 	db	0	; dummy byte at the end
   256   000000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260   00131A                     __pcinit:
   261                           	callstack 0
   262   00131A                     start_initialization:
   263                           	callstack 0
   264   00131A                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (40 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269   00131A  0E60               	movlw	low __pidataBANK0
   270   00131C  6EF6               	movwf	tblptrl,c
   271   00131E  0E14               	movlw	high __pidataBANK0
   272   001320  6EF7               	movwf	tblptrh,c
   273   001322  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274   001324  6EF8               	movwf	tblptru,c
   275   001326  EE00  F0C4         	lfsr	0,__pdataBANK0
   276   00132A  EE10 F028          	lfsr	1,40
   277   00132E                     copy_data0:
   278   00132E  0009               	tblrd		*+
   279   001330  CFF5 FFEE          	movff	tablat,postinc0
   280   001334  50E5               	movf	postdec1,w,c
   281   001336  50E1               	movf	fsr1l,w,c
   282   001338  E1FA               	bnz	copy_data0
   283                           
   284                           ; Initialize objects allocated to COMRAM (23 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286   00133A  0E3C               	movlw	low __pidataCOMRAM
   287   00133C  6EF6               	movwf	tblptrl,c
   288   00133E  0E15               	movlw	high __pidataCOMRAM
   289   001340  6EF7               	movwf	tblptrh,c
   290   001342  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291   001344  6EF8               	movwf	tblptru,c
   292   001346  EE00  F032         	lfsr	0,__pdataCOMRAM
   293   00134A  EE10 F017          	lfsr	1,23
   294   00134E                     copy_data1:
   295   00134E  0009               	tblrd		*+
   296   001350  CFF5 FFEE          	movff	tablat,postinc0
   297   001354  50E5               	movf	postdec1,w,c
   298   001356  50E1               	movf	fsr1l,w,c
   299   001358  E1FA               	bnz	copy_data1
   300                           
   301                           ; Clear objects allocated to BANK0 (100 bytes)
   302   00135A  EE00  F060         	lfsr	0,__pbssBANK0
   303   00135E  0E64               	movlw	100
   304   001360                     clear_0:
   305   001360  6AEE               	clrf	postinc0,c
   306   001362  06E8               	decf	wreg,f,c
   307   001364  E1FD               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to COMRAM (5 bytes)
   310   001366  6A4D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   311   001368  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   312   00136A  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   313   00136C  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   314   00136E  6A49               	clrf	__pbssCOMRAM& (0+255),c
   315   001370                     end_of_initialization:
   316                           	callstack 0
   317   001370                     __end_of__initialization:
   318                           	callstack 0
   319   001370  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   320   001372  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321   001374  0100               	movlb	0
   322   001376  EFAF  F007         	goto	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMRAM
   325   000049                     __pbssCOMRAM:
   326                           	callstack 0
   327   000049                     _returnFlag:
   328                           	callstack 0
   329   000049                     	ds	1
   330   00004A                     _TxBufReadCnt:
   331                           	callstack 0
   332   00004A                     	ds	1
   333   00004B                     _TxBufWriteCnt:
   334                           	callstack 0
   335   00004B                     	ds	1
   336   00004C                     _RxBufReadCnt:
   337                           	callstack 0
   338   00004C                     	ds	1
   339   00004D                     _RxBufWriteCnt:
   340                           	callstack 0
   341   00004D                     	ds	1
   342                           
   343                           	psect	dataCOMRAM
   344   000032                     __pdataCOMRAM:
   345                           	callstack 0
   346   000032                     _squareDelay:
   347                           	callstack 0
   348   000032                     	ds	2
   349   000034                     _headbuttDelay:
   350                           	callstack 0
   351   000034                     	ds	2
   352   000036                     _turn180Delay:
   353                           	callstack 0
   354   000036                     	ds	2
   355   000038                     _turnRight135Delay:
   356                           	callstack 0
   357   000038                     	ds	2
   358   00003A                     _turnLeft135Delay:
   359                           	callstack 0
   360   00003A                     	ds	2
   361   00003C                     _turnRight90Delay:
   362                           	callstack 0
   363   00003C                     	ds	2
   364   00003E                     _turnLeft90Delay:
   365                           	callstack 0
   366   00003E                     	ds	2
   367   000040                     _manoeuvre_count:
   368                           	callstack 0
   369   000040                     	ds	1
   370   000041                     _manoeuvre_pointer:
   371                           	callstack 0
   372   000041                     	ds	1
   373   000042                     _timer_low_pointer:
   374                           	callstack 0
   375   000042                     	ds	1
   376   000043                     _timer_high_pointer:
   377                           	callstack 0
   378   000043                     	ds	1
   379   000044                     _backtrack:
   380                           	callstack 0
   381   000044                     	ds	1
   382   000045                     _turningGear:
   383                           	callstack 0
   384   000045                     	ds	1
   385   000046                     _topGearRight:
   386                           	callstack 0
   387   000046                     	ds	1
   388   000047                     _topGearLeft:
   389                           	callstack 0
   390   000047                     	ds	1
   391   000048                     _rampDelay:
   392                           	callstack 0
   393   000048                     	ds	1
   394                           
   395                           	psect	bssBANK0
   396   000060                     __pbssBANK0:
   397                           	callstack 0
   398   000060                     _EUSART4TXbuf:
   399                           	callstack 0
   400   000060                     	ds	60
   401   00009C                     _EUSART4RXbuf:
   402                           	callstack 0
   403   00009C                     	ds	20
   404   0000B0                     _trail_timer_low:
   405                           	callstack 0
   406   0000B0                     	ds	20
   407                           
   408                           	psect	dataBANK0
   409   0000C4                     __pdataBANK0:
   410                           	callstack 0
   411   0000C4                     _trail_manoeuvre:
   412                           	callstack 0
   413   0000C4                     	ds	20
   414   0000D8                     _trail_timer_high:
   415                           	callstack 0
   416   0000D8                     	ds	20
   417                           
   418                           	psect	cstackCOMRAM
   419   000001                     __pcstackCOMRAM:
   420                           	callstack 0
   421   000001                     ??_I2C_2_Master_Idle:
   422   000001                     ?___wmul:
   423                           	callstack 0
   424   000001                     readTrail@tH:
   425                           	callstack 0
   426   000001                     initDCmotorsPWM@PWMperiod:
   427                           	callstack 0
   428   000001                     ___wmul@multiplier:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x0
   432   000001                     	ds	1
   433   000002                     I2C_2_Master_Write@data_byte:
   434                           	callstack 0
   435   000002                     readTrail@tL:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x1
   439   000002                     	ds	1
   440   000003                     color_writetoaddr@value:
   441                           	callstack 0
   442   000003                     readTrail@man:
   443                           	callstack 0
   444   000003                     ___wmul@multiplicand:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x2
   448   000003                     	ds	1
   449   000004                     color_writetoaddr@address:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x3
   453   000004                     	ds	1
   454   000005                     ??_color_click_init:
   455   000005                     ___wmul@product:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x4
   459   000005                     	ds	2
   460   000007                     ?___lwdiv:
   461                           	callstack 0
   462   000007                     ___lwdiv@dividend:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466   000007                     	ds	2
   467   000009                     ___lwdiv@divisor:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x8
   471   000009                     	ds	2
   472   00000B                     ___lwdiv@quotient:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xA
   476   00000B                     	ds	2
   477   00000D                     ___lwdiv@counter:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xC
   481   00000D                     	ds	1
   482   00000E                     setMotorPWM@m:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0xD
   486   00000E                     	ds	1
   487   00000F                     ??_setMotorPWM:
   488                           
   489                           ; 1 bytes @ 0xE
   490   00000F                     	ds	2
   491   000011                     setMotorPWM@posDuty:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x10
   495   000011                     	ds	1
   496   000012                     setMotorPWM@negDuty:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x11
   500   000012                     	ds	1
   501   000013                     stop@mL:
   502                           	callstack 0
   503   000013                     fullSpeedAhead@mL:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x12
   507   000013                     	ds	1
   508   000014                     stop@mR:
   509                           	callstack 0
   510   000014                     fullSpeedAhead@mR:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x13
   514   000014                     	ds	1
   515   000015                     ??_stop:
   516   000015                     ??_fullSpeedAhead:
   517                           
   518                           ; 1 bytes @ 0x14
   519   000015                     	ds	1
   520   000016                     fullSpeedAhead@leftGear:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x15
   524   000016                     	ds	1
   525   000017                     fullSpeedAhead@rightGear:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x16
   529   000017                     	ds	1
   530   000018                     returnToSender@mL:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x17
   534   000018                     	ds	1
   535   000019                     returnToSender@mR:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x18
   539   000019                     	ds	1
   540   00001A                     ??_returnToSender:
   541                           
   542                           ; 1 bytes @ 0x19
   543   00001A                     	ds	1
   544   00001B                     returnToSender@mann:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x1A
   548   00001B                     	ds	1
   549   00001C                     returnToSender@timerH:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x1B
   553   00001C                     	ds	1
   554   00001D                     returnToSender@timerL:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x1C
   558   00001D                     	ds	1
   559   00001E                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x1D
   562   00001E                     	ds	2
   563   000020                     main@motorL:
   564                           	callstack 0
   565                           
   566                           ; 9 bytes @ 0x1F
   567   000020                     	ds	9
   568   000029                     main@motorR:
   569                           	callstack 0
   570                           
   571                           ; 9 bytes @ 0x28
   572   000029                     	ds	9
   573                           
   574 ;;
   575 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   576 ;;
   577 ;; *************** function _main *****************
   578 ;; Defined at:
   579 ;;		line 26 in file "main.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  motorR          9   40[COMRAM] struct DC_motor
   584 ;;  motorL          9   31[COMRAM] struct DC_motor
   585 ;;  PWMcycle        2    0        unsigned int 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   596 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   598 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   599 ;;Total ram usage:       20 bytes
   600 ;; Hardware stack levels required when called: 5
   601 ;; This function calls:
   602 ;;		_Timer0_init
   603 ;;		_buggy_lights_init
   604 ;;		_color_click_init
   605 ;;		_initDCmotorsPWM
   606 ;;		_initUSART4
   607 ;;		_returnToSender
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text0
   614   000F5E                     __ptext0:
   615                           	callstack 0
   616   000F5E                     _main:
   617                           	callstack 26
   618   000F5E                     
   619                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   620   000F5E  0E52               	movlw	82
   621   000F60  6E1F               	movwf	(??_main+1)^0,c
   622   000F62  0E2B               	movlw	43
   623   000F64  6E1E               	movwf	??_main^0,c
   624   000F66  0E00               	movlw	0
   625   000F68                     u1347:
   626   000F68  2EE8               	decfsz	wreg,f,c
   627   000F6A  D7FE               	bra	u1347
   628   000F6C  2E1E               	decfsz	??_main^0,f,c
   629   000F6E  D7FC               	bra	u1347
   630   000F70  2E1F               	decfsz	(??_main+1)^0,f,c
   631   000F72  D7FA               	bra	u1347
   632   000F74  D000               	nop2	
   633   000F76                     
   634                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   635   000F76  0E00               	movlw	0
   636   000F78  6E20               	movwf	main@motorL^0,c
   637   000F7A                     
   638                           ;main.c: 33:     motorL.direction = 1;
   639   000F7A  0E01               	movlw	1
   640   000F7C  6E21               	movwf	(main@motorL+1)^0,c
   641   000F7E                     
   642                           ;main.c: 34:     motorL.brakemode = 1;
   643   000F7E  0E01               	movlw	1
   644   000F80  6E22               	movwf	(main@motorL+2)^0,c
   645   000F82                     
   646                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   647   000F82  0E00               	movlw	0
   648   000F84  6E24               	movwf	(main@motorL+4)^0,c
   649   000F86  0E63               	movlw	99
   650   000F88  6E23               	movwf	(main@motorL+3)^0,c
   651   000F8A                     
   652                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   653   000F8A  0EAA               	movlw	170
   654   000F8C  6E25               	movwf	(main@motorL+5)^0,c
   655   000F8E  0E0F               	movlw	15
   656   000F90  6E26               	movwf	(main@motorL+6)^0,c
   657   000F92                     
   658                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   659   000F92  0EA6               	movlw	166
   660   000F94  6E27               	movwf	(main@motorL+7)^0,c
   661   000F96  0E0F               	movlw	15
   662   000F98  6E28               	movwf	(main@motorL+8)^0,c
   663   000F9A                     
   664                           ;main.c: 39:     motorR.power = 0;
   665   000F9A  0E00               	movlw	0
   666   000F9C  6E29               	movwf	main@motorR^0,c
   667   000F9E                     
   668                           ;main.c: 40:     motorR.direction = 1;
   669   000F9E  0E01               	movlw	1
   670   000FA0  6E2A               	movwf	(main@motorR+1)^0,c
   671   000FA2                     
   672                           ;main.c: 41:     motorR.brakemode = 1;
   673   000FA2  0E01               	movlw	1
   674   000FA4  6E2B               	movwf	(main@motorR+2)^0,c
   675   000FA6                     
   676                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   677   000FA6  0E00               	movlw	0
   678   000FA8  6E2D               	movwf	(main@motorR+4)^0,c
   679   000FAA  0E63               	movlw	99
   680   000FAC  6E2C               	movwf	(main@motorR+3)^0,c
   681   000FAE                     
   682                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   683   000FAE  0E25               	movlw	37
   684   000FB0  6E2E               	movwf	(main@motorR+5)^0,c
   685   000FB2  0E0F               	movlw	15
   686   000FB4  6E2F               	movwf	(main@motorR+6)^0,c
   687   000FB6                     
   688                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   689   000FB6  0E21               	movlw	33
   690   000FB8  6E30               	movwf	(main@motorR+7)^0,c
   691   000FBA  0E0F               	movlw	15
   692   000FBC  6E31               	movwf	(main@motorR+8)^0,c
   693   000FBE                     
   694                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   695   000FBE  0E00               	movlw	0
   696   000FC0  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   697   000FC2  0E63               	movlw	99
   698   000FC4  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   699   000FC6  EC7D  F008         	call	_initDCmotorsPWM	;wreg free
   700   000FCA                     
   701                           ;main.c: 47:     buggy_lights_init();
   702   000FCA  ECBD  F009         	call	_buggy_lights_init	;wreg free
   703   000FCE                     
   704                           ;main.c: 48:     color_click_init();
   705   000FCE  EC01  F00A         	call	_color_click_init	;wreg free
   706   000FD2                     
   707                           ;main.c: 49:     initUSART4();
   708   000FD2  EC8F  F00A         	call	_initUSART4	;wreg free
   709   000FD6                     
   710                           ;main.c: 50:     Timer0_init();
   711   000FD6  EC58  F00A         	call	_Timer0_init	;wreg free
   712   000FDA                     
   713                           ;main.c: 54:         TRISFbits.TRISF2 = 1;
   714   000FDA  8486               	bsf	134,2,c	;volatile
   715   000FDC                     
   716                           ;main.c: 55:         TRISFbits.TRISF3 = 1;
   717   000FDC  8686               	bsf	134,3,c	;volatile
   718   000FDE                     
   719                           ;main.c: 57:         ANSELFbits.ANSELF2 = 0;
   720   000FDE  010E               	movlb	14	; () banked
   721   000FE0  95B4               	bcf	180,2,b	;volatile
   722   000FE2                     
   723                           ; BSR set to: 14
   724                           ;main.c: 58:         ANSELFbits.ANSELF3 = 0;
   725   000FE2  97B4               	bcf	180,3,b	;volatile
   726   000FE4                     
   727                           ; BSR set to: 14
   728                           ;main.c: 70:     returnToSender(&motorL, &motorR);
   729   000FE4  0E20               	movlw	low main@motorL
   730   000FE6  6E18               	movwf	returnToSender@mL^0,c
   731   000FE8  0E29               	movlw	low main@motorR
   732   000FEA  6E19               	movwf	returnToSender@mR^0,c
   733   000FEC  ECC5  F008         	call	_returnToSender	;wreg free
   734   000FF0                     l2505:
   735                           
   736                           ;main.c: 75:         if (!PORTFbits.RF2) {
   737   000FF0  B48E               	btfsc	142,2,c	;volatile
   738   000FF2  EFFD  F007         	goto	u1271
   739   000FF6  EFFF  F007         	goto	u1270
   740   000FFA                     u1271:
   741   000FFA  EF10  F008         	goto	l2509
   742   000FFE                     u1270:
   743   000FFE                     
   744                           ;main.c: 76:             LATDbits.LATD7 = !LATDbits.LATD7;
   745   000FFE  AE7C               	btfss	124,7,c	;volatile
   746   001000  EF04  F008         	goto	u1281
   747   001004  EF08  F008         	goto	u1280
   748   001008                     u1281:
   749   001008  6A1E               	clrf	??_main^0,c
   750   00100A  2A1E               	incf	??_main^0,f,c
   751   00100C  EF09  F008         	goto	u1298
   752   001010                     u1280:
   753   001010  6A1E               	clrf	??_main^0,c
   754   001012                     u1298:
   755   001012  321E               	rrcf	??_main^0,f,c
   756   001014  321E               	rrcf	??_main^0,f,c
   757   001016  507C               	movf	124,w,c	;volatile
   758   001018  181E               	xorwf	??_main^0,w,c
   759   00101A  0B7F               	andlw	-129
   760   00101C  181E               	xorwf	??_main^0,w,c
   761   00101E  6E7C               	movwf	124,c	;volatile
   762   001020                     l2509:
   763                           
   764                           ;main.c: 81:         _delay((unsigned long)((500)*(64000000/4000.0)));
   765   001020  0E29               	movlw	41
   766   001022  6E1F               	movwf	(??_main+1)^0,c
   767   001024  0E96               	movlw	150
   768   001026  6E1E               	movwf	??_main^0,c
   769   001028  0E7F               	movlw	127
   770   00102A                     u1357:
   771   00102A  2EE8               	decfsz	wreg,f,c
   772   00102C  D7FE               	bra	u1357
   773   00102E  2E1E               	decfsz	??_main^0,f,c
   774   001030  D7FC               	bra	u1357
   775   001032  2E1F               	decfsz	(??_main+1)^0,f,c
   776   001034  D7FA               	bra	u1357
   777   001036  0000               	nop	
   778   001038  EFF8  F007         	goto	l2505
   779   00103C  EF1A  F000         	goto	start
   780   001040                     __end_of_main:
   781                           	callstack 0
   782                           
   783 ;; *************** function _returnToSender *****************
   784 ;; Defined at:
   785 ;;		line 53 in file "timers.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  mL              1   23[COMRAM] PTR struct DC_motor
   788 ;;		 -> main@motorL(9), 
   789 ;;  mR              1   24[COMRAM] PTR struct DC_motor
   790 ;;		 -> main@motorR(9), 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  timerL          1   28[COMRAM] unsigned char 
   793 ;;  timerH          1   27[COMRAM] unsigned char 
   794 ;;  mann            1   26[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   805 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   808 ;;Total ram usage:        6 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 4
   811 ;; This function calls:
   812 ;;		_fullSpeedAhead
   813 ;;		_readTrail
   814 ;;		_stop
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text1
   821   00118A                     __ptext1:
   822                           	callstack 0
   823   00118A                     _returnToSender:
   824                           	callstack 26
   825   00118A                     
   826                           ;timers.c: 54:     while (manoeuvre_count != 0) {
   827   00118A  EFF1  F008         	goto	l2445
   828   00118E                     l2429:
   829                           
   830                           ;timers.c: 55:         unsigned char timerH = 0;
   831   00118E  0E00               	movlw	0
   832   001190  6E1C               	movwf	returnToSender@timerH^0,c
   833                           
   834                           ;timers.c: 56:         unsigned char timerL = 0;
   835   001192  0E00               	movlw	0
   836   001194  6E1D               	movwf	returnToSender@timerL^0,c
   837                           
   838                           ;timers.c: 57:         unsigned char mann = 0;
   839   001196  0E00               	movlw	0
   840   001198  6E1B               	movwf	returnToSender@mann^0,c
   841   00119A                     
   842                           ;timers.c: 58:         readTrail(&timerH, &timerL, &mann);
   843   00119A  0E1C               	movlw	low returnToSender@timerH
   844   00119C  6E01               	movwf	readTrail@tH^0,c
   845   00119E  0E1D               	movlw	low returnToSender@timerL
   846   0011A0  6E02               	movwf	readTrail@tL^0,c
   847   0011A2  0E1B               	movlw	low returnToSender@mann
   848   0011A4  6E03               	movwf	readTrail@man^0,c
   849   0011A6  ECE4  F009         	call	_readTrail	;wreg free
   850   0011AA                     
   851                           ;timers.c: 62:         TMR0H = 0b11111111 - timerH;
   852   0011AA  501C               	movf	returnToSender@timerH^0,w,c
   853   0011AC  0AFF               	xorlw	255
   854   0011AE  6ED4               	movwf	212,c	;volatile
   855   0011B0                     
   856                           ;timers.c: 63:         TMR0L = 0b11111111 - timerL;
   857   0011B0  501D               	movf	returnToSender@timerL^0,w,c
   858   0011B2  0AFF               	xorlw	255
   859   0011B4  6ED3               	movwf	211,c	;volatile
   860   0011B6                     
   861                           ;timers.c: 64:         fullSpeedAhead(mL, mR);
   862   0011B6  C018  F013         	movff	returnToSender@mL,fullSpeedAhead@mL
   863   0011BA  C019  F014         	movff	returnToSender@mR,fullSpeedAhead@mR
   864   0011BE  EC20  F008         	call	_fullSpeedAhead	;wreg free
   865   0011C2                     l2439:
   866   0011C2  5049               	movf	_returnFlag^0,w,c
   867   0011C4  B4D8               	btfsc	status,2,c
   868   0011C6  EFE7  F008         	goto	u1221
   869   0011CA  EFE9  F008         	goto	u1220
   870   0011CE                     u1221:
   871   0011CE  EFE1  F008         	goto	l2439
   872   0011D2                     u1220:
   873   0011D2                     
   874                           ;timers.c: 66:         stop(mL, mR);
   875   0011D2  C018  F013         	movff	returnToSender@mL,stop@mL
   876   0011D6  C019  F014         	movff	returnToSender@mR,stop@mR
   877   0011DA  EC0C  F009         	call	_stop	;wreg free
   878   0011DE                     
   879                           ;timers.c: 70:         returnFlag = 0;
   880   0011DE  0E00               	movlw	0
   881   0011E0  6E49               	movwf	_returnFlag^0,c
   882   0011E2                     l2445:
   883                           
   884                           ;timers.c: 54:     while (manoeuvre_count != 0) {
   885   0011E2  5040               	movf	_manoeuvre_count^0,w,c
   886   0011E4  A4D8               	btfss	status,2,c
   887   0011E6  EFF7  F008         	goto	u1231
   888   0011EA  EFF9  F008         	goto	u1230
   889   0011EE                     u1231:
   890   0011EE  EFC7  F008         	goto	l2429
   891   0011F2                     u1230:
   892   0011F2                     
   893                           ;timers.c: 72:     LATHbits.LATH3 = !LATHbits.LATH3;
   894   0011F2  A680               	btfss	128,3,c	;volatile
   895   0011F4  EFFE  F008         	goto	u1241
   896   0011F8  EF02  F009         	goto	u1240
   897   0011FC                     u1241:
   898   0011FC  6A1A               	clrf	??_returnToSender^0,c
   899   0011FE  2A1A               	incf	??_returnToSender^0,f,c
   900   001200  EF03  F009         	goto	u1258
   901   001204                     u1240:
   902   001204  6A1A               	clrf	??_returnToSender^0,c
   903   001206                     u1258:
   904   001206  461A               	rlncf	??_returnToSender^0,f,c
   905   001208  461A               	rlncf	??_returnToSender^0,f,c
   906   00120A  461A               	rlncf	??_returnToSender^0,f,c
   907   00120C  5080               	movf	128,w,c	;volatile
   908   00120E  181A               	xorwf	??_returnToSender^0,w,c
   909   001210  0BF7               	andlw	-9
   910   001212  181A               	xorwf	??_returnToSender^0,w,c
   911   001214  6E80               	movwf	128,c	;volatile
   912   001216  0012               	return		;funcret
   913   001218                     __end_of_returnToSender:
   914                           	callstack 0
   915                           
   916 ;; *************** function _stop *****************
   917 ;; Defined at:
   918 ;;		line 88 in file "dc_motor.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   921 ;;		 -> main@motorL(9), 
   922 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   923 ;;		 -> main@motorR(9), 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;Total ram usage:        3 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 3
   942 ;; This function calls:
   943 ;;		_setMotorPWM
   944 ;; This function is called by:
   945 ;;		_returnToSender
   946 ;;		_turnLeft90
   947 ;;		_turnRight90
   948 ;;		_turnLeft135
   949 ;;		_turnRight135
   950 ;;		_UTurn
   951 ;;		_headbuttReverse
   952 ;;		_squareReverse
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text2
   957   001218                     __ptext2:
   958                           	callstack 0
   959   001218                     _stop:
   960                           	callstack 26
   961   001218                     
   962                           ;dc_motor.c: 88: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 92:
      +                               while ((mL->power>0) || (mR->power>0)){
   963   001218  EF3C  F009         	goto	l2249
   964   00121C                     l2235:
   965                           
   966                           ;dc_motor.c: 93:         if (mL->power>0) {mL->power--;}
   967   00121C  5013               	movf	stop@mL^0,w,c
   968   00121E  6ED9               	movwf	fsr2l,c
   969   001220  6ADA               	clrf	fsr2h,c
   970   001222  50DF               	movf	indf2,w,c
   971   001224  B4D8               	btfsc	status,2,c
   972   001226  EF17  F009         	goto	u1021
   973   00122A  EF19  F009         	goto	u1020
   974   00122E                     u1021:
   975   00122E  EF1D  F009         	goto	l2239
   976   001232                     u1020:
   977   001232  5013               	movf	stop@mL^0,w,c
   978   001234  6ED9               	movwf	fsr2l,c
   979   001236  6ADA               	clrf	fsr2h,c
   980   001238  06DF               	decf	indf2,f,c
   981   00123A                     l2239:
   982                           
   983                           ;dc_motor.c: 94:         if (mR->power>0) {mR->power--;}
   984   00123A  5014               	movf	stop@mR^0,w,c
   985   00123C  6ED9               	movwf	fsr2l,c
   986   00123E  6ADA               	clrf	fsr2h,c
   987   001240  50DF               	movf	indf2,w,c
   988   001242  B4D8               	btfsc	status,2,c
   989   001244  EF26  F009         	goto	u1031
   990   001248  EF28  F009         	goto	u1030
   991   00124C                     u1031:
   992   00124C  EF2C  F009         	goto	l2243
   993   001250                     u1030:
   994   001250  5014               	movf	stop@mR^0,w,c
   995   001252  6ED9               	movwf	fsr2l,c
   996   001254  6ADA               	clrf	fsr2h,c
   997   001256  06DF               	decf	indf2,f,c
   998   001258                     l2243:
   999                           
  1000                           ;dc_motor.c: 95:         setMotorPWM(mL);
  1001   001258  C013  F00E         	movff	stop@mL,setMotorPWM@m
  1002   00125C  EC05  F007         	call	_setMotorPWM	;wreg free
  1003   001260                     
  1004                           ;dc_motor.c: 96:         setMotorPWM(mR);
  1005   001260  C014  F00E         	movff	stop@mR,setMotorPWM@m
  1006   001264  EC05  F007         	call	_setMotorPWM	;wreg free
  1007   001268                     
  1008                           ;dc_motor.c: 97:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  1009   001268  0EA7               	movlw	167
  1010   00126A  6E15               	movwf	??_stop^0,c
  1011   00126C  0E3A               	movlw	58
  1012   00126E                     u1367:
  1013   00126E  2EE8               	decfsz	wreg,f,c
  1014   001270  D7FE               	bra	u1367
  1015   001272  2E15               	decfsz	??_stop^0,f,c
  1016   001274  D7FC               	bra	u1367
  1017   001276  D000               	nop2	
  1018   001278                     l2249:
  1019                           
  1020                           ;dc_motor.c: 92:     while ((mL->power>0) || (mR->power>0)){
  1021   001278  5013               	movf	stop@mL^0,w,c
  1022   00127A  6ED9               	movwf	fsr2l,c
  1023   00127C  6ADA               	clrf	fsr2h,c
  1024   00127E  50DF               	movf	indf2,w,c
  1025   001280  A4D8               	btfss	status,2,c
  1026   001282  EF45  F009         	goto	u1041
  1027   001286  EF47  F009         	goto	u1040
  1028   00128A                     u1041:
  1029   00128A  EF0E  F009         	goto	l2235
  1030   00128E                     u1040:
  1031   00128E  5014               	movf	stop@mR^0,w,c
  1032   001290  6ED9               	movwf	fsr2l,c
  1033   001292  6ADA               	clrf	fsr2h,c
  1034   001294  50DF               	movf	indf2,w,c
  1035   001296  A4D8               	btfss	status,2,c
  1036   001298  EF50  F009         	goto	u1051
  1037   00129C  EF52  F009         	goto	u1050
  1038   0012A0                     u1051:
  1039   0012A0  EF0E  F009         	goto	l2235
  1040   0012A4                     u1050:
  1041   0012A4  0012               	return		;funcret
  1042   0012A6                     __end_of_stop:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _readTrail *****************
  1046 ;; Defined at:
  1047 ;;		line 41 in file "timers.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  tH              1    0[COMRAM] PTR unsigned char 
  1050 ;;		 -> returnToSender@timerH(1), 
  1051 ;;  tL              1    1[COMRAM] PTR unsigned char 
  1052 ;;		 -> returnToSender@timerL(1), 
  1053 ;;  man             1    2[COMRAM] PTR unsigned char 
  1054 ;;		 -> returnToSender@mann(1), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1066 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;Total ram usage:        3 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_returnToSender
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text3
  1081   0013C8                     __ptext3:
  1082                           	callstack 0
  1083   0013C8                     _readTrail:
  1084                           	callstack 28
  1085   0013C8                     
  1086                           ;timers.c: 42:     timer_high_pointer --;
  1087   0013C8  0643               	decf	_timer_high_pointer^0,f,c
  1088                           
  1089                           ;timers.c: 43:     timer_low_pointer --;
  1090   0013CA  0642               	decf	_timer_low_pointer^0,f,c
  1091                           
  1092                           ;timers.c: 44:     manoeuvre_pointer --;
  1093   0013CC  0641               	decf	_manoeuvre_pointer^0,f,c
  1094   0013CE                     
  1095                           ;timers.c: 46:     *tH = *timer_high_pointer;
  1096   0013CE  5043               	movf	_timer_high_pointer^0,w,c
  1097   0013D0  6ED9               	movwf	fsr2l,c
  1098   0013D2  6ADA               	clrf	fsr2h,c
  1099   0013D4  5001               	movf	readTrail@tH^0,w,c
  1100   0013D6  6EE1               	movwf	fsr1l,c
  1101   0013D8  6AE2               	clrf	fsr1h,c
  1102   0013DA  CFDF FFE7          	movff	indf2,indf1
  1103   0013DE                     
  1104                           ;timers.c: 47:     *tL = *timer_low_pointer;
  1105   0013DE  5042               	movf	_timer_low_pointer^0,w,c
  1106   0013E0  6ED9               	movwf	fsr2l,c
  1107   0013E2  6ADA               	clrf	fsr2h,c
  1108   0013E4  5002               	movf	readTrail@tL^0,w,c
  1109   0013E6  6EE1               	movwf	fsr1l,c
  1110   0013E8  6AE2               	clrf	fsr1h,c
  1111   0013EA  CFDF FFE7          	movff	indf2,indf1
  1112   0013EE                     
  1113                           ;timers.c: 48:     *man = *manoeuvre_pointer;
  1114   0013EE  5041               	movf	_manoeuvre_pointer^0,w,c
  1115   0013F0  6ED9               	movwf	fsr2l,c
  1116   0013F2  6ADA               	clrf	fsr2h,c
  1117   0013F4  5003               	movf	readTrail@man^0,w,c
  1118   0013F6  6EE1               	movwf	fsr1l,c
  1119   0013F8  6AE2               	clrf	fsr1h,c
  1120   0013FA  CFDF FFE7          	movff	indf2,indf1
  1121   0013FE                     
  1122                           ;timers.c: 50:     manoeuvre_count --;
  1123   0013FE  0640               	decf	_manoeuvre_count^0,f,c
  1124   001400  0012               	return		;funcret
  1125   001402                     __end_of_readTrail:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _fullSpeedAhead *****************
  1129 ;; Defined at:
  1130 ;;		line 134 in file "dc_motor.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1133 ;;		 -> main@motorL(9), 
  1134 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1135 ;;		 -> main@motorR(9), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  rightGear       1   22[COMRAM] unsigned char 
  1138 ;;  leftGear        1   21[COMRAM] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;Total ram usage:        5 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 3
  1155 ;; This function calls:
  1156 ;;		_setMotorPWM
  1157 ;; This function is called by:
  1158 ;;		_returnToSender
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163   001040                     __ptext4:
  1164                           	callstack 0
  1165   001040                     _fullSpeedAhead:
  1166                           	callstack 26
  1167   001040  0E14               	movlw	20
  1168   001042  6E16               	movwf	fullSpeedAhead@leftGear^0,c
  1169   001044  0E14               	movlw	20
  1170   001046  6E17               	movwf	fullSpeedAhead@rightGear^0,c
  1171   001048                     
  1172                           ;dc_motor.c: 138:     (mL -> direction) = 1;
  1173   001048  5013               	movf	fullSpeedAhead@mL^0,w,c
  1174   00104A  6ED9               	movwf	fsr2l,c
  1175   00104C  6ADA               	clrf	fsr2h,c
  1176   00104E  0E01               	movlw	1
  1177   001050  26D9               	addwf	fsr2l,f,c
  1178   001052  0E01               	movlw	1
  1179   001054  6EDF               	movwf	indf2,c
  1180   001056                     
  1181                           ;dc_motor.c: 139:     (mR -> direction) = 1;
  1182   001056  5014               	movf	fullSpeedAhead@mR^0,w,c
  1183   001058  6ED9               	movwf	fsr2l,c
  1184   00105A  6ADA               	clrf	fsr2h,c
  1185   00105C  0E01               	movlw	1
  1186   00105E  26D9               	addwf	fsr2l,f,c
  1187   001060  0E01               	movlw	1
  1188   001062  6EDF               	movwf	indf2,c
  1189                           
  1190                           ;dc_motor.c: 140:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  1191   001064  EF64  F008         	goto	l2315
  1192   001068                     l2303:
  1193                           
  1194                           ;dc_motor.c: 141:         if (mL->power<leftGear) {mL->power++;}
  1195   001068  5013               	movf	fullSpeedAhead@mL^0,w,c
  1196   00106A  6ED9               	movwf	fsr2l,c
  1197   00106C  6ADA               	clrf	fsr2h,c
  1198   00106E  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  1199   001070  5CDE               	subwf	postinc2,w,c
  1200   001072  B0D8               	btfsc	status,0,c
  1201   001074  EF3E  F008         	goto	u1141
  1202   001078  EF40  F008         	goto	u1140
  1203   00107C                     u1141:
  1204   00107C  EF44  F008         	goto	l180
  1205   001080                     u1140:
  1206   001080  5013               	movf	fullSpeedAhead@mL^0,w,c
  1207   001082  6ED9               	movwf	fsr2l,c
  1208   001084  6ADA               	clrf	fsr2h,c
  1209   001086  2ADF               	incf	indf2,f,c
  1210   001088                     l180:
  1211                           
  1212                           ;dc_motor.c: 142:         if (mR->power<rightGear) {mR->power++;}
  1213   001088  5014               	movf	fullSpeedAhead@mR^0,w,c
  1214   00108A  6ED9               	movwf	fsr2l,c
  1215   00108C  6ADA               	clrf	fsr2h,c
  1216   00108E  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  1217   001090  5CDE               	subwf	postinc2,w,c
  1218   001092  B0D8               	btfsc	status,0,c
  1219   001094  EF4E  F008         	goto	u1151
  1220   001098  EF50  F008         	goto	u1150
  1221   00109C                     u1151:
  1222   00109C  EF54  F008         	goto	l2309
  1223   0010A0                     u1150:
  1224   0010A0  5014               	movf	fullSpeedAhead@mR^0,w,c
  1225   0010A2  6ED9               	movwf	fsr2l,c
  1226   0010A4  6ADA               	clrf	fsr2h,c
  1227   0010A6  2ADF               	incf	indf2,f,c
  1228   0010A8                     l2309:
  1229                           
  1230                           ;dc_motor.c: 143:         setMotorPWM(mL);
  1231   0010A8  C013  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1232   0010AC  EC05  F007         	call	_setMotorPWM	;wreg free
  1233   0010B0                     
  1234                           ;dc_motor.c: 144:         setMotorPWM(mR);
  1235   0010B0  C014  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1236   0010B4  EC05  F007         	call	_setMotorPWM	;wreg free
  1237   0010B8                     
  1238                           ;dc_motor.c: 145:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  1239   0010B8  0EA7               	movlw	167
  1240   0010BA  6E15               	movwf	??_fullSpeedAhead^0,c
  1241   0010BC  0E3A               	movlw	58
  1242   0010BE                     u1377:
  1243   0010BE  2EE8               	decfsz	wreg,f,c
  1244   0010C0  D7FE               	bra	u1377
  1245   0010C2  2E15               	decfsz	??_fullSpeedAhead^0,f,c
  1246   0010C4  D7FC               	bra	u1377
  1247   0010C6  D000               	nop2	
  1248   0010C8                     l2315:
  1249                           
  1250                           ;dc_motor.c: 140:     while ((mL->power<leftGear) || (mR->power<rightGear)){
  1251   0010C8  5013               	movf	fullSpeedAhead@mL^0,w,c
  1252   0010CA  6ED9               	movwf	fsr2l,c
  1253   0010CC  6ADA               	clrf	fsr2h,c
  1254   0010CE  5016               	movf	fullSpeedAhead@leftGear^0,w,c
  1255   0010D0  5CDE               	subwf	postinc2,w,c
  1256   0010D2  A0D8               	btfss	status,0,c
  1257   0010D4  EF6E  F008         	goto	u1161
  1258   0010D8  EF70  F008         	goto	u1160
  1259   0010DC                     u1161:
  1260   0010DC  EF34  F008         	goto	l2303
  1261   0010E0                     u1160:
  1262   0010E0  5014               	movf	fullSpeedAhead@mR^0,w,c
  1263   0010E2  6ED9               	movwf	fsr2l,c
  1264   0010E4  6ADA               	clrf	fsr2h,c
  1265   0010E6  5017               	movf	fullSpeedAhead@rightGear^0,w,c
  1266   0010E8  5CDE               	subwf	postinc2,w,c
  1267   0010EA  A0D8               	btfss	status,0,c
  1268   0010EC  EF7A  F008         	goto	u1171
  1269   0010F0  EF7C  F008         	goto	u1170
  1270   0010F4                     u1171:
  1271   0010F4  EF34  F008         	goto	l2303
  1272   0010F8                     u1170:
  1273   0010F8  0012               	return		;funcret
  1274   0010FA                     __end_of_fullSpeedAhead:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _setMotorPWM *****************
  1278 ;; Defined at:
  1279 ;;		line 65 in file "dc_motor.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  m               1   13[COMRAM] PTR struct DC_motor
  1282 ;;		 -> main@motorR(9), main@motorL(9), 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  negDuty         1   17[COMRAM] unsigned char 
  1285 ;;  posDuty         1   16[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1295 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;Total ram usage:        5 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 2
  1302 ;; This function calls:
  1303 ;;		___lwdiv
  1304 ;;		___wmul
  1305 ;; This function is called by:
  1306 ;;		_stop
  1307 ;;		_fullSpeedAhead
  1308 ;;		_turnLeft
  1309 ;;		_turnRight
  1310 ;;		_fullSpeedReverse
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text5
  1315   000E0A                     __ptext5:
  1316                           	callstack 0
  1317   000E0A                     _setMotorPWM:
  1318                           	callstack 26
  1319   000E0A                     
  1320                           ;dc_motor.c: 65: void setMotorPWM(DC_motor *m);dc_motor.c: 66: {;dc_motor.c: 67:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 69:     if(m->brakemode) {
  1321   000E0A  500E               	movf	setMotorPWM@m^0,w,c
  1322   000E0C  6ED9               	movwf	fsr2l,c
  1323   000E0E  6ADA               	clrf	fsr2h,c
  1324   000E10  0E02               	movlw	2
  1325   000E12  26D9               	addwf	fsr2l,f,c
  1326   000E14  50DF               	movf	indf2,w,c
  1327   000E16  B4D8               	btfsc	status,2,c
  1328   000E18  EF10  F007         	goto	u1001
  1329   000E1C  EF12  F007         	goto	u1000
  1330   000E20                     u1001:
  1331   000E20  EF42  F007         	goto	l2221
  1332   000E24                     u1000:
  1333   000E24                     
  1334                           ;dc_motor.c: 70:         posDuty=(unsigned char)(m->PWMperiod - ((unsigned int)(m->power
      +                          )*(m->PWMperiod))/100);
  1335   000E24  500E               	movf	setMotorPWM@m^0,w,c
  1336   000E26  6ED9               	movwf	fsr2l,c
  1337   000E28  6ADA               	clrf	fsr2h,c
  1338   000E2A  50DF               	movf	indf2,w,c
  1339   000E2C  6E0F               	movwf	??_setMotorPWM^0,c
  1340   000E2E  500F               	movf	??_setMotorPWM^0,w,c
  1341   000E30  6E01               	movwf	___wmul@multiplier^0,c
  1342   000E32  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1343   000E34  500E               	movf	setMotorPWM@m^0,w,c
  1344   000E36  6ED9               	movwf	fsr2l,c
  1345   000E38  6ADA               	clrf	fsr2h,c
  1346   000E3A  0E03               	movlw	3
  1347   000E3C  26D9               	addwf	fsr2l,f,c
  1348   000E3E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1349   000E42  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1350   000E46  EC6C  F00A         	call	___wmul	;wreg free
  1351   000E4A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1352   000E4E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1353   000E52  0E00               	movlw	0
  1354   000E54  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1355   000E56  0E64               	movlw	100
  1356   000E58  6E09               	movwf	___lwdiv@divisor^0,c
  1357   000E5A  EC53  F009         	call	___lwdiv	;wreg free
  1358   000E5E  500E               	movf	setMotorPWM@m^0,w,c
  1359   000E60  6ED9               	movwf	fsr2l,c
  1360   000E62  6ADA               	clrf	fsr2h,c
  1361   000E64  0E03               	movlw	3
  1362   000E66  26D9               	addwf	fsr2l,f,c
  1363   000E68  50DF               	movf	indf2,w,c
  1364   000E6A  6E10               	movwf	(??_setMotorPWM+1)^0,c
  1365   000E6C  5007               	movf	?___lwdiv^0,w,c
  1366   000E6E  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  1367   000E70  6E11               	movwf	setMotorPWM@posDuty^0,c
  1368   000E72                     
  1369                           ;dc_motor.c: 71:         negDuty=(unsigned char)(m->PWMperiod);
  1370   000E72  500E               	movf	setMotorPWM@m^0,w,c
  1371   000E74  6ED9               	movwf	fsr2l,c
  1372   000E76  6ADA               	clrf	fsr2h,c
  1373   000E78  0E03               	movlw	3
  1374   000E7A  26D9               	addwf	fsr2l,f,c
  1375   000E7C  50DF               	movf	indf2,w,c
  1376   000E7E  6E12               	movwf	setMotorPWM@negDuty^0,c
  1377                           
  1378                           ;dc_motor.c: 72:     }
  1379   000E80  EF63  F007         	goto	l2225
  1380   000E84                     l2221:
  1381                           
  1382                           ;dc_motor.c: 74:         posDuty=0;
  1383   000E84  0E00               	movlw	0
  1384   000E86  6E11               	movwf	setMotorPWM@posDuty^0,c
  1385   000E88                     
  1386                           ;dc_motor.c: 75:   negDuty=(unsigned char)(((unsigned int)(m->power)*(m->PWMperiod))/100
      +                          );
  1387   000E88  500E               	movf	setMotorPWM@m^0,w,c
  1388   000E8A  6ED9               	movwf	fsr2l,c
  1389   000E8C  6ADA               	clrf	fsr2h,c
  1390   000E8E  50DF               	movf	indf2,w,c
  1391   000E90  6E0F               	movwf	??_setMotorPWM^0,c
  1392   000E92  500F               	movf	??_setMotorPWM^0,w,c
  1393   000E94  6E01               	movwf	___wmul@multiplier^0,c
  1394   000E96  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1395   000E98  500E               	movf	setMotorPWM@m^0,w,c
  1396   000E9A  6ED9               	movwf	fsr2l,c
  1397   000E9C  6ADA               	clrf	fsr2h,c
  1398   000E9E  0E03               	movlw	3
  1399   000EA0  26D9               	addwf	fsr2l,f,c
  1400   000EA2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1401   000EA6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1402   000EAA  EC6C  F00A         	call	___wmul	;wreg free
  1403   000EAE  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1404   000EB2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1405   000EB6  0E00               	movlw	0
  1406   000EB8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1407   000EBA  0E64               	movlw	100
  1408   000EBC  6E09               	movwf	___lwdiv@divisor^0,c
  1409   000EBE  EC53  F009         	call	___lwdiv	;wreg free
  1410   000EC2  5007               	movf	?___lwdiv^0,w,c
  1411   000EC4  6E12               	movwf	setMotorPWM@negDuty^0,c
  1412   000EC6                     l2225:
  1413                           
  1414                           ;dc_motor.c: 78:     if (m->direction) {
  1415   000EC6  500E               	movf	setMotorPWM@m^0,w,c
  1416   000EC8  6ED9               	movwf	fsr2l,c
  1417   000ECA  6ADA               	clrf	fsr2h,c
  1418   000ECC  0E01               	movlw	1
  1419   000ECE  26D9               	addwf	fsr2l,f,c
  1420   000ED0  50DF               	movf	indf2,w,c
  1421   000ED2  B4D8               	btfsc	status,2,c
  1422   000ED4  EF6E  F007         	goto	u1011
  1423   000ED8  EF70  F007         	goto	u1010
  1424   000EDC                     u1011:
  1425   000EDC  EF90  F007         	goto	l2229
  1426   000EE0                     u1010:
  1427   000EE0                     
  1428                           ;dc_motor.c: 79:         *(m->posDutyHighByte)=posDuty;
  1429   000EE0  500E               	movf	setMotorPWM@m^0,w,c
  1430   000EE2  6ED9               	movwf	fsr2l,c
  1431   000EE4  6ADA               	clrf	fsr2h,c
  1432   000EE6  0E05               	movlw	5
  1433   000EE8  26D9               	addwf	fsr2l,f,c
  1434   000EEA  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1435   000EEE  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1436   000EF2  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1437   000EF6  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1438   000EFA  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  1439                           
  1440                           ;dc_motor.c: 80:         *(m->negDutyHighByte)=negDuty;
  1441   000EFE  500E               	movf	setMotorPWM@m^0,w,c
  1442   000F00  6ED9               	movwf	fsr2l,c
  1443   000F02  6ADA               	clrf	fsr2h,c
  1444   000F04  0E07               	movlw	7
  1445   000F06  26D9               	addwf	fsr2l,f,c
  1446   000F08  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1447   000F0C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1448   000F10  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1449   000F14  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1450   000F18  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  1451                           
  1452                           ;dc_motor.c: 81:     } else {
  1453   000F1C  EFAE  F007         	goto	l151
  1454   000F20                     l2229:
  1455                           
  1456                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
  1457   000F20  500E               	movf	setMotorPWM@m^0,w,c
  1458   000F22  6ED9               	movwf	fsr2l,c
  1459   000F24  6ADA               	clrf	fsr2h,c
  1460   000F26  0E05               	movlw	5
  1461   000F28  26D9               	addwf	fsr2l,f,c
  1462   000F2A  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1463   000F2E  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1464   000F32  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1465   000F36  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1466   000F3A  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  1467                           
  1468                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
  1469   000F3E  500E               	movf	setMotorPWM@m^0,w,c
  1470   000F40  6ED9               	movwf	fsr2l,c
  1471   000F42  6ADA               	clrf	fsr2h,c
  1472   000F44  0E07               	movlw	7
  1473   000F46  26D9               	addwf	fsr2l,f,c
  1474   000F48  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1475   000F4C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1476   000F50  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1477   000F54  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1478   000F58  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  1479   000F5C                     l151:
  1480   000F5C  0012               	return		;funcret
  1481   000F5E                     __end_of_setMotorPWM:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function ___wmul *****************
  1485 ;; Defined at:
  1486 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  multiplier      2    0[COMRAM] unsigned int 
  1489 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  product         2    4[COMRAM] unsigned int 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2    0[COMRAM] unsigned int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, prodl, prodh
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;Total ram usage:        6 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_setMotorPWM
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text6
  1516   0014D8                     __ptext6:
  1517                           	callstack 0
  1518   0014D8                     ___wmul:
  1519                           	callstack 26
  1520   0014D8  5001               	movf	___wmul@multiplier^0,w,c
  1521   0014DA  0203               	mulwf	___wmul@multiplicand^0,c
  1522   0014DC  CFF3 F005          	movff	prodl,___wmul@product
  1523   0014E0  CFF4 F006          	movff	prodh,___wmul@product+1
  1524   0014E4  5001               	movf	___wmul@multiplier^0,w,c
  1525   0014E6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1526   0014E8  50F3               	movf	243,w,c
  1527   0014EA  2606               	addwf	(___wmul@product+1)^0,f,c
  1528   0014EC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1529   0014EE  0203               	mulwf	___wmul@multiplicand^0,c
  1530   0014F0  50F3               	movf	243,w,c
  1531   0014F2  2606               	addwf	(___wmul@product+1)^0,f,c
  1532   0014F4  C005  F001         	movff	___wmul@product,?___wmul
  1533   0014F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1534   0014FC  0012               	return		;funcret
  1535   0014FE                     __end_of___wmul:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function ___lwdiv *****************
  1539 ;; Defined at:
  1540 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  dividend        2    6[COMRAM] unsigned int 
  1543 ;;  divisor         2    8[COMRAM] unsigned int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  quotient        2   10[COMRAM] unsigned int 
  1546 ;;  counter         1   12[COMRAM] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2    6[COMRAM] unsigned int 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;Total ram usage:        7 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_setMotorPWM
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text7
  1571   0012A6                     __ptext7:
  1572                           	callstack 0
  1573   0012A6                     ___lwdiv:
  1574                           	callstack 26
  1575   0012A6  0E00               	movlw	0
  1576   0012A8  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  1577   0012AA  0E00               	movlw	0
  1578   0012AC  6E0B               	movwf	___lwdiv@quotient^0,c
  1579   0012AE  5009               	movf	___lwdiv@divisor^0,w,c
  1580   0012B0  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1581   0012B2  B4D8               	btfsc	status,2,c
  1582   0012B4  EF5E  F009         	goto	u971
  1583   0012B8  EF60  F009         	goto	u970
  1584   0012BC                     u971:
  1585   0012BC  EF88  F009         	goto	l1128
  1586   0012C0                     u970:
  1587   0012C0  0E01               	movlw	1
  1588   0012C2  6E0D               	movwf	___lwdiv@counter^0,c
  1589   0012C4  EF68  F009         	goto	l2201
  1590   0012C8                     l2199:
  1591   0012C8  90D8               	bcf	status,0,c
  1592   0012CA  3609               	rlcf	___lwdiv@divisor^0,f,c
  1593   0012CC  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1594   0012CE  2A0D               	incf	___lwdiv@counter^0,f,c
  1595   0012D0                     l2201:
  1596   0012D0  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  1597   0012D2  EF6D  F009         	goto	u981
  1598   0012D6  EF6F  F009         	goto	u980
  1599   0012DA                     u981:
  1600   0012DA  EF64  F009         	goto	l2199
  1601   0012DE                     u980:
  1602   0012DE                     l2203:
  1603   0012DE  90D8               	bcf	status,0,c
  1604   0012E0  360B               	rlcf	___lwdiv@quotient^0,f,c
  1605   0012E2  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1606   0012E4  5009               	movf	___lwdiv@divisor^0,w,c
  1607   0012E6  5C07               	subwf	___lwdiv@dividend^0,w,c
  1608   0012E8  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1609   0012EA  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1610   0012EC  A0D8               	btfss	status,0,c
  1611   0012EE  EF7B  F009         	goto	u991
  1612   0012F2  EF7D  F009         	goto	u990
  1613   0012F6                     u991:
  1614   0012F6  EF82  F009         	goto	l2211
  1615   0012FA                     u990:
  1616   0012FA  5009               	movf	___lwdiv@divisor^0,w,c
  1617   0012FC  5E07               	subwf	___lwdiv@dividend^0,f,c
  1618   0012FE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1619   001300  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1620   001302  800B               	bsf	___lwdiv@quotient^0,0,c
  1621   001304                     l2211:
  1622   001304  90D8               	bcf	status,0,c
  1623   001306  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1624   001308  3209               	rrcf	___lwdiv@divisor^0,f,c
  1625   00130A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  1626   00130C  EF6F  F009         	goto	l2203
  1627   001310                     l1128:
  1628   001310  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  1629   001314  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1630   001318  0012               	return		;funcret
  1631   00131A                     __end_of___lwdiv:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _initUSART4 *****************
  1635 ;; Defined at:
  1636 ;;		line 5 in file "serial.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text8
  1665   00151E                     __ptext8:
  1666                           	callstack 0
  1667   00151E                     _initUSART4:
  1668                           	callstack 29
  1669   00151E                     
  1670                           ;serial.c: 9:     RC0PPS = 0x12;
  1671   00151E  0E12               	movlw	18
  1672   001520  010E               	movlb	14	; () banked
  1673   001522  6F62               	movwf	98,b	;volatile
  1674                           
  1675                           ;serial.c: 10:     RX4PPS = 0x11;
  1676   001524  0E11               	movlw	17
  1677   001526  6F15               	movwf	21,b	;volatile
  1678   001528                     
  1679                           ; BSR set to: 14
  1680                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1681   001528  97E9               	bcf	233,3,b	;volatile
  1682   00152A                     
  1683                           ; BSR set to: 14
  1684                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1685   00152A  95E8               	bcf	232,2,b	;volatile
  1686                           
  1687                           ;serial.c: 14:     SP4BRGL = 51;
  1688   00152C  0E33               	movlw	51
  1689   00152E  6FE5               	movwf	229,b	;volatile
  1690                           
  1691                           ;serial.c: 15:     SP4BRGH = 0;
  1692   001530  0E00               	movlw	0
  1693   001532  6FE6               	movwf	230,b	;volatile
  1694   001534                     
  1695                           ; BSR set to: 14
  1696                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1697   001534  89E7               	bsf	231,4,b	;volatile
  1698   001536                     
  1699                           ; BSR set to: 14
  1700                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1701   001536  8BE8               	bsf	232,5,b	;volatile
  1702   001538                     
  1703                           ; BSR set to: 14
  1704                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1705   001538  8FE7               	bsf	231,7,b	;volatile
  1706   00153A                     
  1707                           ; BSR set to: 14
  1708   00153A  0012               	return		;funcret
  1709   00153C                     __end_of_initUSART4:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _initDCmotorsPWM *****************
  1713 ;; Defined at:
  1714 ;;		line 5 in file "dc_motor.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;Total ram usage:        2 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text9
  1743   0010FA                     __ptext9:
  1744                           	callstack 0
  1745   0010FA                     _initDCmotorsPWM:
  1746                           	callstack 29
  1747   0010FA                     
  1748                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  1749   0010FA  9485               	bcf	133,2,c	;volatile
  1750                           
  1751                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  1752   0010FC  9885               	bcf	133,4,c	;volatile
  1753                           
  1754                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  1755   0010FE  9E83               	bcf	131,7,c	;volatile
  1756                           
  1757                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  1758   001100  9C87               	bcf	135,6,c	;volatile
  1759                           
  1760                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  1761   001102  947D               	bcf	125,2,c	;volatile
  1762                           
  1763                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  1764   001104  987D               	bcf	125,4,c	;volatile
  1765                           
  1766                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  1767   001106  9E7B               	bcf	123,7,c	;volatile
  1768                           
  1769                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  1770   001108  9C7F               	bcf	127,6,c	;volatile
  1771   00110A                     
  1772                           ;dc_motor.c: 18:     RE2PPS=0x05;
  1773   00110A  0E05               	movlw	5
  1774   00110C  010E               	movlb	14	; () banked
  1775   00110E  6F74               	movwf	116,b	;volatile
  1776                           
  1777                           ;dc_motor.c: 19:     RE4PPS=0x06;
  1778   001110  0E06               	movlw	6
  1779   001112  6F76               	movwf	118,b	;volatile
  1780                           
  1781                           ;dc_motor.c: 20:     RC7PPS=0x07;
  1782   001114  0E07               	movlw	7
  1783   001116  6F69               	movwf	105,b	;volatile
  1784                           
  1785                           ;dc_motor.c: 21:     RG6PPS=0x08;
  1786   001118  0E08               	movlw	8
  1787   00111A  6F88               	movwf	136,b	;volatile
  1788                           
  1789                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  1790   00111C  50BD               	movf	189,w,c	;volatile
  1791   00111E  0B8F               	andlw	-113
  1792   001120  0940               	iorlw	64
  1793   001122  6EBD               	movwf	189,c	;volatile
  1794                           
  1795                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1796   001124  0EE0               	movlw	-32
  1797   001126  16BE               	andwf	190,f,c	;volatile
  1798                           
  1799                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1800   001128  50BF               	movf	191,w,c	;volatile
  1801   00112A  0BF0               	andlw	-16
  1802   00112C  0901               	iorlw	1
  1803   00112E  6EBF               	movwf	191,c	;volatile
  1804   001130                     
  1805                           ; BSR set to: 14
  1806                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  1807   001130  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1808   001134                     
  1809                           ; BSR set to: 14
  1810                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1811   001134  8EBD               	bsf	189,7,c	;volatile
  1812                           
  1813                           ;dc_motor.c: 35:     CCPR1H=0;
  1814   001136  0E00               	movlw	0
  1815   001138  6EAA               	movwf	170,c	;volatile
  1816                           
  1817                           ;dc_motor.c: 36:     CCPR2H=0;
  1818   00113A  0E00               	movlw	0
  1819   00113C  6EA6               	movwf	166,c	;volatile
  1820                           
  1821                           ;dc_motor.c: 37:     CCPR3H=0;
  1822   00113E  0E00               	movlw	0
  1823   001140  010F               	movlb	15	; () banked
  1824   001142  6F25               	movwf	37,b	;volatile
  1825                           
  1826                           ;dc_motor.c: 38:     CCPR4H=0;
  1827   001144  0E00               	movlw	0
  1828   001146  6F21               	movwf	33,b	;volatile
  1829                           
  1830                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1831   001148  0EFC               	movlw	-4
  1832   00114A  16AD               	andwf	173,f,c	;volatile
  1833                           
  1834                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1835   00114C  0EF3               	movlw	-13
  1836   00114E  16AD               	andwf	173,f,c	;volatile
  1837                           
  1838                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1839   001150  0ECF               	movlw	-49
  1840   001152  16AD               	andwf	173,f,c	;volatile
  1841                           
  1842                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1843   001154  0E3F               	movlw	-193
  1844   001156  16AD               	andwf	173,f,c	;volatile
  1845   001158                     
  1846                           ; BSR set to: 15
  1847                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  1848   001158  88AB               	bsf	171,4,c	;volatile
  1849                           
  1850                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  1851   00115A  50AB               	movf	171,w,c	;volatile
  1852   00115C  0BF0               	andlw	-16
  1853   00115E  090C               	iorlw	12
  1854   001160  6EAB               	movwf	171,c	;volatile
  1855   001162                     
  1856                           ; BSR set to: 15
  1857                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  1858   001162  8EAB               	bsf	171,7,c	;volatile
  1859   001164                     
  1860                           ; BSR set to: 15
  1861                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  1862   001164  88A7               	bsf	167,4,c	;volatile
  1863                           
  1864                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  1865   001166  50A7               	movf	167,w,c	;volatile
  1866   001168  0BF0               	andlw	-16
  1867   00116A  090C               	iorlw	12
  1868   00116C  6EA7               	movwf	167,c	;volatile
  1869   00116E                     
  1870                           ; BSR set to: 15
  1871                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  1872   00116E  8EA7               	bsf	167,7,c	;volatile
  1873   001170                     
  1874                           ; BSR set to: 15
  1875                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  1876   001170  8926               	bsf	38,4,b	;volatile
  1877                           
  1878                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  1879   001172  5126               	movf	38,w,b	;volatile
  1880   001174  0BF0               	andlw	-16
  1881   001176  090C               	iorlw	12
  1882   001178  6F26               	movwf	38,b	;volatile
  1883   00117A                     
  1884                           ; BSR set to: 15
  1885                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  1886   00117A  8F26               	bsf	38,7,b	;volatile
  1887   00117C                     
  1888                           ; BSR set to: 15
  1889                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  1890   00117C  8922               	bsf	34,4,b	;volatile
  1891                           
  1892                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  1893   00117E  5122               	movf	34,w,b	;volatile
  1894   001180  0BF0               	andlw	-16
  1895   001182  090C               	iorlw	12
  1896   001184  6F22               	movwf	34,b	;volatile
  1897   001186                     
  1898                           ; BSR set to: 15
  1899                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  1900   001186  8F22               	bsf	34,7,b	;volatile
  1901   001188                     
  1902                           ; BSR set to: 15
  1903   001188  0012               	return		;funcret
  1904   00118A                     __end_of_initDCmotorsPWM:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _color_click_init *****************
  1908 ;; Defined at:
  1909 ;;		line 4 in file "color.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;Total ram usage:        1 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 4
  1930 ;; This function calls:
  1931 ;;		_I2C_2_Master_Init
  1932 ;;		_color_writetoaddr
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text10
  1939   001402                     __ptext10:
  1940                           	callstack 0
  1941   001402                     _color_click_init:
  1942                           	callstack 26
  1943   001402                     
  1944                           ;color.c: 7:     I2C_2_Master_Init();
  1945   001402  EC1B  F00A         	call	_I2C_2_Master_Init	;wreg free
  1946   001406                     
  1947                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  1948   001406  0E01               	movlw	1
  1949   001408  6E03               	movwf	color_writetoaddr@value^0,c
  1950   00140A  0E00               	movlw	0
  1951   00140C  EC7F  F00A         	call	_color_writetoaddr
  1952   001410                     
  1953                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1954   001410  0E3F               	movlw	63
  1955   001412  6E05               	movwf	??_color_click_init^0,c
  1956   001414  0E55               	movlw	85
  1957   001416                     u1387:
  1958   001416  2EE8               	decfsz	wreg,f,c
  1959   001418  D7FE               	bra	u1387
  1960   00141A  2E05               	decfsz	??_color_click_init^0,f,c
  1961   00141C  D7FC               	bra	u1387
  1962   00141E  0000               	nop	
  1963   001420                     
  1964                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  1965   001420  0E03               	movlw	3
  1966   001422  6E03               	movwf	color_writetoaddr@value^0,c
  1967   001424  0E00               	movlw	0
  1968   001426  EC7F  F00A         	call	_color_writetoaddr
  1969   00142A                     
  1970                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  1971   00142A  0ED5               	movlw	213
  1972   00142C  6E03               	movwf	color_writetoaddr@value^0,c
  1973   00142E  0E01               	movlw	1
  1974   001430  EC7F  F00A         	call	_color_writetoaddr
  1975   001434  0012               	return		;funcret
  1976   001436                     __end_of_color_click_init:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _color_writetoaddr *****************
  1980 ;; Defined at:
  1981 ;;		line 20 in file "color.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  address         1    wreg     unsigned char 
  1984 ;;  value           1    2[COMRAM] unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  address         1    3[COMRAM] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1996 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;Total ram usage:        2 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 3
  2003 ;; This function calls:
  2004 ;;		_I2C_2_Master_Start
  2005 ;;		_I2C_2_Master_Stop
  2006 ;;		_I2C_2_Master_Write
  2007 ;; This function is called by:
  2008 ;;		_color_click_init
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text11
  2013   0014FE                     __ptext11:
  2014                           	callstack 0
  2015   0014FE                     _color_writetoaddr:
  2016                           	callstack 26
  2017                           
  2018                           ;incstack = 0
  2019                           ;color_writetoaddr@address stored from wreg
  2020   0014FE  6E04               	movwf	color_writetoaddr@address^0,c
  2021   001500                     
  2022                           ;color.c: 21:     I2C_2_Master_Start();
  2023   001500  ECB5  F00A         	call	_I2C_2_Master_Start	;wreg free
  2024                           
  2025                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  2026   001504  0E52               	movlw	82
  2027   001506  ECAA  F00A         	call	_I2C_2_Master_Write
  2028                           
  2029                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  2030   00150A  5004               	movf	color_writetoaddr@address^0,w,c
  2031   00150C  0980               	iorlw	128
  2032   00150E  ECAA  F00A         	call	_I2C_2_Master_Write
  2033                           
  2034                           ;color.c: 24:     I2C_2_Master_Write(value);
  2035   001512  5003               	movf	color_writetoaddr@value^0,w,c
  2036   001514  ECAA  F00A         	call	_I2C_2_Master_Write
  2037                           
  2038                           ;color.c: 25:     I2C_2_Master_Stop();
  2039   001518  ECB0  F00A         	call	_I2C_2_Master_Stop	;wreg free
  2040   00151C  0012               	return		;funcret
  2041   00151E                     __end_of_color_writetoaddr:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _I2C_2_Master_Write *****************
  2045 ;; Defined at:
  2046 ;;		line 45 in file "i2c.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  data_byte       1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  data_byte       1    1[COMRAM] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;Total ram usage:        1 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 2
  2067 ;; This function calls:
  2068 ;;		_I2C_2_Master_Idle
  2069 ;; This function is called by:
  2070 ;;		_color_writetoaddr
  2071 ;;		_color_read_Red
  2072 ;;		_color_read_Blue
  2073 ;;		_color_read_Green
  2074 ;;		_color_read_Clear
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text12
  2079   001554                     __ptext12:
  2080                           	callstack 0
  2081   001554                     _I2C_2_Master_Write:
  2082                           	callstack 26
  2083                           
  2084                           ;incstack = 0
  2085                           ;I2C_2_Master_Write@data_byte stored from wreg
  2086   001554  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2087   001556                     
  2088                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2089   001556  EC44  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2090   00155A                     
  2091                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2092   00155A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2093   00155E  0012               	return		;funcret
  2094   001560                     __end_of_I2C_2_Master_Write:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _I2C_2_Master_Stop *****************
  2098 ;; Defined at:
  2099 ;;		line 39 in file "i2c.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 2
  2120 ;; This function calls:
  2121 ;;		_I2C_2_Master_Idle
  2122 ;; This function is called by:
  2123 ;;		_color_writetoaddr
  2124 ;;		_color_read_Red
  2125 ;;		_color_read_Blue
  2126 ;;		_color_read_Green
  2127 ;;		_color_read_Clear
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text13
  2132   001560                     __ptext13:
  2133                           	callstack 0
  2134   001560                     _I2C_2_Master_Stop:
  2135                           	callstack 26
  2136   001560                     
  2137                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2138   001560  EC44  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2139   001564                     
  2140                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2141   001564  010E               	movlb	14	; () banked
  2142   001566  85DA               	bsf	218,2,b	;volatile
  2143   001568                     
  2144                           ; BSR set to: 14
  2145   001568  0012               	return		;funcret
  2146   00156A                     __end_of_I2C_2_Master_Stop:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _I2C_2_Master_Start *****************
  2150 ;; Defined at:
  2151 ;;		line 27 in file "i2c.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 2
  2172 ;; This function calls:
  2173 ;;		_I2C_2_Master_Idle
  2174 ;; This function is called by:
  2175 ;;		_color_writetoaddr
  2176 ;;		_color_read_Red
  2177 ;;		_color_read_Blue
  2178 ;;		_color_read_Green
  2179 ;;		_color_read_Clear
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text14
  2184   00156A                     __ptext14:
  2185                           	callstack 0
  2186   00156A                     _I2C_2_Master_Start:
  2187                           	callstack 26
  2188   00156A                     
  2189                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2190   00156A  EC44  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2191   00156E                     
  2192                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2193   00156E  010E               	movlb	14	; () banked
  2194   001570  81DA               	bsf	218,0,b	;volatile
  2195   001572                     
  2196                           ; BSR set to: 14
  2197   001572  0012               	return		;funcret
  2198   001574                     __end_of_I2C_2_Master_Start:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _I2C_2_Master_Idle *****************
  2202 ;; Defined at:
  2203 ;;		line 22 in file "i2c.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;Total ram usage:        1 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_I2C_2_Master_Start
  2228 ;;		_I2C_2_Master_Stop
  2229 ;;		_I2C_2_Master_Write
  2230 ;;		_I2C_2_Master_RepStart
  2231 ;;		_I2C_2_Master_Read
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text15
  2236   001488                     __ptext15:
  2237                           	callstack 0
  2238   001488                     _I2C_2_Master_Idle:
  2239                           	callstack 26
  2240   001488                     l242:
  2241   001488  010E               	movlb	14	; () banked
  2242   00148A  B5D8               	btfsc	216,2,b	;volatile
  2243   00148C  EF4A  F00A         	goto	u11
  2244   001490  EF4C  F00A         	goto	u10
  2245   001494                     u11:
  2246   001494  EF44  F00A         	goto	l242
  2247   001498                     u10:
  2248   001498                     
  2249                           ; BSR set to: 14
  2250   001498  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2251   00149C  0E1F               	movlw	31
  2252   00149E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2253   0014A0  A4D8               	btfss	status,2,c
  2254   0014A2  EF55  F00A         	goto	u21
  2255   0014A6  EF57  F00A         	goto	u20
  2256   0014AA                     u21:
  2257   0014AA  EF44  F00A         	goto	l242
  2258   0014AE                     u20:
  2259   0014AE                     
  2260                           ; BSR set to: 14
  2261   0014AE  0012               	return		;funcret
  2262   0014B0                     __end_of_I2C_2_Master_Idle:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function _I2C_2_Master_Init *****************
  2266 ;; Defined at:
  2267 ;;		line 4 in file "i2c.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_color_click_init
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text16
  2296   001436                     __ptext16:
  2297                           	callstack 0
  2298   001436                     _I2C_2_Master_Init:
  2299                           	callstack 28
  2300   001436                     
  2301                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2302   001436  010E               	movlb	14	; () banked
  2303   001438  51D9               	movf	217,w,b	;volatile
  2304   00143A  0BF0               	andlw	-16
  2305   00143C  0908               	iorlw	8
  2306   00143E  6FD9               	movwf	217,b	;volatile
  2307   001440                     
  2308                           ; BSR set to: 14
  2309                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2310   001440  8BD9               	bsf	217,5,b	;volatile
  2311                           
  2312                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2313   001442  0E9F               	movlw	159
  2314   001444  6FD6               	movwf	214,b	;volatile
  2315   001446                     
  2316                           ; BSR set to: 14
  2317                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2318   001446  8A84               	bsf	132,5,c	;volatile
  2319   001448                     
  2320                           ; BSR set to: 14
  2321                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2322   001448  8C84               	bsf	132,6,c	;volatile
  2323   00144A                     
  2324                           ; BSR set to: 14
  2325                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2326   00144A  9BA7               	bcf	167,5,b	;volatile
  2327   00144C                     
  2328                           ; BSR set to: 14
  2329                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2330   00144C  9DA7               	bcf	167,6,b	;volatile
  2331                           
  2332                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2333   00144E  0E1D               	movlw	29
  2334   001450  6F1D               	movwf	29,b	;volatile
  2335                           
  2336                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2337   001452  0E1E               	movlw	30
  2338   001454  6F1C               	movwf	28,b	;volatile
  2339                           
  2340                           ;i2c.c: 18:   RD5PPS=0x1C;
  2341   001456  0E1C               	movlw	28
  2342   001458  6F6F               	movwf	111,b	;volatile
  2343                           
  2344                           ;i2c.c: 19:   RD6PPS=0x1B;
  2345   00145A  0E1B               	movlw	27
  2346   00145C  6F70               	movwf	112,b	;volatile
  2347   00145E                     
  2348                           ; BSR set to: 14
  2349   00145E  0012               	return		;funcret
  2350   001460                     __end_of_I2C_2_Master_Init:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _buggy_lights_init *****************
  2354 ;; Defined at:
  2355 ;;		line 4 in file "buggy_lights.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		None
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text17
  2384   00137A                     __ptext17:
  2385                           	callstack 0
  2386   00137A                     _buggy_lights_init:
  2387                           	callstack 29
  2388   00137A                     
  2389                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  2390   00137A  9884               	bcf	132,4,c	;volatile
  2391                           
  2392                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  2393   00137C  9288               	bcf	136,1,c	;volatile
  2394                           
  2395                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  2396   00137E  9684               	bcf	132,3,c	;volatile
  2397                           
  2398                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  2399   001380  9086               	bcf	134,0,c	;volatile
  2400                           
  2401                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  2402   001382  9088               	bcf	136,0,c	;volatile
  2403                           
  2404                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  2405   001384  887C               	bsf	124,4,c	;volatile
  2406                           
  2407                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  2408   001386  8280               	bsf	128,1,c	;volatile
  2409                           
  2410                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  2411   001388  867C               	bsf	124,3,c	;volatile
  2412                           
  2413                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  2414   00138A  807E               	bsf	126,0,c	;volatile
  2415                           
  2416                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  2417   00138C  8080               	bsf	128,0,c	;volatile
  2418                           
  2419                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  2420   00138E  9E84               	bcf	132,7,c	;volatile
  2421                           
  2422                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  2423   001390  9688               	bcf	136,3,c	;volatile
  2424                           
  2425                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  2426   001392  8E7C               	bsf	124,7,c	;volatile
  2427                           
  2428                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  2429   001394  8680               	bsf	128,3,c	;volatile
  2430                           
  2431                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  2432   001396  9081               	bcf	129,0,c	;volatile
  2433                           
  2434                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  2435   001398  9483               	bcf	131,2,c	;volatile
  2436                           
  2437                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  2438   00139A  9084               	bcf	132,0,c	;volatile
  2439                           
  2440                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  2441   00139C  8079               	bsf	121,0,c	;volatile
  2442                           
  2443                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  2444   00139E  847B               	bsf	123,2,c	;volatile
  2445                           
  2446                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  2447   0013A0  807C               	bsf	124,0,c	;volatile
  2448                           
  2449                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  2450   0013A2  9281               	bcf	129,1,c	;volatile
  2451                           
  2452                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  2453   0013A4  9C83               	bcf	131,6,c	;volatile
  2454                           
  2455                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  2456   0013A6  9488               	bcf	136,2,c	;volatile
  2457                           
  2458                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  2459   0013A8  8279               	bsf	121,1,c	;volatile
  2460                           
  2461                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  2462   0013AA  8C7B               	bsf	123,6,c	;volatile
  2463                           
  2464                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  2465   0013AC  8480               	bsf	128,2,c	;volatile
  2466                           
  2467                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  2468   0013AE  9287               	bcf	135,1,c	;volatile
  2469                           
  2470                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  2471   0013B0  9881               	bcf	129,4,c	;volatile
  2472                           
  2473                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  2474   0013B2  9E86               	bcf	134,7,c	;volatile
  2475                           
  2476                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  2477   0013B4  827F               	bsf	127,1,c	;volatile
  2478                           
  2479                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  2480   0013B6  8879               	bsf	121,4,c	;volatile
  2481                           
  2482                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  2483   0013B8  8E7E               	bsf	126,7,c	;volatile
  2484                           
  2485                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  2486   0013BA  9087               	bcf	135,0,c	;volatile
  2487                           
  2488                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  2489   0013BC  9E85               	bcf	133,7,c	;volatile
  2490                           
  2491                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  2492   0013BE  9681               	bcf	129,3,c	;volatile
  2493                           
  2494                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  2495   0013C0  807F               	bsf	127,0,c	;volatile
  2496                           
  2497                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  2498   0013C2  8E7D               	bsf	125,7,c	;volatile
  2499                           
  2500                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  2501   0013C4  8679               	bsf	121,3,c	;volatile
  2502   0013C6  0012               	return		;funcret
  2503   0013C8                     __end_of_buggy_lights_init:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _Timer0_init *****************
  2507 ;; Defined at:
  2508 ;;		line 7 in file "timers.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text18
  2537   0014B0                     __ptext18:
  2538                           	callstack 0
  2539   0014B0                     _Timer0_init:
  2540                           	callstack 29
  2541   0014B0                     
  2542                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2543   0014B0  50D6               	movf	214,w,c	;volatile
  2544   0014B2  0B1F               	andlw	-225
  2545   0014B4  0940               	iorlw	64
  2546   0014B6  6ED6               	movwf	214,c	;volatile
  2547   0014B8                     
  2548                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2549   0014B8  88D6               	bsf	214,4,c	;volatile
  2550   0014BA                     
  2551                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  2552   0014BA  88D5               	bsf	213,4,c	;volatile
  2553                           
  2554                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  2555   0014BC  50D6               	movf	214,w,c	;volatile
  2556   0014BE  0BF0               	andlw	-16
  2557   0014C0  090E               	iorlw	14
  2558   0014C2  6ED6               	movwf	214,c	;volatile
  2559                           
  2560                           ;timers.c: 20:     TMR0H = 0;
  2561   0014C4  0E00               	movlw	0
  2562   0014C6  6ED4               	movwf	212,c	;volatile
  2563                           
  2564                           ;timers.c: 21:     TMR0L = 0;
  2565   0014C8  0E00               	movlw	0
  2566   0014CA  6ED3               	movwf	211,c	;volatile
  2567   0014CC                     
  2568                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  2569   0014CC  8ED5               	bsf	213,7,c	;volatile
  2570   0014CE                     
  2571                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  2572   0014CE  010E               	movlb	14	; () banked
  2573   0014D0  8B29               	bsf	41,5,b	;volatile
  2574   0014D2                     
  2575                           ; BSR set to: 14
  2576                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  2577   0014D2  8CF2               	bsf	242,6,c	;volatile
  2578   0014D4                     
  2579                           ; BSR set to: 14
  2580                           ;timers.c: 26:     INTCONbits.GIE = 1;
  2581   0014D4  8EF2               	bsf	242,7,c	;volatile
  2582   0014D6                     
  2583                           ; BSR set to: 14
  2584   0014D6  0012               	return		;funcret
  2585   0014D8                     __end_of_Timer0_init:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _ISR *****************
  2589 ;; Defined at:
  2590 ;;		line 75 in file "timers.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		Interrupt level 2
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	intcode
  2618   000008                     __pintcode:
  2619                           	callstack 0
  2620   000008                     _ISR:
  2621                           	callstack 26
  2622                           
  2623                           ; BSR set to: 14
  2624                           ;incstack = 0
  2625   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2626   00000A                     
  2627                           ;timers.c: 78:     if (PIR0bits.TMR0IF) {
  2628   00000A  010E               	movlb	14	; () banked
  2629   00000C  AB33               	btfss	51,5,b	;volatile
  2630   00000E  EF0B  F000         	goto	i2u59_41
  2631   000012  EF0D  F000         	goto	i2u59_40
  2632   000016                     i2u59_41:
  2633   000016  EF18  F000         	goto	i2l634
  2634   00001A                     i2u59_40:
  2635   00001A                     
  2636                           ; BSR set to: 14
  2637                           ;timers.c: 79:         if (backtrack) {
  2638   00001A  5044               	movf	_backtrack^0,w,c
  2639   00001C  B4D8               	btfsc	status,2,c
  2640   00001E  EF13  F000         	goto	i2u60_41
  2641   000022  EF15  F000         	goto	i2u60_40
  2642   000026                     i2u60_41:
  2643   000026  EF17  F000         	goto	i2l633
  2644   00002A                     i2u60_40:
  2645   00002A                     
  2646                           ; BSR set to: 14
  2647                           ;timers.c: 82:             returnFlag = 1;
  2648   00002A  0E01               	movlw	1
  2649   00002C  6E49               	movwf	_returnFlag^0,c
  2650   00002E                     i2l633:
  2651                           
  2652                           ; BSR set to: 14
  2653                           ;timers.c: 87:         PIR0bits.TMR0IF = 0;
  2654   00002E  9B33               	bcf	51,5,b	;volatile
  2655   000030                     i2l634:
  2656                           
  2657                           ; BSR set to: 14
  2658   000030  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2659   000032  0011               	retfie		f
  2660   000034                     __end_of_ISR:
  2661                           	callstack 0
  2662                           
  2663                           	psect	rparam
  2664   000000                     
  2665                           	psect	temp
  2666   00004E                     btemp:
  2667                           	callstack 0
  2668   00004E                     	ds	1
  2669   000000                     int$flags	set	btemp
  2670   000000                     wtemp8	set	btemp+1
  2671   000000                     ttemp5	set	btemp+1
  2672   000000                     ttemp6	set	btemp+4
  2673   000000                     ttemp7	set	btemp+8
  2674                           
  2675                           	psect	idloc
  2676                           
  2677                           ;Config register IDLOC0 @ 0x200000
  2678                           ;	unspecified, using default values
  2679   200000                     	org	2097152
  2680   200000  FFFF               	dw	65535
  2681                           
  2682                           ;Config register IDLOC1 @ 0x200002
  2683                           ;	unspecified, using default values
  2684   200002                     	org	2097154
  2685   200002  FFFF               	dw	65535
  2686                           
  2687                           ;Config register IDLOC2 @ 0x200004
  2688                           ;	unspecified, using default values
  2689   200004                     	org	2097156
  2690   200004  FFFF               	dw	65535
  2691                           
  2692                           ;Config register IDLOC3 @ 0x200006
  2693                           ;	unspecified, using default values
  2694   200006                     	org	2097158
  2695   200006  FFFF               	dw	65535
  2696                           
  2697                           ;Config register IDLOC4 @ 0x200008
  2698                           ;	unspecified, using default values
  2699   200008                     	org	2097160
  2700   200008  FFFF               	dw	65535
  2701                           
  2702                           ;Config register IDLOC5 @ 0x20000A
  2703                           ;	unspecified, using default values
  2704   20000A                     	org	2097162
  2705   20000A  FFFF               	dw	65535
  2706                           
  2707                           ;Config register IDLOC6 @ 0x20000C
  2708                           ;	unspecified, using default values
  2709   20000C                     	org	2097164
  2710   20000C  FFFF               	dw	65535
  2711                           
  2712                           ;Config register IDLOC7 @ 0x20000E
  2713                           ;	unspecified, using default values
  2714   20000E                     	org	2097166
  2715   20000E  FFFF               	dw	65535
  2716                           
  2717                           	psect	config
  2718                           
  2719                           ;Config register CONFIG1L @ 0x300000
  2720                           ;	External Oscillator mode Selection bits
  2721                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2722                           ;	Power-up default value for COSC bits
  2723                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2724   300000                     	org	3145728
  2725   300000  AA                 	db	170
  2726                           
  2727                           ;Config register CONFIG1H @ 0x300001
  2728                           ;	unspecified, using default values
  2729                           ;	Clock Out Enable bit
  2730                           ;	CLKOUTEN = 0x1, unprogrammed default
  2731                           ;	Clock Switch Enable bit
  2732                           ;	CSWEN = 0x1, unprogrammed default
  2733                           ;	Fail-Safe Clock Monitor Enable bit
  2734                           ;	FCMEN = 0x1, unprogrammed default
  2735   300001                     	org	3145729
  2736   300001  FF                 	db	255
  2737                           
  2738                           ;Config register CONFIG2L @ 0x300002
  2739                           ;	unspecified, using default values
  2740                           ;	Master Clear Enable bit
  2741                           ;	MCLRE = 0x1, unprogrammed default
  2742                           ;	Power-up Timer Enable bit
  2743                           ;	PWRTE = 0x1, unprogrammed default
  2744                           ;	Low-power BOR enable bit
  2745                           ;	LPBOREN = 0x1, unprogrammed default
  2746                           ;	Brown-out Reset Enable bits
  2747                           ;	BOREN = 0x3, unprogrammed default
  2748   300002                     	org	3145730
  2749   300002  FF                 	db	255
  2750                           
  2751                           ;Config register CONFIG2H @ 0x300003
  2752                           ;	unspecified, using default values
  2753                           ;	Brown Out Reset Voltage selection bits
  2754                           ;	BORV = 0x3, unprogrammed default
  2755                           ;	ZCD Disable bit
  2756                           ;	ZCD = 0x1, unprogrammed default
  2757                           ;	PPSLOCK bit One-Way Set Enable bit
  2758                           ;	PPS1WAY = 0x1, unprogrammed default
  2759                           ;	Stack Full/Underflow Reset Enable bit
  2760                           ;	STVREN = 0x1, unprogrammed default
  2761                           ;	Debugger Enable bit
  2762                           ;	DEBUG = 0x1, unprogrammed default
  2763                           ;	Extended Instruction Set Enable bit
  2764                           ;	XINST = 0x1, unprogrammed default
  2765   300003                     	org	3145731
  2766   300003  FF                 	db	255
  2767                           
  2768                           ;Config register CONFIG3L @ 0x300004
  2769                           ;	WDT Period Select bits
  2770                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2771                           ;	WDT operating mode
  2772                           ;	WDTE = OFF, WDT Disabled
  2773   300004                     	org	3145732
  2774   300004  9F                 	db	159
  2775                           
  2776                           ;Config register CONFIG3H @ 0x300005
  2777                           ;	unspecified, using default values
  2778                           ;	WDT Window Select bits
  2779                           ;	WDTCWS = 0x7, unprogrammed default
  2780                           ;	WDT input clock selector
  2781                           ;	WDTCCS = 0x7, unprogrammed default
  2782   300005                     	org	3145733
  2783   300005  FF                 	db	255
  2784                           
  2785                           ;Config register CONFIG4L @ 0x300006
  2786                           ;	unspecified, using default values
  2787                           ;	Write Protection Block 0
  2788                           ;	WRT0 = 0x1, unprogrammed default
  2789                           ;	Write Protection Block 1
  2790                           ;	WRT1 = 0x1, unprogrammed default
  2791                           ;	Write Protection Block 2
  2792                           ;	WRT2 = 0x1, unprogrammed default
  2793                           ;	Write Protection Block 3
  2794                           ;	WRT3 = 0x1, unprogrammed default
  2795                           ;	Write Protection Block 3
  2796                           ;	WRT4 = 0x1, unprogrammed default
  2797                           ;	Write Protection Block 3
  2798                           ;	WRT5 = 0x1, unprogrammed default
  2799                           ;	Write Protection Block 3
  2800                           ;	WRT6 = 0x1, unprogrammed default
  2801                           ;	Write Protection Block 3
  2802                           ;	WRT7 = 0x1, unprogrammed default
  2803   300006                     	org	3145734
  2804   300006  FF                 	db	255
  2805                           
  2806                           ;Config register CONFIG4H @ 0x300007
  2807                           ;	unspecified, using default values
  2808                           ;	Configuration Register Write Protection bit
  2809                           ;	WRTC = 0x1, unprogrammed default
  2810                           ;	Boot Block Write Protection bit
  2811                           ;	WRTB = 0x1, unprogrammed default
  2812                           ;	Data EEPROM Write Protection bit
  2813                           ;	WRTD = 0x1, unprogrammed default
  2814                           ;	Scanner Enable bit
  2815                           ;	SCANE = 0x1, unprogrammed default
  2816                           ;	Low Voltage Programming Enable bit
  2817                           ;	LVP = 0x1, unprogrammed default
  2818   300007                     	org	3145735
  2819   300007  FF                 	db	255
  2820                           
  2821                           ;Config register CONFIG5L @ 0x300008
  2822                           ;	unspecified, using default values
  2823                           ;	UserNVM Program Memory Code Protection bit
  2824                           ;	CP = 0x1, unprogrammed default
  2825                           ;	DataNVM Memory Code Protection bit
  2826                           ;	CPD = 0x1, unprogrammed default
  2827   300008                     	org	3145736
  2828   300008  FF                 	db	255
  2829                           
  2830                           ;Config register CONFIG5H @ 0x300009
  2831                           ;	unspecified, using default values
  2832   300009                     	org	3145737
  2833   300009  FF                 	db	255
  2834                           
  2835                           ;Config register CONFIG6L @ 0x30000A
  2836                           ;	unspecified, using default values
  2837                           ;	Table Read Protection Block 0
  2838                           ;	EBTR0 = 0x1, unprogrammed default
  2839                           ;	Table Read Protection Block 1
  2840                           ;	EBTR1 = 0x1, unprogrammed default
  2841                           ;	Table Read Protection Block 2
  2842                           ;	EBTR2 = 0x1, unprogrammed default
  2843                           ;	Table Read Protection Block 3
  2844                           ;	EBTR3 = 0x1, unprogrammed default
  2845                           ;	Table Read Protection Block 4
  2846                           ;	EBTR4 = 0x1, unprogrammed default
  2847                           ;	Table Read Protection Block 5
  2848                           ;	EBTR5 = 0x1, unprogrammed default
  2849                           ;	Table Read Protection Block 6
  2850                           ;	EBTR6 = 0x1, unprogrammed default
  2851                           ;	Table Read Protection Block 7
  2852                           ;	EBTR7 = 0x1, unprogrammed default
  2853   30000A                     	org	3145738
  2854   30000A  FF                 	db	255
  2855                           
  2856                           ;Config register CONFIG6H @ 0x30000B
  2857                           ;	unspecified, using default values
  2858                           ;	Boot Block Table Read Protection bit
  2859                           ;	EBTRB = 0x1, unprogrammed default
  2860   30000B                     	org	3145739
  2861   30000B  FF                 	db	255
  2862                           tosu	equ	0xFFF
  2863                           tosh	equ	0xFFE
  2864                           tosl	equ	0xFFD
  2865                           stkptr	equ	0xFFC
  2866                           pclatu	equ	0xFFB
  2867                           pclath	equ	0xFFA
  2868                           pcl	equ	0xFF9
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           indf0	equ	0xFEF
  2876                           postinc0	equ	0xFEE
  2877                           postdec0	equ	0xFED
  2878                           preinc0	equ	0xFEC
  2879                           plusw0	equ	0xFEB
  2880                           fsr0h	equ	0xFEA
  2881                           fsr0l	equ	0xFE9
  2882                           wreg	equ	0xFE8
  2883                           indf1	equ	0xFE7
  2884                           postinc1	equ	0xFE6
  2885                           postdec1	equ	0xFE5
  2886                           preinc1	equ	0xFE4
  2887                           plusw1	equ	0xFE3
  2888                           fsr1h	equ	0xFE2
  2889                           fsr1l	equ	0xFE1
  2890                           bsr	equ	0xFE0
  2891                           indf2	equ	0xFDF
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           preinc2	equ	0xFDC
  2895                           plusw2	equ	0xFDB
  2896                           fsr2h	equ	0xFDA
  2897                           fsr2l	equ	0xFD9
  2898                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        63
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      77
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    readTrail@man	PTR unsigned char  size(1) Largest target is 1
		 -> returnToSender@mann(COMRAM[1]), 

    readTrail@tH	PTR unsigned char  size(1) Largest target is 1
		 -> returnToSender@timerH(COMRAM[1]), 

    readTrail@tL	PTR unsigned char  size(1) Largest target is 1
		 -> returnToSender@timerL(COMRAM[1]), 

    returnToSender@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    returnToSender@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2614$buffer	PTR unsigned char  size(2) Largest target is 0

    S2614$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), main@motorR(COMRAM[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_returnToSender
    _returnToSender->_fullSpeedAhead
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6947
                                             29 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                     _returnToSender
 ---------------------------------------------------------------------------------
 (1) _returnToSender                                       6     4      2    6165
                                             23 COMRAM     6     4      2
                     _fullSpeedAhead
                          _readTrail
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 3     1      2    3221
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _readTrail                                            3     0      3     294
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     3      2    2291
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    1829
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _returnToSender
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _readTrail
     _stop
       _setMotorPWM

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      4D       1       81.9%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D9      62        0.0%
DATA                 0      0      D9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 15:25:23 2024

               _turn180Delay 0036              _trail_timer_low 00B0                           l31 13C6  
                         l53 1434                           l56 151C                           u10 1498  
                         u11 1494                           u20 14AE                           u21 14AA  
        ___wmul@multiplicand 0003             _trail_timer_high 00D8                          l151 0F5C  
                        l144 1188                          l242 1488                          l180 1088  
                        l245 14AE                          l254 1568                          l239 145E  
                        l183 10F8                          l159 12A4                          l248 1572  
                        l257 155E                          l611 14D6                          l390 153A  
                        l617 1400                          l626 1216                          l637 14FC  
                        _ISR 0008                          u970 12C0                          u971 12BC  
                        u980 12DE                          u981 12DA                          u990 12FA  
                        u991 12F6                          wreg 0FE8                  _squareDelay 0032  
                       ?_ISR 0001                         l1135 1318                         l1128 1310  
                       l2201 12D0                         l2211 1304                         l2203 12DE  
                       l1317 1488                         l2213 130A                         l2205 12E4  
                       l2221 0E84                         l2301 1056                         l1319 1498  
                       l1351 156E                         l2231 1500                         l2207 12FA  
                       l2223 0E88                         l2215 0E0A                         l2311 10B0  
                       l2303 1068                         l1513 137A                         l1353 1556  
                       l2209 1302                         l2225 0EC6                         l2217 0E24  
                       l2313 10B8                         l2305 1080                         l2241 1250  
                       l2233 1218                         l1355 155A                         l2227 0EE0  
                       l2219 0E72                         l2307 10A0                         l2315 10C8  
                       l2251 128E                         l2243 1258                         l2235 121C  
                       l1381 1446                         l1349 156A                         l1357 1560  
                       l2229 0F20                         l2317 10E0                         l2309 10A8  
                       l2341 13C8                         l2245 1260                         l2237 1232  
                       l2501 0FE2                         l1383 1448                         l1359 1564  
                       l2351 1402                         l2343 13CE                         l2247 1268  
                       l2239 123A                         l2431 119A                         l2503 0FE4  
                       l1385 144A                         l1377 1436                         l2353 1406  
                       l2361 10FA                         l1641 1528                         l2193 12A6  
                       l2345 13DE                         l2249 1278                         l2441 11D2  
                       l2433 11AA                         l2505 0FF0                         l1651 14B0  
                       l1387 144C                         l1379 1440                         l2355 1410  
                       l2371 1162                         l2363 110A                         l1643 152A  
                       l2195 12AE                         l2187 14D8                         l2347 13EE  
                       l2443 11DE                         l2435 11B0                         l2427 118A  
                       l2507 0FFE                         l1661 14D2                         l1653 14B8  
                       l2357 1420                         l2381 117C                         l2373 1164  
                       l2365 1130                         l1645 1534                         l2197 12C0  
                       l2189 14F4                         l2349 13FE                         l2437 11B6  
                       l2429 118E                         l2445 11E2                         l2509 1020  
                       l2461 0F76                         l1663 14D4                         l1655 14BA  
                       l2359 142A                         l2383 1186                         l2375 116E  
                       l2367 1134                         l1647 1536                         l1639 151E  
                       l2199 12C8                         l2447 11F2                         l2439 11C2  
                       l2471 0F92                         l2463 0F7A                         l1657 14CC  
                       l2377 1170                         l2369 1158                         l1649 1538  
                       l2297 1040                         l2481 0FAE                         l2473 0F9A  
                       l2465 0F7E                         l2457 0F5E                         l1659 14CE  
                       l2379 117A                         l2299 1048                         l2491 0FD2  
                       l2483 0FB6                         l2475 0F9E                         l2467 0F82  
                       l2459 0F76                         l2493 0FD6                         l2485 0FBE  
                       l2477 0FA2                         l2469 0F8A                         l2495 0FDA  
                       l2487 0FCA                         l2479 0FA6                         l2497 0FDC  
                       l2489 0FCE                         l2499 0FDE                         STR_1 0E01  
                       STR_2 0E06                         u1000 0E24                         u1001 0E20  
                       u1010 0EE0                         u1011 0EDC                         u1020 1232  
                       u1021 122E                         u1030 1250                         u1031 124C  
                       u1040 128E                         u1041 128A                         u1050 12A4  
                       u1051 12A0                         u1140 1080                         u1220 11D2  
                       u1141 107C                         u1221 11CE                         u1150 10A0  
                       u1230 11F2                         u1151 109C                         u1231 11EE  
                       u1160 10E0                         u1240 1204                         u1161 10DC  
                       u1241 11FC                         u1170 10F8                         u1171 10F4  
                       u1270 0FFE                         u1271 0FFA                         u1280 1010  
               _BAUD4CONbits 0EE9                         u1281 1008                         u1258 1206  
                       u1347 0F68                         u1357 102A                         u1367 126E  
                       u1377 10BE                         u1298 1012                         _T2PR 0FBC  
                       u1387 1416                         _main 0F5E                         fsr1h 0FE2  
                       fsr2h 0FDA                         indf1 0FE7                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         btemp 004E  
                       _stop 1218                         prodh 0FF4                         prodl 0FF3  
                       start 0034             returnToSender@mL 0018             returnToSender@mR 0019  
               ___param_bank 0000                        ??_ISR 0001         returnToSender@timerH 001C  
       returnToSender@timerL 001D                        ?_main 0001           _timer_high_pointer 0043  
                      ?_stop 0013              __end_of___lwdiv 131A                        i2l633 002E  
                      i2l634 0030                        _TMR0H 0FD4                        _TMR0L 0FD3  
 __end_of_I2C_2_Master_Start 1574   __end_of_I2C_2_Master_Write 1560                  _turningGear 0045  
          _turnRight135Delay 0038                        tablat 0FF5              _turnLeft90Delay 003E  
           ??_returnToSender 001A                        ttemp5 004F                        ttemp6 0052  
                      ttemp7 0056                        status 0FD8                        wtemp8 004F  
            __initialization 131A                 __end_of_main 1040                 __end_of_stop 12A6  
                     ??_main 001E                       ??_stop 0015                __activetblptr 0003  
               ?_setMotorPWM 000E                       _CCPR1H 0FAA                       _CCPR2H 0FA6  
                     _CCPR3H 0F25                       _CCPR4H 0F21                       _RC0PPS 0E62  
                     _RC4REG 0EE3                       _RE2PPS 0E74                       _RD5PPS 0E6F  
                     _RC7PPS 0E69                       _RD6PPS 0E70                       _RE4PPS 0E76  
                     i2l1961 000A                       i2l1963 001A                       i2l1965 002A  
                     _RG6PPS 0E88     __end_of_color_click_init 1436                       _RX4PPS 0E15  
                     _TX4REG 0EE4             _turnLeft135Delay 003A                ??_Timer0_init 0001  
               _CCPTMRS0bits 0FAD                       ___wmul 14D8                    ??___lwdiv 000B  
                     clear_0 1360                  readTrail@tH 0001                  readTrail@tL 0002  
                     isa$std 0001                 __pdataCOMRAM 0032            _timer_low_pointer 0042  
               __mediumconst 0000                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8                       stop@mL 0013                       stop@mR 0014  
          ??_initDCmotorsPWM 0003            _buggy_lights_init 137A                   __accesstop 0060  
    __end_of__initialization 1370           ?_buggy_lights_init 0001                ___rparam_used 0001  
         returnToSender@mann 001B               __pcstackCOMRAM 0001                 __pidataBANK0 1460  
        ??_buggy_lights_init 0001          __end_of_Timer0_init 14D8    __end_of_buggy_lights_init 13C8  
                 __pbssBANK0 0060            _color_writetoaddr 14FE                 _T2CLKCONbits 0FBF  
         ?_color_writetoaddr 0003                      ?___wmul 0001          ??_color_writetoaddr 0004  
                    _SP4BRGH 0EE6                      _SP4BRGL 0EE5                      i2u60_40 002A  
                    i2u60_41 0026                      i2u59_40 001A                      i2u59_41 0016  
                    _SSP2ADD 0ED6                      _SSP2BUF 0ED5       color_writetoaddr@value 0003  
  __end_of_color_writetoaddr 151E           _I2C_2_Master_Start 156A                   _initUSART4 151E  
         _I2C_2_Master_Write 1554                      __Hparam 0000                      __Lparam 0000  
                _Timer0_init 14B0          ?_I2C_2_Master_Start 0001                      ___lwdiv 12A6  
        ?_I2C_2_Master_Write 0001                 __psmallconst 0E00                      __pcinit 131A  
                    __ramtop 0E00                      __ptext0 0F5E                      __ptext1 118A  
                    __ptext2 1218                      __ptext3 13C8                      __ptext4 1040  
                    __ptext5 0E0A                      __ptext6 14D8                      __ptext7 12A6  
                    __ptext8 151E                      __ptext9 10FA                    _T2CONbits 0FBD  
          __end_of_readTrail 1402                    _T2HLTbits 0FBE                 readTrail@man 0003  
              _RxBufWriteCnt 004D       fullSpeedAhead@leftGear 0016         ??_I2C_2_Master_Start 0002  
       ??_I2C_2_Master_Write 0002         end_of_initialization 1370            ?_color_click_init 0001  
         ??_color_click_init 0005                      postdec1 0FE5                      postdec2 0FDD  
                    postinc0 0FEE                      postinc2 0FDE                   _returnFlag 0049  
            _initDCmotorsPWM 10FA                    _PORTFbits 0F8E           setMotorPWM@negDuty 0012  
                  _TRISAbits 0F81           setMotorPWM@posDuty 0011                    _TRISCbits 0F83  
                  _TRISDbits 0F84                    _TRISEbits 0F85                    _TRISFbits 0F86  
                  _TRISGbits 0F87                    _TRISHbits 0F88             fullSpeedAhead@mL 0013  
           fullSpeedAhead@mR 0014     color_writetoaddr@address 0004                  _CCP1CONbits 0FAB  
               _EUSART4RXbuf 009C                 _EUSART4TXbuf 0060                  _CCP2CONbits 0FA7  
                _CCP3CONbits 0F26                  ?_initUSART4 0001                  _CCP4CONbits 0F22  
                 main@motorL 0020                   main@motorR 0029               _fullSpeedAhead 1040  
             __end_of___wmul 14FE                __pidataCOMRAM 153C          start_initialization 131A  
                __end_of_ISR 0034                _TxBufWriteCnt 004B             _turnRight90Delay 003C  
    __end_of_initDCmotorsPWM 118A       __end_of_fullSpeedAhead 10FA                     ??___wmul 0005  
                __pdataBANK0 00C4                  __pbssCOMRAM 0049                    _backtrack 0044  
           ___lwdiv@dividend 0007                 ?_Timer0_init 0001              ?_fullSpeedAhead 0013  
                  __pintcode 0008                     ?___lwdiv 0007                  __smallconst 0E00  
          _I2C_2_Master_Idle 1488            _I2C_2_Master_Init 1436            _I2C_2_Master_Stop 1560  
               _RxBufReadCnt 004C           ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001  
              ??_setMotorPWM 000F           ?_I2C_2_Master_Stop 0001             ___lwdiv@quotient 000B  
              _headbuttDelay 0034                    _readTrail 13C8     initDCmotorsPWM@PWMperiod 0001  
                  _rampDelay 0048          ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001  
             ___wmul@product 0005                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0002  
                   _LATCbits 0F7B                     _LATDbits 0F7C                     _LATEbits 0F7D  
                   _LATFbits 0F7E                     _LATGbits 0F7F                     _LATHbits 0F80  
                   _PIE0bits 0E29                     _PIE4bits 0E2D                     _PIR0bits 0E33  
                   _PIR4bits 0E37             ?_initDCmotorsPWM 0001               _returnToSender 118A  
                   _SSP2CON2 0EDA                     _SSP2STAT 0ED8    __end_of_I2C_2_Master_Idle 14B0  
  __end_of_I2C_2_Master_Init 1460            ___wmul@multiplier 0001    __end_of_I2C_2_Master_Stop 156A  
               setMotorPWM@m 000E  I2C_2_Master_Write@data_byte 0002                 _TxBufReadCnt 004A  
                 ?_readTrail 0001                    copy_data0 132E                    copy_data1 134E  
        __end_of_setMotorPWM 0F5E                 ??_initUSART4 0001                     __Hrparam 0000  
     __end_of_returnToSender 1218                     __Lrparam 0000                   _ANSELDbits 0EA7  
                 _ANSELFbits 0EB4                   _T0CON0bits 0FD5                   _T0CON1bits 0FD6  
            ___lwdiv@divisor 0009           __end_of_initUSART4 153C              ___lwdiv@counter 000D  
                   __ptext10 1402                     __ptext11 14FE                     __ptext12 1554  
                   __ptext13 1560                     __ptext14 156A                     __ptext15 1488  
                   __ptext16 1436                     __ptext17 137A                     __ptext18 14B0  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA              ?_returnToSender 0018  
                   isa$xinst 0000                   _RC4STAbits 0EE7                     int$flags 004E  
                 _INTCONbits 0FF2                  ??_readTrail 0004                  _setMotorPWM 0E0A  
                   intlevel2 0000      fullSpeedAhead@rightGear 0017                 _topGearRight 0046  
          _manoeuvre_pointer 0041             ??_fullSpeedAhead 0015             _color_click_init 1402  
                _topGearLeft 0047                   _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C  
            _trail_manoeuvre 00C4              _manoeuvre_count 0040                   _TX4STAbits 0EE8  
