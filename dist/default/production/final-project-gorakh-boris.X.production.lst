

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 17:16:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   00197A                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _squareDelay
    98   00197A  012C               	dw	300
    99                           
   100                           ;initializer for _headbuttDelay
   101   00197C  0046               	dw	70
   102                           
   103                           ;initializer for _turn180Delay
   104   00197E  01FE               	dw	510
   105                           
   106                           ;initializer for _turnRight135Delay
   107   001980  012C               	dw	300
   108                           
   109                           ;initializer for _turnLeft135Delay
   110   001982  012C               	dw	300
   111                           
   112                           ;initializer for _turnRight90Delay
   113   001984  00AF               	dw	175
   114                           
   115                           ;initializer for _turnLeft90Delay
   116   001986  00AF               	dw	175
   117                           
   118                           ;initializer for _timer_low_pointer
   119   001988  B8                 	db	low _trail_timer_low
   120                           
   121                           ;initializer for _timer_high_pointer
   122   001989  CC                 	db	low _trail_timer_high
   123                           
   124                           ;initializer for _turningGear
   125   00198A  2A                 	db	42
   126                           
   127                           ;initializer for _topGearRight
   128   00198B  14                 	db	20
   129                           
   130                           ;initializer for _topGearLeft
   131   00198C  14                 	db	20
   132                           
   133                           ;initializer for _rampDelay
   134   00198D  08                 	db	8
   135                           
   136                           	psect	idataBANK0
   137   001734                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _manoeuvre_pointer
   141   001734  A4                 	db	low _trail_manoeuvre
   142                           
   143                           ;initializer for _trail_manoeuvre
   144   001735  01                 	db	1
   145   001736  02                 	db	2
   146   001737  03                 	db	3
   147   001738  04                 	db	4
   148   001739  05                 	db	5
   149   00173A  06                 	db	6
   150   00173B  07                 	db	7
   151   00173C  08                 	db	8
   152   00173D  09                 	db	9
   153   00173E  00                 	db	0
   154   00173F  01                 	db	1
   155   001740  02                 	db	2
   156   001741  03                 	db	3
   157   001742  04                 	db	4
   158   001743  05                 	db	5
   159   001744  06                 	db	6
   160   001745  07                 	db	7
   161   001746  08                 	db	8
   162   001747  09                 	db	9
   163   001748  00                 	db	0
   164                           
   165                           ;initializer for _trail_timer_low
   166   001749  01                 	db	1
   167   00174A  02                 	db	2
   168   00174B  03                 	db	3
   169   00174C  04                 	db	4
   170   00174D  05                 	db	5
   171   00174E  06                 	db	6
   172   00174F  07                 	db	7
   173   001750  08                 	db	8
   174   001751  09                 	db	9
   175   001752  00                 	db	0
   176   001753  01                 	db	1
   177   001754  02                 	db	2
   178   001755  03                 	db	3
   179   001756  04                 	db	4
   180   001757  05                 	db	5
   181   001758  06                 	db	6
   182   001759  07                 	db	7
   183   00175A  08                 	db	8
   184   00175B  09                 	db	9
   185   00175C  00                 	db	0
   186                           
   187                           ;initializer for _trail_timer_high
   188   00175D  01                 	db	1
   189   00175E  02                 	db	2
   190   00175F  03                 	db	3
   191   001760  04                 	db	4
   192   001761  05                 	db	5
   193   001762  06                 	db	6
   194   001763  07                 	db	7
   195   001764  08                 	db	8
   196   001765  09                 	db	9
   197   001766  00                 	db	0
   198   001767  01                 	db	1
   199   001768  02                 	db	2
   200   001769  03                 	db	3
   201   00176A  04                 	db	4
   202   00176B  05                 	db	5
   203   00176C  06                 	db	6
   204   00176D  07                 	db	7
   205   00176E  08                 	db	8
   206   00176F  09                 	db	9
   207   001770  00                 	db	0
   208   000000                     _TX4REG	set	3812
   209   000000                     _RC4STAbits	set	3815
   210   000000                     _SP4BRGH	set	3814
   211   000000                     _LATEbits	set	3965
   212   000000                     _TRISEbits	set	3973
   213   000000                     _LATGbits	set	3967
   214   000000                     _TRISGbits	set	3975
   215   000000                     _LATFbits	set	3966
   216   000000                     _LATHbits	set	3968
   217   000000                     _TRISFbits	set	3974
   218   000000                     _TRISHbits	set	3976
   219   000000                     _SSP2CON2bits	set	3802
   220   000000                     _RX4PPS	set	3605
   221   000000                     _SSP2CLKPPS	set	3612
   222   000000                     _SSP2DATPPS	set	3613
   223   000000                     _RC7PPS	set	3689
   224   000000                     _RE2PPS	set	3700
   225   000000                     _LATAbits	set	3961
   226   000000                     _LATDbits	set	3964
   227   000000                     _TRISDbits	set	3972
   228   000000                     _PORTFbits	set	3982
   229   000000                     _T2PR	set	4028
   230   000000                     _T2CONbits	set	4029
   231   000000                     _CCPR2H	set	4006
   232   000000                     _CCPR1H	set	4010
   233   000000                     _TRISCbits	set	3971
   234   000000                     _TRISAbits	set	3969
   235   000000                     _LATCbits	set	3963
   236   000000                     _RE4PPS	set	3702
   237   000000                     _RG6PPS	set	3720
   238   000000                     _RD5PPS	set	3695
   239   000000                     _ANSELDbits	set	3751
   240   000000                     _SSP2ADD	set	3798
   241   000000                     _SSP2CON1bits	set	3801
   242   000000                     _CCPR4H	set	3873
   243   000000                     _CCPR3H	set	3877
   244   000000                     _TMR0L	set	4051
   245   000000                     _TMR0H	set	4052
   246   000000                     _T0CON0bits	set	4053
   247   000000                     _T0CON1bits	set	4054
   248   000000                     _T2CLKCONbits	set	4031
   249   000000                     _T2HLTbits	set	4030
   250   000000                     _CCP1CONbits	set	4011
   251   000000                     _CCPTMRS0bits	set	4013
   252   000000                     _CCP2CONbits	set	4007
   253   000000                     _CCP3CONbits	set	3878
   254   000000                     _CCP4CONbits	set	3874
   255   000000                     _RC4REG	set	3811
   256   000000                     _SP4BRGL	set	3813
   257   000000                     _TX4STAbits	set	3816
   258   000000                     _BAUD4CONbits	set	3817
   259   000000                     _SSP2CON2	set	3802
   260   000000                     _SSP2STAT	set	3800
   261   000000                     _ANSELFbits	set	3764
   262   000000                     _SSP2BUF	set	3797
   263   000000                     _PIE0bits	set	3625
   264   000000                     _PIE4bits	set	3629
   265   000000                     _PIR4bits	set	3639
   266   000000                     _RC0PPS	set	3682
   267   000000                     _RD6PPS	set	3696
   268   000000                     _PIR0bits	set	3635
   269   000000                     _INTCONbits	set	4082
   270                           
   271                           	psect	smallconst
   272   000E00                     __psmallconst:
   273                           	callstack 0
   274   000E00  00                 	db	0
   275   000E01                     STR_1:
   276   000E01  25                 	db	37
   277   000E02  64                 	db	100	;'d'
   278   000E03  20                 	db	32
   279   000E04  25                 	db	37
   280   000E05  64                 	db	100	;'d'
   281   000E06  20                 	db	32
   282   000E07  25                 	db	37
   283   000E08  64                 	db	100	;'d'
   284   000E09  20                 	db	32
   285   000E0A  25                 	db	37
   286   000E0B  64                 	db	100	;'d'
   287   000E0C  20                 	db	32
   288   000E0D  0D                 	db	13
   289   000E0E  00                 	db	0
   290   000E0F                     STR_3:
   291   000E0F  25                 	db	37
   292   000E10  64                 	db	100	;'d'
   293   000E11  00                 	db	0
   294   000E12  00                 	db	0	; dummy byte at the end
   295   000000                     
   296                           ; #config settings
   297                           
   298                           	psect	cinit
   299   00140A                     __pcinit:
   300                           	callstack 0
   301   00140A                     start_initialization:
   302                           	callstack 0
   303   00140A                     __initialization:
   304                           	callstack 0
   305                           
   306                           ; Initialize objects allocated to BANK0 (61 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308   00140A  0E34               	movlw	low __pidataBANK0
   309   00140C  6EF6               	movwf	tblptrl,c
   310   00140E  0E17               	movlw	high __pidataBANK0
   311   001410  6EF7               	movwf	tblptrh,c
   312   001412  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313   001414  6EF8               	movwf	tblptru,c
   314   001416  EE00  F0A3         	lfsr	0,__pdataBANK0
   315   00141A  EE10 F03D          	lfsr	1,61
   316   00141E                     copy_data0:
   317   00141E  0009               	tblrd		*+
   318   001420  CFF5 FFEE          	movff	tablat,postinc0
   319   001424  50E5               	movf	postdec1,w,c
   320   001426  50E1               	movf	fsr1l,w,c
   321   001428  E1FA               	bnz	copy_data0
   322                           
   323                           ; Initialize objects allocated to COMRAM (20 bytes)
   324                           ; load TBLPTR registers with __pidataCOMRAM
   325   00142A  0E7A               	movlw	low __pidataCOMRAM
   326   00142C  6EF6               	movwf	tblptrl,c
   327   00142E  0E19               	movlw	high __pidataCOMRAM
   328   001430  6EF7               	movwf	tblptrh,c
   329   001432  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   330   001434  6EF8               	movwf	tblptru,c
   331   001436  EE00  F03B         	lfsr	0,__pdataCOMRAM
   332   00143A  EE10 F014          	lfsr	1,20
   333   00143E                     copy_data1:
   334   00143E  0009               	tblrd		*+
   335   001440  CFF5 FFEE          	movff	tablat,postinc0
   336   001444  50E5               	movf	postdec1,w,c
   337   001446  50E1               	movf	fsr1l,w,c
   338   001448  E1FA               	bnz	copy_data1
   339                           
   340                           ; Clear objects allocated to BANK1 (92 bytes)
   341   00144A  EE01  F000         	lfsr	0,__pbssBANK1
   342   00144E  0E5C               	movlw	92
   343   001450                     clear_0:
   344   001450  6AEE               	clrf	postinc0,c
   345   001452  06E8               	decf	wreg,f,c
   346   001454  E1FD               	bnz	clear_0
   347                           
   348                           ; Clear objects allocated to BANK0 (20 bytes)
   349   001456  EE00  F0E0         	lfsr	0,__pbssBANK0
   350   00145A  0E14               	movlw	20
   351   00145C                     clear_1:
   352   00145C  6AEE               	clrf	postinc0,c
   353   00145E  06E8               	decf	wreg,f,c
   354   001460  E1FD               	bnz	clear_1
   355                           
   356                           ; Clear objects allocated to COMRAM (12 bytes)
   357   001462  EE00  F04F         	lfsr	0,__pbssCOMRAM
   358   001466  0E0C               	movlw	12
   359   001468                     clear_2:
   360   001468  6AEE               	clrf	postinc0,c
   361   00146A  06E8               	decf	wreg,f,c
   362   00146C  E1FD               	bnz	clear_2
   363   00146E                     end_of_initialization:
   364                           	callstack 0
   365   00146E                     __end_of__initialization:
   366                           	callstack 0
   367   00146E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   368   001470  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   369   001472  0100               	movlb	0
   370   001474  EF0A  F008         	goto	_main	;jump to C main() function
   371                           
   372                           	psect	bssCOMRAM
   373   00004F                     __pbssCOMRAM:
   374                           	callstack 0
   375   00004F                     _nout:
   376                           	callstack 0
   377   00004F                     	ds	2
   378   000051                     _width:
   379                           	callstack 0
   380   000051                     	ds	2
   381   000053                     _prec:
   382                           	callstack 0
   383   000053                     	ds	2
   384   000055                     _flags:
   385                           	callstack 0
   386   000055                     	ds	1
   387   000056                     _backtrack:
   388                           	callstack 0
   389   000056                     	ds	1
   390   000057                     _TxBufReadCnt:
   391                           	callstack 0
   392   000057                     	ds	1
   393   000058                     _TxBufWriteCnt:
   394                           	callstack 0
   395   000058                     	ds	1
   396   000059                     _RxBufReadCnt:
   397                           	callstack 0
   398   000059                     	ds	1
   399   00005A                     _RxBufWriteCnt:
   400                           	callstack 0
   401   00005A                     	ds	1
   402                           
   403                           	psect	dataCOMRAM
   404   00003B                     __pdataCOMRAM:
   405                           	callstack 0
   406   00003B                     _squareDelay:
   407                           	callstack 0
   408   00003B                     	ds	2
   409   00003D                     _headbuttDelay:
   410                           	callstack 0
   411   00003D                     	ds	2
   412   00003F                     _turn180Delay:
   413                           	callstack 0
   414   00003F                     	ds	2
   415   000041                     _turnRight135Delay:
   416                           	callstack 0
   417   000041                     	ds	2
   418   000043                     _turnLeft135Delay:
   419                           	callstack 0
   420   000043                     	ds	2
   421   000045                     _turnRight90Delay:
   422                           	callstack 0
   423   000045                     	ds	2
   424   000047                     _turnLeft90Delay:
   425                           	callstack 0
   426   000047                     	ds	2
   427   000049                     _timer_low_pointer:
   428                           	callstack 0
   429   000049                     	ds	1
   430   00004A                     _timer_high_pointer:
   431                           	callstack 0
   432   00004A                     	ds	1
   433   00004B                     _turningGear:
   434                           	callstack 0
   435   00004B                     	ds	1
   436   00004C                     _topGearRight:
   437                           	callstack 0
   438   00004C                     	ds	1
   439   00004D                     _topGearLeft:
   440                           	callstack 0
   441   00004D                     	ds	1
   442   00004E                     _rampDelay:
   443                           	callstack 0
   444   00004E                     	ds	1
   445                           
   446                           	psect	bssBANK0
   447   0000E0                     __pbssBANK0:
   448                           	callstack 0
   449   0000E0                     _EUSART4RXbuf:
   450                           	callstack 0
   451   0000E0                     	ds	20
   452                           
   453                           	psect	dataBANK0
   454   0000A3                     __pdataBANK0:
   455                           	callstack 0
   456   0000A3                     _manoeuvre_pointer:
   457                           	callstack 0
   458   0000A3                     	ds	1
   459   0000A4                     _trail_manoeuvre:
   460                           	callstack 0
   461   0000A4                     	ds	20
   462   0000B8                     _trail_timer_low:
   463                           	callstack 0
   464   0000B8                     	ds	20
   465   0000CC                     _trail_timer_high:
   466                           	callstack 0
   467   0000CC                     	ds	20
   468                           
   469                           	psect	bssBANK1
   470   000100                     __pbssBANK1:
   471                           	callstack 0
   472   000100                     _EUSART4TXbuf:
   473                           	callstack 0
   474   000100                     	ds	60
   475   00013C                     _dbuf:
   476                           	callstack 0
   477   00013C                     	ds	32
   478                           
   479                           	psect	cstackBANK0
   480   000060                     __pcstackBANK0:
   481                           	callstack 0
   482   000060                     main@display:
   483                           	callstack 0
   484                           
   485                           ; 41 bytes @ 0x0
   486   000060                     	ds	41
   487   000089                     main@motorL:
   488                           	callstack 0
   489                           
   490                           ; 9 bytes @ 0x29
   491   000089                     	ds	9
   492   000092                     main@motorR:
   493                           	callstack 0
   494                           
   495                           ; 9 bytes @ 0x32
   496   000092                     	ds	9
   497   00009B                     main@read_val:
   498                           	callstack 0
   499                           
   500                           ; 8 bytes @ 0x3B
   501   00009B                     	ds	8
   502                           
   503                           	psect	cstackCOMRAM
   504   000001                     __pcstackCOMRAM:
   505                           	callstack 0
   506   000001                     ??_getCharFromTxBuf:
   507   000001                     putCharToRxBuf@byte:
   508                           	callstack 0
   509   000001                     
   510                           ; 1 bytes @ 0x0
   511   000001                     	ds	2
   512   000003                     ??_HighISR:
   513                           
   514                           ; 1 bytes @ 0x2
   515   000003                     	ds	2
   516   000005                     ??_I2C_2_Master_Idle:
   517   000005                     ?___awdiv:
   518                           	callstack 0
   519   000005                     ?___awmod:
   520                           	callstack 0
   521   000005                     putCharToTxBuf@byte:
   522                           	callstack 0
   523   000005                     initDCmotorsPWM@PWMperiod:
   524                           	callstack 0
   525   000005                     ___awdiv@dividend:
   526                           	callstack 0
   527   000005                     ___awmod@dividend:
   528                           	callstack 0
   529   000005                     fputc@c:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x4
   533   000005                     	ds	1
   534   000006                     ??_I2C_2_Master_Read:
   535   000006                     I2C_2_Master_Write@data_byte:
   536                           	callstack 0
   537   000006                     TxBufferedString@string:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x5
   541   000006                     	ds	1
   542   000007                     color_writetoaddr@value:
   543                           	callstack 0
   544   000007                     I2C_2_Master_Read@ack:
   545                           	callstack 0
   546   000007                     fputc@fp:
   547                           	callstack 0
   548   000007                     ___awdiv@divisor:
   549                           	callstack 0
   550   000007                     ___awmod@divisor:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x6
   554   000007                     	ds	1
   555   000008                     ??_fputc:
   556   000008                     color_writetoaddr@address:
   557                           	callstack 0
   558   000008                     I2C_2_Master_Read@tmp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x7
   562   000008                     	ds	1
   563   000009                     ??_color_click_init:
   564   000009                     ?_color_read_Red:
   565                           	callstack 0
   566   000009                     ?_color_read_Blue:
   567                           	callstack 0
   568   000009                     ?_color_read_Green:
   569                           	callstack 0
   570   000009                     ?_color_read_Clear:
   571                           	callstack 0
   572   000009                     ___awdiv@counter:
   573                           	callstack 0
   574   000009                     ___awmod@counter:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x8
   578   000009                     	ds	1
   579   00000A                     ___awdiv@sign:
   580                           	callstack 0
   581   00000A                     ___awmod@sign:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x9
   585   00000A                     	ds	1
   586   00000B                     ??_color_read_Red:
   587   00000B                     ??_color_read_Blue:
   588   00000B                     ??_color_read_Green:
   589   00000B                     ??_color_read_Clear:
   590   00000B                     ?_abs:
   591                           	callstack 0
   592   00000B                     ___awdiv@quotient:
   593                           	callstack 0
   594   00000B                     abs@a:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xA
   598   00000B                     	ds	2
   599   00000D                     ??_abs:
   600                           
   601                           ; 1 bytes @ 0xC
   602   00000D                     	ds	1
   603   00000E                     color_read_Red@tmp:
   604                           	callstack 0
   605   00000E                     color_read_Blue@tmp:
   606                           	callstack 0
   607   00000E                     color_read_Green@tmp:
   608                           	callstack 0
   609   00000E                     color_read_Clear@tmp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xD
   613   00000E                     	ds	1
   614   00000F                     ?_vfpfcnvrt:
   615                           	callstack 0
   616   00000F                     vfpfcnvrt@fp:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0xE
   620   00000F                     	ds	1
   621   000010                     getRGBCval@p:
   622                           	callstack 0
   623   000010                     vfpfcnvrt@fmt:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0xF
   627   000010                     	ds	1
   628   000011                     vfpfcnvrt@ap:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x10
   632   000011                     	ds	1
   633   000012                     ??_vfpfcnvrt:
   634                           
   635                           ; 1 bytes @ 0x11
   636   000012                     	ds	1
   637   000013                     vfpfcnvrt@done:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x12
   641   000013                     	ds	1
   642   000014                     vfpfcnvrt@cnt:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x13
   646   000014                     	ds	2
   647   000016                     vfpfcnvrt@cp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x15
   651   000016                     	ds	1
   652   000017                     vfpfcnvrt@convarg:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x16
   656   000017                     	ds	4
   657   00001B                     vfpfcnvrt@c:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x1A
   661   00001B                     	ds	1
   662   00001C                     ?_vfprintf:
   663                           	callstack 0
   664   00001C                     vfprintf@fp:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x1B
   668   00001C                     	ds	1
   669   00001D                     vfprintf@fmt:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x1C
   673   00001D                     	ds	1
   674   00001E                     vfprintf@ap:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1D
   678   00001E                     	ds	1
   679   00001F                     vfprintf@cfmt:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x1E
   683   00001F                     	ds	1
   684   000020                     ?_sprintf:
   685                           	callstack 0
   686   000020                     sprintf@s:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x1F
   690   000020                     	ds	1
   691   000021                     sprintf@fmt:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x20
   695   000021                     	ds	9
   696   00002A                     sprintf@ret:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x29
   700   00002A                     	ds	2
   701   00002C                     sprintf@ap:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x2B
   705   00002C                     	ds	1
   706   00002D                     sprintf@f:
   707                           	callstack 0
   708                           
   709                           ; 12 bytes @ 0x2C
   710   00002D                     	ds	12
   711   000039                     ??_main:
   712                           
   713                           ; 1 bytes @ 0x38
   714   000039                     	ds	2
   715                           
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   718 ;;
   719 ;; *************** function _main *****************
   720 ;; Defined at:
   721 ;;		line 27 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  display        41    0[BANK0 ] unsigned char [41]
   726 ;;  motorR          9   50[BANK0 ] struct DC_motor
   727 ;;  motorL          9   41[BANK0 ] struct DC_motor
   728 ;;  read_val        8   59[BANK0 ] struct RGBC_val
   729 ;;  PWMcycle        2    0        unsigned int 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Locals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;      Totals:         2      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   743 ;;Total ram usage:       69 bytes
   744 ;; Hardware stack levels required when called: 7
   745 ;; This function calls:
   746 ;;		_Interrupts_init
   747 ;;		_Timer0_init
   748 ;;		_TxBufferedString
   749 ;;		_buggy_lights_init
   750 ;;		_color_click_init
   751 ;;		_getRGBCval
   752 ;;		_initDCmotorsPWM
   753 ;;		_initUSART4
   754 ;;		_sendTxBuf
   755 ;;		_sprintf
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text0
   762   001014                     __ptext0:
   763                           	callstack 0
   764   001014                     _main:
   765                           	callstack 24
   766   001014                     
   767                           ;main.c: 28:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   768   001014  0E52               	movlw	82
   769   001016  6E3A               	movwf	(??_main+1)^0,c
   770   001018  0E2B               	movlw	43
   771   00101A  6E39               	movwf	??_main^0,c
   772   00101C  0E00               	movlw	0
   773   00101E                     u1347:
   774   00101E  2EE8               	decfsz	wreg,f,c
   775   001020  D7FE               	bra	u1347
   776   001022  2E39               	decfsz	??_main^0,f,c
   777   001024  D7FC               	bra	u1347
   778   001026  2E3A               	decfsz	(??_main+1)^0,f,c
   779   001028  D7FA               	bra	u1347
   780   00102A  D000               	nop2	
   781   00102C                     
   782                           ;main.c: 31:     initDCmotorsPWM(PWMcycle);
   783   00102C  0E00               	movlw	0
   784   00102E  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   785   001030  0E63               	movlw	99
   786   001032  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   787   001034  ECBD  F009         	call	_initDCmotorsPWM	;wreg free
   788   001038                     
   789                           ;main.c: 33:     struct DC_motor motorL, motorR;;main.c: 35:     motorL.power = 0;
   790   001038  0E00               	movlw	0
   791   00103A  0100               	movlb	0	; () banked
   792   00103C  6F89               	movwf	main@motorL& (0+255),b
   793   00103E                     
   794                           ; BSR set to: 0
   795                           ;main.c: 36:     motorL.direction = 1;
   796   00103E  0E01               	movlw	1
   797   001040  6F8A               	movwf	(main@motorL+1)& (0+255),b
   798   001042                     
   799                           ; BSR set to: 0
   800                           ;main.c: 37:     motorL.brakemode = 1;
   801   001042  0E01               	movlw	1
   802   001044  6F8B               	movwf	(main@motorL+2)& (0+255),b
   803   001046                     
   804                           ; BSR set to: 0
   805                           ;main.c: 38:     motorL.PWMperiod = PWMcycle;
   806   001046  0E00               	movlw	0
   807   001048  6F8D               	movwf	(main@motorL+4)& (0+255),b
   808   00104A  0E63               	movlw	99
   809   00104C  6F8C               	movwf	(main@motorL+3)& (0+255),b
   810   00104E                     
   811                           ; BSR set to: 0
   812                           ;main.c: 39:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   813   00104E  0EAA               	movlw	170
   814   001050  6F8E               	movwf	(main@motorL+5)& (0+255),b
   815   001052  0E0F               	movlw	15
   816   001054  6F8F               	movwf	(main@motorL+6)& (0+255),b
   817   001056                     
   818                           ; BSR set to: 0
   819                           ;main.c: 40:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   820   001056  0EA6               	movlw	166
   821   001058  6F90               	movwf	(main@motorL+7)& (0+255),b
   822   00105A  0E0F               	movlw	15
   823   00105C  6F91               	movwf	(main@motorL+8)& (0+255),b
   824   00105E                     
   825                           ; BSR set to: 0
   826                           ;main.c: 42:     motorR.power = 0;
   827   00105E  0E00               	movlw	0
   828   001060  6F92               	movwf	main@motorR& (0+255),b
   829   001062                     
   830                           ; BSR set to: 0
   831                           ;main.c: 43:     motorR.direction = 1;
   832   001062  0E01               	movlw	1
   833   001064  6F93               	movwf	(main@motorR+1)& (0+255),b
   834   001066                     
   835                           ; BSR set to: 0
   836                           ;main.c: 44:     motorR.brakemode = 1;
   837   001066  0E01               	movlw	1
   838   001068  6F94               	movwf	(main@motorR+2)& (0+255),b
   839   00106A                     
   840                           ; BSR set to: 0
   841                           ;main.c: 45:     motorR.PWMperiod = PWMcycle;
   842   00106A  0E00               	movlw	0
   843   00106C  6F96               	movwf	(main@motorR+4)& (0+255),b
   844   00106E  0E63               	movlw	99
   845   001070  6F95               	movwf	(main@motorR+3)& (0+255),b
   846   001072                     
   847                           ; BSR set to: 0
   848                           ;main.c: 46:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   849   001072  0E25               	movlw	37
   850   001074  6F97               	movwf	(main@motorR+5)& (0+255),b
   851   001076  0E0F               	movlw	15
   852   001078  6F98               	movwf	(main@motorR+6)& (0+255),b
   853   00107A                     
   854                           ; BSR set to: 0
   855                           ;main.c: 47:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   856   00107A  0E21               	movlw	33
   857   00107C  6F99               	movwf	(main@motorR+7)& (0+255),b
   858   00107E  0E0F               	movlw	15
   859   001080  6F9A               	movwf	(main@motorR+8)& (0+255),b
   860   001082                     
   861                           ; BSR set to: 0
   862                           ;main.c: 51:     struct RGBC_val read_val;;main.c: 53:     read_val.R = 0;
   863   001082  0E00               	movlw	0
   864   001084  6F9C               	movwf	(main@read_val+1)& (0+255),b
   865   001086  0E00               	movlw	0
   866   001088  6F9B               	movwf	main@read_val& (0+255),b
   867   00108A                     
   868                           ; BSR set to: 0
   869                           ;main.c: 54:     read_val.B = 0;
   870   00108A  0E00               	movlw	0
   871   00108C  6FA0               	movwf	(main@read_val+5)& (0+255),b
   872   00108E  0E00               	movlw	0
   873   001090  6F9F               	movwf	(main@read_val+4)& (0+255),b
   874   001092                     
   875                           ; BSR set to: 0
   876                           ;main.c: 55:     read_val.G = 0;
   877   001092  0E00               	movlw	0
   878   001094  6F9E               	movwf	(main@read_val+3)& (0+255),b
   879   001096  0E00               	movlw	0
   880   001098  6F9D               	movwf	(main@read_val+2)& (0+255),b
   881   00109A                     
   882                           ; BSR set to: 0
   883                           ;main.c: 56:     read_val.C = 0;
   884   00109A  0E00               	movlw	0
   885   00109C  6FA2               	movwf	(main@read_val+7)& (0+255),b
   886   00109E  0E00               	movlw	0
   887   0010A0  6FA1               	movwf	(main@read_val+6)& (0+255),b
   888   0010A2                     
   889                           ; BSR set to: 0
   890                           ;main.c: 60:     buggy_lights_init();
   891   0010A2  EC30  F00B         	call	_buggy_lights_init	;wreg free
   892   0010A6                     
   893                           ;main.c: 61:     color_click_init();
   894   0010A6  ECD3  F00B         	call	_color_click_init	;wreg free
   895   0010AA                     
   896                           ;main.c: 62:     initUSART4();
   897   0010AA  EC89  F00C         	call	_initUSART4	;wreg free
   898   0010AE                     
   899                           ;main.c: 63:     Timer0_init();
   900   0010AE  EC79  F00C         	call	_Timer0_init	;wreg free
   901   0010B2                     
   902                           ;main.c: 64:     Interrupts_init();
   903   0010B2  ECC7  F00C         	call	_Interrupts_init	;wreg free
   904   0010B6                     
   905                           ;main.c: 69:     TRISFbits.TRISF2 = 1;
   906   0010B6  8486               	bsf	134,2,c	;volatile
   907   0010B8                     
   908                           ;main.c: 70:     TRISFbits.TRISF3 = 1;
   909   0010B8  8686               	bsf	134,3,c	;volatile
   910   0010BA                     
   911                           ;main.c: 72:     ANSELFbits.ANSELF2 = 0;
   912   0010BA  010E               	movlb	14	; () banked
   913   0010BC  95B4               	bcf	180,2,b	;volatile
   914   0010BE                     
   915                           ; BSR set to: 14
   916                           ;main.c: 73:     ANSELFbits.ANSELF3 = 0;
   917   0010BE  97B4               	bcf	180,3,b	;volatile
   918   0010C0                     l2560:
   919                           
   920                           ;main.c: 93:         if (!PORTFbits.RF2) {
   921   0010C0  B48E               	btfsc	142,2,c	;volatile
   922   0010C2  EF65  F008         	goto	u1251
   923   0010C6  EF67  F008         	goto	u1250
   924   0010CA                     u1251:
   925   0010CA  EF7E  F008         	goto	l2568
   926   0010CE                     u1250:
   927   0010CE                     
   928                           ;main.c: 94:             *manoeuvre_pointer = 0;
   929   0010CE  0100               	movlb	0	; () banked
   930   0010D0  51A3               	movf	_manoeuvre_pointer& (0+255),w,b
   931   0010D2  6ED9               	movwf	fsr2l,c
   932   0010D4  6ADA               	clrf	fsr2h,c
   933   0010D6  6ADF               	clrf	indf2,c
   934   0010D8                     
   935                           ; BSR set to: 0
   936                           ;main.c: 95:             manoeuvre_pointer ++;
   937   0010D8  2BA3               	incf	_manoeuvre_pointer& (0+255),f,b
   938   0010DA                     
   939                           ; BSR set to: 0
   940                           ;main.c: 96:             LATDbits.LATD7 = !LATDbits.LATD7;
   941   0010DA  AE7C               	btfss	124,7,c	;volatile
   942   0010DC  EF72  F008         	goto	u1261
   943   0010E0  EF76  F008         	goto	u1260
   944   0010E4                     u1261:
   945   0010E4  6A39               	clrf	??_main^0,c
   946   0010E6  2A39               	incf	??_main^0,f,c
   947   0010E8  EF77  F008         	goto	u1278
   948   0010EC                     u1260:
   949   0010EC  6A39               	clrf	??_main^0,c
   950   0010EE                     u1278:
   951   0010EE  3239               	rrcf	??_main^0,f,c
   952   0010F0  3239               	rrcf	??_main^0,f,c
   953   0010F2  507C               	movf	124,w,c	;volatile
   954   0010F4  1839               	xorwf	??_main^0,w,c
   955   0010F6  0B7F               	andlw	-129
   956   0010F8  1839               	xorwf	??_main^0,w,c
   957   0010FA  6E7C               	movwf	124,c	;volatile
   958   0010FC                     l2568:
   959                           
   960                           ;main.c: 98:         getRGBCval(&read_val);
   961   0010FC  0E9B               	movlw	low main@read_val
   962   0010FE  6E10               	movwf	getRGBCval@p^0,c
   963   001100  EC3C  F00A         	call	_getRGBCval	;wreg free
   964   001104                     
   965                           ;main.c: 99:         sprintf(display, "%d %d %d %d \r",read_val.R,read_val.G,read_val.B,
      +                          read_val.C);
   966   001104  0E60               	movlw	low main@display
   967   001106  6E20               	movwf	sprintf@s^0,c
   968   001108  0E01               	movlw	low STR_1
   969   00110A  6E21               	movwf	sprintf@fmt^0,c
   970   00110C  C09B  F022         	movff	main@read_val,?_sprintf+2
   971   001110  C09C  F023         	movff	main@read_val+1,?_sprintf+3
   972   001114  C09D  F024         	movff	main@read_val+2,?_sprintf+4
   973   001118  C09E  F025         	movff	main@read_val+3,?_sprintf+5
   974   00111C  C09F  F026         	movff	main@read_val+4,?_sprintf+6
   975   001120  C0A0  F027         	movff	main@read_val+5,?_sprintf+7
   976   001124  C0A1  F028         	movff	main@read_val+6,?_sprintf+8
   977   001128  C0A2  F029         	movff	main@read_val+7,?_sprintf+9
   978   00112C  EC57  F00B         	call	_sprintf	;wreg free
   979   001130                     
   980                           ;main.c: 100:         TxBufferedString(display);
   981   001130  0E60               	movlw	low main@display
   982   001132  6E06               	movwf	TxBufferedString@string^0,c
   983   001134  EC18  F00C         	call	_TxBufferedString	;wreg free
   984   001138                     
   985                           ;main.c: 101:         sendTxBuf();
   986   001138  EC98  F00C         	call	_sendTxBuf	;wreg free
   987   00113C                     
   988                           ;main.c: 104:         _delay((unsigned long)((500)*(64000000/4000.0)));
   989   00113C  0E29               	movlw	41
   990   00113E  6E3A               	movwf	(??_main+1)^0,c
   991   001140  0E96               	movlw	150
   992   001142  6E39               	movwf	??_main^0,c
   993   001144  0E7F               	movlw	127
   994   001146                     u1357:
   995   001146  2EE8               	decfsz	wreg,f,c
   996   001148  D7FE               	bra	u1357
   997   00114A  2E39               	decfsz	??_main^0,f,c
   998   00114C  D7FC               	bra	u1357
   999   00114E  2E3A               	decfsz	(??_main+1)^0,f,c
  1000   001150  D7FA               	bra	u1357
  1001   001152  0000               	nop	
  1002   001154  EF60  F008         	goto	l2560
  1003   001158  EF3A  F000         	goto	start
  1004   00115C                     __end_of_main:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _sprintf *****************
  1008 ;; Defined at:
  1009 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  s               1   31[COMRAM] PTR unsigned char 
  1012 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), main@display(41), 
  1013 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
  1014 ;;		 -> STR_4(3), STR_2(5), STR_1(14), 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  f              12   44[COMRAM] struct _IO_FILE
  1017 ;;  ret             2   41[COMRAM] int 
  1018 ;;  ap              1   43[COMRAM] PTR void [1]
  1019 ;;		 -> ?_sprintf(2), 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  2   31[COMRAM] int 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1029 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;Total ram usage:       25 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 6
  1036 ;; This function calls:
  1037 ;;		_vfprintf
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;;		_sendIntSerial4
  1041 ;;		_sendArraySerial4
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text1
  1046   0016AE                     __ptext1:
  1047                           	callstack 0
  1048   0016AE                     _sprintf:
  1049                           	callstack 24
  1050   0016AE  0E22               	movlw	low (?_sprintf+2)
  1051   0016B0  6E2C               	movwf	sprintf@ap^0,c
  1052   0016B2  C020  F02D         	movff	sprintf@s,sprintf@f
  1053   0016B6  0E00               	movlw	0
  1054   0016B8  6E31               	movwf	(sprintf@f+4)^0,c
  1055   0016BA  0E00               	movlw	0
  1056   0016BC  6E30               	movwf	(sprintf@f+3)^0,c
  1057   0016BE  0E00               	movlw	0
  1058   0016C0  6E38               	movwf	(sprintf@f+11)^0,c
  1059   0016C2  0E00               	movlw	0
  1060   0016C4  6E37               	movwf	(sprintf@f+10)^0,c
  1061   0016C6  0E2D               	movlw	low sprintf@f
  1062   0016C8  6E1C               	movwf	vfprintf@fp^0,c
  1063   0016CA  C021  F01D         	movff	sprintf@fmt,vfprintf@fmt
  1064   0016CE  0E2C               	movlw	low sprintf@ap
  1065   0016D0  6E1E               	movwf	vfprintf@ap^0,c
  1066   0016D2  EC67  F00A         	call	_vfprintf	;wreg free
  1067   0016D6  C01C  F02A         	movff	?_vfprintf,sprintf@ret
  1068   0016DA  C01D  F02B         	movff	?_vfprintf+1,sprintf@ret+1
  1069   0016DE  5020               	movf	sprintf@s^0,w,c
  1070   0016E0  2430               	addwf	(sprintf@f+3)^0,w,c
  1071   0016E2  6ED9               	movwf	fsr2l,c
  1072   0016E4  6ADA               	clrf	fsr2h,c
  1073   0016E6  6ADF               	clrf	indf2,c
  1074   0016E8  C02A  F020         	movff	sprintf@ret,?_sprintf
  1075   0016EC  C02B  F021         	movff	sprintf@ret+1,?_sprintf+1
  1076   0016F0  0012               	return		;funcret
  1077   0016F2                     __end_of_sprintf:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _vfprintf *****************
  1081 ;; Defined at:
  1082 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  1085 ;;		 -> sprintf@f(12), 
  1086 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1087 ;;		 -> STR_4(3), STR_2(5), STR_1(14), 
  1088 ;;  ap              1   29[COMRAM] PTR PTR void 
  1089 ;;		 -> sprintf@ap(1), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  1092 ;;		 -> STR_4(3), STR_2(5), STR_1(14), 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2   27[COMRAM] int 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;Total ram usage:        4 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 5
  1109 ;; This function calls:
  1110 ;;		_vfpfcnvrt
  1111 ;; This function is called by:
  1112 ;;		_sprintf
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text2
  1117   0014CE                     __ptext2:
  1118                           	callstack 0
  1119   0014CE                     _vfprintf:
  1120                           	callstack 24
  1121   0014CE                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1123   0014CE  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  1124   0014D2                     
  1125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1126   0014D2  0E00               	movlw	0
  1127   0014D4  6E50               	movwf	(_nout+1)^0,c
  1128   0014D6  0E00               	movlw	0
  1129   0014D8  6E4F               	movwf	_nout^0,c
  1130                           
  1131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1132   0014DA  EF7B  F00A         	goto	l2400
  1133   0014DE                     l2398:
  1134                           
  1135                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1136   0014DE  C01C  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1137   0014E2  0E1F               	movlw	low vfprintf@cfmt
  1138   0014E4  6E10               	movwf	vfpfcnvrt@fmt^0,c
  1139   0014E6  C01E  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  1140   0014EA  EC0A  F007         	call	_vfpfcnvrt	;wreg free
  1141   0014EE  500F               	movf	?_vfpfcnvrt^0,w,c
  1142   0014F0  264F               	addwf	_nout^0,f,c
  1143   0014F2  5010               	movf	(?_vfpfcnvrt+1)^0,w,c
  1144   0014F4  2250               	addwfc	(_nout+1)^0,f,c
  1145   0014F6                     l2400:
  1146                           
  1147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1148   0014F6  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1149   0014FA                     	if	1	;There is more than 1 active tblptr byte
  1150   0014FA  0E0E               	movlw	high __smallconst
  1151   0014FC  6EF7               	movwf	tblptrh,c
  1152   0014FE                     	endif
  1153   0014FE                     	if	0	;tblptru may be non-zero
  1154   0014FE                     	endif
  1155   0014FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1156   0014FE  0E00               	movlw	low (__smallconst shr (0+16))
  1157   001500  6EF8               	movwf	tblptru,c
  1158   001502                     	endif
  1159   001502  0008               	tblrd		*
  1160   001504  50F5               	movf	tablat,w,c
  1161   001506  0900               	iorlw	0
  1162   001508  A4D8               	btfss	status,2,c
  1163   00150A  EF89  F00A         	goto	u1201
  1164   00150E  EF8B  F00A         	goto	u1200
  1165   001512                     u1201:
  1166   001512  EF6F  F00A         	goto	l2398
  1167   001516                     u1200:
  1168   001516                     
  1169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1170   001516  C04F  F01C         	movff	_nout,?_vfprintf
  1171   00151A  C050  F01D         	movff	_nout+1,?_vfprintf+1
  1172   00151E  0012               	return		;funcret
  1173   001520                     __end_of_vfprintf:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _vfpfcnvrt *****************
  1177 ;; Defined at:
  1178 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  1181 ;;		 -> sprintf@f(12), 
  1182 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  1183 ;;		 -> vfprintf@cfmt(1), 
  1184 ;;  ap              1   16[COMRAM] PTR PTR void 
  1185 ;;		 -> sprintf@ap(1), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  convarg         4   22[COMRAM] struct .
  1188 ;;  cnt             2   19[COMRAM] int 
  1189 ;;  c               1   26[COMRAM] unsigned char 
  1190 ;;  cp              1   21[COMRAM] PTR unsigned char 
  1191 ;;		 -> STR_4(3), STR_2(5), STR_1(14), 
  1192 ;;  done            1   18[COMRAM] _Bool 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2   14[COMRAM] int 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1202 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;Total ram usage:       13 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 4
  1209 ;; This function calls:
  1210 ;;		___awdiv
  1211 ;;		___awmod
  1212 ;;		_abs
  1213 ;;		_fputc
  1214 ;; This function is called by:
  1215 ;;		_vfprintf
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text3
  1220   000E14                     __ptext3:
  1221                           	callstack 0
  1222   000E14                     _vfpfcnvrt:
  1223                           	callstack 24
  1224   000E14                     
  1225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1226   000E14  0E00               	movlw	0
  1227   000E16  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1228   000E18  0E00               	movlw	0
  1229   000E1A  6E14               	movwf	vfpfcnvrt@cnt^0,c
  1230   000E1C                     
  1231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1232   000E1C  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1233   000E1E  6ED9               	movwf	fsr2l,c
  1234   000E20  6ADA               	clrf	fsr2h,c
  1235   000E22  CFDF FFF6          	movff	indf2,tblptrl
  1236   000E26                     	if	1	;There is more than 1 active tblptr byte
  1237   000E26  0E0E               	movlw	high __smallconst
  1238   000E28  6EF7               	movwf	tblptrh,c
  1239   000E2A                     	endif
  1240   000E2A                     	if	0	;tblptru may be non-zero
  1241   000E2A                     	endif
  1242   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1243   000E2A  0E00               	movlw	low (__smallconst shr (0+16))
  1244   000E2C  6EF8               	movwf	tblptru,c
  1245   000E2E                     	endif
  1246   000E2E  0008               	tblrd		*
  1247   000E30  50F5               	movf	tablat,w,c
  1248   000E32  0A25               	xorlw	37
  1249   000E34  A4D8               	btfss	status,2,c
  1250   000E36  EF1F  F007         	goto	u1071
  1251   000E3A  EF21  F007         	goto	u1070
  1252   000E3E                     u1071:
  1253   000E3E  EFF0  F007         	goto	l2336
  1254   000E42                     u1070:
  1255   000E42                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1257   000E42  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1258   000E44  6ED9               	movwf	fsr2l,c
  1259   000E46  6ADA               	clrf	fsr2h,c
  1260   000E48  2ADF               	incf	indf2,f,c
  1261   000E4A                     
  1262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1263   000E4A  0E00               	movlw	0
  1264   000E4C  6E52               	movwf	(_width+1)^0,c
  1265   000E4E  0E00               	movlw	0
  1266   000E50  6E51               	movwf	_width^0,c
  1267   000E52  C051  F055         	movff	_width,_flags
  1268   000E56                     
  1269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1270   000E56  6853               	setf	_prec^0,c
  1271   000E58  6854               	setf	(_prec+1)^0,c
  1272   000E5A                     
  1273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1274   000E5A  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1275   000E5C  6ED9               	movwf	fsr2l,c
  1276   000E5E  6ADA               	clrf	fsr2h,c
  1277   000E60  50DF               	movf	indf2,w,c
  1278   000E62  6E16               	movwf	vfpfcnvrt@cp^0,c
  1279   000E64                     
  1280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1281   000E64  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1282   000E68                     	if	1	;There is more than 1 active tblptr byte
  1283   000E68  0E0E               	movlw	high __smallconst
  1284   000E6A  6EF7               	movwf	tblptrh,c
  1285   000E6C                     	endif
  1286   000E6C                     	if	0	;tblptru may be non-zero
  1287   000E6C                     	endif
  1288   000E6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1289   000E6C  0E00               	movlw	low (__smallconst shr (0+16))
  1290   000E6E  6EF8               	movwf	tblptru,c
  1291   000E70                     	endif
  1292   000E70  0008               	tblrd		*
  1293   000E72  50F5               	movf	tablat,w,c
  1294   000E74  0A64               	xorlw	100
  1295   000E76  B4D8               	btfsc	status,2,c
  1296   000E78  EF40  F007         	goto	u1081
  1297   000E7C  EF42  F007         	goto	u1080
  1298   000E80                     u1081:
  1299   000E80  EF52  F007         	goto	l2300
  1300   000E84                     u1080:
  1301   000E84  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1302   000E88                     	if	1	;There is more than 1 active tblptr byte
  1303   000E88  0E0E               	movlw	high __smallconst
  1304   000E8A  6EF7               	movwf	tblptrh,c
  1305   000E8C                     	endif
  1306   000E8C                     	if	0	;tblptru may be non-zero
  1307   000E8C                     	endif
  1308   000E8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1309   000E8C  0E00               	movlw	low (__smallconst shr (0+16))
  1310   000E8E  6EF8               	movwf	tblptru,c
  1311   000E90                     	endif
  1312   000E90  0008               	tblrd		*
  1313   000E92  50F5               	movf	tablat,w,c
  1314   000E94  0A69               	xorlw	105
  1315   000E96  A4D8               	btfss	status,2,c
  1316   000E98  EF50  F007         	goto	u1091
  1317   000E9C  EF52  F007         	goto	u1090
  1318   000EA0                     u1091:
  1319   000EA0  EFE6  F007         	goto	l2330
  1320   000EA4                     u1090:
  1321   000EA4                     l2300:
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1324   000EA4  5011               	movf	vfpfcnvrt@ap^0,w,c
  1325   000EA6  6ED9               	movwf	fsr2l,c
  1326   000EA8  6ADA               	clrf	fsr2h,c
  1327   000EAA  0E02               	movlw	2
  1328   000EAC  26DF               	addwf	indf2,f,c
  1329   000EAE  5CDF               	subwf	indf2,w,c
  1330   000EB0  6ED9               	movwf	fsr2l,c
  1331   000EB2  6ADA               	clrf	fsr2h,c
  1332   000EB4  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  1333   000EB8  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  1334   000EBC                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1336   000EBC  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1337   000EBE  6ED9               	movwf	fsr2l,c
  1338   000EC0  6ADA               	clrf	fsr2h,c
  1339   000EC2  2816               	incf	vfpfcnvrt@cp^0,w,c
  1340   000EC4  6EDF               	movwf	indf2,c
  1341   000EC6                     
  1342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1343   000EC6  0E20               	movlw	32
  1344   000EC8  6E1B               	movwf	vfpfcnvrt@c^0,c
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1347   000ECA  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1348   000ECC  EF6A  F007         	goto	u1101
  1349   000ED0  EF6D  F007         	goto	u1100
  1350   000ED4                     u1101:
  1351   000ED4  0E01               	movlw	1
  1352   000ED6  EF6E  F007         	goto	u1110
  1353   000EDA                     u1100:
  1354   000EDA  0E00               	movlw	0
  1355   000EDC                     u1110:
  1356   000EDC  6E13               	movwf	vfpfcnvrt@done^0,c
  1357   000EDE                     l2306:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1360   000EDE  061B               	decf	vfpfcnvrt@c^0,f,c
  1361   000EE0  0E3C               	movlw	low _dbuf
  1362   000EE2  241B               	addwf	vfpfcnvrt@c^0,w,c
  1363   000EE4  6ED9               	movwf	fsr2l,c
  1364   000EE6  6ADA               	clrf	fsr2h,c
  1365   000EE8  0E01               	movlw	high _dbuf
  1366   000EEA  22DA               	addwfc	fsr2h,f,c
  1367   000EEC  C017  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1368   000EF0  C018  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1369   000EF4  0E00               	movlw	0
  1370   000EF6  6E08               	movwf	(___awmod@divisor+1)^0,c
  1371   000EF8  0E0A               	movlw	10
  1372   000EFA  6E07               	movwf	___awmod@divisor^0,c
  1373   000EFC  EC10  F009         	call	___awmod	;wreg free
  1374   000F00  C005  F00B         	movff	?___awmod,abs@a
  1375   000F04  C006  F00C         	movff	?___awmod+1,abs@a+1
  1376   000F08  ECB9  F00B         	call	_abs	;wreg free
  1377   000F0C  500B               	movf	?_abs^0,w,c
  1378   000F0E  0F30               	addlw	48
  1379   000F10  6EDF               	movwf	indf2,c
  1380   000F12                     
  1381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1382   000F12  C017  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1383   000F16  C018  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1384   000F1A  0E00               	movlw	0
  1385   000F1C  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1386   000F1E  0E0A               	movlw	10
  1387   000F20  6E07               	movwf	___awdiv@divisor^0,c
  1388   000F22  ECAE  F008         	call	___awdiv	;wreg free
  1389   000F26  C005  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  1390   000F2A  C006  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1391   000F2E                     
  1392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1393   000F2E  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1394   000F30  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1395   000F32                     
  1396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1397   000F32  5017               	movf	vfpfcnvrt@convarg^0,w,c
  1398   000F34  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1399   000F36  B4D8               	btfsc	status,2,c
  1400   000F38  EFA0  F007         	goto	u1121
  1401   000F3C  EFA2  F007         	goto	u1120
  1402   000F40                     u1121:
  1403   000F40  EFAA  F007         	goto	l2316
  1404   000F44                     u1120:
  1405   000F44  501B               	movf	vfpfcnvrt@c^0,w,c
  1406   000F46  A4D8               	btfss	status,2,c
  1407   000F48  EFA8  F007         	goto	u1131
  1408   000F4C  EFAA  F007         	goto	u1130
  1409   000F50                     u1131:
  1410   000F50  EF6F  F007         	goto	l2306
  1411   000F54                     u1130:
  1412   000F54                     l2316:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1415   000F54  501B               	movf	vfpfcnvrt@c^0,w,c
  1416   000F56  B4D8               	btfsc	status,2,c
  1417   000F58  EFB0  F007         	goto	u1141
  1418   000F5C  EFB2  F007         	goto	u1140
  1419   000F60                     u1141:
  1420   000F60  EFD7  F007         	goto	l2328
  1421   000F64                     u1140:
  1422   000F64  5013               	movf	vfpfcnvrt@done^0,w,c
  1423   000F66  B4D8               	btfsc	status,2,c
  1424   000F68  EFB8  F007         	goto	u1151
  1425   000F6C  EFBA  F007         	goto	u1150
  1426   000F70                     u1151:
  1427   000F70  EFD7  F007         	goto	l2328
  1428   000F74                     u1150:
  1429   000F74                     
  1430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1431   000F74  061B               	decf	vfpfcnvrt@c^0,f,c
  1432   000F76  0E3C               	movlw	low _dbuf
  1433   000F78  241B               	addwf	vfpfcnvrt@c^0,w,c
  1434   000F7A  6ED9               	movwf	fsr2l,c
  1435   000F7C  6ADA               	clrf	fsr2h,c
  1436   000F7E  0E01               	movlw	high _dbuf
  1437   000F80  22DA               	addwfc	fsr2h,f,c
  1438   000F82  0E2D               	movlw	45
  1439   000F84  6EDF               	movwf	indf2,c
  1440   000F86                     
  1441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1442   000F86  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1443   000F88  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1444   000F8A  EFD7  F007         	goto	l2328
  1445   000F8E                     l2324:
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1448   000F8E  0E3C               	movlw	low _dbuf
  1449   000F90  241B               	addwf	vfpfcnvrt@c^0,w,c
  1450   000F92  6ED9               	movwf	fsr2l,c
  1451   000F94  6ADA               	clrf	fsr2h,c
  1452   000F96  0E01               	movlw	high _dbuf
  1453   000F98  22DA               	addwfc	fsr2h,f,c
  1454   000F9A  50DF               	movf	indf2,w,c
  1455   000F9C  6E12               	movwf	??_vfpfcnvrt^0,c
  1456   000F9E  5012               	movf	??_vfpfcnvrt^0,w,c
  1457   000FA0  6E05               	movwf	fputc@c^0,c
  1458   000FA2  6A06               	clrf	(fputc@c+1)^0,c
  1459   000FA4  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1460   000FA8  EC68  F009         	call	_fputc	;wreg free
  1461   000FAC  2A1B               	incf	vfpfcnvrt@c^0,f,c
  1462   000FAE                     l2328:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1465   000FAE  0E20               	movlw	32
  1466   000FB0  181B               	xorwf	vfpfcnvrt@c^0,w,c
  1467   000FB2  A4D8               	btfss	status,2,c
  1468   000FB4  EFDE  F007         	goto	u1161
  1469   000FB8  EFE0  F007         	goto	u1160
  1470   000FBC                     u1161:
  1471   000FBC  EFC7  F007         	goto	l2324
  1472   000FC0                     u1160:
  1473   000FC0                     
  1474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1475   000FC0  C014  F00F         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1476   000FC4  C015  F010         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1477   000FC8  EF09  F008         	goto	l1348
  1478   000FCC                     l2330:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1481   000FCC  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1482   000FCE  6ED9               	movwf	fsr2l,c
  1483   000FD0  6ADA               	clrf	fsr2h,c
  1484   000FD2  2ADF               	incf	indf2,f,c
  1485   000FD4                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1487   000FD4  0E00               	movlw	0
  1488   000FD6  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1489   000FD8  0E00               	movlw	0
  1490   000FDA  6E0F               	movwf	?_vfpfcnvrt^0,c
  1491   000FDC  EF09  F008         	goto	l1348
  1492   000FE0                     l2336:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1495   000FE0  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1496   000FE2  6ED9               	movwf	fsr2l,c
  1497   000FE4  6ADA               	clrf	fsr2h,c
  1498   000FE6  CFDF FFF6          	movff	indf2,tblptrl
  1499   000FEA                     	if	1	;There is more than 1 active tblptr byte
  1500   000FEA  0E0E               	movlw	high __smallconst
  1501   000FEC  6EF7               	movwf	tblptrh,c
  1502   000FEE                     	endif
  1503   000FEE                     	if	0	;tblptru may be non-zero
  1504   000FEE                     	endif
  1505   000FEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1506   000FEE  0E00               	movlw	low (__smallconst shr (0+16))
  1507   000FF0  6EF8               	movwf	tblptru,c
  1508   000FF2                     	endif
  1509   000FF2  0008               	tblrd		*
  1510   000FF4  50F5               	movf	tablat,w,c
  1511   000FF6  6E05               	movwf	fputc@c^0,c
  1512   000FF8  6A06               	clrf	(fputc@c+1)^0,c
  1513   000FFA  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1514   000FFE  EC68  F009         	call	_fputc	;wreg free
  1515   001002                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1517   001002  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1518   001004  6ED9               	movwf	fsr2l,c
  1519   001006  6ADA               	clrf	fsr2h,c
  1520   001008  2ADF               	incf	indf2,f,c
  1521   00100A                     
  1522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1523   00100A  0E00               	movlw	0
  1524   00100C  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1525   00100E  0E01               	movlw	1
  1526   001010  6E0F               	movwf	?_vfpfcnvrt^0,c
  1527   001012                     l1348:
  1528   001012  0012               	return		;funcret
  1529   001014                     __end_of_vfpfcnvrt:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _fputc *****************
  1533 ;; Defined at:
  1534 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  c               2    4[COMRAM] int 
  1537 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1538 ;;		 -> sprintf@f(12), 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2    4[COMRAM] int 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1552 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;Total ram usage:        8 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 3
  1557 ;; This function calls:
  1558 ;;		_putch
  1559 ;; This function is called by:
  1560 ;;		_vfpfcnvrt
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text4
  1565   0012D0                     __ptext4:
  1566                           	callstack 0
  1567   0012D0                     _fputc:
  1568                           	callstack 24
  1569   0012D0  5007               	movf	fputc@fp^0,w,c
  1570   0012D2  B4D8               	btfsc	status,2,c
  1571   0012D4  EF6E  F009         	goto	u1001
  1572   0012D8  EF70  F009         	goto	u1000
  1573   0012DC                     u1001:
  1574   0012DC  EF78  F009         	goto	l2240
  1575   0012E0                     u1000:
  1576   0012E0  5007               	movf	fputc@fp^0,w,c
  1577   0012E2  A4D8               	btfss	status,2,c
  1578   0012E4  EF76  F009         	goto	u1011
  1579   0012E8  EF78  F009         	goto	u1010
  1580   0012EC                     u1011:
  1581   0012EC  EF7D  F009         	goto	l2242
  1582   0012F0                     u1010:
  1583   0012F0                     l2240:
  1584   0012F0  5005               	movf	fputc@c^0,w,c
  1585   0012F2  ECE3  F00C         	call	_putch
  1586   0012F6  EFBC  F009         	goto	l1373
  1587   0012FA                     l2242:
  1588   0012FA  5007               	movf	fputc@fp^0,w,c
  1589   0012FC  6ED9               	movwf	fsr2l,c
  1590   0012FE  6ADA               	clrf	fsr2h,c
  1591   001300  0E0A               	movlw	10
  1592   001302  26D9               	addwf	fsr2l,f,c
  1593   001304  50DE               	movf	postinc2,w,c
  1594   001306  10DE               	iorwf	postinc2,w,c
  1595   001308  B4D8               	btfsc	status,2,c
  1596   00130A  EF89  F009         	goto	u1021
  1597   00130E  EF8B  F009         	goto	u1020
  1598   001312                     u1021:
  1599   001312  EFA4  F009         	goto	l2246
  1600   001316                     u1020:
  1601   001316  5007               	movf	fputc@fp^0,w,c
  1602   001318  6ED9               	movwf	fsr2l,c
  1603   00131A  6ADA               	clrf	fsr2h,c
  1604   00131C  0E0A               	movlw	10
  1605   00131E  26D9               	addwf	fsr2l,f,c
  1606   001320  5007               	movf	fputc@fp^0,w,c
  1607   001322  6EE1               	movwf	fsr1l,c
  1608   001324  6AE2               	clrf	fsr1h,c
  1609   001326  0E03               	movlw	3
  1610   001328  26E1               	addwf	fsr1l,f,c
  1611   00132A  50DE               	movf	postinc2,w,c
  1612   00132C  5CE6               	subwf	postinc1,w,c
  1613   00132E  50E6               	movf	postinc1,w,c
  1614   001330  0A80               	xorlw	128
  1615   001332  6E0C               	movwf	(??_fputc+4)^0,c
  1616   001334  50DE               	movf	postinc2,w,c
  1617   001336  0A80               	xorlw	128
  1618   001338  580C               	subwfb	(??_fputc+4)^0,w,c
  1619   00133A  B0D8               	btfsc	status,0,c
  1620   00133C  EFA2  F009         	goto	u1031
  1621   001340  EFA4  F009         	goto	u1030
  1622   001344                     u1031:
  1623   001344  EFBC  F009         	goto	l1373
  1624   001348                     u1030:
  1625   001348                     l2246:
  1626   001348  5007               	movf	fputc@fp^0,w,c
  1627   00134A  6ED9               	movwf	fsr2l,c
  1628   00134C  6ADA               	clrf	fsr2h,c
  1629   00134E  0E03               	movlw	3
  1630   001350  26D9               	addwf	fsr2l,f,c
  1631   001352  50DF               	movf	indf2,w,c
  1632   001354  6E08               	movwf	??_fputc^0,c
  1633   001356  5007               	movf	fputc@fp^0,w,c
  1634   001358  6ED9               	movwf	fsr2l,c
  1635   00135A  6ADA               	clrf	fsr2h,c
  1636   00135C  50DF               	movf	indf2,w,c
  1637   00135E  2408               	addwf	??_fputc^0,w,c
  1638   001360  6ED9               	movwf	fsr2l,c
  1639   001362  6ADA               	clrf	fsr2h,c
  1640   001364  C005  FFDF         	movff	fputc@c,indf2
  1641   001368  5007               	movf	fputc@fp^0,w,c
  1642   00136A  6ED9               	movwf	fsr2l,c
  1643   00136C  6ADA               	clrf	fsr2h,c
  1644   00136E  0E03               	movlw	3
  1645   001370  26D9               	addwf	fsr2l,f,c
  1646   001372  2ADE               	incf	postinc2,f,c
  1647   001374  0E00               	movlw	0
  1648   001376  22DD               	addwfc	postdec2,f,c
  1649   001378                     l1373:
  1650   001378  0012               	return		;funcret
  1651   00137A                     __end_of_fputc:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function _putch *****************
  1655 ;; Defined at:
  1656 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  c               1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  c               1    0[COMRAM] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 2
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_fputc
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text5
  1685   0019C6                     __ptext5:
  1686                           	callstack 0
  1687   0019C6                     _putch:
  1688                           	callstack 24
  1689   0019C6  0012               	return		;funcret
  1690   0019C8                     __end_of_putch:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _abs *****************
  1694 ;; Defined at:
  1695 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  a               2   10[COMRAM] int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2   10[COMRAM] int 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;Total ram usage:        4 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_vfpfcnvrt
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text6
  1724   001772                     __ptext6:
  1725                           	callstack 0
  1726   001772                     _abs:
  1727                           	callstack 25
  1728   001772  BE0C               	btfsc	(abs@a+1)^0,7,c
  1729   001774  EFBE  F00B         	goto	u1041
  1730   001778  EFC0  F00B         	goto	u1040
  1731   00177C                     u1041:
  1732   00177C  EFC6  F00B         	goto	l1358
  1733   001780                     u1040:
  1734   001780  C00B  F00B         	movff	abs@a,?_abs
  1735   001784  C00C  F00C         	movff	abs@a+1,?_abs+1
  1736   001788  EFD2  F00B         	goto	l1361
  1737   00178C                     l1358:
  1738   00178C  C00B  F00D         	movff	abs@a,??_abs
  1739   001790  C00C  F00E         	movff	abs@a+1,??_abs+1
  1740   001794  1E0D               	comf	??_abs^0,f,c
  1741   001796  1E0E               	comf	(??_abs+1)^0,f,c
  1742   001798  4A0D               	infsnz	??_abs^0,f,c
  1743   00179A  2A0E               	incf	(??_abs+1)^0,f,c
  1744   00179C  C00D  F00B         	movff	??_abs,?_abs
  1745   0017A0  C00E  F00C         	movff	??_abs+1,?_abs+1
  1746   0017A4                     l1361:
  1747   0017A4  0012               	return		;funcret
  1748   0017A6                     __end_of_abs:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function ___awmod *****************
  1752 ;; Defined at:
  1753 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  dividend        2    4[COMRAM] int 
  1756 ;;  divisor         2    6[COMRAM] int 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  sign            1    9[COMRAM] unsigned char 
  1759 ;;  counter         1    8[COMRAM] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2    4[COMRAM] int 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;Total ram usage:        6 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 2
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_vfpfcnvrt
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text7
  1784   001220                     __ptext7:
  1785                           	callstack 0
  1786   001220                     ___awmod:
  1787                           	callstack 25
  1788   001220  0E00               	movlw	0
  1789   001222  6E0A               	movwf	___awmod@sign^0,c
  1790   001224  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1791   001226  EF19  F009         	goto	u940
  1792   00122A  EF17  F009         	goto	u941
  1793   00122E                     u941:
  1794   00122E  EF1F  F009         	goto	l2208
  1795   001232                     u940:
  1796   001232  6C05               	negf	___awmod@dividend^0,c
  1797   001234  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1798   001236  B0D8               	btfsc	status,0,c
  1799   001238  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1800   00123A  0E01               	movlw	1
  1801   00123C  6E0A               	movwf	___awmod@sign^0,c
  1802   00123E                     l2208:
  1803   00123E  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1804   001240  EF26  F009         	goto	u950
  1805   001244  EF24  F009         	goto	u951
  1806   001248                     u951:
  1807   001248  EF2A  F009         	goto	l2212
  1808   00124C                     u950:
  1809   00124C  6C07               	negf	___awmod@divisor^0,c
  1810   00124E  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1811   001250  B0D8               	btfsc	status,0,c
  1812   001252  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1813   001254                     l2212:
  1814   001254  5007               	movf	___awmod@divisor^0,w,c
  1815   001256  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1816   001258  B4D8               	btfsc	status,2,c
  1817   00125A  EF31  F009         	goto	u961
  1818   00125E  EF33  F009         	goto	u960
  1819   001262                     u961:
  1820   001262  EF57  F009         	goto	l2228
  1821   001266                     u960:
  1822   001266  0E01               	movlw	1
  1823   001268  6E09               	movwf	___awmod@counter^0,c
  1824   00126A  EF3B  F009         	goto	l2218
  1825   00126E                     l2216:
  1826   00126E  90D8               	bcf	status,0,c
  1827   001270  3607               	rlcf	___awmod@divisor^0,f,c
  1828   001272  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1829   001274  2A09               	incf	___awmod@counter^0,f,c
  1830   001276                     l2218:
  1831   001276  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1832   001278  EF40  F009         	goto	u971
  1833   00127C  EF42  F009         	goto	u970
  1834   001280                     u971:
  1835   001280  EF37  F009         	goto	l2216
  1836   001284                     u970:
  1837   001284                     l2220:
  1838   001284  5007               	movf	___awmod@divisor^0,w,c
  1839   001286  5C05               	subwf	___awmod@dividend^0,w,c
  1840   001288  5008               	movf	(___awmod@divisor+1)^0,w,c
  1841   00128A  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  1842   00128C  A0D8               	btfss	status,0,c
  1843   00128E  EF4B  F009         	goto	u981
  1844   001292  EF4D  F009         	goto	u980
  1845   001296                     u981:
  1846   001296  EF51  F009         	goto	l2224
  1847   00129A                     u980:
  1848   00129A  5007               	movf	___awmod@divisor^0,w,c
  1849   00129C  5E05               	subwf	___awmod@dividend^0,f,c
  1850   00129E  5008               	movf	(___awmod@divisor+1)^0,w,c
  1851   0012A0  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  1852   0012A2                     l2224:
  1853   0012A2  90D8               	bcf	status,0,c
  1854   0012A4  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  1855   0012A6  3207               	rrcf	___awmod@divisor^0,f,c
  1856   0012A8  2E09               	decfsz	___awmod@counter^0,f,c
  1857   0012AA  EF42  F009         	goto	l2220
  1858   0012AE                     l2228:
  1859   0012AE  500A               	movf	___awmod@sign^0,w,c
  1860   0012B0  B4D8               	btfsc	status,2,c
  1861   0012B2  EF5D  F009         	goto	u991
  1862   0012B6  EF5F  F009         	goto	u990
  1863   0012BA                     u991:
  1864   0012BA  EF63  F009         	goto	l2232
  1865   0012BE                     u990:
  1866   0012BE  6C05               	negf	___awmod@dividend^0,c
  1867   0012C0  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1868   0012C2  B0D8               	btfsc	status,0,c
  1869   0012C4  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1870   0012C6                     l2232:
  1871   0012C6  C005  F005         	movff	___awmod@dividend,?___awmod
  1872   0012CA  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  1873   0012CE  0012               	return		;funcret
  1874   0012D0                     __end_of___awmod:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function ___awdiv *****************
  1878 ;; Defined at:
  1879 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  dividend        2    4[COMRAM] int 
  1882 ;;  divisor         2    6[COMRAM] int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  quotient        2   10[COMRAM] int 
  1885 ;;  sign            1    9[COMRAM] unsigned char 
  1886 ;;  counter         1    8[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2    4[COMRAM] int 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;Total ram usage:        8 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 2
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_vfpfcnvrt
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text8
  1911   00115C                     __ptext8:
  1912                           	callstack 0
  1913   00115C                     ___awdiv:
  1914                           	callstack 25
  1915   00115C  0E00               	movlw	0
  1916   00115E  6E0A               	movwf	___awdiv@sign^0,c
  1917   001160  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1918   001162  EFB7  F008         	goto	u880
  1919   001166  EFB5  F008         	goto	u881
  1920   00116A                     u881:
  1921   00116A  EFBD  F008         	goto	l2164
  1922   00116E                     u880:
  1923   00116E  6C07               	negf	___awdiv@divisor^0,c
  1924   001170  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1925   001172  B0D8               	btfsc	status,0,c
  1926   001174  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1927   001176  0E01               	movlw	1
  1928   001178  6E0A               	movwf	___awdiv@sign^0,c
  1929   00117A                     l2164:
  1930   00117A  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1931   00117C  EFC4  F008         	goto	u890
  1932   001180  EFC2  F008         	goto	u891
  1933   001184                     u891:
  1934   001184  EFCA  F008         	goto	l2170
  1935   001188                     u890:
  1936   001188  6C05               	negf	___awdiv@dividend^0,c
  1937   00118A  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1938   00118C  B0D8               	btfsc	status,0,c
  1939   00118E  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1940   001190  0E01               	movlw	1
  1941   001192  1A0A               	xorwf	___awdiv@sign^0,f,c
  1942   001194                     l2170:
  1943   001194  0E00               	movlw	0
  1944   001196  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1945   001198  0E00               	movlw	0
  1946   00119A  6E0B               	movwf	___awdiv@quotient^0,c
  1947   00119C  5007               	movf	___awdiv@divisor^0,w,c
  1948   00119E  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1949   0011A0  B4D8               	btfsc	status,2,c
  1950   0011A2  EFD5  F008         	goto	u901
  1951   0011A6  EFD7  F008         	goto	u900
  1952   0011AA                     u901:
  1953   0011AA  EFFF  F008         	goto	l2192
  1954   0011AE                     u900:
  1955   0011AE  0E01               	movlw	1
  1956   0011B0  6E09               	movwf	___awdiv@counter^0,c
  1957   0011B2  EFDF  F008         	goto	l2178
  1958   0011B6                     l2176:
  1959   0011B6  90D8               	bcf	status,0,c
  1960   0011B8  3607               	rlcf	___awdiv@divisor^0,f,c
  1961   0011BA  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1962   0011BC  2A09               	incf	___awdiv@counter^0,f,c
  1963   0011BE                     l2178:
  1964   0011BE  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1965   0011C0  EFE4  F008         	goto	u911
  1966   0011C4  EFE6  F008         	goto	u910
  1967   0011C8                     u911:
  1968   0011C8  EFDB  F008         	goto	l2176
  1969   0011CC                     u910:
  1970   0011CC                     l2180:
  1971   0011CC  90D8               	bcf	status,0,c
  1972   0011CE  360B               	rlcf	___awdiv@quotient^0,f,c
  1973   0011D0  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1974   0011D2  5007               	movf	___awdiv@divisor^0,w,c
  1975   0011D4  5C05               	subwf	___awdiv@dividend^0,w,c
  1976   0011D6  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1977   0011D8  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1978   0011DA  A0D8               	btfss	status,0,c
  1979   0011DC  EFF2  F008         	goto	u921
  1980   0011E0  EFF4  F008         	goto	u920
  1981   0011E4                     u921:
  1982   0011E4  EFF9  F008         	goto	l2188
  1983   0011E8                     u920:
  1984   0011E8  5007               	movf	___awdiv@divisor^0,w,c
  1985   0011EA  5E05               	subwf	___awdiv@dividend^0,f,c
  1986   0011EC  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1987   0011EE  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1988   0011F0  800B               	bsf	___awdiv@quotient^0,0,c
  1989   0011F2                     l2188:
  1990   0011F2  90D8               	bcf	status,0,c
  1991   0011F4  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1992   0011F6  3207               	rrcf	___awdiv@divisor^0,f,c
  1993   0011F8  2E09               	decfsz	___awdiv@counter^0,f,c
  1994   0011FA  EFE6  F008         	goto	l2180
  1995   0011FE                     l2192:
  1996   0011FE  500A               	movf	___awdiv@sign^0,w,c
  1997   001200  B4D8               	btfsc	status,2,c
  1998   001202  EF05  F009         	goto	u931
  1999   001206  EF07  F009         	goto	u930
  2000   00120A                     u931:
  2001   00120A  EF0B  F009         	goto	l2196
  2002   00120E                     u930:
  2003   00120E  6C0B               	negf	___awdiv@quotient^0,c
  2004   001210  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2005   001212  B0D8               	btfsc	status,0,c
  2006   001214  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2007   001216                     l2196:
  2008   001216  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2009   00121A  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2010   00121E  0012               	return		;funcret
  2011   001220                     __end_of___awdiv:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _sendTxBuf *****************
  2015 ;; Defined at:
  2016 ;;		line 114 in file "serial.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 3
  2037 ;; This function calls:
  2038 ;;		_isDataInTxBuf
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text9
  2045   001930                     __ptext9:
  2046                           	callstack 0
  2047   001930                     _sendTxBuf:
  2048                           	callstack 27
  2049   001930                     
  2050                           ;serial.c: 115:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  2051   001930  ECA5  F00C         	call	_isDataInTxBuf	;wreg free
  2052   001934  0900               	iorlw	0
  2053   001936  B4D8               	btfsc	status,2,c
  2054   001938  EFA0  F00C         	goto	u1221
  2055   00193C  EFA2  F00C         	goto	u1220
  2056   001940                     u1221:
  2057   001940  EFA4  F00C         	goto	l452
  2058   001944                     u1220:
  2059   001944  010E               	movlb	14	; () banked
  2060   001946  852D               	bsf	45,2,b	;volatile
  2061   001948                     l452:
  2062   001948  0012               	return		;funcret
  2063   00194A                     __end_of_sendTxBuf:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _isDataInTxBuf *****************
  2067 ;; Defined at:
  2068 ;;		line 100 in file "serial.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 2
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_sendTxBuf
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text10
  2097   00194A                     __ptext10:
  2098                           	callstack 0
  2099   00194A                     _isDataInTxBuf:
  2100                           	callstack 27
  2101   00194A                     
  2102                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  2103   00194A  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  2104   00194C  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2105   00194E  A4D8               	btfss	status,2,c
  2106   001950  EFAC  F00C         	goto	u1181
  2107   001954  EFAF  F00C         	goto	u1180
  2108   001958                     u1181:
  2109   001958  0E01               	movlw	1
  2110   00195A  EFB0  F00C         	goto	u1190
  2111   00195E                     u1180:
  2112   00195E  0E00               	movlw	0
  2113   001960                     u1190:
  2114   001960  0012               	return		;funcret
  2115   001962                     __end_of_isDataInTxBuf:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _initUSART4 *****************
  2119 ;; Defined at:
  2120 ;;		line 5 in file "serial.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 2
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text11
  2149   001912                     __ptext11:
  2150                           	callstack 0
  2151   001912                     _initUSART4:
  2152                           	callstack 28
  2153   001912                     
  2154                           ;serial.c: 9:     RC0PPS = 0x12;
  2155   001912  0E12               	movlw	18
  2156   001914  010E               	movlb	14	; () banked
  2157   001916  6F62               	movwf	98,b	;volatile
  2158                           
  2159                           ;serial.c: 10:     RX4PPS = 0x11;
  2160   001918  0E11               	movlw	17
  2161   00191A  6F15               	movwf	21,b	;volatile
  2162   00191C                     
  2163                           ; BSR set to: 14
  2164                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2165   00191C  97E9               	bcf	233,3,b	;volatile
  2166   00191E                     
  2167                           ; BSR set to: 14
  2168                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2169   00191E  95E8               	bcf	232,2,b	;volatile
  2170                           
  2171                           ;serial.c: 14:     SP4BRGL = 51;
  2172   001920  0E33               	movlw	51
  2173   001922  6FE5               	movwf	229,b	;volatile
  2174                           
  2175                           ;serial.c: 15:     SP4BRGH = 0;
  2176   001924  0E00               	movlw	0
  2177   001926  6FE6               	movwf	230,b	;volatile
  2178   001928                     
  2179                           ; BSR set to: 14
  2180                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2181   001928  89E7               	bsf	231,4,b	;volatile
  2182   00192A                     
  2183                           ; BSR set to: 14
  2184                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2185   00192A  8BE8               	bsf	232,5,b	;volatile
  2186   00192C                     
  2187                           ; BSR set to: 14
  2188                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2189   00192C  8FE7               	bsf	231,7,b	;volatile
  2190   00192E                     
  2191                           ; BSR set to: 14
  2192   00192E  0012               	return		;funcret
  2193   001930                     __end_of_initUSART4:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function _initDCmotorsPWM *****************
  2197 ;; Defined at:
  2198 ;;		line 5 in file "dc_motor.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;Total ram usage:        2 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 2
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text12
  2227   00137A                     __ptext12:
  2228                           	callstack 0
  2229   00137A                     _initDCmotorsPWM:
  2230                           	callstack 28
  2231   00137A                     
  2232                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2233   00137A  9485               	bcf	133,2,c	;volatile
  2234                           
  2235                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2236   00137C  9885               	bcf	133,4,c	;volatile
  2237                           
  2238                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2239   00137E  9E83               	bcf	131,7,c	;volatile
  2240                           
  2241                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2242   001380  9C87               	bcf	135,6,c	;volatile
  2243                           
  2244                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2245   001382  947D               	bcf	125,2,c	;volatile
  2246                           
  2247                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2248   001384  987D               	bcf	125,4,c	;volatile
  2249                           
  2250                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2251   001386  9E7B               	bcf	123,7,c	;volatile
  2252                           
  2253                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2254   001388  9C7F               	bcf	127,6,c	;volatile
  2255   00138A                     
  2256                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2257   00138A  0E05               	movlw	5
  2258   00138C  010E               	movlb	14	; () banked
  2259   00138E  6F74               	movwf	116,b	;volatile
  2260                           
  2261                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2262   001390  0E06               	movlw	6
  2263   001392  6F76               	movwf	118,b	;volatile
  2264                           
  2265                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2266   001394  0E07               	movlw	7
  2267   001396  6F69               	movwf	105,b	;volatile
  2268                           
  2269                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2270   001398  0E08               	movlw	8
  2271   00139A  6F88               	movwf	136,b	;volatile
  2272                           
  2273                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2274   00139C  50BD               	movf	189,w,c	;volatile
  2275   00139E  0B8F               	andlw	-113
  2276   0013A0  0940               	iorlw	64
  2277   0013A2  6EBD               	movwf	189,c	;volatile
  2278                           
  2279                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2280   0013A4  0EE0               	movlw	-32
  2281   0013A6  16BE               	andwf	190,f,c	;volatile
  2282                           
  2283                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2284   0013A8  50BF               	movf	191,w,c	;volatile
  2285   0013AA  0BF0               	andlw	-16
  2286   0013AC  0901               	iorlw	1
  2287   0013AE  6EBF               	movwf	191,c	;volatile
  2288   0013B0                     
  2289                           ; BSR set to: 14
  2290                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2291   0013B0  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2292   0013B4                     
  2293                           ; BSR set to: 14
  2294                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2295   0013B4  8EBD               	bsf	189,7,c	;volatile
  2296                           
  2297                           ;dc_motor.c: 35:     CCPR1H=0;
  2298   0013B6  0E00               	movlw	0
  2299   0013B8  6EAA               	movwf	170,c	;volatile
  2300                           
  2301                           ;dc_motor.c: 36:     CCPR2H=0;
  2302   0013BA  0E00               	movlw	0
  2303   0013BC  6EA6               	movwf	166,c	;volatile
  2304                           
  2305                           ;dc_motor.c: 37:     CCPR3H=0;
  2306   0013BE  0E00               	movlw	0
  2307   0013C0  010F               	movlb	15	; () banked
  2308   0013C2  6F25               	movwf	37,b	;volatile
  2309                           
  2310                           ;dc_motor.c: 38:     CCPR4H=0;
  2311   0013C4  0E00               	movlw	0
  2312   0013C6  6F21               	movwf	33,b	;volatile
  2313                           
  2314                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2315   0013C8  0EFC               	movlw	-4
  2316   0013CA  16AD               	andwf	173,f,c	;volatile
  2317                           
  2318                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2319   0013CC  0EF3               	movlw	-13
  2320   0013CE  16AD               	andwf	173,f,c	;volatile
  2321                           
  2322                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2323   0013D0  0ECF               	movlw	-49
  2324   0013D2  16AD               	andwf	173,f,c	;volatile
  2325                           
  2326                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2327   0013D4  0E3F               	movlw	-193
  2328   0013D6  16AD               	andwf	173,f,c	;volatile
  2329   0013D8                     
  2330                           ; BSR set to: 15
  2331                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2332   0013D8  88AB               	bsf	171,4,c	;volatile
  2333                           
  2334                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2335   0013DA  50AB               	movf	171,w,c	;volatile
  2336   0013DC  0BF0               	andlw	-16
  2337   0013DE  090C               	iorlw	12
  2338   0013E0  6EAB               	movwf	171,c	;volatile
  2339   0013E2                     
  2340                           ; BSR set to: 15
  2341                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2342   0013E2  8EAB               	bsf	171,7,c	;volatile
  2343   0013E4                     
  2344                           ; BSR set to: 15
  2345                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2346   0013E4  88A7               	bsf	167,4,c	;volatile
  2347                           
  2348                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2349   0013E6  50A7               	movf	167,w,c	;volatile
  2350   0013E8  0BF0               	andlw	-16
  2351   0013EA  090C               	iorlw	12
  2352   0013EC  6EA7               	movwf	167,c	;volatile
  2353   0013EE                     
  2354                           ; BSR set to: 15
  2355                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2356   0013EE  8EA7               	bsf	167,7,c	;volatile
  2357   0013F0                     
  2358                           ; BSR set to: 15
  2359                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2360   0013F0  8926               	bsf	38,4,b	;volatile
  2361                           
  2362                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2363   0013F2  5126               	movf	38,w,b	;volatile
  2364   0013F4  0BF0               	andlw	-16
  2365   0013F6  090C               	iorlw	12
  2366   0013F8  6F26               	movwf	38,b	;volatile
  2367   0013FA                     
  2368                           ; BSR set to: 15
  2369                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2370   0013FA  8F26               	bsf	38,7,b	;volatile
  2371   0013FC                     
  2372                           ; BSR set to: 15
  2373                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2374   0013FC  8922               	bsf	34,4,b	;volatile
  2375                           
  2376                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2377   0013FE  5122               	movf	34,w,b	;volatile
  2378   001400  0BF0               	andlw	-16
  2379   001402  090C               	iorlw	12
  2380   001404  6F22               	movwf	34,b	;volatile
  2381   001406                     
  2382                           ; BSR set to: 15
  2383                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2384   001406  8F22               	bsf	34,7,b	;volatile
  2385   001408                     
  2386                           ; BSR set to: 15
  2387   001408  0012               	return		;funcret
  2388   00140A                     __end_of_initDCmotorsPWM:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _getRGBCval *****************
  2392 ;; Defined at:
  2393 ;;		line 85 in file "color.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  p               1   15[COMRAM] PTR struct RGBC_val
  2396 ;;		 -> main@read_val(8), 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;Total ram usage:        1 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 5
  2415 ;; This function calls:
  2416 ;;		_color_read_Blue
  2417 ;;		_color_read_Clear
  2418 ;;		_color_read_Green
  2419 ;;		_color_read_Red
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text13
  2426   001478                     __ptext13:
  2427                           	callstack 0
  2428   001478                     _getRGBCval:
  2429                           	callstack 25
  2430   001478                     
  2431                           ;color.c: 85: void getRGBCval(struct RGBC_val *p);color.c: 86: {;color.c: 87:     p->R =
      +                           color_read_Red();
  2432   001478  EC90  F00A         	call	_color_read_Red	;wreg free
  2433   00147C  5010               	movf	getRGBCval@p^0,w,c
  2434   00147E  6ED9               	movwf	fsr2l,c
  2435   001480  6ADA               	clrf	fsr2h,c
  2436   001482  C009  FFDE         	movff	?_color_read_Red,postinc2
  2437   001486  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2438                           
  2439                           ;color.c: 88:     p->B = color_read_Blue();
  2440   00148A  EC08  F00B         	call	_color_read_Blue	;wreg free
  2441   00148E  5010               	movf	getRGBCval@p^0,w,c
  2442   001490  6ED9               	movwf	fsr2l,c
  2443   001492  6ADA               	clrf	fsr2h,c
  2444   001494  0E04               	movlw	4
  2445   001496  26D9               	addwf	fsr2l,f,c
  2446   001498  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2447   00149C  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2448                           
  2449                           ;color.c: 89:     p->G = color_read_Green();
  2450   0014A0  ECB8  F00A         	call	_color_read_Green	;wreg free
  2451   0014A4  5010               	movf	getRGBCval@p^0,w,c
  2452   0014A6  6ED9               	movwf	fsr2l,c
  2453   0014A8  6ADA               	clrf	fsr2h,c
  2454   0014AA  0E02               	movlw	2
  2455   0014AC  26D9               	addwf	fsr2l,f,c
  2456   0014AE  C009  FFDE         	movff	?_color_read_Green,postinc2
  2457   0014B2  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2458                           
  2459                           ;color.c: 90:     p->C = color_read_Clear();
  2460   0014B6  ECE0  F00A         	call	_color_read_Clear	;wreg free
  2461   0014BA  5010               	movf	getRGBCval@p^0,w,c
  2462   0014BC  6ED9               	movwf	fsr2l,c
  2463   0014BE  6ADA               	clrf	fsr2h,c
  2464   0014C0  0E06               	movlw	6
  2465   0014C2  26D9               	addwf	fsr2l,f,c
  2466   0014C4  C009  FFDE         	movff	?_color_read_Clear,postinc2
  2467   0014C8  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  2468   0014CC  0012               	return		;funcret
  2469   0014CE                     __end_of_getRGBCval:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _color_read_Red *****************
  2473 ;; Defined at:
  2474 ;;		line 29 in file "color.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  tmp             2   13[COMRAM] unsigned int 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2    8[COMRAM] unsigned int 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;Total ram usage:        7 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 4
  2495 ;; This function calls:
  2496 ;;		_I2C_2_Master_Read
  2497 ;;		_I2C_2_Master_RepStart
  2498 ;;		_I2C_2_Master_Start
  2499 ;;		_I2C_2_Master_Stop
  2500 ;;		_I2C_2_Master_Write
  2501 ;; This function is called by:
  2502 ;;		_getRGBCval
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text14
  2507   001520                     __ptext14:
  2508                           	callstack 0
  2509   001520                     _color_read_Red:
  2510                           	callstack 25
  2511   001520                     
  2512                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2513   001520  ECDE  F00C         	call	_I2C_2_Master_Start	;wreg free
  2514                           
  2515                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2516   001524  0E52               	movlw	82
  2517   001526  ECCE  F00C         	call	_I2C_2_Master_Write
  2518                           
  2519                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2520   00152A  0EB6               	movlw	182
  2521   00152C  ECCE  F00C         	call	_I2C_2_Master_Write
  2522                           
  2523                           ;color.c: 35:  I2C_2_Master_RepStart();
  2524   001530  ECD4  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2525                           
  2526                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2527   001534  0E53               	movlw	83
  2528   001536  ECCE  F00C         	call	_I2C_2_Master_Write
  2529                           
  2530                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2531   00153A  0E01               	movlw	1
  2532   00153C  EC79  F00B         	call	_I2C_2_Master_Read
  2533   001540  6E0B               	movwf	??_color_read_Red^0,c
  2534   001542  500B               	movf	??_color_read_Red^0,w,c
  2535   001544  6E0E               	movwf	color_read_Red@tmp^0,c
  2536   001546  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2537                           
  2538                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2539   001548  0E00               	movlw	0
  2540   00154A  EC79  F00B         	call	_I2C_2_Master_Read
  2541   00154E  6E0B               	movwf	??_color_read_Red^0,c
  2542   001550  500B               	movf	??_color_read_Red^0,w,c
  2543   001552  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2544   001554  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2545   001556  500E               	movf	color_read_Red@tmp^0,w,c
  2546   001558  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2547   00155A  6E0E               	movwf	color_read_Red@tmp^0,c
  2548   00155C  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2549   00155E  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2550   001560  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2551                           
  2552                           ;color.c: 39:  I2C_2_Master_Stop();
  2553   001562  ECD9  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2554   001566                     
  2555                           ;color.c: 40:  return tmp;
  2556   001566  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2557   00156A  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2558   00156E  0012               	return		;funcret
  2559   001570                     __end_of_color_read_Red:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _color_read_Green *****************
  2563 ;; Defined at:
  2564 ;;		line 57 in file "color.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  tmp             2   13[COMRAM] unsigned int 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    8[COMRAM] unsigned int 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;Total ram usage:        7 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 4
  2585 ;; This function calls:
  2586 ;;		_I2C_2_Master_Read
  2587 ;;		_I2C_2_Master_RepStart
  2588 ;;		_I2C_2_Master_Start
  2589 ;;		_I2C_2_Master_Stop
  2590 ;;		_I2C_2_Master_Write
  2591 ;; This function is called by:
  2592 ;;		_getRGBCval
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text15
  2597   001570                     __ptext15:
  2598                           	callstack 0
  2599   001570                     _color_read_Green:
  2600                           	callstack 25
  2601   001570                     
  2602                           ;color.c: 59:     unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  2603   001570  ECDE  F00C         	call	_I2C_2_Master_Start	;wreg free
  2604                           
  2605                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  2606   001574  0E52               	movlw	82
  2607   001576  ECCE  F00C         	call	_I2C_2_Master_Write
  2608                           
  2609                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x18);
  2610   00157A  0EB8               	movlw	184
  2611   00157C  ECCE  F00C         	call	_I2C_2_Master_Write
  2612                           
  2613                           ;color.c: 63:  I2C_2_Master_RepStart();
  2614   001580  ECD4  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2615                           
  2616                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2617   001584  0E53               	movlw	83
  2618   001586  ECCE  F00C         	call	_I2C_2_Master_Write
  2619                           
  2620                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  2621   00158A  0E01               	movlw	1
  2622   00158C  EC79  F00B         	call	_I2C_2_Master_Read
  2623   001590  6E0B               	movwf	??_color_read_Green^0,c
  2624   001592  500B               	movf	??_color_read_Green^0,w,c
  2625   001594  6E0E               	movwf	color_read_Green@tmp^0,c
  2626   001596  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2627                           
  2628                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2629   001598  0E00               	movlw	0
  2630   00159A  EC79  F00B         	call	_I2C_2_Master_Read
  2631   00159E  6E0B               	movwf	??_color_read_Green^0,c
  2632   0015A0  500B               	movf	??_color_read_Green^0,w,c
  2633   0015A2  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2634   0015A4  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2635   0015A6  500E               	movf	color_read_Green@tmp^0,w,c
  2636   0015A8  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2637   0015AA  6E0E               	movwf	color_read_Green@tmp^0,c
  2638   0015AC  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2639   0015AE  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2640   0015B0  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2641                           
  2642                           ;color.c: 67:  I2C_2_Master_Stop();
  2643   0015B2  ECD9  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2644   0015B6                     
  2645                           ;color.c: 68:  return tmp;
  2646   0015B6  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2647   0015BA  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2648   0015BE  0012               	return		;funcret
  2649   0015C0                     __end_of_color_read_Green:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _color_read_Clear *****************
  2653 ;; Defined at:
  2654 ;;		line 71 in file "color.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  tmp             2   13[COMRAM] unsigned int 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  2    8[COMRAM] unsigned int 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;Total ram usage:        7 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 4
  2675 ;; This function calls:
  2676 ;;		_I2C_2_Master_Read
  2677 ;;		_I2C_2_Master_RepStart
  2678 ;;		_I2C_2_Master_Start
  2679 ;;		_I2C_2_Master_Stop
  2680 ;;		_I2C_2_Master_Write
  2681 ;; This function is called by:
  2682 ;;		_getRGBCval
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text16
  2687   0015C0                     __ptext16:
  2688                           	callstack 0
  2689   0015C0                     _color_read_Clear:
  2690                           	callstack 25
  2691   0015C0                     
  2692                           ;color.c: 73:     unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  2693   0015C0  ECDE  F00C         	call	_I2C_2_Master_Start	;wreg free
  2694                           
  2695                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  2696   0015C4  0E52               	movlw	82
  2697   0015C6  ECCE  F00C         	call	_I2C_2_Master_Write
  2698                           
  2699                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  2700   0015CA  0EB4               	movlw	180
  2701   0015CC  ECCE  F00C         	call	_I2C_2_Master_Write
  2702                           
  2703                           ;color.c: 77:  I2C_2_Master_RepStart();
  2704   0015D0  ECD4  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2705                           
  2706                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  2707   0015D4  0E53               	movlw	83
  2708   0015D6  ECCE  F00C         	call	_I2C_2_Master_Write
  2709                           
  2710                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  2711   0015DA  0E01               	movlw	1
  2712   0015DC  EC79  F00B         	call	_I2C_2_Master_Read
  2713   0015E0  6E0B               	movwf	??_color_read_Clear^0,c
  2714   0015E2  500B               	movf	??_color_read_Clear^0,w,c
  2715   0015E4  6E0E               	movwf	color_read_Clear@tmp^0,c
  2716   0015E6  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  2717                           
  2718                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2719   0015E8  0E00               	movlw	0
  2720   0015EA  EC79  F00B         	call	_I2C_2_Master_Read
  2721   0015EE  6E0B               	movwf	??_color_read_Clear^0,c
  2722   0015F0  500B               	movf	??_color_read_Clear^0,w,c
  2723   0015F2  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  2724   0015F4  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  2725   0015F6  500E               	movf	color_read_Clear@tmp^0,w,c
  2726   0015F8  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  2727   0015FA  6E0E               	movwf	color_read_Clear@tmp^0,c
  2728   0015FC  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  2729   0015FE  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  2730   001600  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  2731                           
  2732                           ;color.c: 81:  I2C_2_Master_Stop();
  2733   001602  ECD9  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2734   001606                     
  2735                           ;color.c: 82:  return tmp;
  2736   001606  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  2737   00160A  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2738   00160E  0012               	return		;funcret
  2739   001610                     __end_of_color_read_Clear:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _color_read_Blue *****************
  2743 ;; Defined at:
  2744 ;;		line 43 in file "color.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  tmp             2   13[COMRAM] unsigned int 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2    8[COMRAM] unsigned int 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2760 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;Total ram usage:        7 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 4
  2765 ;; This function calls:
  2766 ;;		_I2C_2_Master_Read
  2767 ;;		_I2C_2_Master_RepStart
  2768 ;;		_I2C_2_Master_Start
  2769 ;;		_I2C_2_Master_Stop
  2770 ;;		_I2C_2_Master_Write
  2771 ;; This function is called by:
  2772 ;;		_getRGBCval
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text17
  2777   001610                     __ptext17:
  2778                           	callstack 0
  2779   001610                     _color_read_Blue:
  2780                           	callstack 25
  2781   001610                     
  2782                           ;color.c: 45:     unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  2783   001610  ECDE  F00C         	call	_I2C_2_Master_Start	;wreg free
  2784                           
  2785                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  2786   001614  0E52               	movlw	82
  2787   001616  ECCE  F00C         	call	_I2C_2_Master_Write
  2788                           
  2789                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x1A);
  2790   00161A  0EBA               	movlw	186
  2791   00161C  ECCE  F00C         	call	_I2C_2_Master_Write
  2792                           
  2793                           ;color.c: 49:  I2C_2_Master_RepStart();
  2794   001620  ECD4  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2795                           
  2796                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  2797   001624  0E53               	movlw	83
  2798   001626  ECCE  F00C         	call	_I2C_2_Master_Write
  2799                           
  2800                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  2801   00162A  0E01               	movlw	1
  2802   00162C  EC79  F00B         	call	_I2C_2_Master_Read
  2803   001630  6E0B               	movwf	??_color_read_Blue^0,c
  2804   001632  500B               	movf	??_color_read_Blue^0,w,c
  2805   001634  6E0E               	movwf	color_read_Blue@tmp^0,c
  2806   001636  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2807                           
  2808                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2809   001638  0E00               	movlw	0
  2810   00163A  EC79  F00B         	call	_I2C_2_Master_Read
  2811   00163E  6E0B               	movwf	??_color_read_Blue^0,c
  2812   001640  500B               	movf	??_color_read_Blue^0,w,c
  2813   001642  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2814   001644  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2815   001646  500E               	movf	color_read_Blue@tmp^0,w,c
  2816   001648  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2817   00164A  6E0E               	movwf	color_read_Blue@tmp^0,c
  2818   00164C  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2819   00164E  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2820   001650  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2821                           
  2822                           ;color.c: 53:  I2C_2_Master_Stop();
  2823   001652  ECD9  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2824   001656                     
  2825                           ;color.c: 54:  return tmp;
  2826   001656  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2827   00165A  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2828   00165E  0012               	return		;funcret
  2829   001660                     __end_of_color_read_Blue:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _I2C_2_Master_RepStart *****************
  2833 ;; Defined at:
  2834 ;;		line 33 in file "i2c.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 3
  2855 ;; This function calls:
  2856 ;;		_I2C_2_Master_Idle
  2857 ;; This function is called by:
  2858 ;;		_color_read_Red
  2859 ;;		_color_read_Blue
  2860 ;;		_color_read_Green
  2861 ;;		_color_read_Clear
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text18
  2866   0019A8                     __ptext18:
  2867                           	callstack 0
  2868   0019A8                     _I2C_2_Master_RepStart:
  2869                           	callstack 25
  2870   0019A8                     
  2871                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2872   0019A8  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2873   0019AC                     
  2874                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2875   0019AC  010E               	movlb	14	; () banked
  2876   0019AE  83DA               	bsf	218,1,b	;volatile
  2877   0019B0                     
  2878                           ; BSR set to: 14
  2879   0019B0  0012               	return		;funcret
  2880   0019B2                     __end_of_I2C_2_Master_RepStart:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _I2C_2_Master_Read *****************
  2884 ;; Defined at:
  2885 ;;		line 51 in file "i2c.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  ack             1    wreg     unsigned char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  ack             1    6[COMRAM] unsigned char 
  2890 ;;  tmp             1    7[COMRAM] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      unsigned char 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;Total ram usage:        3 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 3
  2907 ;; This function calls:
  2908 ;;		_I2C_2_Master_Idle
  2909 ;; This function is called by:
  2910 ;;		_color_read_Red
  2911 ;;		_color_read_Blue
  2912 ;;		_color_read_Green
  2913 ;;		_color_read_Clear
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text19
  2918   0016F2                     __ptext19:
  2919                           	callstack 0
  2920   0016F2                     _I2C_2_Master_Read:
  2921                           	callstack 25
  2922                           
  2923                           ; BSR set to: 14
  2924                           ;incstack = 0
  2925                           ;I2C_2_Master_Read@ack stored from wreg
  2926   0016F2  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2927   0016F4                     
  2928                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2929   0016F4  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2930   0016F8                     
  2931                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2932   0016F8  010E               	movlb	14	; () banked
  2933   0016FA  87DA               	bsf	218,3,b	;volatile
  2934                           
  2935                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2936   0016FC  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2937   001700                     
  2938                           ;i2c.c: 57:   tmp = SSP2BUF;
  2939   001700  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2940                           
  2941                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2942   001704  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2943   001708                     
  2944                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2945   001708  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2946   00170A  B4D8               	btfsc	status,2,c
  2947   00170C  EF8A  F00B         	goto	u1051
  2948   001710  EF8E  F00B         	goto	u1050
  2949   001714                     u1051:
  2950   001714  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2951   001716  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2952   001718  EF8F  F00B         	goto	u1068
  2953   00171C                     u1050:
  2954   00171C  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2955   00171E                     u1068:
  2956   00171E  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2957   001720  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2958   001722  010E               	movlb	14	; () banked
  2959   001724  51DA               	movf	218,w,b	;volatile
  2960   001726  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2961   001728  0BDF               	andlw	-33
  2962   00172A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2963   00172C  6FDA               	movwf	218,b	;volatile
  2964   00172E                     
  2965                           ; BSR set to: 14
  2966                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2967   00172E  89DA               	bsf	218,4,b	;volatile
  2968   001730                     
  2969                           ; BSR set to: 14
  2970                           ;i2c.c: 61:   return tmp;
  2971   001730  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2972   001732                     
  2973                           ; BSR set to: 14
  2974   001732  0012               	return		;funcret
  2975   001734                     __end_of_I2C_2_Master_Read:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function _color_click_init *****************
  2979 ;; Defined at:
  2980 ;;		line 5 in file "color.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 5
  3001 ;; This function calls:
  3002 ;;		_I2C_2_Master_Init
  3003 ;;		_color_writetoaddr
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text20
  3010   0017A6                     __ptext20:
  3011                           	callstack 0
  3012   0017A6                     _color_click_init:
  3013                           	callstack 25
  3014   0017A6                     
  3015                           ;color.c: 8:     I2C_2_Master_Init();
  3016   0017A6  EC03  F00C         	call	_I2C_2_Master_Init	;wreg free
  3017   0017AA                     
  3018                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3019   0017AA  0E01               	movlw	1
  3020   0017AC  6E07               	movwf	color_writetoaddr@value^0,c
  3021   0017AE  0E00               	movlw	0
  3022   0017B0  EC69  F00C         	call	_color_writetoaddr
  3023   0017B4                     
  3024                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3025   0017B4  0E3F               	movlw	63
  3026   0017B6  6E09               	movwf	??_color_click_init^0,c
  3027   0017B8  0E55               	movlw	85
  3028   0017BA                     u1367:
  3029   0017BA  2EE8               	decfsz	wreg,f,c
  3030   0017BC  D7FE               	bra	u1367
  3031   0017BE  2E09               	decfsz	??_color_click_init^0,f,c
  3032   0017C0  D7FC               	bra	u1367
  3033   0017C2  0000               	nop	
  3034   0017C4                     
  3035                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3036   0017C4  0E03               	movlw	3
  3037   0017C6  6E07               	movwf	color_writetoaddr@value^0,c
  3038   0017C8  0E00               	movlw	0
  3039   0017CA  EC69  F00C         	call	_color_writetoaddr
  3040   0017CE                     
  3041                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3042   0017CE  0ED5               	movlw	213
  3043   0017D0  6E07               	movwf	color_writetoaddr@value^0,c
  3044   0017D2  0E01               	movlw	1
  3045   0017D4  EC69  F00C         	call	_color_writetoaddr
  3046   0017D8  0012               	return		;funcret
  3047   0017DA                     __end_of_color_click_init:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _color_writetoaddr *****************
  3051 ;; Defined at:
  3052 ;;		line 21 in file "color.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  address         1    wreg     unsigned char 
  3055 ;;  value           1    6[COMRAM] unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  address         1    7[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3067 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 4
  3074 ;; This function calls:
  3075 ;;		_I2C_2_Master_Start
  3076 ;;		_I2C_2_Master_Stop
  3077 ;;		_I2C_2_Master_Write
  3078 ;; This function is called by:
  3079 ;;		_color_click_init
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text21
  3084   0018D2                     __ptext21:
  3085                           	callstack 0
  3086   0018D2                     _color_writetoaddr:
  3087                           	callstack 25
  3088                           
  3089                           ;incstack = 0
  3090                           ;color_writetoaddr@address stored from wreg
  3091   0018D2  6E08               	movwf	color_writetoaddr@address^0,c
  3092   0018D4                     
  3093                           ;color.c: 22:     I2C_2_Master_Start();
  3094   0018D4  ECDE  F00C         	call	_I2C_2_Master_Start	;wreg free
  3095                           
  3096                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3097   0018D8  0E52               	movlw	82
  3098   0018DA  ECCE  F00C         	call	_I2C_2_Master_Write
  3099                           
  3100                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3101   0018DE  5008               	movf	color_writetoaddr@address^0,w,c
  3102   0018E0  0980               	iorlw	128
  3103   0018E2  ECCE  F00C         	call	_I2C_2_Master_Write
  3104                           
  3105                           ;color.c: 25:     I2C_2_Master_Write(value);
  3106   0018E6  5007               	movf	color_writetoaddr@value^0,w,c
  3107   0018E8  ECCE  F00C         	call	_I2C_2_Master_Write
  3108                           
  3109                           ;color.c: 26:     I2C_2_Master_Stop();
  3110   0018EC  ECD9  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3111   0018F0  0012               	return		;funcret
  3112   0018F2                     __end_of_color_writetoaddr:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _I2C_2_Master_Write *****************
  3116 ;; Defined at:
  3117 ;;		line 45 in file "i2c.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  data_byte       1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  data_byte       1    5[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;Total ram usage:        1 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 3
  3138 ;; This function calls:
  3139 ;;		_I2C_2_Master_Idle
  3140 ;; This function is called by:
  3141 ;;		_color_writetoaddr
  3142 ;;		_color_read_Red
  3143 ;;		_color_read_Blue
  3144 ;;		_color_read_Green
  3145 ;;		_color_read_Clear
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text22
  3150   00199C                     __ptext22:
  3151                           	callstack 0
  3152   00199C                     _I2C_2_Master_Write:
  3153                           	callstack 25
  3154                           
  3155                           ;incstack = 0
  3156                           ;I2C_2_Master_Write@data_byte stored from wreg
  3157   00199C  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3158   00199E                     
  3159                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3160   00199E  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3161   0019A2                     
  3162                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3163   0019A2  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3164   0019A6  0012               	return		;funcret
  3165   0019A8                     __end_of_I2C_2_Master_Write:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _I2C_2_Master_Stop *****************
  3169 ;; Defined at:
  3170 ;;		line 39 in file "i2c.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;Total ram usage:        0 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 3
  3191 ;; This function calls:
  3192 ;;		_I2C_2_Master_Idle
  3193 ;; This function is called by:
  3194 ;;		_color_writetoaddr
  3195 ;;		_color_read_Red
  3196 ;;		_color_read_Blue
  3197 ;;		_color_read_Green
  3198 ;;		_color_read_Clear
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text23
  3203   0019B2                     __ptext23:
  3204                           	callstack 0
  3205   0019B2                     _I2C_2_Master_Stop:
  3206                           	callstack 25
  3207   0019B2                     
  3208                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3209   0019B2  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3210   0019B6                     
  3211                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3212   0019B6  010E               	movlb	14	; () banked
  3213   0019B8  85DA               	bsf	218,2,b	;volatile
  3214   0019BA                     
  3215                           ; BSR set to: 14
  3216   0019BA  0012               	return		;funcret
  3217   0019BC                     __end_of_I2C_2_Master_Stop:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _I2C_2_Master_Start *****************
  3221 ;; Defined at:
  3222 ;;		line 27 in file "i2c.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 3
  3243 ;; This function calls:
  3244 ;;		_I2C_2_Master_Idle
  3245 ;; This function is called by:
  3246 ;;		_color_writetoaddr
  3247 ;;		_color_read_Red
  3248 ;;		_color_read_Blue
  3249 ;;		_color_read_Green
  3250 ;;		_color_read_Clear
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text24
  3255   0019BC                     __ptext24:
  3256                           	callstack 0
  3257   0019BC                     _I2C_2_Master_Start:
  3258                           	callstack 25
  3259   0019BC                     
  3260                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3261   0019BC  EC42  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3262   0019C0                     
  3263                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3264   0019C0  010E               	movlb	14	; () banked
  3265   0019C2  81DA               	bsf	218,0,b	;volatile
  3266   0019C4                     
  3267                           ; BSR set to: 14
  3268   0019C4  0012               	return		;funcret
  3269   0019C6                     __end_of_I2C_2_Master_Start:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _I2C_2_Master_Idle *****************
  3273 ;; Defined at:
  3274 ;;		line 22 in file "i2c.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;Total ram usage:        1 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 2
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_I2C_2_Master_Start
  3299 ;;		_I2C_2_Master_RepStart
  3300 ;;		_I2C_2_Master_Stop
  3301 ;;		_I2C_2_Master_Write
  3302 ;;		_I2C_2_Master_Read
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text25
  3307   001884                     __ptext25:
  3308                           	callstack 0
  3309   001884                     _I2C_2_Master_Idle:
  3310                           	callstack 25
  3311   001884                     l242:
  3312   001884  010E               	movlb	14	; () banked
  3313   001886  B5D8               	btfsc	216,2,b	;volatile
  3314   001888  EF48  F00C         	goto	u861
  3315   00188C  EF4A  F00C         	goto	u860
  3316   001890                     u861:
  3317   001890  EF42  F00C         	goto	l242
  3318   001894                     u860:
  3319   001894                     
  3320                           ; BSR set to: 14
  3321   001894  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3322   001898  0E1F               	movlw	31
  3323   00189A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3324   00189C  A4D8               	btfss	status,2,c
  3325   00189E  EF53  F00C         	goto	u871
  3326   0018A2  EF55  F00C         	goto	u870
  3327   0018A6                     u871:
  3328   0018A6  EF42  F00C         	goto	l242
  3329   0018AA                     u870:
  3330   0018AA                     
  3331                           ; BSR set to: 14
  3332   0018AA  0012               	return		;funcret
  3333   0018AC                     __end_of_I2C_2_Master_Idle:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _I2C_2_Master_Init *****************
  3337 ;; Defined at:
  3338 ;;		line 4 in file "i2c.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 2
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_color_click_init
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text26
  3367   001806                     __ptext26:
  3368                           	callstack 0
  3369   001806                     _I2C_2_Master_Init:
  3370                           	callstack 27
  3371   001806                     
  3372                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3373   001806  010E               	movlb	14	; () banked
  3374   001808  51D9               	movf	217,w,b	;volatile
  3375   00180A  0BF0               	andlw	-16
  3376   00180C  0908               	iorlw	8
  3377   00180E  6FD9               	movwf	217,b	;volatile
  3378   001810                     
  3379                           ; BSR set to: 14
  3380                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3381   001810  8BD9               	bsf	217,5,b	;volatile
  3382                           
  3383                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3384   001812  0E9F               	movlw	159
  3385   001814  6FD6               	movwf	214,b	;volatile
  3386   001816                     
  3387                           ; BSR set to: 14
  3388                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3389   001816  8A84               	bsf	132,5,c	;volatile
  3390   001818                     
  3391                           ; BSR set to: 14
  3392                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3393   001818  8C84               	bsf	132,6,c	;volatile
  3394   00181A                     
  3395                           ; BSR set to: 14
  3396                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3397   00181A  9BA7               	bcf	167,5,b	;volatile
  3398   00181C                     
  3399                           ; BSR set to: 14
  3400                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3401   00181C  9DA7               	bcf	167,6,b	;volatile
  3402                           
  3403                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3404   00181E  0E1D               	movlw	29
  3405   001820  6F1D               	movwf	29,b	;volatile
  3406                           
  3407                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3408   001822  0E1E               	movlw	30
  3409   001824  6F1C               	movwf	28,b	;volatile
  3410                           
  3411                           ;i2c.c: 18:   RD5PPS=0x1C;
  3412   001826  0E1C               	movlw	28
  3413   001828  6F6F               	movwf	111,b	;volatile
  3414                           
  3415                           ;i2c.c: 19:   RD6PPS=0x1B;
  3416   00182A  0E1B               	movlw	27
  3417   00182C  6F70               	movwf	112,b	;volatile
  3418   00182E                     
  3419                           ; BSR set to: 14
  3420   00182E  0012               	return		;funcret
  3421   001830                     __end_of_I2C_2_Master_Init:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _buggy_lights_init *****************
  3425 ;; Defined at:
  3426 ;;		line 4 in file "buggy_lights.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		None
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 2
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text27
  3455   001660                     __ptext27:
  3456                           	callstack 0
  3457   001660                     _buggy_lights_init:
  3458                           	callstack 28
  3459   001660                     
  3460                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  3461   001660  9884               	bcf	132,4,c	;volatile
  3462                           
  3463                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  3464   001662  9288               	bcf	136,1,c	;volatile
  3465                           
  3466                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  3467   001664  9684               	bcf	132,3,c	;volatile
  3468                           
  3469                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  3470   001666  9086               	bcf	134,0,c	;volatile
  3471                           
  3472                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  3473   001668  9088               	bcf	136,0,c	;volatile
  3474                           
  3475                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  3476   00166A  887C               	bsf	124,4,c	;volatile
  3477                           
  3478                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  3479   00166C  8280               	bsf	128,1,c	;volatile
  3480                           
  3481                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  3482   00166E  867C               	bsf	124,3,c	;volatile
  3483                           
  3484                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  3485   001670  807E               	bsf	126,0,c	;volatile
  3486                           
  3487                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  3488   001672  8080               	bsf	128,0,c	;volatile
  3489                           
  3490                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  3491   001674  9E84               	bcf	132,7,c	;volatile
  3492                           
  3493                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  3494   001676  9688               	bcf	136,3,c	;volatile
  3495                           
  3496                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  3497   001678  8E7C               	bsf	124,7,c	;volatile
  3498                           
  3499                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  3500   00167A  8680               	bsf	128,3,c	;volatile
  3501                           
  3502                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  3503   00167C  9081               	bcf	129,0,c	;volatile
  3504                           
  3505                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  3506   00167E  9483               	bcf	131,2,c	;volatile
  3507                           
  3508                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  3509   001680  9084               	bcf	132,0,c	;volatile
  3510                           
  3511                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  3512   001682  8079               	bsf	121,0,c	;volatile
  3513                           
  3514                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  3515   001684  847B               	bsf	123,2,c	;volatile
  3516                           
  3517                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  3518   001686  807C               	bsf	124,0,c	;volatile
  3519                           
  3520                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  3521   001688  9281               	bcf	129,1,c	;volatile
  3522                           
  3523                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  3524   00168A  9C83               	bcf	131,6,c	;volatile
  3525                           
  3526                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  3527   00168C  9488               	bcf	136,2,c	;volatile
  3528                           
  3529                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  3530   00168E  8279               	bsf	121,1,c	;volatile
  3531                           
  3532                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  3533   001690  8C7B               	bsf	123,6,c	;volatile
  3534                           
  3535                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  3536   001692  8480               	bsf	128,2,c	;volatile
  3537                           
  3538                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  3539   001694  9287               	bcf	135,1,c	;volatile
  3540                           
  3541                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  3542   001696  9881               	bcf	129,4,c	;volatile
  3543                           
  3544                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  3545   001698  9E86               	bcf	134,7,c	;volatile
  3546                           
  3547                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  3548   00169A  827F               	bsf	127,1,c	;volatile
  3549                           
  3550                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  3551   00169C  8879               	bsf	121,4,c	;volatile
  3552                           
  3553                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  3554   00169E  8E7E               	bsf	126,7,c	;volatile
  3555                           
  3556                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  3557   0016A0  9087               	bcf	135,0,c	;volatile
  3558                           
  3559                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  3560   0016A2  9E85               	bcf	133,7,c	;volatile
  3561                           
  3562                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  3563   0016A4  9681               	bcf	129,3,c	;volatile
  3564                           
  3565                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  3566   0016A6  807F               	bsf	127,0,c	;volatile
  3567                           
  3568                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  3569   0016A8  8E7D               	bsf	125,7,c	;volatile
  3570                           
  3571                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  3572   0016AA  8679               	bsf	121,3,c	;volatile
  3573   0016AC  0012               	return		;funcret
  3574   0016AE                     __end_of_buggy_lights_init:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _TxBufferedString *****************
  3578 ;; Defined at:
  3579 ;;		line 105 in file "serial.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  string          1    5[COMRAM] PTR unsigned char 
  3582 ;;		 -> main@display(41), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3594 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 3
  3601 ;; This function calls:
  3602 ;;		_putCharToTxBuf
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text28
  3609   001830                     __ptext28:
  3610                           	callstack 0
  3611   001830                     _TxBufferedString:
  3612                           	callstack 27
  3613   001830                     
  3614                           ;serial.c: 107:     while(*string != 0) {
  3615   001830  EF21  F00C         	goto	l2482
  3616   001834                     l2478:
  3617                           
  3618                           ;serial.c: 108:         putCharToTxBuf(*string++);
  3619   001834  5006               	movf	TxBufferedString@string^0,w,c
  3620   001836  6ED9               	movwf	fsr2l,c
  3621   001838  6ADA               	clrf	fsr2h,c
  3622   00183A  50DF               	movf	indf2,w,c
  3623   00183C  EC2D  F00C         	call	_putCharToTxBuf
  3624   001840  2A06               	incf	TxBufferedString@string^0,f,c
  3625   001842                     l2482:
  3626                           
  3627                           ;serial.c: 107:     while(*string != 0) {
  3628   001842  5006               	movf	TxBufferedString@string^0,w,c
  3629   001844  6ED9               	movwf	fsr2l,c
  3630   001846  6ADA               	clrf	fsr2h,c
  3631   001848  50DF               	movf	indf2,w,c
  3632   00184A  A4D8               	btfss	status,2,c
  3633   00184C  EF2A  F00C         	goto	u1211
  3634   001850  EF2C  F00C         	goto	u1210
  3635   001854                     u1211:
  3636   001854  EF1A  F00C         	goto	l2478
  3637   001858                     u1210:
  3638   001858  0012               	return		;funcret
  3639   00185A                     __end_of_TxBufferedString:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _putCharToTxBuf *****************
  3643 ;; Defined at:
  3644 ;;		line 92 in file "serial.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  byte            1    wreg     unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  byte            1    4[COMRAM] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;Total ram usage:        1 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 2
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_TxBufferedString
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text29
  3673   00185A                     __ptext29:
  3674                           	callstack 0
  3675   00185A                     _putCharToTxBuf:
  3676                           	callstack 27
  3677                           
  3678                           ;incstack = 0
  3679                           ;putCharToTxBuf@byte stored from wreg
  3680   00185A  6E05               	movwf	putCharToTxBuf@byte^0,c
  3681   00185C                     
  3682                           ;serial.c: 93:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3683   00185C  0E3B               	movlw	59
  3684   00185E  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3685   001860  EF34  F00C         	goto	u1171
  3686   001864  EF36  F00C         	goto	u1170
  3687   001868                     u1171:
  3688   001868  EF38  F00C         	goto	l2386
  3689   00186C                     u1170:
  3690   00186C  0E00               	movlw	0
  3691   00186E  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  3692   001870                     l2386:
  3693                           
  3694                           ;serial.c: 94:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3695   001870  0E00               	movlw	low _EUSART4TXbuf
  3696   001872  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3697   001874  6ED9               	movwf	fsr2l,c
  3698   001876  6ADA               	clrf	fsr2h,c
  3699   001878  0E01               	movlw	high _EUSART4TXbuf
  3700   00187A  22DA               	addwfc	fsr2h,f,c
  3701   00187C  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3702   001880  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3703   001882  0012               	return		;funcret
  3704   001884                     __end_of_putCharToTxBuf:
  3705                           	callstack 0
  3706                           
  3707 ;; *************** function _Timer0_init *****************
  3708 ;; Defined at:
  3709 ;;		line 7 in file "timers.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 2
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text30
  3738   0018F2                     __ptext30:
  3739                           	callstack 0
  3740   0018F2                     _Timer0_init:
  3741                           	callstack 28
  3742   0018F2                     
  3743                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3744   0018F2  50D6               	movf	214,w,c	;volatile
  3745   0018F4  0B1F               	andlw	-225
  3746   0018F6  0940               	iorlw	64
  3747   0018F8  6ED6               	movwf	214,c	;volatile
  3748   0018FA                     
  3749                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3750   0018FA  88D6               	bsf	214,4,c	;volatile
  3751   0018FC                     
  3752                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3753   0018FC  88D5               	bsf	213,4,c	;volatile
  3754                           
  3755                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3756   0018FE  50D6               	movf	214,w,c	;volatile
  3757   001900  0BF0               	andlw	-16
  3758   001902  090E               	iorlw	14
  3759   001904  6ED6               	movwf	214,c	;volatile
  3760                           
  3761                           ;timers.c: 20:     TMR0H = 0;
  3762   001906  0E00               	movlw	0
  3763   001908  6ED4               	movwf	212,c	;volatile
  3764                           
  3765                           ;timers.c: 21:     TMR0L = 0;
  3766   00190A  0E00               	movlw	0
  3767   00190C  6ED3               	movwf	211,c	;volatile
  3768   00190E                     
  3769                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3770   00190E  8ED5               	bsf	213,7,c	;volatile
  3771   001910  0012               	return		;funcret
  3772   001912                     __end_of_Timer0_init:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _Interrupts_init *****************
  3776 ;; Defined at:
  3777 ;;		line 6 in file "interrupts.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		None
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 2
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text31
  3806   00198E                     __ptext31:
  3807                           	callstack 0
  3808   00198E                     _Interrupts_init:
  3809                           	callstack 28
  3810   00198E                     
  3811                           ;interrupts.c: 9:     PIE4bits.RC4IE = 1;
  3812   00198E  010E               	movlb	14	; () banked
  3813   001990  872D               	bsf	45,3,b	;volatile
  3814                           
  3815                           ;interrupts.c: 10:     PIE4bits.TX4IE = 1;
  3816   001992  852D               	bsf	45,2,b	;volatile
  3817                           
  3818                           ;interrupts.c: 12:     PIE0bits.TMR0IE = 1;
  3819   001994  8B29               	bsf	41,5,b	;volatile
  3820                           
  3821                           ;interrupts.c: 13:     INTCONbits.PEIE = 1;
  3822   001996  8CF2               	bsf	242,6,c	;volatile
  3823                           
  3824                           ;interrupts.c: 14:     INTCONbits.GIE = 1;
  3825   001998  8EF2               	bsf	242,7,c	;volatile
  3826   00199A                     
  3827                           ; BSR set to: 14
  3828   00199A  0012               	return		;funcret
  3829   00199C                     __end_of_Interrupts_init:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _HighISR *****************
  3833 ;; Defined at:
  3834 ;;		line 19 in file "interrupts.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;Total ram usage:        2 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 1
  3855 ;; This function calls:
  3856 ;;		_getCharFromTxBuf
  3857 ;;		_putCharToRxBuf
  3858 ;;		i2_isDataInTxBuf
  3859 ;; This function is called by:
  3860 ;;		Interrupt level 2
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	intcode
  3865   000008                     __pintcode:
  3866                           	callstack 0
  3867   000008                     _HighISR:
  3868                           	callstack 24
  3869                           
  3870                           ; BSR set to: 14
  3871                           ;incstack = 0
  3872   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3873   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3874   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3875   000012                     
  3876                           ;interrupts.c: 22:     if (PIR0bits.TMR0IF) {
  3877   000012  010E               	movlb	14	; () banked
  3878   000014  AB33               	btfss	51,5,b	;volatile
  3879   000016  EF0F  F000         	goto	i2u130_41
  3880   00001A  EF11  F000         	goto	i2u130_40
  3881   00001E                     i2u130_41:
  3882   00001E  EF12  F000         	goto	i2l619
  3883   000022                     i2u130_40:
  3884   000022                     
  3885                           ; BSR set to: 14
  3886                           ;interrupts.c: 30:         PIR0bits.TMR0IF = 0;
  3887   000022  9B33               	bcf	51,5,b	;volatile
  3888   000024                     i2l619:
  3889                           
  3890                           ; BSR set to: 14
  3891                           ;interrupts.c: 35:     if (PIR4bits.TX4IF) {
  3892   000024  A537               	btfss	55,2,b	;volatile
  3893   000026  EF17  F000         	goto	i2u131_41
  3894   00002A  EF19  F000         	goto	i2u131_40
  3895   00002E                     i2u131_41:
  3896   00002E  EF29  F000         	goto	i2l622
  3897   000032                     i2u131_40:
  3898   000032                     
  3899                           ; BSR set to: 14
  3900                           ;interrupts.c: 36:         TX4REG = getCharFromTxBuf();
  3901   000032  ECED  F00B         	call	_getCharFromTxBuf	;wreg free
  3902   000036  010E               	movlb	14	; () banked
  3903   000038  6FE4               	movwf	228,b	;volatile
  3904   00003A                     
  3905                           ; BSR set to: 14
  3906                           ;interrupts.c: 37:         if (!isDataInTxBuf()) {PIE4bits.TX4IE = 0;}
  3907   00003A  ECB1  F00C         	call	i2_isDataInTxBuf	;wreg free
  3908   00003E  0900               	iorlw	0
  3909   000040  A4D8               	btfss	status,2,c
  3910   000042  EF25  F000         	goto	i2u132_41
  3911   000046  EF27  F000         	goto	i2u132_40
  3912   00004A                     i2u132_41:
  3913   00004A  EF29  F000         	goto	i2l622
  3914   00004E                     i2u132_40:
  3915   00004E  010E               	movlb	14	; () banked
  3916   000050  952D               	bcf	45,2,b	;volatile
  3917   000052                     i2l622:
  3918                           
  3919                           ;interrupts.c: 40:     if (PIR4bits.RC4IF) {putCharToRxBuf(RC4REG);}
  3920   000052  010E               	movlb	14	; () banked
  3921   000054  A737               	btfss	55,3,b	;volatile
  3922   000056  EF2F  F000         	goto	i2u133_41
  3923   00005A  EF31  F000         	goto	i2u133_40
  3924   00005E                     i2u133_41:
  3925   00005E  EF34  F000         	goto	i2l625
  3926   000062                     i2u133_40:
  3927   000062                     
  3928                           ; BSR set to: 14
  3929   000062  51E3               	movf	227,w,b	;volatile
  3930   000064  EC56  F00C         	call	_putCharToRxBuf
  3931   000068                     i2l625:
  3932   000068  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3933   00006C  C003  FFD9         	movff	??_HighISR,fsr2l
  3934   000070  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3935   000072  0011               	retfie		f
  3936   000074                     __end_of_HighISR:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function i2_isDataInTxBuf *****************
  3940 ;; Defined at:
  3941 ;;		line 100 in file "serial.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      unsigned char 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_HighISR
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text33
  3969   001962                     __ptext33:
  3970                           	callstack 0
  3971   001962                     i2_isDataInTxBuf:
  3972                           	callstack 24
  3973   001962                     
  3974                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  3975   001962  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  3976   001964  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3977   001966  A4D8               	btfss	status,2,c
  3978   001968  EFB8  F00C         	goto	i2u62_41
  3979   00196C  EFBB  F00C         	goto	i2u62_40
  3980   001970                     i2u62_41:
  3981   001970  0E01               	movlw	1
  3982   001972  EFBC  F00C         	goto	i2u63_40
  3983   001976                     i2u62_40:
  3984   001976  0E00               	movlw	0
  3985   001978                     i2u63_40:
  3986   001978  0012               	return		;funcret
  3987   00197A                     __end_ofi2_isDataInTxBuf:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _putCharToRxBuf *****************
  3991 ;; Defined at:
  3992 ;;		line 72 in file "serial.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  byte            1    wreg     unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  byte            1    0[COMRAM] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_HighISR
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text34
  4020   0018AC                     __ptext34:
  4021                           	callstack 0
  4022   0018AC                     _putCharToRxBuf:
  4023                           	callstack 24
  4024                           
  4025                           ;incstack = 0
  4026                           ;putCharToRxBuf@byte stored from wreg
  4027   0018AC  6E01               	movwf	putCharToRxBuf@byte^0,c
  4028   0018AE                     
  4029                           ;serial.c: 73:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  4030   0018AE  0E13               	movlw	19
  4031   0018B0  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  4032   0018B2  EF5D  F00C         	goto	i2u123_41
  4033   0018B6  EF5F  F00C         	goto	i2u123_40
  4034   0018BA                     i2u123_41:
  4035   0018BA  EF61  F00C         	goto	i2l2492
  4036   0018BE                     i2u123_40:
  4037   0018BE  0E00               	movlw	0
  4038   0018C0  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  4039   0018C2                     i2l2492:
  4040                           
  4041                           ;serial.c: 74:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4042   0018C2  505A               	movf	_RxBufWriteCnt^0,w,c
  4043   0018C4  0FE0               	addlw	low _EUSART4RXbuf
  4044   0018C6  6ED9               	movwf	fsr2l,c
  4045   0018C8  6ADA               	clrf	fsr2h,c
  4046   0018CA  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  4047   0018CE  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  4048   0018D0  0012               	return		;funcret
  4049   0018D2                     __end_of_putCharToRxBuf:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _getCharFromTxBuf *****************
  4053 ;; Defined at:
  4054 ;;		line 86 in file "serial.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      unsigned char 
  4061 ;; Registers used:
  4062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;Total ram usage:        2 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_HighISR
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text35
  4082   0017DA                     __ptext35:
  4083                           	callstack 0
  4084   0017DA                     _getCharFromTxBuf:
  4085                           	callstack 24
  4086   0017DA                     
  4087                           ;serial.c: 87:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4088   0017DA  0E3B               	movlw	59
  4089   0017DC  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4090   0017DE  EFF3  F00B         	goto	i2u124_41
  4091   0017E2  EFF5  F00B         	goto	i2u124_40
  4092   0017E6                     i2u124_41:
  4093   0017E6  EFF7  F00B         	goto	i2l2500
  4094   0017EA                     i2u124_40:
  4095   0017EA  0E00               	movlw	0
  4096   0017EC  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  4097   0017EE                     i2l2500:
  4098                           
  4099                           ;serial.c: 88:     return EUSART4TXbuf[TxBufReadCnt++];
  4100   0017EE  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  4101   0017F0  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  4102   0017F2  6E01               	movwf	??_getCharFromTxBuf^0,c
  4103   0017F4  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4104   0017F6  0E00               	movlw	low _EUSART4TXbuf
  4105   0017F8  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4106   0017FA  6ED9               	movwf	fsr2l,c
  4107   0017FC  0E01               	movlw	high _EUSART4TXbuf
  4108   0017FE  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4109   001800  6EDA               	movwf	fsr2h,c
  4110   001802  50DF               	movf	indf2,w,c
  4111   001804  0012               	return		;funcret
  4112   001806                     __end_of_getCharFromTxBuf:
  4113                           	callstack 0
  4114                           
  4115                           	psect	rparam
  4116   000000                     
  4117                           	psect	temp
  4118   00005B                     btemp:
  4119                           	callstack 0
  4120   00005B                     	ds	1
  4121   000000                     int$flags	set	btemp
  4122   000000                     wtemp8	set	btemp+1
  4123   000000                     ttemp5	set	btemp+1
  4124   000000                     ttemp6	set	btemp+4
  4125   000000                     ttemp7	set	btemp+8
  4126                           
  4127                           	psect	idloc
  4128                           
  4129                           ;Config register IDLOC0 @ 0x200000
  4130                           ;	unspecified, using default values
  4131   200000                     	org	2097152
  4132   200000  FFFF               	dw	65535
  4133                           
  4134                           ;Config register IDLOC1 @ 0x200002
  4135                           ;	unspecified, using default values
  4136   200002                     	org	2097154
  4137   200002  FFFF               	dw	65535
  4138                           
  4139                           ;Config register IDLOC2 @ 0x200004
  4140                           ;	unspecified, using default values
  4141   200004                     	org	2097156
  4142   200004  FFFF               	dw	65535
  4143                           
  4144                           ;Config register IDLOC3 @ 0x200006
  4145                           ;	unspecified, using default values
  4146   200006                     	org	2097158
  4147   200006  FFFF               	dw	65535
  4148                           
  4149                           ;Config register IDLOC4 @ 0x200008
  4150                           ;	unspecified, using default values
  4151   200008                     	org	2097160
  4152   200008  FFFF               	dw	65535
  4153                           
  4154                           ;Config register IDLOC5 @ 0x20000A
  4155                           ;	unspecified, using default values
  4156   20000A                     	org	2097162
  4157   20000A  FFFF               	dw	65535
  4158                           
  4159                           ;Config register IDLOC6 @ 0x20000C
  4160                           ;	unspecified, using default values
  4161   20000C                     	org	2097164
  4162   20000C  FFFF               	dw	65535
  4163                           
  4164                           ;Config register IDLOC7 @ 0x20000E
  4165                           ;	unspecified, using default values
  4166   20000E                     	org	2097166
  4167   20000E  FFFF               	dw	65535
  4168                           
  4169                           	psect	config
  4170                           
  4171                           ;Config register CONFIG1L @ 0x300000
  4172                           ;	External Oscillator mode Selection bits
  4173                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4174                           ;	Power-up default value for COSC bits
  4175                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4176   300000                     	org	3145728
  4177   300000  AA                 	db	170
  4178                           
  4179                           ;Config register CONFIG1H @ 0x300001
  4180                           ;	unspecified, using default values
  4181                           ;	Clock Out Enable bit
  4182                           ;	CLKOUTEN = 0x1, unprogrammed default
  4183                           ;	Clock Switch Enable bit
  4184                           ;	CSWEN = 0x1, unprogrammed default
  4185                           ;	Fail-Safe Clock Monitor Enable bit
  4186                           ;	FCMEN = 0x1, unprogrammed default
  4187   300001                     	org	3145729
  4188   300001  FF                 	db	255
  4189                           
  4190                           ;Config register CONFIG2L @ 0x300002
  4191                           ;	unspecified, using default values
  4192                           ;	Master Clear Enable bit
  4193                           ;	MCLRE = 0x1, unprogrammed default
  4194                           ;	Power-up Timer Enable bit
  4195                           ;	PWRTE = 0x1, unprogrammed default
  4196                           ;	Low-power BOR enable bit
  4197                           ;	LPBOREN = 0x1, unprogrammed default
  4198                           ;	Brown-out Reset Enable bits
  4199                           ;	BOREN = 0x3, unprogrammed default
  4200   300002                     	org	3145730
  4201   300002  FF                 	db	255
  4202                           
  4203                           ;Config register CONFIG2H @ 0x300003
  4204                           ;	unspecified, using default values
  4205                           ;	Brown Out Reset Voltage selection bits
  4206                           ;	BORV = 0x3, unprogrammed default
  4207                           ;	ZCD Disable bit
  4208                           ;	ZCD = 0x1, unprogrammed default
  4209                           ;	PPSLOCK bit One-Way Set Enable bit
  4210                           ;	PPS1WAY = 0x1, unprogrammed default
  4211                           ;	Stack Full/Underflow Reset Enable bit
  4212                           ;	STVREN = 0x1, unprogrammed default
  4213                           ;	Debugger Enable bit
  4214                           ;	DEBUG = 0x1, unprogrammed default
  4215                           ;	Extended Instruction Set Enable bit
  4216                           ;	XINST = 0x1, unprogrammed default
  4217   300003                     	org	3145731
  4218   300003  FF                 	db	255
  4219                           
  4220                           ;Config register CONFIG3L @ 0x300004
  4221                           ;	WDT Period Select bits
  4222                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4223                           ;	WDT operating mode
  4224                           ;	WDTE = OFF, WDT Disabled
  4225   300004                     	org	3145732
  4226   300004  9F                 	db	159
  4227                           
  4228                           ;Config register CONFIG3H @ 0x300005
  4229                           ;	unspecified, using default values
  4230                           ;	WDT Window Select bits
  4231                           ;	WDTCWS = 0x7, unprogrammed default
  4232                           ;	WDT input clock selector
  4233                           ;	WDTCCS = 0x7, unprogrammed default
  4234   300005                     	org	3145733
  4235   300005  FF                 	db	255
  4236                           
  4237                           ;Config register CONFIG4L @ 0x300006
  4238                           ;	unspecified, using default values
  4239                           ;	Write Protection Block 0
  4240                           ;	WRT0 = 0x1, unprogrammed default
  4241                           ;	Write Protection Block 1
  4242                           ;	WRT1 = 0x1, unprogrammed default
  4243                           ;	Write Protection Block 2
  4244                           ;	WRT2 = 0x1, unprogrammed default
  4245                           ;	Write Protection Block 3
  4246                           ;	WRT3 = 0x1, unprogrammed default
  4247                           ;	Write Protection Block 3
  4248                           ;	WRT4 = 0x1, unprogrammed default
  4249                           ;	Write Protection Block 3
  4250                           ;	WRT5 = 0x1, unprogrammed default
  4251                           ;	Write Protection Block 3
  4252                           ;	WRT6 = 0x1, unprogrammed default
  4253                           ;	Write Protection Block 3
  4254                           ;	WRT7 = 0x1, unprogrammed default
  4255   300006                     	org	3145734
  4256   300006  FF                 	db	255
  4257                           
  4258                           ;Config register CONFIG4H @ 0x300007
  4259                           ;	unspecified, using default values
  4260                           ;	Configuration Register Write Protection bit
  4261                           ;	WRTC = 0x1, unprogrammed default
  4262                           ;	Boot Block Write Protection bit
  4263                           ;	WRTB = 0x1, unprogrammed default
  4264                           ;	Data EEPROM Write Protection bit
  4265                           ;	WRTD = 0x1, unprogrammed default
  4266                           ;	Scanner Enable bit
  4267                           ;	SCANE = 0x1, unprogrammed default
  4268                           ;	Low Voltage Programming Enable bit
  4269                           ;	LVP = 0x1, unprogrammed default
  4270   300007                     	org	3145735
  4271   300007  FF                 	db	255
  4272                           
  4273                           ;Config register CONFIG5L @ 0x300008
  4274                           ;	unspecified, using default values
  4275                           ;	UserNVM Program Memory Code Protection bit
  4276                           ;	CP = 0x1, unprogrammed default
  4277                           ;	DataNVM Memory Code Protection bit
  4278                           ;	CPD = 0x1, unprogrammed default
  4279   300008                     	org	3145736
  4280   300008  FF                 	db	255
  4281                           
  4282                           ;Config register CONFIG5H @ 0x300009
  4283                           ;	unspecified, using default values
  4284   300009                     	org	3145737
  4285   300009  FF                 	db	255
  4286                           
  4287                           ;Config register CONFIG6L @ 0x30000A
  4288                           ;	unspecified, using default values
  4289                           ;	Table Read Protection Block 0
  4290                           ;	EBTR0 = 0x1, unprogrammed default
  4291                           ;	Table Read Protection Block 1
  4292                           ;	EBTR1 = 0x1, unprogrammed default
  4293                           ;	Table Read Protection Block 2
  4294                           ;	EBTR2 = 0x1, unprogrammed default
  4295                           ;	Table Read Protection Block 3
  4296                           ;	EBTR3 = 0x1, unprogrammed default
  4297                           ;	Table Read Protection Block 4
  4298                           ;	EBTR4 = 0x1, unprogrammed default
  4299                           ;	Table Read Protection Block 5
  4300                           ;	EBTR5 = 0x1, unprogrammed default
  4301                           ;	Table Read Protection Block 6
  4302                           ;	EBTR6 = 0x1, unprogrammed default
  4303                           ;	Table Read Protection Block 7
  4304                           ;	EBTR7 = 0x1, unprogrammed default
  4305   30000A                     	org	3145738
  4306   30000A  FF                 	db	255
  4307                           
  4308                           ;Config register CONFIG6H @ 0x30000B
  4309                           ;	unspecified, using default values
  4310                           ;	Boot Block Table Read Protection bit
  4311                           ;	EBTRB = 0x1, unprogrammed default
  4312   30000B                     	org	3145739
  4313   30000B  FF                 	db	255
  4314                           tosu	equ	0xFFF
  4315                           tosh	equ	0xFFE
  4316                           tosl	equ	0xFFD
  4317                           stkptr	equ	0xFFC
  4318                           pclatu	equ	0xFFB
  4319                           pclath	equ	0xFFA
  4320                           pcl	equ	0xFF9
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           indf0	equ	0xFEF
  4328                           postinc0	equ	0xFEE
  4329                           postdec0	equ	0xFED
  4330                           preinc0	equ	0xFEC
  4331                           plusw0	equ	0xFEB
  4332                           fsr0h	equ	0xFEA
  4333                           fsr0l	equ	0xFE9
  4334                           wreg	equ	0xFE8
  4335                           indf1	equ	0xFE7
  4336                           postinc1	equ	0xFE6
  4337                           postdec1	equ	0xFE5
  4338                           preinc1	equ	0xFE4
  4339                           plusw1	equ	0xFE3
  4340                           fsr1h	equ	0xFE2
  4341                           fsr1l	equ	0xFE1
  4342                           bsr	equ	0xFE0
  4343                           indf2	equ	0xFDF
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           preinc2	equ	0xFDC
  4347                           plusw2	equ	0xFDB
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        81
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      90
    BANK0           160     67     148
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@read_val(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2601$buffer	PTR unsigned char  size(2) Largest target is 0

    S2601$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[5]), STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 41
		 -> main@display(BANK0[41]), sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    TxBufferedString@string	PTR unsigned char  size(1) Largest target is 41
		 -> main@display(BANK0[41]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0    5336
                                             56 COMRAM     2     2      0
                                              0 BANK0     67    67      0
                    _Interrupts_init
                        _Timer0_init
                   _TxBufferedString
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    3632
                                             31 COMRAM    25    15     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2961
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    2611
                                             14 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     616
                                             15 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     1     0      1     143
                                              5 COMRAM     1     0      1
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      5A       1       95.7%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14A      62        0.0%
DATA                 0      0     14A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 17:16:44 2024

                 _turn180Delay 003F                 _color_read_Red 1520                _color_read_Blue 1610  
              _trail_timer_low 00B8                             l31 16AC                             l53 17D8  
                           l62 165E                             l71 14CC                             l56 18F0  
                           l65 15BE                             l59 156E                             l68 160E  
                 ___awdiv@sign 000A               _trail_timer_high 00CC               _color_read_Clear 15C0  
             _color_read_Green 1570              ??_Interrupts_init 0005                            l144 1408  
                          l242 1884                            l251 19B0                            l260 1732  
                          l245 18AA                            l254 19BA                            l239 182E  
                          l248 19C4                            l257 19A6                            l442 1960  
                          l452 1948                            l614 199A                            l439 1882  
                          l448 1858                            l394 192E                            l565 1910  
                          l872 12CE                            l859 121E                            u900 11AE  
                          u901 11AA                            u910 11CC                            u911 11C8  
                          u920 11E8                            u921 11E4                            u930 120E  
                          u931 120A                            u860 1894                            u940 1232  
                          u861 1890                            u941 122E                            u870 18AA  
                          u950 124C                            u871 18A6                            u951 1248  
                          u880 116E                            u960 1266                            u881 116A  
                          u961 1262                            u890 1188                            u970 1284  
                          u891 1184                            u971 1280                            u980 129A  
                          u981 1296                            u990 12BE                            u991 12BA  
                          _abs 1772                   ___awmod@sign 000A                            wreg 0FE8  
                  _squareDelay 003B                    main@display 0060                           ?_abs 000B  
                         l2200 1220                           l2210 124C                           l2202 1224  
                         l1306 16F0                           l2220 1284                           l2212 1254  
                         l2204 1232                           l2300 0EA4                           l2230 12BE  
                         l2222 129A                           l2214 1266                           l2206 123A  
                         l2310 0F2E                           l2302 0EBC                           l2152 1884  
                         l2160 116E                           l2232 12C6                           l2224 12A2  
                         l2216 126E                           l2208 123E                           l2240 12F0  
                         l2320 0F74                           l2312 0F32                           l2304 0EC6  
                         l2400 14F6                           l1361 17A4                           l1353 1516  
                         l2402 1660                           l2154 1894                           l2410 17C4  
                         l2170 1194                           l2162 1176                           l2226 12A8  
                         l2218 1276                           l2250 1772                           l2242 12FA  
                         l2322 0F86                           l2314 0F44                           l2306 0EDE  
                         l2330 0FCC                           l1354 151E                           l1347 0FC0  
                         l2260 19A2                           l2412 17CE                           l2404 17A6  
                         l2420 13B0                           l2180 11CC                           l2172 119C  
                         l2164 117A                           l2156 115C                           l2228 12AE  
                         l2252 1780                           l2244 1316                           l2236 12D0  
                         l2340 100A                           l2332 0FD4                           l1348 1012  
                         l2324 0F8E                           l2316 0F54                           l2308 0F12  
                         l1373 1378                           l2350 1818                           l2254 19BC  
                         l2262 19B2                           l2406 17AA                           l2270 16F4  
                         l2414 1478                           l2430 13EE                           l2422 13B4  
                         l2190 11F8                           l2182 11D2                           l2174 11AE  
                         l2166 1188                           l2158 1160                           l1358 178C  
                         l2246 1348                           l2238 12E0                           l2326 0FAC  
                         l2318 0F64                           l2510 1038                           l2352 181A  
                         l2344 1806                           l2256 19C0                           l2264 19B6  
                         l2408 17B4                           l2280 1730                           l2272 16F8  
                         l2360 1566                           l2432 13F0                           l2424 13D8  
                         l2416 137A                           l2440 1912                           l2184 11E8  
                         l2176 11B6                           l2192 11FE                           l2168 1190  
                         l1384 19C6                           l2328 0FAE                           l2336 0FE0  
                         l2520 1056                           l2512 103E                           l2504 1014  
                         l2354 181C                           l2346 1810                           l2258 199E  
                         l2274 1700                           l2266 19A8                           l2370 1570  
                         l2434 13FA                           l2426 13E2                           l2418 138A  
                         l2450 192C                           l2442 191C                           l2194 120E  
                         l2186 11F0                           l2178 11BE                           l2338 1002  
                         l2290 0E4A                           l2530 1072                           l2522 105E  
                         l2514 1042                           l2506 102C                           l2460 198E  
                         l2452 18F2                           l2348 1816                           l2356 18D4  
                         l2276 1708                           l2268 19AC                           l2364 1610  
                         l2372 15B6                           l2436 13FC                           l2428 13E4  
                         l2444 191E                           l2196 1216                           l2188 11F2  
                         l2292 0E56                           l2284 0E14                           l2540 109A  
                         l2532 107A                           l2524 1062                           l2516 1046  
                         l2508 102C                           l2454 18FA                           l2382 185C  
                         l2278 172E                           l2366 1656                           l2358 1520  
                         l2438 1406                           l2446 1928                           l2390 194A  
                         l2294 0E5A                           l2286 0E1C                           l2470 16DE  
                         l2462 16AE                           l2550 10B2                           l2542 10A2  
                         l2534 1082                           l2526 1066                           l2518 104E  
                         l2456 18FC                           l2384 186C                           l2480 1840  
                         l2376 15C0                           l2448 192A                           l2296 0E64  
                         l2288 0E42                           l2472 16E8                           l2464 16B6  
                         l2560 10C0                           l2552 10B6                           l2544 10A6  
                         l2536 108A                           l2528 106A                           l2458 190E  
                         l2386 1870                           l2482 1842                           l2378 1606  
                         l2298 0E84                           l2394 14CE                           l2466 16BE  
                         l2570 1104                           l2562 10CE                           l2554 10B8  
                         l2546 10AA                           l2538 1092                           l2388 1880  
                         l2476 1830                           l2484 1930                           l2396 14D2  
                         l2468 16C6                           l2572 1130                           l2564 10D8  
                         l2556 10BA                           l2548 10AE                           l2478 1834  
                         l2486 1944                           l2398 14DE                           l2574 1138  
                         l2566 10DA                           l2558 10BE                           l2576 113C  
                         l2568 10FC                           STR_1 0E01                           STR_3 0E0F  
                         u1000 12E0                           u1001 12DC                           u1010 12F0  
                         u1011 12EC                           u1020 1316                           u1100 0EDA  
                         u1021 1312                           u1101 0ED4                           u1030 1348  
                         u1110 0EDC                           u1031 1344                           u1040 1780  
                         u1120 0F44                           u1200 1516                           u1041 177C  
                         u1121 0F40                           u1201 1512                           u1210 1858  
                         u1050 171C                           u1130 0F54                           u1211 1854  
                         u1051 1714                           u1131 0F50                           u1220 1944  
                         u1140 0F64                           u1221 1940                           u1141 0F60  
                         u1150 0F74                           u1070 0E42                           u1151 0F70  
                         u1071 0E3E                           u1160 0FC0                           u1080 0E84  
                         u1161 0FBC                           u1081 0E80                           u1170 186C  
                         u1090 0EA4                           u1250 10CE                           u1171 1868  
                         u1091 0EA0                           u1251 10CA                           u1068 171E  
                         u1180 195E                           u1260 10EC                           u1181 1958  
                         u1261 10E4                           u1190 1960                   _BAUD4CONbits 0EE9  
                         u1347 101E                           u1357 1146                           u1278 10EE  
                         u1367 17BA                           _T2PR 0FBC                           abs@a 000B  
                         _dbuf 013C                           _main 1014                           _prec 0053  
                         _nout 004F                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005B                           start 0074         __end_of_color_read_Red 1570  
              __end_of_HighISR 0074                   ___param_bank 0000                          ??_abs 000D  
                        ?_main 0001             _timer_high_pointer 004A                __end_of___awdiv 1220  
              __end_of___awmod 12D0                ___awdiv@divisor 0007                          i2l442 1978  
                        i2l435 1804                          i2l428 18D0                          i2l621 0022  
                        i2l622 0052                          i2l625 0068                          i2l619 0024  
              ___awdiv@counter 0009                   vfpfcnvrt@cnt 0014                   vfpfcnvrt@fmt 0010  
                        _TMR0H 0FD4                          _TMR0L 0FD3                   main@read_val 009B  
   __end_of_I2C_2_Master_Start 19C6     __end_of_I2C_2_Master_Write 19A8                    _turningGear 004B  
                        _flags 0055                          _fputc 12D0                          _width 0051  
                        _putch 19C6              _turnRight135Delay 0041                          tablat 0FF5  
              _turnLeft90Delay 0047                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 0FD8                          wtemp8 005C  
              __end_of_sprintf 16F2        __end_of_color_read_Blue 1660          _I2C_2_Master_RepStart 19A8  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                __initialization 140A  
                 __end_of_main 115C                i2_isDataInTxBuf 1962             putCharToTxBuf@byte 0005  
                       ??_main 0039                  __activetblptr 0003                         ?_fputc 0005  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0005                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RD6PPS 0E70  
                       _RE4PPS 0E76                         i2l2500 17EE                         i2l1900 1962  
                       i2l2612 0032                         i2l2614 003A                         i2l2606 0012  
                       i2l2616 004E                         i2l2490 18BE                         i2l2618 0062  
                       i2l2492 18C2                         i2l2494 18CE                         i2l2496 17DA  
                       i2l2488 18AE                         i2l2498 17EA                         _RG6PPS 0E88  
                vfpfcnvrt@done 0013                      ??_HighISR 0003       __end_of_color_click_init 17DA  
                       _RX4PPS 0E15                         _TX4REG 0EE4               _turnLeft135Delay 0043  
                ??_Timer0_init 0005                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001F  
             _getCharFromTxBuf 17DA                      ??___awdiv 0009                      ??___awmod 0009  
                       clear_0 1450                         clear_1 145C                         clear_2 1468  
             ___awdiv@quotient 000B                ___awmod@divisor 0007                         isa$std 0001  
              ___awmod@counter 0009                         fputc@c 0005              ?_TxBufferedString 0006  
                 __pdataCOMRAM 003B              _timer_low_pointer 0049                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
           ??_TxBufferedString 0007                         putch@c 0001               __end_of_vfprintf 1520  
            ??_initDCmotorsPWM 0007                      ??_sprintf 002A              _buggy_lights_init 1660  
        __end_of_isDataInTxBuf 1962                     __accesstop 0060        __end_of__initialization 146E  
     __end_of_color_read_Clear 1610       __end_of_color_read_Green 15C0         ?_I2C_2_Master_RepStart 0001  
      __end_ofi2_isDataInTxBuf 197A             ?_buggy_lights_init 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0009                _Interrupts_init 198E                 __pcstackCOMRAM 0001  
                 __pidataBANK0 1734            ??_buggy_lights_init 0005                  __end_of_fputc 137A  
                __end_of_putch 19C8            __end_of_Timer0_init 1912                        ??_fputc 0008  
    __end_of_buggy_lights_init 16AE                        ??_putch 0005                     __pbssBANK0 00E0  
                   __pbssBANK1 0100                     _getRGBCval 1478              _color_writetoaddr 18D2  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0007            ??_color_writetoaddr 0008  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        i2u62_40 1976  
                      i2u62_41 1970                        i2u63_40 1978                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5        __end_of_Interrupts_init 199C         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008      __end_of_color_writetoaddr 18F2  
             ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 19BC                     _initUSART4 1912  
           _I2C_2_Master_Write 199C                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                    _Timer0_init 18F2                        ___awdiv 115C  
                      ___awmod 1220            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 001C                   __psmallconst 0E00                        __pcinit 140A  
                      __ramtop 0E00                        __ptext0 1014                        __ptext1 16AE  
                      __ptext2 14CE                        __ptext3 0E14                        __ptext4 12D0  
                      __ptext5 19C6                        __ptext6 1772                        __ptext7 1220  
                      __ptext8 115C                        __ptext9 1930                      _T2CONbits 0FBD  
             ___awmod@dividend 0005                      _T2HLTbits 0FBE                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 1806                        _sprintf 16AE           ??_I2C_2_Master_Start 0006  
         ??_I2C_2_Master_Write 0006           end_of_initialization 146E              __end_of_sendTxBuf 194A  
                  ?_getRGBCval 0010                        fputc@fp 0007              ?_color_click_init 0001  
           ??_color_click_init 0009              __end_of_vfpfcnvrt 1014                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0017                     ??_vfprintf 001F  
              _initDCmotorsPWM 137A                      _PORTFbits 0F8E                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00E0  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
                   main@motorL 0089                     main@motorR 0092             ??_color_read_Clear 000B  
           ??_color_read_Green 000B                    vfpfcnvrt@ap 0011                    vfpfcnvrt@cp 0016  
                  vfpfcnvrt@fp 000F                  __pidataCOMRAM 197A            color_read_Clear@tmp 000E  
          start_initialization 140A                    __end_of_abs 17A6                  _TxBufWriteCnt 0058  
             _turnRight90Delay 0045            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 140A  
                  vfprintf@fmt 001D                 _putCharToRxBuf 18AC                 _putCharToTxBuf 185A  
                  __pdataBANK0 00A3                    __pbssCOMRAM 004F                  __pcstackBANK0 0060  
                    _backtrack 0056                       ?_HighISR 0001                   ?_Timer0_init 0001  
       __end_of_putCharToRxBuf 18D2         __end_of_putCharToTxBuf 1884                      __pintcode 0008  
                     ?___awdiv 0005                       ?___awmod 0005         TxBufferedString@string 0006  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 1884              _I2C_2_Master_Init 1806              _I2C_2_Master_Read 16F2  
            _I2C_2_Master_Stop 19B2                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _headbuttDelay 003D       initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 0020  
            ?_getCharFromTxBuf 0001                      _rampDelay 004E             ??_getCharFromTxBuf 0001  
                 ??_getRGBCval 0011            ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0006  
                     _LATCbits 0F7B                  _isDataInTxBuf 194A                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E               _TxBufferedString 1830  
                     _LATGbits 0F7F                       _LATHbits 0F80                      _sendTxBuf 1930  
                     _PIE0bits 0E29                       _PIE4bits 0E2D                       i2u130_40 0022  
                     i2u130_41 001E                       i2u123_40 18BE                       i2u131_40 0032  
                     i2u123_41 18BA                       i2u131_41 002E                       i2u124_40 17EA  
                     i2u132_40 004E                       i2u124_41 17E6                       i2u132_41 004A  
                     i2u133_40 0062                       i2u133_41 005E                       _PIR0bits 0E33  
                     _PIR4bits 0E37                ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005  
              ?_putCharToTxBuf 0001                       _SSP2CON2 0EDA                       _SSP2STAT 0ED8  
                    _vfpfcnvrt 0E14      __end_of_I2C_2_Master_Idle 18AC      __end_of_I2C_2_Master_Init 1830  
    __end_of_I2C_2_Master_Read 1734      __end_of_I2C_2_Master_Stop 19BC    I2C_2_Master_Write@data_byte 0006  
           __end_of_getRGBCval 14CE              ??_color_read_Blue 000B                   _TxBufReadCnt 0057  
                   vfpfcnvrt@c 001B                      copy_data0 141E                      copy_data1 143E  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 19B2             color_read_Blue@tmp 000E  
                   ?_sendTxBuf 0001                   ??_initUSART4 0005                       __Hrparam 0000  
                   vfprintf@ap 001E                       __Lrparam 0000                     vfprintf@fp 001C  
                   ?_vfpfcnvrt 000F                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 0021                     sprintf@ret 002A                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6             __end_of_initUSART4 1930                       __ptext10 194A  
                     __ptext11 1912                       __ptext20 17A6                       __ptext12 137A  
                     __ptext21 18D2                       __ptext13 1478                       __ptext30 18F2  
                     __ptext22 199C                       __ptext14 1520                       __ptext31 198E  
                     __ptext23 19B2                       __ptext15 1570                       __ptext24 19BC  
                     __ptext16 15C0                       __ptext33 1962                       __ptext25 1884  
                     __ptext17 1610                       __ptext34 18AC                       __ptext26 1806  
                     __ptext18 19A8                       __ptext35 17DA                       __ptext27 1660  
                     __ptext19 16F2                       __ptext28 1830                       __ptext29 185A  
                  getRGBCval@p 0010                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005B  
                     _vfprintf 14CE                     _INTCONbits 0FF2              ??i2_isDataInTxBuf 0001  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 002C  
                 _topGearRight 004C              _manoeuvre_pointer 00A3                    ??_sendTxBuf 0005  
                  ??_vfpfcnvrt 0012               _color_click_init 17A6                    _topGearLeft 004D  
     __end_of_TxBufferedString 185A                       sprintf@f 002D                       sprintf@s 0020  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                _trail_manoeuvre 00A4  
                   _TX4STAbits 0EE8               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
