

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 11:02:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Generated 18/08/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F67K40 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataBANK0
    79   0014B6                     __pidataBANK0:
    80                           	callstack 0
    81                           
    82                           ;initializer for _squareDelay
    83   0014B6  012C               	dw	300
    84                           
    85                           ;initializer for _headbuttDelay
    86   0014B8  0046               	dw	70
    87                           
    88                           ;initializer for _turn180Delay
    89   0014BA  01FE               	dw	510
    90                           
    91                           ;initializer for _turnRight135Delay
    92   0014BC  012C               	dw	300
    93                           
    94                           ;initializer for _turnLeft135Delay
    95   0014BE  012C               	dw	300
    96                           
    97                           ;initializer for _turnRight90Delay
    98   0014C0  00AF               	dw	175
    99                           
   100                           ;initializer for _turnLeft90Delay
   101   0014C2  00AF               	dw	175
   102                           
   103                           ;initializer for _manoeuvre_pointer
   104   0014C4  75                 	db	low _trail_manoeuvre
   105                           
   106                           ;initializer for _timer_low_pointer
   107   0014C5  89                 	db	low _trail_timer_low
   108                           
   109                           ;initializer for _timer_high_pointer
   110   0014C6  9D                 	db	low _trail_timer_high
   111                           
   112                           ;initializer for _turningGear
   113   0014C7  2A                 	db	42
   114                           
   115                           ;initializer for _topGearRight
   116   0014C8  14                 	db	20
   117                           
   118                           ;initializer for _topGearLeft
   119   0014C9  14                 	db	20
   120                           
   121                           ;initializer for _rampDelay
   122   0014CA  08                 	db	8
   123                           
   124                           ;initializer for _trail_manoeuvre
   125   0014CB  01                 	db	1
   126   0014CC  02                 	db	2
   127   0014CD  03                 	db	3
   128   0014CE  04                 	db	4
   129   0014CF  05                 	db	5
   130   0014D0  06                 	db	6
   131   0014D1  07                 	db	7
   132   0014D2  08                 	db	8
   133   0014D3  09                 	db	9
   134   0014D4  00                 	db	0
   135   0014D5  01                 	db	1
   136   0014D6  02                 	db	2
   137   0014D7  03                 	db	3
   138   0014D8  04                 	db	4
   139   0014D9  05                 	db	5
   140   0014DA  06                 	db	6
   141   0014DB  07                 	db	7
   142   0014DC  08                 	db	8
   143   0014DD  09                 	db	9
   144   0014DE  00                 	db	0
   145                           
   146                           ;initializer for _trail_timer_low
   147   0014DF  01                 	db	1
   148   0014E0  02                 	db	2
   149   0014E1  03                 	db	3
   150   0014E2  04                 	db	4
   151   0014E3  05                 	db	5
   152   0014E4  06                 	db	6
   153   0014E5  07                 	db	7
   154   0014E6  08                 	db	8
   155   0014E7  09                 	db	9
   156   0014E8  00                 	db	0
   157   0014E9  01                 	db	1
   158   0014EA  02                 	db	2
   159   0014EB  03                 	db	3
   160   0014EC  04                 	db	4
   161   0014ED  05                 	db	5
   162   0014EE  06                 	db	6
   163   0014EF  07                 	db	7
   164   0014F0  08                 	db	8
   165   0014F1  09                 	db	9
   166   0014F2  00                 	db	0
   167                           
   168                           ;initializer for _trail_timer_high
   169   0014F3  01                 	db	1
   170   0014F4  02                 	db	2
   171   0014F5  03                 	db	3
   172   0014F6  04                 	db	4
   173   0014F7  05                 	db	5
   174   0014F8  06                 	db	6
   175   0014F9  07                 	db	7
   176   0014FA  08                 	db	8
   177   0014FB  09                 	db	9
   178   0014FC  00                 	db	0
   179   0014FD  01                 	db	1
   180   0014FE  02                 	db	2
   181   0014FF  03                 	db	3
   182   001500  04                 	db	4
   183   001501  05                 	db	5
   184   001502  06                 	db	6
   185   001503  07                 	db	7
   186   001504  08                 	db	8
   187   001505  09                 	db	9
   188   001506  00                 	db	0
   189   000000                     _TX4REG	set	3812
   190   000000                     _RC4STAbits	set	3815
   191   000000                     _SP4BRGH	set	3814
   192   000000                     _LATEbits	set	3965
   193   000000                     _TRISEbits	set	3973
   194   000000                     _LATGbits	set	3967
   195   000000                     _TRISGbits	set	3975
   196   000000                     _LATFbits	set	3966
   197   000000                     _LATHbits	set	3968
   198   000000                     _TRISFbits	set	3974
   199   000000                     _TRISHbits	set	3976
   200   000000                     _SSP2CON2bits	set	3802
   201   000000                     _RX4PPS	set	3605
   202   000000                     _SSP2CLKPPS	set	3612
   203   000000                     _SSP2DATPPS	set	3613
   204   000000                     _RC7PPS	set	3689
   205   000000                     _RE2PPS	set	3700
   206   000000                     _LATAbits	set	3961
   207   000000                     _LATDbits	set	3964
   208   000000                     _TRISDbits	set	3972
   209   000000                     _PORTFbits	set	3982
   210   000000                     _T2PR	set	4028
   211   000000                     _T2CONbits	set	4029
   212   000000                     _CCPR2H	set	4006
   213   000000                     _CCPR1H	set	4010
   214   000000                     _TRISCbits	set	3971
   215   000000                     _TRISAbits	set	3969
   216   000000                     _LATCbits	set	3963
   217   000000                     _RE4PPS	set	3702
   218   000000                     _RG6PPS	set	3720
   219   000000                     _RD5PPS	set	3695
   220   000000                     _ANSELDbits	set	3751
   221   000000                     _SSP2ADD	set	3798
   222   000000                     _SSP2CON1bits	set	3801
   223   000000                     _CCPR4H	set	3873
   224   000000                     _CCPR3H	set	3877
   225   000000                     _TMR0L	set	4051
   226   000000                     _TMR0H	set	4052
   227   000000                     _T0CON0bits	set	4053
   228   000000                     _T0CON1bits	set	4054
   229   000000                     _T2CLKCONbits	set	4031
   230   000000                     _T2HLTbits	set	4030
   231   000000                     _CCP1CONbits	set	4011
   232   000000                     _CCPTMRS0bits	set	4013
   233   000000                     _CCP2CONbits	set	4007
   234   000000                     _CCP3CONbits	set	3878
   235   000000                     _CCP4CONbits	set	3874
   236   000000                     _RC4REG	set	3811
   237   000000                     _SP4BRGL	set	3813
   238   000000                     _TX4STAbits	set	3816
   239   000000                     _BAUD4CONbits	set	3817
   240   000000                     _SSP2CON2	set	3802
   241   000000                     _SSP2STAT	set	3800
   242   000000                     _ANSELFbits	set	3764
   243   000000                     _SSP2BUF	set	3797
   244   000000                     _PIE0bits	set	3625
   245   000000                     _PIE4bits	set	3629
   246   000000                     _PIR4bits	set	3639
   247   000000                     _RC0PPS	set	3682
   248   000000                     _RD6PPS	set	3696
   249   000000                     _PIR0bits	set	3635
   250   000000                     _INTCONbits	set	4082
   251                           
   252                           	psect	smallconst
   253   000E00                     __psmallconst:
   254                           	callstack 0
   255   000E00  00                 	db	0
   256   000E01                     STR_1:
   257                           
   258                           ; BSR set to: 14
   259   000E01  25                 	db	37
   260   000E02  64                 	db	100	;'d'
   261   000E03  20                 	db	32
   262   000E04  0D                 	db	13
   263   000E05  00                 	db	0
   264   000E06                     STR_2:
   265                           
   266                           ; BSR set to: 14
   267   000E06  25                 	db	37
   268   000E07  64                 	db	100	;'d'
   269   000E08  00                 	db	0
   270   000E09  00                 	db	0	; dummy byte at the end
   271   000000                     
   272                           ; #config settings
   273                           
   274                           	psect	cinit
   275   001556                     __pcinit:
   276                           	callstack 0
   277   001556                     start_initialization:
   278                           	callstack 0
   279   001556                     __initialization:
   280                           	callstack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (81 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284   001556  0EB6               	movlw	low __pidataBANK0
   285   001558  6EF6               	movwf	tblptrl,c
   286   00155A  0E14               	movlw	high __pidataBANK0
   287   00155C  6EF7               	movwf	tblptrh,c
   288   00155E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289   001560  6EF8               	movwf	tblptru,c
   290   001562  EE00  F060         	lfsr	0,__pdataBANK0
   291   001566  EE10 F051          	lfsr	1,81
   292   00156A                     copy_data0:
   293   00156A  0009               	tblrd		*+
   294   00156C  CFF5 FFEE          	movff	tablat,postinc0
   295   001570  50E5               	movf	postdec1,w,c
   296   001572  50E1               	movf	fsr1l,w,c
   297   001574  E1FA               	bnz	copy_data0
   298                           
   299                           ; Clear objects allocated to BANK1 (60 bytes)
   300   001576  EE01  F000         	lfsr	0,__pbssBANK1
   301   00157A  0E3C               	movlw	60
   302   00157C                     clear_0:
   303   00157C  6AEE               	clrf	postinc0,c
   304   00157E  06E8               	decf	wreg,f,c
   305   001580  E1FD               	bnz	clear_0
   306                           
   307                           ; Clear objects allocated to BANK0 (62 bytes)
   308   001582  EE00  F0B1         	lfsr	0,__pbssBANK0
   309   001586  0E3E               	movlw	62
   310   001588                     clear_1:
   311   001588  6AEE               	clrf	postinc0,c
   312   00158A  06E8               	decf	wreg,f,c
   313   00158C  E1FD               	bnz	clear_1
   314                           
   315                           ; Clear objects allocated to COMRAM (2 bytes)
   316   00158E  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   317   001590  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   318   001592                     end_of_initialization:
   319                           	callstack 0
   320   001592                     __end_of__initialization:
   321                           	callstack 0
   322   001592  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   323   001594  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   324   001596  0100               	movlb	0
   325   001598  EF00  F008         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMRAM
   328   00005D                     __pbssCOMRAM:
   329                           	callstack 0
   330   00005D                     _TxBufReadCnt:
   331                           	callstack 0
   332   00005D                     	ds	1
   333   00005E                     _TxBufWriteCnt:
   334                           	callstack 0
   335   00005E                     	ds	1
   336                           
   337                           	psect	bssBANK0
   338   0000B1                     __pbssBANK0:
   339                           	callstack 0
   340   0000B1                     _dbuf:
   341                           	callstack 0
   342   0000B1                     	ds	32
   343   0000D1                     _EUSART4RXbuf:
   344                           	callstack 0
   345   0000D1                     	ds	20
   346   0000E5                     _nout:
   347                           	callstack 0
   348   0000E5                     	ds	2
   349   0000E7                     _width:
   350                           	callstack 0
   351   0000E7                     	ds	2
   352   0000E9                     _prec:
   353                           	callstack 0
   354   0000E9                     	ds	2
   355   0000EB                     _flags:
   356                           	callstack 0
   357   0000EB                     	ds	1
   358   0000EC                     _backtrack:
   359                           	callstack 0
   360   0000EC                     	ds	1
   361   0000ED                     _RxBufReadCnt:
   362                           	callstack 0
   363   0000ED                     	ds	1
   364   0000EE                     _RxBufWriteCnt:
   365                           	callstack 0
   366   0000EE                     	ds	1
   367                           
   368                           	psect	dataBANK0
   369   000060                     __pdataBANK0:
   370                           	callstack 0
   371   000060                     _squareDelay:
   372                           	callstack 0
   373   000060                     	ds	2
   374   000062                     _headbuttDelay:
   375                           	callstack 0
   376   000062                     	ds	2
   377   000064                     _turn180Delay:
   378                           	callstack 0
   379   000064                     	ds	2
   380   000066                     _turnRight135Delay:
   381                           	callstack 0
   382   000066                     	ds	2
   383   000068                     _turnLeft135Delay:
   384                           	callstack 0
   385   000068                     	ds	2
   386   00006A                     _turnRight90Delay:
   387                           	callstack 0
   388   00006A                     	ds	2
   389   00006C                     _turnLeft90Delay:
   390                           	callstack 0
   391   00006C                     	ds	2
   392   00006E                     _manoeuvre_pointer:
   393                           	callstack 0
   394   00006E                     	ds	1
   395   00006F                     _timer_low_pointer:
   396                           	callstack 0
   397   00006F                     	ds	1
   398   000070                     _timer_high_pointer:
   399                           	callstack 0
   400   000070                     	ds	1
   401   000071                     _turningGear:
   402                           	callstack 0
   403   000071                     	ds	1
   404   000072                     _topGearRight:
   405                           	callstack 0
   406   000072                     	ds	1
   407   000073                     _topGearLeft:
   408                           	callstack 0
   409   000073                     	ds	1
   410   000074                     _rampDelay:
   411                           	callstack 0
   412   000074                     	ds	1
   413   000075                     _trail_manoeuvre:
   414                           	callstack 0
   415   000075                     	ds	20
   416   000089                     _trail_timer_low:
   417                           	callstack 0
   418   000089                     	ds	20
   419   00009D                     _trail_timer_high:
   420                           	callstack 0
   421   00009D                     	ds	20
   422                           
   423                           	psect	bssBANK1
   424   000100                     __pbssBANK1:
   425                           	callstack 0
   426   000100                     _EUSART4TXbuf:
   427                           	callstack 0
   428   000100                     	ds	60
   429                           
   430                           	psect	cstackCOMRAM
   431   000001                     __pcstackCOMRAM:
   432                           	callstack 0
   433   000001                     ??_I2C_2_Master_Idle:
   434   000001                     ?___awdiv:
   435                           	callstack 0
   436   000001                     ?___awmod:
   437                           	callstack 0
   438   000001                     sendCharSerial4@charToSend:
   439                           	callstack 0
   440   000001                     initDCmotorsPWM@PWMperiod:
   441                           	callstack 0
   442   000001                     ___awdiv@dividend:
   443                           	callstack 0
   444   000001                     ___awmod@dividend:
   445                           	callstack 0
   446   000001                     fputc@c:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x0
   450   000001                     	ds	1
   451   000002                     I2C_2_Master_Write@data_byte:
   452                           	callstack 0
   453   000002                     sendStringSerial4@string:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x1
   457   000002                     	ds	1
   458   000003                     color_writetoaddr@value:
   459                           	callstack 0
   460   000003                     fputc@fp:
   461                           	callstack 0
   462   000003                     ___awdiv@divisor:
   463                           	callstack 0
   464   000003                     ___awmod@divisor:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468   000003                     	ds	1
   469   000004                     ??_fputc:
   470   000004                     color_writetoaddr@address:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x3
   474   000004                     	ds	1
   475   000005                     ??_color_click_init:
   476   000005                     ___awdiv@counter:
   477                           	callstack 0
   478   000005                     ___awmod@counter:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x4
   482   000005                     	ds	1
   483   000006                     ___awdiv@sign:
   484                           	callstack 0
   485   000006                     ___awmod@sign:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x5
   489   000006                     	ds	1
   490   000007                     ?_abs:
   491                           	callstack 0
   492   000007                     ___awdiv@quotient:
   493                           	callstack 0
   494   000007                     abs@a:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x6
   498   000007                     	ds	2
   499   000009                     ??_abs:
   500                           
   501                           ; 1 bytes @ 0x8
   502   000009                     	ds	2
   503   00000B                     ?_vfpfcnvrt:
   504                           	callstack 0
   505   00000B                     vfpfcnvrt@fp:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xA
   509   00000B                     	ds	1
   510   00000C                     vfpfcnvrt@fmt:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xB
   514   00000C                     	ds	1
   515   00000D                     vfpfcnvrt@ap:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0xC
   519   00000D                     	ds	1
   520   00000E                     ??_vfpfcnvrt:
   521                           
   522                           ; 1 bytes @ 0xD
   523   00000E                     	ds	1
   524   00000F                     vfpfcnvrt@done:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0xE
   528   00000F                     	ds	1
   529   000010                     vfpfcnvrt@cnt:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0xF
   533   000010                     	ds	2
   534   000012                     vfpfcnvrt@cp:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x11
   538   000012                     	ds	1
   539   000013                     vfpfcnvrt@convarg:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x12
   543   000013                     	ds	4
   544   000017                     vfpfcnvrt@c:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x16
   548   000017                     	ds	1
   549   000018                     ?_vfprintf:
   550                           	callstack 0
   551   000018                     vfprintf@fp:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x17
   555   000018                     	ds	1
   556   000019                     vfprintf@fmt:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x18
   560   000019                     	ds	1
   561   00001A                     vfprintf@ap:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x19
   565   00001A                     	ds	1
   566   00001B                     vfprintf@cfmt:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x1A
   570   00001B                     	ds	1
   571   00001C                     ?_sprintf:
   572                           	callstack 0
   573   00001C                     sprintf@s:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x1B
   577   00001C                     	ds	1
   578   00001D                     sprintf@fmt:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1C
   582   00001D                     	ds	3
   583   000020                     sprintf@ret:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x1F
   587   000020                     	ds	2
   588   000022                     sprintf@ap:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x21
   592   000022                     	ds	1
   593   000023                     sprintf@f:
   594                           	callstack 0
   595                           
   596                           ; 12 bytes @ 0x22
   597   000023                     	ds	12
   598   00002F                     sendArraySerial4@arr:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x2E
   602   00002F                     	ds	1
   603   000030                     ??_sendArraySerial4:
   604                           
   605                           ; 1 bytes @ 0x2F
   606   000030                     	ds	1
   607   000031                     sendArraySerial4@tempStr:
   608                           	callstack 0
   609                           
   610                           ; 21 bytes @ 0x30
   611   000031                     	ds	21
   612   000046                     sendArraySerial4@index:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x45
   616   000046                     	ds	1
   617   000047                     sendArraySerial4@i:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x46
   621   000047                     	ds	2
   622   000049                     ??_main:
   623                           
   624                           ; 1 bytes @ 0x48
   625   000049                     	ds	2
   626   00004B                     main@motorL:
   627                           	callstack 0
   628                           
   629                           ; 9 bytes @ 0x4A
   630   00004B                     	ds	9
   631   000054                     main@motorR:
   632                           	callstack 0
   633                           
   634                           ; 9 bytes @ 0x53
   635   000054                     	ds	9
   636                           
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 26 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  motorR          9   83[COMRAM] struct DC_motor
   647 ;;  motorL          9   74[COMRAM] struct DC_motor
   648 ;;  PWMcycle        2    0        unsigned int 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;Total ram usage:       20 bytes
   663 ;; Hardware stack levels required when called: 7
   664 ;; This function calls:
   665 ;;		_Timer0_init
   666 ;;		_buggy_lights_init
   667 ;;		_color_click_init
   668 ;;		_initDCmotorsPWM
   669 ;;		_initUSART4
   670 ;;		_sendArraySerial4
   671 ;; This function is called by:
   672 ;;		Startup code after reset
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text0
   677   001000                     __ptext0:
   678                           	callstack 0
   679   001000                     _main:
   680                           	callstack 24
   681   001000                     
   682                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   683   001000  0E52               	movlw	82
   684   001002  6E4A               	movwf	(??_main+1)^0,c
   685   001004  0E2B               	movlw	43
   686   001006  6E49               	movwf	??_main^0,c
   687   001008  0E00               	movlw	0
   688   00100A                     u1887:
   689   00100A  2EE8               	decfsz	wreg,f,c
   690   00100C  D7FE               	bra	u1887
   691   00100E  2E49               	decfsz	??_main^0,f,c
   692   001010  D7FC               	bra	u1887
   693   001012  2E4A               	decfsz	(??_main+1)^0,f,c
   694   001014  D7FA               	bra	u1887
   695   001016  D000               	nop2	
   696   001018                     
   697                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   698   001018  0E00               	movlw	0
   699   00101A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   700   00101C  0E63               	movlw	99
   701   00101E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   702   001020  EC84  F009         	call	_initDCmotorsPWM	;wreg free
   703   001024                     
   704                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   705   001024  0E00               	movlw	0
   706   001026  6E4B               	movwf	main@motorL^0,c
   707   001028                     
   708                           ;main.c: 35:     motorL.direction = 1;
   709   001028  0E01               	movlw	1
   710   00102A  6E4C               	movwf	(main@motorL+1)^0,c
   711   00102C                     
   712                           ;main.c: 36:     motorL.brakemode = 1;
   713   00102C  0E01               	movlw	1
   714   00102E  6E4D               	movwf	(main@motorL+2)^0,c
   715   001030                     
   716                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   717   001030  0E00               	movlw	0
   718   001032  6E4F               	movwf	(main@motorL+4)^0,c
   719   001034  0E63               	movlw	99
   720   001036  6E4E               	movwf	(main@motorL+3)^0,c
   721   001038                     
   722                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   723   001038  0EAA               	movlw	170
   724   00103A  6E50               	movwf	(main@motorL+5)^0,c
   725   00103C  0E0F               	movlw	15
   726   00103E  6E51               	movwf	(main@motorL+6)^0,c
   727   001040                     
   728                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   729   001040  0EA6               	movlw	166
   730   001042  6E52               	movwf	(main@motorL+7)^0,c
   731   001044  0E0F               	movlw	15
   732   001046  6E53               	movwf	(main@motorL+8)^0,c
   733   001048                     
   734                           ;main.c: 41:     motorR.power = 0;
   735   001048  0E00               	movlw	0
   736   00104A  6E54               	movwf	main@motorR^0,c
   737   00104C                     
   738                           ;main.c: 42:     motorR.direction = 1;
   739   00104C  0E01               	movlw	1
   740   00104E  6E55               	movwf	(main@motorR+1)^0,c
   741   001050                     
   742                           ;main.c: 43:     motorR.brakemode = 1;
   743   001050  0E01               	movlw	1
   744   001052  6E56               	movwf	(main@motorR+2)^0,c
   745   001054                     
   746                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   747   001054  0E00               	movlw	0
   748   001056  6E58               	movwf	(main@motorR+4)^0,c
   749   001058  0E63               	movlw	99
   750   00105A  6E57               	movwf	(main@motorR+3)^0,c
   751   00105C                     
   752                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   753   00105C  0E25               	movlw	37
   754   00105E  6E59               	movwf	(main@motorR+5)^0,c
   755   001060  0E0F               	movlw	15
   756   001062  6E5A               	movwf	(main@motorR+6)^0,c
   757   001064                     
   758                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   759   001064  0E21               	movlw	33
   760   001066  6E5B               	movwf	(main@motorR+7)^0,c
   761   001068  0E0F               	movlw	15
   762   00106A  6E5C               	movwf	(main@motorR+8)^0,c
   763   00106C                     
   764                           ;main.c: 48:     buggy_lights_init();
   765   00106C  EC84  F00A         	call	_buggy_lights_init	;wreg free
   766   001070                     
   767                           ;main.c: 49:     color_click_init();
   768   001070  EC0A  F00B         	call	_color_click_init	;wreg free
   769   001074                     
   770                           ;main.c: 50:     initUSART4();
   771   001074  EC71  F00B         	call	_initUSART4	;wreg free
   772   001078                     
   773                           ;main.c: 51:     Timer0_init();
   774   001078  EC4D  F00B         	call	_Timer0_init	;wreg free
   775   00107C                     
   776                           ;main.c: 55:     TRISFbits.TRISF2 = 1;
   777   00107C  8486               	bsf	134,2,c	;volatile
   778   00107E                     
   779                           ;main.c: 56:     TRISFbits.TRISF3 = 1;
   780   00107E  8686               	bsf	134,3,c	;volatile
   781   001080                     
   782                           ;main.c: 58:     ANSELFbits.ANSELF2 = 0;
   783   001080  010E               	movlb	14	; () banked
   784   001082  95B4               	bcf	180,2,b	;volatile
   785   001084                     
   786                           ; BSR set to: 14
   787                           ;main.c: 59:     ANSELFbits.ANSELF3 = 0;
   788   001084  97B4               	bcf	180,3,b	;volatile
   789   001086                     l2662:
   790                           
   791                           ;main.c: 75:         if (!PORTFbits.RF2) {
   792   001086  B48E               	btfsc	142,2,c	;volatile
   793   001088  EF48  F008         	goto	u1411
   794   00108C  EF4A  F008         	goto	u1410
   795   001090                     u1411:
   796   001090  EF61  F008         	goto	l2670
   797   001094                     u1410:
   798   001094                     
   799                           ;main.c: 76:             *manoeuvre_pointer = 0;
   800   001094  0100               	movlb	0	; () banked
   801   001096  516E               	movf	_manoeuvre_pointer& (0+255),w,b
   802   001098  6ED9               	movwf	fsr2l,c
   803   00109A  6ADA               	clrf	fsr2h,c
   804   00109C  6ADF               	clrf	indf2,c
   805   00109E                     
   806                           ; BSR set to: 0
   807                           ;main.c: 77:             manoeuvre_pointer ++;
   808   00109E  2B6E               	incf	_manoeuvre_pointer& (0+255),f,b
   809   0010A0                     
   810                           ; BSR set to: 0
   811                           ;main.c: 78:             LATDbits.LATD7 = !LATDbits.LATD7;
   812   0010A0  AE7C               	btfss	124,7,c	;volatile
   813   0010A2  EF55  F008         	goto	u1421
   814   0010A6  EF59  F008         	goto	u1420
   815   0010AA                     u1421:
   816   0010AA  6A49               	clrf	??_main^0,c
   817   0010AC  2A49               	incf	??_main^0,f,c
   818   0010AE  EF5A  F008         	goto	u1438
   819   0010B2                     u1420:
   820   0010B2  6A49               	clrf	??_main^0,c
   821   0010B4                     u1438:
   822   0010B4  3249               	rrcf	??_main^0,f,c
   823   0010B6  3249               	rrcf	??_main^0,f,c
   824   0010B8  507C               	movf	124,w,c	;volatile
   825   0010BA  1849               	xorwf	??_main^0,w,c
   826   0010BC  0B7F               	andlw	-129
   827   0010BE  1849               	xorwf	??_main^0,w,c
   828   0010C0  6E7C               	movwf	124,c	;volatile
   829   0010C2                     l2670:
   830                           
   831                           ;main.c: 80:         sendArraySerial4(trail_manoeuvre);
   832   0010C2  0E75               	movlw	low _trail_manoeuvre
   833   0010C4  6E2F               	movwf	sendArraySerial4@arr^0,c
   834   0010C6  ECCC  F009         	call	_sendArraySerial4	;wreg free
   835   0010CA                     
   836                           ;main.c: 81:         _delay((unsigned long)((500)*(64000000/4000.0)));
   837   0010CA  0E29               	movlw	41
   838   0010CC  6E4A               	movwf	(??_main+1)^0,c
   839   0010CE  0E96               	movlw	150
   840   0010D0  6E49               	movwf	??_main^0,c
   841   0010D2  0E7F               	movlw	127
   842   0010D4                     u1897:
   843   0010D4  2EE8               	decfsz	wreg,f,c
   844   0010D6  D7FE               	bra	u1897
   845   0010D8  2E49               	decfsz	??_main^0,f,c
   846   0010DA  D7FC               	bra	u1897
   847   0010DC  2E4A               	decfsz	(??_main+1)^0,f,c
   848   0010DE  D7FA               	bra	u1897
   849   0010E0  0000               	nop	
   850   0010E2  EF43  F008         	goto	l2662
   851   0010E6  EF10  F000         	goto	start
   852   0010EA                     __end_of_main:
   853                           	callstack 0
   854                           
   855 ;; *************** function _sendArraySerial4 *****************
   856 ;; Defined at:
   857 ;;		line 50 in file "serial.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  arr             1   46[COMRAM] PTR unsigned char 
   860 ;;		 -> trail_manoeuvre(20), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  i               2   70[COMRAM] unsigned int 
   863 ;;  tempStr        21   48[COMRAM] unsigned char [21]
   864 ;;  index           1   69[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;Total ram usage:       26 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 6
   881 ;; This function calls:
   882 ;;		_sendStringSerial4
   883 ;;		_sprintf
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text1
   890   001398                     __ptext1:
   891                           	callstack 0
   892   001398                     _sendArraySerial4:
   893                           	callstack 24
   894   001398                     
   895                           ;serial.c: 51:     unsigned char index = 0;
   896   001398  0E00               	movlw	0
   897   00139A  6E46               	movwf	sendArraySerial4@index^0,c
   898                           
   899                           ;serial.c: 54:     char tempStr[20 + 1];;serial.c: 55:     for (unsigned int i = 0; i < 
      +                          20; i++) {
   900   00139C  0E00               	movlw	0
   901   00139E  6E48               	movwf	(sendArraySerial4@i+1)^0,c
   902   0013A0  0E00               	movlw	0
   903   0013A2  6E47               	movwf	sendArraySerial4@i^0,c
   904   0013A4                     l2558:
   905                           
   906                           ;serial.c: 56:         index += sprintf(&tempStr[index], "%d", arr[i]);
   907   0013A4  5046               	movf	sendArraySerial4@index^0,w,c
   908   0013A6  0F31               	addlw	low sendArraySerial4@tempStr
   909   0013A8  6E1C               	movwf	sprintf@s^0,c
   910   0013AA  0E06               	movlw	low STR_2
   911   0013AC  6E1D               	movwf	sprintf@fmt^0,c
   912   0013AE  502F               	movf	sendArraySerial4@arr^0,w,c
   913   0013B0  2447               	addwf	sendArraySerial4@i^0,w,c
   914   0013B2  6ED9               	movwf	fsr2l,c
   915   0013B4  6ADA               	clrf	fsr2h,c
   916   0013B6  50DF               	movf	indf2,w,c
   917   0013B8  6E30               	movwf	??_sendArraySerial4^0,c
   918   0013BA  5030               	movf	??_sendArraySerial4^0,w,c
   919   0013BC  6E1E               	movwf	(?_sprintf+2)^0,c
   920   0013BE  6A1F               	clrf	(?_sprintf+3)^0,c
   921   0013C0  ECCE  F00A         	call	_sprintf	;wreg free
   922   0013C4  501C               	movf	?_sprintf^0,w,c
   923   0013C6  2646               	addwf	sendArraySerial4@index^0,f,c
   924   0013C8                     
   925                           ;serial.c: 57:     }
   926   0013C8  4A47               	infsnz	sendArraySerial4@i^0,f,c
   927   0013CA  2A48               	incf	(sendArraySerial4@i+1)^0,f,c
   928   0013CC  5048               	movf	(sendArraySerial4@i+1)^0,w,c
   929   0013CE  E109               	bnz	u1330
   930   0013D0  0E14               	movlw	20
   931   0013D2  5C47               	subwf	sendArraySerial4@i^0,w,c
   932   0013D4  A0D8               	btfss	status,0,c
   933   0013D6  EFEF  F009         	goto	u1331
   934   0013DA  EFF1  F009         	goto	u1330
   935   0013DE                     u1331:
   936   0013DE  EFD2  F009         	goto	l2558
   937   0013E2                     u1330:
   938   0013E2                     
   939                           ;serial.c: 58:     sendStringSerial4(tempStr);
   940   0013E2  0E31               	movlw	low sendArraySerial4@tempStr
   941   0013E4  6E02               	movwf	sendStringSerial4@string^0,c
   942   0013E6  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   943   0013E8  ECFF  F009         	call	_sendStringSerial4	;wreg free
   944                           
   945                           ;serial.c: 59:     sendStringSerial4(" \r");
   946   0013EC  0E03               	movlw	low (STR_1+2)
   947   0013EE  6E02               	movwf	sendStringSerial4@string^0,c
   948   0013F0  5002               	movf	sendStringSerial4@string^0,w,c
   949   0013F2  A4D8               	btfss	status,2,c
   950   0013F4  0E0E               	movlw	high __smallconst
   951   0013F6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   952   0013F8  ECFF  F009         	call	_sendStringSerial4	;wreg free
   953   0013FC  0012               	return		;funcret
   954   0013FE                     __end_of_sendArraySerial4:
   955                           	callstack 0
   956                           
   957 ;; *************** function _sprintf *****************
   958 ;; Defined at:
   959 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  s               1   27[COMRAM] PTR unsigned char 
   962 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
   963 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
   964 ;;		 -> STR_3(3), STR_1(5), 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  f              12   34[COMRAM] struct _IO_FILE
   967 ;;  ret             2   31[COMRAM] int 
   968 ;;  ap              1   33[COMRAM] PTR void [1]
   969 ;;		 -> ?_sprintf(2), 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  2   27[COMRAM] int 
   972 ;; Registers used:
   973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   980 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   982 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;Total ram usage:       19 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 5
   986 ;; This function calls:
   987 ;;		_vfprintf
   988 ;; This function is called by:
   989 ;;		_sendArraySerial4
   990 ;;		_sendIntSerial4
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text2
   995   00159C                     __ptext2:
   996                           	callstack 0
   997   00159C                     _sprintf:
   998                           	callstack 24
   999   00159C  0E1E               	movlw	low (?_sprintf+2)
  1000   00159E  6E22               	movwf	sprintf@ap^0,c
  1001   0015A0  C01C  F023         	movff	sprintf@s,sprintf@f
  1002   0015A4  0E00               	movlw	0
  1003   0015A6  6E27               	movwf	(sprintf@f+4)^0,c
  1004   0015A8  0E00               	movlw	0
  1005   0015AA  6E26               	movwf	(sprintf@f+3)^0,c
  1006   0015AC  0E00               	movlw	0
  1007   0015AE  6E2E               	movwf	(sprintf@f+11)^0,c
  1008   0015B0  0E00               	movlw	0
  1009   0015B2  6E2D               	movwf	(sprintf@f+10)^0,c
  1010   0015B4  0E23               	movlw	low sprintf@f
  1011   0015B6  6E18               	movwf	vfprintf@fp^0,c
  1012   0015B8  C01D  F019         	movff	sprintf@fmt,vfprintf@fmt
  1013   0015BC  0E22               	movlw	low sprintf@ap
  1014   0015BE  6E1A               	movwf	vfprintf@ap^0,c
  1015   0015C0  EC30  F00A         	call	_vfprintf	;wreg free
  1016   0015C4  C018  F020         	movff	?_vfprintf,sprintf@ret
  1017   0015C8  C019  F021         	movff	?_vfprintf+1,sprintf@ret+1
  1018   0015CC  501C               	movf	sprintf@s^0,w,c
  1019   0015CE  2426               	addwf	(sprintf@f+3)^0,w,c
  1020   0015D0  6ED9               	movwf	fsr2l,c
  1021   0015D2  6ADA               	clrf	fsr2h,c
  1022   0015D4  6ADF               	clrf	indf2,c
  1023   0015D6  C020  F01C         	movff	sprintf@ret,?_sprintf
  1024   0015DA  C021  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1025   0015DE  0012               	return		;funcret
  1026   0015E0                     __end_of_sprintf:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _vfprintf *****************
  1030 ;; Defined at:
  1031 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1034 ;;		 -> sprintf@f(12), 
  1035 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1036 ;;		 -> STR_3(3), STR_1(5), 
  1037 ;;  ap              1   25[COMRAM] PTR PTR void 
  1038 ;;		 -> sprintf@ap(1), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1041 ;;		 -> STR_3(3), STR_1(5), 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2   23[COMRAM] int 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1051 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;Total ram usage:        4 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 4
  1058 ;; This function calls:
  1059 ;;		_vfpfcnvrt
  1060 ;; This function is called by:
  1061 ;;		_sprintf
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text3
  1066   001460                     __ptext3:
  1067                           	callstack 0
  1068   001460                     _vfprintf:
  1069                           	callstack 24
  1070   001460                     
  1071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1072   001460  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1073   001464                     
  1074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1075   001464  0E00               	movlw	0
  1076   001466  0100               	movlb	0	; () banked
  1077   001468  6FE6               	movwf	(_nout+1)& (0+255),b
  1078   00146A  0E00               	movlw	0
  1079   00146C  6FE5               	movwf	_nout& (0+255),b
  1080                           
  1081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1082   00146E  EF46  F00A         	goto	l2300
  1083   001472                     l2298:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1087   001472  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1088   001476  0E1B               	movlw	low vfprintf@cfmt
  1089   001478  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1090   00147A  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1091   00147E  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1092   001482  500B               	movf	?_vfpfcnvrt^0,w,c
  1093   001484  0100               	movlb	0	; () banked
  1094   001486  27E5               	addwf	_nout& (0+255),f,b
  1095   001488  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1096   00148A  23E6               	addwfc	(_nout+1)& (0+255),f,b
  1097   00148C                     l2300:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1101   00148C  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1102   001490                     	if	1	;There is more than 1 active tblptr byte
  1103   001490  0E0E               	movlw	high __smallconst
  1104   001492  6EF7               	movwf	tblptrh,c
  1105   001494                     	endif
  1106   001494                     	if	0	;tblptru may be non-zero
  1107   001494                     	endif
  1108   001494                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1109   001494  0E00               	movlw	low (__smallconst shr (0+16))
  1110   001496  6EF8               	movwf	tblptru,c
  1111   001498                     	endif
  1112   001498  0008               	tblrd		*
  1113   00149A  50F5               	movf	tablat,w,c
  1114   00149C  0900               	iorlw	0
  1115   00149E  A4D8               	btfss	status,2,c
  1116   0014A0  EF54  F00A         	goto	u1131
  1117   0014A4  EF56  F00A         	goto	u1130
  1118   0014A8                     u1131:
  1119   0014A8  EF39  F00A         	goto	l2298
  1120   0014AC                     u1130:
  1121   0014AC                     
  1122                           ; BSR set to: 0
  1123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1124   0014AC  C0E5  F018         	movff	_nout,?_vfprintf
  1125   0014B0  C0E6  F019         	movff	_nout+1,?_vfprintf+1
  1126   0014B4                     
  1127                           ; BSR set to: 0
  1128   0014B4  0012               	return		;funcret
  1129   0014B6                     __end_of_vfprintf:
  1130                           	callstack 0
  1131                           
  1132 ;; *************** function _vfpfcnvrt *****************
  1133 ;; Defined at:
  1134 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1137 ;;		 -> sprintf@f(12), 
  1138 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1139 ;;		 -> vfprintf@cfmt(1), 
  1140 ;;  ap              1   12[COMRAM] PTR PTR void 
  1141 ;;		 -> sprintf@ap(1), 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  convarg         4   18[COMRAM] struct .
  1144 ;;  cnt             2   15[COMRAM] int 
  1145 ;;  c               1   22[COMRAM] unsigned char 
  1146 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1147 ;;		 -> STR_3(3), STR_1(5), 
  1148 ;;  done            1   14[COMRAM] _Bool 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2   10[COMRAM] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1158 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;Total ram usage:       13 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 3
  1165 ;; This function calls:
  1166 ;;		___awdiv
  1167 ;;		___awmod
  1168 ;;		_abs
  1169 ;;		_fputc
  1170 ;; This function is called by:
  1171 ;;		_vfprintf
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text4
  1176   000E0A                     __ptext4:
  1177                           	callstack 0
  1178   000E0A                     _vfpfcnvrt:
  1179                           	callstack 24
  1180   000E0A                     
  1181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1182   000E0A  0E00               	movlw	0
  1183   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1184   000E0E  0E00               	movlw	0
  1185   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1186   000E12                     
  1187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1188   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1189   000E14  6ED9               	movwf	fsr2l,c
  1190   000E16  6ADA               	clrf	fsr2h,c
  1191   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1192   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1193   000E1C  0E0E               	movlw	high __smallconst
  1194   000E1E  6EF7               	movwf	tblptrh,c
  1195   000E20                     	endif
  1196   000E20                     	if	0	;tblptru may be non-zero
  1197   000E20                     	endif
  1198   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1199   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1200   000E22  6EF8               	movwf	tblptru,c
  1201   000E24                     	endif
  1202   000E24  0008               	tblrd		*
  1203   000E26  50F5               	movf	tablat,w,c
  1204   000E28  0A25               	xorlw	37
  1205   000E2A  A4D8               	btfss	status,2,c
  1206   000E2C  EF1A  F007         	goto	u1001
  1207   000E30  EF1C  F007         	goto	u1000
  1208   000E34                     u1001:
  1209   000E34  EFE6  F007         	goto	l2254
  1210   000E38                     u1000:
  1211   000E38                     
  1212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1213   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1214   000E3A  6ED9               	movwf	fsr2l,c
  1215   000E3C  6ADA               	clrf	fsr2h,c
  1216   000E3E  2ADF               	incf	indf2,f,c
  1217   000E40                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1219   000E40  0E00               	movlw	0
  1220   000E42  0100               	movlb	0	; () banked
  1221   000E44  6FE8               	movwf	(_width+1)& (0+255),b
  1222   000E46  0E00               	movlw	0
  1223   000E48  6FE7               	movwf	_width& (0+255),b
  1224   000E4A  C0E7  F0EB         	movff	_width,_flags
  1225   000E4E                     
  1226                           ; BSR set to: 0
  1227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1228   000E4E  69E9               	setf	_prec& (0+255),b
  1229   000E50  69EA               	setf	(_prec+1)& (0+255),b
  1230   000E52                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1233   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1234   000E54  6ED9               	movwf	fsr2l,c
  1235   000E56  6ADA               	clrf	fsr2h,c
  1236   000E58  50DF               	movf	indf2,w,c
  1237   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1238   000E5C                     
  1239                           ; BSR set to: 0
  1240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1241   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1242   000E60                     	if	1	;There is more than 1 active tblptr byte
  1243   000E60  0E0E               	movlw	high __smallconst
  1244   000E62  6EF7               	movwf	tblptrh,c
  1245   000E64                     	endif
  1246   000E64                     	if	0	;tblptru may be non-zero
  1247   000E64                     	endif
  1248   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1249   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1250   000E66  6EF8               	movwf	tblptru,c
  1251   000E68                     	endif
  1252   000E68  0008               	tblrd		*
  1253   000E6A  50F5               	movf	tablat,w,c
  1254   000E6C  0A64               	xorlw	100
  1255   000E6E  B4D8               	btfsc	status,2,c
  1256   000E70  EF3C  F007         	goto	u1011
  1257   000E74  EF3E  F007         	goto	u1010
  1258   000E78                     u1011:
  1259   000E78  EF4E  F007         	goto	l2218
  1260   000E7C                     u1010:
  1261   000E7C                     
  1262                           ; BSR set to: 0
  1263   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1264   000E80                     	if	1	;There is more than 1 active tblptr byte
  1265   000E80  0E0E               	movlw	high __smallconst
  1266   000E82  6EF7               	movwf	tblptrh,c
  1267   000E84                     	endif
  1268   000E84                     	if	0	;tblptru may be non-zero
  1269   000E84                     	endif
  1270   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1271   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1272   000E86  6EF8               	movwf	tblptru,c
  1273   000E88                     	endif
  1274   000E88  0008               	tblrd		*
  1275   000E8A  50F5               	movf	tablat,w,c
  1276   000E8C  0A69               	xorlw	105
  1277   000E8E  A4D8               	btfss	status,2,c
  1278   000E90  EF4C  F007         	goto	u1021
  1279   000E94  EF4E  F007         	goto	u1020
  1280   000E98                     u1021:
  1281   000E98  EFDC  F007         	goto	l2248
  1282   000E9C                     u1020:
  1283   000E9C                     l2218:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1287   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1288   000E9E  6ED9               	movwf	fsr2l,c
  1289   000EA0  6ADA               	clrf	fsr2h,c
  1290   000EA2  0E02               	movlw	2
  1291   000EA4  26DF               	addwf	indf2,f,c
  1292   000EA6  5CDF               	subwf	indf2,w,c
  1293   000EA8  6ED9               	movwf	fsr2l,c
  1294   000EAA  6ADA               	clrf	fsr2h,c
  1295   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1296   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1297   000EB4                     
  1298                           ; BSR set to: 0
  1299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1300   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1301   000EB6  6ED9               	movwf	fsr2l,c
  1302   000EB8  6ADA               	clrf	fsr2h,c
  1303   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1304   000EBC  6EDF               	movwf	indf2,c
  1305   000EBE                     
  1306                           ; BSR set to: 0
  1307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1308   000EBE  0E20               	movlw	32
  1309   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1312   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1313   000EC4  EF66  F007         	goto	u1031
  1314   000EC8  EF69  F007         	goto	u1030
  1315   000ECC                     u1031:
  1316   000ECC  0E01               	movlw	1
  1317   000ECE  EF6A  F007         	goto	u1040
  1318   000ED2                     u1030:
  1319   000ED2  0E00               	movlw	0
  1320   000ED4                     u1040:
  1321   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1322   000ED6                     l2224:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1325   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1326   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1327   000EDA  0FB1               	addlw	low _dbuf
  1328   000EDC  6ED9               	movwf	fsr2l,c
  1329   000EDE  6ADA               	clrf	fsr2h,c
  1330   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1331   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1332   000EE8  0E00               	movlw	0
  1333   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1334   000EEC  0E0A               	movlw	10
  1335   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1336   000EF0  ECD7  F008         	call	___awmod	;wreg free
  1337   000EF4  C001  F007         	movff	?___awmod,abs@a
  1338   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1339   000EFC  ECF0  F00A         	call	_abs	;wreg free
  1340   000F00  5007               	movf	?_abs^0,w,c
  1341   000F02  0F30               	addlw	48
  1342   000F04  6EDF               	movwf	indf2,c
  1343   000F06                     
  1344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1345   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1346   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1347   000F0E  0E00               	movlw	0
  1348   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1349   000F12  0E0A               	movlw	10
  1350   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1351   000F16  EC75  F008         	call	___awdiv	;wreg free
  1352   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1353   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1354   000F22                     
  1355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1356   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1357   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1358   000F26                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1360   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1361   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1362   000F2A  B4D8               	btfsc	status,2,c
  1363   000F2C  EF9A  F007         	goto	u1051
  1364   000F30  EF9C  F007         	goto	u1050
  1365   000F34                     u1051:
  1366   000F34  EFA4  F007         	goto	l2234
  1367   000F38                     u1050:
  1368   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1369   000F3A  A4D8               	btfss	status,2,c
  1370   000F3C  EFA2  F007         	goto	u1061
  1371   000F40  EFA4  F007         	goto	u1060
  1372   000F44                     u1061:
  1373   000F44  EF6B  F007         	goto	l2224
  1374   000F48                     u1060:
  1375   000F48                     l2234:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1378   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1379   000F4A  B4D8               	btfsc	status,2,c
  1380   000F4C  EFAA  F007         	goto	u1071
  1381   000F50  EFAC  F007         	goto	u1070
  1382   000F54                     u1071:
  1383   000F54  EFCD  F007         	goto	l2246
  1384   000F58                     u1070:
  1385   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1386   000F5A  B4D8               	btfsc	status,2,c
  1387   000F5C  EFB2  F007         	goto	u1081
  1388   000F60  EFB4  F007         	goto	u1080
  1389   000F64                     u1081:
  1390   000F64  EFCD  F007         	goto	l2246
  1391   000F68                     u1080:
  1392   000F68                     
  1393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1394   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1395   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1396   000F6C  0FB1               	addlw	low _dbuf
  1397   000F6E  6ED9               	movwf	fsr2l,c
  1398   000F70  6ADA               	clrf	fsr2h,c
  1399   000F72  0E2D               	movlw	45
  1400   000F74  6EDF               	movwf	indf2,c
  1401   000F76                     
  1402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1403   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1404   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1405   000F7A  EFCD  F007         	goto	l2246
  1406   000F7E                     l2242:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1409   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1410   000F80  0FB1               	addlw	low _dbuf
  1411   000F82  6ED9               	movwf	fsr2l,c
  1412   000F84  6ADA               	clrf	fsr2h,c
  1413   000F86  50DF               	movf	indf2,w,c
  1414   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1415   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1416   000F8C  6E01               	movwf	fputc@c^0,c
  1417   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1418   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1419   000F94  EC2F  F009         	call	_fputc	;wreg free
  1420   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1421   000F9A                     l2246:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1424   000F9A  0E20               	movlw	32
  1425   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1426   000F9E  A4D8               	btfss	status,2,c
  1427   000FA0  EFD4  F007         	goto	u1091
  1428   000FA4  EFD6  F007         	goto	u1090
  1429   000FA8                     u1091:
  1430   000FA8  EFBF  F007         	goto	l2242
  1431   000FAC                     u1090:
  1432   000FAC                     
  1433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1434   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1435   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1436   000FB4  EFFF  F007         	goto	l1294
  1437   000FB8                     l2248:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1441   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1442   000FBA  6ED9               	movwf	fsr2l,c
  1443   000FBC  6ADA               	clrf	fsr2h,c
  1444   000FBE  2ADF               	incf	indf2,f,c
  1445   000FC0                     
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1448   000FC0  0E00               	movlw	0
  1449   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1450   000FC4  0E00               	movlw	0
  1451   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1452   000FC8  EFFF  F007         	goto	l1294
  1453   000FCC                     l2254:
  1454                           
  1455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1456   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1457   000FCE  6ED9               	movwf	fsr2l,c
  1458   000FD0  6ADA               	clrf	fsr2h,c
  1459   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1460   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1461   000FD6  0E0E               	movlw	high __smallconst
  1462   000FD8  6EF7               	movwf	tblptrh,c
  1463   000FDA                     	endif
  1464   000FDA                     	if	0	;tblptru may be non-zero
  1465   000FDA                     	endif
  1466   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1467   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1468   000FDC  6EF8               	movwf	tblptru,c
  1469   000FDE                     	endif
  1470   000FDE  0008               	tblrd		*
  1471   000FE0  50F5               	movf	tablat,w,c
  1472   000FE2  6E01               	movwf	fputc@c^0,c
  1473   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1474   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1475   000FEA  EC2F  F009         	call	_fputc	;wreg free
  1476   000FEE                     
  1477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1478   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1479   000FF0  6ED9               	movwf	fsr2l,c
  1480   000FF2  6ADA               	clrf	fsr2h,c
  1481   000FF4  2ADF               	incf	indf2,f,c
  1482   000FF6                     
  1483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1484   000FF6  0E00               	movlw	0
  1485   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1486   000FFA  0E01               	movlw	1
  1487   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1488   000FFE                     l1294:
  1489   000FFE  0012               	return		;funcret
  1490   001000                     __end_of_vfpfcnvrt:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function _fputc *****************
  1494 ;; Defined at:
  1495 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  c               2    0[COMRAM] int 
  1498 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1499 ;;		 -> sprintf@f(12), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2    0[COMRAM] int 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1511 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;Total ram usage:        8 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 2
  1518 ;; This function calls:
  1519 ;;		_putch
  1520 ;; This function is called by:
  1521 ;;		_vfpfcnvrt
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text5
  1526   00125E                     __ptext5:
  1527                           	callstack 0
  1528   00125E                     _fputc:
  1529                           	callstack 24
  1530   00125E  5003               	movf	fputc@fp^0,w,c
  1531   001260  B4D8               	btfsc	status,2,c
  1532   001262  EF35  F009         	goto	u931
  1533   001266  EF37  F009         	goto	u930
  1534   00126A                     u931:
  1535   00126A  EF3F  F009         	goto	l2184
  1536   00126E                     u930:
  1537   00126E  5003               	movf	fputc@fp^0,w,c
  1538   001270  A4D8               	btfss	status,2,c
  1539   001272  EF3D  F009         	goto	u941
  1540   001276  EF3F  F009         	goto	u940
  1541   00127A                     u941:
  1542   00127A  EF44  F009         	goto	l2186
  1543   00127E                     u940:
  1544   00127E                     l2184:
  1545   00127E  5001               	movf	fputc@c^0,w,c
  1546   001280  EC9C  F00B         	call	_putch
  1547   001284  EF83  F009         	goto	l1319
  1548   001288                     l2186:
  1549   001288  5003               	movf	fputc@fp^0,w,c
  1550   00128A  6ED9               	movwf	fsr2l,c
  1551   00128C  6ADA               	clrf	fsr2h,c
  1552   00128E  0E0A               	movlw	10
  1553   001290  26D9               	addwf	fsr2l,f,c
  1554   001292  50DE               	movf	postinc2,w,c
  1555   001294  10DE               	iorwf	postinc2,w,c
  1556   001296  B4D8               	btfsc	status,2,c
  1557   001298  EF50  F009         	goto	u951
  1558   00129C  EF52  F009         	goto	u950
  1559   0012A0                     u951:
  1560   0012A0  EF6B  F009         	goto	l2190
  1561   0012A4                     u950:
  1562   0012A4  5003               	movf	fputc@fp^0,w,c
  1563   0012A6  6ED9               	movwf	fsr2l,c
  1564   0012A8  6ADA               	clrf	fsr2h,c
  1565   0012AA  0E0A               	movlw	10
  1566   0012AC  26D9               	addwf	fsr2l,f,c
  1567   0012AE  5003               	movf	fputc@fp^0,w,c
  1568   0012B0  6EE1               	movwf	fsr1l,c
  1569   0012B2  6AE2               	clrf	fsr1h,c
  1570   0012B4  0E03               	movlw	3
  1571   0012B6  26E1               	addwf	fsr1l,f,c
  1572   0012B8  50DE               	movf	postinc2,w,c
  1573   0012BA  5CE6               	subwf	postinc1,w,c
  1574   0012BC  50E6               	movf	postinc1,w,c
  1575   0012BE  0A80               	xorlw	128
  1576   0012C0  6E08               	movwf	(??_fputc+4)^0,c
  1577   0012C2  50DE               	movf	postinc2,w,c
  1578   0012C4  0A80               	xorlw	128
  1579   0012C6  5808               	subwfb	(??_fputc+4)^0,w,c
  1580   0012C8  B0D8               	btfsc	status,0,c
  1581   0012CA  EF69  F009         	goto	u961
  1582   0012CE  EF6B  F009         	goto	u960
  1583   0012D2                     u961:
  1584   0012D2  EF83  F009         	goto	l1319
  1585   0012D6                     u960:
  1586   0012D6                     l2190:
  1587   0012D6  5003               	movf	fputc@fp^0,w,c
  1588   0012D8  6ED9               	movwf	fsr2l,c
  1589   0012DA  6ADA               	clrf	fsr2h,c
  1590   0012DC  0E03               	movlw	3
  1591   0012DE  26D9               	addwf	fsr2l,f,c
  1592   0012E0  50DF               	movf	indf2,w,c
  1593   0012E2  6E04               	movwf	??_fputc^0,c
  1594   0012E4  5003               	movf	fputc@fp^0,w,c
  1595   0012E6  6ED9               	movwf	fsr2l,c
  1596   0012E8  6ADA               	clrf	fsr2h,c
  1597   0012EA  50DF               	movf	indf2,w,c
  1598   0012EC  2404               	addwf	??_fputc^0,w,c
  1599   0012EE  6ED9               	movwf	fsr2l,c
  1600   0012F0  6ADA               	clrf	fsr2h,c
  1601   0012F2  C001  FFDF         	movff	fputc@c,indf2
  1602   0012F6  5003               	movf	fputc@fp^0,w,c
  1603   0012F8  6ED9               	movwf	fsr2l,c
  1604   0012FA  6ADA               	clrf	fsr2h,c
  1605   0012FC  0E03               	movlw	3
  1606   0012FE  26D9               	addwf	fsr2l,f,c
  1607   001300  2ADE               	incf	postinc2,f,c
  1608   001302  0E00               	movlw	0
  1609   001304  22DD               	addwfc	postdec2,f,c
  1610   001306                     l1319:
  1611   001306  0012               	return		;funcret
  1612   001308                     __end_of_fputc:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _putch *****************
  1616 ;; Defined at:
  1617 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  c               1    wreg     unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  c               1    0[COMRAM] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_fputc
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text6
  1646   001738                     __ptext6:
  1647                           	callstack 0
  1648   001738                     _putch:
  1649                           	callstack 24
  1650   001738  0012               	return		;funcret
  1651   00173A                     __end_of_putch:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function _abs *****************
  1655 ;; Defined at:
  1656 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  a               2    6[COMRAM] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2    6[COMRAM] int 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_vfpfcnvrt
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text7
  1685   0015E0                     __ptext7:
  1686                           	callstack 0
  1687   0015E0                     _abs:
  1688                           	callstack 25
  1689   0015E0  BE08               	btfsc	(abs@a+1)^0,7,c
  1690   0015E2  EFF5  F00A         	goto	u971
  1691   0015E6  EFF7  F00A         	goto	u970
  1692   0015EA                     u971:
  1693   0015EA  EFFD  F00A         	goto	l1304
  1694   0015EE                     u970:
  1695   0015EE  C007  F007         	movff	abs@a,?_abs
  1696   0015F2  C008  F008         	movff	abs@a+1,?_abs+1
  1697   0015F6  EF09  F00B         	goto	l1307
  1698   0015FA                     l1304:
  1699   0015FA  C007  F009         	movff	abs@a,??_abs
  1700   0015FE  C008  F00A         	movff	abs@a+1,??_abs+1
  1701   001602  1E09               	comf	??_abs^0,f,c
  1702   001604  1E0A               	comf	(??_abs+1)^0,f,c
  1703   001606  4A09               	infsnz	??_abs^0,f,c
  1704   001608  2A0A               	incf	(??_abs+1)^0,f,c
  1705   00160A  C009  F007         	movff	??_abs,?_abs
  1706   00160E  C00A  F008         	movff	??_abs+1,?_abs+1
  1707   001612                     l1307:
  1708   001612  0012               	return		;funcret
  1709   001614                     __end_of_abs:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function ___awmod *****************
  1713 ;; Defined at:
  1714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  dividend        2    0[COMRAM] int 
  1717 ;;  divisor         2    2[COMRAM] int 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  sign            1    5[COMRAM] unsigned char 
  1720 ;;  counter         1    4[COMRAM] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    0[COMRAM] int 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;Total ram usage:        6 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_vfpfcnvrt
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text8
  1745   0011AE                     __ptext8:
  1746                           	callstack 0
  1747   0011AE                     ___awmod:
  1748                           	callstack 25
  1749   0011AE  0E00               	movlw	0
  1750   0011B0  6E06               	movwf	___awmod@sign^0,c
  1751   0011B2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1752   0011B4  EFE0  F008         	goto	u870
  1753   0011B8  EFDE  F008         	goto	u871
  1754   0011BC                     u871:
  1755   0011BC  EFE6  F008         	goto	l2152
  1756   0011C0                     u870:
  1757   0011C0  6C01               	negf	___awmod@dividend^0,c
  1758   0011C2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1759   0011C4  B0D8               	btfsc	status,0,c
  1760   0011C6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1761   0011C8  0E01               	movlw	1
  1762   0011CA  6E06               	movwf	___awmod@sign^0,c
  1763   0011CC                     l2152:
  1764   0011CC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1765   0011CE  EFED  F008         	goto	u880
  1766   0011D2  EFEB  F008         	goto	u881
  1767   0011D6                     u881:
  1768   0011D6  EFF1  F008         	goto	l2156
  1769   0011DA                     u880:
  1770   0011DA  6C03               	negf	___awmod@divisor^0,c
  1771   0011DC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1772   0011DE  B0D8               	btfsc	status,0,c
  1773   0011E0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1774   0011E2                     l2156:
  1775   0011E2  5003               	movf	___awmod@divisor^0,w,c
  1776   0011E4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1777   0011E6  B4D8               	btfsc	status,2,c
  1778   0011E8  EFF8  F008         	goto	u891
  1779   0011EC  EFFA  F008         	goto	u890
  1780   0011F0                     u891:
  1781   0011F0  EF1E  F009         	goto	l2172
  1782   0011F4                     u890:
  1783   0011F4  0E01               	movlw	1
  1784   0011F6  6E05               	movwf	___awmod@counter^0,c
  1785   0011F8  EF02  F009         	goto	l2162
  1786   0011FC                     l2160:
  1787   0011FC  90D8               	bcf	status,0,c
  1788   0011FE  3603               	rlcf	___awmod@divisor^0,f,c
  1789   001200  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1790   001202  2A05               	incf	___awmod@counter^0,f,c
  1791   001204                     l2162:
  1792   001204  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1793   001206  EF07  F009         	goto	u901
  1794   00120A  EF09  F009         	goto	u900
  1795   00120E                     u901:
  1796   00120E  EFFE  F008         	goto	l2160
  1797   001212                     u900:
  1798   001212                     l2164:
  1799   001212  5003               	movf	___awmod@divisor^0,w,c
  1800   001214  5C01               	subwf	___awmod@dividend^0,w,c
  1801   001216  5004               	movf	(___awmod@divisor+1)^0,w,c
  1802   001218  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1803   00121A  A0D8               	btfss	status,0,c
  1804   00121C  EF12  F009         	goto	u911
  1805   001220  EF14  F009         	goto	u910
  1806   001224                     u911:
  1807   001224  EF18  F009         	goto	l2168
  1808   001228                     u910:
  1809   001228  5003               	movf	___awmod@divisor^0,w,c
  1810   00122A  5E01               	subwf	___awmod@dividend^0,f,c
  1811   00122C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1812   00122E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1813   001230                     l2168:
  1814   001230  90D8               	bcf	status,0,c
  1815   001232  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1816   001234  3203               	rrcf	___awmod@divisor^0,f,c
  1817   001236  2E05               	decfsz	___awmod@counter^0,f,c
  1818   001238  EF09  F009         	goto	l2164
  1819   00123C                     l2172:
  1820   00123C  5006               	movf	___awmod@sign^0,w,c
  1821   00123E  B4D8               	btfsc	status,2,c
  1822   001240  EF24  F009         	goto	u921
  1823   001244  EF26  F009         	goto	u920
  1824   001248                     u921:
  1825   001248  EF2A  F009         	goto	l2176
  1826   00124C                     u920:
  1827   00124C  6C01               	negf	___awmod@dividend^0,c
  1828   00124E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1829   001250  B0D8               	btfsc	status,0,c
  1830   001252  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1831   001254                     l2176:
  1832   001254  C001  F001         	movff	___awmod@dividend,?___awmod
  1833   001258  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1834   00125C  0012               	return		;funcret
  1835   00125E                     __end_of___awmod:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function ___awdiv *****************
  1839 ;; Defined at:
  1840 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  dividend        2    0[COMRAM] int 
  1843 ;;  divisor         2    2[COMRAM] int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  quotient        2    6[COMRAM] int 
  1846 ;;  sign            1    5[COMRAM] unsigned char 
  1847 ;;  counter         1    4[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2    0[COMRAM] int 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;Total ram usage:        8 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_vfpfcnvrt
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text9
  1872   0010EA                     __ptext9:
  1873                           	callstack 0
  1874   0010EA                     ___awdiv:
  1875                           	callstack 25
  1876   0010EA  0E00               	movlw	0
  1877   0010EC  6E06               	movwf	___awdiv@sign^0,c
  1878   0010EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1879   0010F0  EF7E  F008         	goto	u810
  1880   0010F4  EF7C  F008         	goto	u811
  1881   0010F8                     u811:
  1882   0010F8  EF84  F008         	goto	l2108
  1883   0010FC                     u810:
  1884   0010FC  6C03               	negf	___awdiv@divisor^0,c
  1885   0010FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1886   001100  B0D8               	btfsc	status,0,c
  1887   001102  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1888   001104  0E01               	movlw	1
  1889   001106  6E06               	movwf	___awdiv@sign^0,c
  1890   001108                     l2108:
  1891   001108  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1892   00110A  EF8B  F008         	goto	u820
  1893   00110E  EF89  F008         	goto	u821
  1894   001112                     u821:
  1895   001112  EF91  F008         	goto	l2114
  1896   001116                     u820:
  1897   001116  6C01               	negf	___awdiv@dividend^0,c
  1898   001118  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1899   00111A  B0D8               	btfsc	status,0,c
  1900   00111C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1901   00111E  0E01               	movlw	1
  1902   001120  1A06               	xorwf	___awdiv@sign^0,f,c
  1903   001122                     l2114:
  1904   001122  0E00               	movlw	0
  1905   001124  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1906   001126  0E00               	movlw	0
  1907   001128  6E07               	movwf	___awdiv@quotient^0,c
  1908   00112A  5003               	movf	___awdiv@divisor^0,w,c
  1909   00112C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1910   00112E  B4D8               	btfsc	status,2,c
  1911   001130  EF9C  F008         	goto	u831
  1912   001134  EF9E  F008         	goto	u830
  1913   001138                     u831:
  1914   001138  EFC6  F008         	goto	l2136
  1915   00113C                     u830:
  1916   00113C  0E01               	movlw	1
  1917   00113E  6E05               	movwf	___awdiv@counter^0,c
  1918   001140  EFA6  F008         	goto	l2122
  1919   001144                     l2120:
  1920   001144  90D8               	bcf	status,0,c
  1921   001146  3603               	rlcf	___awdiv@divisor^0,f,c
  1922   001148  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1923   00114A  2A05               	incf	___awdiv@counter^0,f,c
  1924   00114C                     l2122:
  1925   00114C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1926   00114E  EFAB  F008         	goto	u841
  1927   001152  EFAD  F008         	goto	u840
  1928   001156                     u841:
  1929   001156  EFA2  F008         	goto	l2120
  1930   00115A                     u840:
  1931   00115A                     l2124:
  1932   00115A  90D8               	bcf	status,0,c
  1933   00115C  3607               	rlcf	___awdiv@quotient^0,f,c
  1934   00115E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1935   001160  5003               	movf	___awdiv@divisor^0,w,c
  1936   001162  5C01               	subwf	___awdiv@dividend^0,w,c
  1937   001164  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1938   001166  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1939   001168  A0D8               	btfss	status,0,c
  1940   00116A  EFB9  F008         	goto	u851
  1941   00116E  EFBB  F008         	goto	u850
  1942   001172                     u851:
  1943   001172  EFC0  F008         	goto	l2132
  1944   001176                     u850:
  1945   001176  5003               	movf	___awdiv@divisor^0,w,c
  1946   001178  5E01               	subwf	___awdiv@dividend^0,f,c
  1947   00117A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1948   00117C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1949   00117E  8007               	bsf	___awdiv@quotient^0,0,c
  1950   001180                     l2132:
  1951   001180  90D8               	bcf	status,0,c
  1952   001182  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1953   001184  3203               	rrcf	___awdiv@divisor^0,f,c
  1954   001186  2E05               	decfsz	___awdiv@counter^0,f,c
  1955   001188  EFAD  F008         	goto	l2124
  1956   00118C                     l2136:
  1957   00118C  5006               	movf	___awdiv@sign^0,w,c
  1958   00118E  B4D8               	btfsc	status,2,c
  1959   001190  EFCC  F008         	goto	u861
  1960   001194  EFCE  F008         	goto	u860
  1961   001198                     u861:
  1962   001198  EFD2  F008         	goto	l2140
  1963   00119C                     u860:
  1964   00119C  6C07               	negf	___awdiv@quotient^0,c
  1965   00119E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1966   0011A0  B0D8               	btfsc	status,0,c
  1967   0011A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1968   0011A4                     l2140:
  1969   0011A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1970   0011A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1971   0011AC  0012               	return		;funcret
  1972   0011AE                     __end_of___awdiv:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _sendStringSerial4 *****************
  1976 ;; Defined at:
  1977 ;;		line 35 in file "serial.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  string          2    1[COMRAM] PTR unsigned char 
  1980 ;;		 -> STR_4(3), sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 2
  1999 ;; This function calls:
  2000 ;;		_sendCharSerial4
  2001 ;; This function is called by:
  2002 ;;		_sendArraySerial4
  2003 ;;		_sendIntSerial4
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text10
  2008   0013FE                     __ptext10:
  2009                           	callstack 0
  2010   0013FE                     _sendStringSerial4:
  2011                           	callstack 27
  2012   0013FE                     
  2013                           ;serial.c: 37:     while(*string != 0){
  2014   0013FE  EF16  F00A         	goto	l2408
  2015   001402                     l2404:
  2016                           
  2017                           ;serial.c: 38:   sendCharSerial4(*string++);
  2018   001402  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2019   001406  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2020   00140A  0E00               	movlw	low (__smallconst shr (0+16))
  2021   00140C  6EF8               	movwf	tblptru,c
  2022   00140E  0E0D               	movlw	(high __ramtop+-1)
  2023   001410  64F7               	cpfsgt	tblptrh,c
  2024   001412  D003               	bra	u1307
  2025   001414  0008               	tblrd		*
  2026   001416  50F5               	movf	tablat,w,c
  2027   001418  D005               	bra	u1300
  2028   00141A                     u1307:
  2029   00141A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2030   00141E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2031   001422  50EF               	movf	indf0,w,c
  2032   001424                     u1300:
  2033   001424  EC80  F00B         	call	_sendCharSerial4
  2034   001428  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2035   00142A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2036   00142C                     l2408:
  2037                           
  2038                           ;serial.c: 37:     while(*string != 0){
  2039   00142C  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2040   001430  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2041   001434  0E00               	movlw	low (__smallconst shr (0+16))
  2042   001436  6EF8               	movwf	tblptru,c
  2043   001438  0E0D               	movlw	(high __ramtop+-1)
  2044   00143A  64F7               	cpfsgt	tblptrh,c
  2045   00143C  D003               	bra	u1317
  2046   00143E  0008               	tblrd		*
  2047   001440  50F5               	movf	tablat,w,c
  2048   001442  D005               	bra	u1310
  2049   001444                     u1317:
  2050   001444  CFF6 FFE9          	movff	tblptrl,fsr0l
  2051   001448  CFF7 FFEA          	movff	tblptrh,fsr0h
  2052   00144C  50EF               	movf	indf0,w,c
  2053   00144E                     u1310:
  2054   00144E  0900               	iorlw	0
  2055   001450  A4D8               	btfss	status,2,c
  2056   001452  EF2D  F00A         	goto	u1321
  2057   001456  EF2F  F00A         	goto	u1320
  2058   00145A                     u1321:
  2059   00145A  EF01  F00A         	goto	l2404
  2060   00145E                     u1320:
  2061   00145E  0012               	return		;funcret
  2062   001460                     __end_of_sendStringSerial4:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function _sendCharSerial4 *****************
  2066 ;; Defined at:
  2067 ;;		line 29 in file "serial.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  charToSend      1    wreg     unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  charToSend      1    0[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;Total ram usage:        1 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_sendStringSerial4
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text11
  2096   001700                     __ptext11:
  2097                           	callstack 0
  2098   001700                     _sendCharSerial4:
  2099                           	callstack 27
  2100                           
  2101                           ;incstack = 0
  2102                           ;sendCharSerial4@charToSend stored from wreg
  2103   001700  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2104   001702                     l395:
  2105   001702  010E               	movlb	14	; () banked
  2106   001704  A537               	btfss	55,2,b	;volatile
  2107   001706  EF87  F00B         	goto	u1121
  2108   00170A  EF89  F00B         	goto	u1120
  2109   00170E                     u1121:
  2110   00170E  EF81  F00B         	goto	l395
  2111   001712                     u1120:
  2112   001712                     
  2113                           ; BSR set to: 14
  2114                           ;serial.c: 31:     TX4REG = charToSend;
  2115   001712  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2116   001716                     
  2117                           ; BSR set to: 14
  2118   001716  0012               	return		;funcret
  2119   001718                     __end_of_sendCharSerial4:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _initUSART4 *****************
  2123 ;; Defined at:
  2124 ;;		line 5 in file "serial.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text12
  2153   0016E2                     __ptext12:
  2154                           	callstack 0
  2155   0016E2                     _initUSART4:
  2156                           	callstack 29
  2157   0016E2                     
  2158                           ;serial.c: 9:     RC0PPS = 0x12;
  2159   0016E2  0E12               	movlw	18
  2160   0016E4  010E               	movlb	14	; () banked
  2161   0016E6  6F62               	movwf	98,b	;volatile
  2162                           
  2163                           ;serial.c: 10:     RX4PPS = 0x11;
  2164   0016E8  0E11               	movlw	17
  2165   0016EA  6F15               	movwf	21,b	;volatile
  2166   0016EC                     
  2167                           ; BSR set to: 14
  2168                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2169   0016EC  97E9               	bcf	233,3,b	;volatile
  2170   0016EE                     
  2171                           ; BSR set to: 14
  2172                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2173   0016EE  95E8               	bcf	232,2,b	;volatile
  2174                           
  2175                           ;serial.c: 14:     SP4BRGL = 51;
  2176   0016F0  0E33               	movlw	51
  2177   0016F2  6FE5               	movwf	229,b	;volatile
  2178                           
  2179                           ;serial.c: 15:     SP4BRGH = 0;
  2180   0016F4  0E00               	movlw	0
  2181   0016F6  6FE6               	movwf	230,b	;volatile
  2182   0016F8                     
  2183                           ; BSR set to: 14
  2184                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2185   0016F8  89E7               	bsf	231,4,b	;volatile
  2186   0016FA                     
  2187                           ; BSR set to: 14
  2188                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2189   0016FA  8BE8               	bsf	232,5,b	;volatile
  2190   0016FC                     
  2191                           ; BSR set to: 14
  2192                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2193   0016FC  8FE7               	bsf	231,7,b	;volatile
  2194   0016FE                     
  2195                           ; BSR set to: 14
  2196   0016FE  0012               	return		;funcret
  2197   001700                     __end_of_initUSART4:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _initDCmotorsPWM *****************
  2201 ;; Defined at:
  2202 ;;		line 5 in file "dc_motor.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;Total ram usage:        2 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text13
  2231   001308                     __ptext13:
  2232                           	callstack 0
  2233   001308                     _initDCmotorsPWM:
  2234                           	callstack 29
  2235   001308                     
  2236                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2237   001308  9485               	bcf	133,2,c	;volatile
  2238                           
  2239                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2240   00130A  9885               	bcf	133,4,c	;volatile
  2241                           
  2242                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2243   00130C  9E83               	bcf	131,7,c	;volatile
  2244                           
  2245                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2246   00130E  9C87               	bcf	135,6,c	;volatile
  2247                           
  2248                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2249   001310  947D               	bcf	125,2,c	;volatile
  2250                           
  2251                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2252   001312  987D               	bcf	125,4,c	;volatile
  2253                           
  2254                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2255   001314  9E7B               	bcf	123,7,c	;volatile
  2256                           
  2257                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2258   001316  9C7F               	bcf	127,6,c	;volatile
  2259   001318                     
  2260                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2261   001318  0E05               	movlw	5
  2262   00131A  010E               	movlb	14	; () banked
  2263   00131C  6F74               	movwf	116,b	;volatile
  2264                           
  2265                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2266   00131E  0E06               	movlw	6
  2267   001320  6F76               	movwf	118,b	;volatile
  2268                           
  2269                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2270   001322  0E07               	movlw	7
  2271   001324  6F69               	movwf	105,b	;volatile
  2272                           
  2273                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2274   001326  0E08               	movlw	8
  2275   001328  6F88               	movwf	136,b	;volatile
  2276                           
  2277                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2278   00132A  50BD               	movf	189,w,c	;volatile
  2279   00132C  0B8F               	andlw	-113
  2280   00132E  0940               	iorlw	64
  2281   001330  6EBD               	movwf	189,c	;volatile
  2282                           
  2283                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2284   001332  0EE0               	movlw	-32
  2285   001334  16BE               	andwf	190,f,c	;volatile
  2286                           
  2287                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2288   001336  50BF               	movf	191,w,c	;volatile
  2289   001338  0BF0               	andlw	-16
  2290   00133A  0901               	iorlw	1
  2291   00133C  6EBF               	movwf	191,c	;volatile
  2292   00133E                     
  2293                           ; BSR set to: 14
  2294                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2295   00133E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2296   001342                     
  2297                           ; BSR set to: 14
  2298                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2299   001342  8EBD               	bsf	189,7,c	;volatile
  2300                           
  2301                           ;dc_motor.c: 35:     CCPR1H=0;
  2302   001344  0E00               	movlw	0
  2303   001346  6EAA               	movwf	170,c	;volatile
  2304                           
  2305                           ;dc_motor.c: 36:     CCPR2H=0;
  2306   001348  0E00               	movlw	0
  2307   00134A  6EA6               	movwf	166,c	;volatile
  2308                           
  2309                           ;dc_motor.c: 37:     CCPR3H=0;
  2310   00134C  0E00               	movlw	0
  2311   00134E  010F               	movlb	15	; () banked
  2312   001350  6F25               	movwf	37,b	;volatile
  2313                           
  2314                           ;dc_motor.c: 38:     CCPR4H=0;
  2315   001352  0E00               	movlw	0
  2316   001354  6F21               	movwf	33,b	;volatile
  2317                           
  2318                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2319   001356  0EFC               	movlw	-4
  2320   001358  16AD               	andwf	173,f,c	;volatile
  2321                           
  2322                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2323   00135A  0EF3               	movlw	-13
  2324   00135C  16AD               	andwf	173,f,c	;volatile
  2325                           
  2326                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2327   00135E  0ECF               	movlw	-49
  2328   001360  16AD               	andwf	173,f,c	;volatile
  2329                           
  2330                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2331   001362  0E3F               	movlw	-193
  2332   001364  16AD               	andwf	173,f,c	;volatile
  2333   001366                     
  2334                           ; BSR set to: 15
  2335                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2336   001366  88AB               	bsf	171,4,c	;volatile
  2337                           
  2338                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2339   001368  50AB               	movf	171,w,c	;volatile
  2340   00136A  0BF0               	andlw	-16
  2341   00136C  090C               	iorlw	12
  2342   00136E  6EAB               	movwf	171,c	;volatile
  2343   001370                     
  2344                           ; BSR set to: 15
  2345                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2346   001370  8EAB               	bsf	171,7,c	;volatile
  2347   001372                     
  2348                           ; BSR set to: 15
  2349                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2350   001372  88A7               	bsf	167,4,c	;volatile
  2351                           
  2352                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2353   001374  50A7               	movf	167,w,c	;volatile
  2354   001376  0BF0               	andlw	-16
  2355   001378  090C               	iorlw	12
  2356   00137A  6EA7               	movwf	167,c	;volatile
  2357   00137C                     
  2358                           ; BSR set to: 15
  2359                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2360   00137C  8EA7               	bsf	167,7,c	;volatile
  2361   00137E                     
  2362                           ; BSR set to: 15
  2363                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2364   00137E  8926               	bsf	38,4,b	;volatile
  2365                           
  2366                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2367   001380  5126               	movf	38,w,b	;volatile
  2368   001382  0BF0               	andlw	-16
  2369   001384  090C               	iorlw	12
  2370   001386  6F26               	movwf	38,b	;volatile
  2371   001388                     
  2372                           ; BSR set to: 15
  2373                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2374   001388  8F26               	bsf	38,7,b	;volatile
  2375   00138A                     
  2376                           ; BSR set to: 15
  2377                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2378   00138A  8922               	bsf	34,4,b	;volatile
  2379                           
  2380                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2381   00138C  5122               	movf	34,w,b	;volatile
  2382   00138E  0BF0               	andlw	-16
  2383   001390  090C               	iorlw	12
  2384   001392  6F22               	movwf	34,b	;volatile
  2385   001394                     
  2386                           ; BSR set to: 15
  2387                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2388   001394  8F22               	bsf	34,7,b	;volatile
  2389   001396                     
  2390                           ; BSR set to: 15
  2391   001396  0012               	return		;funcret
  2392   001398                     __end_of_initDCmotorsPWM:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _color_click_init *****************
  2396 ;; Defined at:
  2397 ;;		line 5 in file "color.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 4
  2418 ;; This function calls:
  2419 ;;		_I2C_2_Master_Init
  2420 ;;		_color_writetoaddr
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text14
  2427   001614                     __ptext14:
  2428                           	callstack 0
  2429   001614                     _color_click_init:
  2430                           	callstack 26
  2431   001614                     
  2432                           ;color.c: 8:     I2C_2_Master_Init();
  2433   001614  EC24  F00B         	call	_I2C_2_Master_Init	;wreg free
  2434   001618                     
  2435                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2436   001618  0E01               	movlw	1
  2437   00161A  6E03               	movwf	color_writetoaddr@value^0,c
  2438   00161C  0E00               	movlw	0
  2439   00161E  EC61  F00B         	call	_color_writetoaddr
  2440   001622                     
  2441                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2442   001622  0E3F               	movlw	63
  2443   001624  6E05               	movwf	??_color_click_init^0,c
  2444   001626  0E55               	movlw	85
  2445   001628                     u1907:
  2446   001628  2EE8               	decfsz	wreg,f,c
  2447   00162A  D7FE               	bra	u1907
  2448   00162C  2E05               	decfsz	??_color_click_init^0,f,c
  2449   00162E  D7FC               	bra	u1907
  2450   001630  0000               	nop	
  2451   001632                     
  2452                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2453   001632  0E03               	movlw	3
  2454   001634  6E03               	movwf	color_writetoaddr@value^0,c
  2455   001636  0E00               	movlw	0
  2456   001638  EC61  F00B         	call	_color_writetoaddr
  2457   00163C                     
  2458                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2459   00163C  0ED5               	movlw	213
  2460   00163E  6E03               	movwf	color_writetoaddr@value^0,c
  2461   001640  0E01               	movlw	1
  2462   001642  EC61  F00B         	call	_color_writetoaddr
  2463   001646  0012               	return		;funcret
  2464   001648                     __end_of_color_click_init:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _color_writetoaddr *****************
  2468 ;; Defined at:
  2469 ;;		line 21 in file "color.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  address         1    wreg     unsigned char 
  2472 ;;  value           1    2[COMRAM] unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  address         1    3[COMRAM] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2484 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;Total ram usage:        2 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 3
  2491 ;; This function calls:
  2492 ;;		_I2C_2_Master_Start
  2493 ;;		_I2C_2_Master_Stop
  2494 ;;		_I2C_2_Master_Write
  2495 ;; This function is called by:
  2496 ;;		_color_click_init
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text15
  2501   0016C2                     __ptext15:
  2502                           	callstack 0
  2503   0016C2                     _color_writetoaddr:
  2504                           	callstack 26
  2505                           
  2506                           ;incstack = 0
  2507                           ;color_writetoaddr@address stored from wreg
  2508   0016C2  6E04               	movwf	color_writetoaddr@address^0,c
  2509   0016C4                     
  2510                           ;color.c: 22:     I2C_2_Master_Start();
  2511   0016C4  EC97  F00B         	call	_I2C_2_Master_Start	;wreg free
  2512                           
  2513                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2514   0016C8  0E52               	movlw	82
  2515   0016CA  EC8C  F00B         	call	_I2C_2_Master_Write
  2516                           
  2517                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2518   0016CE  5004               	movf	color_writetoaddr@address^0,w,c
  2519   0016D0  0980               	iorlw	128
  2520   0016D2  EC8C  F00B         	call	_I2C_2_Master_Write
  2521                           
  2522                           ;color.c: 25:     I2C_2_Master_Write(value);
  2523   0016D6  5003               	movf	color_writetoaddr@value^0,w,c
  2524   0016D8  EC8C  F00B         	call	_I2C_2_Master_Write
  2525                           
  2526                           ;color.c: 26:     I2C_2_Master_Stop();
  2527   0016DC  EC92  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2528   0016E0  0012               	return		;funcret
  2529   0016E2                     __end_of_color_writetoaddr:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _I2C_2_Master_Write *****************
  2533 ;; Defined at:
  2534 ;;		line 45 in file "i2c.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  data_byte       1    wreg     unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  data_byte       1    1[COMRAM] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2552 ;;Total ram usage:        1 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 2
  2555 ;; This function calls:
  2556 ;;		_I2C_2_Master_Idle
  2557 ;; This function is called by:
  2558 ;;		_color_writetoaddr
  2559 ;;		_color_read_Red
  2560 ;;		_color_read_Blue
  2561 ;;		_color_read_Green
  2562 ;;		_color_read_Clear
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text16
  2567   001718                     __ptext16:
  2568                           	callstack 0
  2569   001718                     _I2C_2_Master_Write:
  2570                           	callstack 26
  2571                           
  2572                           ;incstack = 0
  2573                           ;I2C_2_Master_Write@data_byte stored from wreg
  2574   001718  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2575   00171A                     
  2576                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2577   00171A  EC39  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2578   00171E                     
  2579                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2580   00171E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2581   001722  0012               	return		;funcret
  2582   001724                     __end_of_I2C_2_Master_Write:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _I2C_2_Master_Stop *****************
  2586 ;; Defined at:
  2587 ;;		line 39 in file "i2c.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 2
  2608 ;; This function calls:
  2609 ;;		_I2C_2_Master_Idle
  2610 ;; This function is called by:
  2611 ;;		_color_writetoaddr
  2612 ;;		_color_read_Red
  2613 ;;		_color_read_Blue
  2614 ;;		_color_read_Green
  2615 ;;		_color_read_Clear
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text17
  2620   001724                     __ptext17:
  2621                           	callstack 0
  2622   001724                     _I2C_2_Master_Stop:
  2623                           	callstack 26
  2624   001724                     
  2625                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2626   001724  EC39  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2627   001728                     
  2628                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2629   001728  010E               	movlb	14	; () banked
  2630   00172A  85DA               	bsf	218,2,b	;volatile
  2631   00172C                     
  2632                           ; BSR set to: 14
  2633   00172C  0012               	return		;funcret
  2634   00172E                     __end_of_I2C_2_Master_Stop:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _I2C_2_Master_Start *****************
  2638 ;; Defined at:
  2639 ;;		line 27 in file "i2c.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 2
  2660 ;; This function calls:
  2661 ;;		_I2C_2_Master_Idle
  2662 ;; This function is called by:
  2663 ;;		_color_writetoaddr
  2664 ;;		_color_read_Red
  2665 ;;		_color_read_Blue
  2666 ;;		_color_read_Green
  2667 ;;		_color_read_Clear
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text18
  2672   00172E                     __ptext18:
  2673                           	callstack 0
  2674   00172E                     _I2C_2_Master_Start:
  2675                           	callstack 26
  2676   00172E                     
  2677                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2678   00172E  EC39  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2679   001732                     
  2680                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2681   001732  010E               	movlb	14	; () banked
  2682   001734  81DA               	bsf	218,0,b	;volatile
  2683   001736                     
  2684                           ; BSR set to: 14
  2685   001736  0012               	return		;funcret
  2686   001738                     __end_of_I2C_2_Master_Start:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _I2C_2_Master_Idle *****************
  2690 ;; Defined at:
  2691 ;;		line 22 in file "i2c.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_I2C_2_Master_Start
  2716 ;;		_I2C_2_Master_Stop
  2717 ;;		_I2C_2_Master_Write
  2718 ;;		_I2C_2_Master_RepStart
  2719 ;;		_I2C_2_Master_Read
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text19
  2724   001672                     __ptext19:
  2725                           	callstack 0
  2726   001672                     _I2C_2_Master_Idle:
  2727                           	callstack 26
  2728   001672                     l242:
  2729   001672  010E               	movlb	14	; () banked
  2730   001674  B5D8               	btfsc	216,2,b	;volatile
  2731   001676  EF3F  F00B         	goto	u981
  2732   00167A  EF41  F00B         	goto	u980
  2733   00167E                     u981:
  2734   00167E  EF39  F00B         	goto	l242
  2735   001682                     u980:
  2736   001682                     
  2737                           ; BSR set to: 14
  2738   001682  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2739   001686  0E1F               	movlw	31
  2740   001688  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2741   00168A  A4D8               	btfss	status,2,c
  2742   00168C  EF4A  F00B         	goto	u991
  2743   001690  EF4C  F00B         	goto	u990
  2744   001694                     u991:
  2745   001694  EF39  F00B         	goto	l242
  2746   001698                     u990:
  2747   001698                     
  2748                           ; BSR set to: 14
  2749   001698  0012               	return		;funcret
  2750   00169A                     __end_of_I2C_2_Master_Idle:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _I2C_2_Master_Init *****************
  2754 ;; Defined at:
  2755 ;;		line 4 in file "i2c.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_color_click_init
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text20
  2784   001648                     __ptext20:
  2785                           	callstack 0
  2786   001648                     _I2C_2_Master_Init:
  2787                           	callstack 28
  2788   001648                     
  2789                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2790   001648  010E               	movlb	14	; () banked
  2791   00164A  51D9               	movf	217,w,b	;volatile
  2792   00164C  0BF0               	andlw	-16
  2793   00164E  0908               	iorlw	8
  2794   001650  6FD9               	movwf	217,b	;volatile
  2795   001652                     
  2796                           ; BSR set to: 14
  2797                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2798   001652  8BD9               	bsf	217,5,b	;volatile
  2799                           
  2800                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2801   001654  0E9F               	movlw	159
  2802   001656  6FD6               	movwf	214,b	;volatile
  2803   001658                     
  2804                           ; BSR set to: 14
  2805                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2806   001658  8A84               	bsf	132,5,c	;volatile
  2807   00165A                     
  2808                           ; BSR set to: 14
  2809                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2810   00165A  8C84               	bsf	132,6,c	;volatile
  2811   00165C                     
  2812                           ; BSR set to: 14
  2813                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2814   00165C  9BA7               	bcf	167,5,b	;volatile
  2815   00165E                     
  2816                           ; BSR set to: 14
  2817                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2818   00165E  9DA7               	bcf	167,6,b	;volatile
  2819                           
  2820                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2821   001660  0E1D               	movlw	29
  2822   001662  6F1D               	movwf	29,b	;volatile
  2823                           
  2824                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2825   001664  0E1E               	movlw	30
  2826   001666  6F1C               	movwf	28,b	;volatile
  2827                           
  2828                           ;i2c.c: 18:   RD5PPS=0x1C;
  2829   001668  0E1C               	movlw	28
  2830   00166A  6F6F               	movwf	111,b	;volatile
  2831                           
  2832                           ;i2c.c: 19:   RD6PPS=0x1B;
  2833   00166C  0E1B               	movlw	27
  2834   00166E  6F70               	movwf	112,b	;volatile
  2835   001670                     
  2836                           ; BSR set to: 14
  2837   001670  0012               	return		;funcret
  2838   001672                     __end_of_I2C_2_Master_Init:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _buggy_lights_init *****************
  2842 ;; Defined at:
  2843 ;;		line 4 in file "buggy_lights.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		None
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 1
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text21
  2872   001508                     __ptext21:
  2873                           	callstack 0
  2874   001508                     _buggy_lights_init:
  2875                           	callstack 29
  2876   001508                     
  2877                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2878   001508  9884               	bcf	132,4,c	;volatile
  2879                           
  2880                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2881   00150A  9288               	bcf	136,1,c	;volatile
  2882                           
  2883                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2884   00150C  9684               	bcf	132,3,c	;volatile
  2885                           
  2886                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2887   00150E  9086               	bcf	134,0,c	;volatile
  2888                           
  2889                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2890   001510  9088               	bcf	136,0,c	;volatile
  2891                           
  2892                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  2893   001512  887C               	bsf	124,4,c	;volatile
  2894                           
  2895                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  2896   001514  8280               	bsf	128,1,c	;volatile
  2897                           
  2898                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  2899   001516  867C               	bsf	124,3,c	;volatile
  2900                           
  2901                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  2902   001518  807E               	bsf	126,0,c	;volatile
  2903                           
  2904                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  2905   00151A  8080               	bsf	128,0,c	;volatile
  2906                           
  2907                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2908   00151C  9E84               	bcf	132,7,c	;volatile
  2909                           
  2910                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2911   00151E  9688               	bcf	136,3,c	;volatile
  2912                           
  2913                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2914   001520  8E7C               	bsf	124,7,c	;volatile
  2915                           
  2916                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2917   001522  8680               	bsf	128,3,c	;volatile
  2918                           
  2919                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  2920   001524  9081               	bcf	129,0,c	;volatile
  2921                           
  2922                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  2923   001526  9483               	bcf	131,2,c	;volatile
  2924                           
  2925                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  2926   001528  9084               	bcf	132,0,c	;volatile
  2927                           
  2928                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  2929   00152A  8079               	bsf	121,0,c	;volatile
  2930                           
  2931                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  2932   00152C  847B               	bsf	123,2,c	;volatile
  2933                           
  2934                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  2935   00152E  807C               	bsf	124,0,c	;volatile
  2936                           
  2937                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  2938   001530  9281               	bcf	129,1,c	;volatile
  2939                           
  2940                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  2941   001532  9C83               	bcf	131,6,c	;volatile
  2942                           
  2943                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  2944   001534  9488               	bcf	136,2,c	;volatile
  2945                           
  2946                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  2947   001536  8279               	bsf	121,1,c	;volatile
  2948                           
  2949                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  2950   001538  8C7B               	bsf	123,6,c	;volatile
  2951                           
  2952                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  2953   00153A  8480               	bsf	128,2,c	;volatile
  2954                           
  2955                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  2956   00153C  9287               	bcf	135,1,c	;volatile
  2957                           
  2958                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  2959   00153E  9881               	bcf	129,4,c	;volatile
  2960                           
  2961                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  2962   001540  9E86               	bcf	134,7,c	;volatile
  2963                           
  2964                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  2965   001542  827F               	bsf	127,1,c	;volatile
  2966                           
  2967                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  2968   001544  8879               	bsf	121,4,c	;volatile
  2969                           
  2970                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  2971   001546  8E7E               	bsf	126,7,c	;volatile
  2972                           
  2973                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  2974   001548  9087               	bcf	135,0,c	;volatile
  2975                           
  2976                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  2977   00154A  9E85               	bcf	133,7,c	;volatile
  2978                           
  2979                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  2980   00154C  9681               	bcf	129,3,c	;volatile
  2981                           
  2982                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  2983   00154E  807F               	bsf	127,0,c	;volatile
  2984                           
  2985                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  2986   001550  8E7D               	bsf	125,7,c	;volatile
  2987                           
  2988                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  2989   001552  8679               	bsf	121,3,c	;volatile
  2990   001554  0012               	return		;funcret
  2991   001556                     __end_of_buggy_lights_init:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _Timer0_init *****************
  2995 ;; Defined at:
  2996 ;;		line 7 in file "timers.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text22
  3025   00169A                     __ptext22:
  3026                           	callstack 0
  3027   00169A                     _Timer0_init:
  3028                           	callstack 29
  3029   00169A                     
  3030                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3031   00169A  50D6               	movf	214,w,c	;volatile
  3032   00169C  0B1F               	andlw	-225
  3033   00169E  0940               	iorlw	64
  3034   0016A0  6ED6               	movwf	214,c	;volatile
  3035   0016A2                     
  3036                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3037   0016A2  88D6               	bsf	214,4,c	;volatile
  3038   0016A4                     
  3039                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3040   0016A4  88D5               	bsf	213,4,c	;volatile
  3041                           
  3042                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3043   0016A6  50D6               	movf	214,w,c	;volatile
  3044   0016A8  0BF0               	andlw	-16
  3045   0016AA  090E               	iorlw	14
  3046   0016AC  6ED6               	movwf	214,c	;volatile
  3047                           
  3048                           ;timers.c: 20:     TMR0H = 0;
  3049   0016AE  0E00               	movlw	0
  3050   0016B0  6ED4               	movwf	212,c	;volatile
  3051                           
  3052                           ;timers.c: 21:     TMR0L = 0;
  3053   0016B2  0E00               	movlw	0
  3054   0016B4  6ED3               	movwf	211,c	;volatile
  3055   0016B6                     
  3056                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3057   0016B6  8ED5               	bsf	213,7,c	;volatile
  3058   0016B8                     
  3059                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3060   0016B8  010E               	movlb	14	; () banked
  3061   0016BA  8B29               	bsf	41,5,b	;volatile
  3062   0016BC                     
  3063                           ; BSR set to: 14
  3064                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3065   0016BC  8CF2               	bsf	242,6,c	;volatile
  3066   0016BE                     
  3067                           ; BSR set to: 14
  3068                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3069   0016BE  8EF2               	bsf	242,7,c	;volatile
  3070   0016C0                     
  3071                           ; BSR set to: 14
  3072   0016C0  0012               	return		;funcret
  3073   0016C2                     __end_of_Timer0_init:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _ISR *****************
  3077 ;; Defined at:
  3078 ;;		line 29 in file "timers.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		None
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		Interrupt level 2
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	intcode
  3106   000008                     __pintcode:
  3107                           	callstack 0
  3108   000008                     _ISR:
  3109                           	callstack 24
  3110                           
  3111                           ; BSR set to: 14
  3112                           ;incstack = 0
  3113   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3114   00000A                     
  3115                           ;timers.c: 32:     if (PIR0bits.TMR0IF) {
  3116   00000A  010E               	movlb	14	; () banked
  3117   00000C  AB33               	btfss	51,5,b	;volatile
  3118   00000E  EF0B  F000         	goto	i2u148_41
  3119   000012  EF0D  F000         	goto	i2u148_40
  3120   000016                     i2u148_41:
  3121   000016  EF0E  F000         	goto	i2l571
  3122   00001A                     i2u148_40:
  3123   00001A                     
  3124                           ; BSR set to: 14
  3125                           ;timers.c: 40:         PIR0bits.TMR0IF = 0;
  3126   00001A  9B33               	bcf	51,5,b	;volatile
  3127   00001C                     i2l571:
  3128                           
  3129                           ; BSR set to: 14
  3130   00001C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3131   00001E  0011               	retfie		f
  3132   000020                     __end_of_ISR:
  3133                           	callstack 0
  3134                           
  3135                           	psect	rparam
  3136   000000                     
  3137                           	psect	temp
  3138   00005F                     btemp:
  3139                           	callstack 0
  3140   00005F                     	ds	1
  3141   000000                     int$flags	set	btemp
  3142   000000                     wtemp8	set	btemp+1
  3143   000000                     ttemp5	set	btemp+1
  3144   000000                     ttemp6	set	btemp+4
  3145   000000                     ttemp7	set	btemp+8
  3146                           
  3147                           	psect	idloc
  3148                           
  3149                           ;Config register IDLOC0 @ 0x200000
  3150                           ;	unspecified, using default values
  3151   200000                     	org	2097152
  3152   200000  FFFF               	dw	65535
  3153                           
  3154                           ;Config register IDLOC1 @ 0x200002
  3155                           ;	unspecified, using default values
  3156   200002                     	org	2097154
  3157   200002  FFFF               	dw	65535
  3158                           
  3159                           ;Config register IDLOC2 @ 0x200004
  3160                           ;	unspecified, using default values
  3161   200004                     	org	2097156
  3162   200004  FFFF               	dw	65535
  3163                           
  3164                           ;Config register IDLOC3 @ 0x200006
  3165                           ;	unspecified, using default values
  3166   200006                     	org	2097158
  3167   200006  FFFF               	dw	65535
  3168                           
  3169                           ;Config register IDLOC4 @ 0x200008
  3170                           ;	unspecified, using default values
  3171   200008                     	org	2097160
  3172   200008  FFFF               	dw	65535
  3173                           
  3174                           ;Config register IDLOC5 @ 0x20000A
  3175                           ;	unspecified, using default values
  3176   20000A                     	org	2097162
  3177   20000A  FFFF               	dw	65535
  3178                           
  3179                           ;Config register IDLOC6 @ 0x20000C
  3180                           ;	unspecified, using default values
  3181   20000C                     	org	2097164
  3182   20000C  FFFF               	dw	65535
  3183                           
  3184                           ;Config register IDLOC7 @ 0x20000E
  3185                           ;	unspecified, using default values
  3186   20000E                     	org	2097166
  3187   20000E  FFFF               	dw	65535
  3188                           
  3189                           	psect	config
  3190                           
  3191                           ;Config register CONFIG1L @ 0x300000
  3192                           ;	External Oscillator mode Selection bits
  3193                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3194                           ;	Power-up default value for COSC bits
  3195                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3196   300000                     	org	3145728
  3197   300000  AA                 	db	170
  3198                           
  3199                           ;Config register CONFIG1H @ 0x300001
  3200                           ;	unspecified, using default values
  3201                           ;	Clock Out Enable bit
  3202                           ;	CLKOUTEN = 0x1, unprogrammed default
  3203                           ;	Clock Switch Enable bit
  3204                           ;	CSWEN = 0x1, unprogrammed default
  3205                           ;	Fail-Safe Clock Monitor Enable bit
  3206                           ;	FCMEN = 0x1, unprogrammed default
  3207   300001                     	org	3145729
  3208   300001  FF                 	db	255
  3209                           
  3210                           ;Config register CONFIG2L @ 0x300002
  3211                           ;	unspecified, using default values
  3212                           ;	Master Clear Enable bit
  3213                           ;	MCLRE = 0x1, unprogrammed default
  3214                           ;	Power-up Timer Enable bit
  3215                           ;	PWRTE = 0x1, unprogrammed default
  3216                           ;	Low-power BOR enable bit
  3217                           ;	LPBOREN = 0x1, unprogrammed default
  3218                           ;	Brown-out Reset Enable bits
  3219                           ;	BOREN = 0x3, unprogrammed default
  3220   300002                     	org	3145730
  3221   300002  FF                 	db	255
  3222                           
  3223                           ;Config register CONFIG2H @ 0x300003
  3224                           ;	unspecified, using default values
  3225                           ;	Brown Out Reset Voltage selection bits
  3226                           ;	BORV = 0x3, unprogrammed default
  3227                           ;	ZCD Disable bit
  3228                           ;	ZCD = 0x1, unprogrammed default
  3229                           ;	PPSLOCK bit One-Way Set Enable bit
  3230                           ;	PPS1WAY = 0x1, unprogrammed default
  3231                           ;	Stack Full/Underflow Reset Enable bit
  3232                           ;	STVREN = 0x1, unprogrammed default
  3233                           ;	Debugger Enable bit
  3234                           ;	DEBUG = 0x1, unprogrammed default
  3235                           ;	Extended Instruction Set Enable bit
  3236                           ;	XINST = 0x1, unprogrammed default
  3237   300003                     	org	3145731
  3238   300003  FF                 	db	255
  3239                           
  3240                           ;Config register CONFIG3L @ 0x300004
  3241                           ;	WDT Period Select bits
  3242                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3243                           ;	WDT operating mode
  3244                           ;	WDTE = OFF, WDT Disabled
  3245   300004                     	org	3145732
  3246   300004  9F                 	db	159
  3247                           
  3248                           ;Config register CONFIG3H @ 0x300005
  3249                           ;	unspecified, using default values
  3250                           ;	WDT Window Select bits
  3251                           ;	WDTCWS = 0x7, unprogrammed default
  3252                           ;	WDT input clock selector
  3253                           ;	WDTCCS = 0x7, unprogrammed default
  3254   300005                     	org	3145733
  3255   300005  FF                 	db	255
  3256                           
  3257                           ;Config register CONFIG4L @ 0x300006
  3258                           ;	unspecified, using default values
  3259                           ;	Write Protection Block 0
  3260                           ;	WRT0 = 0x1, unprogrammed default
  3261                           ;	Write Protection Block 1
  3262                           ;	WRT1 = 0x1, unprogrammed default
  3263                           ;	Write Protection Block 2
  3264                           ;	WRT2 = 0x1, unprogrammed default
  3265                           ;	Write Protection Block 3
  3266                           ;	WRT3 = 0x1, unprogrammed default
  3267                           ;	Write Protection Block 3
  3268                           ;	WRT4 = 0x1, unprogrammed default
  3269                           ;	Write Protection Block 3
  3270                           ;	WRT5 = 0x1, unprogrammed default
  3271                           ;	Write Protection Block 3
  3272                           ;	WRT6 = 0x1, unprogrammed default
  3273                           ;	Write Protection Block 3
  3274                           ;	WRT7 = 0x1, unprogrammed default
  3275   300006                     	org	3145734
  3276   300006  FF                 	db	255
  3277                           
  3278                           ;Config register CONFIG4H @ 0x300007
  3279                           ;	unspecified, using default values
  3280                           ;	Configuration Register Write Protection bit
  3281                           ;	WRTC = 0x1, unprogrammed default
  3282                           ;	Boot Block Write Protection bit
  3283                           ;	WRTB = 0x1, unprogrammed default
  3284                           ;	Data EEPROM Write Protection bit
  3285                           ;	WRTD = 0x1, unprogrammed default
  3286                           ;	Scanner Enable bit
  3287                           ;	SCANE = 0x1, unprogrammed default
  3288                           ;	Low Voltage Programming Enable bit
  3289                           ;	LVP = 0x1, unprogrammed default
  3290   300007                     	org	3145735
  3291   300007  FF                 	db	255
  3292                           
  3293                           ;Config register CONFIG5L @ 0x300008
  3294                           ;	unspecified, using default values
  3295                           ;	UserNVM Program Memory Code Protection bit
  3296                           ;	CP = 0x1, unprogrammed default
  3297                           ;	DataNVM Memory Code Protection bit
  3298                           ;	CPD = 0x1, unprogrammed default
  3299   300008                     	org	3145736
  3300   300008  FF                 	db	255
  3301                           
  3302                           ;Config register CONFIG5H @ 0x300009
  3303                           ;	unspecified, using default values
  3304   300009                     	org	3145737
  3305   300009  FF                 	db	255
  3306                           
  3307                           ;Config register CONFIG6L @ 0x30000A
  3308                           ;	unspecified, using default values
  3309                           ;	Table Read Protection Block 0
  3310                           ;	EBTR0 = 0x1, unprogrammed default
  3311                           ;	Table Read Protection Block 1
  3312                           ;	EBTR1 = 0x1, unprogrammed default
  3313                           ;	Table Read Protection Block 2
  3314                           ;	EBTR2 = 0x1, unprogrammed default
  3315                           ;	Table Read Protection Block 3
  3316                           ;	EBTR3 = 0x1, unprogrammed default
  3317                           ;	Table Read Protection Block 4
  3318                           ;	EBTR4 = 0x1, unprogrammed default
  3319                           ;	Table Read Protection Block 5
  3320                           ;	EBTR5 = 0x1, unprogrammed default
  3321                           ;	Table Read Protection Block 6
  3322                           ;	EBTR6 = 0x1, unprogrammed default
  3323                           ;	Table Read Protection Block 7
  3324                           ;	EBTR7 = 0x1, unprogrammed default
  3325   30000A                     	org	3145738
  3326   30000A  FF                 	db	255
  3327                           
  3328                           ;Config register CONFIG6H @ 0x30000B
  3329                           ;	unspecified, using default values
  3330                           ;	Boot Block Table Read Protection bit
  3331                           ;	EBTRB = 0x1, unprogrammed default
  3332   30000B                     	org	3145739
  3333   30000B  FF                 	db	255
  3334                           tosu	equ	0xFFF
  3335                           tosh	equ	0xFFE
  3336                           tosl	equ	0xFFD
  3337                           stkptr	equ	0xFFC
  3338                           pclatu	equ	0xFFB
  3339                           pclath	equ	0xFFA
  3340                           pcl	equ	0xFF9
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           prodh	equ	0xFF4
  3346                           prodl	equ	0xFF3
  3347                           indf0	equ	0xFEF
  3348                           postinc0	equ	0xFEE
  3349                           postdec0	equ	0xFED
  3350                           preinc0	equ	0xFEC
  3351                           plusw0	equ	0xFEB
  3352                           fsr0h	equ	0xFEA
  3353                           fsr0l	equ	0xFE9
  3354                           wreg	equ	0xFE8
  3355                           indf1	equ	0xFE7
  3356                           postinc1	equ	0xFE6
  3357                           postdec1	equ	0xFE5
  3358                           preinc1	equ	0xFE4
  3359                           plusw1	equ	0xFE3
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           bsr	equ	0xFE0
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           preinc2	equ	0xFDC
  3367                           plusw2	equ	0xFDB
  3368                           fsr2h	equ	0xFDA
  3369                           fsr2l	equ	0xFD9
  3370                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        81
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160      0     143
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2539$buffer	PTR unsigned char  size(2) Largest target is 0

    S2539$source	PTR const unsigned char  size(2) Largest target is 0

    sendArraySerial4@arr	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 21
		 -> sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 21
		 -> sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendArraySerial4
    _sendArraySerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    4716
                                             72 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                   _sendArraySerial4
 ---------------------------------------------------------------------------------
 (1) _sendArraySerial4                                    26    25      1    4015
                                             46 COMRAM    26    25      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3480
                                             27 COMRAM    19    15      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _sendArraySerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      62        0.0%
DATA                 0      0     129       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 11:02:15 2024

               _turn180Delay 0064              _trail_timer_low 0089                           l31 1554  
                         l53 1646                           l56 16E0                 ___awdiv@sign 0006  
           _trail_timer_high 009D                          l144 1396                          l242 1672  
                        l404 145E                          l412 13FC                          l245 1698  
                        l254 172C                          l239 1670                          l248 1736  
                        l257 1722                          l386 16FE                          l563 16C0  
                        l395 1702                          l805 11AC                          l398 1716  
                        l818 125C                          _ISR 0008                          u810 10FC  
                        u811 10F8                          u820 1116                          u900 1212  
                        u821 1112                          u901 120E                          u830 113C  
                        u910 1228                          u831 1138                          u911 1224  
                        u840 115A                          u920 124C                          u841 1156  
                        u921 1248                          u850 1176                          u930 126E  
                        u851 1172                          u931 126A                          u860 119C  
                        u940 127E                          u861 1198                          u941 127A  
                        u870 11C0                          u950 12A4                          u871 11BC  
                        u951 12A0                          u880 11DA                          u960 12D6  
                        u881 11D6                          u961 12D2                          u890 11F4  
                        u970 15EE                          u891 11F0                          u971 15EA  
                        u980 1682                          u981 167E                          u990 1698  
                        u991 1694                          _abs 15E0                 ___awmod@sign 0006  
                        wreg 0FE8                  _squareDelay 0060                         ?_ISR 0001  
                       ?_abs 0007                         l2100 10EA                         l1300 14B4  
                       l2110 1116                         l2102 10EE                         l2200 1682  
                       l2120 1144                         l2112 111E                         l2104 10FC  
                       l1304 15FA                         l2130 117E                         l2122 114C  
                       l2114 1122                         l2106 1104                         l1330 1738  
                       l2210 0E4E                         l2202 0E0A                         l1307 1612  
                       l2140 11A4                         l2132 1180                         l2124 115A  
                       l2116 112A                         l2108 1108                         l2220 0EB4  
                       l2212 0E52                         l2204 0E12                         l2300 148C  
                       l1252 15DE                         l2310 165C                         l2302 1648  
                       l2134 1186                         l2126 1160                         l2118 113C  
                       l2150 11C8                         l2230 0F26                         l2222 0EBE  
                       l2214 0E5C                         l2206 0E38                         l1319 1306  
                       l2312 165E                         l2304 1652                         l2128 1176  
                       l2136 118C                         l2160 11FC                         l2152 11CC  
                       l2144 11AE                         l2240 0F76                         l2232 0F38  
                       l2224 0ED6                         l2216 0E7C                         l2208 0E40  
                       l2306 1658                         l2314 16C4                         l2402 13FE  
                       l2138 119C                         l2170 1236                         l2162 1204  
                       l2154 11DA                         l2146 11B2                         l2250 0FC0  
                       l2242 0F7E                         l2234 0F48                         l2226 0F06  
                       l2218 0E9C                         l2410 159C                         l2308 165A  
                       l2404 1402                         l2164 1212                         l2172 123C  
                       l2156 11E2                         l2148 11C0                         l2180 125E  
                       l2244 0F98                         l2236 0F58                         l2228 0F22  
                       l2420 15D6                         l2412 15A4                         l1293 0FAC  
                       l2262 172E                         l2270 1724                         l2430 1622  
                       l2406 1428                         l2174 124C                         l2166 1228  
                       l2158 11F4                         l2190 12D6                         l2182 126E  
                       l1294 0FFE                         l2238 0F68                         l2246 0F9A  
                       l2254 0FCC                         l2414 15AC                         l2424 1508  
                       l2264 1732                         l2272 1728                         l2432 1632  
                       l2408 142C                         l2176 1254                         l2168 1230  
                       l2184 127E                         l2256 0FEE                         l2248 0FB8  
                       l2416 15B4                         l2266 171A                         l2434 163C  
                       l2426 1614                         l2530 16EE                         l2290 1702  
                       l2194 15E0                         l2186 1288                         l2258 0FF6  
                       l2418 15CC                         l1299 14AC                         l2540 16A2  
                       l2268 171E                         l2428 1618                         l2460 1308  
                       l2532 16F8                         l2292 1712                         l2196 15EE  
                       l2188 12A4                         l2620 1018                         l2550 16BE  
                       l2542 16A4                         l2198 1672                         l2470 1370  
                       l2462 1318                         l2534 16FA                         l2526 16E2  
                       l2294 1460                         l2630 1038                         l2622 1024  
                       l2544 16B6                         l2480 138A                         l2472 1372  
                       l2464 133E                         l2536 16FC                         l2528 16EC  
                       l2296 1464                         l2560 13C8                         l2552 1398  
                       l2640 1054                         l2632 1040                         l2624 1028  
                       l2616 1000                         l2546 16B8                         l2538 169A  
                       l2482 1394                         l2474 137C                         l2466 1342  
                       l2298 1472                         l2562 13CC                         l2650 1074  
                       l2642 105C                         l2634 1048                         l2626 102C  
                       l2618 1018                         l2548 16BC                         l2476 137E  
                       l2468 1366                         l2564 13E2                         l2660 1084  
                       l2652 1078                         l2644 1064                         l2636 104C  
                       l2628 1030                         l2478 1388                         l2558 13A4  
                       l2670 10C2                         l2662 1086                         l2654 107C  
                       l2646 106C                         l2638 1050                         l2672 10CA  
                       l2664 1094                         l2656 107E                         l2648 1070  
                       l2666 109E                         l2658 1080                         l2668 10A0  
                       STR_1 0E01                         STR_2 0E06                         STR_3 0E06  
                       STR_4 0E03                         u1000 0E38                         u1001 0E34  
                       u1010 0E7C                         u1011 0E78                         u1020 0E9C  
                       u1021 0E98                         u1030 0ED2                         u1031 0ECC  
                       u1120 1712                         u1040 0ED4                         u1121 170E  
                       u1050 0F38                         u1130 14AC                         u1051 0F34  
                       u1131 14A8                         u1300 1424                         u1060 0F48  
                       u1061 0F44                         u1310 144E                         u1070 0F58  
                       u1071 0F54                         u1320 145E                         u1080 0F68  
                       u1321 145A                         u1081 0F64                         u1090 0FAC  
                       u1330 13E2                         u1410 1094                         u1307 141A  
                       u1091 0FA8                         u1331 13DE                         u1411 1090  
                       u1420 10B2                         u1317 1444                         u1421 10AA  
               _BAUD4CONbits 0EE9                         u1438 10B4                         _T2PR 0FBC  
                       u1907 1628                         u1887 100A                         u1897 10D4  
                       abs@a 0007                         _dbuf 00B1                         _main 1000  
                       _prec 00E9                         _nout 00E5                         fsr0h 0FEA  
                       fsr1h 0FE2                         indf0 0FEF                         fsr2h 0FDA  
                       fsr0l 0FE9                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 005F                         start 0020  
               ___param_bank 0000                        ??_ISR 0001                        ??_abs 0009  
                      ?_main 0001           _timer_high_pointer 0070              __end_of___awdiv 11AE  
            __end_of___awmod 125E              ___awdiv@divisor 0003                        i2l570 001A  
                      i2l571 001C              ___awdiv@counter 0005                 vfpfcnvrt@cnt 0010  
               vfpfcnvrt@fmt 000C                        _TMR0H 0FD4                        _TMR0L 0FD3  
    __end_of_sendCharSerial4 1718            sendArraySerial4@i 0047   __end_of_I2C_2_Master_Start 1738  
 __end_of_I2C_2_Master_Write 1724                  _turningGear 0071                        _flags 00EB  
                      _fputc 125E                        _width 00E7                        _putch 1738  
          _turnRight135Delay 0066                        tablat 0FF5              _turnLeft90Delay 006C  
                      ttemp5 0060                        ttemp6 0063                        ttemp7 0067  
                      status 0FD8                        wtemp8 0060              __end_of_sprintf 15E0  
            __initialization 1556                 __end_of_main 10EA                       ??_main 0049  
              __activetblptr 0003                       ?_fputc 0001                       _CCPR1H 0FAA  
                     _CCPR2H 0FA6                       _CCPR3H 0F25                       _CCPR4H 0F21  
           ___awdiv@dividend 0001                       ?_putch 0001                       _RC0PPS 0E62  
                     _RC4REG 0EE3                       _RE2PPS 0E74                       _RD5PPS 0E6F  
                     _RC7PPS 0E69                       _RD6PPS 0E70                       _RE4PPS 0E76  
                     i2l2814 000A                       _RG6PPS 0E88                vfpfcnvrt@done 000F  
   __end_of_color_click_init 1648                       _RX4PPS 0E15                       _TX4REG 0EE4  
           _sendArraySerial4 1398             _turnLeft135Delay 0068                ??_Timer0_init 0001  
               _CCPTMRS0bits 0FAD                 vfprintf@cfmt 001B                    ??___awdiv 0005  
                  ??___awmod 0005                       clear_0 157C                       clear_1 1588  
           ___awdiv@quotient 0007              ___awmod@divisor 0003                       isa$std 0001  
            ___awmod@counter 0005                       fputc@c 0001            _timer_low_pointer 006F  
               __mediumconst 0000                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8             ?_sendCharSerial4 0001                       putch@c 0001  
           __end_of_vfprintf 14B6            ??_initDCmotorsPWM 0003                    ??_sprintf 0020  
          _buggy_lights_init 1508                   __accesstop 0060      __end_of__initialization 1592  
         ?_buggy_lights_init 0001                ___rparam_used 0001               __pcstackCOMRAM 0001  
               __pidataBANK0 14B6          ??_buggy_lights_init 0001                __end_of_fputc 1308  
              __end_of_putch 173A          __end_of_Timer0_init 16C2                      ??_fputc 0004  
  __end_of_buggy_lights_init 1556                      ??_putch 0001                   __pbssBANK0 00B1  
                 __pbssBANK1 0100            _color_writetoaddr 16C2                 _T2CLKCONbits 0FBF  
         ?_color_writetoaddr 0003          ??_color_writetoaddr 0004                      _SP4BRGH 0EE6  
                    _SP4BRGL 0EE5                      _SSP2ADD 0ED6                      _SSP2BUF 0ED5  
     color_writetoaddr@value 0003    __end_of_color_writetoaddr 16E2           _I2C_2_Master_Start 172E  
                 _initUSART4 16E2           _I2C_2_Master_Write 1718                      __Hparam 0000  
                    __Lparam 0000          sendArraySerial4@arr 002F                  _Timer0_init 169A  
    sendStringSerial4@string 0002                      ___awdiv 10EA                      ___awmod 11AE  
        ?_I2C_2_Master_Start 0001      sendArraySerial4@tempStr 0031          ?_I2C_2_Master_Write 0001  
                  ?_vfprintf 0018                 __psmallconst 0E00                      __pcinit 1556  
                    __ramtop 0E00                      __ptext0 1000                      __ptext1 1398  
                    __ptext2 159C                      __ptext3 1460                      __ptext4 0E0A  
                    __ptext5 125E                      __ptext6 1738                      __ptext7 15E0  
                    __ptext8 11AE                      __ptext9 10EA                    _T2CONbits 0FBD  
           ___awmod@dividend 0001     __end_of_sendArraySerial4 13FE                    _T2HLTbits 0FBE  
              _RxBufWriteCnt 00EE                      _sprintf 159C         ??_I2C_2_Master_Start 0002  
       ??_I2C_2_Master_Write 0002         end_of_initialization 1592                      fputc@fp 0003  
          ?_color_click_init 0001           ??_color_click_init 0005            __end_of_vfpfcnvrt 1000  
                    postdec1 0FE5                      postdec2 0FDD                      postinc0 0FEE  
                    postinc1 0FE6                      postinc2 0FDE             vfpfcnvrt@convarg 0013  
                 ??_vfprintf 001B              _initDCmotorsPWM 1308                    _PORTFbits 0F8E  
                  _TRISAbits 0F81                    _TRISCbits 0F83                    _TRISDbits 0F84  
                  _TRISEbits 0F85                    _TRISFbits 0F86                    _TRISGbits 0F87  
                  _TRISHbits 0F88     color_writetoaddr@address 0004                  _CCP1CONbits 0FAB  
               _EUSART4RXbuf 00D1                 _EUSART4TXbuf 0100                  _CCP2CONbits 0FA7  
                _CCP3CONbits 0F26                  ?_initUSART4 0001                  _CCP4CONbits 0F22  
  sendCharSerial4@charToSend 0001                   main@motorL 004B                   main@motorR 0054  
                vfpfcnvrt@ap 000D                  vfpfcnvrt@cp 0012                  vfpfcnvrt@fp 000B  
        start_initialization 1556                  __end_of_ISR 0020                  __end_of_abs 1614  
              _TxBufWriteCnt 005E             _turnRight90Delay 006A        sendArraySerial4@index 0046  
    __end_of_initDCmotorsPWM 1398                  vfprintf@fmt 0019                  __pdataBANK0 0060  
                __pbssCOMRAM 005D                    _backtrack 00EC                 ?_Timer0_init 0001  
                  __pintcode 0008                     ?___awdiv 0001                     ?___awmod 0001  
                __smallconst 0E00            _I2C_2_Master_Idle 1672            _I2C_2_Master_Init 1648  
          _I2C_2_Master_Stop 1724            ?_sendArraySerial4 002F                 _RxBufReadCnt 00ED  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001  
              _headbuttDelay 0062     initDCmotorsPWM@PWMperiod 0001           ??_sendArraySerial4 0030  
                   ?_sprintf 001C                    _rampDelay 0074            _sendStringSerial4 13FE  
        ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001                     _LATAbits 0F79  
        ??_I2C_2_Master_Stop 0002                     _LATCbits 0F7B                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0002  
                   _PIE4bits 0E2D                     i2u148_40 001A                     i2u148_41 0016  
                   _PIR0bits 0E33                     _PIR4bits 0E37             ?_initDCmotorsPWM 0001  
          ??_sendCharSerial4 0001                     _SSP2CON2 0EDA          ??_sendStringSerial4 0004  
                   _SSP2STAT 0ED8                    _vfpfcnvrt 0E0A    __end_of_I2C_2_Master_Idle 169A  
  __end_of_I2C_2_Master_Init 1672    __end_of_I2C_2_Master_Stop 172E  I2C_2_Master_Write@data_byte 0002  
               _TxBufReadCnt 005D                   vfpfcnvrt@c 0017                    copy_data0 156A  
  __end_of_sendStringSerial4 1460                 ??_initUSART4 0001                     __Hrparam 0000  
                 vfprintf@ap 001A                     __Lrparam 0000                   vfprintf@fp 0018  
                 ?_vfpfcnvrt 000B                   _ANSELDbits 0EA7                   _ANSELFbits 0EB4  
                 sprintf@fmt 001D                   sprintf@ret 0020                   _T0CON0bits 0FD5  
                 _T0CON1bits 0FD6           __end_of_initUSART4 1700                     __ptext10 13FE  
                   __ptext11 1700                     __ptext20 1648                     __ptext12 16E2  
                   __ptext21 1508                     __ptext13 1308                     __ptext22 169A  
                   __ptext14 1614                     __ptext15 16C2                     __ptext16 1718  
                   __ptext17 1724                     __ptext18 172E                     __ptext19 1672  
               _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA                     isa$xinst 0000  
                 _RC4STAbits 0EE7                     int$flags 005F                     _vfprintf 1460  
                 _INTCONbits 0FF2                     intlevel2 0000                    sprintf@ap 0022  
               _topGearRight 0072            _manoeuvre_pointer 006E                  ??_vfpfcnvrt 000E  
           _color_click_init 1614                  _topGearLeft 0073                     sprintf@f 0023  
                   sprintf@s 001C                   _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C  
            _trail_manoeuvre 0075                   _TX4STAbits 0EE8              _sendCharSerial4 1700  
