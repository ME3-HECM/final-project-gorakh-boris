

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 13:16:08 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 18/08/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F67K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataBANK0
    85   0017A6                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _squareDelay
    89   0017A6  012C               	dw	300
    90                           
    91                           ;initializer for _headbuttDelay
    92   0017A8  0046               	dw	70
    93                           
    94                           ;initializer for _turn180Delay
    95   0017AA  01FE               	dw	510
    96                           
    97                           ;initializer for _turnRight135Delay
    98   0017AC  012C               	dw	300
    99                           
   100                           ;initializer for _turnLeft135Delay
   101   0017AE  012C               	dw	300
   102                           
   103                           ;initializer for _turnRight90Delay
   104   0017B0  00AF               	dw	175
   105                           
   106                           ;initializer for _turnLeft90Delay
   107   0017B2  00AF               	dw	175
   108                           
   109                           ;initializer for _manoeuvre_pointer
   110   0017B4  A2                 	db	low _trail_manoeuvre
   111                           
   112                           ;initializer for _timer_low_pointer
   113   0017B5  B6                 	db	low _trail_timer_low
   114                           
   115                           ;initializer for _timer_high_pointer
   116   0017B6  DF                 	db	low _trail_timer_high
   117                           
   118                           ;initializer for _turningGear
   119   0017B7  2A                 	db	42
   120                           
   121                           ;initializer for _topGearRight
   122   0017B8  14                 	db	20
   123                           
   124                           ;initializer for _topGearLeft
   125   0017B9  14                 	db	20
   126                           
   127                           ;initializer for _rampDelay
   128   0017BA  08                 	db	8
   129                           
   130                           ;initializer for _trail_timer_high
   131   0017BB  03                 	db	3
   132   0017BC  06                 	db	6
   133   0017BD  03                 	db	3
   134   0017BE  06                 	db	6
   135   0017BF  03                 	db	3
   136   0017C0  06                 	db	6
   137   0017C1  03                 	db	3
   138   0017C2  06                 	db	6
   139   0017C3  03                 	db	3
   140   0017C4  06                 	db	6
   141   0017C5  03                 	db	3
   142   0017C6  06                 	db	6
   143   0017C7  03                 	db	3
   144   0017C8  06                 	db	6
   145   0017C9  03                 	db	3
   146   0017CA  06                 	db	6
   147   0017CB  03                 	db	3
   148   0017CC  06                 	db	6
   149   0017CD  03                 	db	3
   150   0017CE  06                 	db	6
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _LATEbits	set	3965
   155   000000                     _TRISEbits	set	3973
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISGbits	set	3975
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATHbits	set	3968
   160   000000                     _TRISFbits	set	3974
   161   000000                     _TRISHbits	set	3976
   162   000000                     _SSP2CON2bits	set	3802
   163   000000                     _RX4PPS	set	3605
   164   000000                     _SSP2CLKPPS	set	3612
   165   000000                     _SSP2DATPPS	set	3613
   166   000000                     _RC7PPS	set	3689
   167   000000                     _RE2PPS	set	3700
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATDbits	set	3964
   170   000000                     _TRISDbits	set	3972
   171   000000                     _PORTFbits	set	3982
   172   000000                     _T2PR	set	4028
   173   000000                     _T2CONbits	set	4029
   174   000000                     _CCPR2H	set	4006
   175   000000                     _CCPR1H	set	4010
   176   000000                     _TRISCbits	set	3971
   177   000000                     _TRISAbits	set	3969
   178   000000                     _LATCbits	set	3963
   179   000000                     _RE4PPS	set	3702
   180   000000                     _RG6PPS	set	3720
   181   000000                     _RD5PPS	set	3695
   182   000000                     _ANSELDbits	set	3751
   183   000000                     _SSP2ADD	set	3798
   184   000000                     _SSP2CON1bits	set	3801
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _CCP2CONbits	set	4007
   196   000000                     _CCP3CONbits	set	3878
   197   000000                     _CCP4CONbits	set	3874
   198   000000                     _RC4REG	set	3811
   199   000000                     _SP4BRGL	set	3813
   200   000000                     _TX4STAbits	set	3816
   201   000000                     _BAUD4CONbits	set	3817
   202   000000                     _SSP2CON2	set	3802
   203   000000                     _SSP2STAT	set	3800
   204   000000                     _ANSELFbits	set	3764
   205   000000                     _SSP2BUF	set	3797
   206   000000                     _PIE0bits	set	3625
   207   000000                     _PIE4bits	set	3629
   208   000000                     _PIR4bits	set	3639
   209   000000                     _RC0PPS	set	3682
   210   000000                     _RD6PPS	set	3696
   211   000000                     _PIR0bits	set	3635
   212   000000                     _INTCONbits	set	4082
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_1:
   219                           
   220                           ; BSR set to: 14
   221   000E01  25                 	db	37
   222   000E02  64                 	db	100	;'d'
   223   000E03  20                 	db	32
   224   000E04  0D                 	db	13
   225   000E05  00                 	db	0
   226   000E06                     STR_2:
   227                           
   228                           ; BSR set to: 14
   229   000E06  25                 	db	37
   230   000E07  64                 	db	100	;'d'
   231   000E08  00                 	db	0
   232   000E09  00                 	db	0	; dummy byte at the end
   233   000000                     
   234                           ; #config settings
   235                           
   236                           	psect	cinit
   237   001690                     __pcinit:
   238                           	callstack 0
   239   001690                     start_initialization:
   240                           	callstack 0
   241   001690                     __initialization:
   242                           	callstack 0
   243                           
   244                           ; Initialize objects allocated to BANK0 (41 bytes)
   245                           ; load TBLPTR registers with __pidataBANK0
   246   001690  0EA6               	movlw	low __pidataBANK0
   247   001692  6EF6               	movwf	tblptrl,c
   248   001694  0E17               	movlw	high __pidataBANK0
   249   001696  6EF7               	movwf	tblptrh,c
   250   001698  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   251   00169A  6EF8               	movwf	tblptru,c
   252   00169C  EE00  F0CA         	lfsr	0,__pdataBANK0
   253   0016A0  EE10 F029          	lfsr	1,41
   254   0016A4                     copy_data0:
   255   0016A4  0009               	tblrd		*+
   256   0016A6  CFF5 FFEE          	movff	tablat,postinc0
   257   0016AA  50E5               	movf	postdec1,w,c
   258   0016AC  50E1               	movf	fsr1l,w,c
   259   0016AE  E1FA               	bnz	copy_data0
   260                           
   261                           ; Clear objects allocated to BANK1 (60 bytes)
   262   0016B0  EE01  F000         	lfsr	0,__pbssBANK1
   263   0016B4  0E3C               	movlw	60
   264   0016B6                     clear_0:
   265   0016B6  6AEE               	clrf	postinc0,c
   266   0016B8  06E8               	decf	wreg,f,c
   267   0016BA  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (106 bytes)
   270   0016BC  EE00  F060         	lfsr	0,__pbssBANK0
   271   0016C0  0E6A               	movlw	106
   272   0016C2                     clear_1:
   273   0016C2  6AEE               	clrf	postinc0,c
   274   0016C4  06E8               	decf	wreg,f,c
   275   0016C6  E1FD               	bnz	clear_1
   276   0016C8                     end_of_initialization:
   277                           	callstack 0
   278   0016C8                     __end_of__initialization:
   279                           	callstack 0
   280   0016C8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281   0016CA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282   0016CC  0100               	movlb	0
   283   0016CE  EF00  F008         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssBANK0
   286   000060                     __pbssBANK0:
   287                           	callstack 0
   288   000060                     _dbuf:
   289                           	callstack 0
   290   000060                     	ds	32
   291   000080                     _EUSART4RXbuf:
   292                           	callstack 0
   293   000080                     	ds	20
   294   000094                     _nout:
   295                           	callstack 0
   296   000094                     	ds	2
   297   000096                     _width:
   298                           	callstack 0
   299   000096                     	ds	2
   300   000098                     _prec:
   301                           	callstack 0
   302   000098                     	ds	2
   303   00009A                     _flags:
   304                           	callstack 0
   305   00009A                     	ds	1
   306   00009B                     _manoeuvre_count:
   307                           	callstack 0
   308   00009B                     	ds	1
   309   00009C                     _returnFlag:
   310                           	callstack 0
   311   00009C                     	ds	1
   312   00009D                     _returning:
   313                           	callstack 0
   314   00009D                     	ds	1
   315   00009E                     _TxBufReadCnt:
   316                           	callstack 0
   317   00009E                     	ds	1
   318   00009F                     _TxBufWriteCnt:
   319                           	callstack 0
   320   00009F                     	ds	1
   321   0000A0                     _RxBufReadCnt:
   322                           	callstack 0
   323   0000A0                     	ds	1
   324   0000A1                     _RxBufWriteCnt:
   325                           	callstack 0
   326   0000A1                     	ds	1
   327   0000A2                     _trail_manoeuvre:
   328                           	callstack 0
   329   0000A2                     	ds	20
   330   0000B6                     _trail_timer_low:
   331                           	callstack 0
   332   0000B6                     	ds	20
   333                           
   334                           	psect	dataBANK0
   335   0000CA                     __pdataBANK0:
   336                           	callstack 0
   337   0000CA                     _squareDelay:
   338                           	callstack 0
   339   0000CA                     	ds	2
   340   0000CC                     _headbuttDelay:
   341                           	callstack 0
   342   0000CC                     	ds	2
   343   0000CE                     _turn180Delay:
   344                           	callstack 0
   345   0000CE                     	ds	2
   346   0000D0                     _turnRight135Delay:
   347                           	callstack 0
   348   0000D0                     	ds	2
   349   0000D2                     _turnLeft135Delay:
   350                           	callstack 0
   351   0000D2                     	ds	2
   352   0000D4                     _turnRight90Delay:
   353                           	callstack 0
   354   0000D4                     	ds	2
   355   0000D6                     _turnLeft90Delay:
   356                           	callstack 0
   357   0000D6                     	ds	2
   358   0000D8                     _manoeuvre_pointer:
   359                           	callstack 0
   360   0000D8                     	ds	1
   361   0000D9                     _timer_low_pointer:
   362                           	callstack 0
   363   0000D9                     	ds	1
   364   0000DA                     _timer_high_pointer:
   365                           	callstack 0
   366   0000DA                     	ds	1
   367   0000DB                     _turningGear:
   368                           	callstack 0
   369   0000DB                     	ds	1
   370   0000DC                     _topGearRight:
   371                           	callstack 0
   372   0000DC                     	ds	1
   373   0000DD                     _topGearLeft:
   374                           	callstack 0
   375   0000DD                     	ds	1
   376   0000DE                     _rampDelay:
   377                           	callstack 0
   378   0000DE                     	ds	1
   379   0000DF                     _trail_timer_high:
   380                           	callstack 0
   381   0000DF                     	ds	20
   382                           
   383                           	psect	bssBANK1
   384   000100                     __pbssBANK1:
   385                           	callstack 0
   386   000100                     _EUSART4TXbuf:
   387                           	callstack 0
   388   000100                     	ds	60
   389                           
   390                           	psect	cstackCOMRAM
   391   000001                     __pcstackCOMRAM:
   392                           	callstack 0
   393   000001                     ??_I2C_2_Master_Idle:
   394   000001                     ?___awdiv:
   395                           	callstack 0
   396   000001                     ?___awmod:
   397                           	callstack 0
   398   000001                     sendCharSerial4@charToSend:
   399                           	callstack 0
   400   000001                     initDCmotorsPWM@PWMperiod:
   401                           	callstack 0
   402   000001                     ___awdiv@dividend:
   403                           	callstack 0
   404   000001                     ___awmod@dividend:
   405                           	callstack 0
   406   000001                     fputc@c:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x0
   410   000001                     	ds	1
   411   000002                     ??_I2C_2_Master_Read:
   412   000002                     I2C_2_Master_Write@data_byte:
   413                           	callstack 0
   414   000002                     sendStringSerial4@string:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x1
   418   000002                     	ds	1
   419   000003                     color_writetoaddr@value:
   420                           	callstack 0
   421   000003                     I2C_2_Master_Read@ack:
   422                           	callstack 0
   423   000003                     fputc@fp:
   424                           	callstack 0
   425   000003                     ___awdiv@divisor:
   426                           	callstack 0
   427   000003                     ___awmod@divisor:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431   000003                     	ds	1
   432   000004                     ??_fputc:
   433   000004                     color_writetoaddr@address:
   434                           	callstack 0
   435   000004                     I2C_2_Master_Read@tmp:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x3
   439   000004                     	ds	1
   440   000005                     ??_color_click_init:
   441   000005                     ?_color_read_Red:
   442                           	callstack 0
   443   000005                     ?_color_read_Blue:
   444                           	callstack 0
   445   000005                     ?_color_read_Green:
   446                           	callstack 0
   447   000005                     ?_color_read_Clear:
   448                           	callstack 0
   449   000005                     ___awdiv@counter:
   450                           	callstack 0
   451   000005                     ___awmod@counter:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x4
   455   000005                     	ds	1
   456   000006                     ___awdiv@sign:
   457                           	callstack 0
   458   000006                     ___awmod@sign:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x5
   462   000006                     	ds	1
   463   000007                     ??_color_read_Red:
   464   000007                     ??_color_read_Blue:
   465   000007                     ??_color_read_Green:
   466   000007                     ??_color_read_Clear:
   467   000007                     ?_abs:
   468                           	callstack 0
   469   000007                     ___awdiv@quotient:
   470                           	callstack 0
   471   000007                     abs@a:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x6
   475   000007                     	ds	2
   476   000009                     ??_abs:
   477                           
   478                           ; 1 bytes @ 0x8
   479   000009                     	ds	1
   480   00000A                     color_read_Red@tmp:
   481                           	callstack 0
   482   00000A                     color_read_Blue@tmp:
   483                           	callstack 0
   484   00000A                     color_read_Green@tmp:
   485                           	callstack 0
   486   00000A                     color_read_Clear@tmp:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x9
   490   00000A                     	ds	1
   491   00000B                     ?_vfpfcnvrt:
   492                           	callstack 0
   493   00000B                     vfpfcnvrt@fp:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xA
   497   00000B                     	ds	1
   498   00000C                     getRGBCval@p:
   499                           	callstack 0
   500   00000C                     vfpfcnvrt@fmt:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0xB
   504   00000C                     	ds	1
   505   00000D                     vfpfcnvrt@ap:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xC
   509   00000D                     	ds	1
   510   00000E                     ??_vfpfcnvrt:
   511                           
   512                           ; 1 bytes @ 0xD
   513   00000E                     	ds	1
   514   00000F                     vfpfcnvrt@done:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0xE
   518   00000F                     	ds	1
   519   000010                     vfpfcnvrt@cnt:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xF
   523   000010                     	ds	2
   524   000012                     vfpfcnvrt@cp:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528   000012                     	ds	1
   529   000013                     vfpfcnvrt@convarg:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x12
   533   000013                     	ds	4
   534   000017                     vfpfcnvrt@c:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x16
   538   000017                     	ds	1
   539   000018                     ?_vfprintf:
   540                           	callstack 0
   541   000018                     vfprintf@fp:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x17
   545   000018                     	ds	1
   546   000019                     vfprintf@fmt:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x18
   550   000019                     	ds	1
   551   00001A                     vfprintf@ap:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x19
   555   00001A                     	ds	1
   556   00001B                     vfprintf@cfmt:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x1A
   560   00001B                     	ds	1
   561   00001C                     ?_sprintf:
   562                           	callstack 0
   563   00001C                     sprintf@s:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1B
   567   00001C                     	ds	2
   568   00001E                     sprintf@fmt:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x1D
   572   00001E                     	ds	3
   573   000021                     sprintf@ret:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x20
   577   000021                     	ds	2
   578   000023                     sprintf@ap:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x22
   582   000023                     	ds	1
   583   000024                     sprintf@f:
   584                           	callstack 0
   585                           
   586                           ; 12 bytes @ 0x23
   587   000024                     	ds	12
   588   000030                     sendIntSerial4@integer:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x2F
   592   000030                     	ds	2
   593   000032                     sendIntSerial4@string:
   594                           	callstack 0
   595                           
   596                           ; 17 bytes @ 0x31
   597   000032                     	ds	17
   598   000043                     ??_main:
   599                           
   600                           ; 1 bytes @ 0x42
   601   000043                     	ds	2
   602   000045                     main@measured_colour:
   603                           	callstack 0
   604                           
   605                           ; 8 bytes @ 0x44
   606   000045                     	ds	8
   607   00004D                     main@motorL:
   608                           	callstack 0
   609                           
   610                           ; 9 bytes @ 0x4C
   611   00004D                     	ds	9
   612   000056                     main@motorR:
   613                           	callstack 0
   614                           
   615                           ; 9 bytes @ 0x55
   616   000056                     	ds	9
   617                           
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 26 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  motorR          9   85[COMRAM] struct DC_motor
   628 ;;  motorL          9   76[COMRAM] struct DC_motor
   629 ;;  measured_col    8   68[COMRAM] struct RGBC_val
   630 ;;  PWMcycle        2    0        unsigned int 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   641 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;Total ram usage:       28 bytes
   645 ;; Hardware stack levels required when called: 7
   646 ;; This function calls:
   647 ;;		_Timer0_init
   648 ;;		_buggy_lights_init
   649 ;;		_color_click_init
   650 ;;		_getRGBCval
   651 ;;		_initDCmotorsPWM
   652 ;;		_initUSART4
   653 ;;		_sendIntSerial4
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text0
   660   001000                     __ptext0:
   661                           	callstack 0
   662   001000                     _main:
   663                           	callstack 24
   664   001000                     
   665                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   666   001000  0E52               	movlw	82
   667   001002  6E44               	movwf	(??_main+1)^0,c
   668   001004  0E2B               	movlw	43
   669   001006  6E43               	movwf	??_main^0,c
   670   001008  0E00               	movlw	0
   671   00100A                     u1987:
   672   00100A  2EE8               	decfsz	wreg,f,c
   673   00100C  D7FE               	bra	u1987
   674   00100E  2E43               	decfsz	??_main^0,f,c
   675   001010  D7FC               	bra	u1987
   676   001012  2E44               	decfsz	(??_main+1)^0,f,c
   677   001014  D7FA               	bra	u1987
   678   001016  D000               	nop2	
   679   001018                     
   680                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   681   001018  0E00               	movlw	0
   682   00101A  6E4D               	movwf	main@motorL^0,c
   683   00101C                     
   684                           ;main.c: 33:     motorL.direction = 1;
   685   00101C  0E01               	movlw	1
   686   00101E  6E4E               	movwf	(main@motorL+1)^0,c
   687   001020                     
   688                           ;main.c: 34:     motorL.brakemode = 1;
   689   001020  0E01               	movlw	1
   690   001022  6E4F               	movwf	(main@motorL+2)^0,c
   691   001024                     
   692                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   693   001024  0E00               	movlw	0
   694   001026  6E51               	movwf	(main@motorL+4)^0,c
   695   001028  0E63               	movlw	99
   696   00102A  6E50               	movwf	(main@motorL+3)^0,c
   697   00102C                     
   698                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   699   00102C  0EAA               	movlw	170
   700   00102E  6E52               	movwf	(main@motorL+5)^0,c
   701   001030  0E0F               	movlw	15
   702   001032  6E53               	movwf	(main@motorL+6)^0,c
   703   001034                     
   704                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   705   001034  0EA6               	movlw	166
   706   001036  6E54               	movwf	(main@motorL+7)^0,c
   707   001038  0E0F               	movlw	15
   708   00103A  6E55               	movwf	(main@motorL+8)^0,c
   709   00103C                     
   710                           ;main.c: 39:     motorR.power = 0;
   711   00103C  0E00               	movlw	0
   712   00103E  6E56               	movwf	main@motorR^0,c
   713   001040                     
   714                           ;main.c: 40:     motorR.direction = 1;
   715   001040  0E01               	movlw	1
   716   001042  6E57               	movwf	(main@motorR+1)^0,c
   717   001044                     
   718                           ;main.c: 41:     motorR.brakemode = 1;
   719   001044  0E01               	movlw	1
   720   001046  6E58               	movwf	(main@motorR+2)^0,c
   721   001048                     
   722                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   723   001048  0E00               	movlw	0
   724   00104A  6E5A               	movwf	(main@motorR+4)^0,c
   725   00104C  0E63               	movlw	99
   726   00104E  6E59               	movwf	(main@motorR+3)^0,c
   727   001050                     
   728                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   729   001050  0E25               	movlw	37
   730   001052  6E5B               	movwf	(main@motorR+5)^0,c
   731   001054  0E0F               	movlw	15
   732   001056  6E5C               	movwf	(main@motorR+6)^0,c
   733   001058                     
   734                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   735   001058  0E21               	movlw	33
   736   00105A  6E5D               	movwf	(main@motorR+7)^0,c
   737   00105C  0E0F               	movlw	15
   738   00105E  6E5E               	movwf	(main@motorR+8)^0,c
   739   001060                     
   740                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   741   001060  0E00               	movlw	0
   742   001062  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   743   001064  0E63               	movlw	99
   744   001066  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   745   001068  EC8C  F009         	call	_initDCmotorsPWM	;wreg free
   746   00106C                     
   747                           ;main.c: 47:     buggy_lights_init();
   748   00106C  ECFB  F00A         	call	_buggy_lights_init	;wreg free
   749   001070                     
   750                           ;main.c: 48:     color_click_init();
   751   001070  ECA4  F00B         	call	_color_click_init	;wreg free
   752   001074                     
   753                           ;main.c: 49:     initUSART4();
   754   001074  EC31  F00C         	call	_initUSART4	;wreg free
   755   001078                     
   756                           ;main.c: 50:     Timer0_init();
   757   001078  ECFC  F00B         	call	_Timer0_init	;wreg free
   758   00107C                     
   759                           ;main.c: 54:         TRISFbits.TRISF2 = 1;
   760   00107C  8486               	bsf	134,2,c	;volatile
   761   00107E                     
   762                           ;main.c: 55:         TRISFbits.TRISF3 = 1;
   763   00107E  8686               	bsf	134,3,c	;volatile
   764   001080                     
   765                           ;main.c: 57:         ANSELFbits.ANSELF2 = 0;
   766   001080  010E               	movlb	14	; () banked
   767   001082  95B4               	bcf	180,2,b	;volatile
   768   001084                     
   769                           ; BSR set to: 14
   770                           ;main.c: 58:         ANSELFbits.ANSELF3 = 0;
   771   001084  97B4               	bcf	180,3,b	;volatile
   772   001086                     l2841:
   773                           
   774                           ;main.c: 77:         getRGBCval(&measured_colour);
   775   001086  0E45               	movlw	low main@measured_colour
   776   001088  6E0C               	movwf	getRGBCval@p^0,c
   777   00108A  EC30  F00A         	call	_getRGBCval	;wreg free
   778   00108E                     
   779                           ;main.c: 78:         sendIntSerial4((int)measured_colour.C);
   780   00108E  C04B  F030         	movff	main@measured_colour+6,sendIntSerial4@integer
   781   001092  C04C  F031         	movff	main@measured_colour+7,sendIntSerial4@integer+1
   782   001096  EC10  F00C         	call	_sendIntSerial4	;wreg free
   783   00109A                     
   784                           ;main.c: 81:         if (!PORTFbits.RF2) {
   785   00109A  B48E               	btfsc	142,2,c	;volatile
   786   00109C  EF52  F008         	goto	u1431
   787   0010A0  EF54  F008         	goto	u1430
   788   0010A4                     u1431:
   789   0010A4  EF65  F008         	goto	l2849
   790   0010A8                     u1430:
   791   0010A8                     
   792                           ;main.c: 82:             LATDbits.LATD7 = !LATDbits.LATD7;
   793   0010A8  AE7C               	btfss	124,7,c	;volatile
   794   0010AA  EF59  F008         	goto	u1441
   795   0010AE  EF5D  F008         	goto	u1440
   796   0010B2                     u1441:
   797   0010B2  6A43               	clrf	??_main^0,c
   798   0010B4  2A43               	incf	??_main^0,f,c
   799   0010B6  EF5E  F008         	goto	u1458
   800   0010BA                     u1440:
   801   0010BA  6A43               	clrf	??_main^0,c
   802   0010BC                     u1458:
   803   0010BC  3243               	rrcf	??_main^0,f,c
   804   0010BE  3243               	rrcf	??_main^0,f,c
   805   0010C0  507C               	movf	124,w,c	;volatile
   806   0010C2  1843               	xorwf	??_main^0,w,c
   807   0010C4  0B7F               	andlw	-129
   808   0010C6  1843               	xorwf	??_main^0,w,c
   809   0010C8  6E7C               	movwf	124,c	;volatile
   810   0010CA                     l2849:
   811                           
   812                           ;main.c: 87:         _delay((unsigned long)((100)*(64000000/4000.0)));
   813   0010CA  0E09               	movlw	9
   814   0010CC  6E44               	movwf	(??_main+1)^0,c
   815   0010CE  0E1E               	movlw	30
   816   0010D0  6E43               	movwf	??_main^0,c
   817   0010D2  0EE4               	movlw	228
   818   0010D4                     u1997:
   819   0010D4  2EE8               	decfsz	wreg,f,c
   820   0010D6  D7FE               	bra	u1997
   821   0010D8  2E43               	decfsz	??_main^0,f,c
   822   0010DA  D7FC               	bra	u1997
   823   0010DC  2E44               	decfsz	(??_main+1)^0,f,c
   824   0010DE  D7FA               	bra	u1997
   825   0010E0  D000               	nop2	
   826   0010E2  EF43  F008         	goto	l2841
   827   0010E6  EF1C  F000         	goto	start
   828   0010EA                     __end_of_main:
   829                           	callstack 0
   830                           
   831 ;; *************** function _sendIntSerial4 *****************
   832 ;; Defined at:
   833 ;;		line 43 in file "serial.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  integer         2   47[COMRAM] int 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  string         17   49[COMRAM] unsigned char [17]
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   848 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   851 ;;Total ram usage:       19 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 6
   854 ;; This function calls:
   855 ;;		_sendStringSerial4
   856 ;;		_sprintf
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text1
   863   001820                     __ptext1:
   864                           	callstack 0
   865   001820                     _sendIntSerial4:
   866                           	callstack 24
   867   001820                     
   868                           ;serial.c: 44:     char string[sizeof(int) * 8 + 1];;serial.c: 45:     sprintf(string, "
      +                          %d \r", integer);
   869   001820  0E32               	movlw	low sendIntSerial4@string
   870   001822  6E1C               	movwf	sprintf@s^0,c
   871   001824  6A1D               	clrf	(sprintf@s+1)^0,c
   872   001826  0E01               	movlw	low STR_1
   873   001828  6E1E               	movwf	sprintf@fmt^0,c
   874   00182A  C030  F01F         	movff	sendIntSerial4@integer,?_sprintf+3
   875   00182E  C031  F020         	movff	sendIntSerial4@integer+1,?_sprintf+4
   876   001832  EC22  F00B         	call	_sprintf	;wreg free
   877   001836                     
   878                           ;serial.c: 46:     sendStringSerial4(string);
   879   001836  0E32               	movlw	low sendIntSerial4@string
   880   001838  6E02               	movwf	sendStringSerial4@string^0,c
   881   00183A  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   882   00183C  ECD4  F009         	call	_sendStringSerial4	;wreg free
   883   001840  0012               	return		;funcret
   884   001842                     __end_of_sendIntSerial4:
   885                           	callstack 0
   886                           
   887 ;; *************** function _sprintf *****************
   888 ;; Defined at:
   889 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  s               2   27[COMRAM] PTR unsigned char 
   892 ;;		 -> sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   893 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   894 ;;		 -> STR_3(3), STR_1(5), 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  f              12   35[COMRAM] struct _IO_FILE
   897 ;;  ret             2   32[COMRAM] int 
   898 ;;  ap              1   34[COMRAM] PTR void [1]
   899 ;;		 -> ?_sprintf(2), 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2   27[COMRAM] int 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   909 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;Total ram usage:       20 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 5
   916 ;; This function calls:
   917 ;;		_vfprintf
   918 ;; This function is called by:
   919 ;;		_sendIntSerial4
   920 ;;		_sendArrayCharSerial4
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text2
   925   001644                     __ptext2:
   926                           	callstack 0
   927   001644                     _sprintf:
   928                           	callstack 24
   929   001644  0E1F               	movlw	low (?_sprintf+3)
   930   001646  6E23               	movwf	sprintf@ap^0,c
   931   001648  C01C  F024         	movff	sprintf@s,sprintf@f
   932   00164C  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
   933   001650  0E00               	movlw	0
   934   001652  6E28               	movwf	(sprintf@f+4)^0,c
   935   001654  0E00               	movlw	0
   936   001656  6E27               	movwf	(sprintf@f+3)^0,c
   937   001658  0E00               	movlw	0
   938   00165A  6E2F               	movwf	(sprintf@f+11)^0,c
   939   00165C  0E00               	movlw	0
   940   00165E  6E2E               	movwf	(sprintf@f+10)^0,c
   941   001660  0E24               	movlw	low sprintf@f
   942   001662  6E18               	movwf	vfprintf@fp^0,c
   943   001664  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
   944   001668  0E23               	movlw	low sprintf@ap
   945   00166A  6E1A               	movwf	vfprintf@ap^0,c
   946   00166C  EC05  F00A         	call	_vfprintf	;wreg free
   947   001670  C018  F021         	movff	?_vfprintf,sprintf@ret
   948   001674  C019  F022         	movff	?_vfprintf+1,sprintf@ret+1
   949   001678  5027               	movf	(sprintf@f+3)^0,w,c
   950   00167A  241C               	addwf	sprintf@s^0,w,c
   951   00167C  6ED9               	movwf	fsr2l,c
   952   00167E  5028               	movf	(sprintf@f+4)^0,w,c
   953   001680  201D               	addwfc	(sprintf@s+1)^0,w,c
   954   001682  6EDA               	movwf	fsr2h,c
   955   001684  6ADF               	clrf	indf2,c
   956   001686  C021  F01C         	movff	sprintf@ret,?_sprintf
   957   00168A  C022  F01D         	movff	sprintf@ret+1,?_sprintf+1
   958   00168E  0012               	return		;funcret
   959   001690                     __end_of_sprintf:
   960                           	callstack 0
   961                           
   962 ;; *************** function _vfprintf *****************
   963 ;; Defined at:
   964 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
   967 ;;		 -> sprintf@f(12), 
   968 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
   969 ;;		 -> STR_3(3), STR_1(5), 
   970 ;;  ap              1   25[COMRAM] PTR PTR void 
   971 ;;		 -> sprintf@ap(1), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
   974 ;;		 -> STR_3(3), STR_1(5), 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  2   23[COMRAM] int 
   977 ;; Registers used:
   978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   984 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   988 ;;Total ram usage:        4 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 4
   991 ;; This function calls:
   992 ;;		_vfpfcnvrt
   993 ;; This function is called by:
   994 ;;		_sprintf
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text3
   999   00140A                     __ptext3:
  1000                           	callstack 0
  1001   00140A                     _vfprintf:
  1002                           	callstack 24
  1003   00140A                     
  1004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1005   00140A  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1006   00140E                     
  1007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1008   00140E  0E00               	movlw	0
  1009   001410  0100               	movlb	0	; () banked
  1010   001412  6F95               	movwf	(_nout+1)& (0+255),b
  1011   001414  0E00               	movlw	0
  1012   001416  6F94               	movwf	_nout& (0+255),b
  1013                           
  1014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1015   001418  EF1B  F00A         	goto	l2535
  1016   00141C                     l2533:
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1020   00141C  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1021   001420  0E1B               	movlw	low vfprintf@cfmt
  1022   001422  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1023   001424  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1024   001428  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1025   00142C  500B               	movf	?_vfpfcnvrt^0,w,c
  1026   00142E  0100               	movlb	0	; () banked
  1027   001430  2794               	addwf	_nout& (0+255),f,b
  1028   001432  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1029   001434  2395               	addwfc	(_nout+1)& (0+255),f,b
  1030   001436                     l2535:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1034   001436  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1035   00143A                     	if	1	;There is more than 1 active tblptr byte
  1036   00143A  0E0E               	movlw	high __smallconst
  1037   00143C  6EF7               	movwf	tblptrh,c
  1038   00143E                     	endif
  1039   00143E                     	if	0	;tblptru may be non-zero
  1040   00143E                     	endif
  1041   00143E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1042   00143E  0E00               	movlw	low (__smallconst shr (0+16))
  1043   001440  6EF8               	movwf	tblptru,c
  1044   001442                     	endif
  1045   001442  0008               	tblrd		*
  1046   001444  50F5               	movf	tablat,w,c
  1047   001446  0900               	iorlw	0
  1048   001448  A4D8               	btfss	status,2,c
  1049   00144A  EF29  F00A         	goto	u1321
  1050   00144E  EF2B  F00A         	goto	u1320
  1051   001452                     u1321:
  1052   001452  EF0E  F00A         	goto	l2533
  1053   001456                     u1320:
  1054   001456                     
  1055                           ; BSR set to: 0
  1056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1057   001456  C094  F018         	movff	_nout,?_vfprintf
  1058   00145A  C095  F019         	movff	_nout+1,?_vfprintf+1
  1059   00145E                     
  1060                           ; BSR set to: 0
  1061   00145E  0012               	return		;funcret
  1062   001460                     __end_of_vfprintf:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _vfpfcnvrt *****************
  1066 ;; Defined at:
  1067 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1070 ;;		 -> sprintf@f(12), 
  1071 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1072 ;;		 -> vfprintf@cfmt(1), 
  1073 ;;  ap              1   12[COMRAM] PTR PTR void 
  1074 ;;		 -> sprintf@ap(1), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  convarg         4   18[COMRAM] struct .
  1077 ;;  cnt             2   15[COMRAM] int 
  1078 ;;  c               1   22[COMRAM] unsigned char 
  1079 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1080 ;;		 -> STR_3(3), STR_1(5), 
  1081 ;;  done            1   14[COMRAM] _Bool 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2   10[COMRAM] int 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;Total ram usage:       13 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 3
  1098 ;; This function calls:
  1099 ;;		___awdiv
  1100 ;;		___awmod
  1101 ;;		_abs
  1102 ;;		_fputc
  1103 ;; This function is called by:
  1104 ;;		_vfprintf
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text4
  1109   000E0A                     __ptext4:
  1110                           	callstack 0
  1111   000E0A                     _vfpfcnvrt:
  1112                           	callstack 24
  1113   000E0A                     
  1114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1115   000E0A  0E00               	movlw	0
  1116   000E0C  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1117   000E0E  0E00               	movlw	0
  1118   000E10  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1119   000E12                     
  1120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1121   000E12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1122   000E14  6ED9               	movwf	fsr2l,c
  1123   000E16  6ADA               	clrf	fsr2h,c
  1124   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1125   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1126   000E1C  0E0E               	movlw	high __smallconst
  1127   000E1E  6EF7               	movwf	tblptrh,c
  1128   000E20                     	endif
  1129   000E20                     	if	0	;tblptru may be non-zero
  1130   000E20                     	endif
  1131   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1132   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1133   000E22  6EF8               	movwf	tblptru,c
  1134   000E24                     	endif
  1135   000E24  0008               	tblrd		*
  1136   000E26  50F5               	movf	tablat,w,c
  1137   000E28  0A25               	xorlw	37
  1138   000E2A  A4D8               	btfss	status,2,c
  1139   000E2C  EF1A  F007         	goto	u1221
  1140   000E30  EF1C  F007         	goto	u1220
  1141   000E34                     u1221:
  1142   000E34  EFE6  F007         	goto	l2479
  1143   000E38                     u1220:
  1144   000E38                     
  1145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1146   000E38  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1147   000E3A  6ED9               	movwf	fsr2l,c
  1148   000E3C  6ADA               	clrf	fsr2h,c
  1149   000E3E  2ADF               	incf	indf2,f,c
  1150   000E40                     
  1151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1152   000E40  0E00               	movlw	0
  1153   000E42  0100               	movlb	0	; () banked
  1154   000E44  6F97               	movwf	(_width+1)& (0+255),b
  1155   000E46  0E00               	movlw	0
  1156   000E48  6F96               	movwf	_width& (0+255),b
  1157   000E4A  C096  F09A         	movff	_width,_flags
  1158   000E4E                     
  1159                           ; BSR set to: 0
  1160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1161   000E4E  6998               	setf	_prec& (0+255),b
  1162   000E50  6999               	setf	(_prec+1)& (0+255),b
  1163   000E52                     
  1164                           ; BSR set to: 0
  1165                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1166   000E52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1167   000E54  6ED9               	movwf	fsr2l,c
  1168   000E56  6ADA               	clrf	fsr2h,c
  1169   000E58  50DF               	movf	indf2,w,c
  1170   000E5A  6E12               	movwf	vfpfcnvrt@cp^0,c
  1171   000E5C                     
  1172                           ; BSR set to: 0
  1173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1174   000E5C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1175   000E60                     	if	1	;There is more than 1 active tblptr byte
  1176   000E60  0E0E               	movlw	high __smallconst
  1177   000E62  6EF7               	movwf	tblptrh,c
  1178   000E64                     	endif
  1179   000E64                     	if	0	;tblptru may be non-zero
  1180   000E64                     	endif
  1181   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1182   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1183   000E66  6EF8               	movwf	tblptru,c
  1184   000E68                     	endif
  1185   000E68  0008               	tblrd		*
  1186   000E6A  50F5               	movf	tablat,w,c
  1187   000E6C  0A64               	xorlw	100
  1188   000E6E  B4D8               	btfsc	status,2,c
  1189   000E70  EF3C  F007         	goto	u1231
  1190   000E74  EF3E  F007         	goto	u1230
  1191   000E78                     u1231:
  1192   000E78  EF4E  F007         	goto	l2443
  1193   000E7C                     u1230:
  1194   000E7C                     
  1195                           ; BSR set to: 0
  1196   000E7C  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1197   000E80                     	if	1	;There is more than 1 active tblptr byte
  1198   000E80  0E0E               	movlw	high __smallconst
  1199   000E82  6EF7               	movwf	tblptrh,c
  1200   000E84                     	endif
  1201   000E84                     	if	0	;tblptru may be non-zero
  1202   000E84                     	endif
  1203   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1204   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1205   000E86  6EF8               	movwf	tblptru,c
  1206   000E88                     	endif
  1207   000E88  0008               	tblrd		*
  1208   000E8A  50F5               	movf	tablat,w,c
  1209   000E8C  0A69               	xorlw	105
  1210   000E8E  A4D8               	btfss	status,2,c
  1211   000E90  EF4C  F007         	goto	u1241
  1212   000E94  EF4E  F007         	goto	u1240
  1213   000E98                     u1241:
  1214   000E98  EFDC  F007         	goto	l2473
  1215   000E9C                     u1240:
  1216   000E9C                     l2443:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1220   000E9C  500D               	movf	vfpfcnvrt@ap^0,w,c
  1221   000E9E  6ED9               	movwf	fsr2l,c
  1222   000EA0  6ADA               	clrf	fsr2h,c
  1223   000EA2  0E02               	movlw	2
  1224   000EA4  26DF               	addwf	indf2,f,c
  1225   000EA6  5CDF               	subwf	indf2,w,c
  1226   000EA8  6ED9               	movwf	fsr2l,c
  1227   000EAA  6ADA               	clrf	fsr2h,c
  1228   000EAC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1229   000EB0  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1230   000EB4                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1233   000EB4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1234   000EB6  6ED9               	movwf	fsr2l,c
  1235   000EB8  6ADA               	clrf	fsr2h,c
  1236   000EBA  2812               	incf	vfpfcnvrt@cp^0,w,c
  1237   000EBC  6EDF               	movwf	indf2,c
  1238   000EBE                     
  1239                           ; BSR set to: 0
  1240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1241   000EBE  0E20               	movlw	32
  1242   000EC0  6E17               	movwf	vfpfcnvrt@c^0,c
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1245   000EC2  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1246   000EC4  EF66  F007         	goto	u1251
  1247   000EC8  EF69  F007         	goto	u1250
  1248   000ECC                     u1251:
  1249   000ECC  0E01               	movlw	1
  1250   000ECE  EF6A  F007         	goto	u1260
  1251   000ED2                     u1250:
  1252   000ED2  0E00               	movlw	0
  1253   000ED4                     u1260:
  1254   000ED4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1255   000ED6                     l2449:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1258   000ED6  0617               	decf	vfpfcnvrt@c^0,f,c
  1259   000ED8  5017               	movf	vfpfcnvrt@c^0,w,c
  1260   000EDA  0F60               	addlw	low _dbuf
  1261   000EDC  6ED9               	movwf	fsr2l,c
  1262   000EDE  6ADA               	clrf	fsr2h,c
  1263   000EE0  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1264   000EE4  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1265   000EE8  0E00               	movlw	0
  1266   000EEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1267   000EEC  0E0A               	movlw	10
  1268   000EEE  6E03               	movwf	___awmod@divisor^0,c
  1269   000EF0  EC34  F009         	call	___awmod	;wreg free
  1270   000EF4  C001  F007         	movff	?___awmod,abs@a
  1271   000EF8  C002  F008         	movff	?___awmod+1,abs@a+1
  1272   000EFC  EC8A  F00B         	call	_abs	;wreg free
  1273   000F00  5007               	movf	?_abs^0,w,c
  1274   000F02  0F30               	addlw	48
  1275   000F04  6EDF               	movwf	indf2,c
  1276   000F06                     
  1277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1278   000F06  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1279   000F0A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1280   000F0E  0E00               	movlw	0
  1281   000F10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1282   000F12  0E0A               	movlw	10
  1283   000F14  6E03               	movwf	___awdiv@divisor^0,c
  1284   000F16  EC75  F008         	call	___awdiv	;wreg free
  1285   000F1A  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1286   000F1E  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1287   000F22                     
  1288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1289   000F22  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1290   000F24  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1291   000F26                     
  1292                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1293   000F26  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1294   000F28  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1295   000F2A  B4D8               	btfsc	status,2,c
  1296   000F2C  EF9A  F007         	goto	u1271
  1297   000F30  EF9C  F007         	goto	u1270
  1298   000F34                     u1271:
  1299   000F34  EFA4  F007         	goto	l2459
  1300   000F38                     u1270:
  1301   000F38  5017               	movf	vfpfcnvrt@c^0,w,c
  1302   000F3A  A4D8               	btfss	status,2,c
  1303   000F3C  EFA2  F007         	goto	u1281
  1304   000F40  EFA4  F007         	goto	u1280
  1305   000F44                     u1281:
  1306   000F44  EF6B  F007         	goto	l2449
  1307   000F48                     u1280:
  1308   000F48                     l2459:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1311   000F48  5017               	movf	vfpfcnvrt@c^0,w,c
  1312   000F4A  B4D8               	btfsc	status,2,c
  1313   000F4C  EFAA  F007         	goto	u1291
  1314   000F50  EFAC  F007         	goto	u1290
  1315   000F54                     u1291:
  1316   000F54  EFCD  F007         	goto	l2471
  1317   000F58                     u1290:
  1318   000F58  500F               	movf	vfpfcnvrt@done^0,w,c
  1319   000F5A  B4D8               	btfsc	status,2,c
  1320   000F5C  EFB2  F007         	goto	u1301
  1321   000F60  EFB4  F007         	goto	u1300
  1322   000F64                     u1301:
  1323   000F64  EFCD  F007         	goto	l2471
  1324   000F68                     u1300:
  1325   000F68                     
  1326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1327   000F68  0617               	decf	vfpfcnvrt@c^0,f,c
  1328   000F6A  5017               	movf	vfpfcnvrt@c^0,w,c
  1329   000F6C  0F60               	addlw	low _dbuf
  1330   000F6E  6ED9               	movwf	fsr2l,c
  1331   000F70  6ADA               	clrf	fsr2h,c
  1332   000F72  0E2D               	movlw	45
  1333   000F74  6EDF               	movwf	indf2,c
  1334   000F76                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1336   000F76  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1337   000F78  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1338   000F7A  EFCD  F007         	goto	l2471
  1339   000F7E                     l2467:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1342   000F7E  5017               	movf	vfpfcnvrt@c^0,w,c
  1343   000F80  0F60               	addlw	low _dbuf
  1344   000F82  6ED9               	movwf	fsr2l,c
  1345   000F84  6ADA               	clrf	fsr2h,c
  1346   000F86  50DF               	movf	indf2,w,c
  1347   000F88  6E0E               	movwf	??_vfpfcnvrt^0,c
  1348   000F8A  500E               	movf	??_vfpfcnvrt^0,w,c
  1349   000F8C  6E01               	movwf	fputc@c^0,c
  1350   000F8E  6A02               	clrf	(fputc@c+1)^0,c
  1351   000F90  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1352   000F94  ECD7  F008         	call	_fputc	;wreg free
  1353   000F98  2A17               	incf	vfpfcnvrt@c^0,f,c
  1354   000F9A                     l2471:
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1357   000F9A  0E20               	movlw	32
  1358   000F9C  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1359   000F9E  A4D8               	btfss	status,2,c
  1360   000FA0  EFD4  F007         	goto	u1311
  1361   000FA4  EFD6  F007         	goto	u1310
  1362   000FA8                     u1311:
  1363   000FA8  EFBF  F007         	goto	l2467
  1364   000FAC                     u1310:
  1365   000FAC                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1367   000FAC  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1368   000FB0  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1369   000FB4  EFFF  F007         	goto	l1375
  1370   000FB8                     l2473:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1374   000FB8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1375   000FBA  6ED9               	movwf	fsr2l,c
  1376   000FBC  6ADA               	clrf	fsr2h,c
  1377   000FBE  2ADF               	incf	indf2,f,c
  1378   000FC0                     
  1379                           ; BSR set to: 0
  1380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1381   000FC0  0E00               	movlw	0
  1382   000FC2  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1383   000FC4  0E00               	movlw	0
  1384   000FC6  6E0B               	movwf	?_vfpfcnvrt^0,c
  1385   000FC8  EFFF  F007         	goto	l1375
  1386   000FCC                     l2479:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1389   000FCC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1390   000FCE  6ED9               	movwf	fsr2l,c
  1391   000FD0  6ADA               	clrf	fsr2h,c
  1392   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1393   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1394   000FD6  0E0E               	movlw	high __smallconst
  1395   000FD8  6EF7               	movwf	tblptrh,c
  1396   000FDA                     	endif
  1397   000FDA                     	if	0	;tblptru may be non-zero
  1398   000FDA                     	endif
  1399   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1400   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1401   000FDC  6EF8               	movwf	tblptru,c
  1402   000FDE                     	endif
  1403   000FDE  0008               	tblrd		*
  1404   000FE0  50F5               	movf	tablat,w,c
  1405   000FE2  6E01               	movwf	fputc@c^0,c
  1406   000FE4  6A02               	clrf	(fputc@c+1)^0,c
  1407   000FE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1408   000FEA  ECD7  F008         	call	_fputc	;wreg free
  1409   000FEE                     
  1410                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1411   000FEE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1412   000FF0  6ED9               	movwf	fsr2l,c
  1413   000FF2  6ADA               	clrf	fsr2h,c
  1414   000FF4  2ADF               	incf	indf2,f,c
  1415   000FF6                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1417   000FF6  0E00               	movlw	0
  1418   000FF8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1419   000FFA  0E01               	movlw	1
  1420   000FFC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1421   000FFE                     l1375:
  1422   000FFE  0012               	return		;funcret
  1423   001000                     __end_of_vfpfcnvrt:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _fputc *****************
  1427 ;; Defined at:
  1428 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  c               2    0[COMRAM] int 
  1431 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1432 ;;		 -> sprintf@f(12), 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2    0[COMRAM] int 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1444 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1448 ;;Total ram usage:        8 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 2
  1451 ;; This function calls:
  1452 ;;		_putch
  1453 ;; This function is called by:
  1454 ;;		_vfpfcnvrt
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text5
  1459   0011AE                     __ptext5:
  1460                           	callstack 0
  1461   0011AE                     _fputc:
  1462                           	callstack 24
  1463   0011AE  5003               	movf	fputc@fp^0,w,c
  1464   0011B0  B4D8               	btfsc	status,2,c
  1465   0011B2  EFDD  F008         	goto	u1011
  1466   0011B6  EFDF  F008         	goto	u1010
  1467   0011BA                     u1011:
  1468   0011BA  EFE7  F008         	goto	l2327
  1469   0011BE                     u1010:
  1470   0011BE  5003               	movf	fputc@fp^0,w,c
  1471   0011C0  A4D8               	btfss	status,2,c
  1472   0011C2  EFE5  F008         	goto	u1021
  1473   0011C6  EFE7  F008         	goto	u1020
  1474   0011CA                     u1021:
  1475   0011CA  EFEC  F008         	goto	l2329
  1476   0011CE                     u1020:
  1477   0011CE                     l2327:
  1478   0011CE  5001               	movf	fputc@c^0,w,c
  1479   0011D0  EC61  F00C         	call	_putch
  1480   0011D4  EF33  F009         	goto	l1400
  1481   0011D8                     l2329:
  1482   0011D8  5003               	movf	fputc@fp^0,w,c
  1483   0011DA  6ED9               	movwf	fsr2l,c
  1484   0011DC  6ADA               	clrf	fsr2h,c
  1485   0011DE  0E0A               	movlw	10
  1486   0011E0  26D9               	addwf	fsr2l,f,c
  1487   0011E2  50DE               	movf	postinc2,w,c
  1488   0011E4  10DE               	iorwf	postinc2,w,c
  1489   0011E6  B4D8               	btfsc	status,2,c
  1490   0011E8  EFF8  F008         	goto	u1031
  1491   0011EC  EFFA  F008         	goto	u1030
  1492   0011F0                     u1031:
  1493   0011F0  EF13  F009         	goto	l2333
  1494   0011F4                     u1030:
  1495   0011F4  5003               	movf	fputc@fp^0,w,c
  1496   0011F6  6ED9               	movwf	fsr2l,c
  1497   0011F8  6ADA               	clrf	fsr2h,c
  1498   0011FA  0E0A               	movlw	10
  1499   0011FC  26D9               	addwf	fsr2l,f,c
  1500   0011FE  5003               	movf	fputc@fp^0,w,c
  1501   001200  6EE1               	movwf	fsr1l,c
  1502   001202  6AE2               	clrf	fsr1h,c
  1503   001204  0E03               	movlw	3
  1504   001206  26E1               	addwf	fsr1l,f,c
  1505   001208  50DE               	movf	postinc2,w,c
  1506   00120A  5CE6               	subwf	postinc1,w,c
  1507   00120C  50E6               	movf	postinc1,w,c
  1508   00120E  0A80               	xorlw	128
  1509   001210  6E08               	movwf	(??_fputc+4)^0,c
  1510   001212  50DE               	movf	postinc2,w,c
  1511   001214  0A80               	xorlw	128
  1512   001216  5808               	subwfb	(??_fputc+4)^0,w,c
  1513   001218  B0D8               	btfsc	status,0,c
  1514   00121A  EF11  F009         	goto	u1041
  1515   00121E  EF13  F009         	goto	u1040
  1516   001222                     u1041:
  1517   001222  EF33  F009         	goto	l1400
  1518   001226                     u1040:
  1519   001226                     l2333:
  1520   001226  5003               	movf	fputc@fp^0,w,c
  1521   001228  6ED9               	movwf	fsr2l,c
  1522   00122A  6ADA               	clrf	fsr2h,c
  1523   00122C  0E03               	movlw	3
  1524   00122E  26D9               	addwf	fsr2l,f,c
  1525   001230  CFDE F004          	movff	postinc2,??_fputc
  1526   001234  CFDD F005          	movff	postdec2,??_fputc+1
  1527   001238  5003               	movf	fputc@fp^0,w,c
  1528   00123A  6ED9               	movwf	fsr2l,c
  1529   00123C  6ADA               	clrf	fsr2h,c
  1530   00123E  CFDE F006          	movff	postinc2,??_fputc+2
  1531   001242  CFDD F007          	movff	postdec2,??_fputc+3
  1532   001246  5004               	movf	??_fputc^0,w,c
  1533   001248  2406               	addwf	(??_fputc+2)^0,w,c
  1534   00124A  6ED9               	movwf	fsr2l,c
  1535   00124C  5005               	movf	(??_fputc+1)^0,w,c
  1536   00124E  2007               	addwfc	(??_fputc+3)^0,w,c
  1537   001250  6EDA               	movwf	fsr2h,c
  1538   001252  C001  FFDF         	movff	fputc@c,indf2
  1539   001256  5003               	movf	fputc@fp^0,w,c
  1540   001258  6ED9               	movwf	fsr2l,c
  1541   00125A  6ADA               	clrf	fsr2h,c
  1542   00125C  0E03               	movlw	3
  1543   00125E  26D9               	addwf	fsr2l,f,c
  1544   001260  2ADE               	incf	postinc2,f,c
  1545   001262  0E00               	movlw	0
  1546   001264  22DD               	addwfc	postdec2,f,c
  1547   001266                     l1400:
  1548   001266  0012               	return		;funcret
  1549   001268                     __end_of_fputc:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _putch *****************
  1553 ;; Defined at:
  1554 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  c               1    wreg     unsigned char 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  c               1    0[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_fputc
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text6
  1583   0018C2                     __ptext6:
  1584                           	callstack 0
  1585   0018C2                     _putch:
  1586                           	callstack 24
  1587   0018C2  0012               	return		;funcret
  1588   0018C4                     __end_of_putch:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _abs *****************
  1592 ;; Defined at:
  1593 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  a               2    6[COMRAM] int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2    6[COMRAM] int 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;Total ram usage:        4 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_vfpfcnvrt
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text7
  1622   001714                     __ptext7:
  1623                           	callstack 0
  1624   001714                     _abs:
  1625                           	callstack 25
  1626   001714  BE08               	btfsc	(abs@a+1)^0,7,c
  1627   001716  EF8F  F00B         	goto	u1051
  1628   00171A  EF91  F00B         	goto	u1050
  1629   00171E                     u1051:
  1630   00171E  EF97  F00B         	goto	l1385
  1631   001722                     u1050:
  1632   001722  C007  F007         	movff	abs@a,?_abs
  1633   001726  C008  F008         	movff	abs@a+1,?_abs+1
  1634   00172A  EFA3  F00B         	goto	l1388
  1635   00172E                     l1385:
  1636   00172E  C007  F009         	movff	abs@a,??_abs
  1637   001732  C008  F00A         	movff	abs@a+1,??_abs+1
  1638   001736  1E09               	comf	??_abs^0,f,c
  1639   001738  1E0A               	comf	(??_abs+1)^0,f,c
  1640   00173A  4A09               	infsnz	??_abs^0,f,c
  1641   00173C  2A0A               	incf	(??_abs+1)^0,f,c
  1642   00173E  C009  F007         	movff	??_abs,?_abs
  1643   001742  C00A  F008         	movff	??_abs+1,?_abs+1
  1644   001746                     l1388:
  1645   001746  0012               	return		;funcret
  1646   001748                     __end_of_abs:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function ___awmod *****************
  1650 ;; Defined at:
  1651 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  dividend        2    0[COMRAM] int 
  1654 ;;  divisor         2    2[COMRAM] int 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  sign            1    5[COMRAM] unsigned char 
  1657 ;;  counter         1    4[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  2    0[COMRAM] int 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;Total ram usage:        6 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_vfpfcnvrt
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text8
  1682   001268                     __ptext8:
  1683                           	callstack 0
  1684   001268                     ___awmod:
  1685                           	callstack 25
  1686   001268  0E00               	movlw	0
  1687   00126A  6E06               	movwf	___awmod@sign^0,c
  1688   00126C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1689   00126E  EF3D  F009         	goto	u950
  1690   001272  EF3B  F009         	goto	u951
  1691   001276                     u951:
  1692   001276  EF43  F009         	goto	l2295
  1693   00127A                     u950:
  1694   00127A  6C01               	negf	___awmod@dividend^0,c
  1695   00127C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1696   00127E  B0D8               	btfsc	status,0,c
  1697   001280  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1698   001282  0E01               	movlw	1
  1699   001284  6E06               	movwf	___awmod@sign^0,c
  1700   001286                     l2295:
  1701   001286  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1702   001288  EF4A  F009         	goto	u960
  1703   00128C  EF48  F009         	goto	u961
  1704   001290                     u961:
  1705   001290  EF4E  F009         	goto	l2299
  1706   001294                     u960:
  1707   001294  6C03               	negf	___awmod@divisor^0,c
  1708   001296  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1709   001298  B0D8               	btfsc	status,0,c
  1710   00129A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1711   00129C                     l2299:
  1712   00129C  5003               	movf	___awmod@divisor^0,w,c
  1713   00129E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1714   0012A0  B4D8               	btfsc	status,2,c
  1715   0012A2  EF55  F009         	goto	u971
  1716   0012A6  EF57  F009         	goto	u970
  1717   0012AA                     u971:
  1718   0012AA  EF7B  F009         	goto	l2315
  1719   0012AE                     u970:
  1720   0012AE  0E01               	movlw	1
  1721   0012B0  6E05               	movwf	___awmod@counter^0,c
  1722   0012B2  EF5F  F009         	goto	l2305
  1723   0012B6                     l2303:
  1724   0012B6  90D8               	bcf	status,0,c
  1725   0012B8  3603               	rlcf	___awmod@divisor^0,f,c
  1726   0012BA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1727   0012BC  2A05               	incf	___awmod@counter^0,f,c
  1728   0012BE                     l2305:
  1729   0012BE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1730   0012C0  EF64  F009         	goto	u981
  1731   0012C4  EF66  F009         	goto	u980
  1732   0012C8                     u981:
  1733   0012C8  EF5B  F009         	goto	l2303
  1734   0012CC                     u980:
  1735   0012CC                     l2307:
  1736   0012CC  5003               	movf	___awmod@divisor^0,w,c
  1737   0012CE  5C01               	subwf	___awmod@dividend^0,w,c
  1738   0012D0  5004               	movf	(___awmod@divisor+1)^0,w,c
  1739   0012D2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1740   0012D4  A0D8               	btfss	status,0,c
  1741   0012D6  EF6F  F009         	goto	u991
  1742   0012DA  EF71  F009         	goto	u990
  1743   0012DE                     u991:
  1744   0012DE  EF75  F009         	goto	l2311
  1745   0012E2                     u990:
  1746   0012E2  5003               	movf	___awmod@divisor^0,w,c
  1747   0012E4  5E01               	subwf	___awmod@dividend^0,f,c
  1748   0012E6  5004               	movf	(___awmod@divisor+1)^0,w,c
  1749   0012E8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1750   0012EA                     l2311:
  1751   0012EA  90D8               	bcf	status,0,c
  1752   0012EC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1753   0012EE  3203               	rrcf	___awmod@divisor^0,f,c
  1754   0012F0  2E05               	decfsz	___awmod@counter^0,f,c
  1755   0012F2  EF66  F009         	goto	l2307
  1756   0012F6                     l2315:
  1757   0012F6  5006               	movf	___awmod@sign^0,w,c
  1758   0012F8  B4D8               	btfsc	status,2,c
  1759   0012FA  EF81  F009         	goto	u1001
  1760   0012FE  EF83  F009         	goto	u1000
  1761   001302                     u1001:
  1762   001302  EF87  F009         	goto	l2319
  1763   001306                     u1000:
  1764   001306  6C01               	negf	___awmod@dividend^0,c
  1765   001308  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1766   00130A  B0D8               	btfsc	status,0,c
  1767   00130C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1768   00130E                     l2319:
  1769   00130E  C001  F001         	movff	___awmod@dividend,?___awmod
  1770   001312  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1771   001316  0012               	return		;funcret
  1772   001318                     __end_of___awmod:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function ___awdiv *****************
  1776 ;; Defined at:
  1777 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  dividend        2    0[COMRAM] int 
  1780 ;;  divisor         2    2[COMRAM] int 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  quotient        2    6[COMRAM] int 
  1783 ;;  sign            1    5[COMRAM] unsigned char 
  1784 ;;  counter         1    4[COMRAM] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2    0[COMRAM] int 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;Total ram usage:        8 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_vfpfcnvrt
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text9
  1809   0010EA                     __ptext9:
  1810                           	callstack 0
  1811   0010EA                     ___awdiv:
  1812                           	callstack 25
  1813   0010EA  0E00               	movlw	0
  1814   0010EC  6E06               	movwf	___awdiv@sign^0,c
  1815   0010EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1816   0010F0  EF7E  F008         	goto	u890
  1817   0010F4  EF7C  F008         	goto	u891
  1818   0010F8                     u891:
  1819   0010F8  EF84  F008         	goto	l2251
  1820   0010FC                     u890:
  1821   0010FC  6C03               	negf	___awdiv@divisor^0,c
  1822   0010FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1823   001100  B0D8               	btfsc	status,0,c
  1824   001102  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1825   001104  0E01               	movlw	1
  1826   001106  6E06               	movwf	___awdiv@sign^0,c
  1827   001108                     l2251:
  1828   001108  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1829   00110A  EF8B  F008         	goto	u900
  1830   00110E  EF89  F008         	goto	u901
  1831   001112                     u901:
  1832   001112  EF91  F008         	goto	l2257
  1833   001116                     u900:
  1834   001116  6C01               	negf	___awdiv@dividend^0,c
  1835   001118  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1836   00111A  B0D8               	btfsc	status,0,c
  1837   00111C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1838   00111E  0E01               	movlw	1
  1839   001120  1A06               	xorwf	___awdiv@sign^0,f,c
  1840   001122                     l2257:
  1841   001122  0E00               	movlw	0
  1842   001124  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1843   001126  0E00               	movlw	0
  1844   001128  6E07               	movwf	___awdiv@quotient^0,c
  1845   00112A  5003               	movf	___awdiv@divisor^0,w,c
  1846   00112C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1847   00112E  B4D8               	btfsc	status,2,c
  1848   001130  EF9C  F008         	goto	u911
  1849   001134  EF9E  F008         	goto	u910
  1850   001138                     u911:
  1851   001138  EFC6  F008         	goto	l2279
  1852   00113C                     u910:
  1853   00113C  0E01               	movlw	1
  1854   00113E  6E05               	movwf	___awdiv@counter^0,c
  1855   001140  EFA6  F008         	goto	l2265
  1856   001144                     l2263:
  1857   001144  90D8               	bcf	status,0,c
  1858   001146  3603               	rlcf	___awdiv@divisor^0,f,c
  1859   001148  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1860   00114A  2A05               	incf	___awdiv@counter^0,f,c
  1861   00114C                     l2265:
  1862   00114C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1863   00114E  EFAB  F008         	goto	u921
  1864   001152  EFAD  F008         	goto	u920
  1865   001156                     u921:
  1866   001156  EFA2  F008         	goto	l2263
  1867   00115A                     u920:
  1868   00115A                     l2267:
  1869   00115A  90D8               	bcf	status,0,c
  1870   00115C  3607               	rlcf	___awdiv@quotient^0,f,c
  1871   00115E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1872   001160  5003               	movf	___awdiv@divisor^0,w,c
  1873   001162  5C01               	subwf	___awdiv@dividend^0,w,c
  1874   001164  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1875   001166  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1876   001168  A0D8               	btfss	status,0,c
  1877   00116A  EFB9  F008         	goto	u931
  1878   00116E  EFBB  F008         	goto	u930
  1879   001172                     u931:
  1880   001172  EFC0  F008         	goto	l2275
  1881   001176                     u930:
  1882   001176  5003               	movf	___awdiv@divisor^0,w,c
  1883   001178  5E01               	subwf	___awdiv@dividend^0,f,c
  1884   00117A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1885   00117C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1886   00117E  8007               	bsf	___awdiv@quotient^0,0,c
  1887   001180                     l2275:
  1888   001180  90D8               	bcf	status,0,c
  1889   001182  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1890   001184  3203               	rrcf	___awdiv@divisor^0,f,c
  1891   001186  2E05               	decfsz	___awdiv@counter^0,f,c
  1892   001188  EFAD  F008         	goto	l2267
  1893   00118C                     l2279:
  1894   00118C  5006               	movf	___awdiv@sign^0,w,c
  1895   00118E  B4D8               	btfsc	status,2,c
  1896   001190  EFCC  F008         	goto	u941
  1897   001194  EFCE  F008         	goto	u940
  1898   001198                     u941:
  1899   001198  EFD2  F008         	goto	l2283
  1900   00119C                     u940:
  1901   00119C  6C07               	negf	___awdiv@quotient^0,c
  1902   00119E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1903   0011A0  B0D8               	btfsc	status,0,c
  1904   0011A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1905   0011A4                     l2283:
  1906   0011A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1907   0011A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1908   0011AC  0012               	return		;funcret
  1909   0011AE                     __end_of___awdiv:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _sendStringSerial4 *****************
  1913 ;; Defined at:
  1914 ;;		line 35 in file "serial.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  string          2    1[COMRAM] PTR unsigned char 
  1917 ;;		 -> STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;Total ram usage:        2 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 2
  1936 ;; This function calls:
  1937 ;;		_sendCharSerial4
  1938 ;; This function is called by:
  1939 ;;		_sendIntSerial4
  1940 ;;		_sendArrayCharSerial4
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text10
  1945   0013A8                     __ptext10:
  1946                           	callstack 0
  1947   0013A8                     _sendStringSerial4:
  1948                           	callstack 27
  1949   0013A8                     
  1950                           ;serial.c: 37:     while(*string != 0){
  1951   0013A8  EFEB  F009         	goto	l2569
  1952   0013AC                     l2565:
  1953                           
  1954                           ;serial.c: 38:   sendCharSerial4(*string++);
  1955   0013AC  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1956   0013B0  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1957   0013B4  0E00               	movlw	low (__smallconst shr (0+16))
  1958   0013B6  6EF8               	movwf	tblptru,c
  1959   0013B8  0E0D               	movlw	(high __ramtop+-1)
  1960   0013BA  64F7               	cpfsgt	tblptrh,c
  1961   0013BC  D003               	bra	u1337
  1962   0013BE  0008               	tblrd		*
  1963   0013C0  50F5               	movf	tablat,w,c
  1964   0013C2  D005               	bra	u1330
  1965   0013C4                     u1337:
  1966   0013C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1967   0013C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1968   0013CC  50EF               	movf	indf0,w,c
  1969   0013CE                     u1330:
  1970   0013CE  EC40  F00C         	call	_sendCharSerial4
  1971   0013D2  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1972   0013D4  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1973   0013D6                     l2569:
  1974                           
  1975                           ;serial.c: 37:     while(*string != 0){
  1976   0013D6  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  1977   0013DA  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  1978   0013DE  0E00               	movlw	low (__smallconst shr (0+16))
  1979   0013E0  6EF8               	movwf	tblptru,c
  1980   0013E2  0E0D               	movlw	(high __ramtop+-1)
  1981   0013E4  64F7               	cpfsgt	tblptrh,c
  1982   0013E6  D003               	bra	u1347
  1983   0013E8  0008               	tblrd		*
  1984   0013EA  50F5               	movf	tablat,w,c
  1985   0013EC  D005               	bra	u1340
  1986   0013EE                     u1347:
  1987   0013EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1988   0013F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1989   0013F6  50EF               	movf	indf0,w,c
  1990   0013F8                     u1340:
  1991   0013F8  0900               	iorlw	0
  1992   0013FA  A4D8               	btfss	status,2,c
  1993   0013FC  EF02  F00A         	goto	u1351
  1994   001400  EF04  F00A         	goto	u1350
  1995   001404                     u1351:
  1996   001404  EFD6  F009         	goto	l2565
  1997   001408                     u1350:
  1998   001408  0012               	return		;funcret
  1999   00140A                     __end_of_sendStringSerial4:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _sendCharSerial4 *****************
  2003 ;; Defined at:
  2004 ;;		line 29 in file "serial.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  charToSend      1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  charToSend      1    0[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 1
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_sendStringSerial4
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text11
  2033   001880                     __ptext11:
  2034                           	callstack 0
  2035   001880                     _sendCharSerial4:
  2036                           	callstack 27
  2037                           
  2038                           ;incstack = 0
  2039                           ;sendCharSerial4@charToSend stored from wreg
  2040   001880  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2041   001882                     l401:
  2042   001882  010E               	movlb	14	; () banked
  2043   001884  A537               	btfss	55,2,b	;volatile
  2044   001886  EF47  F00C         	goto	u501
  2045   00188A  EF49  F00C         	goto	u500
  2046   00188E                     u501:
  2047   00188E  EF41  F00C         	goto	l401
  2048   001892                     u500:
  2049   001892                     
  2050                           ; BSR set to: 14
  2051                           ;serial.c: 31:     TX4REG = charToSend;
  2052   001892  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2053   001896                     
  2054                           ; BSR set to: 14
  2055   001896  0012               	return		;funcret
  2056   001898                     __end_of_sendCharSerial4:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _initUSART4 *****************
  2060 ;; Defined at:
  2061 ;;		line 5 in file "serial.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text12
  2090   001862                     __ptext12:
  2091                           	callstack 0
  2092   001862                     _initUSART4:
  2093                           	callstack 29
  2094   001862                     
  2095                           ;serial.c: 9:     RC0PPS = 0x12;
  2096   001862  0E12               	movlw	18
  2097   001864  010E               	movlb	14	; () banked
  2098   001866  6F62               	movwf	98,b	;volatile
  2099                           
  2100                           ;serial.c: 10:     RX4PPS = 0x11;
  2101   001868  0E11               	movlw	17
  2102   00186A  6F15               	movwf	21,b	;volatile
  2103   00186C                     
  2104                           ; BSR set to: 14
  2105                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2106   00186C  97E9               	bcf	233,3,b	;volatile
  2107   00186E                     
  2108                           ; BSR set to: 14
  2109                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2110   00186E  95E8               	bcf	232,2,b	;volatile
  2111                           
  2112                           ;serial.c: 14:     SP4BRGL = 51;
  2113   001870  0E33               	movlw	51
  2114   001872  6FE5               	movwf	229,b	;volatile
  2115                           
  2116                           ;serial.c: 15:     SP4BRGH = 0;
  2117   001874  0E00               	movlw	0
  2118   001876  6FE6               	movwf	230,b	;volatile
  2119   001878                     
  2120                           ; BSR set to: 14
  2121                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2122   001878  89E7               	bsf	231,4,b	;volatile
  2123   00187A                     
  2124                           ; BSR set to: 14
  2125                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2126   00187A  8BE8               	bsf	232,5,b	;volatile
  2127   00187C                     
  2128                           ; BSR set to: 14
  2129                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2130   00187C  8FE7               	bsf	231,7,b	;volatile
  2131   00187E                     
  2132                           ; BSR set to: 14
  2133   00187E  0012               	return		;funcret
  2134   001880                     __end_of_initUSART4:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _initDCmotorsPWM *****************
  2138 ;; Defined at:
  2139 ;;		line 5 in file "dc_motor.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text13
  2168   001318                     __ptext13:
  2169                           	callstack 0
  2170   001318                     _initDCmotorsPWM:
  2171                           	callstack 29
  2172   001318                     
  2173                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2174   001318  9485               	bcf	133,2,c	;volatile
  2175                           
  2176                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2177   00131A  9885               	bcf	133,4,c	;volatile
  2178                           
  2179                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2180   00131C  9E83               	bcf	131,7,c	;volatile
  2181                           
  2182                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2183   00131E  9C87               	bcf	135,6,c	;volatile
  2184                           
  2185                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2186   001320  947D               	bcf	125,2,c	;volatile
  2187                           
  2188                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2189   001322  987D               	bcf	125,4,c	;volatile
  2190                           
  2191                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2192   001324  9E7B               	bcf	123,7,c	;volatile
  2193                           
  2194                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2195   001326  9C7F               	bcf	127,6,c	;volatile
  2196   001328                     
  2197                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2198   001328  0E05               	movlw	5
  2199   00132A  010E               	movlb	14	; () banked
  2200   00132C  6F74               	movwf	116,b	;volatile
  2201                           
  2202                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2203   00132E  0E06               	movlw	6
  2204   001330  6F76               	movwf	118,b	;volatile
  2205                           
  2206                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2207   001332  0E07               	movlw	7
  2208   001334  6F69               	movwf	105,b	;volatile
  2209                           
  2210                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2211   001336  0E08               	movlw	8
  2212   001338  6F88               	movwf	136,b	;volatile
  2213                           
  2214                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2215   00133A  50BD               	movf	189,w,c	;volatile
  2216   00133C  0B8F               	andlw	-113
  2217   00133E  0940               	iorlw	64
  2218   001340  6EBD               	movwf	189,c	;volatile
  2219                           
  2220                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2221   001342  0EE0               	movlw	-32
  2222   001344  16BE               	andwf	190,f,c	;volatile
  2223                           
  2224                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2225   001346  50BF               	movf	191,w,c	;volatile
  2226   001348  0BF0               	andlw	-16
  2227   00134A  0901               	iorlw	1
  2228   00134C  6EBF               	movwf	191,c	;volatile
  2229   00134E                     
  2230                           ; BSR set to: 14
  2231                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2232   00134E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2233   001352                     
  2234                           ; BSR set to: 14
  2235                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2236   001352  8EBD               	bsf	189,7,c	;volatile
  2237                           
  2238                           ;dc_motor.c: 35:     CCPR1H=0;
  2239   001354  0E00               	movlw	0
  2240   001356  6EAA               	movwf	170,c	;volatile
  2241                           
  2242                           ;dc_motor.c: 36:     CCPR2H=0;
  2243   001358  0E00               	movlw	0
  2244   00135A  6EA6               	movwf	166,c	;volatile
  2245                           
  2246                           ;dc_motor.c: 37:     CCPR3H=0;
  2247   00135C  0E00               	movlw	0
  2248   00135E  010F               	movlb	15	; () banked
  2249   001360  6F25               	movwf	37,b	;volatile
  2250                           
  2251                           ;dc_motor.c: 38:     CCPR4H=0;
  2252   001362  0E00               	movlw	0
  2253   001364  6F21               	movwf	33,b	;volatile
  2254                           
  2255                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2256   001366  0EFC               	movlw	-4
  2257   001368  16AD               	andwf	173,f,c	;volatile
  2258                           
  2259                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2260   00136A  0EF3               	movlw	-13
  2261   00136C  16AD               	andwf	173,f,c	;volatile
  2262                           
  2263                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2264   00136E  0ECF               	movlw	-49
  2265   001370  16AD               	andwf	173,f,c	;volatile
  2266                           
  2267                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2268   001372  0E3F               	movlw	-193
  2269   001374  16AD               	andwf	173,f,c	;volatile
  2270   001376                     
  2271                           ; BSR set to: 15
  2272                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2273   001376  88AB               	bsf	171,4,c	;volatile
  2274                           
  2275                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2276   001378  50AB               	movf	171,w,c	;volatile
  2277   00137A  0BF0               	andlw	-16
  2278   00137C  090C               	iorlw	12
  2279   00137E  6EAB               	movwf	171,c	;volatile
  2280   001380                     
  2281                           ; BSR set to: 15
  2282                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2283   001380  8EAB               	bsf	171,7,c	;volatile
  2284   001382                     
  2285                           ; BSR set to: 15
  2286                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2287   001382  88A7               	bsf	167,4,c	;volatile
  2288                           
  2289                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2290   001384  50A7               	movf	167,w,c	;volatile
  2291   001386  0BF0               	andlw	-16
  2292   001388  090C               	iorlw	12
  2293   00138A  6EA7               	movwf	167,c	;volatile
  2294   00138C                     
  2295                           ; BSR set to: 15
  2296                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2297   00138C  8EA7               	bsf	167,7,c	;volatile
  2298   00138E                     
  2299                           ; BSR set to: 15
  2300                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2301   00138E  8926               	bsf	38,4,b	;volatile
  2302                           
  2303                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2304   001390  5126               	movf	38,w,b	;volatile
  2305   001392  0BF0               	andlw	-16
  2306   001394  090C               	iorlw	12
  2307   001396  6F26               	movwf	38,b	;volatile
  2308   001398                     
  2309                           ; BSR set to: 15
  2310                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2311   001398  8F26               	bsf	38,7,b	;volatile
  2312   00139A                     
  2313                           ; BSR set to: 15
  2314                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2315   00139A  8922               	bsf	34,4,b	;volatile
  2316                           
  2317                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2318   00139C  5122               	movf	34,w,b	;volatile
  2319   00139E  0BF0               	andlw	-16
  2320   0013A0  090C               	iorlw	12
  2321   0013A2  6F22               	movwf	34,b	;volatile
  2322   0013A4                     
  2323                           ; BSR set to: 15
  2324                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2325   0013A4  8F22               	bsf	34,7,b	;volatile
  2326   0013A6                     
  2327                           ; BSR set to: 15
  2328   0013A6  0012               	return		;funcret
  2329   0013A8                     __end_of_initDCmotorsPWM:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _getRGBCval *****************
  2333 ;; Defined at:
  2334 ;;		line 84 in file "color.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2337 ;;		 -> main@measured_colour(8), 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 4
  2356 ;; This function calls:
  2357 ;;		_color_read_Blue
  2358 ;;		_color_read_Clear
  2359 ;;		_color_read_Green
  2360 ;;		_color_read_Red
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text14
  2367   001460                     __ptext14:
  2368                           	callstack 0
  2369   001460                     _getRGBCval:
  2370                           	callstack 26
  2371   001460                     
  2372                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2373   001460  EC5B  F00A         	call	_color_read_Red	;wreg free
  2374   001464  500C               	movf	getRGBCval@p^0,w,c
  2375   001466  6ED9               	movwf	fsr2l,c
  2376   001468  6ADA               	clrf	fsr2h,c
  2377   00146A  C005  FFDE         	movff	?_color_read_Red,postinc2
  2378   00146E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2379                           
  2380                           ;color.c: 87:     p->B = color_read_Blue();
  2381   001472  ECD3  F00A         	call	_color_read_Blue	;wreg free
  2382   001476  500C               	movf	getRGBCval@p^0,w,c
  2383   001478  6ED9               	movwf	fsr2l,c
  2384   00147A  6ADA               	clrf	fsr2h,c
  2385   00147C  0E04               	movlw	4
  2386   00147E  26D9               	addwf	fsr2l,f,c
  2387   001480  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2388   001484  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2389                           
  2390                           ;color.c: 88:     p->G = color_read_Green();
  2391   001488  EC83  F00A         	call	_color_read_Green	;wreg free
  2392   00148C  500C               	movf	getRGBCval@p^0,w,c
  2393   00148E  6ED9               	movwf	fsr2l,c
  2394   001490  6ADA               	clrf	fsr2h,c
  2395   001492  0E02               	movlw	2
  2396   001494  26D9               	addwf	fsr2l,f,c
  2397   001496  C005  FFDE         	movff	?_color_read_Green,postinc2
  2398   00149A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2399                           
  2400                           ;color.c: 89:     p->C = color_read_Clear();
  2401   00149E  ECAB  F00A         	call	_color_read_Clear	;wreg free
  2402   0014A2  500C               	movf	getRGBCval@p^0,w,c
  2403   0014A4  6ED9               	movwf	fsr2l,c
  2404   0014A6  6ADA               	clrf	fsr2h,c
  2405   0014A8  0E06               	movlw	6
  2406   0014AA  26D9               	addwf	fsr2l,f,c
  2407   0014AC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2408   0014B0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2409   0014B4  0012               	return		;funcret
  2410   0014B6                     __end_of_getRGBCval:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _color_read_Red *****************
  2414 ;; Defined at:
  2415 ;;		line 28 in file "color.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  tmp             2    9[COMRAM] unsigned int 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2    4[COMRAM] unsigned int 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;Total ram usage:        7 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 3
  2436 ;; This function calls:
  2437 ;;		_I2C_2_Master_Read
  2438 ;;		_I2C_2_Master_RepStart
  2439 ;;		_I2C_2_Master_Start
  2440 ;;		_I2C_2_Master_Stop
  2441 ;;		_I2C_2_Master_Write
  2442 ;; This function is called by:
  2443 ;;		_getRGBCval
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text15
  2448   0014B6                     __ptext15:
  2449                           	callstack 0
  2450   0014B6                     _color_read_Red:
  2451                           	callstack 26
  2452   0014B6                     
  2453                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2454   0014B6  EC5C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2455                           
  2456                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2457   0014BA  0E52               	movlw	82
  2458   0014BC  EC4C  F00C         	call	_I2C_2_Master_Write
  2459                           
  2460                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2461   0014C0  0EB6               	movlw	182
  2462   0014C2  EC4C  F00C         	call	_I2C_2_Master_Write
  2463                           
  2464                           ;color.c: 34:  I2C_2_Master_RepStart();
  2465   0014C6  EC52  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2466                           
  2467                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2468   0014CA  0E53               	movlw	83
  2469   0014CC  EC4C  F00C         	call	_I2C_2_Master_Write
  2470                           
  2471                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2472   0014D0  0E01               	movlw	1
  2473   0014D2  EC69  F00B         	call	_I2C_2_Master_Read
  2474   0014D6  6E07               	movwf	??_color_read_Red^0,c
  2475   0014D8  5007               	movf	??_color_read_Red^0,w,c
  2476   0014DA  6E0A               	movwf	color_read_Red@tmp^0,c
  2477   0014DC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2478                           
  2479                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2480   0014DE  0E00               	movlw	0
  2481   0014E0  EC69  F00B         	call	_I2C_2_Master_Read
  2482   0014E4  6E07               	movwf	??_color_read_Red^0,c
  2483   0014E6  5007               	movf	??_color_read_Red^0,w,c
  2484   0014E8  6E09               	movwf	(??_color_read_Red+2)^0,c
  2485   0014EA  6A08               	clrf	(??_color_read_Red+1)^0,c
  2486   0014EC  500A               	movf	color_read_Red@tmp^0,w,c
  2487   0014EE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2488   0014F0  6E0A               	movwf	color_read_Red@tmp^0,c
  2489   0014F2  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2490   0014F4  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2491   0014F6  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2492                           
  2493                           ;color.c: 38:  I2C_2_Master_Stop();
  2494   0014F8  EC57  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2495   0014FC                     
  2496                           ;color.c: 39:  return tmp;
  2497   0014FC  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2498   001500  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2499   001504  0012               	return		;funcret
  2500   001506                     __end_of_color_read_Red:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _color_read_Green *****************
  2504 ;; Defined at:
  2505 ;;		line 56 in file "color.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  tmp             2    9[COMRAM] unsigned int 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  2    4[COMRAM] unsigned int 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;Total ram usage:        7 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 3
  2526 ;; This function calls:
  2527 ;;		_I2C_2_Master_Read
  2528 ;;		_I2C_2_Master_RepStart
  2529 ;;		_I2C_2_Master_Start
  2530 ;;		_I2C_2_Master_Stop
  2531 ;;		_I2C_2_Master_Write
  2532 ;; This function is called by:
  2533 ;;		_getRGBCval
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text16
  2538   001506                     __ptext16:
  2539                           	callstack 0
  2540   001506                     _color_read_Green:
  2541                           	callstack 26
  2542   001506                     
  2543                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2544   001506  EC5C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2545                           
  2546                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2547   00150A  0E52               	movlw	82
  2548   00150C  EC4C  F00C         	call	_I2C_2_Master_Write
  2549                           
  2550                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2551   001510  0EB8               	movlw	184
  2552   001512  EC4C  F00C         	call	_I2C_2_Master_Write
  2553                           
  2554                           ;color.c: 62:  I2C_2_Master_RepStart();
  2555   001516  EC52  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2556                           
  2557                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2558   00151A  0E53               	movlw	83
  2559   00151C  EC4C  F00C         	call	_I2C_2_Master_Write
  2560                           
  2561                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2562   001520  0E01               	movlw	1
  2563   001522  EC69  F00B         	call	_I2C_2_Master_Read
  2564   001526  6E07               	movwf	??_color_read_Green^0,c
  2565   001528  5007               	movf	??_color_read_Green^0,w,c
  2566   00152A  6E0A               	movwf	color_read_Green@tmp^0,c
  2567   00152C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2568                           
  2569                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2570   00152E  0E00               	movlw	0
  2571   001530  EC69  F00B         	call	_I2C_2_Master_Read
  2572   001534  6E07               	movwf	??_color_read_Green^0,c
  2573   001536  5007               	movf	??_color_read_Green^0,w,c
  2574   001538  6E09               	movwf	(??_color_read_Green+2)^0,c
  2575   00153A  6A08               	clrf	(??_color_read_Green+1)^0,c
  2576   00153C  500A               	movf	color_read_Green@tmp^0,w,c
  2577   00153E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2578   001540  6E0A               	movwf	color_read_Green@tmp^0,c
  2579   001542  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2580   001544  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2581   001546  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2582                           
  2583                           ;color.c: 66:  I2C_2_Master_Stop();
  2584   001548  EC57  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2585   00154C                     
  2586                           ;color.c: 67:  return tmp;
  2587   00154C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2588   001550  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2589   001554  0012               	return		;funcret
  2590   001556                     __end_of_color_read_Green:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _color_read_Clear *****************
  2594 ;; Defined at:
  2595 ;;		line 70 in file "color.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  tmp             2    9[COMRAM] unsigned int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2    4[COMRAM] unsigned int 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;Total ram usage:        7 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 3
  2616 ;; This function calls:
  2617 ;;		_I2C_2_Master_Read
  2618 ;;		_I2C_2_Master_RepStart
  2619 ;;		_I2C_2_Master_Start
  2620 ;;		_I2C_2_Master_Stop
  2621 ;;		_I2C_2_Master_Write
  2622 ;; This function is called by:
  2623 ;;		_getRGBCval
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text17
  2628   001556                     __ptext17:
  2629                           	callstack 0
  2630   001556                     _color_read_Clear:
  2631                           	callstack 26
  2632   001556                     
  2633                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2634   001556  EC5C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2635                           
  2636                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2637   00155A  0E52               	movlw	82
  2638   00155C  EC4C  F00C         	call	_I2C_2_Master_Write
  2639                           
  2640                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2641   001560  0EB4               	movlw	180
  2642   001562  EC4C  F00C         	call	_I2C_2_Master_Write
  2643                           
  2644                           ;color.c: 76:  I2C_2_Master_RepStart();
  2645   001566  EC52  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2646                           
  2647                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2648   00156A  0E53               	movlw	83
  2649   00156C  EC4C  F00C         	call	_I2C_2_Master_Write
  2650                           
  2651                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2652   001570  0E01               	movlw	1
  2653   001572  EC69  F00B         	call	_I2C_2_Master_Read
  2654   001576  6E07               	movwf	??_color_read_Clear^0,c
  2655   001578  5007               	movf	??_color_read_Clear^0,w,c
  2656   00157A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2657   00157C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2658                           
  2659                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2660   00157E  0E00               	movlw	0
  2661   001580  EC69  F00B         	call	_I2C_2_Master_Read
  2662   001584  6E07               	movwf	??_color_read_Clear^0,c
  2663   001586  5007               	movf	??_color_read_Clear^0,w,c
  2664   001588  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2665   00158A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2666   00158C  500A               	movf	color_read_Clear@tmp^0,w,c
  2667   00158E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2668   001590  6E0A               	movwf	color_read_Clear@tmp^0,c
  2669   001592  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2670   001594  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2671   001596  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2672                           
  2673                           ;color.c: 80:  I2C_2_Master_Stop();
  2674   001598  EC57  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2675   00159C                     
  2676                           ;color.c: 81:  return tmp;
  2677   00159C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2678   0015A0  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2679   0015A4  0012               	return		;funcret
  2680   0015A6                     __end_of_color_read_Clear:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _color_read_Blue *****************
  2684 ;; Defined at:
  2685 ;;		line 42 in file "color.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  tmp             2    9[COMRAM] unsigned int 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    4[COMRAM] unsigned int 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2700 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;Total ram usage:        7 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 3
  2706 ;; This function calls:
  2707 ;;		_I2C_2_Master_Read
  2708 ;;		_I2C_2_Master_RepStart
  2709 ;;		_I2C_2_Master_Start
  2710 ;;		_I2C_2_Master_Stop
  2711 ;;		_I2C_2_Master_Write
  2712 ;; This function is called by:
  2713 ;;		_getRGBCval
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text18
  2718   0015A6                     __ptext18:
  2719                           	callstack 0
  2720   0015A6                     _color_read_Blue:
  2721                           	callstack 26
  2722   0015A6                     
  2723                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2724   0015A6  EC5C  F00C         	call	_I2C_2_Master_Start	;wreg free
  2725                           
  2726                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2727   0015AA  0E52               	movlw	82
  2728   0015AC  EC4C  F00C         	call	_I2C_2_Master_Write
  2729                           
  2730                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2731   0015B0  0EBA               	movlw	186
  2732   0015B2  EC4C  F00C         	call	_I2C_2_Master_Write
  2733                           
  2734                           ;color.c: 48:  I2C_2_Master_RepStart();
  2735   0015B6  EC52  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2736                           
  2737                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2738   0015BA  0E53               	movlw	83
  2739   0015BC  EC4C  F00C         	call	_I2C_2_Master_Write
  2740                           
  2741                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2742   0015C0  0E01               	movlw	1
  2743   0015C2  EC69  F00B         	call	_I2C_2_Master_Read
  2744   0015C6  6E07               	movwf	??_color_read_Blue^0,c
  2745   0015C8  5007               	movf	??_color_read_Blue^0,w,c
  2746   0015CA  6E0A               	movwf	color_read_Blue@tmp^0,c
  2747   0015CC  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2748                           
  2749                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2750   0015CE  0E00               	movlw	0
  2751   0015D0  EC69  F00B         	call	_I2C_2_Master_Read
  2752   0015D4  6E07               	movwf	??_color_read_Blue^0,c
  2753   0015D6  5007               	movf	??_color_read_Blue^0,w,c
  2754   0015D8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2755   0015DA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2756   0015DC  500A               	movf	color_read_Blue@tmp^0,w,c
  2757   0015DE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2758   0015E0  6E0A               	movwf	color_read_Blue@tmp^0,c
  2759   0015E2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2760   0015E4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2761   0015E6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2762                           
  2763                           ;color.c: 52:  I2C_2_Master_Stop();
  2764   0015E8  EC57  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2765   0015EC                     
  2766                           ;color.c: 53:  return tmp;
  2767   0015EC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2768   0015F0  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2769   0015F4  0012               	return		;funcret
  2770   0015F6                     __end_of_color_read_Blue:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _I2C_2_Master_RepStart *****************
  2774 ;; Defined at:
  2775 ;;		line 33 in file "i2c.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 2
  2796 ;; This function calls:
  2797 ;;		_I2C_2_Master_Idle
  2798 ;; This function is called by:
  2799 ;;		_color_read_Red
  2800 ;;		_color_read_Blue
  2801 ;;		_color_read_Green
  2802 ;;		_color_read_Clear
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text19
  2807   0018A4                     __ptext19:
  2808                           	callstack 0
  2809   0018A4                     _I2C_2_Master_RepStart:
  2810                           	callstack 26
  2811   0018A4                     
  2812                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2813   0018A4  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2814   0018A8                     
  2815                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2816   0018A8  010E               	movlb	14	; () banked
  2817   0018AA  83DA               	bsf	218,1,b	;volatile
  2818   0018AC                     
  2819                           ; BSR set to: 14
  2820   0018AC  0012               	return		;funcret
  2821   0018AE                     __end_of_I2C_2_Master_RepStart:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _I2C_2_Master_Read *****************
  2825 ;; Defined at:
  2826 ;;		line 51 in file "i2c.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  ack             1    wreg     unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  ack             1    2[COMRAM] unsigned char 
  2831 ;;  tmp             1    3[COMRAM] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      unsigned char 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;Total ram usage:        3 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 2
  2848 ;; This function calls:
  2849 ;;		_I2C_2_Master_Idle
  2850 ;; This function is called by:
  2851 ;;		_color_read_Red
  2852 ;;		_color_read_Blue
  2853 ;;		_color_read_Green
  2854 ;;		_color_read_Clear
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text20
  2859   0016D2                     __ptext20:
  2860                           	callstack 0
  2861   0016D2                     _I2C_2_Master_Read:
  2862                           	callstack 26
  2863                           
  2864                           ; BSR set to: 14
  2865                           ;incstack = 0
  2866                           ;I2C_2_Master_Read@ack stored from wreg
  2867   0016D2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2868   0016D4                     
  2869                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2870   0016D4  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2871   0016D8                     
  2872                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2873   0016D8  010E               	movlb	14	; () banked
  2874   0016DA  87DA               	bsf	218,3,b	;volatile
  2875                           
  2876                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2877   0016DC  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2878   0016E0                     
  2879                           ;i2c.c: 57:   tmp = SSP2BUF;
  2880   0016E0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2881                           
  2882                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2883   0016E4  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2884   0016E8                     
  2885                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2886   0016E8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2887   0016EA  B4D8               	btfsc	status,2,c
  2888   0016EC  EF7A  F00B         	goto	u481
  2889   0016F0  EF7E  F00B         	goto	u480
  2890   0016F4                     u481:
  2891   0016F4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2892   0016F6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2893   0016F8  EF7F  F00B         	goto	u498
  2894   0016FC                     u480:
  2895   0016FC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2896   0016FE                     u498:
  2897   0016FE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2898   001700  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2899   001702  010E               	movlb	14	; () banked
  2900   001704  51DA               	movf	218,w,b	;volatile
  2901   001706  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2902   001708  0BDF               	andlw	-33
  2903   00170A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2904   00170C  6FDA               	movwf	218,b	;volatile
  2905   00170E                     
  2906                           ; BSR set to: 14
  2907                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2908   00170E  89DA               	bsf	218,4,b	;volatile
  2909   001710                     
  2910                           ; BSR set to: 14
  2911                           ;i2c.c: 61:   return tmp;
  2912   001710  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2913   001712                     
  2914                           ; BSR set to: 14
  2915   001712  0012               	return		;funcret
  2916   001714                     __end_of_I2C_2_Master_Read:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _color_click_init *****************
  2920 ;; Defined at:
  2921 ;;		line 4 in file "color.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        1 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 4
  2942 ;; This function calls:
  2943 ;;		_I2C_2_Master_Init
  2944 ;;		_color_writetoaddr
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text21
  2951   001748                     __ptext21:
  2952                           	callstack 0
  2953   001748                     _color_click_init:
  2954                           	callstack 26
  2955   001748                     
  2956                           ;color.c: 7:     I2C_2_Master_Init();
  2957   001748  ECBE  F00B         	call	_I2C_2_Master_Init	;wreg free
  2958   00174C                     
  2959                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  2960   00174C  0E01               	movlw	1
  2961   00174E  6E03               	movwf	color_writetoaddr@value^0,c
  2962   001750  0E00               	movlw	0
  2963   001752  EC21  F00C         	call	_color_writetoaddr
  2964   001756                     
  2965                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2966   001756  0E3F               	movlw	63
  2967   001758  6E05               	movwf	??_color_click_init^0,c
  2968   00175A  0E55               	movlw	85
  2969   00175C                     u2007:
  2970   00175C  2EE8               	decfsz	wreg,f,c
  2971   00175E  D7FE               	bra	u2007
  2972   001760  2E05               	decfsz	??_color_click_init^0,f,c
  2973   001762  D7FC               	bra	u2007
  2974   001764  0000               	nop	
  2975   001766                     
  2976                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  2977   001766  0E03               	movlw	3
  2978   001768  6E03               	movwf	color_writetoaddr@value^0,c
  2979   00176A  0E00               	movlw	0
  2980   00176C  EC21  F00C         	call	_color_writetoaddr
  2981   001770                     
  2982                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  2983   001770  0ED5               	movlw	213
  2984   001772  6E03               	movwf	color_writetoaddr@value^0,c
  2985   001774  0E01               	movlw	1
  2986   001776  EC21  F00C         	call	_color_writetoaddr
  2987   00177A  0012               	return		;funcret
  2988   00177C                     __end_of_color_click_init:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _color_writetoaddr *****************
  2992 ;; Defined at:
  2993 ;;		line 20 in file "color.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  address         1    wreg     unsigned char 
  2996 ;;  value           1    2[COMRAM] unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  address         1    3[COMRAM] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3008 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; Hardware stack levels required when called: 3
  3015 ;; This function calls:
  3016 ;;		_I2C_2_Master_Start
  3017 ;;		_I2C_2_Master_Stop
  3018 ;;		_I2C_2_Master_Write
  3019 ;; This function is called by:
  3020 ;;		_color_click_init
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text22
  3025   001842                     __ptext22:
  3026                           	callstack 0
  3027   001842                     _color_writetoaddr:
  3028                           	callstack 26
  3029                           
  3030                           ;incstack = 0
  3031                           ;color_writetoaddr@address stored from wreg
  3032   001842  6E04               	movwf	color_writetoaddr@address^0,c
  3033   001844                     
  3034                           ;color.c: 21:     I2C_2_Master_Start();
  3035   001844  EC5C  F00C         	call	_I2C_2_Master_Start	;wreg free
  3036                           
  3037                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3038   001848  0E52               	movlw	82
  3039   00184A  EC4C  F00C         	call	_I2C_2_Master_Write
  3040                           
  3041                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3042   00184E  5004               	movf	color_writetoaddr@address^0,w,c
  3043   001850  0980               	iorlw	128
  3044   001852  EC4C  F00C         	call	_I2C_2_Master_Write
  3045                           
  3046                           ;color.c: 24:     I2C_2_Master_Write(value);
  3047   001856  5003               	movf	color_writetoaddr@value^0,w,c
  3048   001858  EC4C  F00C         	call	_I2C_2_Master_Write
  3049                           
  3050                           ;color.c: 25:     I2C_2_Master_Stop();
  3051   00185C  EC57  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3052   001860  0012               	return		;funcret
  3053   001862                     __end_of_color_writetoaddr:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _I2C_2_Master_Write *****************
  3057 ;; Defined at:
  3058 ;;		line 45 in file "i2c.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  data_byte       1    wreg     unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  data_byte       1    1[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;Total ram usage:        1 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 2
  3079 ;; This function calls:
  3080 ;;		_I2C_2_Master_Idle
  3081 ;; This function is called by:
  3082 ;;		_color_writetoaddr
  3083 ;;		_color_read_Red
  3084 ;;		_color_read_Blue
  3085 ;;		_color_read_Green
  3086 ;;		_color_read_Clear
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text23
  3091   001898                     __ptext23:
  3092                           	callstack 0
  3093   001898                     _I2C_2_Master_Write:
  3094                           	callstack 26
  3095                           
  3096                           ;incstack = 0
  3097                           ;I2C_2_Master_Write@data_byte stored from wreg
  3098   001898  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3099   00189A                     
  3100                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3101   00189A  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3102   00189E                     
  3103                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3104   00189E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3105   0018A2  0012               	return		;funcret
  3106   0018A4                     __end_of_I2C_2_Master_Write:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _I2C_2_Master_Stop *****************
  3110 ;; Defined at:
  3111 ;;		line 39 in file "i2c.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 2
  3132 ;; This function calls:
  3133 ;;		_I2C_2_Master_Idle
  3134 ;; This function is called by:
  3135 ;;		_color_writetoaddr
  3136 ;;		_color_read_Red
  3137 ;;		_color_read_Blue
  3138 ;;		_color_read_Green
  3139 ;;		_color_read_Clear
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text24
  3144   0018AE                     __ptext24:
  3145                           	callstack 0
  3146   0018AE                     _I2C_2_Master_Stop:
  3147                           	callstack 26
  3148   0018AE                     
  3149                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3150   0018AE  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3151   0018B2                     
  3152                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3153   0018B2  010E               	movlb	14	; () banked
  3154   0018B4  85DA               	bsf	218,2,b	;volatile
  3155   0018B6                     
  3156                           ; BSR set to: 14
  3157   0018B6  0012               	return		;funcret
  3158   0018B8                     __end_of_I2C_2_Master_Stop:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _I2C_2_Master_Start *****************
  3162 ;; Defined at:
  3163 ;;		line 27 in file "i2c.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 2
  3184 ;; This function calls:
  3185 ;;		_I2C_2_Master_Idle
  3186 ;; This function is called by:
  3187 ;;		_color_writetoaddr
  3188 ;;		_color_read_Red
  3189 ;;		_color_read_Blue
  3190 ;;		_color_read_Green
  3191 ;;		_color_read_Clear
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text25
  3196   0018B8                     __ptext25:
  3197                           	callstack 0
  3198   0018B8                     _I2C_2_Master_Start:
  3199                           	callstack 26
  3200   0018B8                     
  3201                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3202   0018B8  ECE8  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3203   0018BC                     
  3204                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3205   0018BC  010E               	movlb	14	; () banked
  3206   0018BE  81DA               	bsf	218,0,b	;volatile
  3207   0018C0                     
  3208                           ; BSR set to: 14
  3209   0018C0  0012               	return		;funcret
  3210   0018C2                     __end_of_I2C_2_Master_Start:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _I2C_2_Master_Idle *****************
  3214 ;; Defined at:
  3215 ;;		line 22 in file "i2c.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;Total ram usage:        1 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_I2C_2_Master_Start
  3240 ;;		_I2C_2_Master_RepStart
  3241 ;;		_I2C_2_Master_Stop
  3242 ;;		_I2C_2_Master_Write
  3243 ;;		_I2C_2_Master_Read
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text26
  3248   0017D0                     __ptext26:
  3249                           	callstack 0
  3250   0017D0                     _I2C_2_Master_Idle:
  3251                           	callstack 26
  3252   0017D0                     l242:
  3253   0017D0  010E               	movlb	14	; () banked
  3254   0017D2  B5D8               	btfsc	216,2,b	;volatile
  3255   0017D4  EFEE  F00B         	goto	u361
  3256   0017D8  EFF0  F00B         	goto	u360
  3257   0017DC                     u361:
  3258   0017DC  EFE8  F00B         	goto	l242
  3259   0017E0                     u360:
  3260   0017E0                     
  3261                           ; BSR set to: 14
  3262   0017E0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3263   0017E4  0E1F               	movlw	31
  3264   0017E6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3265   0017E8  A4D8               	btfss	status,2,c
  3266   0017EA  EFF9  F00B         	goto	u371
  3267   0017EE  EFFB  F00B         	goto	u370
  3268   0017F2                     u371:
  3269   0017F2  EFE8  F00B         	goto	l242
  3270   0017F6                     u370:
  3271   0017F6                     
  3272                           ; BSR set to: 14
  3273   0017F6  0012               	return		;funcret
  3274   0017F8                     __end_of_I2C_2_Master_Idle:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _I2C_2_Master_Init *****************
  3278 ;; Defined at:
  3279 ;;		line 4 in file "i2c.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; Hardware stack levels required when called: 1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_color_click_init
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text27
  3308   00177C                     __ptext27:
  3309                           	callstack 0
  3310   00177C                     _I2C_2_Master_Init:
  3311                           	callstack 28
  3312   00177C                     
  3313                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3314   00177C  010E               	movlb	14	; () banked
  3315   00177E  51D9               	movf	217,w,b	;volatile
  3316   001780  0BF0               	andlw	-16
  3317   001782  0908               	iorlw	8
  3318   001784  6FD9               	movwf	217,b	;volatile
  3319   001786                     
  3320                           ; BSR set to: 14
  3321                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3322   001786  8BD9               	bsf	217,5,b	;volatile
  3323                           
  3324                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3325   001788  0E9F               	movlw	159
  3326   00178A  6FD6               	movwf	214,b	;volatile
  3327   00178C                     
  3328                           ; BSR set to: 14
  3329                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3330   00178C  8A84               	bsf	132,5,c	;volatile
  3331   00178E                     
  3332                           ; BSR set to: 14
  3333                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3334   00178E  8C84               	bsf	132,6,c	;volatile
  3335   001790                     
  3336                           ; BSR set to: 14
  3337                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3338   001790  9BA7               	bcf	167,5,b	;volatile
  3339   001792                     
  3340                           ; BSR set to: 14
  3341                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3342   001792  9DA7               	bcf	167,6,b	;volatile
  3343                           
  3344                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3345   001794  0E1D               	movlw	29
  3346   001796  6F1D               	movwf	29,b	;volatile
  3347                           
  3348                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3349   001798  0E1E               	movlw	30
  3350   00179A  6F1C               	movwf	28,b	;volatile
  3351                           
  3352                           ;i2c.c: 18:   RD5PPS=0x1C;
  3353   00179C  0E1C               	movlw	28
  3354   00179E  6F6F               	movwf	111,b	;volatile
  3355                           
  3356                           ;i2c.c: 19:   RD6PPS=0x1B;
  3357   0017A0  0E1B               	movlw	27
  3358   0017A2  6F70               	movwf	112,b	;volatile
  3359   0017A4                     
  3360                           ; BSR set to: 14
  3361   0017A4  0012               	return		;funcret
  3362   0017A6                     __end_of_I2C_2_Master_Init:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _buggy_lights_init *****************
  3366 ;; Defined at:
  3367 ;;		line 4 in file "buggy_lights.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		None
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text28
  3396   0015F6                     __ptext28:
  3397                           	callstack 0
  3398   0015F6                     _buggy_lights_init:
  3399                           	callstack 29
  3400   0015F6                     
  3401                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3402   0015F6  9884               	bcf	132,4,c	;volatile
  3403                           
  3404                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3405   0015F8  9288               	bcf	136,1,c	;volatile
  3406                           
  3407                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3408   0015FA  9684               	bcf	132,3,c	;volatile
  3409                           
  3410                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3411   0015FC  9086               	bcf	134,0,c	;volatile
  3412                           
  3413                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3414   0015FE  9088               	bcf	136,0,c	;volatile
  3415                           
  3416                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 1;
  3417   001600  887C               	bsf	124,4,c	;volatile
  3418                           
  3419                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 1;
  3420   001602  8280               	bsf	128,1,c	;volatile
  3421                           
  3422                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 1;
  3423   001604  867C               	bsf	124,3,c	;volatile
  3424                           
  3425                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 1;
  3426   001606  807E               	bsf	126,0,c	;volatile
  3427                           
  3428                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 1;
  3429   001608  8080               	bsf	128,0,c	;volatile
  3430                           
  3431                           ;buggy_lights.c: 22:         TRISDbits.TRISD7 = 0;
  3432   00160A  9E84               	bcf	132,7,c	;volatile
  3433                           
  3434                           ;buggy_lights.c: 23:         TRISHbits.TRISH3 = 0;
  3435   00160C  9688               	bcf	136,3,c	;volatile
  3436                           
  3437                           ;buggy_lights.c: 25:         LATDbits.LATD7 = 1;
  3438   00160E  8E7C               	bsf	124,7,c	;volatile
  3439                           
  3440                           ;buggy_lights.c: 26:         LATHbits.LATH3 = 1;
  3441   001610  8680               	bsf	128,3,c	;volatile
  3442                           
  3443                           ;buggy_lights.c: 31:         TRISAbits.TRISA0 = 0;
  3444   001612  9081               	bcf	129,0,c	;volatile
  3445                           
  3446                           ;buggy_lights.c: 32:         TRISCbits.TRISC2 = 0;
  3447   001614  9483               	bcf	131,2,c	;volatile
  3448                           
  3449                           ;buggy_lights.c: 33:         TRISDbits.TRISD0 = 0;
  3450   001616  9084               	bcf	132,0,c	;volatile
  3451                           
  3452                           ;buggy_lights.c: 35:         LATAbits.LATA0 = 1;
  3453   001618  8079               	bsf	121,0,c	;volatile
  3454                           
  3455                           ;buggy_lights.c: 36:         LATCbits.LATC2 = 1;
  3456   00161A  847B               	bsf	123,2,c	;volatile
  3457                           
  3458                           ;buggy_lights.c: 37:         LATDbits.LATD0 = 1;
  3459   00161C  807C               	bsf	124,0,c	;volatile
  3460                           
  3461                           ;buggy_lights.c: 41:         TRISAbits.TRISA1 = 0;
  3462   00161E  9281               	bcf	129,1,c	;volatile
  3463                           
  3464                           ;buggy_lights.c: 42:         TRISCbits.TRISC6 = 0;
  3465   001620  9C83               	bcf	131,6,c	;volatile
  3466                           
  3467                           ;buggy_lights.c: 43:         TRISHbits.TRISH2 = 0;
  3468   001622  9488               	bcf	136,2,c	;volatile
  3469                           
  3470                           ;buggy_lights.c: 45:         LATAbits.LATA1 = 1;
  3471   001624  8279               	bsf	121,1,c	;volatile
  3472                           
  3473                           ;buggy_lights.c: 46:         LATCbits.LATC6 = 1;
  3474   001626  8C7B               	bsf	123,6,c	;volatile
  3475                           
  3476                           ;buggy_lights.c: 47:         LATHbits.LATH2 = 1;
  3477   001628  8480               	bsf	128,2,c	;volatile
  3478                           
  3479                           ;buggy_lights.c: 51:         TRISGbits.TRISG1 = 0;
  3480   00162A  9287               	bcf	135,1,c	;volatile
  3481                           
  3482                           ;buggy_lights.c: 52:         TRISAbits.TRISA4 = 0;
  3483   00162C  9881               	bcf	129,4,c	;volatile
  3484                           
  3485                           ;buggy_lights.c: 53:         TRISFbits.TRISF7 = 0;
  3486   00162E  9E86               	bcf	134,7,c	;volatile
  3487                           
  3488                           ;buggy_lights.c: 55:         LATGbits.LATG1 = 1;
  3489   001630  827F               	bsf	127,1,c	;volatile
  3490                           
  3491                           ;buggy_lights.c: 56:         LATAbits.LATA4 = 1;
  3492   001632  8879               	bsf	121,4,c	;volatile
  3493                           
  3494                           ;buggy_lights.c: 57:         LATFbits.LATF7 = 1;
  3495   001634  8E7E               	bsf	126,7,c	;volatile
  3496                           
  3497                           ;buggy_lights.c: 61:         TRISGbits.TRISG0 = 0;
  3498   001636  9087               	bcf	135,0,c	;volatile
  3499                           
  3500                           ;buggy_lights.c: 62:         TRISEbits.TRISE7 = 0;
  3501   001638  9E85               	bcf	133,7,c	;volatile
  3502                           
  3503                           ;buggy_lights.c: 63:         TRISAbits.TRISA3 = 0;
  3504   00163A  9681               	bcf	129,3,c	;volatile
  3505                           
  3506                           ;buggy_lights.c: 65:         LATGbits.LATG0 = 1;
  3507   00163C  807F               	bsf	127,0,c	;volatile
  3508                           
  3509                           ;buggy_lights.c: 66:         LATEbits.LATE7 = 1;
  3510   00163E  8E7D               	bsf	125,7,c	;volatile
  3511                           
  3512                           ;buggy_lights.c: 67:         LATAbits.LATA3 = 1;
  3513   001640  8679               	bsf	121,3,c	;volatile
  3514   001642  0012               	return		;funcret
  3515   001644                     __end_of_buggy_lights_init:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _Timer0_init *****************
  3519 ;; Defined at:
  3520 ;;		line 7 in file "timers.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text29
  3549   0017F8                     __ptext29:
  3550                           	callstack 0
  3551   0017F8                     _Timer0_init:
  3552                           	callstack 29
  3553   0017F8                     
  3554                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3555   0017F8  50D6               	movf	214,w,c	;volatile
  3556   0017FA  0B1F               	andlw	-225
  3557   0017FC  0940               	iorlw	64
  3558   0017FE  6ED6               	movwf	214,c	;volatile
  3559   001800                     
  3560                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3561   001800  88D6               	bsf	214,4,c	;volatile
  3562   001802                     
  3563                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3564   001802  88D5               	bsf	213,4,c	;volatile
  3565                           
  3566                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3567   001804  50D6               	movf	214,w,c	;volatile
  3568   001806  0BF0               	andlw	-16
  3569   001808  090E               	iorlw	14
  3570   00180A  6ED6               	movwf	214,c	;volatile
  3571                           
  3572                           ;timers.c: 20:     TMR0H = 0;
  3573   00180C  0E00               	movlw	0
  3574   00180E  6ED4               	movwf	212,c	;volatile
  3575                           
  3576                           ;timers.c: 21:     TMR0L = 0;
  3577   001810  0E00               	movlw	0
  3578   001812  6ED3               	movwf	211,c	;volatile
  3579   001814                     
  3580                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3581   001814  8ED5               	bsf	213,7,c	;volatile
  3582   001816                     
  3583                           ;timers.c: 24:     PIE0bits.TMR0IE = 1;
  3584   001816  010E               	movlb	14	; () banked
  3585   001818  8B29               	bsf	41,5,b	;volatile
  3586   00181A                     
  3587                           ; BSR set to: 14
  3588                           ;timers.c: 25:     INTCONbits.PEIE = 1;
  3589   00181A  8CF2               	bsf	242,6,c	;volatile
  3590   00181C                     
  3591                           ; BSR set to: 14
  3592                           ;timers.c: 26:     INTCONbits.GIE = 1;
  3593   00181C  8EF2               	bsf	242,7,c	;volatile
  3594   00181E                     
  3595                           ; BSR set to: 14
  3596   00181E  0012               	return		;funcret
  3597   001820                     __end_of_Timer0_init:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _ISR *****************
  3601 ;; Defined at:
  3602 ;;		line 75 in file "timers.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;Total ram usage:        0 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		Interrupt level 2
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	intcode
  3630   000008                     __pintcode:
  3631                           	callstack 0
  3632   000008                     _ISR:
  3633                           	callstack 24
  3634                           
  3635                           ; BSR set to: 14
  3636                           ;incstack = 0
  3637   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3638   00000A                     
  3639                           ;timers.c: 78:     if (PIR0bits.TMR0IF) {
  3640   00000A  010E               	movlb	14	; () banked
  3641   00000C  AB33               	btfss	51,5,b	;volatile
  3642   00000E  EF0B  F000         	goto	i2u157_41
  3643   000012  EF0D  F000         	goto	i2u157_40
  3644   000016                     i2u157_41:
  3645   000016  EF1A  F000         	goto	i2l652
  3646   00001A                     i2u157_40:
  3647   00001A                     
  3648                           ; BSR set to: 14
  3649                           ;timers.c: 79:         if (returning) {
  3650   00001A  0100               	movlb	0	; () banked
  3651   00001C  519D               	movf	_returning& (0+255),w,b
  3652   00001E  B4D8               	btfsc	status,2,c
  3653   000020  EF14  F000         	goto	i2u158_41
  3654   000024  EF16  F000         	goto	i2u158_40
  3655   000028                     i2u158_41:
  3656   000028  EF18  F000         	goto	i2l651
  3657   00002C                     i2u158_40:
  3658   00002C                     
  3659                           ; BSR set to: 0
  3660                           ;timers.c: 82:             returnFlag = 1;
  3661   00002C  0E01               	movlw	1
  3662   00002E  6F9C               	movwf	_returnFlag& (0+255),b
  3663   000030                     i2l651:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;timers.c: 87:         PIR0bits.TMR0IF = 0;
  3667   000030  010E               	movlb	14	; () banked
  3668   000032  9B33               	bcf	51,5,b	;volatile
  3669   000034                     i2l652:
  3670                           
  3671                           ; BSR set to: 14
  3672   000034  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3673   000036  0011               	retfie		f
  3674   000038                     __end_of_ISR:
  3675                           	callstack 0
  3676                           
  3677                           	psect	rparam
  3678   000000                     
  3679                           	psect	temp
  3680   00005F                     btemp:
  3681                           	callstack 0
  3682   00005F                     	ds	1
  3683   000000                     int$flags	set	btemp
  3684   000000                     wtemp8	set	btemp+1
  3685   000000                     ttemp5	set	btemp+1
  3686   000000                     ttemp6	set	btemp+4
  3687   000000                     ttemp7	set	btemp+8
  3688                           
  3689                           	psect	idloc
  3690                           
  3691                           ;Config register IDLOC0 @ 0x200000
  3692                           ;	unspecified, using default values
  3693   200000                     	org	2097152
  3694   200000  FFFF               	dw	65535
  3695                           
  3696                           ;Config register IDLOC1 @ 0x200002
  3697                           ;	unspecified, using default values
  3698   200002                     	org	2097154
  3699   200002  FFFF               	dw	65535
  3700                           
  3701                           ;Config register IDLOC2 @ 0x200004
  3702                           ;	unspecified, using default values
  3703   200004                     	org	2097156
  3704   200004  FFFF               	dw	65535
  3705                           
  3706                           ;Config register IDLOC3 @ 0x200006
  3707                           ;	unspecified, using default values
  3708   200006                     	org	2097158
  3709   200006  FFFF               	dw	65535
  3710                           
  3711                           ;Config register IDLOC4 @ 0x200008
  3712                           ;	unspecified, using default values
  3713   200008                     	org	2097160
  3714   200008  FFFF               	dw	65535
  3715                           
  3716                           ;Config register IDLOC5 @ 0x20000A
  3717                           ;	unspecified, using default values
  3718   20000A                     	org	2097162
  3719   20000A  FFFF               	dw	65535
  3720                           
  3721                           ;Config register IDLOC6 @ 0x20000C
  3722                           ;	unspecified, using default values
  3723   20000C                     	org	2097164
  3724   20000C  FFFF               	dw	65535
  3725                           
  3726                           ;Config register IDLOC7 @ 0x20000E
  3727                           ;	unspecified, using default values
  3728   20000E                     	org	2097166
  3729   20000E  FFFF               	dw	65535
  3730                           
  3731                           	psect	config
  3732                           
  3733                           ;Config register CONFIG1L @ 0x300000
  3734                           ;	External Oscillator mode Selection bits
  3735                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3736                           ;	Power-up default value for COSC bits
  3737                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3738   300000                     	org	3145728
  3739   300000  AA                 	db	170
  3740                           
  3741                           ;Config register CONFIG1H @ 0x300001
  3742                           ;	unspecified, using default values
  3743                           ;	Clock Out Enable bit
  3744                           ;	CLKOUTEN = 0x1, unprogrammed default
  3745                           ;	Clock Switch Enable bit
  3746                           ;	CSWEN = 0x1, unprogrammed default
  3747                           ;	Fail-Safe Clock Monitor Enable bit
  3748                           ;	FCMEN = 0x1, unprogrammed default
  3749   300001                     	org	3145729
  3750   300001  FF                 	db	255
  3751                           
  3752                           ;Config register CONFIG2L @ 0x300002
  3753                           ;	unspecified, using default values
  3754                           ;	Master Clear Enable bit
  3755                           ;	MCLRE = 0x1, unprogrammed default
  3756                           ;	Power-up Timer Enable bit
  3757                           ;	PWRTE = 0x1, unprogrammed default
  3758                           ;	Low-power BOR enable bit
  3759                           ;	LPBOREN = 0x1, unprogrammed default
  3760                           ;	Brown-out Reset Enable bits
  3761                           ;	BOREN = 0x3, unprogrammed default
  3762   300002                     	org	3145730
  3763   300002  FF                 	db	255
  3764                           
  3765                           ;Config register CONFIG2H @ 0x300003
  3766                           ;	unspecified, using default values
  3767                           ;	Brown Out Reset Voltage selection bits
  3768                           ;	BORV = 0x3, unprogrammed default
  3769                           ;	ZCD Disable bit
  3770                           ;	ZCD = 0x1, unprogrammed default
  3771                           ;	PPSLOCK bit One-Way Set Enable bit
  3772                           ;	PPS1WAY = 0x1, unprogrammed default
  3773                           ;	Stack Full/Underflow Reset Enable bit
  3774                           ;	STVREN = 0x1, unprogrammed default
  3775                           ;	Debugger Enable bit
  3776                           ;	DEBUG = 0x1, unprogrammed default
  3777                           ;	Extended Instruction Set Enable bit
  3778                           ;	XINST = 0x1, unprogrammed default
  3779   300003                     	org	3145731
  3780   300003  FF                 	db	255
  3781                           
  3782                           ;Config register CONFIG3L @ 0x300004
  3783                           ;	WDT Period Select bits
  3784                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3785                           ;	WDT operating mode
  3786                           ;	WDTE = OFF, WDT Disabled
  3787   300004                     	org	3145732
  3788   300004  9F                 	db	159
  3789                           
  3790                           ;Config register CONFIG3H @ 0x300005
  3791                           ;	unspecified, using default values
  3792                           ;	WDT Window Select bits
  3793                           ;	WDTCWS = 0x7, unprogrammed default
  3794                           ;	WDT input clock selector
  3795                           ;	WDTCCS = 0x7, unprogrammed default
  3796   300005                     	org	3145733
  3797   300005  FF                 	db	255
  3798                           
  3799                           ;Config register CONFIG4L @ 0x300006
  3800                           ;	unspecified, using default values
  3801                           ;	Write Protection Block 0
  3802                           ;	WRT0 = 0x1, unprogrammed default
  3803                           ;	Write Protection Block 1
  3804                           ;	WRT1 = 0x1, unprogrammed default
  3805                           ;	Write Protection Block 2
  3806                           ;	WRT2 = 0x1, unprogrammed default
  3807                           ;	Write Protection Block 3
  3808                           ;	WRT3 = 0x1, unprogrammed default
  3809                           ;	Write Protection Block 3
  3810                           ;	WRT4 = 0x1, unprogrammed default
  3811                           ;	Write Protection Block 3
  3812                           ;	WRT5 = 0x1, unprogrammed default
  3813                           ;	Write Protection Block 3
  3814                           ;	WRT6 = 0x1, unprogrammed default
  3815                           ;	Write Protection Block 3
  3816                           ;	WRT7 = 0x1, unprogrammed default
  3817   300006                     	org	3145734
  3818   300006  FF                 	db	255
  3819                           
  3820                           ;Config register CONFIG4H @ 0x300007
  3821                           ;	unspecified, using default values
  3822                           ;	Configuration Register Write Protection bit
  3823                           ;	WRTC = 0x1, unprogrammed default
  3824                           ;	Boot Block Write Protection bit
  3825                           ;	WRTB = 0x1, unprogrammed default
  3826                           ;	Data EEPROM Write Protection bit
  3827                           ;	WRTD = 0x1, unprogrammed default
  3828                           ;	Scanner Enable bit
  3829                           ;	SCANE = 0x1, unprogrammed default
  3830                           ;	Low Voltage Programming Enable bit
  3831                           ;	LVP = 0x1, unprogrammed default
  3832   300007                     	org	3145735
  3833   300007  FF                 	db	255
  3834                           
  3835                           ;Config register CONFIG5L @ 0x300008
  3836                           ;	unspecified, using default values
  3837                           ;	UserNVM Program Memory Code Protection bit
  3838                           ;	CP = 0x1, unprogrammed default
  3839                           ;	DataNVM Memory Code Protection bit
  3840                           ;	CPD = 0x1, unprogrammed default
  3841   300008                     	org	3145736
  3842   300008  FF                 	db	255
  3843                           
  3844                           ;Config register CONFIG5H @ 0x300009
  3845                           ;	unspecified, using default values
  3846   300009                     	org	3145737
  3847   300009  FF                 	db	255
  3848                           
  3849                           ;Config register CONFIG6L @ 0x30000A
  3850                           ;	unspecified, using default values
  3851                           ;	Table Read Protection Block 0
  3852                           ;	EBTR0 = 0x1, unprogrammed default
  3853                           ;	Table Read Protection Block 1
  3854                           ;	EBTR1 = 0x1, unprogrammed default
  3855                           ;	Table Read Protection Block 2
  3856                           ;	EBTR2 = 0x1, unprogrammed default
  3857                           ;	Table Read Protection Block 3
  3858                           ;	EBTR3 = 0x1, unprogrammed default
  3859                           ;	Table Read Protection Block 4
  3860                           ;	EBTR4 = 0x1, unprogrammed default
  3861                           ;	Table Read Protection Block 5
  3862                           ;	EBTR5 = 0x1, unprogrammed default
  3863                           ;	Table Read Protection Block 6
  3864                           ;	EBTR6 = 0x1, unprogrammed default
  3865                           ;	Table Read Protection Block 7
  3866                           ;	EBTR7 = 0x1, unprogrammed default
  3867   30000A                     	org	3145738
  3868   30000A  FF                 	db	255
  3869                           
  3870                           ;Config register CONFIG6H @ 0x30000B
  3871                           ;	unspecified, using default values
  3872                           ;	Boot Block Table Read Protection bit
  3873                           ;	EBTRB = 0x1, unprogrammed default
  3874   30000B                     	org	3145739
  3875   30000B  FF                 	db	255
  3876                           tosu	equ	0xFFF
  3877                           tosh	equ	0xFFE
  3878                           tosl	equ	0xFFD
  3879                           stkptr	equ	0xFFC
  3880                           pclatu	equ	0xFFB
  3881                           pclath	equ	0xFFA
  3882                           pcl	equ	0xFF9
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           indf0	equ	0xFEF
  3890                           postinc0	equ	0xFEE
  3891                           postdec0	equ	0xFED
  3892                           preinc0	equ	0xFEC
  3893                           plusw0	equ	0xFEB
  3894                           fsr0h	equ	0xFEA
  3895                           fsr0l	equ	0xFE9
  3896                           wreg	equ	0xFE8
  3897                           indf1	equ	0xFE7
  3898                           postinc1	equ	0xFE6
  3899                           postdec1	equ	0xFE5
  3900                           preinc1	equ	0xFE4
  3901                           plusw1	equ	0xFE3
  3902                           fsr1h	equ	0xFE2
  3903                           fsr1l	equ	0xFE1
  3904                           bsr	equ	0xFE0
  3905                           indf2	equ	0xFDF
  3906                           postinc2	equ	0xFDE
  3907                           postdec2	equ	0xFDD
  3908                           preinc2	equ	0xFDC
  3909                           plusw2	equ	0xFDB
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        41
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160      0     147
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2640$buffer	PTR unsigned char  size(2) Largest target is 0

    S2640$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendIntSerial4
    _sendIntSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5191
                                             66 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                     _sendIntSerial4
 ---------------------------------------------------------------------------------
 (1) _sendIntSerial4                                      19    17      2    3916
                                             47 COMRAM    19    17      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    3480
                                             27 COMRAM    20    15      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     288
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     528
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendIntSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      62        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 13:16:08 2024

                 _turn180Delay 00CE                 _color_read_Red 14B6                _color_read_Blue 15A6  
              _trail_timer_low 00B6                             l31 1642                             l53 177A  
                           l62 15F4                             l71 14B4                             l56 1860  
                           l65 1554                             l59 1504                             l68 15A4  
                 ___awdiv@sign 0006               _trail_timer_high 00DF               _color_read_Clear 1556  
             _color_read_Green 1506                            l144 13A6                            l401 1882  
                          l242 17D0                            l410 1408                            l251 18AC  
                          l260 1712                            l404 1896                            l245 17F6  
                          l413 1840                            l254 18B6                            l239 17A4  
                          l248 18C0                            l257 18A2                            l392 187E  
                          l628 181E                            l886 11AC                            l899 1316  
                          u500 1892                            u501 188E                            u360 17E0  
                          u361 17DC                            u370 17F6                            u371 17F2  
                          _ISR 0008                            u480 16FC                            u481 16F4  
                          u900 1116                            u901 1112                            u910 113C  
                          u911 1138                            u920 115A                            u921 1156  
                          u498 16FE                            u930 1176                            u931 1172  
                          u940 119C                            u941 1198                            u950 127A  
                          u951 1276                            u960 1294                            u961 1290  
                          u890 10FC                            u970 12AE                            u891 10F8  
                          u971 12AA                            u980 12CC                            u981 12C8  
                          u990 12E2                            u991 12DE                            _abs 1714  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00CA  
                         ?_ISR 0001                           l2001 1800                           l2011 181C  
                         l2003 1802                           ?_abs 0007                           l2005 1814  
                         l2007 1816                           l1400 1266                           l2009 181A  
                         l1411 18C2                           l2301 12AE                           l1333 168E  
                         l2311 12EA                           l2303 12B6                           l2313 12F0  
                         l2305 12BE                           l2251 1108                           l2243 10EA  
                         l2307 12CC                           l2315 12F6                           l2331 11F4  
                         l2323 11AE                           l1380 1456                           l1621 17E0  
                         l1701 16D8                           l2261 113C                           l2253 1116  
                         l2245 10EE                           l2317 1306                           l2309 12E2  
                         l2333 1226                           l2325 11BE                           l1381 145E  
                         l1374 0FAC                           l1703 16E0                           l2271 1176  
                         l2263 1144                           l2255 111E                           l2247 10FC  
                         l2319 130E                           l2327 11CE                           l1375 0FFE  
                         l2431 0E38                           l1705 16E8                           l2281 119C  
                         l2273 117E                           l2265 114C                           l2257 1122  
                         l2249 1104                           l1385 172E                           l2337 1714  
                         l2329 11D8                           l2441 0E7C                           l2433 0E40  
                         l1619 17D0                           l1707 170E                           l2283 11A4  
                         l2275 1180                           l2267 115A                           l2259 112A  
                         l2291 127A                           l2339 1722                           l2451 0F06  
                         l2443 0E9C                           l2435 0E4E                           l2427 0E0A  
                         l2531 140E                           l1388 1746                           l1709 1710  
                         l2541 14FC                           l2701 134E                           l2277 1186  
                         l2269 1160                           l2293 1282                           l2461 0F58  
                         l2453 0F22                           l2445 0EB4                           l2437 0E52  
                         l2429 0E12                           l2533 141C                           l2551 1506  
                         l2711 138C                           l2703 1352                           l2279 118C  
                         l2295 1286                           l2287 1268                           l2463 0F68  
                         l2471 0F9A                           l2455 0F26                           l2447 0EBE  
                         l2439 0E5C                           l2535 1436                           l2537 1844  
                         l2545 15A6                           l2553 154C                           l2713 138E  
                         l2705 1376                           l2297 1294                           l2289 126C  
                         l2481 0FEE                           l2465 0F76                           l2457 0F38  
                         l2449 0ED6                           l2473 0FB8                           l2529 140A  
                         l2801 101C                           l1771 178C                           l1683 18B8  
                         l1691 18AE                           l2547 15EC                           l2539 14B6  
                         l2715 1398                           l2707 1380                           l1755 1882  
                         l2563 13A8                           l2299 129C                           l2483 0FF6  
                         l2475 0FC0                           l2467 0F7E                           l2459 0F48  
                         l2571 1644                           l2811 103C                           l2803 1020  
                         l1773 178E                           l1685 18BC                           l1693 18B2  
                         l2557 1556                           l2717 139A                           l2709 1382  
                         l1757 1892                           l2565 13AC                           l2469 0F98  
                         l2581 1686                           l2573 1650                           l2821 1058  
                         l2813 1040                           l2805 1024                           l1927 15F6  
                         l1775 1790                           l1767 177C                           l1687 189A  
                         l1695 18A4                           l2559 159C                           l2719 13A4  
                         l2567 13D2                           l2479 0FCC                           l2575 1658  
                         l2743 1820                           l2831 1078                           l2823 1060  
                         l2815 1044                           l2807 102C                           l1777 1792  
                         l1769 1786                           l1689 189E                           l1697 18A8  
                         l2569 13D6                           l2577 1660                           l2745 1836  
                         l2841 1086                           l2833 107C                           l2825 106C  
                         l2817 1048                           l2809 1034                           l2691 1766  
                         l1699 16D4                           l2579 1678                           l2843 108E  
                         l2835 107E                           l2827 1070                           l2819 1050  
                         l2693 1770                           l2685 1748                           l2845 109A  
                         l2837 1080                           l2829 1074                           l2687 174C  
                         l2695 1460                           l1991 186E                           l2847 10A8  
                         l2839 1084                           l2689 1756                           l2697 1318  
                         l1993 1878                           l2849 10CA                           l2699 1328  
                         l1995 187A                           l1987 1862                           l2795 1000  
                         l1997 187C                           l1989 186C                           l2797 1018  
                         l1999 17F8                           l2799 1018                           STR_1 0E01  
                         STR_2 0E06                           u1000 1306                           u1001 1302  
                         u1010 11BE                           u1011 11BA                           u1020 11CE  
                         u1021 11CA                           u1030 11F4                           u1031 11F0  
                         u1040 1226                           u1041 1222                           u1050 1722  
                         u1051 171E                           u1300 0F68                           u1220 0E38  
                         u1301 0F64                           u1221 0E34                           u1310 0FAC  
                         u1230 0E7C                           u2007 175C                           u1311 0FA8  
                         u1231 0E78                           u1240 0E9C                           u1320 1456  
                         u1241 0E98                           u1321 1452                           u1330 13CE  
                         u1250 0ED2                           u1251 0ECC                           u1340 13F8  
                         u1260 0ED4                           u1350 1408                           u1270 0F38  
                         u1430 10A8                           u1351 1404                           u1271 0F34  
                         u1431 10A4                           u1280 0F48                           u1440 10BA  
                 _BAUD4CONbits 0EE9                           u1337 13C4                           u1281 0F44  
                         u1441 10B2                           u1290 0F58                           u1347 13EE  
                         u1291 0F54                           u1458 10BC                           _T2PR 0FBC  
                         u1987 100A                           u1997 10D4                           abs@a 0007  
                         _dbuf 0060                           _main 1000                           _prec 0098  
                         _nout 0094                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005F                           start 0038         __end_of_color_read_Red 1506  
                 ___param_bank 0000                          ??_ISR 0001                          ??_abs 0009  
               _sendIntSerial4 1820                          ?_main 0001             _timer_high_pointer 00DA  
              __end_of___awdiv 11AE                __end_of___awmod 1318                ___awdiv@divisor 0003  
                        i2l651 0030                          i2l652 0034                ___awdiv@counter 0005  
                 vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C                          _TMR0H 0FD4  
                        _TMR0L 0FD3        __end_of_sendCharSerial4 1898     __end_of_I2C_2_Master_Start 18C2  
   __end_of_I2C_2_Master_Write 18A4                    _turningGear 00DB                          _flags 009A  
                        _fputc 11AE                          _width 0096                          _putch 18C2  
            _turnRight135Delay 00D0                          tablat 0FF5                _turnLeft90Delay 00D6  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 0FD8                          wtemp8 0060                __end_of_sprintf 1690  
      __end_of_color_read_Blue 15F6          _I2C_2_Master_RepStart 18A4                ?_color_read_Red 0005  
              __initialization 1690                   __end_of_main 10EA         __end_of_sendIntSerial4 1842  
                       ??_main 0043                  __activetblptr 0003                         ?_fputc 0001  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0001                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RD6PPS 0E70  
                       _RE4PPS 0E76                         i2l2941 000A                         i2l2943 001A  
                       i2l2945 002C                         _RG6PPS 0E88                  vfpfcnvrt@done 000F  
     __end_of_color_click_init 177C                         _RX4PPS 0E15                         _TX4REG 0EE4  
             _turnLeft135Delay 00D2                  ??_Timer0_init 0001                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001B                      ??___awdiv 0005                      ??___awmod 0005  
              ?_sendIntSerial4 0030                         clear_0 16B6                         clear_1 16C2  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                         fputc@c 0001              _timer_low_pointer 00D9  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1460              ??_initDCmotorsPWM 0003                      ??_sprintf 0021  
            _buggy_lights_init 15F6                     __accesstop 0060        __end_of__initialization 16C8  
     __end_of_color_read_Clear 15A6       __end_of_color_read_Green 1556         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 17A6            ??_buggy_lights_init 0001  
                __end_of_fputc 1268                  __end_of_putch 18C4            __end_of_Timer0_init 1820  
                      ??_fputc 0004      __end_of_buggy_lights_init 1644                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100                     _getRGBCval 1460  
            _color_writetoaddr 1842                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003  
          ??_color_writetoaddr 0004                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1862             _I2C_2_Master_Start 18B8  
                   _initUSART4 1862             _I2C_2_Master_Write 1898                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 17F8  
      sendStringSerial4@string 0002                        ___awdiv 10EA                        ___awmod 1268  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0018  
                 __psmallconst 0E00                        __pcinit 1690                        __ramtop 0E00  
                      __ptext0 1000                        __ptext1 1820                        __ptext2 1644  
                      __ptext3 140A                        __ptext4 0E0A                        __ptext5 11AE  
                      __ptext6 18C2                        __ptext7 1714                        __ptext8 1268  
                      __ptext9 10EA                      _T2CONbits 0FBD               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 00A1                        _sprintf 1644  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 16C8  
                  ?_getRGBCval 000C                        fputc@fp 0003              ?_color_click_init 0001  
           ??_color_click_init 0005               ??_sendIntSerial4 0032              __end_of_vfpfcnvrt 1000  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0013  
                   ??_vfprintf 001B                     _returnFlag 009C                _initDCmotorsPWM 1318  
         sendIntSerial4@string 0032                      _PORTFbits 0F8E                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 0080                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
                   main@motorL 004D                     main@motorR 0056             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0012  
                  vfpfcnvrt@fp 000B            color_read_Clear@tmp 000A            start_initialization 1690  
                  __end_of_ISR 0038                    __end_of_abs 1748                  _TxBufWriteCnt 009F  
             _turnRight90Delay 00D4            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 13A8  
                  vfprintf@fmt 0019                    __pdataBANK0 00CA                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 17D0              _I2C_2_Master_Init 177C              _I2C_2_Master_Read 16D2  
            _I2C_2_Master_Stop 18AE                   _RxBufReadCnt 00A0             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _headbuttDelay 00CC       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C  
                    _rampDelay 00DE                   ??_getRGBCval 000D              _sendStringSerial4 13A8  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                       i2u157_40 001A  
                     i2u157_41 0016                       i2u158_40 002C                       i2u158_41 0028  
                     _PIR0bits 0E33                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                      _returning 009D                      _vfpfcnvrt 0E0A  
    __end_of_I2C_2_Master_Idle 17F8      __end_of_I2C_2_Master_Init 17A6      __end_of_I2C_2_Master_Read 1714  
    __end_of_I2C_2_Master_Stop 18B8    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 14B6  
            ??_color_read_Blue 0007                   _TxBufReadCnt 009E                     vfpfcnvrt@c 0017  
                    copy_data0 16A4      __end_of_sendStringSerial4 140A  __end_of_I2C_2_Master_RepStart 18AE  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 001A                       __Lrparam 0000                     vfprintf@fp 0018  
                   ?_vfpfcnvrt 000B                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001E                     sprintf@ret 0021                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6             __end_of_initUSART4 1880                       __ptext10 13A8  
                     __ptext11 1880                       __ptext20 16D2                       __ptext12 1862  
                     __ptext21 1748                       __ptext13 1318                       __ptext22 1842  
                     __ptext14 1460                       __ptext23 1898                       __ptext15 14B6  
                     __ptext24 18AE                       __ptext16 1506                       __ptext25 18B8  
                     __ptext17 1556                       __ptext26 17D0                       __ptext18 15A6  
                     __ptext27 177C                       __ptext19 18A4                       __ptext28 15F6  
                     __ptext29 17F8                    getRGBCval@p 000C            main@measured_colour 0045  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005F                       _vfprintf 140A  
                   _INTCONbits 0FF2                       intlevel2 0000                      sprintf@ap 0023  
                 _topGearRight 00DC              _manoeuvre_pointer 00D8                    ??_vfpfcnvrt 000E  
             _color_click_init 1748          sendIntSerial4@integer 0030                    _topGearLeft 00DD  
                     sprintf@f 0024                       sprintf@s 001C                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                _trail_manoeuvre 00A2                _manoeuvre_count 009B  
                   _TX4STAbits 0EE8                _sendCharSerial4 1880  
